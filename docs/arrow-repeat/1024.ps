%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 13 96 755 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 13 96 755 672
768 768 cairo_set_page_size
%%EndPageSetup
q 13 96 742 576 rectclip
1 0 0 -1 0 768 cm q
0 g
553.633 336 m 742.367 336 l 747.023 336 751.258 338.695 753.23 342.91 c
 755.203 347.125 754.562 352.102 751.586 355.68 c 657.219 468.961 l 657.215
 468.961 l 654.938 471.695 651.559 473.273 648 473.273 c 644.441 473.273
 641.062 471.695 638.785 468.961 c 544.418 355.68 l 544.414 355.68 l 541.438
 352.102 540.797 347.125 542.77 342.91 c 544.742 338.695 548.977 336 553.633
 336 c 25.633 432 m 214.367 432 l 219.023 432 223.258 429.305 225.23 425.09
 c 227.203 420.875 226.562 415.898 223.586 412.32 c 129.215 299.039 l 126.938
 296.305 123.559 294.727 120 294.727 c 116.441 294.727 113.062 296.305 110.785
 299.039 c 16.414 412.32 l 13.438 415.898 12.797 420.875 14.77 425.09 c 
16.742 429.305 20.977 432 25.633 432 c f
384 144 m 309.504 144 242.879 177.938 198.863 231.266 c 194.895 236.41 
189.004 239.727 182.543 240.453 c 176.082 241.18 169.605 239.254 164.59 
235.117 c 159.574 230.98 156.453 224.988 155.938 218.508 c 155.422 212.027
 157.559 205.613 161.855 200.734 c 208.969 143.699 276.215 106.969 349.668
 98.156 c 423.121 89.344 497.148 109.129 556.414 153.406 c 615.676 197.684
 655.637 263.062 668.016 336 c 619.199 336 l 608.133 281.789 578.68 233.07
 535.82 198.082 c 492.961 163.094 439.328 143.988 384 144 c 148.801 432 
m 160.98 491.484 195.242 544.145 244.691 579.379 c 294.141 614.613 355.102
 629.801 415.305 621.891 c 475.504 613.977 530.469 583.551 569.137 536.734
 c 573.105 531.59 578.996 528.273 585.457 527.547 c 591.918 526.82 598.395
 528.746 603.41 532.883 c 608.426 537.02 611.547 543.012 612.062 549.492
 c 612.578 555.973 610.441 562.387 606.145 567.266 c 559.031 624.301 491.785
 661.031 418.332 669.844 c 344.879 678.656 270.852 658.871 211.586 614.594
 c 152.324 570.316 112.363 504.938 99.984 432 c h
148.801 432 m f*
Q Q
showpage
%%Trailer
%%EOF
