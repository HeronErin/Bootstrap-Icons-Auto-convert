%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 36 rectclip
1 0 0 -1 0 48 cm q
0 g
34.602 21 m 46.398 21 l 46.688 21 46.953 21.168 47.078 21.434 c 47.199 
21.695 47.16 22.008 46.973 22.23 c 41.074 29.309 l 40.934 29.48 40.723 29.578
 40.5 29.578 c 40.277 29.578 40.066 29.48 39.926 29.309 c 34.027 22.23 l
 33.84 22.008 33.801 21.695 33.922 21.434 c 34.047 21.168 34.312 21 34.602
 21 c 1.602 27 m 13.398 27 l 13.688 27 13.953 26.832 14.078 26.566 c 14.199
 26.305 14.16 25.992 13.973 25.77 c 8.074 18.691 l 7.934 18.52 7.723 18.422
 7.5 18.422 c 7.277 18.422 7.066 18.52 6.926 18.691 c 1.027 25.77 l 0.84
 25.992 0.801 26.305 0.922 26.566 c 1.047 26.832 1.312 27 1.602 27 c f
24 9 m 19.344 9 15.18 11.121 12.43 14.453 c 12.18 14.777 11.812 14.984 
11.41 15.027 c 11.004 15.074 10.602 14.953 10.285 14.695 c 9.973 14.438 
9.777 14.062 9.746 13.656 c 9.715 13.25 9.848 12.852 10.117 12.547 c 13.059
 8.98 17.262 6.684 21.855 6.137 c 26.445 5.586 31.07 6.82 34.777 9.586 c
 38.48 12.355 40.977 16.441 41.75 21 c 38.699 21 l 38.008 17.613 36.168 
14.566 33.488 12.379 c 30.809 10.191 27.457 9 24 9 c 9.301 27 m 10.062 30.719
 12.203 34.008 15.293 36.211 c 18.383 38.414 22.195 39.363 25.957 38.867
 c 29.719 38.375 33.156 36.473 35.57 33.547 c 35.82 33.223 36.188 33.016
 36.59 32.973 c 36.996 32.926 37.398 33.047 37.715 33.305 c 38.027 33.562
 38.223 33.938 38.254 34.344 c 38.285 34.75 38.152 35.148 37.883 35.453 
c 34.941 39.02 30.738 41.316 26.145 41.863 c 21.555 42.414 16.93 41.18 13.223
 38.414 c 9.52 35.645 7.023 31.559 6.25 27 c h
9.301 27 m f*
Q Q
showpage
%%Trailer
%%EOF
