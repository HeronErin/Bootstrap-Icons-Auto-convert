%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 3 24 189 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 3 24 189 168
192 192 cairo_set_page_size
%%EndPageSetup
q 3 24 186 144 rectclip
1 0 0 -1 0 192 cm q
0 g
138.406 84 m 185.594 84 l 186.754 84 187.812 84.676 188.309 85.727 c 188.801
 86.781 188.641 88.027 187.895 88.922 c 164.301 117.242 l 164.305 117.238
 l 163.734 117.922 162.891 118.32 162 118.32 c 161.109 118.32 160.266 117.922
 159.695 117.238 c 136.102 88.918 l 136.105 88.922 l 135.359 88.027 135.199
 86.781 135.691 85.727 c 136.188 84.676 137.246 84 138.406 84 c 6.406 108
 m 53.594 108 l 54.754 108 55.812 107.324 56.309 106.273 c 56.801 105.219
 56.641 103.973 55.895 103.078 c 32.305 74.762 l 31.734 74.078 30.891 73.68
 30 73.68 c 29.109 73.68 28.266 74.078 27.695 74.762 c 4.105 103.078 l 3.359
 103.973 3.199 105.219 3.691 106.273 c 4.188 107.324 5.246 108 6.406 108
 c f
96 36 m 77.375 36 60.719 44.484 49.715 57.816 c 48.723 59.102 47.25 59.934
 45.637 60.113 c 44.02 60.293 42.402 59.812 41.148 58.781 c 39.895 57.746
 39.113 56.246 38.984 54.625 c 38.855 53.008 39.391 51.402 40.465 50.184
 c 52.242 35.926 69.055 26.742 87.418 24.539 c 105.781 22.336 124.285 27.281
 139.102 38.352 c 153.918 49.422 163.91 65.766 167.004 84 c 154.801 84 l
 152.035 70.449 144.668 58.266 133.953 49.52 c 123.238 40.773 109.832 35.996
 96 36 c 37.199 108 m 40.246 122.871 48.812 136.035 61.172 144.844 c 73.535
 153.652 88.777 157.449 103.824 155.473 c 118.875 153.496 132.617 145.887
 142.285 134.184 c 143.277 132.898 144.75 132.066 146.363 131.887 c 147.98
 131.707 149.598 132.188 150.852 133.219 c 152.105 134.254 152.887 135.754
 153.016 137.375 c 153.145 138.992 152.609 140.598 151.535 141.816 c 139.758
 156.074 122.945 165.258 104.582 167.461 c 86.219 169.664 67.715 164.719
 52.898 153.648 c 38.082 142.578 28.09 126.234 24.996 108 c h
37.199 108 m f*
Q Q
showpage
%%Trailer
%%EOF
