%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 21
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 18 rectclip
1 0 0 -1 0 24 cm q
0 g
17.301 10.5 m 23.199 10.5 l 23.344 10.5 23.477 10.586 23.539 10.715 c 23.602
 10.848 23.582 11.004 23.488 11.113 c 20.539 14.652 l 20.539 14.656 l 20.465
 14.742 20.359 14.789 20.25 14.789 c 20.141 14.789 20.035 14.742 19.961 
14.656 c 17.012 11.117 l 17.012 11.113 l 16.918 11.004 16.898 10.848 16.961
 10.715 c 17.023 10.586 17.156 10.5 17.301 10.5 c 0.801 13.5 m 6.699 13.5
 l 6.844 13.5 6.977 13.414 7.039 13.285 c 7.102 13.152 7.082 12.996 6.988
 12.887 c 4.039 9.344 l 3.965 9.258 3.859 9.211 3.75 9.211 c 3.641 9.211
 3.535 9.258 3.461 9.344 c 0.512 12.887 l 0.418 12.996 0.398 13.152 0.461
 13.285 c 0.523 13.414 0.656 13.5 0.801 13.5 c f
12 4.5 m 9.672 4.5 7.59 5.559 6.215 7.227 c 6.09 7.387 5.906 7.492 5.703
 7.516 c 5.504 7.535 5.301 7.477 5.145 7.348 c 4.988 7.219 4.891 7.031 4.875
 6.828 c 4.855 6.625 4.922 6.426 5.059 6.273 c 7.301 3.559 10.922 2.398 
14.324 3.309 c 17.727 4.219 20.285 7.027 20.875 10.5 c 19.352 10.5 l 18.637
 7.008 15.566 4.5 12 4.5 c 4.648 13.5 m 5.23 16.332 7.383 18.578 10.188 
19.277 c 12.988 19.973 15.945 19 17.785 16.773 c 17.91 16.613 18.094 16.508
 18.297 16.484 c 18.496 16.465 18.699 16.523 18.855 16.652 c 19.012 16.781
 19.109 16.969 19.125 17.172 c 19.145 17.375 19.078 17.574 18.941 17.727
 c 16.699 20.441 13.078 21.602 9.676 20.691 c 6.273 19.781 3.715 16.973 
3.125 13.5 c h
4.648 13.5 m f*
Q Q
showpage
%%Trailer
%%EOF
