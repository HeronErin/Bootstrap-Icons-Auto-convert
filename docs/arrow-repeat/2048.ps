%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 27 192 1509 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 27 192 1509 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 27 192 1482 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
1107.266 672 m 1484.738 672 l 1484.734 672 l 1490.848 672.004 1496.73 674.336
 1501.18 678.527 c 1505.629 682.719 1508.312 688.449 1508.684 694.551 c 
1509.051 700.652 1507.078 706.664 1503.168 711.359 c 1314.434 937.918 l 
1314.434 937.922 l 1309.871 943.387 1303.121 946.551 1296 946.551 c 1288.879
 946.551 1282.129 943.387 1277.566 937.922 c 1088.832 711.363 l 1088.832
 711.359 l 1084.922 706.664 1082.949 700.652 1083.316 694.551 c 1083.688
 688.449 1086.371 682.719 1090.82 678.527 c 1095.27 674.336 1101.152 672.004
 1107.266 672 c 51.266 864 m 428.738 864 l 428.734 864 l 434.848 863.996
 440.73 861.664 445.18 857.473 c 449.629 853.281 452.312 847.551 452.684
 841.449 c 453.051 835.348 451.078 829.336 447.168 824.641 c 258.434 598.078
 l 253.871 592.613 247.121 589.449 240 589.449 c 232.879 589.449 226.129
 592.613 221.566 598.078 c 32.832 824.641 l 28.922 829.336 26.949 835.348
 27.316 841.449 c 27.688 847.551 30.371 853.281 34.82 857.473 c 39.27 861.664
 45.152 863.996 51.266 864 c f
768 288 m 619.008 288 485.762 355.871 397.727 462.527 c 389.785 472.82 
378.008 479.453 365.086 480.906 c 352.168 482.359 339.211 478.508 329.18
 470.234 c 319.148 461.961 312.906 449.973 311.875 437.012 c 310.844 424.051
 315.117 411.227 323.711 401.473 c 417.934 287.395 552.43 213.938 699.336
 196.312 c 846.242 178.691 994.293 218.258 1112.824 306.812 c 1231.355 395.367
 1311.277 526.129 1336.031 672 c 1238.398 672 l 1216.27 563.582 1157.359
 466.137 1071.641 396.164 c 985.918 326.188 878.656 287.977 768 288 c 297.602
 864 m 321.957 982.969 390.484 1088.289 489.383 1158.758 c 588.281 1229.223
 710.207 1259.605 830.605 1243.781 c 951.008 1227.957 1060.941 1167.102 
1138.273 1073.473 c 1146.215 1063.18 1157.992 1056.547 1170.914 1055.094
 c 1183.832 1053.641 1196.789 1057.492 1206.82 1065.766 c 1216.852 1074.039
 1223.094 1086.027 1224.125 1098.988 c 1225.156 1111.949 1220.883 1124.773
 1212.289 1134.527 c 1118.066 1248.605 983.57 1322.062 836.664 1339.688 
c 689.758 1357.309 541.707 1317.742 423.176 1229.188 c 304.645 1140.633 
224.723 1009.871 199.969 864 c h
297.602 864 m f*
Q Q
showpage
%%Trailer
%%EOF
