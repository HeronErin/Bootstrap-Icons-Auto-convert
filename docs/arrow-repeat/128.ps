%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 1 12 95 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 1 12 95 84
96 96 cairo_set_page_size
%%EndPageSetup
q 1 12 94 72 rectclip
1 0 0 -1 0 96 cm q
0 g
69.203 42 m 92.797 42 l 93.379 42 93.906 42.336 94.152 42.863 c 94.402 
43.391 94.32 44.012 93.949 44.461 c 82.152 58.621 l 81.867 58.961 81.445
 59.16 81 59.16 c 80.555 59.16 80.133 58.961 79.848 58.621 c 68.051 44.461
 l 67.68 44.012 67.598 43.391 67.848 42.863 c 68.094 42.336 68.621 42 69.203
 42 c 3.203 54 m 26.797 54 l 27.379 54 27.906 53.664 28.152 53.137 c 28.402
 52.609 28.32 51.988 27.949 51.539 c 16.152 37.379 l 15.867 37.039 15.445
 36.84 15 36.84 c 14.555 36.84 14.133 37.039 13.848 37.379 c 2.051 51.539
 l 1.68 51.988 1.598 52.609 1.848 53.137 c 2.094 53.664 2.621 54 3.203 54
 c f
48 18 m 38.688 18 30.359 22.242 24.859 28.906 c 24.363 29.551 23.625 29.965
 22.816 30.059 c 22.012 30.148 21.199 29.906 20.574 29.391 c 19.945 28.871
 19.555 28.125 19.492 27.312 c 19.43 26.504 19.695 25.703 20.23 25.094 c
 26.121 17.961 34.527 13.371 43.707 12.27 c 52.891 11.168 62.145 13.641 
69.551 19.176 c 76.961 24.711 81.953 32.883 83.504 42 c 77.398 42 l 76.016
 35.223 72.336 29.133 66.977 24.762 c 61.621 20.387 54.914 18 48 18 c 18.602
 54 m 20.121 61.434 24.406 68.02 30.586 72.422 c 36.77 76.828 44.387 78.727
 51.914 77.734 c 59.438 76.746 66.309 72.945 71.141 67.094 c 71.637 66.449
 72.375 66.035 73.184 65.941 c 73.988 65.852 74.801 66.094 75.426 66.609
 c 76.055 67.129 76.445 67.875 76.508 68.688 c 76.57 69.496 76.305 70.297
 75.77 70.906 c 69.879 78.039 61.473 82.629 52.293 83.73 c 43.109 84.832
 33.855 82.359 26.449 76.824 c 19.039 71.289 14.047 63.117 12.496 54 c h
18.602 54 m f*
Q Q
showpage
%%Trailer
%%EOF
