%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 3.105 0 3.188 0.082 3.188 0.188 c 3.188 0.379 l 4.734 0.465 6 1.582
 6 3 c 6 3 6 3.188 5.812 3.188 c 5.758 3.188 5.68 3.133 5.68 3.133 c 5.668
 3.121 l 5.605 3.066 5.535 3.02 5.461 2.977 c 5.285 2.871 5.082 2.816 4.875
 2.812 c 4.637 2.812 4.434 2.891 4.289 2.977 c 4.215 3.02 4.145 3.066 4.082
 3.121 c 4.074 3.129 l 4.074 3.129 3.996 3.184 3.941 3.184 c 3.887 3.184
 3.809 3.129 3.809 3.129 c 3.801 3.121 l 3.793 3.121 l 3.73 3.066 3.66 3.02
 3.586 2.977 c 3.465 2.902 3.328 2.855 3.188 2.828 c 3.188 5.062 l 3 5.062
 l 3.188 5.062 l 3.188 5.109 l 3.176 5.25 3.137 5.391 3.074 5.523 c 3.008
 5.656 2.91 5.77 2.789 5.852 c 2.648 5.945 2.469 6 2.25 6 c 2.031 6 1.852
 5.945 1.711 5.852 c 1.59 5.77 1.492 5.656 1.426 5.523 c 1.359 5.383 1.32
 5.23 1.312 5.078 c 1.312 5.066 l 1.312 5.066 1.312 5.066 1.5 5.066 c 1.312
 5.066 l 1.312 4.875 l 1.312 4.625 1.688 4.625 1.688 4.875 c 1.688 5.082
 l 1.695 5.176 1.719 5.27 1.762 5.352 c 1.797 5.422 1.848 5.488 1.922 5.539
 c 1.992 5.586 2.098 5.625 2.25 5.625 c 2.406 5.625 2.508 5.586 2.578 5.539
 c 2.652 5.492 2.699 5.426 2.738 5.352 c 2.781 5.262 2.809 5.164 2.812 5.066
 c 2.812 2.828 l 2.672 2.855 2.535 2.902 2.414 2.977 c 2.336 3.02 2.262 
3.07 2.195 3.133 c 2.195 3.133 2.117 3.188 2.062 3.188 c 2.008 3.188 1.93
 3.133 1.93 3.133 c 1.863 3.07 1.789 3.02 1.711 2.977 c 1.535 2.871 1.332
 2.816 1.125 2.812 c 0.887 2.812 0.684 2.891 0.539 2.977 c 0.461 3.02 0.387
 3.07 0.32 3.133 c 0.32 3.133 0.242 3.188 0.188 3.188 c 0 3.188 0 3 0 3 
c 0 1.582 1.266 0.465 2.812 0.379 c 2.812 0.188 l 2.812 0.082 2.895 0 3 
0 c f*
Q Q
showpage
%%Trailer
%%EOF
