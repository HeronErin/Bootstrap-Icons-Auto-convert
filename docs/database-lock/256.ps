%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 180 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 180 180
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 156 180 rectclip
1 0 0 -1 0 192 cm q
0 g
156 68.375 m 152.613 70.848 148.977 72.961 145.152 74.676 c 132.266 80.531
 114.875 84 96 84 c 77.125 84 59.734 80.531 46.848 74.676 c 43.023 72.961
 39.387 70.848 36 68.375 c 36 84 l 36 88.488 40.273 94.5 51.816 99.758 c
 62.809 104.746 78.434 108 96 108 c 103.992 108 111.574 107.328 118.512 
106.129 c 113.352 109.848 108.863 114.445 105.289 119.715 c 105.289 119.711
 l 102.195 119.906 99.098 120.004 96 120 c 77.125 120 59.734 116.531 46.848
 110.676 c 43.023 108.961 39.387 106.848 36 104.375 c 36 120 l 36 124.488
 40.273 130.5 51.816 135.758 c 62.809 140.746 78.434 144 96 144 c 96.324
 144 l 95.977 147.188 95.91 150.398 96.121 153.602 c 96.039 154.398 96 155.199
 96 156 c 77.125 156 59.734 152.531 46.848 146.676 c 43.023 144.961 39.387
 142.848 36 140.375 c 36 156 l 36 160.488 40.273 166.5 51.816 171.758 c 
62.809 176.746 78.434 180 96 180 c 96 184.355 97.164 188.449 99.191 191.965
 c 98.137 191.996 97.07 192.008 96 192 c 77.125 192 59.734 188.531 46.848
 182.676 c 34.5 177.059 24 168.086 24 156 c 24 48 l 24 35.914 34.5 26.941
 46.848 21.324 c 59.734 15.469 77.125 12 96 12 c 114.875 12 132.266 15.469
 145.152 21.324 c 157.5 26.941 168 35.914 168 48 c 168 99.07 l 161.254 96.691
 154.105 95.676 146.965 96.086 c 153.445 91.848 156 87.469 156 84 c h
51.816 32.254 m 40.273 37.488 36 43.5 36 48 c 36 52.488 40.273 58.5 51.816
 63.758 c 62.809 68.746 78.434 72 96 72 c 113.566 72 129.191 68.762 140.184
 63.758 c 151.727 58.5 156 52.477 156 48 c 156 43.512 151.727 37.5 140.184
 32.242 c 129.191 27.254 113.566 24 96 24 c 78.434 24 62.809 27.238 51.816
 32.242 c h
51.816 32.254 m f
108 156 m 108 149.371 113.371 144 120 144 c 120 132 l 120 123.426 124.574
 115.504 132 111.215 c 139.426 106.93 148.574 106.93 156 111.215 c 163.426
 115.504 168 123.426 168 132 c 168 144 l 171.184 144 174.234 145.266 176.484
 147.516 c 178.734 149.766 180 152.816 180 156 c 180 180 l 180 183.184 178.734
 186.234 176.484 188.484 c 174.234 190.734 171.184 192 168 192 c 120 192
 l 113.371 192 108 186.629 108 180 c h
144 120 m 137.371 120 132 125.371 132 132 c 132 144 l 156 144 l 156 132
 l 156 128.816 154.734 125.766 152.484 123.516 c 150.234 121.266 147.184
 120 144 120 c f
Q Q
showpage
%%Trailer
%%EOF
