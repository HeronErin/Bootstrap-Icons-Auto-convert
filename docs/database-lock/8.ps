%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.875 2.137 m 4.77 2.215 4.656 2.281 4.535 2.332 c 4.133 2.516 3.59 2.625
 3 2.625 c 2.41 2.625 1.867 2.516 1.465 2.332 c 1.344 2.281 1.23 2.215 1.125
 2.137 c 1.125 2.625 l 1.125 2.766 1.258 2.953 1.621 3.117 c 1.961 3.273
 2.449 3.375 3 3.375 c 3.25 3.375 3.488 3.355 3.703 3.316 c 3.543 3.434 
3.402 3.578 3.289 3.742 c 3.195 3.746 3.098 3.75 3 3.75 c 2.41 3.75 1.867
 3.641 1.465 3.457 c 1.344 3.406 1.23 3.34 1.125 3.262 c 1.125 3.75 l 1.125
 3.891 1.258 4.078 1.621 4.242 c 1.961 4.398 2.449 4.5 3 4.5 c 3.012 4.5
 l 3 4.602 2.996 4.699 3.004 4.801 c 3 4.824 3 4.852 3 4.875 c 2.41 4.875
 1.867 4.766 1.465 4.582 c 1.344 4.531 1.23 4.465 1.125 4.387 c 1.125 4.875
 l 1.125 5.016 1.258 5.203 1.621 5.367 c 1.961 5.523 2.449 5.625 3 5.625
 c 3 5.762 3.035 5.891 3.102 6 c 3.066 6 3.035 6 3 6 c 2.41 6 1.867 5.891
 1.465 5.707 c 1.078 5.531 0.75 5.254 0.75 4.875 c 0.75 1.5 l 0.75 1.121
 1.078 0.844 1.465 0.668 c 1.867 0.484 2.41 0.375 3 0.375 c 3.59 0.375 4.133
 0.484 4.535 0.668 c 4.922 0.844 5.25 1.121 5.25 1.5 c 5.25 3.098 l 5.039
 3.023 4.816 2.988 4.594 3.004 c 4.797 2.871 4.875 2.734 4.875 2.625 c h
1.621 1.008 m 1.258 1.172 1.125 1.359 1.125 1.5 c 1.125 1.641 1.258 1.828
 1.621 1.992 c 1.961 2.148 2.449 2.25 3 2.25 c 3.551 2.25 4.039 2.148 4.379
 1.992 c 4.742 1.828 4.875 1.641 4.875 1.5 c 4.875 1.359 4.742 1.172 4.379
 1.008 c 4.039 0.852 3.551 0.75 3 0.75 c 2.449 0.75 1.961 0.852 1.621 1.008
 c h
1.621 1.008 m f
3.375 4.875 m 3.375 4.668 3.543 4.5 3.75 4.5 c 3.75 4.125 l 3.75 3.711 
4.086 3.375 4.5 3.375 c 4.914 3.375 5.25 3.711 5.25 4.125 c 5.25 4.5 l 5.348
 4.5 5.445 4.539 5.516 4.609 c 5.586 4.68 5.625 4.777 5.625 4.875 c 5.625
 5.625 l 5.625 5.723 5.586 5.82 5.516 5.891 c 5.445 5.961 5.348 6 5.25 6
 c 3.75 6 l 3.543 6 3.375 5.832 3.375 5.625 c h
4.5 3.75 m 4.293 3.75 4.125 3.918 4.125 4.125 c 4.125 4.5 l 4.875 4.5 l
 4.875 4.125 l 4.875 4.027 4.836 3.93 4.766 3.859 c 4.695 3.789 4.598 3.75
 4.5 3.75 c f
Q Q
showpage
%%Trailer
%%EOF
