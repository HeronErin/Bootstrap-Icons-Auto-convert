%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
678.527 69.793 m 701.855 -23.328 834.047 -23.328 857.473 69.793 c 864.289
 97.25 l 864.289 97.246 l 869.629 118.621 882.453 137.375 900.43 150.109
 c 918.41 162.84 940.355 168.715 962.289 166.66 c 984.223 164.605 1004.699
 154.762 1020 138.91 c 1039.68 118.652 l 1106.398 49.629 1220.926 115.773
 1194.527 208.027 c 1186.848 235.293 l 1186.848 235.297 l 1180.793 256.469
 1182.516 279.109 1191.711 299.121 c 1200.906 319.133 1216.965 335.188 1236.973
 344.383 c 1256.984 353.578 1279.629 355.305 1300.801 349.246 c 1327.969
 341.469 l 1420.129 315.07 1486.367 429.598 1417.344 496.316 c 1397.086 
515.996 l 1397.09 516 l 1381.238 531.301 1371.395 551.777 1369.34 573.711
 c 1367.285 595.645 1373.16 617.59 1385.891 635.57 c 1398.625 653.547 1417.379
 666.371 1438.754 671.711 c 1466.211 678.527 l 1559.332 701.855 1559.332
 834.047 1466.211 857.473 c 1438.754 864.289 l 1417.379 869.629 1398.625
 882.453 1385.891 900.43 c 1373.16 918.41 1367.285 940.355 1369.34 962.289
 c 1371.395 984.223 1381.238 1004.699 1397.09 1020 c 1417.348 1039.68 l 
1486.371 1106.398 1420.227 1220.926 1327.973 1194.527 c 1300.707 1186.848
 l 1300.703 1186.848 l 1279.531 1180.793 1256.891 1182.516 1236.879 1191.711
 c 1216.867 1200.906 1200.812 1216.965 1191.617 1236.973 c 1182.422 1256.984
 1180.695 1279.629 1186.754 1300.801 c 1194.531 1327.969 l 1220.93 1420.129
 1106.402 1486.367 1039.684 1417.344 c 1020.004 1397.086 l 1020 1397.09 
l 1004.699 1381.238 984.223 1371.395 962.289 1369.34 c 940.355 1367.285 
918.41 1373.16 900.43 1385.891 c 882.453 1398.625 869.629 1417.379 864.289
 1438.754 c 857.473 1466.211 l 834.145 1559.332 701.953 1559.332 678.527
 1466.211 c 671.711 1438.754 l 666.371 1417.379 653.547 1398.625 635.57 
1385.891 c 617.59 1373.16 595.645 1367.285 573.711 1369.34 c 551.777 1371.395
 531.301 1381.238 516 1397.09 c 496.32 1417.348 l 429.602 1486.371 315.074
 1420.227 341.473 1327.973 c 349.152 1300.707 l 349.152 1300.703 l 355.195
 1279.543 353.473 1256.922 344.285 1236.922 c 335.102 1216.926 319.062 1200.875
 299.074 1191.672 c 279.082 1182.469 256.461 1180.727 235.297 1186.754 c
 208.031 1194.531 l 115.871 1220.93 49.633 1106.402 118.656 1039.684 c 138.914
 1020.004 l 138.91 1020 l 154.762 1004.699 164.605 984.223 166.66 962.289
 c 168.715 940.355 162.84 918.41 150.109 900.43 c 137.375 882.453 118.621
 869.629 97.246 864.289 c 69.789 857.473 l -23.332 834.145 -23.332 701.953
 69.789 678.527 c 97.246 671.711 l 118.621 666.371 137.375 653.547 150.109
 635.57 c 162.84 617.59 168.715 595.645 166.66 573.711 c 164.605 551.777
 154.762 531.301 138.91 516 c 118.652 496.32 l 49.629 429.602 115.773 315.074
 208.027 341.473 c 235.293 349.152 l 235.297 349.152 l 256.457 355.195 279.078
 353.473 299.078 344.285 c 319.074 335.102 335.125 319.062 344.328 299.074
 c 353.531 279.082 355.273 256.461 349.246 235.297 c 341.469 208.031 l 315.07
 115.871 429.598 49.633 496.316 118.656 c 515.996 138.914 l 516 138.91 l
 531.301 154.762 551.777 164.605 573.711 166.66 c 595.645 168.715 617.59
 162.84 635.57 150.109 c 653.547 137.375 666.371 118.621 671.711 97.246 
c h
1245.406 816 m 792 816 l 519.938 1178.785 l 612.719 1234.824 721.746 1257.797
 829.254 1243.957 c 936.766 1230.121 1036.418 1180.285 1111.988 1102.574
 c 1187.555 1024.863 1234.582 923.852 1245.406 816 c 1245.406 720 m 1234.582
 612.148 1187.555 511.137 1111.988 433.426 c 1036.418 355.715 936.766 305.879
 829.254 292.043 c 721.746 278.203 612.719 301.176 519.938 357.215 c 792
 720.094 l h
484.609 380.832 m 476.258 387.07 l h
443.234 414.91 m 443.23 414.91 l 394.289 459.773 355.227 514.34 328.531
 575.129 c 301.84 635.922 288.102 701.605 288.191 768 c 288.191 907.68 347.902
 1033.441 443.23 1121.09 c 708 768 l h
476.258 1148.926 m 484.609 1155.164 l h
476.258 1148.926 m f
Q Q
showpage
%%Trailer
%%EOF
