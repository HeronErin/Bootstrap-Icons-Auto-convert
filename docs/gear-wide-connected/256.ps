%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
84.816 8.723 m 87.73 -2.918 104.258 -2.918 107.184 8.723 c 108.035 12.156
 l 109.051 16.219 112.191 19.41 116.234 20.492 c 120.277 21.574 124.594 
20.375 127.5 17.363 c 129.961 14.832 l 138.301 6.203 152.617 14.473 149.316
 26.004 c 148.355 29.41 l 147.203 33.438 148.328 37.766 151.285 40.727 c
 154.246 43.684 158.578 44.809 162.602 43.656 c 165.996 42.684 l 177.516
 39.383 185.797 53.699 177.168 62.039 c 174.637 64.5 l 171.625 67.406 170.426
 71.723 171.508 75.766 c 172.59 79.809 175.781 82.949 179.844 83.965 c 183.277
 84.816 l 194.918 87.73 194.918 104.258 183.277 107.184 c 179.844 108.035
 l 175.781 109.051 172.59 112.191 171.508 116.234 c 170.426 120.277 171.625
 124.594 174.637 127.5 c 177.168 129.961 l 185.797 138.301 177.527 152.617
 165.996 149.316 c 162.59 148.355 l 158.562 147.203 154.234 148.328 151.273
 151.285 c 148.316 154.246 147.191 158.578 148.344 162.602 c 149.316 165.996
 l 152.617 177.516 138.301 185.797 129.961 177.168 c 127.5 174.637 l 124.594
 171.625 120.277 170.426 116.234 171.508 c 112.191 172.59 109.051 175.781
 108.035 179.844 c 107.184 183.277 l 104.27 194.918 87.742 194.918 84.816
 183.277 c 83.965 179.844 l 82.949 175.781 79.809 172.59 75.766 171.508 
c 71.723 170.426 67.406 171.625 64.5 174.637 c 62.039 177.168 l 53.699 185.797
 39.383 177.527 42.684 165.996 c 43.645 162.59 l 44.793 158.566 43.672 154.238
 40.715 151.281 c 37.762 148.324 33.434 147.199 29.41 148.344 c 26.004 149.316
 l 14.484 152.617 6.203 138.301 14.832 129.961 c 17.363 127.5 l 20.375 124.594
 21.574 120.277 20.492 116.234 c 19.41 112.191 16.219 109.051 12.156 108.035
 c 8.723 107.184 l -2.918 104.27 -2.918 87.742 8.723 84.816 c 12.156 83.965
 l 16.219 82.949 19.41 79.809 20.492 75.766 c 21.574 71.723 20.375 67.406
 17.363 64.5 c 14.832 62.039 l 6.203 53.699 14.473 39.383 26.004 42.684 
c 29.41 43.645 l 33.434 44.793 37.762 43.672 40.719 40.715 c 43.676 37.762
 44.801 33.434 43.656 29.41 c 42.684 26.004 l 39.383 14.484 53.699 6.203
 62.039 14.832 c 64.5 17.363 l 67.406 20.375 71.723 21.574 75.766 20.492
 c 79.809 19.41 82.949 16.219 83.965 12.156 c h
155.676 102 m 99 102 l 64.992 147.348 l 82.598 157.984 104.426 158.852 
122.824 149.652 c 141.223 140.453 153.621 122.465 155.676 102 c 155.676 
90 m 153.621 69.535 141.223 51.547 122.824 42.348 c 104.426 33.148 82.598
 34.016 64.992 44.652 c 99 90.012 l h
60.574 47.605 m 59.531 48.387 l h
55.402 51.867 m 55.402 51.863 l 43.035 63.203 36 79.219 36.023 96 c 36.023
 113.461 43.488 129.18 55.402 140.137 c 88.5 96 l h
59.531 143.621 m 60.574 144.402 l h
59.531 143.621 m f
Q Q
showpage
%%Trailer
%%EOF
