%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
339.266 34.895 m 350.93 -11.664 417.027 -11.664 428.738 34.895 c 432.145
 48.621 l 432.145 48.625 l 434.816 59.312 441.227 68.688 450.215 75.055 
c 459.203 81.422 470.176 84.355 481.145 83.328 c 492.113 82.301 502.348 
77.383 510 69.457 c 519.84 59.328 l 553.199 24.816 610.465 57.887 597.266
 104.016 c 593.426 117.648 l 590.395 128.234 591.258 139.555 595.855 149.562
 c 600.453 159.566 608.48 167.594 618.488 172.191 c 628.492 176.789 639.812
 177.652 650.398 174.625 c 663.984 170.738 l 710.062 157.539 743.184 214.801
 708.672 248.164 c 698.543 258.004 l 698.543 258 l 690.617 265.652 685.699
 275.887 684.672 286.855 c 683.645 297.824 686.578 308.797 692.945 317.785
 c 699.312 326.773 708.688 333.184 719.375 335.855 c 733.102 339.262 l 779.66
 350.926 779.66 417.023 733.102 428.734 c 719.375 432.141 l 719.375 432.145
 l 708.688 434.816 699.312 441.227 692.945 450.215 c 686.578 459.203 683.645
 470.176 684.672 481.145 c 685.699 492.113 690.617 502.348 698.543 510 c
 708.672 519.84 l 743.184 553.199 710.113 610.465 663.984 597.266 c 650.352
 593.426 l 639.766 590.395 628.445 591.258 618.438 595.855 c 608.434 600.453
 600.406 608.48 595.809 618.488 c 591.211 628.492 590.348 639.812 593.375
 650.398 c 597.262 663.984 l 610.461 710.062 553.199 743.184 519.836 708.672
 c 509.996 698.543 l 510 698.543 l 502.348 690.617 492.113 685.699 481.145
 684.672 c 470.176 683.645 459.203 686.578 450.215 692.945 c 441.227 699.312
 434.816 708.688 432.145 719.375 c 428.738 733.102 l 417.074 779.66 350.977
 779.66 339.266 733.102 c 335.859 719.375 l 335.855 719.375 l 333.184 708.688
 326.773 699.312 317.785 692.945 c 308.797 686.578 297.824 683.645 286.855
 684.672 c 275.887 685.699 265.652 690.617 258 698.543 c 248.16 708.672 
l 214.801 743.184 157.535 710.113 170.734 663.984 c 174.574 650.352 l 177.598
 639.773 176.734 628.461 172.145 618.461 c 167.551 608.461 159.531 600.438
 149.535 595.836 c 139.543 591.234 128.23 590.363 117.648 593.375 c 104.016
 597.262 l 57.938 610.461 24.816 553.199 59.328 519.836 c 69.457 509.996
 l 69.457 510 l 77.383 502.348 82.301 492.113 83.328 481.145 c 84.355 470.176
 81.422 459.203 75.055 450.215 c 68.688 441.227 59.312 434.816 48.625 432.145
 c 34.898 428.738 l -11.66 417.074 -11.66 350.977 34.898 339.266 c 48.625
 335.859 l 48.625 335.855 l 59.312 333.184 68.688 326.773 75.055 317.785
 c 81.422 308.797 84.355 297.824 83.328 286.855 c 82.301 275.887 77.383 
265.652 69.457 258 c 59.328 248.16 l 24.816 214.801 57.887 157.535 104.016
 170.734 c 117.648 174.574 l 128.227 177.598 139.539 176.734 149.539 172.145
 c 159.539 167.551 167.562 159.531 172.164 149.535 c 176.766 139.543 177.637
 128.23 174.625 117.648 c 170.738 104.016 l 157.539 57.938 214.801 24.816
 248.164 59.328 c 258.004 69.457 l 258 69.457 l 265.652 77.383 275.887 82.301
 286.855 83.328 c 297.824 84.355 308.797 81.422 317.785 75.055 c 326.773
 68.688 333.184 59.312 335.855 48.625 c h
622.703 408 m 396 408 l 259.969 589.391 l 306.359 617.414 360.875 628.898
 414.629 621.98 c 468.383 615.059 518.211 590.145 555.992 551.289 c 593.777
 512.43 617.289 461.926 622.703 408 c 622.703 360 m 617.289 306.074 593.777
 255.57 555.992 216.711 c 518.211 177.855 468.383 152.941 414.629 146.02
 c 360.875 139.102 306.359 150.586 259.969 178.609 c 396 360.051 l h
242.305 190.414 m 238.129 193.535 l h
221.617 207.453 m 221.617 207.457 l 197.145 229.887 177.613 257.168 164.266
 287.566 c 150.918 317.961 144.051 350.805 144.098 384 c 144.098 453.84 
173.953 516.719 221.617 560.543 c 354 384 l h
238.129 574.461 m 242.305 577.582 l h
238.129 574.461 m f
Q Q
showpage
%%Trailer
%%EOF
