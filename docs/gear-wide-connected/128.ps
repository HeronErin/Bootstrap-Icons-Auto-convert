%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
42.406 4.363 m 43.863 -1.457 52.125 -1.457 53.59 4.363 c 54.016 6.078 l
 54.02 6.078 l 54.527 8.109 56.094 9.703 58.117 10.246 c 60.141 10.785 62.297
 10.188 63.75 8.684 c 64.98 7.418 l 69.152 3.105 76.309 7.238 74.66 13.004
 c 74.18 14.707 l 73.602 16.719 74.164 18.883 75.645 20.363 c 77.121 21.844
 79.289 22.402 81.301 21.828 c 83 21.344 l 88.762 19.695 92.898 26.852 88.586
 31.023 c 87.32 32.254 l 87.316 32.25 l 85.812 33.703 85.215 35.859 85.754
 37.883 c 86.297 39.906 87.891 41.473 89.922 41.98 c 91.637 42.406 l 97.457
 43.863 97.457 52.125 91.637 53.59 c 89.922 54.016 l 89.922 54.02 l 87.891
 54.527 86.297 56.094 85.754 58.117 c 85.215 60.141 85.812 62.297 87.316
 63.75 c 88.582 64.98 l 92.895 69.152 88.762 76.309 82.996 74.66 c 81.293
 74.18 l 79.281 73.602 77.117 74.164 75.637 75.645 c 74.156 77.121 73.598
 79.289 74.172 81.301 c 74.656 83 l 76.305 88.762 69.148 92.898 64.977 88.586
 c 63.746 87.32 l 63.75 87.316 l 62.297 85.812 60.141 85.215 58.117 85.754
 c 56.094 86.297 54.527 87.891 54.02 89.922 c 53.594 91.637 l 52.137 97.457
 43.875 97.457 42.41 91.637 c 41.984 89.922 l 41.98 89.922 l 41.473 87.891
 39.906 86.297 37.883 85.754 c 35.859 85.215 33.703 85.812 32.25 87.316 
c 31.02 88.582 l 26.848 92.895 19.691 88.762 21.34 82.996 c 21.82 81.293
 l 22.395 79.285 21.836 77.121 20.359 75.641 c 18.879 74.16 16.719 73.598
 14.707 74.172 c 13.004 74.656 l 7.242 76.305 3.105 69.148 7.418 64.977 
c 8.684 63.746 l 8.684 63.75 l 10.188 62.297 10.785 60.141 10.246 58.117
 c 9.703 56.094 8.109 54.527 6.078 54.02 c 4.363 53.594 l -1.457 52.137 
-1.457 43.875 4.363 42.41 c 6.078 41.984 l 6.078 41.98 l 8.109 41.473 9.703
 39.906 10.246 37.883 c 10.785 35.859 10.188 33.703 8.684 32.25 c 7.418 
31.02 l 3.105 26.848 7.238 19.691 13.004 21.34 c 14.707 21.82 l 16.715 22.395
 18.879 21.836 20.359 20.359 c 21.84 18.879 22.402 16.719 21.828 14.707 
c 21.344 13.004 l 19.695 7.242 26.852 3.105 31.023 7.418 c 32.254 8.684 
l 32.25 8.684 l 33.703 10.188 35.859 10.785 37.883 10.246 c 39.906 9.703
 41.473 8.109 41.98 6.078 c h
77.84 51 m 49.5 51 l 32.496 73.676 l 41.301 78.992 52.215 79.426 61.414
 74.828 c 70.609 70.227 76.812 61.234 77.84 51 c 77.84 45 m 76.812 34.766
 70.609 25.773 61.414 21.172 c 52.215 16.574 41.301 17.008 32.496 22.324
 c 49.5 45.004 l h
30.289 23.801 m 29.766 24.191 l h
27.703 25.93 m 27.703 25.934 l 21.516 31.602 18 39.609 18.012 48 c 18.012
 56.73 21.742 64.59 27.703 70.066 c 44.25 48 l h
29.766 71.805 m 30.289 72.195 l h
29.766 71.805 m f
Q Q
showpage
%%Trailer
%%EOF
