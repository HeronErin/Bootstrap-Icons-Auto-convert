%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
0 12 m 0 5.371 5.371 0 12 0 c 108 0 l 114.629 0 120 5.371 120 12 c 120 
18.629 114.629 24 108 24 c 12 24 l 5.371 24 0 18.629 0 12 c 0 60 m 0 53.371
 5.371 48 12 48 c 180 48 l 186.629 48 192 53.371 192 60 c 192 66.629 186.629
 72 180 72 c 12 72 l 5.371 72 0 66.629 0 60 c 216 60 m 216 53.371 221.371
 48 228 48 c 348 48 l 354.629 48 360 53.371 360 60 c 360 66.629 354.629 
72 348 72 c 228 72 l 221.371 72 216 66.629 216 60 c 0 108 m 0 101.371 5.371
 96 12 96 c 84 96 l 90.629 96 96 101.371 96 108 c 96 114.629 90.629 120 
84 120 c 12 120 l 5.371 120 0 114.629 0 108 c 120 108 m 120 101.371 125.371
 96 132 96 c 252 96 l 258.629 96 264 101.371 264 108 c 264 114.629 258.629
 120 252 120 c 132 120 l 125.371 120 120 114.629 120 108 c 288 108 m 288
 101.371 293.371 96 300 96 c 372 96 l 378.629 96 384 101.371 384 108 c 384
 114.629 378.629 120 372 120 c 300 120 l 293.371 120 288 114.629 288 108
 c 0 156 m 0 149.371 5.371 144 12 144 c 156 144 l 162.629 144 168 149.371
 168 156 c 168 162.629 162.629 168 156 168 c 12 168 l 5.371 168 0 162.629
 0 156 c 192 156 m 192 149.371 197.371 144 204 144 c 324 144 l 330.629 144
 336 149.371 336 156 c 336 162.629 330.629 168 324 168 c 204 168 l 197.371
 168 192 162.629 192 156 c 0 204 m 0 197.371 5.371 192 12 192 c 132 192 
l 138.629 192 144 197.371 144 204 c 144 210.629 138.629 216 132 216 c 12
 216 l 5.371 216 0 210.629 0 204 c 168 204 m 168 197.371 173.371 192 180
 192 c 348 192 l 354.629 192 360 197.371 360 204 c 360 210.629 354.629 216
 348 216 c 180 216 l 173.371 216 168 210.629 168 204 c 0 252 m 0 245.371
 5.371 240 12 240 c 204 240 l 210.629 240 216 245.371 216 252 c 216 258.629
 210.629 264 204 264 c 12 264 l 5.371 264 0 258.629 0 252 c 0 300 m 0 293.371
 5.371 288 12 288 c 108 288 l 114.629 288 120 293.371 120 300 c 120 306.629
 114.629 312 108 312 c 12 312 l 5.371 312 0 306.629 0 300 c 0 348 m 0 341.371
 5.371 336 12 336 c 60 336 l 66.629 336 72 341.371 72 348 c 72 354.629 66.629
 360 60 360 c 12 360 l 5.371 360 0 354.629 0 348 c f*
Q Q
showpage
%%Trailer
%%EOF
