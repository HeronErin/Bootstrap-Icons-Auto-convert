%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
0 24 m 0 17.637 2.527 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c
 216 0 l 224.574 0 232.496 4.574 236.785 12 c 241.07 19.426 241.07 28.574
 236.785 36 c 232.496 43.426 224.574 48 216 48 c 24 48 l 17.637 48 11.531
 45.473 7.031 40.969 c 2.527 36.469 0 30.363 0 24 c 0 120 m 0 113.637 2.527
 107.531 7.031 103.031 c 11.531 98.527 17.637 96 24 96 c 360 96 l 368.574
 96 376.496 100.574 380.785 108 c 385.07 115.426 385.07 124.574 380.785 
132 c 376.496 139.426 368.574 144 360 144 c 24 144 l 17.637 144 11.531 141.473
 7.031 136.969 c 2.527 132.469 0 126.363 0 120 c 432 120 m 432 113.637 434.527
 107.531 439.031 103.031 c 443.531 98.527 449.637 96 456 96 c 696 96 l 704.574
 96 712.496 100.574 716.785 108 c 721.07 115.426 721.07 124.574 716.785 
132 c 712.496 139.426 704.574 144 696 144 c 456 144 l 449.637 144 443.531
 141.473 439.031 136.969 c 434.527 132.469 432 126.363 432 120 c 0 216 m
 0 209.637 2.527 203.531 7.031 199.031 c 11.531 194.527 17.637 192 24 192
 c 168 192 l 176.574 192 184.496 196.574 188.785 204 c 193.07 211.426 193.07
 220.574 188.785 228 c 184.496 235.426 176.574 240 168 240 c 24 240 l 17.637
 240 11.531 237.473 7.031 232.969 c 2.527 228.469 0 222.363 0 216 c 240 
216 m 240 209.637 242.527 203.531 247.031 199.031 c 251.531 194.527 257.637
 192 264 192 c 504 192 l 512.574 192 520.496 196.574 524.785 204 c 529.07
 211.426 529.07 220.574 524.785 228 c 520.496 235.426 512.574 240 504 240
 c 264 240 l 257.637 240 251.531 237.473 247.031 232.969 c 242.527 228.469
 240 222.363 240 216 c 576 216 m 576 209.637 578.527 203.531 583.031 199.031
 c 587.531 194.527 593.637 192 600 192 c 744 192 l 752.574 192 760.496 196.574
 764.785 204 c 769.07 211.426 769.07 220.574 764.785 228 c 760.496 235.426
 752.574 240 744 240 c 600 240 l 593.637 240 587.531 237.473 583.031 232.969
 c 578.527 228.469 576 222.363 576 216 c 0 312 m 0 305.637 2.527 299.531
 7.031 295.031 c 11.531 290.527 17.637 288 24 288 c 312 288 l 320.574 288
 328.496 292.574 332.785 300 c 337.07 307.426 337.07 316.574 332.785 324
 c 328.496 331.426 320.574 336 312 336 c 24 336 l 17.637 336 11.531 333.473
 7.031 328.969 c 2.527 324.469 0 318.363 0 312 c 384 312 m 384 305.637 386.527
 299.531 391.031 295.031 c 395.531 290.527 401.637 288 408 288 c 648 288
 l 656.574 288 664.496 292.574 668.785 300 c 673.07 307.426 673.07 316.574
 668.785 324 c 664.496 331.426 656.574 336 648 336 c 408 336 l 401.637 336
 395.531 333.473 391.031 328.969 c 386.527 324.469 384 318.363 384 312 c
 0 408 m 0 401.637 2.527 395.531 7.031 391.031 c 11.531 386.527 17.637 384
 24 384 c 264 384 l 272.574 384 280.496 388.574 284.785 396 c 289.07 403.426
 289.07 412.574 284.785 420 c 280.496 427.426 272.574 432 264 432 c 24 432
 l 17.637 432 11.531 429.473 7.031 424.969 c 2.527 420.469 0 414.363 0 408
 c 336 408 m 336 401.637 338.527 395.531 343.031 391.031 c 347.531 386.527
 353.637 384 360 384 c 696 384 l 704.574 384 712.496 388.574 716.785 396
 c 721.07 403.426 721.07 412.574 716.785 420 c 712.496 427.426 704.574 432
 696 432 c 360 432 l 353.637 432 347.531 429.473 343.031 424.969 c 338.527
 420.469 336 414.363 336 408 c 0 504 m 0 497.637 2.527 491.531 7.031 487.031
 c 11.531 482.527 17.637 480 24 480 c 408 480 l 416.574 480 424.496 484.574
 428.785 492 c 433.07 499.426 433.07 508.574 428.785 516 c 424.496 523.426
 416.574 528 408 528 c 24 528 l 17.637 528 11.531 525.473 7.031 520.969 
c 2.527 516.469 0 510.363 0 504 c 0 600 m 0 593.637 2.527 587.531 7.031 
583.031 c 11.531 578.527 17.637 576 24 576 c 216 576 l 224.574 576 232.496
 580.574 236.785 588 c 241.07 595.426 241.07 604.574 236.785 612 c 232.496
 619.426 224.574 624 216 624 c 24 624 l 17.637 624 11.531 621.473 7.031 
616.969 c 2.527 612.469 0 606.363 0 600 c 0 696 m 0 689.637 2.527 683.531
 7.031 679.031 c 11.531 674.527 17.637 672 24 672 c 120 672 l 128.574 672
 136.496 676.574 140.785 684 c 145.07 691.426 145.07 700.574 140.785 708
 c 136.496 715.426 128.574 720 120 720 c 24 720 l 17.637 720 11.531 717.473
 7.031 712.969 c 2.527 708.469 0 702.363 0 696 c f*
Q Q
showpage
%%Trailer
%%EOF
