%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
1.5 1.5 m 0.672 1.5 0 2.172 0 3 c 0 9 l 0 9.398 0.156 9.781 0.438 10.062
 c 0.719 10.344 1.102 10.5 1.5 10.5 c 10.5 10.5 l 10.898 10.5 11.281 10.344
 11.562 10.062 c 11.844 9.781 12 9.398 12 9 c 12 3 l 12 2.602 11.844 2.219
 11.562 1.938 c 11.281 1.656 10.898 1.5 10.5 1.5 c h
3.77 4.5 m 3.148 4.5 2.781 4.98 2.781 5.816 c 2.781 6.375 l 2.781 7.207
 3.141 7.672 3.77 7.672 c 4.285 7.672 4.621 7.344 4.66 6.883 c 5.52 6.883
 l 5.52 6.969 l 5.477 7.828 4.75 8.422 3.762 8.422 c 2.551 8.422 1.875 7.652
 1.875 6.375 c 1.875 5.816 l 1.875 4.539 2.559 3.75 3.762 3.75 c 4.75 3.75
 5.48 4.359 5.52 5.25 c 5.52 5.332 l 4.66 5.332 l 4.625 4.855 4.281 4.5 
3.77 4.5 c 8.375 4.5 m 7.75 4.5 7.387 4.98 7.387 5.816 c 7.387 6.375 l 7.387
 7.207 7.746 7.672 8.375 7.672 c 8.891 7.672 9.23 7.344 9.266 6.883 c 10.125
 6.883 l 10.125 6.969 l 10.082 7.828 9.355 8.422 8.367 8.422 c 7.156 8.422
 6.48 7.652 6.48 6.375 c 6.48 5.816 l 6.48 4.543 7.164 3.754 8.367 3.754
 c 9.355 3.754 10.086 4.363 10.125 5.254 c 10.125 5.336 l 9.266 5.336 l 
9.23 4.859 8.887 4.504 8.375 4.504 c h
8.375 4.5 m f
Q Q
showpage
%%Trailer
%%EOF
