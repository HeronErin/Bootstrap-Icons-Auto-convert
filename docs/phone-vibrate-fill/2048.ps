%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 384 m 384 333.078 404.227 284.242 440.234 248.234 c 476.242 212.227
 525.078 192 576 192 c 960 192 l 993.703 192 1026.812 200.871 1056 217.723
 c 1085.188 234.574 1109.426 258.812 1126.277 288 c 1143.129 317.188 1152
 350.297 1152 384 c 1152 1152 l 1152 1185.703 1143.129 1218.812 1126.277
 1248 c 1109.426 1277.188 1085.188 1301.426 1056 1318.277 c 1026.812 1335.129
 993.703 1344 960 1344 c 576 1344 l 525.078 1344 476.242 1323.773 440.234
 1287.766 c 404.227 1251.758 384 1202.922 384 1152 c h
864 1056 m 864 1021.703 845.703 990.012 816 972.863 c 786.297 955.711 749.703
 955.711 720 972.863 c 690.297 990.012 672 1021.703 672 1056 c 672 1090.297
 690.297 1121.988 720 1139.137 c 749.703 1156.289 786.297 1156.289 816 1139.137
 c 845.703 1121.988 864 1090.297 864 1056 c 173.473 454.465 m 181.496 439.305
 180.824 421.016 171.711 406.484 c 162.594 391.953 146.418 383.391 129.277
 384.02 c 112.137 384.648 96.633 394.375 88.609 409.535 c 30.359 520.039
 -0.055 643.086 0 768 c 0 897.312 32.062 1019.328 88.609 1126.465 c 96.633
 1141.625 112.137 1151.352 129.277 1151.98 c 146.418 1152.609 162.594 1144.047
 171.711 1129.516 c 180.824 1114.984 181.496 1096.695 173.473 1081.535 c
 122.543 984.875 95.953 877.258 96 768 c 96 654.719 124.031 547.969 173.473
 454.465 c 1447.395 409.535 m 1447.391 409.535 l 1439.367 394.375 1423.863
 384.648 1406.723 384.02 c 1389.582 383.391 1373.406 391.953 1364.289 406.484
 c 1355.176 421.016 1354.504 439.305 1362.527 454.465 c 1411.969 547.969
 1440 654.625 1440 768 c 1440 881.281 1411.969 988.031 1362.527 1081.535
 c 1354.504 1096.695 1355.176 1114.984 1364.289 1129.516 c 1373.406 1144.047
 1389.582 1152.609 1406.723 1151.98 c 1423.863 1151.352 1439.367 1141.625
 1447.391 1126.465 c 1505.641 1015.961 1536.055 892.914 1536 768 c 1536.055
 643.086 1505.641 520.039 1447.391 409.535 c 320.641 593.473 m 326.055 581.48
 326.309 567.797 321.348 555.613 c 316.383 543.43 306.637 533.816 294.387
 529.02 c 282.137 524.227 268.457 524.668 256.539 530.246 c 244.625 535.824
 235.523 546.047 231.359 558.527 c 205.324 625.297 191.977 696.336 192 768
 c 192 841.824 205.922 912.48 231.359 977.473 c 235.523 989.953 244.625 
1000.176 256.539 1005.754 c 268.457 1011.332 282.137 1011.773 294.387 1006.98
 c 306.637 1002.184 316.383 992.57 321.348 980.387 c 326.309 968.203 326.055
 954.52 320.641 942.527 c 299 886.887 287.934 827.699 288 768 c 288 706.367
 299.52 647.52 320.641 593.473 c 1304.641 558.527 m 1297.824 543.43 1283.703
 532.914 1267.281 530.707 c 1250.863 528.504 1234.469 534.922 1223.906 547.684
 c 1213.348 560.449 1210.117 577.758 1215.359 593.473 c 1236.48 647.52 1248
 706.367 1248 768 c 1248 829.633 1236.48 888.48 1215.359 942.527 c 1210.117
 958.242 1213.348 975.551 1223.906 988.316 c 1234.469 1001.078 1250.863 
1007.496 1267.281 1005.293 c 1283.703 1003.086 1297.824 992.57 1304.641 
977.473 c 1330.176 912.48 1344 841.824 1344 768 c 1344 694.176 1330.078 
623.52 1304.641 558.527 c f
Q Q
showpage
%%Trailer
%%EOF
