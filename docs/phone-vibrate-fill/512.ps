%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
96 96 m 96 83.27 101.059 71.062 110.059 62.059 c 119.062 53.059 131.27 
48 144 48 c 240 48 l 252.73 48 264.938 53.059 273.941 62.059 c 282.941 71.062
 288 83.27 288 96 c 288 288 l 288 300.73 282.941 312.938 273.941 321.941
 c 264.938 330.941 252.73 336 240 336 c 144 336 l 131.27 336 119.062 330.941
 110.059 321.941 c 101.059 312.938 96 300.73 96 288 c h
216 264 m 216 255.426 211.426 247.504 204 243.215 c 196.574 238.93 187.426
 238.93 180 243.215 c 172.574 247.504 168 255.426 168 264 c 168 272.574 
172.574 280.496 180 284.785 c 187.426 289.07 196.574 289.07 204 284.785 
c 211.426 280.496 216 272.574 216 264 c 43.367 113.617 m 46.469 107.758 
44.234 100.492 38.375 97.391 c 32.516 94.289 25.254 96.523 22.152 102.383
 c 7.59 130.012 -0.016 160.77 0 192 c 0 224.328 8.016 254.832 22.152 281.617
 c 25.254 287.477 32.516 289.711 38.375 286.609 c 44.234 283.508 46.469 
276.242 43.367 270.383 c 30.637 246.219 23.988 219.312 24 192 c 24 163.68
 31.008 136.992 43.367 113.617 c 361.848 102.387 m 361.848 102.383 l 358.746
 96.523 351.484 94.289 345.625 97.391 c 339.766 100.492 337.531 107.758 
340.633 113.617 c 352.992 136.992 360 163.656 360 192 c 360 220.32 352.992
 247.008 340.633 270.383 c 337.531 276.242 339.766 283.508 345.625 286.609
 c 351.484 289.711 358.746 287.477 361.848 281.617 c 376.41 253.988 384.016
 223.23 384 192 c 384.016 160.77 376.41 130.012 361.848 102.383 c 80.16 
148.367 m 81.512 145.371 81.578 141.949 80.336 138.902 c 79.098 135.855 
76.66 133.453 73.598 132.254 c 70.535 131.055 67.113 131.168 64.137 132.562
 c 61.156 133.957 58.883 136.512 57.84 139.633 c 51.332 156.324 47.992 174.082
 48 192 c 48 210.457 51.48 228.121 57.84 244.367 c 58.883 247.488 61.156
 250.043 64.137 251.438 c 67.113 252.832 70.535 252.945 73.598 251.746 c
 76.66 250.547 79.098 248.145 80.336 245.098 c 81.578 242.051 81.512 238.629
 80.16 235.633 c 74.75 221.723 71.984 206.926 72 192 c 72 176.594 74.879
 161.879 80.16 148.367 c 326.16 139.633 m 323.531 133.809 316.801 131.066
 310.848 133.395 c 304.898 135.723 301.816 142.309 303.84 148.367 c 309.121
 161.879 312 176.59 312 192 c 312 207.406 309.121 222.121 303.84 235.633
 c 301.816 241.691 304.898 248.277 310.848 250.605 c 316.801 252.934 323.531
 250.191 326.16 244.367 c 332.543 228.121 336 210.457 336 192 c 336 173.543
 332.52 155.879 326.16 139.633 c f
Q Q
showpage
%%Trailer
%%EOF
