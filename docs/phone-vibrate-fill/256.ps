%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
48 48 m 48 41.637 50.527 35.531 55.031 31.031 c 59.531 26.527 65.637 24
 72 24 c 120 24 l 126.363 24 132.469 26.527 136.969 31.031 c 141.473 35.531
 144 41.637 144 48 c 144 144 l 144 150.363 141.473 156.469 136.969 160.969
 c 132.469 165.473 126.363 168 120 168 c 72 168 l 65.637 168 59.531 165.473
 55.031 160.969 c 50.527 156.469 48 150.363 48 144 c h
108 132 m 108 125.371 102.629 120 96 120 c 89.371 120 84 125.371 84 132
 c 84 138.629 89.371 144 96 144 c 102.629 144 108 138.629 108 132 c 21.684
 56.809 m 23.234 53.879 22.117 50.246 19.188 48.695 c 16.258 47.145 12.625
 48.262 11.074 51.191 c 3.793 65.004 -0.008 80.387 0 96 c 0 112.164 4.008
 127.414 11.074 140.809 c 12.625 143.738 16.258 144.855 19.188 143.305 c
 22.117 141.754 23.234 138.121 21.684 135.191 c 15.316 123.109 11.992 109.656
 12 96 c 12 81.84 15.504 68.496 21.684 56.809 c 180.922 51.191 m 180.926
 51.191 l 179.375 48.262 175.742 47.145 172.812 48.695 c 169.883 50.246 
168.766 53.879 170.316 56.809 c 176.496 68.496 180 81.828 180 96 c 180 110.16
 176.496 123.504 170.316 135.191 c 168.766 138.121 169.883 141.754 172.812
 143.305 c 175.742 144.855 179.375 143.738 180.926 140.809 c 188.207 126.996
 192.008 111.613 192 96 c 192.008 80.387 188.207 65.004 180.926 51.191 c
 40.078 74.184 m 40.758 72.684 40.789 70.973 40.168 69.453 c 39.547 67.93
 38.328 66.727 36.797 66.129 c 35.266 65.527 33.559 65.582 32.066 66.281
 c 30.578 66.977 29.441 68.258 28.922 69.816 c 25.664 78.16 23.996 87.043
 24 96 c 24 105.227 25.738 114.059 28.922 122.184 c 29.441 123.742 30.578
 125.023 32.066 125.719 c 33.559 126.418 35.266 126.473 36.797 125.871 c
 38.328 125.273 39.547 124.07 40.168 122.547 c 40.789 121.027 40.758 119.316
 40.078 117.816 c 37.375 110.859 35.992 103.461 36 96 c 36 88.297 37.441
 80.941 40.078 74.184 c 163.078 69.816 m 161.766 66.906 158.398 65.535 155.426
 66.699 c 152.449 67.863 150.91 71.152 151.922 74.184 c 154.562 80.941 156
 88.297 156 96 c 156 103.703 154.559 111.059 151.922 117.816 c 150.91 120.848
 152.449 124.137 155.426 125.301 c 158.398 126.465 161.766 125.094 163.078
 122.184 c 166.273 114.059 168 105.227 168 96 c 168 86.773 166.262 77.941
 163.078 69.816 c f
Q Q
showpage
%%Trailer
%%EOF
