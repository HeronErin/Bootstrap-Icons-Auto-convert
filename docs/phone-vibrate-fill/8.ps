%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.5 1.5 m 1.5 1.086 1.836 0.75 2.25 0.75 c 3.75 0.75 l 3.949 0.75 4.141
 0.828 4.281 0.969 c 4.422 1.109 4.5 1.301 4.5 1.5 c 4.5 4.5 l 4.5 4.699
 4.422 4.891 4.281 5.031 c 4.141 5.172 3.949 5.25 3.75 5.25 c 2.25 5.25 
l 1.836 5.25 1.5 4.914 1.5 4.5 c h
3.375 4.125 m 3.375 3.918 3.207 3.75 3 3.75 c 2.793 3.75 2.625 3.918 2.625
 4.125 c 2.625 4.332 2.793 4.5 3 4.5 c 3.207 4.5 3.375 4.332 3.375 4.125
 c 0.676 1.773 m 0.793 1.555 0.465 1.379 0.348 1.602 c 0.117 2.031 0 2.512
 0 3 c 0 3.504 0.125 3.98 0.348 4.398 c 0.465 4.621 0.793 4.445 0.676 4.227
 c 0.48 3.848 0.375 3.426 0.375 3 c 0.375 2.559 0.484 2.141 0.676 1.773 
c 5.652 1.598 m 5.652 1.602 l 5.535 1.379 5.207 1.555 5.324 1.773 c 5.516
 2.141 5.625 2.559 5.625 3 c 5.625 3.441 5.516 3.859 5.324 4.227 c 5.207
 4.445 5.535 4.621 5.652 4.398 c 5.883 3.969 6 3.488 6 3 c 6 2.512 5.883
 2.031 5.652 1.602 c 1.254 2.316 m 1.297 2.219 1.25 2.105 1.148 2.066 c 
1.051 2.027 0.938 2.078 0.902 2.184 c 0.801 2.441 0.75 2.719 0.75 3 c 0.75
 3.289 0.805 3.562 0.902 3.816 c 0.938 3.922 1.051 3.973 1.148 3.934 c 1.25
 3.895 1.297 3.781 1.254 3.684 c 1.168 3.465 1.125 3.234 1.125 3 c 1.125
 2.758 1.172 2.531 1.254 2.316 c 5.098 2.18 m 5.098 2.184 l 5 1.965 4.672
 2.094 4.746 2.316 c 4.828 2.527 4.875 2.758 4.875 3 c 4.875 3.242 4.828
 3.469 4.746 3.684 c 4.672 3.906 5 4.035 5.098 3.816 c 5.195 3.562 5.25 
3.289 5.25 3 c 5.25 2.711 5.195 2.438 5.098 2.184 c f
Q Q
showpage
%%Trailer
%%EOF
