%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 108 0 276 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 108 0 276 384
384 384 cairo_set_page_size
%%EndPageSetup
q 108 0 168 384 rectclip
1 0 0 -1 0 384 cm q
0 g
228 300 m 227.996 308.844 224.738 317.375 218.844 323.969 c 212.953 330.559
 204.844 334.754 196.059 335.75 c 187.27 336.75 178.426 334.477 171.207 
329.371 c 163.988 324.262 158.902 316.68 156.918 308.062 c 154.934 299.445
 156.191 290.398 160.445 282.648 c 164.703 274.898 171.664 268.988 180 266.039
 c 180 228 l 180 221.371 185.371 216 192 216 c 198.629 216 204 221.371 204
 228 c 204 266.039 l 211.023 268.523 217.102 273.121 221.398 279.203 c 225.699
 285.285 228.004 292.551 228 300 c f
132 60 m 132 38.562 143.438 18.758 162 8.039 c 180.562 -2.68 203.438 -2.68
 222 8.039 c 240.562 18.758 252 38.562 252 60 c 252 241.199 l 267.523 257.043
 276.148 278.379 276 300.559 c 275.848 322.738 266.93 343.957 251.195 359.586
 c 235.457 375.215 214.18 383.988 192 383.988 c 169.82 383.988 148.543 375.215
 132.805 359.586 c 117.07 343.957 108.152 322.738 108 300.559 c 107.852 
278.379 116.477 257.043 132 241.199 c h
192 24 m 182.453 24 173.297 27.793 166.543 34.543 c 159.793 41.297 156 
50.453 156 60 c 156 251.688 l 151.992 255.289 l 139.844 266.152 132.637 
281.496 132.031 297.781 c 131.422 314.07 137.473 329.906 148.781 341.645
 c 160.09 353.383 175.688 360.012 191.988 360.012 c 208.289 360.012 223.887
 353.383 235.195 341.645 c 246.504 329.906 252.551 314.07 251.945 297.781
 c 251.34 281.496 244.133 266.152 231.984 255.289 c 228 251.688 l 228 60
 l 228 50.453 224.207 41.297 217.457 34.543 c 210.703 27.793 201.547 24 
192 24 c f
Q Q
showpage
%%Trailer
%%EOF
