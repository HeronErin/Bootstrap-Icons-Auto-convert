%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 216 0 552 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 216 0 552 768
768 768 cairo_set_page_size
%%EndPageSetup
q 216 0 336 768 rectclip
1 0 0 -1 0 768 cm q
0 g
456 600 m 455.992 617.684 449.473 634.746 437.691 647.934 c 425.91 661.121
 409.684 669.512 392.113 671.504 c 374.543 673.496 356.852 668.953 342.414
 658.738 c 327.98 648.523 317.805 633.355 313.836 616.121 c 309.867 598.891
 312.379 580.801 320.895 565.301 c 329.406 549.801 343.328 537.977 360 532.078
 c 360 456 l 360 447.426 364.574 439.504 372 435.215 c 379.426 430.93 388.574
 430.93 396 435.215 c 403.426 439.504 408 447.426 408 456 c 408 532.078 
l 422.043 537.047 434.203 546.242 442.797 558.41 c 451.395 570.574 456.008
 585.105 456 600 c f
264 120 m 264 77.129 286.871 37.512 324 16.078 c 361.129 -5.359 406.871
 -5.359 444 16.078 c 481.129 37.512 504 77.129 504 120 c 504 482.398 l 535.043
 514.086 552.297 556.762 551.996 601.117 c 551.695 645.477 533.863 687.914
 502.391 719.172 c 470.918 750.434 428.359 767.977 384 767.977 c 339.641
 767.977 297.082 750.434 265.609 719.172 c 234.137 687.914 216.305 645.477
 216.004 601.117 c 215.703 556.762 232.957 514.086 264 482.398 c h
384 48 m 364.906 48 346.59 55.586 333.09 69.09 c 319.586 82.59 312 100.906
 312 120 c 312 503.375 l 303.984 510.574 l 279.684 532.309 265.27 562.988
 264.059 595.566 c 262.848 628.145 274.941 659.812 297.562 683.285 c 320.18
 706.762 351.375 720.027 383.977 720.027 c 416.574 720.027 447.773 706.762
 470.391 683.285 c 493.012 659.812 505.105 628.145 503.895 595.566 c 502.68
 562.988 488.27 532.309 463.969 510.574 c 456 503.375 l 456 120 l 456 100.906
 448.414 82.59 434.91 69.09 c 421.41 55.586 403.094 48 384 48 c f
Q Q
showpage
%%Trailer
%%EOF
