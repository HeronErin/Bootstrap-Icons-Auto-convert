%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 141.078 0 92.242 20.227 56.234 56.234 c 20.227 92.242 0 141.078
 0 192 c 0 242.922 20.227 291.758 56.234 327.766 c 92.242 363.773 141.078
 384 192 384 c 242.922 384 291.758 363.773 327.766 327.766 c 363.773 291.758
 384 242.922 384 192 c 384 141.078 363.773 92.242 327.766 56.234 c 291.758
 20.227 242.922 0 192 0 c 48.961 103.824 m 56.762 135.719 109.73 164.785
 138.168 180.383 c 149.688 186.695 157.199 190.797 156 192 c 154.062 193.922
 152.129 195.793 150.191 197.617 c 140.207 207.121 131.305 215.594 132 228
 c 132.84 243.215 146.832 247.777 161.137 252.406 c 174.984 256.918 189.168
 261.527 192 276 c 193.969 286.008 190.199 299.711 186.719 312.48 c 181.559
 331.25 176.977 348 192 348 c 228 336 283.152 271.535 288 228 c 291.312 
198.168 240 180 204 168 c 192.527 164.16 185.879 169.945 180.238 174.816
 c 176.109 178.418 172.512 181.512 168 180 c 157.32 176.449 108 132 132 
120 c 150.719 110.641 154.848 115.895 161.449 124.367 c 163.32 126.742 165.359
 129.359 168 132 c 182.617 139.297 183.887 128.832 185.352 116.809 c 186.289
 109.082 187.297 100.703 192 96 c 202.414 85.586 222.359 77.016 240.672 
69.121 c 257.762 61.777 273.434 55.031 278.566 48 c 307.109 65.164 329.906
 90.422 344.062 120.57 c 358.215 150.715 363.094 184.391 358.07 217.312 
c 353.047 250.234 338.352 280.922 315.848 305.477 c 293.348 330.031 264.059
 347.344 231.695 355.215 c 199.336 363.086 165.363 361.16 134.102 349.684
 c 102.836 338.207 75.688 317.699 56.105 290.762 c 36.52 263.82 25.387 231.672
 24.113 198.391 c 22.84 165.109 31.488 132.203 48.961 103.848 c h
48.961 103.824 m f
Q Q
showpage
%%Trailer
%%EOF
