%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 0 m 61.703 0 30.012 18.297 12.863 48 c -4.289 77.703 -4.289 114.297 
12.863 144 c 30.012 173.703 61.703 192 96 192 c 130.297 192 161.988 173.703
 179.137 144 c 196.289 114.297 196.289 77.703 179.137 48 c 161.988 18.297
 130.297 0 96 0 c 24.48 51.91 m 28.379 67.859 54.863 82.391 69.086 90.191
 c 74.848 93.348 78.602 95.398 78 96 c 77.031 96.961 76.062 97.895 75.098
 98.809 c 70.105 103.562 65.652 107.797 66 114 c 66.422 121.609 73.414 123.887
 80.566 126.203 c 87.492 128.461 94.582 130.762 96 138 c 96.984 143.004 
95.102 149.855 93.359 156.238 c 90.781 165.621 88.488 174 96 174 c 114 168
 141.574 135.77 144 114 c 145.656 99.086 120 90 102 84 c 96.266 82.078 92.941
 84.973 90.121 87.406 c 88.059 89.207 86.258 90.754 84 90 c 78.66 88.223
 54 66 66 60 c 75.359 55.32 77.426 57.949 80.723 62.184 c 81.66 63.371 82.68
 64.68 84 66 c 91.309 69.648 91.945 64.414 92.676 58.402 c 93.145 54.539
 93.648 50.352 96 48 c 101.207 42.793 111.18 38.508 120.336 34.559 c 128.879
 30.887 136.715 27.516 139.285 24 c 158.422 35.508 172.188 54.16 177.543
 75.84 c 182.898 97.52 179.402 120.438 167.824 139.535 c 156.25 158.629 
137.547 172.328 115.848 177.605 c 94.148 182.883 71.242 179.305 52.191 167.66
 c 33.137 156.016 19.504 137.262 14.305 115.547 c 9.105 93.828 12.766 70.938
 24.48 51.926 c h
24.48 51.91 m f
Q Q
showpage
%%Trailer
%%EOF
