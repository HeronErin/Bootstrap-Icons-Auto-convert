%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 564.312 0 368.969 80.914 224.941 224.941 c 80.914 368.969 0 564.312
 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 368.969 1455.086 564.312
 1536 768 1536 c 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086
 1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059
 224.941 c 1167.031 80.914 971.688 0 768 0 c 195.84 415.297 m 227.039 542.883
 438.91 659.137 552.672 721.535 c 598.75 746.781 628.801 763.199 624 768
 c 616.258 775.68 608.512 783.168 600.77 790.465 c 560.832 828.48 525.219
 862.367 528 912 c 531.359 972.863 587.328 991.105 644.543 1009.633 c 699.934
 1027.68 756.672 1046.113 768 1104 c 775.871 1144.031 760.801 1198.848 746.879
 1249.922 c 726.238 1324.992 707.902 1392 768 1392 c 912 1344 1132.609 1086.145
 1152 912 c 1165.246 792.672 960 720 816 672 c 770.113 656.641 743.52 679.777
 720.961 699.266 c 704.449 713.664 690.051 726.051 672 720 c 629.281 705.793
 432 528 528 480 c 602.879 442.559 619.391 463.586 645.793 497.473 c 653.281
 506.977 661.441 517.441 672 528 c 730.465 557.184 735.551 515.328 741.406
 467.23 c 745.148 436.32 749.184 402.816 768 384 c 809.664 342.336 889.441
 308.062 962.688 276.48 c 1031.039 247.105 1093.727 220.129 1114.273 192
 c 1228.438 260.652 1319.621 361.688 1376.246 482.273 c 1432.867 602.859
 1452.371 737.555 1432.277 869.25 c 1412.184 1000.941 1353.402 1123.695 
1263.398 1221.91 c 1173.395 1320.125 1056.23 1389.371 926.785 1420.855 c
 797.34 1452.344 661.461 1444.645 536.402 1398.738 c 411.344 1352.832 302.75
 1270.793 224.414 1163.039 c 146.082 1055.285 101.543 926.68 96.453 793.559
 c 91.367 660.441 125.961 528.809 195.84 415.391 c h
195.84 415.297 m f
Q Q
showpage
%%Trailer
%%EOF
