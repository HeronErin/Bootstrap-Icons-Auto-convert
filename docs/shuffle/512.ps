%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 30 381 354
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 30 381 354
384 384 cairo_set_page_size
%%EndPageSetup
q 0 30 381 324 rectclip
1 0 0 -1 0 384 cm q
0 g
0 84 m 0 77.371 5.371 72 12 72 c 24 72 l 76.848 72 115.848 101.762 140.977
 130.031 c 152.738 143.277 161.738 156.48 168 166.801 c 174.238 156.48 183.266
 143.281 195.023 130.031 c 220.152 101.762 259.152 72 312 72 c 312 96 l 
268.848 96 235.848 120.238 212.977 145.969 c 200.605 159.973 189.98 175.43
 181.344 192 c 189.977 208.57 200.59 224.027 212.953 238.031 c 235.871 263.762
 268.895 288 312 288 c 312 312 l 259.152 312 220.152 282.238 195.023 253.969
 c 184.934 242.547 175.887 230.242 168 217.199 c 161.762 227.52 152.734 
240.719 140.977 253.969 c 115.848 282.238 76.848 312 24 312 c 12 312 l 5.371
 312 0 306.629 0 300 c 0 293.371 5.371 288 12 288 c 24 288 l 67.152 288 
100.152 263.762 123.023 238.031 c 135.395 224.027 146.02 208.57 154.656 
192 c 146.023 175.43 135.41 159.973 123.047 145.969 c 100.129 120.238 67.105
 96 24 96 c 12 96 l 5.371 96 0 90.629 0 84 c f*
312 131.184 m 312 36.816 l 312 34.488 313.348 32.371 315.457 31.383 c 317.562
 30.398 320.051 30.719 321.84 32.207 c 378.48 79.391 l 381.359 81.789 381.359
 86.207 378.48 88.605 c 321.84 135.789 l 321.84 135.793 l 320.051 137.281
 317.562 137.602 315.457 136.617 c 313.348 135.629 312 133.512 312 131.184
 c 312 347.184 m 312 252.816 l 312 250.488 313.348 248.371 315.457 247.383
 c 317.562 246.398 320.051 246.719 321.84 248.207 c 378.48 295.391 l 381.359
 297.789 381.359 302.207 378.48 304.605 c 321.84 351.789 l 321.84 351.793
 l 320.051 353.281 317.562 353.602 315.457 352.617 c 313.348 351.629 312
 349.512 312 347.184 c f
Q Q
showpage
%%Trailer
%%EOF
