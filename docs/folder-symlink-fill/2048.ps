%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 18 192 1518 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 18 192 1518 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 18 192 1500 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
1325.762 288 m 943.488 288 l 892.57 287.988 843.742 267.754 807.742 231.742
 c 728.254 152.254 l 728.258 152.258 l 692.258 116.246 643.43 96.012 592.512
 96 c 240 96 l 189.078 96 140.242 116.227 104.234 152.234 c 68.227 188.242
 48 237.078 48 288 c 51.84 371.52 l 26.586 408.375 14.977 452.883 19.008
 497.375 c 80.16 1169.375 l 84.496 1217.078 106.504 1261.441 141.867 1293.75
 c 177.23 1326.059 223.395 1343.98 271.297 1344 c 1264.703 1344 l 1312.605
 1343.98 1358.77 1326.059 1394.133 1293.75 c 1429.496 1261.441 1451.504 
1217.078 1455.84 1169.375 c 1516.992 497.375 l 1520.219 461.848 1513.488
 426.125 1497.547 394.207 c 1481.605 362.293 1457.09 335.453 1426.746 316.691
 c 1396.402 297.93 1361.434 287.996 1325.762 288 c 210.238 288 m 187.07 
288.129 165.215 291.969 144.672 299.52 c 144 286.078 l 144.504 260.953 154.84
 237.027 172.789 219.438 c 190.738 201.844 214.867 191.996 240 192 c 592.512
 192 l 617.969 192.004 642.383 202.125 660.383 220.129 c 728.258 288 l h
1132.605 794.016 m 827.133 983.137 l 801.211 999.074 767.996 979.68 767.996
 947.426 c 768 873.602 l 768 873.602 521.184 844.801 384 1104 c 438.816 
643.199 685.727 643.199 768 643.199 c 768 569.375 l 768 537.117 801.215 
517.727 827.137 533.758 c 1132.609 722.781 l 1158.531 738.719 1158.531 778.078
 1132.609 794.012 c f
Q Q
showpage
%%Trailer
%%EOF
