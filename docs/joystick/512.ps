%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 5 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 5 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 5 384 379 rectclip
1 0 0 -1 0 384 cm q
0 g
240 48 m 240.004 58.645 236.469 68.984 229.949 77.402 c 223.434 85.816 
214.305 91.828 204 94.488 c 204 216.578 l 224.711 218.57 240 225.625 240
 234.004 c 240 243.941 218.52 252.004 192 252.004 c 165.48 252.004 144 243.941
 144 234.004 c 144 225.605 159.289 218.57 180 216.578 c 180 94.488 l 168.352
 91.48 158.258 84.207 151.715 74.109 c 145.176 64.016 142.664 51.828 144.68
 39.969 c 146.695 28.109 153.09 17.438 162.602 10.07 c 172.113 2.699 184.043
 -0.828 196.031 0.184 c 208.02 1.191 219.191 6.668 227.332 15.523 c 235.477
 24.379 239.996 35.969 240 48 c f
0 231.961 m 0 273.168 l 0.004 277.625 1.246 281.992 3.59 285.781 c 5.934
 289.57 9.285 292.633 13.273 294.625 c 170.547 373.273 l 170.543 373.273
 l 184.051 380.023 199.949 380.023 213.457 373.273 c 370.73 294.625 l 370.727
 294.625 l 374.715 292.633 378.066 289.57 380.41 285.781 c 382.754 281.992
 383.996 277.625 384 273.168 c 384 231.961 l 384 229.562 382.559 227.402
 380.352 226.441 c 228 161.16 l 228 184.992 l 353.449 237.266 l 354.555 
237.73 355.277 238.812 355.285 240.016 c 355.289 241.219 354.578 242.309
 353.473 242.785 c 210.914 303.891 l 210.91 303.887 l 198.836 309.066 185.164
 309.066 173.09 303.887 c 30.531 242.781 l 30.527 242.785 l 29.422 242.309
 28.711 241.219 28.715 240.016 c 28.723 238.812 29.445 237.73 30.551 237.266
 c 156 184.992 l 155.688 161.281 l 3.648 226.441 l 1.438 227.383 0 229.555
 0 231.961 c f
Q Q
showpage
%%Trailer
%%EOF
