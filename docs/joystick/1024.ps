%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 11 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 11 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 11 768 757 rectclip
1 0 0 -1 0 768 cm q
0 g
480 96 m 480.004 117.285 472.938 137.973 459.902 154.801 c 446.867 171.633
 428.609 183.652 408 188.977 c 408 433.152 l 449.426 437.137 480 451.25 
480 468 c 480 487.871 437.039 504 384 504 c 330.961 504 288 487.871 288 
468 c 288 451.199 318.574 437.137 360 433.152 c 360 188.977 l 336.703 182.961
 316.516 168.418 303.43 148.223 c 290.348 128.027 285.324 103.66 289.359
 79.938 c 293.391 56.215 306.184 34.875 325.203 20.137 c 344.223 5.398 368.082
 -1.656 392.059 0.363 c 416.035 2.383 438.379 13.332 454.668 31.047 c 470.953
 48.758 479.992 71.938 480 96 c f
0 463.922 m 0 546.336 l 0.004 555.246 2.492 563.98 7.18 571.562 c 11.867
 579.141 18.57 585.266 26.543 589.246 c 341.086 746.543 l 341.09 746.543
 l 368.102 760.043 399.898 760.043 426.91 746.543 c 741.453 589.246 l 741.457
 589.246 l 749.43 585.266 756.133 579.141 760.82 571.562 c 765.508 563.98
 767.996 555.246 768 546.336 c 768 463.922 l 768 459.121 765.121 454.801
 760.703 452.883 c 456 322.32 l 456 369.984 l 706.895 474.527 l 709.113 
475.461 710.559 477.629 710.57 480.031 c 710.578 482.438 709.152 484.617
 706.945 485.566 c 421.824 607.773 l 421.824 607.777 l 397.672 618.129 370.328
 618.129 346.176 607.777 c 61.055 485.57 l 61.055 485.566 l 58.848 484.617
 57.422 482.438 57.43 480.031 c 57.441 477.629 58.887 475.461 61.105 474.527
 c 312 369.984 l 311.375 322.559 l 7.297 452.879 l 2.871 454.766 0 459.109
 0 463.922 c f
Q Q
showpage
%%Trailer
%%EOF
