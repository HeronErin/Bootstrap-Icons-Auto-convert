%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 144 672 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 144 672 624
768 768 cairo_set_page_size
%%EndPageSetup
q 96 144 576 480 rectclip
1 0 0 -1 0 768 cm q
0 g
288 600 m 288 593.637 290.527 587.531 295.031 583.031 c 299.531 578.527
 305.637 576 312 576 c 648 576 l 656.574 576 664.496 580.574 668.785 588
 c 673.07 595.426 673.07 604.574 668.785 612 c 664.496 619.426 656.574 624
 648 624 c 312 624 l 305.637 624 299.531 621.473 295.031 616.969 c 290.527
 612.469 288 606.363 288 600 c 96 456 m 96 449.637 98.527 443.531 103.031
 439.031 c 107.531 434.527 113.637 432 120 432 c 648 432 l 656.574 432 664.496
 436.574 668.785 444 c 673.07 451.426 673.07 460.574 668.785 468 c 664.496
 475.426 656.574 480 648 480 c 120 480 l 113.637 480 107.531 477.473 103.031
 472.969 c 98.527 468.469 96 462.363 96 456 c 96 312 m 96 305.637 98.527
 299.531 103.031 295.031 c 107.531 290.527 113.637 288 120 288 c 648 288
 l 656.574 288 664.496 292.574 668.785 300 c 673.07 307.426 673.07 316.574
 668.785 324 c 664.496 331.426 656.574 336 648 336 c 120 336 l 113.637 336
 107.531 333.473 103.031 328.969 c 98.527 324.469 96 318.363 96 312 c 96
 168 m 96 161.637 98.527 155.531 103.031 151.031 c 107.531 146.527 113.637
 144 120 144 c 648 144 l 656.574 144 664.496 148.574 668.785 156 c 673.07
 163.426 673.07 172.574 668.785 180 c 664.496 187.426 656.574 192 648 192
 c 120 192 l 113.637 192 107.531 189.473 103.031 184.969 c 98.527 180.469
 96 174.363 96 168 c f*
Q Q
showpage
%%Trailer
%%EOF
