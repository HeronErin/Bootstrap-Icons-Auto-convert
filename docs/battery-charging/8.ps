%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.594 0.965 m 3.668 1.008 3.703 1.098 3.68 1.18 c 3.254 2.562 l 4 2.562
 l 4.164 2.562 4.25 2.758 4.137 2.879 c 2.137 5.004 l 2 5.148 1.762 5.008
 1.82 4.82 c 2.246 3.438 l 1.5 3.438 l 1.336 3.438 1.25 3.242 1.363 3.121
 c 3.363 0.996 l 3.422 0.934 3.52 0.918 3.594 0.961 c h
3.594 0.965 m f
0.75 1.5 m 2.375 1.5 l 2.023 1.875 l 0.75 1.875 l 0.543 1.875 0.375 2.043
 0.375 2.25 c 0.375 3.75 l 0.375 3.848 0.414 3.945 0.484 4.016 c 0.555 4.086
 0.652 4.125 0.75 4.125 c 1.641 4.125 l 1.523 4.5 l 0.75 4.5 l 0.336 4.5
 0 4.164 0 3.75 c 0 2.25 l 0 1.836 0.336 1.5 0.75 1.5 c f
0.75 2.25 m 1.668 2.25 l 1.09 2.863 l 0.969 2.992 0.914 3.172 0.945 3.344
 c 0.977 3.52 1.086 3.668 1.242 3.75 c 0.75 3.75 l h
3.973 1.5 m 3.855 1.875 l 4.5 1.875 l 4.598 1.875 4.695 1.914 4.766 1.984
 c 4.836 2.055 4.875 2.152 4.875 2.25 c 4.875 3.75 l 4.875 3.848 4.836 3.945
 4.766 4.016 c 4.695 4.086 4.598 4.125 4.5 4.125 c 3.477 4.125 l 3.125 4.5
 l 4.5 4.5 l 4.699 4.5 4.891 4.422 5.031 4.281 c 5.172 4.141 5.25 3.949 
5.25 3.75 c 5.25 2.25 l 5.25 2.051 5.172 1.859 5.031 1.719 c 4.891 1.578
 4.699 1.5 4.5 1.5 c h
3.973 1.5 m f
4.5 3.75 m 3.832 3.75 l 4.41 3.137 l 4.445 3.098 4.477 3.055 4.5 3.008 
c h
4.5 2.492 m 4.5 2.25 l 4.258 2.25 l 4.363 2.305 4.445 2.387 4.5 2.492 c
 6 3 m 6 3.312 5.75 3.562 5.438 3.562 c 5.438 2.438 l 5.75 2.438 6 2.688
 6 3 c f
Q Q
showpage
%%Trailer
%%EOF
