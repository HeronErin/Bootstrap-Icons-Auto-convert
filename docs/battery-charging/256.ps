%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 30 192 163
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 30 192 163
192 192 cairo_set_page_size
%%EndPageSetup
q 0 30 192 133 rectclip
1 0 0 -1 0 192 cm q
0 g
115.02 30.816 m 117.434 32.223 118.559 35.109 117.73 37.777 c 104.125 81.984
 l 128.004 81.984 l 130.398 81.984 132.566 83.406 133.516 85.605 c 134.465
 87.805 134.016 90.355 132.371 92.102 c 68.363 160.105 l 66.453 162.137 
63.387 162.582 60.977 161.18 c 58.562 159.773 57.438 156.891 58.262 154.223
 c 71.879 110.004 l 48 110.004 l 45.605 110.004 43.438 108.582 42.488 106.383
 c 41.539 104.184 41.988 101.629 43.633 99.887 c 107.629 31.883 l 109.539
 29.848 112.605 29.398 115.02 30.805 c h
115.02 30.816 m f
24 48 m 75.984 48 l 64.703 60 l 24 60 l 17.371 60 12 65.371 12 72 c 12 
120 l 12 123.184 13.266 126.234 15.516 128.484 c 17.766 130.734 20.816 132
 24 132 c 52.559 132 l 48.863 144 l 24 144 l 17.637 144 11.531 141.473 7.031
 136.969 c 2.527 132.469 0 126.363 0 120 c 0 72 l 0 65.637 2.527 59.531 
7.031 55.031 c 11.531 50.527 17.637 48 24 48 c f
24 72 m 53.398 72 l 34.895 91.668 l 31.023 95.781 29.309 101.477 30.266
 107.047 c 31.219 112.613 34.734 117.41 39.758 120 c 24 120 l h
127.141 48 m 123.445 60 l 144 60 l 147.184 60 150.234 61.266 152.484 63.516
 c 154.734 65.766 156 68.816 156 72 c 156 120 l 156 123.184 154.734 126.234
 152.484 128.484 c 150.234 130.734 147.184 132 144 132 c 111.312 132 l 100.008
 144 l 144 144 l 150.363 144 156.469 141.473 160.969 136.969 c 165.473 132.469
 168 126.363 168 120 c 168 72 l 168 65.637 165.473 59.531 160.969 55.031
 c 156.469 50.527 150.363 48 144 48 c h
127.141 48 m f
144 120 m 122.605 120 l 141.109 100.332 l 142.277 99.086 143.242 97.723
 144 96.254 c h
144 79.754 m 144 72 l 136.246 72 l 139.574 73.715 142.285 76.426 144 79.754
 c 192 96 m 192 100.773 190.105 105.352 186.727 108.727 c 183.352 112.105
 178.773 114 174 114 c 174 78 l 178.773 78 183.352 79.895 186.727 83.273
 c 190.105 86.648 192 91.227 192 96 c f
Q Q
showpage
%%Trailer
%%EOF
