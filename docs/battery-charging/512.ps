%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 60 384 325
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 60 384 325
384 384 cairo_set_page_size
%%EndPageSetup
q 0 60 384 265 rectclip
1 0 0 -1 0 384 cm q
0 g
230.039 61.633 m 234.867 64.445 237.117 70.215 235.465 75.551 c 208.246
 163.969 l 256.008 163.969 l 260.797 163.965 265.129 166.812 267.031 171.211
 c 268.93 175.609 268.031 180.715 264.742 184.199 c 136.727 320.207 l 132.902
 324.277 126.777 325.168 121.949 322.359 c 117.125 319.551 114.875 313.785
 116.52 308.449 c 143.762 220.008 l 96 220.008 l 91.211 220.012 86.879 217.164
 84.977 212.766 c 83.078 208.367 83.977 203.262 87.266 199.777 c 215.258
 63.77 l 219.078 59.695 225.211 58.797 230.039 61.609 c h
230.039 61.633 m f
48 96 m 151.969 96 l 129.41 120 l 48 120 l 41.637 120 35.531 122.527 31.031
 127.031 c 26.527 131.531 24 137.637 24 144 c 24 240 l 24 246.363 26.527
 252.469 31.031 256.969 c 35.531 261.473 41.637 264 48 264 c 105.121 264
 l 97.73 288 l 48 288 l 35.27 288 23.062 282.941 14.059 273.941 c 5.059 
264.938 0 252.73 0 240 c 0 144 l 0 131.27 5.059 119.062 14.059 110.059 c
 23.062 101.059 35.27 96 48 96 c f
48 144 m 106.801 144 l 69.793 183.336 l 62.051 191.566 58.621 202.953 60.531
 214.09 c 62.441 225.227 69.469 234.82 79.512 240 c 48 240 l h
254.281 96 m 246.891 120 l 288 120 l 294.363 120 300.469 122.527 304.969
 127.031 c 309.473 131.531 312 137.637 312 144 c 312 240 l 312 246.363 309.473
 252.469 304.969 256.969 c 300.469 261.473 294.363 264 288 264 c 222.625
 264 l 200.016 288 l 288 288 l 300.73 288 312.938 282.941 321.941 273.941
 c 330.941 264.938 336 252.73 336 240 c 336 144 l 336 131.27 330.941 119.062
 321.941 110.059 c 312.938 101.059 300.73 96 288 96 c h
254.281 96 m f
288 240 m 245.207 240 l 282.215 200.664 l 284.551 198.168 286.48 195.449
 288 192.504 c h
288 159.504 m 288 144 l 272.496 144 l 279.148 147.43 284.57 152.852 288
 159.504 c 384 192 m 384 201.547 380.207 210.703 373.457 217.457 c 366.703
 224.207 357.547 228 348 228 c 348 156 l 357.547 156 366.703 159.793 373.457
 166.543 c 380.207 173.297 384 182.453 384 192 c f
Q Q
showpage
%%Trailer
%%EOF
