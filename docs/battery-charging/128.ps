%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 15 96 82
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 15 96 82
96 96 cairo_set_page_size
%%EndPageSetup
q 0 15 96 67 rectclip
1 0 0 -1 0 96 cm q
0 g
57.512 15.406 m 58.719 16.109 59.277 17.555 58.867 18.887 c 52.062 40.992
 l 64.004 40.992 l 65.199 40.992 66.281 41.703 66.758 42.805 c 67.23 43.902
 67.008 45.18 66.188 46.051 c 34.184 80.055 l 34.184 80.051 l 33.227 81.07
 31.695 81.293 30.488 80.59 c 29.281 79.887 28.719 78.445 29.129 77.113 
c 35.941 55.004 l 24 55.004 l 22.801 55.004 21.719 54.289 21.246 53.191 
c 20.77 52.094 20.996 50.816 21.816 49.945 c 53.812 15.941 l 54.77 14.922
 56.301 14.699 57.512 15.402 c h
57.512 15.406 m f
12 24 m 37.992 24 l 32.352 30 l 12 30 l 8.688 30 6 32.688 6 36 c 6 60 l
 6 61.59 6.633 63.117 7.758 64.242 c 8.883 65.367 10.41 66 12 66 c 26.281
 66 l 24.434 72 l 12 72 l 5.371 72 0 66.629 0 60 c 0 36 l 0 29.371 5.371
 24 12 24 c f
12 36 m 26.699 36 l 17.449 45.836 l 15.512 47.891 14.656 50.738 15.133 
53.523 c 15.609 56.309 17.367 58.707 19.879 60 c 12 60 l h
63.57 24 m 61.723 30 l 72 30 l 73.59 30 75.117 30.633 76.242 31.758 c 77.367
 32.883 78 34.41 78 36 c 78 60 l 78 61.59 77.367 63.117 76.242 64.242 c 
75.117 65.367 73.59 66 72 66 c 55.656 66 l 50.004 72 l 72 72 l 75.184 72
 78.234 70.734 80.484 68.484 c 82.734 66.234 84 63.184 84 60 c 84 36 l 84
 32.816 82.734 29.766 80.484 27.516 c 78.234 25.266 75.184 24 72 24 c h
63.57 24 m f
72 60 m 61.301 60 l 70.555 50.164 l 71.141 49.539 71.621 48.859 72 48.125
 c h
72 39.875 m 72 36 l 68.125 36 l 69.789 36.859 71.141 38.211 72 39.875 c
 96 48 m 96 52.969 91.969 57 87 57 c 87 39 l 91.969 39 96 43.031 96 48 c
 f
Q Q
showpage
%%Trailer
%%EOF
