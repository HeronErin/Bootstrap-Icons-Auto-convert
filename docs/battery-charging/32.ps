%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 21
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 18 rectclip
1 0 0 -1 0 24 cm q
0 g
14.379 3.852 m 14.68 4.027 14.82 4.387 14.715 4.723 c 13.016 10.246 l 16
 10.246 l 16.301 10.246 16.57 10.426 16.688 10.699 c 16.809 10.977 16.75
 11.293 16.547 11.512 c 8.547 20.012 l 8.305 20.266 7.922 20.324 7.621 20.148
 c 7.32 19.973 7.18 19.613 7.281 19.277 c 8.984 13.75 l 6 13.75 l 5.699 
13.75 5.43 13.574 5.312 13.297 c 5.191 13.023 5.25 12.703 5.453 12.484 c
 13.453 3.984 l 13.691 3.73 14.074 3.676 14.379 3.852 c h
14.379 3.852 m f
3 6 m 9.496 6 l 8.086 7.5 l 3 7.5 l 2.172 7.5 1.5 8.172 1.5 9 c 1.5 15 
l 1.5 15.398 1.656 15.781 1.938 16.062 c 2.219 16.344 2.602 16.5 3 16.5 
c 6.57 16.5 l 6.109 18 l 3 18 l 1.344 18 0 16.656 0 15 c 0 9 l 0 7.344 1.344
 6 3 6 c f
3 9 m 6.676 9 l 4.363 11.457 l 3.879 11.973 3.664 12.684 3.781 13.379 c
 3.902 14.078 4.344 14.676 4.969 15 c 3 15 l h
15.891 6 m 15.43 7.5 l 18 7.5 l 18.398 7.5 18.781 7.656 19.062 7.938 c 
19.344 8.219 19.5 8.602 19.5 9 c 19.5 15 l 19.5 15.398 19.344 15.781 19.062
 16.062 c 18.781 16.344 18.398 16.5 18 16.5 c 13.914 16.5 l 12.5 18 l 18
 18 l 18.797 18 19.559 17.684 20.121 17.121 c 20.684 16.559 21 15.797 21
 15 c 21 9 l 21 8.203 20.684 7.441 20.121 6.879 c 19.559 6.316 18.797 6 
18 6 c h
15.891 6 m f
18 15 m 15.324 15 l 17.637 12.543 l 17.781 12.387 17.902 12.219 18 12.031
 c h
18 9.969 m 18 9 l 17.031 9 l 17.445 9.215 17.785 9.555 18 9.969 c 24 12
 m 24 13.242 22.992 14.25 21.75 14.25 c 21.75 9.75 l 22.992 9.75 24 10.758
 24 12 c f
Q Q
showpage
%%Trailer
%%EOF
