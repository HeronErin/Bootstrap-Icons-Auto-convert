%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
7.188 1.926 m 7.34 2.016 7.41 2.195 7.359 2.359 c 6.508 5.125 l 8 5.125
 l 8.148 5.125 8.285 5.215 8.344 5.352 c 8.402 5.488 8.375 5.648 8.273 5.758
 c 4.273 10.008 l 4.152 10.133 3.961 10.16 3.812 10.074 c 3.66 9.984 3.59
 9.805 3.641 9.641 c 4.492 6.875 l 3 6.875 l 2.852 6.875 2.715 6.785 2.656
 6.648 c 2.598 6.512 2.625 6.352 2.727 6.242 c 6.727 1.992 l 6.848 1.867
 7.039 1.836 7.188 1.926 c h
7.188 1.926 m f
1.5 3 m 4.75 3 l 4.047 3.75 l 1.5 3.75 l 1.086 3.75 0.75 4.086 0.75 4.5
 c 0.75 7.5 l 0.75 7.699 0.828 7.891 0.969 8.031 c 1.109 8.172 1.301 8.25
 1.5 8.25 c 3.285 8.25 l 3.055 9 l 1.5 9 l 0.672 9 0 8.328 0 7.5 c 0 4.5
 l 0 3.672 0.672 3 1.5 3 c f
1.5 4.5 m 3.336 4.5 l 2.18 5.73 l 1.938 5.988 1.832 6.344 1.891 6.691 c
 1.953 7.039 2.172 7.34 2.484 7.5 c 1.5 7.5 l h
7.945 3 m 7.715 3.75 l 9 3.75 l 9.199 3.75 9.391 3.828 9.531 3.969 c 9.672
 4.109 9.75 4.301 9.75 4.5 c 9.75 7.5 l 9.75 7.699 9.672 7.891 9.531 8.031
 c 9.391 8.172 9.199 8.25 9 8.25 c 6.957 8.25 l 6.25 9 l 9 9 l 9.398 9 9.781
 8.844 10.062 8.562 c 10.344 8.281 10.5 7.898 10.5 7.5 c 10.5 4.5 l 10.5
 4.102 10.344 3.719 10.062 3.438 c 9.781 3.156 9.398 3 9 3 c h
7.945 3 m f
9 7.5 m 7.664 7.5 l 8.82 6.27 l 8.895 6.191 8.953 6.105 9 6.016 c h
9 4.984 m 9 4.5 l 8.516 4.5 l 8.723 4.605 8.895 4.777 9 4.984 c 12 6 m 
12 6.621 11.496 7.125 10.875 7.125 c 10.875 4.875 l 11.496 4.875 12 5.379
 12 6 c f
Q Q
showpage
%%Trailer
%%EOF
