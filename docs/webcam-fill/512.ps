%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
159.457 266.258 m 161.707 263.961 164.785 262.664 168 262.656 c 216 262.656
 l 219.215 262.664 222.293 263.961 224.543 266.258 c 228.742 270.504 233.902
 274.586 239.016 278.16 c 244.797 282.184 250.824 285.84 257.062 289.105
 c 257.301 289.25 l 257.371 289.25 l 257.375 289.246 l 262.379 291.727 265.008
 297.328 263.727 302.758 c 262.441 308.191 257.582 312.023 252 312 c 132
 312 l 126.438 312 121.605 308.176 120.324 302.762 c 119.043 297.348 121.652
 291.766 126.625 289.273 c 126.672 289.25 l 126.91 289.105 l 128.652 288.227
 130.363 287.301 132.047 286.32 c 136.465 283.773 140.781 281.051 144.984
 278.16 c 150.121 274.559 155.258 270.504 159.457 266.258 c 168 156 m 168
 147.426 172.574 139.504 180 135.215 c 187.426 130.93 196.574 130.93 204
 135.215 c 211.426 139.504 216 147.426 216 156 c 216 164.574 211.426 172.496
 204 176.785 c 196.574 181.07 187.426 181.07 180 176.785 c 172.574 172.496
 168 164.574 168 156 c f
48 72 m 35.27 72 23.062 77.059 14.059 86.059 c 5.059 95.062 0 107.27 0 
120 c 0 192 l 0 204.73 5.059 216.938 14.059 225.941 c 23.062 234.941 35.27
 240 48 240 c 336 240 l 348.73 240 360.938 234.941 369.941 225.941 c 378.941
 216.938 384 204.73 384 192 c 384 120 l 384 107.27 378.941 95.062 369.941
 86.059 c 360.938 77.059 348.73 72 336 72 c h
192 108 m 209.148 108 224.996 117.148 233.57 132 c 242.145 146.852 242.145
 165.148 233.57 180 c 224.996 194.852 209.148 204 192 204 c 174.852 204 
159.004 194.852 150.43 180 c 141.855 165.148 141.855 146.852 150.43 132 
c 159.004 117.148 174.852 108 192 108 c 300 168 m 293.371 168 288 162.629
 288 156 c 288 149.371 293.371 144 300 144 c 306.629 144 312 149.371 312
 156 c 312 162.629 306.629 168 300 168 c f
Q Q
showpage
%%Trailer
%%EOF
