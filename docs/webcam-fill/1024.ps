%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
318.91 532.512 m 323.414 527.918 329.57 525.324 336 525.312 c 432 525.312
 l 438.43 525.324 444.586 527.918 449.09 532.512 c 457.488 541.008 467.809
 549.168 478.035 556.32 c 478.031 556.32 l 489.594 564.367 501.648 571.676
 514.129 578.207 c 514.609 578.496 l 514.754 578.496 l 521.277 581.73 525.98
 587.754 527.539 594.867 c 529.098 601.98 527.34 609.418 522.762 615.082
 c 518.184 620.75 511.281 624.027 504 624 c 264 624 l 256.742 624 249.871
 620.715 245.316 615.062 c 240.762 609.41 239.008 602 240.547 594.906 c 
242.09 587.812 246.758 581.797 253.246 578.543 c 253.344 578.496 l 253.824
 578.207 l 257.305 576.457 260.73 574.602 264.098 572.641 c 272.934 567.547
 281.562 562.102 289.969 556.32 c 300.242 549.121 310.512 541.008 318.914
 532.512 c 336 312 m 336 294.852 345.148 279.004 360 270.43 c 374.852 261.855
 393.148 261.855 408 270.43 c 422.852 279.004 432 294.852 432 312 c 432 
329.148 422.852 344.996 408 353.57 c 393.148 362.145 374.852 362.145 360
 353.57 c 345.148 344.996 336 329.148 336 312 c f
96 144 m 70.539 144 46.121 154.113 28.117 172.117 c 10.113 190.121 0 214.539
 0 240 c 0 384 l 0 409.461 10.113 433.879 28.117 451.883 c 46.121 469.887
 70.539 480 96 480 c 672 480 l 697.461 480 721.879 469.887 739.883 451.883
 c 757.887 433.879 768 409.461 768 384 c 768 240 l 768 214.539 757.887 190.121
 739.883 172.117 c 721.879 154.113 697.461 144 672 144 c h
384 216 m 418.297 216 449.988 234.297 467.137 264 c 484.289 293.703 484.289
 330.297 467.137 360 c 449.988 389.703 418.297 408 384 408 c 349.703 408
 318.012 389.703 300.863 360 c 283.711 330.297 283.711 293.703 300.863 264
 c 318.012 234.297 349.703 216 384 216 c 600 336 m 591.426 336 583.504 331.426
 579.215 324 c 574.93 316.574 574.93 307.426 579.215 300 c 583.504 292.574
 591.426 288 600 288 c 608.574 288 616.496 292.574 620.785 300 c 625.07 
307.426 625.07 316.574 620.785 324 c 616.496 331.426 608.574 336 600 336
 c f
Q Q
showpage
%%Trailer
%%EOF
