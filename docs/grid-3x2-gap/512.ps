%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 96 360 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 96 360 312
384 384 cairo_set_page_size
%%EndPageSetup
q 24 96 336 216 rectclip
1 0 0 -1 0 384 cm q
0 g
96 96 m 96 144 l 48 144 l 48 96 l h
120 264 m 120 216 l 120 209.637 117.473 203.531 112.969 199.031 c 108.469
 194.527 102.363 192 96 192 c 48 192 l 41.637 192 35.531 194.527 31.031 
199.031 c 26.527 203.531 24 209.637 24 216 c 24 264 l 24 270.363 26.527 
276.469 31.031 280.969 c 35.531 285.473 41.637 288 48 288 c 96 288 l 102.363
 288 108.469 285.473 112.969 280.969 c 117.473 276.469 120 270.363 120 264
 c 120 144 m 120 96 l 120 89.637 117.473 83.531 112.969 79.031 c 108.469
 74.527 102.363 72 96 72 c 48 72 l 41.637 72 35.531 74.527 31.031 79.031
 c 26.527 83.531 24 89.637 24 96 c 24 144 l 24 150.363 26.527 156.469 31.031
 160.969 c 35.531 165.473 41.637 168 48 168 c 96 168 l 102.363 168 108.469
 165.473 112.969 160.969 c 117.473 156.469 120 150.363 120 144 c 240 264
 m 240 216 l 240 209.637 237.473 203.531 232.969 199.031 c 228.469 194.527
 222.363 192 216 192 c 168 192 l 161.637 192 155.531 194.527 151.031 199.031
 c 146.527 203.531 144 209.637 144 216 c 144 264 l 144 270.363 146.527 276.469
 151.031 280.969 c 155.531 285.473 161.637 288 168 288 c 216 288 l 222.363
 288 228.469 285.473 232.969 280.969 c 237.473 276.469 240 270.363 240 264
 c 240 144 m 240 96 l 240 89.637 237.473 83.531 232.969 79.031 c 228.469
 74.527 222.363 72 216 72 c 168 72 l 161.637 72 155.531 74.527 151.031 79.031
 c 146.527 83.531 144 89.637 144 96 c 144 144 l 144 150.363 146.527 156.469
 151.031 160.969 c 155.531 165.473 161.637 168 168 168 c 216 168 l 222.363
 168 228.469 165.473 232.969 160.969 c 237.473 156.469 240 150.363 240 144
 c 216 96 m 216 144 l 168 144 l 168 96 l h
336 96 m 288 96 l 288 144 l 336 144 l h
96 216 m 96 264 l 48 264 l 48 216 l h
216 216 m 216 264 l 168 264 l 168 216 l h
336 216 m 336 264 l 288 264 l 288 216 l h
264 96 m 264 89.637 266.527 83.531 271.031 79.031 c 275.531 74.527 281.637
 72 288 72 c 336 72 l 342.363 72 348.469 74.527 352.969 79.031 c 357.473
 83.531 360 89.637 360 96 c 360 144 l 360 150.363 357.473 156.469 352.969
 160.969 c 348.469 165.473 342.363 168 336 168 c 288 168 l 281.637 168 275.531
 165.473 271.031 160.969 c 266.527 156.469 264 150.363 264 144 c h
288 192 m 281.637 192 275.531 194.527 271.031 199.031 c 266.527 203.531
 264 209.637 264 216 c 264 264 l 264 270.363 266.527 276.469 271.031 280.969
 c 275.531 285.473 281.637 288 288 288 c 336 288 l 342.363 288 348.469 285.473
 352.969 280.969 c 357.473 276.469 360 270.363 360 264 c 360 216 l 360 209.637
 357.473 203.531 352.969 199.031 c 348.469 194.527 342.363 192 336 192 c
 h
288 192 m f
Q Q
showpage
%%Trailer
%%EOF
