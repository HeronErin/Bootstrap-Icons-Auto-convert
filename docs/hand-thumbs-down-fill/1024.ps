%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 695 755
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 695 755
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 599 755 rectclip
1 0 0 -1 0 768 cm q
0 g
333.887 697.633 m 337.008 742.562 379.582 777.266 425.473 765.793 c 438
 762.672 l 449.488 759.977 460.051 754.262 468.59 746.121 c 477.129 737.977
 483.34 727.699 486.574 716.352 c 497.133 677.184 512.16 595.777 489.551
 499.871 c 496.109 500.832 503.199 501.648 510.816 502.32 c 545.039 505.441
 590.93 505.727 631.586 492.191 c 656.449 483.887 679.297 459.551 689.188
 431.137 c 689.184 431.137 l 699.199 403.215 695.008 372.172 677.953 347.902
 c 680.738 342.238 682.898 336.285 684.578 330.527 c 688.273 317.566 690.004
 303.262 690.004 289.438 c 690.004 275.516 688.277 261.309 684.578 248.301
 c 684.574 248.305 l 682.723 241.598 680.148 235.109 676.895 228.961 c 685.008
 210.387 682.031 189.602 676.75 173.809 c 676.754 173.809 l 671.312 158.246
 663.402 143.656 653.328 130.609 c 655.922 123.266 656.977 115.586 656.977
 108.289 c 656.77 92.895 652.586 77.812 644.832 64.512 c 628.801 36.336 
596.977 13.441 552 13.441 c 384 13.441 l 354.961 13.441 332.641 17.281 313.633
 23.855 c 297.281 29.832 281.664 37.641 267.07 47.137 c 264.766 48.527 l
 240.574 63.312 216.812 77.809 165.5 83.23 c 128.734 87.121 96 116.832 96
 157.391 c 96 349.391 l 96 390.238 128.879 418.176 161.137 426.957 c 201.891
 438.094 236.688 464.734 263.473 494.637 c 290.352 524.684 307.344 556.078
 313.344 573.262 c 322.895 600.863 330.434 647.184 333.887 697.629 c f
Q Q
showpage
%%Trailer
%%EOF
