%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.609 5.449 m 2.633 5.801 2.965 6.07 3.324 5.98 c 3.422 5.957 l 3.605 5.914
 3.75 5.777 3.801 5.598 c 3.883 5.293 4 4.656 3.824 3.906 c 3.875 3.914 
3.93 3.922 3.992 3.926 c 4.258 3.949 4.617 3.953 4.938 3.848 c 5.133 3.781
 5.309 3.594 5.387 3.371 c 5.383 3.367 l 5.461 3.148 5.43 2.906 5.297 2.719
 c 5.32 2.676 5.336 2.629 5.348 2.582 c 5.375 2.48 5.391 2.367 5.391 2.262
 c 5.391 2.152 5.379 2.043 5.348 1.941 c 5.332 1.887 5.312 1.836 5.289 1.789
 c 5.352 1.645 5.328 1.48 5.289 1.359 c 5.246 1.234 5.184 1.121 5.105 1.02
 c 5.125 0.961 5.133 0.902 5.133 0.844 c 5.133 0.848 l 5.133 0.727 5.098
 0.609 5.039 0.504 c 4.914 0.285 4.664 0.105 4.312 0.105 c 3 0.105 l 2.773
 0.105 2.598 0.137 2.449 0.188 c 2.324 0.234 2.199 0.293 2.086 0.367 c 2.066
 0.379 l 1.879 0.496 1.691 0.609 1.289 0.648 c 1.004 0.68 0.75 0.914 0.75
 1.23 c 0.75 2.73 l 0.75 3.051 1.008 3.27 1.258 3.336 c 1.578 3.422 1.848
 3.633 2.059 3.863 c 2.27 4.098 2.402 4.344 2.449 4.477 c 2.523 4.691 2.582
 5.055 2.609 5.449 c f
Q Q
showpage
%%Trailer
%%EOF
