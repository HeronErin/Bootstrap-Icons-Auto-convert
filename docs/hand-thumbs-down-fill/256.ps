%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 174 189
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 174 189
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 150 189 rectclip
1 0 0 -1 0 192 cm q
0 g
83.473 174.406 m 84.254 185.637 94.898 194.312 106.367 191.445 c 109.5 
190.664 l 109.5 190.668 l 112.371 189.996 115.012 188.566 117.148 186.531
 c 119.281 184.496 120.836 181.926 121.645 179.09 c 124.285 169.297 128.039
 148.945 122.387 124.969 c 124.027 125.207 125.797 125.414 127.703 125.582
 c 136.258 126.363 147.73 126.434 157.895 123.051 c 164.109 120.977 169.824
 114.891 172.293 107.785 c 172.297 107.785 l 174.801 100.805 173.754 93.043
 169.488 86.977 c 170.184 85.562 170.723 84.074 171.145 82.633 c 172.07 
79.395 172.5 75.816 172.5 72.359 c 172.5 68.879 172.066 65.328 171.145 62.074
 c 170.68 60.398 170.039 58.777 169.223 57.238 c 171.25 52.594 170.508 47.398
 169.188 43.449 c 169.188 43.453 l 167.828 39.562 165.852 35.914 163.332
 32.652 c 163.98 30.816 164.242 28.895 164.242 27.074 c 164.242 27.07 l 
164.191 23.223 163.148 19.453 161.207 16.129 c 157.199 9.086 149.242 3.359
 138 3.359 c 96 3.359 l 88.738 3.359 83.16 4.32 78.406 5.965 c 74.32 7.457
 70.414 9.41 66.77 11.785 c 66.195 12.133 l 60.148 15.828 54.207 19.453 
41.379 20.809 c 32.184 21.781 24 29.207 24 39.348 c 24 87.348 l 24 97.559
 32.219 104.543 40.285 106.738 c 50.473 109.523 59.172 116.184 65.871 123.66
 c 72.59 131.172 76.84 139.02 78.34 143.316 c 80.727 150.215 82.613 161.797
 83.477 174.41 c f
Q Q
showpage
%%Trailer
%%EOF
