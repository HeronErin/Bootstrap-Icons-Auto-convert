%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1390 1510
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1390 1510
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1198 1510 rectclip
1 0 0 -1 0 1536 cm q
0 g
667.777 1395.266 m 674.016 1485.121 759.168 1554.531 850.945 1531.586 c
 876 1525.348 l 876 1525.344 l 898.977 1519.957 920.098 1508.527 937.18 
1492.242 c 954.258 1475.953 966.68 1455.398 973.152 1432.703 c 994.273 1354.367
 1024.32 1191.551 979.105 999.742 c 992.227 1001.664 1006.402 1003.293 1021.633
 1004.637 c 1090.082 1010.875 1181.855 1011.453 1263.168 984.379 c 1312.895
 967.77 1358.594 919.098 1378.367 862.266 c 1378.367 862.273 l 1388.238 
834.754 1391.348 805.27 1387.438 776.301 c 1383.527 747.332 1372.715 719.723
 1355.902 695.809 c 1361.469 684.48 1365.789 672.578 1369.148 661.055 c 
1376.539 635.133 1379.996 606.527 1379.996 578.879 c 1379.996 551.039 1376.539
 522.621 1369.148 496.605 c 1369.152 496.609 l 1365.449 483.195 1360.301
 470.223 1353.793 457.922 c 1370.016 420.77 1364.066 379.203 1353.504 347.617
 c 1342.625 316.488 1326.809 287.316 1306.656 261.215 c 1311.84 246.527 
1313.953 231.168 1313.953 216.574 c 1313.539 185.785 1305.172 155.625 1289.664
 129.023 c 1257.602 72.672 1193.953 26.879 1104 26.879 c 768 26.879 l 709.922
 26.879 665.281 34.559 627.266 47.711 c 594.566 59.664 563.324 75.285 534.145
 94.273 c 529.535 97.059 l 481.152 126.625 433.633 155.617 331.008 166.465
 c 257.473 174.238 192 233.664 192 314.785 c 192 698.785 l 192 780.48 257.762
 836.352 322.273 853.922 c 403.777 876.195 473.379 929.473 526.945 989.281
 c 580.707 1049.379 614.688 1112.16 626.688 1146.527 c 645.793 1201.727 
660.863 1294.367 667.777 1395.262 c f
Q Q
showpage
%%Trailer
%%EOF
