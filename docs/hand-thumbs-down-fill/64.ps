%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 44 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 44 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 38 48 rectclip
1 0 0 -1 0 48 cm q
0 g
20.867 43.602 m 21.062 46.41 23.723 48.578 26.59 47.863 c 27.371 47.668
 l 27.375 47.668 l 28.836 47.324 30 46.215 30.41 44.773 c 31.07 42.324 32.008
 37.238 30.598 31.242 c 31.008 31.301 31.449 31.352 31.926 31.395 c 34.066
 31.59 36.934 31.609 39.473 30.762 c 41.027 30.242 42.453 28.723 43.074 
26.945 c 43.699 25.199 43.438 23.262 42.371 21.742 c 42.547 21.387 42.68
 21.016 42.785 20.656 c 43.016 19.848 43.125 18.953 43.125 18.09 c 43.125
 17.219 43.016 16.332 42.785 15.52 c 42.672 15.102 42.508 14.695 42.305 
14.309 c 42.812 13.148 42.625 11.848 42.297 10.863 c 41.957 9.891 41.461
 8.98 40.832 8.164 c 40.992 7.703 41.059 7.227 41.059 6.77 c 41.062 6.77
 l 41.047 5.805 40.785 4.863 40.301 4.031 c 39.301 2.27 37.312 0.84 34.5
 0.84 c 24 0.84 l 22.184 0.84 20.789 1.078 19.602 1.492 c 18.582 1.863 17.605
 2.352 16.691 2.945 c 16.547 3.031 l 15.035 3.957 13.551 4.859 10.344 5.199
 c 8.047 5.445 6 7.301 6 9.836 c 6 21.836 l 6 24.391 8.055 26.137 10.07 
26.684 c 12.617 27.379 14.793 29.043 16.465 30.914 c 18.145 32.793 19.207
 34.754 19.582 35.828 c 20.18 37.555 20.648 40.449 20.867 43.602 c f
Q Q
showpage
%%Trailer
%%EOF
