%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 87 95
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 87 95
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 75 95 rectclip
1 0 0 -1 0 96 cm q
0 g
41.734 87.203 m 42.125 92.82 47.445 97.156 53.184 95.723 c 54.75 95.332
 l 54.75 95.336 l 57.676 94.648 59.996 92.434 60.82 89.543 c 62.141 84.648
 64.02 74.473 61.191 62.484 c 62.012 62.605 62.898 62.707 63.848 62.789 
c 68.125 63.18 73.863 63.215 78.945 61.523 c 82.055 60.484 84.91 57.445 
86.145 53.891 c 86.148 53.891 l 87.398 50.402 86.875 46.52 84.742 43.488
 c 85.09 42.781 85.359 42.035 85.57 41.316 c 86.031 39.695 86.25 37.91 86.25
 36.18 c 86.25 34.441 86.035 32.664 85.57 31.039 c 85.34 30.199 85.02 29.391
 84.613 28.621 c 85.629 26.301 85.254 23.699 84.594 21.727 c 83.914 19.781
 82.926 17.957 81.664 16.324 c 81.988 15.406 82.121 14.445 82.121 13.535
 c 82.098 11.613 81.574 9.727 80.605 8.062 c 78.602 4.543 74.621 1.68 69
 1.68 c 48 1.68 l 44.371 1.68 41.578 2.16 39.203 2.98 c 37.16 3.73 35.207
 4.707 33.383 5.891 c 33.094 6.066 l 30.07 7.914 27.102 9.727 20.688 10.406
 c 16.094 10.891 12 14.605 12 19.676 c 12 43.676 l 12 48.781 16.109 52.273
 20.141 53.371 c 25.234 54.762 29.586 58.094 32.934 61.832 c 36.293 65.59
 38.418 69.512 39.168 71.66 c 40.363 75.109 41.305 80.898 41.734 87.207 
c f
Q Q
showpage
%%Trailer
%%EOF
