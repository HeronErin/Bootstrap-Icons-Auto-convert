%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 187
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 187
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 187 rectclip
1 0 0 -1 0 192 cm q
0 g
52.262 6.266 m 55.426 5.305 58.773 7.094 59.734 10.262 c 63.227 21.734 
l 63.227 21.73 l 72.977 15.379 84.363 11.996 96 12 c 108.086 12 119.352 
15.574 128.773 21.73 c 132.254 10.258 l 132.254 10.262 l 132.703 8.727 133.75
 7.438 135.156 6.68 c 136.566 5.918 138.215 5.754 139.746 6.219 c 141.277
 6.68 142.559 7.734 143.309 9.148 c 144.055 10.559 144.211 12.215 143.734
 13.738 c 138.812 29.961 l 138.816 29.965 l 149.832 41.184 156 56.277 156
 72 c 162 72 l 163.59 72 165.117 71.367 166.242 70.242 c 167.367 69.117 
168 67.59 168 66 c 168 60 l 168 56.688 170.688 54 174 54 c 177.312 54 180
 56.688 180 60 c 180 66 l 180 70.773 178.105 75.352 174.727 78.727 c 171.352
 82.105 166.773 84 162 84 c 156 84 l 156 96 l 174 96 l 177.312 96 180 98.688
 180 102 c 180 105.312 177.312 108 174 108 c 156 108 l 156 120 l 162 120
 l 166.773 120 171.352 121.895 174.727 125.273 c 178.105 128.648 180 133.227
 180 138 c 180 144 l 180 147.312 177.312 150 174 150 c 170.688 150 168 147.312
 168 144 c 168 138 l 168 136.41 167.367 134.883 166.242 133.758 c 165.117
 132.633 163.59 132 162 132 c 156 132 l 156 153.438 144.562 173.242 126 
183.961 c 107.438 194.68 84.562 194.68 66 183.961 c 47.438 173.242 36 153.438
 36 132 c 30 132 l 26.688 132 24 134.688 24 138 c 24 144 l 24 147.312 21.312
 150 18 150 c 14.688 150 12 147.312 12 144 c 12 138 l 12 133.227 13.895 
128.648 17.273 125.273 c 20.648 121.895 25.227 120 30 120 c 36 120 l 36 
108 l 18 108 l 14.688 108 12 105.312 12 102 c 12 98.688 14.688 96 18 96 
c 36 96 l 36 84 l 30 84 l 25.227 84 20.648 82.105 17.273 78.727 c 13.895
 75.352 12 70.773 12 66 c 12 60 l 12 56.688 14.688 54 18 54 c 21.312 54 
24 56.688 24 60 c 24 66 l 24 67.59 24.633 69.117 25.758 70.242 c 26.883 
71.367 28.41 72 30 72 c 36 72 l 36 55.633 42.562 40.789 53.184 29.965 c 
48.262 13.742 l 48.266 13.738 l 47.305 10.574 49.094 7.227 52.262 6.266 
c 48 84 m 48 132 l 47.996 143.695 52.262 154.988 59.996 163.758 c 67.727
 172.531 78.398 178.18 90 179.641 c 90 84 l h
102 84 m 102 179.641 l 113.602 178.18 124.273 172.531 132.004 163.758 c
 139.738 154.988 144.004 143.695 144 132 c 144 84 l h
144 72 m 144 58.336 138.176 45.32 127.992 36.215 c 119.203 28.328 107.809
 23.977 96 24 c 84.188 23.973 72.785 28.328 63.996 36.215 c 53.816 45.324
 47.996 58.34 48 72 c h
144 72 m f
Q Q
showpage
%%Trailer
%%EOF
