%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 384 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 384 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 384 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 119.809 m 946.273 119.809 1106.496 181.344 1214.398 292.031 c 1303.156
 303.688 1386.887 339.934 1456.129 396.672 c 1335.07 142.273 1084.32 0 768
 0 c 456 0 203.52 142.078 81.023 395.711 c 144.504 344.016 220.148 309.418
 300.77 295.199 c 406.656 179.711 573.504 119.809 768 119.809 c f
1152 1152 m 1052.133 1151.996 956.199 1113.082 884.543 1043.52 c 884.352
 1043.328 l 876.082 1037.105 867.207 1031.734 857.855 1027.297 c 829.684
 1014.348 799.004 1007.758 768 1008 c 728.258 1008 698.016 1017.887 678.238
 1027.297 c 668.855 1031.727 659.949 1037.098 651.648 1043.328 c 651.457
 1043.52 l 591.035 1102.176 513.012 1139.344 429.395 1149.305 c 345.777 
1159.266 261.203 1141.461 188.699 1098.637 c 116.191 1055.816 59.77 990.344
 28.125 912.309 c -3.52 834.273 -8.637 748 13.562 666.77 c 35.762 585.539
 84.043 513.859 150.98 462.766 c 217.918 411.672 299.793 383.996 384 384
 c 1152 384 l 1253.844 384 1351.516 424.457 1423.527 496.473 c 1495.543 
568.484 1536 666.156 1536 768 c 1536 869.844 1495.543 967.516 1423.527 1039.527
 c 1351.516 1111.543 1253.844 1152 1152 1152 c f
Q Q
showpage
%%Trailer
%%EOF
