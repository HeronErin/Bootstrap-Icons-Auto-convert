%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 100 768 746
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 100 768 746
768 768 cairo_set_page_size
%%EndPageSetup
q 0 100 768 646 rectclip
1 0 0 -1 0 768 cm q
0 g
384 276 m 450.625 276 512.305 285.266 557.23 294.48 c 580.336 299.203 603.234
 304.875 625.871 311.473 c 631.246 313.105 l 631.344 313.152 l 631.391 313.152
 l 639.555 315.793 645.688 322.59 647.484 330.977 c 649.277 339.367 646.461
 348.078 640.09 353.824 c 633.723 359.574 624.77 361.488 616.609 358.848
 c 616.418 358.75 l 615.555 358.512 l 615.551 358.512 l 593.133 351.875 
570.441 346.207 547.535 341.52 c 493.738 330.281 438.957 324.414 384 324
 c 329.027 324.41 274.23 330.281 220.414 341.52 c 197.527 346.207 174.852
 351.879 152.449 358.512 c 151.586 358.75 l 151.441 358.797 l 151.441 358.801
 l 145.293 361.148 138.453 360.871 132.52 358.031 c 126.586 355.191 122.074
 350.039 120.047 343.781 c 118.016 337.523 118.645 330.707 121.785 324.926
 c 124.926 319.145 130.301 314.906 136.656 313.199 c 216.754 288.383 300.148
 275.84 384 276 c f
250.992 130.656 m 244.945 152.785 241.871 176.016 240.336 196.656 c 173.09
 205.969 113.137 222.145 71.137 245.23 c -30.91 301.344 1.727 537.793 18.863
 630.098 c 20.91 640.641 26.602 650.129 34.938 656.902 c 43.273 663.676 
53.723 667.305 64.465 667.152 c 703.535 667.152 l 714.277 667.305 724.727
 663.676 733.062 656.902 c 741.398 650.129 747.09 640.641 749.137 630.098
 c 766.273 537.793 798.914 301.297 696.816 245.234 c 654.914 222.195 594.914
 205.969 527.664 196.66 c 527.664 196.656 l 526.195 174.371 522.629 152.273
 517.008 130.656 c 509.23 102.191 495.648 71.711 470.398 52.801 c 416.879
 12.672 351.117 12.672 297.598 52.801 c 272.352 71.711 258.719 102.242 250.988
 130.656 c 441.602 91.199 m 454.082 100.559 463.969 118.559 470.691 143.277
 c 474.914 158.734 477.508 175.293 478.996 191.18 c 478.992 191.184 l 415.777
 185.797 352.223 185.797 289.008 191.184 c 290.422 175.012 293.199 158.984
 297.312 143.281 c 304.031 118.562 313.922 100.562 326.402 91.203 c 362.883
 63.844 405.121 63.844 441.602 91.203 c 384 235.199 m 502.801 235.199 614.062
 254.496 673.727 287.277 c 685.152 293.516 696.383 306.766 705.168 331.918
 c 713.953 356.973 718.609 389.277 719.711 425.613 c 721.969 496.941 710.641
 573.836 702.336 619.148 c 65.664 619.152 l 57.359 573.84 46.031 496.992
 48.289 425.617 c 49.441 389.281 54.051 356.977 62.832 331.922 c 71.617 
306.77 82.848 293.523 94.273 287.281 c 153.938 254.496 265.199 235.199 384
 235.199 c f
Q Q
showpage
%%Trailer
%%EOF
