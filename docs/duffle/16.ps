%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 11 rectclip
1 0 0 -1 0 12 cm q
0 g
6 4.312 m 7.039 4.312 8.004 4.457 8.707 4.602 c 9.066 4.676 9.426 4.762
 9.777 4.867 c 9.863 4.895 l 9.867 4.895 l 10.062 4.957 10.172 5.168 10.105
 5.367 c 10.043 5.562 9.832 5.672 9.633 5.605 c 9.629 5.605 l 9.617 5.602
 l 9.27 5.5 8.914 5.41 8.555 5.336 c 7.715 5.16 6.859 5.07 6 5.062 c 5.141
 5.07 4.285 5.16 3.445 5.336 c 3.086 5.41 2.73 5.5 2.383 5.602 c 2.371 5.605
 l 2.367 5.605 l 2.27 5.645 2.164 5.637 2.07 5.594 c 1.977 5.551 1.906 5.469
 1.875 5.371 c 1.844 5.273 1.855 5.168 1.902 5.078 c 1.953 4.988 2.035 4.922
 2.137 4.895 c 3.387 4.508 4.691 4.309 6 4.312 c f
3.922 2.043 m 3.828 2.391 3.781 2.75 3.754 3.074 c 2.703 3.219 1.766 3.473
 1.109 3.832 c -0.484 4.707 0.027 8.402 0.293 9.844 c 0.359 10.184 0.66 
10.43 1.008 10.426 c 10.992 10.426 l 11.34 10.43 11.641 10.184 11.707 9.844
 c 11.977 8.402 12.484 4.707 10.891 3.832 c 10.234 3.473 9.297 3.219 8.246
 3.074 c 8.223 2.723 8.168 2.379 8.078 2.043 c 7.957 1.598 7.746 1.121 7.352
 0.828 c 6.516 0.199 5.488 0.199 4.652 0.828 c 4.258 1.125 4.043 1.602 3.926
 2.043 c 6.898 1.426 m 7.094 1.57 7.246 1.852 7.352 2.238 c 7.418 2.48 7.457
 2.738 7.48 2.988 c 7.484 2.988 l 6.496 2.902 5.504 2.902 4.516 2.988 c 
4.539 2.734 4.582 2.484 4.645 2.238 c 4.75 1.852 4.902 1.57 5.098 1.426 
c 5.668 1 6.328 1 6.898 1.426 c 6 3.676 m 7.855 3.676 9.594 3.977 10.527
 4.488 c 10.707 4.586 10.883 4.793 11.02 5.188 c 11.156 5.578 11.23 6.082
 11.246 6.652 c 11.281 7.766 11.105 8.969 10.973 9.676 c 1.027 9.676 l 0.898
 8.969 0.719 7.766 0.754 6.652 c 0.773 6.086 0.844 5.578 0.98 5.188 c 1.117
 4.793 1.293 4.586 1.473 4.488 c 2.406 3.977 4.145 3.676 6 3.676 c f
Q Q
showpage
%%Trailer
%%EOF
