%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 2.156 m 3.52 2.156 4.004 2.23 4.352 2.301 c 4.535 2.336 4.711 2.383 4.891
 2.434 c 4.934 2.445 l 5.172 2.523 5.055 2.879 4.816 2.805 c 4.809 2.805
 l 4.809 2.801 l 4.633 2.75 4.457 2.703 4.277 2.668 c 3.855 2.582 3.43 2.535
 3 2.531 c 2.57 2.535 2.141 2.582 1.723 2.668 c 1.543 2.703 1.367 2.75 1.191
 2.801 c 1.184 2.801 l 1.184 2.805 l 1.082 2.84 0.973 2.789 0.938 2.688 
c 0.906 2.582 0.965 2.477 1.066 2.445 c 1.695 2.254 2.344 2.156 3 2.156 
c f
1.961 1.02 m 1.914 1.191 1.891 1.375 1.879 1.535 c 1.355 1.609 0.887 1.734
 0.559 1.914 c -0.242 2.355 0.012 4.203 0.148 4.922 c 0.18 5.094 0.332 5.215
 0.504 5.211 c 5.496 5.211 l 5.668 5.215 5.82 5.094 5.852 4.922 c 5.984 
4.199 6.242 2.352 5.441 1.914 c 5.113 1.734 4.645 1.605 4.121 1.535 c 4.109
 1.363 4.082 1.191 4.039 1.02 c 3.977 0.797 3.871 0.559 3.676 0.41 c 3.258
 0.098 2.742 0.098 2.324 0.41 c 2.129 0.559 2.02 0.797 1.961 1.02 c 3.449
 0.711 m 3.547 0.785 3.625 0.926 3.676 1.117 c 3.707 1.238 3.73 1.367 3.742
 1.492 c 3.25 1.453 2.75 1.453 2.258 1.492 c 2.27 1.367 2.289 1.242 2.324
 1.121 c 2.375 0.93 2.453 0.789 2.551 0.715 c 2.836 0.5 3.164 0.5 3.449 
0.715 c 3 1.836 m 3.93 1.836 4.797 1.988 5.262 2.242 c 5.352 2.289 5.438
 2.395 5.508 2.59 c 5.578 2.785 5.613 3.039 5.621 3.32 c 5.641 3.879 5.551
 4.477 5.484 4.832 c 0.512 4.836 l 0.445 4.48 0.359 3.883 0.375 3.324 c 
0.383 3.039 0.422 2.789 0.488 2.594 c 0.559 2.398 0.645 2.293 0.734 2.246
 c 1.203 1.988 2.07 1.836 3 1.836 c f
Q Q
showpage
%%Trailer
%%EOF
