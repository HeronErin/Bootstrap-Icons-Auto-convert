%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 6 3 181 145
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 6 3 181 145
192 192 cairo_set_page_size
%%EndPageSetup
q 6 3 175 142 rectclip
1 0 0 -1 0 192 cm q
0 g
98.605 132.816 m 113.199 132.816 121.98 122.387 121.98 105.098 c 121.98
 96.672 l 121.98 79.391 113.258 69.012 98.832 69.012 c 89.93 69.012 82.895
 73.176 80.844 79.68 c 80.086 79.68 l 80.09 47.797 l 64.609 47.797 l 64.609
 132 l 79.848 132 l 79.848 122.508 l 80.617 122.508 l 83.137 128.891 89.93
 132.828 98.605 132.828 c h
93.445 120.516 m 85.523 120.516 80.09 114.301 80.09 105.156 c 80.09 97.441
 l 80.09 87.543 85.129 81.324 93.266 81.324 c 101.473 81.324 106.164 87.539
 106.164 98.316 c 106.164 103.715 l 106.164 114.371 101.531 120.527 93.445
 120.527 c h
26.449 132.938 m 35.652 132.938 40.859 128.664 43.32 124.094 c 44.027 124.094
 l 44.027 132 l 58.621 132 l 58.621 90.227 l 58.621 74.457 47.258 68.832
 33.301 68.832 c 16.262 68.832 9 77.039 8.281 87.238 c 22.875 87.238 l 23.645
 83.363 26.633 80.613 32.953 80.613 c 39.277 80.613 43.32 83.602 43.32 89.867
 c 43.32 95.434 l 28.152 95.438 l 13.738 95.438 6 102.816 6 113.953 c 6 
125.676 14.316 132.938 26.449 132.938 c 31.488 121.574 m 26.207 121.574 
21.348 118.754 21.348 112.957 c 21.348 108.219 24.574 104.75 31.426 104.75
 c 43.316 104.75 l 43.316 111.207 l 43.316 117.242 37.988 121.574 31.484
 121.574 c 138.25 128.379 m 131.324 123.578 127.449 115.324 127.449 104.582
 c 127.449 96.781 l 127.449 79.742 138.176 68.727 155.109 68.727 c 171.332
 68.727 180.539 78.566 180.777 90.398 c 166.535 90.398 l 166.055 86.188 
163.141 81.086 155.52 81.086 c 147.43 81.086 142.98 87.289 142.98 97.023
 c 142.98 104.523 l 142.98 110.141 144.434 114.531 147.098 117.328 c h
138.25 128.379 m f
173.629 112.969 m 175.496 114.461 176.691 116.633 176.953 119.008 c 177.219
 121.383 176.527 123.766 175.031 125.629 c 127.031 185.629 l 125.43 187.625
 123.055 188.848 120.5 188.988 c 117.945 189.125 115.449 188.172 113.641
 186.359 c 83.641 156.359 l 81.852 154.695 80.82 152.375 80.777 149.934 
c 80.734 147.492 81.684 145.137 83.41 143.41 c 85.137 141.684 87.492 140.734
 89.934 140.777 c 92.375 140.82 94.695 141.852 96.359 143.641 c 119.254 
166.523 l 160.965 114.371 l 160.969 114.371 l 162.461 112.504 164.633 111.309
 167.008 111.047 c 169.383 110.781 171.766 111.473 173.629 112.969 c f
Q Q
showpage
%%Trailer
%%EOF
