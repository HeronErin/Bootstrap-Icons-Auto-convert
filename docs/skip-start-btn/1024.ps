%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
466.078 244.465 m 470.887 241.039 476.789 239.508 482.656 240.164 c 488.523
 240.816 493.941 243.609 497.879 248.004 c 501.816 252.402 503.996 258.098
 504 264 c 504 504 l 503.996 509.902 501.816 515.598 497.879 519.996 c 493.941
 524.391 488.523 527.184 482.656 527.836 c 476.789 528.492 470.887 526.961
 466.078 523.535 c 336 430.656 l 336 504 l 336 512.574 331.426 520.496 324
 524.785 c 316.574 529.07 307.426 529.07 300 524.785 c 292.574 520.496 288
 512.574 288 504 c 288 264 l 288 255.426 292.574 247.504 300 243.215 c 307.426
 238.93 316.574 238.93 324 243.215 c 331.426 247.504 336 255.426 336 264
 c 336 337.344 l h
466.078 244.465 m f
0 192 m 0 166.539 10.113 142.121 28.117 124.117 c 46.121 106.113 70.539
 96 96 96 c 672 96 l 697.461 96 721.879 106.113 739.883 124.117 c 757.887
 142.121 768 166.539 768 192 c 768 576 l 768 601.461 757.887 625.879 739.883
 643.883 c 721.879 661.887 697.461 672 672 672 c 96 672 l 70.539 672 46.121
 661.887 28.117 643.883 c 10.113 625.879 0 601.461 0 576 c h
720 192 m 720 179.27 714.941 167.062 705.941 158.059 c 696.938 149.059 
684.73 144 672 144 c 96 144 l 83.27 144 71.062 149.059 62.059 158.059 c 
53.059 167.062 48 179.27 48 192 c 48 576 l 48 588.73 53.059 600.938 62.059
 609.941 c 71.062 618.941 83.27 624 96 624 c 672 624 l 684.73 624 696.938
 618.941 705.941 609.941 c 714.941 600.938 720 588.73 720 576 c h
720 192 m f
Q Q
showpage
%%Trailer
%%EOF
