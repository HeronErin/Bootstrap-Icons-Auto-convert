%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.867 3.676 m 2.125 3.676 l 2.238 3.676 2.332 3.699 2.406 3.746 c 2.48 
3.793 2.535 3.863 2.57 3.961 c 2.605 4.055 2.625 4.172 2.625 4.312 c 2.625
 4.418 2.613 4.512 2.594 4.59 c 2.574 4.668 2.543 4.734 2.504 4.789 c 2.461
 4.844 2.41 4.883 2.348 4.906 c 2.277 4.934 2.199 4.949 2.125 4.945 c 1.867
 4.945 l h
1.867 3.676 m f
0.375 0.75 m 0.375 0.336 0.711 0 1.125 0 c 3.375 0 l 3.574 0 3.766 0.078
 3.906 0.219 c 4.047 0.359 4.125 0.551 4.125 0.75 c 4.125 3.75 l 4.324 3.75
 4.516 3.828 4.656 3.969 c 4.797 4.109 4.875 4.301 4.875 4.5 c 4.875 4.688
 l 4.875 4.938 5.25 4.938 5.25 4.688 c 5.25 3 l 5.062 3 l 4.957 3 4.875 
2.918 4.875 2.812 c 4.875 1.641 l 4.875 1.535 4.957 1.453 5.062 1.453 c 
5.625 1.453 l 5.621 1.273 5.605 1.117 5.551 0.996 c 5.547 0.996 l 5.52 0.922
 5.465 0.863 5.398 0.824 c 5.328 0.781 5.223 0.75 5.062 0.75 c 4.812 0.75
 4.812 0.375 5.062 0.375 c 5.273 0.375 5.449 0.418 5.594 0.5 c 5.738 0.586
 5.832 0.707 5.891 0.84 c 6 1.086 6 1.391 6 1.621 c 6 2.812 l 6 2.918 5.918
 3 5.812 3 c 5.625 3 l 5.625 4.688 l 5.625 5 5.375 5.25 5.062 5.25 c 4.75
 5.25 4.5 5 4.5 4.688 c 4.5 4.5 l 4.5 4.402 4.461 4.305 4.391 4.234 c 4.32
 4.164 4.223 4.125 4.125 4.125 c 4.125 5.625 l 4.312 5.625 l 4.562 5.625
 4.562 6 4.312 6 c 0.188 6 l -0.062 6 -0.062 5.625 0.188 5.625 c 0.375 5.625
 l h
1.125 0.938 m 1.125 2.812 l 1.125 2.918 1.207 3 1.312 3 c 3.188 3 l 3.293
 3 3.375 2.918 3.375 2.812 c 3.375 0.938 l 3.375 0.832 3.293 0.75 3.188 
0.75 c 1.312 0.75 l 1.207 0.75 1.125 0.832 1.125 0.938 c 1.5 3.375 m 1.5
 5.25 l 2.172 5.25 l 2.359 5.25 2.512 5.211 2.633 5.137 c 2.754 5.062 2.848
 4.957 2.906 4.812 c 2.969 4.676 3 4.504 3 4.309 c 3 4.113 2.969 3.945 2.91
 3.805 c 2.855 3.672 2.762 3.559 2.637 3.484 c 2.516 3.41 2.359 3.375 2.172
 3.375 c h
1.5 3.375 m f
Q Q
showpage
%%Trailer
%%EOF
