%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
108.961 3.504 m 111.207 1.262 114.254 0 117.434 0 c 266.57 0 l 266.566 
0 l 269.746 0 272.793 1.262 275.039 3.504 c 380.496 108.961 l 382.738 111.207
 384 114.254 384 117.434 c 384 266.57 l 384 266.566 l 384 269.746 382.738
 272.793 380.496 275.039 c 275.039 380.496 l 272.793 382.738 269.746 384
 266.566 384 c 117.434 384 l 114.254 384 111.207 382.738 108.961 380.496
 c 3.504 275.039 l 1.262 272.793 0 269.746 0 266.566 c 0 117.434 l 0 114.254
 1.262 111.207 3.504 108.961 c h
122.398 24 m 24 122.398 l 24 261.598 l 122.398 360 l 261.598 360 l 359.996
 261.602 l 360 122.398 l 261.602 24 l h
122.398 24 m f
168.047 264 m 168.047 255.426 172.621 247.504 180.047 243.215 c 187.473
 238.93 196.621 238.93 204.047 243.215 c 211.473 247.504 216.047 255.426
 216.047 264 c 216.047 272.574 211.473 280.496 204.047 284.785 c 196.621
 289.07 187.473 289.07 180.047 284.785 c 172.621 280.496 168.047 272.574
 168.047 264 c 170.398 119.879 m 169.754 113.758 171.738 107.648 175.855
 103.07 c 179.977 98.492 185.844 95.879 192 95.879 c 198.156 95.879 204.023
 98.492 208.145 103.07 c 212.262 107.648 214.246 113.758 213.602 119.879
 c 205.203 204.047 l 205.199 204.047 l 204.613 210.902 198.879 216.168 192
 216.168 c 185.121 216.168 179.387 210.902 178.801 204.047 c h
170.398 119.879 m f
Q Q
showpage
%%Trailer
%%EOF
