%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
217.922 7.008 m 222.418 2.523 228.512 0 234.863 0 c 533.137 0 l 539.488
 0 545.582 2.523 550.078 7.008 c 760.992 217.922 l 765.477 222.418 768 228.512
 768 234.863 c 768 533.137 l 768 539.488 765.477 545.582 760.992 550.078
 c 550.078 760.992 l 545.582 765.477 539.488 768 533.137 768 c 234.863 768
 l 228.512 768 222.418 765.477 217.922 760.992 c 7.008 550.078 l 2.523 545.582
 0 539.488 0 533.137 c 0 234.863 l 0 228.512 2.523 222.418 7.008 217.922
 c h
244.801 48 m 48 244.801 l 48 523.199 l 244.801 720 l 523.199 720 l 720 
523.199 l 720 244.801 l 523.199 48 l h
244.801 48 m f
336.098 528 m 336.098 510.852 345.246 495.004 360.098 486.43 c 374.945 
477.855 393.246 477.855 408.098 486.43 c 422.945 495.004 432.098 510.852
 432.098 528 c 432.098 545.148 422.945 560.996 408.098 569.57 c 393.246 
578.145 374.945 578.145 360.098 569.57 c 345.246 560.996 336.098 545.148
 336.098 528 c 340.801 239.762 m 339.508 227.512 343.473 215.293 351.711
 206.141 c 359.949 196.988 371.684 191.762 384 191.762 c 396.316 191.762
 408.051 196.988 416.289 206.141 c 424.527 215.293 428.492 227.512 427.199
 239.762 c 410.398 408.098 l 409.641 416.996 404.449 424.91 396.59 429.156
 c 388.734 433.398 379.266 433.398 371.41 429.156 c 363.551 424.91 358.359
 416.996 357.602 408.098 c h
340.801 239.762 m f
Q Q
showpage
%%Trailer
%%EOF
