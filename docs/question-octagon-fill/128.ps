%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
68.762 0.875 m 68.199 0.316 67.438 0 66.641 0 c 29.359 0 l 28.562 0 27.801
 0.316 27.238 0.875 c 0.875 27.238 l 0.316 27.801 0 28.562 0 29.359 c 0 
66.645 l 0 66.641 l 0 67.438 0.316 68.199 0.875 68.762 c 27.238 95.125 l
 27.801 95.684 28.562 96 29.359 96 c 66.645 96 l 66.641 96 l 67.438 96 68.199
 95.684 68.762 95.125 c 95.125 68.762 l 95.684 68.199 96 67.438 96 66.641
 c 96 29.359 l 96 28.562 95.684 27.801 95.125 27.238 c h
32.977 36.199 m 32.586 36.203 32.211 36.047 31.938 35.766 c 31.664 35.488
 31.52 35.105 31.535 34.715 c 32.102 24.547 40.422 21 48.031 21 c 56.406
 21 64.062 25.379 64.062 34.441 c 64.062 40.922 60.254 44.004 56.598 46.785
 c 52.176 50.141 50.539 51.395 50.539 55.699 c 50.539 56.328 l 50.539 56.727
 50.379 57.105 50.098 57.387 c 49.816 57.672 49.438 57.828 49.039 57.828
 c 44.18 57.828 l 43.359 57.828 42.691 57.172 42.68 56.352 c 42.656 55.051
 l 42.43 49.488 45.625 46.062 49.664 43.129 c 53.203 40.465 55.453 38.715
 55.453 34.902 c 55.453 29.953 51.684 27.895 47.57 27.895 c 42.754 27.895
 40.051 30.762 39.52 34.699 c 39.41 35.52 38.75 36.199 37.922 36.199 c 32.973
 36.199 l h
46.926 74.855 m 43.422 74.855 40.871 72.492 40.871 69.293 c 40.871 65.98
 43.422 63.652 46.93 63.652 c 50.582 63.652 53.098 65.98 53.098 69.293 c
 53.098 72.492 50.578 74.855 46.922 74.855 c f
Q Q
showpage
%%Trailer
%%EOF
