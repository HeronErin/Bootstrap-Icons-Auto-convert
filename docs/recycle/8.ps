%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.488 0.473 m 3.387 0.297 3.203 0.188 3 0.188 c 2.797 0.188 2.613 0.297
 2.512 0.473 c 1.871 1.59 l 1.75 1.805 2.074 1.992 2.199 1.773 c 2.836 0.656
 l 2.91 0.531 3.09 0.531 3.164 0.656 c 4.117 2.324 l 3.645 2.199 l 3.645
 2.195 l 3.402 2.133 3.305 2.496 3.547 2.559 c 4.453 2.801 l 4.551 2.828
 4.656 2.77 4.684 2.668 c 4.926 1.762 l 4.926 1.766 l 4.988 1.523 4.629 
1.426 4.562 1.668 c 4.438 2.133 l h
1.113 2.914 m 0.645 3.039 l 0.645 3.043 l 0.402 3.105 0.305 2.742 0.547
 2.68 c 1.453 2.438 l 1.551 2.41 1.656 2.469 1.684 2.57 c 1.926 3.477 l 
1.926 3.473 l 1.988 3.715 1.629 3.812 1.562 3.57 c 1.438 3.105 l 0.484 4.777
 l 0.41 4.902 0.504 5.055 0.645 5.055 c 1.875 5.055 l 2.125 5.055 2.125 
5.43 1.875 5.43 c 0.645 5.43 l 0.445 5.43 0.262 5.324 0.16 5.152 c 0.059
 4.977 0.059 4.766 0.156 4.59 c h
5.195 3.461 m 5.199 3.465 l 5.148 3.371 5.031 3.336 4.941 3.391 c 4.848
 3.441 4.82 3.559 4.875 3.648 c 5.52 4.773 l 5.516 4.777 l 5.59 4.902 5.496
 5.055 5.355 5.055 c 3.266 5.055 l 3.508 4.812 l 3.684 4.637 3.418 4.371
 3.242 4.551 c 2.68 5.113 l 2.605 5.184 2.605 5.305 2.68 5.375 c 3.242 5.938
 l 3.418 6.117 3.684 5.852 3.508 5.676 c 3.266 5.434 l 5.355 5.434 l 5.355
 5.43 l 5.555 5.43 5.738 5.324 5.84 5.152 c 5.941 4.977 5.941 4.766 5.844
 4.59 c h
5.195 3.461 m f
Q Q
showpage
%%Trailer
%%EOF
