%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 1 0 95 93
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 1 0 95 93
96 96 cairo_set_page_size
%%EndPageSetup
q 1 0 94 93 rectclip
1 0 0 -1 0 96 cm q
0 g
55.812 7.535 m 54.211 4.734 51.227 3.004 48 3.004 c 44.773 3.004 41.789
 4.734 40.188 7.535 c 29.965 25.414 l 29.141 26.855 29.641 28.691 31.078
 29.516 c 32.52 30.336 34.355 29.836 35.18 28.398 c 45.398 10.512 l 45.395
 10.512 l 45.93 9.578 46.926 9 48 9 c 49.074 9 50.07 9.578 50.605 10.512
 c 65.844 37.176 l 58.309 35.152 l 56.707 34.723 55.062 35.672 54.629 37.273
 c 54.199 38.871 55.148 40.52 56.746 40.949 c 71.234 44.832 l 71.238 44.832
 l 72.008 45.039 72.824 44.934 73.516 44.535 c 74.207 44.137 74.711 43.484
 74.914 42.715 c 78.797 28.227 l 78.797 28.223 l 79.227 26.625 78.277 24.977
 76.676 24.551 c 75.078 24.121 73.43 25.07 73.004 26.672 c 71.008 34.125
 l h
17.84 46.637 m 10.309 48.66 l 8.707 49.09 7.062 48.141 6.629 46.543 c 6.199
 44.941 7.148 43.293 8.746 42.863 c 23.242 38.98 l 24.844 38.555 26.484 
39.504 26.914 41.102 c 30.797 55.59 l 31.227 57.191 30.277 58.836 28.676
 59.266 c 27.078 59.695 25.43 58.746 25.004 57.145 c 23.008 49.691 l 7.738
 76.414 l 7.734 76.414 l 7.203 77.344 7.207 78.484 7.742 79.41 c 8.281 80.336
 9.27 80.902 10.34 80.902 c 30 80.902 l 31.656 80.902 33 82.246 33 83.902
 c 33 85.562 31.656 86.902 30 86.902 c 10.34 86.902 l 7.129 86.902 4.168
 85.195 2.555 82.422 c 0.945 79.645 0.934 76.227 2.527 73.441 c h
83.18 55.414 m 82.793 54.707 82.141 54.18 81.363 53.957 c 80.586 53.734
 79.75 53.836 79.051 54.238 c 78.348 54.637 77.84 55.305 77.637 56.086 c
 77.434 56.871 77.551 57.699 77.969 58.391 c 88.266 76.414 l 88.797 77.344
 88.793 78.484 88.258 79.41 c 87.719 80.336 86.73 80.902 85.66 80.902 c 
52.238 80.902 l 56.121 77.027 l 56.125 77.027 l 57.297 75.855 57.293 73.953
 56.121 72.781 c 54.949 71.613 53.047 71.613 51.875 72.785 c 42.875 81.785
 l 41.703 82.957 41.703 84.855 42.875 86.027 c 51.875 95.027 l 53.047 96.199
 54.949 96.203 56.121 95.031 c 57.293 93.859 57.297 91.961 56.125 90.785
 c 52.242 86.902 l 85.664 86.902 l 85.66 86.902 l 88.871 86.902 91.832 85.195
 93.445 82.422 c 95.055 79.645 95.066 76.227 93.473 73.441 c h
83.18 55.414 m f
Q Q
showpage
%%Trailer
%%EOF
