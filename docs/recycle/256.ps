%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 2 0 190 186
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 2 0 190 186
192 192 cairo_set_page_size
%%EndPageSetup
q 2 0 188 186 rectclip
1 0 0 -1 0 192 cm q
0 g
111.625 15.07 m 109.516 11.383 106.168 8.562 102.18 7.105 c 98.188 5.645
 93.812 5.645 89.82 7.105 c 85.832 8.562 82.484 11.383 80.375 15.07 c 59.926
 50.832 l 59.93 50.832 l 58.281 53.711 59.281 57.383 62.16 59.027 c 65.039
 60.676 68.711 59.676 70.355 56.797 c 90.793 21.023 l 91.859 19.156 93.848
 18.004 96 18.004 c 98.152 18.004 100.141 19.156 101.207 21.023 c 131.688
 74.352 l 116.617 70.309 l 113.414 69.445 110.121 71.344 109.262 74.543 
c 108.398 77.746 110.297 81.039 113.496 81.898 c 142.477 89.664 l 144.012
 90.078 145.652 89.863 147.031 89.07 c 148.41 88.277 149.418 86.965 149.832
 85.43 c 157.598 56.449 l 158.453 53.246 156.555 49.957 153.355 49.098 c
 150.152 48.238 146.863 50.141 146.004 53.34 c 142.008 68.242 l h
35.676 93.277 m 20.617 97.32 l 17.414 98.18 14.121 96.285 13.262 93.086
 c 12.398 89.883 14.297 86.59 17.496 85.727 c 46.488 77.961 l 46.488 77.965
 l 49.684 77.109 52.973 79.004 53.832 82.199 c 61.598 111.18 l 62.453 114.383
 60.555 117.672 57.355 118.531 c 54.152 119.387 50.863 117.488 50.004 114.289
 c 46.008 99.387 l 15.469 152.836 l 15.469 152.832 l 14.406 154.688 14.414
 156.969 15.488 158.82 c 16.562 160.668 18.539 161.809 20.676 161.809 c 
60 161.809 l 63.312 161.809 66 164.496 66 167.809 c 66 171.121 63.312 173.809
 60 173.809 c 20.676 173.809 l 14.262 173.805 8.332 170.391 5.113 164.84
 c 1.895 159.293 1.871 152.449 5.051 146.879 c h
166.355 110.832 m 165.586 109.41 164.277 108.359 162.727 107.914 c 161.172
 107.473 159.504 107.672 158.102 108.477 c 156.699 109.277 155.676 110.609
 155.27 112.176 c 154.863 113.738 155.105 115.398 155.941 116.785 c 176.535
 152.832 l 176.531 152.832 l 177.594 154.688 177.586 156.969 176.512 158.82
 c 175.438 160.668 173.461 161.809 171.324 161.809 c 104.484 161.809 l 112.25
 154.055 l 112.246 154.055 l 114.59 151.711 114.59 147.91 112.242 145.566
 c 109.895 143.223 106.094 143.227 103.754 145.57 c 85.754 163.57 l 83.41
 165.914 83.41 169.715 85.754 172.055 c 103.754 190.055 l 106.094 192.402
 109.895 192.406 112.242 190.062 c 114.59 187.719 114.59 183.918 112.246
 181.57 c 104.48 173.805 l 171.32 173.805 l 171.324 173.809 l 177.738 173.805
 183.668 170.391 186.887 164.84 c 190.105 159.293 190.129 152.449 186.949
 146.879 c h
166.355 110.832 m f
Q Q
showpage
%%Trailer
%%EOF
