%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 336 1345 1200
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 336 1345 1200
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 336 1249 864 rectclip
1 0 0 -1 0 1536 cm q
0 g
644.832 340.801 m 652.965 344.719 659.828 350.848 664.633 358.492 c 669.438
 366.133 671.992 374.973 672 384 c 672 1152 l 671.984 1164.105 667.391 1175.758
 659.148 1184.621 c 650.906 1193.484 639.617 1198.906 627.543 1199.801 c
 615.473 1200.695 603.508 1196.992 594.047 1189.441 c 367.199 1008 l 144
 1008 l 131.27 1008 119.062 1002.941 110.059 993.941 c 101.059 984.938 96
 972.73 96 960 c 96 576 l 96 563.27 101.059 551.062 110.059 542.059 c 119.062
 533.059 131.27 528 144 528 c 367.199 528 l 594.047 346.559 l 601.109 340.914
 609.625 337.379 618.609 336.359 c 627.594 335.34 636.684 336.879 644.832
 340.801 c 1329.984 542.016 m 1339.012 551.02 1344.086 563.25 1344.086 576
 c 1344.086 588.75 1339.012 600.98 1329.984 609.984 c 1171.871 768 l 1329.984
 926.016 l 1342.125 938.156 1346.867 955.855 1342.422 972.438 c 1337.98 
989.023 1325.023 1001.98 1308.438 1006.422 c 1291.855 1010.867 1274.156 
1006.125 1262.016 993.984 c 1104 835.871 l 945.984 993.984 l 933.844 1006.125
 916.145 1010.867 899.562 1006.422 c 882.977 1001.98 870.02 989.023 865.578
 972.438 c 861.133 955.855 865.875 938.156 878.016 926.016 c 1036.129 768
 l 878.016 609.984 l 865.875 597.844 861.133 580.145 865.578 563.562 c 870.02
 546.977 882.977 534.02 899.562 529.578 c 916.145 525.133 933.844 529.875
 945.984 542.016 c 1104 700.129 l 1262.016 542.016 l 1271.02 532.988 1283.25
 527.914 1296 527.914 c 1308.75 527.914 1320.98 532.988 1329.984 542.016
 c f
Q Q
showpage
%%Trailer
%%EOF
