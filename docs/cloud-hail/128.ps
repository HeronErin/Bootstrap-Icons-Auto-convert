%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 94
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 94
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 94 rectclip
1 0 0 -1 0 96 cm q
0 g
80.43 27.16 m 78.758 18.73 73.551 11.422 66.129 7.09 c 58.707 2.754 49.781
 1.812 41.617 4.5 c 33.453 7.184 26.832 13.242 23.438 21.137 c 17.699 20.477
 11.941 22.207 7.52 25.926 c 3.098 29.641 0.402 35.016 0.066 40.781 c -0.266
 46.547 1.785 52.195 5.746 56.398 c 9.707 60.605 15.223 62.992 21 63 c 78
 63 l 84.145 63.008 89.871 59.879 93.184 54.699 c 96.496 49.523 96.938 43.012
 94.355 37.438 c 91.77 31.859 86.52 27.984 80.43 27.16 c 51 9 m 56.902 9
 62.602 11.172 67 15.109 c 71.402 19.043 74.199 24.465 74.855 30.328 c 75.023
 31.855 76.32 33.008 77.855 33 c 78 33 l 84.629 33 90 38.375 89.996 45.004
 c 89.996 51.629 84.621 57 77.992 57 c 21 57 l 16.703 56.996 12.617 55.152
 9.77 51.938 c 6.926 48.719 5.594 44.434 6.121 40.172 c 6.645 35.906 8.969
 32.074 12.508 29.641 c 16.047 27.207 20.461 26.406 24.629 27.445 c 26.156
 27.824 27.715 26.965 28.207 25.469 c 29.789 20.676 32.844 16.504 36.938
 13.547 c 41.031 10.59 45.949 9 51 9 c 22.5 91.5 m 22.5 93.984 20.484 96
 18 96 c 15.516 96 13.5 93.984 13.5 91.5 c 13.5 89.016 15.516 87 18 87 c
 20.484 87 22.5 89.016 22.5 91.5 c 24.949 69.156 m 26.52 69.68 27.367 71.379
 26.844 72.949 c 23.844 81.949 l 23.617 82.73 23.078 83.387 22.355 83.766
 c 21.633 84.145 20.789 84.211 20.016 83.953 c 19.242 83.695 18.605 83.133
 18.254 82.398 c 17.906 81.664 17.867 80.816 18.156 80.051 c 21.156 71.051
 l 21.68 69.48 23.379 68.633 24.949 69.156 c 46.5 91.5 m 46.5 93.984 44.484
 96 42 96 c 39.516 96 37.5 93.984 37.5 91.5 c 37.5 89.016 39.516 87 42 87
 c 44.484 87 46.5 89.016 46.5 91.5 c 48.949 69.156 m 50.52 69.68 51.367 
71.379 50.844 72.949 c 47.844 81.949 l 47.617 82.73 47.078 83.387 46.355
 83.766 c 45.633 84.145 44.789 84.211 44.016 83.953 c 43.242 83.695 42.605
 83.133 42.254 82.398 c 41.906 81.664 41.867 80.816 42.156 80.051 c 45.156
 71.051 l 45.68 69.48 47.379 68.633 48.949 69.156 c 70.5 91.5 m 70.5 93.984
 68.484 96 66 96 c 63.516 96 61.5 93.984 61.5 91.5 c 61.5 89.016 63.516 
87 66 87 c 68.484 87 70.5 89.016 70.5 91.5 c 72.949 69.156 m 74.52 69.68
 75.367 71.379 74.844 72.949 c 71.844 81.949 l 71.617 82.73 71.078 83.387
 70.355 83.766 c 69.633 84.145 68.789 84.211 68.016 83.953 c 67.242 83.695
 66.605 83.133 66.254 82.398 c 65.906 81.664 65.867 80.816 66.156 80.051
 c 69.156 71.051 l 69.68 69.48 71.379 68.633 72.949 69.156 c f
Q Q
showpage
%%Trailer
%%EOF
