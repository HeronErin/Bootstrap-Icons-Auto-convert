%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1489
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1489
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1489 rectclip
1 0 0 -1 0 1536 cm q
0 g
1286.879 434.594 m 1266.945 334.094 1215.383 242.613 1139.73 173.52 c 1064.082
 104.422 968.312 61.344 866.422 50.574 c 764.535 39.805 661.875 61.914 573.453
 113.664 c 485.027 165.418 415.48 244.102 374.977 338.207 c 314.246 331.211
 252.762 340.918 197.141 366.273 c 141.516 391.633 93.867 431.688 59.32 
482.121 c 24.773 532.551 4.641 591.453 1.09 652.48 c -2.461 713.508 10.703
 774.348 39.168 828.445 c 67.629 882.547 110.312 927.855 162.617 959.496
 c 214.926 991.133 274.871 1007.906 336 1008 c 1248 1008 l 1321.066 1008.082
 1391.434 980.391 1444.848 930.535 c 1498.262 880.68 1530.727 812.383 1535.668
 739.484 c 1540.613 666.586 1517.664 594.531 1471.469 537.922 c 1425.273
 481.309 1359.289 444.371 1286.879 434.594 c 816 144 m 910.461 143.98 1001.613
 178.777 1072.031 241.738 c 1142.445 304.699 1187.188 391.406 1197.695 485.281
 c 1199 497.074 1204.629 507.969 1213.492 515.855 c 1222.355 523.746 1233.828
 528.07 1245.695 528 c 1248 528 l 1298.922 528.012 1347.754 548.254 1383.75
 584.27 c 1419.75 620.285 1439.965 669.125 1439.953 720.047 c 1439.938 770.969
 1419.699 819.801 1383.684 855.797 c 1347.668 891.797 1298.824 912.012 1247.902
 912 c 336 912 l 290.566 911.977 246.07 899.059 207.688 874.746 c 169.305
 850.43 138.613 815.723 119.18 774.652 c 99.746 733.582 92.371 687.84 97.91
 642.742 c 103.449 597.648 121.672 555.051 150.469 519.902 c 179.262 484.758
 217.441 458.508 260.566 444.203 c 303.691 429.898 349.988 428.133 394.078
 439.105 c 405.844 442.039 418.281 440.414 428.895 434.555 c 439.508 428.695
 447.512 419.035 451.297 407.52 c 476.641 330.816 525.531 264.059 591.008
 216.75 c 656.488 169.438 735.219 143.98 816 144 c 360 1464 m 360 1489.723
 346.277 1513.492 324 1526.355 c 301.723 1539.215 274.277 1539.215 252 1526.355
 c 229.723 1513.492 216 1489.723 216 1464 c 216 1438.277 229.723 1414.508
 252 1401.645 c 274.277 1388.785 301.723 1388.785 324 1401.645 c 346.277
 1414.508 360 1438.277 360 1464 c 399.168 1106.496 m 411.23 1110.527 421.199
 1119.18 426.891 1130.555 c 432.578 1141.93 433.516 1155.098 429.504 1167.168
 c 381.504 1311.168 l 377.852 1323.691 369.258 1334.191 357.699 1340.246
 c 346.145 1346.301 332.621 1347.391 320.246 1343.266 c 307.867 1339.141
 297.703 1330.152 292.094 1318.375 c 286.48 1306.598 285.902 1293.043 290.496
 1280.832 c 338.496 1136.832 l 342.527 1124.77 351.18 1114.801 362.555 1109.109
 c 373.93 1103.422 387.098 1102.484 399.168 1106.496 c 744 1464 m 744 1489.723
 730.277 1513.492 708 1526.355 c 685.723 1539.215 658.277 1539.215 636 1526.355
 c 613.723 1513.492 600 1489.723 600 1464 c 600 1438.277 613.723 1414.508
 636 1401.645 c 658.277 1388.785 685.723 1388.785 708 1401.645 c 730.277
 1414.508 744 1438.277 744 1464 c 783.168 1106.496 m 795.23 1110.527 805.199
 1119.18 810.891 1130.555 c 816.578 1141.93 817.516 1155.098 813.504 1167.168
 c 765.504 1311.168 l 761.852 1323.691 753.258 1334.191 741.699 1340.246
 c 730.145 1346.301 716.621 1347.391 704.246 1343.266 c 691.867 1339.141
 681.703 1330.152 676.094 1318.375 c 670.48 1306.598 669.902 1293.043 674.496
 1280.832 c 722.496 1136.832 l 726.527 1124.77 735.18 1114.801 746.555 1109.109
 c 757.93 1103.422 771.098 1102.484 783.168 1106.496 c 1128 1464 m 1128 
1489.723 1114.277 1513.492 1092 1526.355 c 1069.723 1539.215 1042.277 1539.215
 1020 1526.355 c 997.723 1513.492 984 1489.723 984 1464 c 984 1438.277 997.723
 1414.508 1020 1401.645 c 1042.277 1388.785 1069.723 1388.785 1092 1401.645
 c 1114.277 1414.508 1128 1438.277 1128 1464 c 1167.168 1106.496 m 1179.23
 1110.527 1189.199 1119.18 1194.891 1130.555 c 1200.578 1141.93 1201.516
 1155.098 1197.504 1167.168 c 1149.504 1311.168 l 1145.852 1323.691 1137.258
 1334.191 1125.699 1340.246 c 1114.145 1346.301 1100.621 1347.391 1088.246
 1343.266 c 1075.867 1339.141 1065.703 1330.152 1060.094 1318.375 c 1054.48
 1306.598 1053.902 1293.043 1058.496 1280.832 c 1106.496 1136.832 l 1110.527
 1124.77 1119.18 1114.801 1130.555 1109.109 c 1141.93 1103.422 1155.098 
1102.484 1167.168 1106.496 c f
Q Q
showpage
%%Trailer
%%EOF
