%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
192 96 m 192 66.496 178.434 38.633 155.207 20.434 c 131.984 2.238 101.684
 -4.27 73.035 2.789 c 44.387 9.848 20.578 29.688 8.465 56.59 c -3.648 83.492
 -2.719 114.469 10.988 140.598 c 24.691 166.723 49.652 185.098 78.668 190.426
 c 107.688 195.75 137.547 187.438 159.637 167.879 c 147.973 159.898 140.051
 151.605 135.758 143.137 c 131.102 133.945 130.73 124.406 134.859 116.375
 c 140.812 104.734 155.621 98.781 168.004 103.773 c 175.805 100.629 184.562
 101.828 191.488 106.055 c 191.828 102.754 192 99.398 192 96 c 84 78 m 84
 87.938 78.625 96 72 96 c 65.375 96 60 87.938 60 78 c 60 68.062 65.375 60
 72 60 c 78.625 60 84 68.062 84 78 c 102.145 121.766 m 97.98 122.727 93.301
 124.141 88.859 125.594 c 87.332 126.156 85.637 126.07 84.172 125.359 c 
82.703 124.648 81.59 123.371 81.082 121.824 c 80.578 120.273 80.723 118.586
 81.488 117.145 c 82.254 115.707 83.574 114.641 85.141 114.191 c 89.699 
112.691 94.766 111.145 99.445 110.074 c 103.887 109.043 108.805 108.238 
112.68 108.777 c 114.602 109.043 117.406 109.797 119.41 112.211 c 121.668
 114.922 121.652 118.176 120.98 120.672 c 120.984 120.672 l 120.176 123.246
 118.914 125.656 117.266 127.789 c 116.344 129.07 115.246 130.441 113.965
 131.906 c 115.246 133.395 116.348 134.781 117.277 136.07 c 118.98 138.434
 120.348 140.836 120.996 143.211 c 121.656 145.707 121.668 148.957 119.41
 151.684 c 117.395 154.082 114.562 154.828 112.652 155.09 c 108.777 155.605
 103.855 154.766 99.43 153.734 c 99.434 153.73 l 94.613 152.551 89.844 151.168
 85.141 149.594 c 83.574 149.145 82.254 148.078 81.488 146.641 c 80.723 
145.199 80.578 143.512 81.082 141.961 c 81.59 140.41 82.703 139.133 84.172
 138.422 c 85.637 137.711 87.332 137.629 88.859 138.191 c 93.312 139.633
 97.992 141.07 102.168 142.043 c 104.281 142.539 106.062 142.875 107.52 
143.051 c 105.664 140.59 103.652 138.25 101.496 136.043 c 99.254 133.711
 99.266 130.023 101.52 127.703 c 103.68 125.539 105.684 123.223 107.52 120.781
 c 105.715 121.027 103.922 121.355 102.145 121.766 c 111.336 120.734 m 111.266
 120.711 l h
111.359 143.137 m 111.301 143.148 l 111.371 143.125 l h
113.242 86.918 m 113.242 86.914 l 111.633 89.812 107.98 90.855 105.086 
89.242 c 102.188 87.633 101.145 83.98 102.758 81.086 c 104.738 77.441 107.664
 74.398 111.227 72.273 c 114.785 70.148 118.852 69.016 123 69 c 131.762 
69 139.273 73.945 143.242 81.086 c 144.855 83.98 143.812 87.633 140.914 
89.242 c 138.02 90.855 134.367 89.812 132.758 86.914 c 130.836 83.305 127.09
 81.035 123 81 c 118.91 81.035 115.164 83.305 113.242 86.914 c 168 117.938
 m 181.32 104.258 214.609 128.211 168 159 c 121.391 128.207 154.68 104.258
 168 117.949 c h
168 117.938 m f*
Q Q
showpage
%%Trailer
%%EOF
