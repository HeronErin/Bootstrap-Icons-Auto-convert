%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1535.996 592.32 1475.762 421.953 1365.348 285.312 c 1254.93 
148.672 1101.004 54.016 929.238 17.133 c 757.477 -19.75 578.262 3.367 421.48
 82.633 c 264.699 161.898 139.836 292.52 67.711 452.711 c -4.414 612.898
 -19.441 792.977 25.141 962.902 c 69.719 1132.832 171.211 1282.34 312.684
 1386.492 c 454.16 1490.645 627.066 1543.145 802.566 1535.238 c 978.066 
1527.328 1145.551 1459.492 1277.09 1343.039 c 1183.777 1279.199 1120.418
 1212.863 1086.051 1145.086 c 1048.805 1071.551 1045.828 995.23 1078.852
 931.008 c 1126.469 837.887 1244.93 790.273 1344.004 830.207 c 1406.402 
805.055 1476.484 814.656 1531.875 848.445 c 1534.625 822.016 1536 795.199
 1536 768 c 672 624 m 672 703.488 628.992 768 576 768 c 523.008 768 480 
703.488 480 624 c 480 544.512 523.008 480 576 480 c 628.992 480 672 544.512
 672 624 c 817.152 974.113 m 783.84 981.793 746.398 993.121 710.879 1004.738
 c 710.879 1004.734 l 698.641 1009.242 685.098 1008.574 673.359 1002.887
 c 661.625 997.199 652.707 986.98 648.66 974.582 c 644.613 962.184 645.789
 948.676 651.91 937.16 c 658.035 925.645 668.578 917.113 681.121 913.535
 c 717.602 901.535 758.113 889.152 795.555 880.605 c 831.074 872.348 870.434
 865.918 901.441 870.238 c 916.801 872.352 939.266 878.398 955.297 897.695
 c 973.344 919.391 973.25 945.406 967.871 965.375 c 961.398 985.965 951.32
 1005.238 938.113 1022.305 c 930.754 1032.543 921.953 1043.52 911.715 1055.234
 c 921.953 1067.137 930.785 1078.242 938.211 1088.547 c 951.844 1107.457
 962.785 1126.66 967.973 1145.668 c 973.254 1165.637 973.348 1191.652 955.301
 1213.445 c 939.172 1232.645 916.516 1238.598 901.254 1240.711 c 870.246
 1244.84 830.887 1238.117 795.461 1229.863 c 795.457 1229.855 l 756.902 
1220.398 718.758 1209.348 681.121 1196.734 c 668.578 1193.156 658.035 1184.629
 651.91 1173.113 c 645.789 1161.598 644.613 1148.086 648.66 1135.688 c 652.707
 1123.289 661.625 1113.07 673.359 1107.383 c 685.098 1101.695 698.641 1101.027
 710.879 1105.535 c 746.496 1117.055 783.934 1128.574 817.344 1136.352 c
 834.238 1140.32 848.512 1143.008 860.16 1144.414 c 845.312 1124.715 829.215
 1105.988 811.969 1088.352 c 803.344 1079.375 798.539 1067.402 798.578 1054.953
 c 798.613 1042.504 803.484 1030.559 812.16 1021.633 c 829.422 1004.301 
845.461 985.793 860.16 966.238 c 845.711 968.211 831.359 970.836 817.152
 974.113 c 890.688 965.855 m 890.113 965.664 l h
890.879 1145.086 m 890.398 1145.184 l 890.973 1144.992 l h
905.949 695.324 m 905.953 695.328 l 897.617 710.316 881.922 719.719 864.773
 719.996 c 847.625 720.273 831.633 711.379 822.82 696.668 c 814.008 681.957
 813.715 663.66 822.047 648.672 c 837.914 619.535 861.312 595.191 889.801
 578.188 c 918.289 561.18 950.824 552.137 984 552 c 1054.078 552 1114.176
 591.551 1145.953 648.672 c 1154.285 663.66 1153.992 681.957 1145.18 696.668
 c 1136.367 711.379 1120.375 720.273 1103.227 719.996 c 1086.078 719.719
 1070.383 710.316 1062.047 695.328 c 1054.5 681.148 1043.266 669.266 1029.531
 660.938 c 1015.793 652.605 1000.062 648.137 984 648 c 967.938 648.137 952.207
 652.605 938.469 660.938 c 924.734 669.266 913.5 681.148 905.953 695.328
 c 1344 943.488 m 1450.559 834.047 1716.863 1025.664 1344 1272 c 971.137
 1025.664 1237.441 834.047 1344 943.586 c h
1344 943.488 m f*
Q Q
showpage
%%Trailer
%%EOF
