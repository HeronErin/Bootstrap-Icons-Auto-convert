%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
6 3 m 6 1.586 5.012 0.363 3.629 0.066 c 2.246 -0.23 0.844 0.48 0.266 1.77
 c -0.316 3.059 0.082 4.578 1.223 5.414 c 2.359 6.254 3.93 6.184 4.988 5.246
 c 4.625 4.996 4.375 4.738 4.242 4.473 c 4.098 4.184 4.086 3.887 4.215 3.637
 c 4.402 3.273 4.863 3.086 5.25 3.242 c 5.492 3.145 5.766 3.18 5.984 3.312
 c 5.996 3.211 6 3.105 6 3 c 2.625 2.438 m 2.625 2.746 2.457 3 2.25 3 c 
2.043 3 1.875 2.746 1.875 2.438 c 1.875 2.129 2.043 1.875 2.25 1.875 c 2.457
 1.875 2.625 2.129 2.625 2.438 c 3.191 3.805 m 3.062 3.836 2.914 3.879 2.777
 3.926 c 2.676 3.961 2.566 3.906 2.535 3.809 c 2.5 3.707 2.559 3.598 2.66
 3.57 c 2.801 3.523 2.961 3.477 3.105 3.441 c 3.246 3.41 3.398 3.383 3.52
 3.402 c 3.578 3.41 3.668 3.434 3.73 3.508 c 3.801 3.594 3.801 3.695 3.781
 3.773 c 3.781 3.77 l 3.754 3.852 3.715 3.926 3.664 3.992 c 3.637 4.031 
3.602 4.074 3.562 4.121 c 3.602 4.168 3.637 4.211 3.664 4.25 c 3.719 4.324
 3.762 4.398 3.781 4.473 c 3.801 4.551 3.801 4.652 3.73 4.738 c 3.668 4.812
 3.578 4.836 3.52 4.844 c 3.398 4.859 3.246 4.832 3.105 4.801 c 3.105 4.805
 l 2.957 4.766 2.809 4.723 2.66 4.676 c 2.559 4.645 2.5 4.539 2.535 4.438
 c 2.566 4.336 2.676 4.281 2.777 4.32 c 2.918 4.367 3.062 4.41 3.191 4.441
 c 3.258 4.457 3.312 4.469 3.359 4.473 c 3.359 4.469 l 3.301 4.395 3.238
 4.32 3.172 4.25 c 3.102 4.18 3.102 4.062 3.172 3.992 c 3.238 3.922 3.301
 3.852 3.359 3.773 c 3.305 3.781 3.246 3.793 3.191 3.805 c 3.48 3.773 m 
3.477 3.773 l h
3.48 4.473 m 3.484 4.473 l h
3.539 2.715 m 3.418 2.934 3.09 2.754 3.211 2.535 c 3.336 2.301 3.578 2.156
 3.844 2.156 c 4.117 2.156 4.352 2.312 4.477 2.535 c 4.598 2.754 4.27 2.934
 4.148 2.715 c 4.09 2.602 3.973 2.531 3.844 2.531 c 3.715 2.531 3.598 2.602
 3.539 2.715 c 5.25 3.684 m 5.668 3.258 6.707 4.004 5.25 4.969 c 3.793 4.008
 4.832 3.258 5.25 3.688 c h
5.25 3.684 m f*
Q Q
showpage
%%Trailer
%%EOF
