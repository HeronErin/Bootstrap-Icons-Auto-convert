%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
96 48 m 96 33.246 89.215 19.316 77.605 10.219 c 65.992 1.117 50.84 -2.133
 36.516 1.395 c 22.195 4.922 10.289 14.844 4.23 28.293 c -1.824 41.746 -1.359
 57.234 5.492 70.297 c 12.348 83.363 24.824 92.551 39.336 95.211 c 53.844
 97.875 68.773 93.719 79.816 83.941 c 73.984 79.953 70.023 75.805 67.875
 71.57 c 65.547 66.973 65.359 62.203 67.426 58.191 c 70.402 52.371 77.805
 49.395 83.996 51.891 c 87.895 50.32 92.277 50.918 95.738 53.031 c 95.914
 51.375 96 49.699 96 48 c 42 39 m 42 43.969 39.312 48 36 48 c 32.688 48 
30 43.969 30 39 c 30 34.031 32.688 30 36 30 c 39.312 30 42 34.031 42 39 
c 51.07 60.883 m 48.988 61.363 46.648 62.07 44.43 62.797 c 43.664 63.078
 42.82 63.035 42.086 62.68 c 41.352 62.324 40.793 61.688 40.543 60.91 c 
40.289 60.137 40.363 59.293 40.746 58.574 c 41.129 57.852 41.785 57.32 42.57
 57.098 c 44.852 56.348 47.383 55.574 49.723 55.039 c 51.941 54.523 54.402
 54.121 56.34 54.391 c 57.301 54.523 58.703 54.902 59.707 56.105 c 60.836
 57.461 60.828 59.086 60.492 60.336 c 60.086 61.621 59.457 62.828 58.633
 63.895 c 58.172 64.535 57.621 65.219 56.984 65.953 c 57.625 66.695 58.176
 67.391 58.641 68.035 c 59.492 69.219 60.176 70.418 60.5 71.605 c 60.828
 72.852 60.836 74.48 59.707 75.84 c 58.699 77.039 57.281 77.41 56.328 77.543
 c 54.391 77.801 51.93 77.383 49.715 76.863 c 49.715 76.867 l 47.305 76.273
 44.922 75.586 42.57 74.797 c 41.785 74.574 41.129 74.039 40.746 73.32 c
 40.363 72.602 40.289 71.754 40.543 70.98 c 40.793 70.207 41.352 69.566 
42.086 69.211 c 42.82 68.855 43.664 68.812 44.43 69.098 c 46.656 69.816 
48.996 70.539 51.082 71.023 c 52.137 71.27 53.031 71.438 53.758 71.527 c
 53.762 71.527 l 52.832 70.293 51.824 69.125 50.746 68.023 c 49.629 66.855
 49.633 65.012 50.762 63.852 c 51.84 62.77 52.84 61.613 53.762 60.391 c 
52.855 60.512 51.961 60.676 51.07 60.883 c 55.668 60.367 m 55.633 60.355
 l h
55.68 71.57 m 55.648 71.578 l 55.684 71.566 l h
56.621 43.461 m 56.621 43.457 l 55.816 44.906 53.988 45.426 52.543 44.621
 c 51.094 43.816 50.574 41.988 51.379 40.543 c 53.398 36.832 57.277 34.516
 61.5 34.5 c 65.879 34.5 69.637 36.973 71.621 40.543 c 72.426 41.988 71.906
 43.816 70.457 44.621 c 69.012 45.426 67.184 44.906 66.379 43.457 c 65.418
 41.652 63.547 40.516 61.5 40.5 c 59.453 40.516 57.582 41.652 56.621 43.457
 c 84 58.969 m 90.66 52.129 107.305 64.105 84 79.5 c 60.695 64.105 77.34
 52.129 84 58.973 c h
84 58.969 m f*
Q Q
showpage
%%Trailer
%%EOF
