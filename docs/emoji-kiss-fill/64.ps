%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
48 24 m 48 16.625 44.609 9.656 38.801 5.109 c 32.996 0.559 25.422 -1.066
 18.258 0.699 c 11.098 2.461 5.145 7.422 2.117 14.148 c -0.914 20.871 -0.68
 28.617 2.746 35.148 c 6.172 41.68 12.414 46.273 19.668 47.605 c 26.922 
48.938 34.387 46.859 39.91 41.969 c 36.996 39.973 35.016 37.902 33.941 35.781
 c 32.777 33.484 32.684 31.098 33.715 29.09 c 35.203 26.18 38.906 24.691
 42 25.941 c 43.949 25.156 46.141 25.457 47.871 26.512 c 47.957 25.688 48
 24.852 48 24 c 21 19.5 m 21 21.984 19.656 24 18 24 c 16.344 24 15 21.984
 15 19.5 c 15 17.016 16.344 15 18 15 c 19.656 15 21 17.016 21 19.5 c 25.535
 30.441 m 24.496 30.68 23.324 31.035 22.215 31.398 c 21.832 31.539 21.41
 31.52 21.043 31.34 c 20.676 31.164 20.398 30.844 20.27 30.457 c 20.145 
30.066 20.18 29.645 20.371 29.285 c 20.562 28.926 20.895 28.66 21.285 28.547
 c 22.426 28.172 23.691 27.785 24.859 27.52 c 25.969 27.262 27.199 27.059
 28.168 27.195 c 28.648 27.262 29.352 27.449 29.852 28.055 c 30.414 28.734
 30.414 29.547 30.246 30.168 c 30.043 30.812 29.73 31.414 29.316 31.945 
c 29.086 32.266 28.812 32.609 28.492 32.973 c 28.812 33.344 29.09 33.691
 29.32 34.012 c 29.746 34.602 30.09 35.203 30.25 35.797 c 30.414 36.422 
30.418 37.234 29.855 37.914 c 29.352 38.516 28.645 38.699 28.168 38.766 
c 27.199 38.895 25.969 38.684 24.863 38.426 c 24.859 38.434 l 23.652 38.137
 22.461 37.793 21.285 37.398 c 20.895 37.285 20.562 37.02 20.371 36.66 c
 20.18 36.301 20.145 35.879 20.27 35.492 c 20.398 35.102 20.676 34.785 21.043
 34.605 c 21.41 34.43 21.832 34.406 22.215 34.547 c 23.328 34.906 24.496
 35.266 25.543 35.512 c 26.07 35.637 26.516 35.719 26.883 35.766 c 26.879
 35.762 l 26.418 35.148 25.914 34.562 25.375 34.012 c 24.812 33.43 24.816
 32.504 25.379 31.926 c 25.918 31.383 26.422 30.805 26.879 30.195 c 26.43
 30.258 25.98 30.34 25.535 30.441 c 27.832 30.184 m 27.812 30.176 l h
27.84 35.785 m 27.824 35.789 l 27.844 35.781 l h
28.312 21.73 m 27.91 22.453 26.996 22.715 26.27 22.312 c 25.547 21.91 25.285
 20.996 25.688 20.27 c 26.699 18.418 28.637 17.258 30.75 17.25 c 32.941 
17.25 34.816 18.484 35.812 20.27 c 36.215 20.996 35.953 21.91 35.23 22.312
 c 34.504 22.715 33.59 22.453 33.188 21.73 c 32.707 20.828 31.773 20.258
 30.75 20.25 c 29.727 20.258 28.793 20.828 28.312 21.73 c 42 29.484 m 45.328
 26.062 53.652 32.051 42 39.75 c 30.348 32.051 38.672 26.062 42 29.488 c
 h
42 29.484 m f*
Q Q
showpage
%%Trailer
%%EOF
