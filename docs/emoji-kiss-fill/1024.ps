%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
768 384 m 768 296.16 737.883 210.977 682.672 142.656 c 627.465 74.336 550.5
 27.008 464.621 8.566 c 378.738 -9.875 289.129 1.684 210.738 41.316 c 132.352
 80.949 69.918 146.258 33.855 226.355 c -2.207 306.449 -9.719 396.488 12.57
 481.453 c 34.859 566.414 85.605 641.168 156.344 693.246 c 227.078 745.32
 313.535 771.57 401.285 767.617 c 489.035 763.664 572.777 729.746 638.543
 671.52 c 591.887 639.598 560.207 606.43 543.023 572.543 c 524.398 535.773
 522.91 497.613 539.422 465.504 c 563.23 418.945 622.461 395.137 671.996
 415.105 c 703.195 402.531 738.234 407.328 765.934 424.227 c 767.312 411.008
 768 397.602 768 384 c 336 312 m 336 351.742 314.496 384 288 384 c 261.504
 384 240 351.742 240 312 c 240 272.258 261.504 240 288 240 c 314.496 240
 336 272.258 336 312 c 408.574 487.055 m 391.918 490.895 373.199 496.559
 355.438 502.367 c 355.441 502.367 l 349.32 504.621 342.547 504.289 336.68
 501.445 c 330.812 498.602 326.352 493.492 324.332 487.293 c 322.309 481.094
 322.895 474.336 325.957 468.578 c 329.016 462.82 334.289 458.559 340.559
 456.77 c 358.797 450.77 379.055 444.578 397.773 440.305 c 415.535 436.176
 435.215 432.961 450.719 435.121 c 458.398 436.176 469.629 439.199 477.648
 448.848 c 486.672 459.695 486.625 472.703 483.938 482.688 c 480.699 492.98
 475.66 502.617 469.055 511.152 c 465.375 516.273 460.977 521.762 455.855
 527.617 c 460.977 533.57 465.391 539.121 469.102 544.273 c 475.918 553.73
 481.391 563.328 483.98 572.832 c 486.621 582.816 486.668 595.824 477.645
 606.719 c 469.582 616.32 458.254 619.293 450.621 620.352 c 435.117 622.414
 415.438 619.055 397.727 614.926 c 397.727 614.93 l 378.453 610.199 359.379
 604.672 340.559 598.367 c 334.289 596.578 329.016 592.312 325.957 586.559
 c 322.895 580.801 322.309 574.043 324.332 567.844 c 326.352 561.645 330.812
 556.535 336.68 553.691 c 342.547 550.848 349.32 550.516 355.441 552.77 
c 373.25 558.531 391.969 564.289 408.672 568.176 c 417.121 570.16 424.258
 571.504 430.078 572.207 c 422.656 562.359 414.609 552.996 405.984 544.176
 c 401.672 539.688 399.27 533.699 399.289 527.477 c 399.305 521.254 401.742
 515.277 406.078 510.816 c 414.711 502.152 422.73 492.898 430.078 483.121
 c 422.855 484.105 415.68 485.418 408.574 487.055 c 445.344 482.926 m 445.055
 482.828 l h
445.441 572.543 m 445.203 572.59 l 445.492 572.492 l h
452.977 347.664 m 448.809 355.156 440.961 359.859 432.387 359.996 c 423.812
 360.137 415.816 355.691 411.41 348.332 c 407.004 340.977 406.855 331.828
 411.023 324.336 c 418.957 309.766 430.656 297.594 444.902 289.094 c 459.145
 280.59 475.41 276.07 492 276 c 527.039 276 557.09 295.777 572.977 324.336
 c 577.145 331.828 576.996 340.977 572.59 348.332 c 568.184 355.691 560.188
 360.137 551.613 359.996 c 543.039 359.859 535.191 355.156 531.023 347.664
 c 527.25 340.574 521.633 334.633 514.766 330.469 c 507.898 326.305 500.031
 324.07 492 324 c 483.969 324.07 476.102 326.305 469.234 330.469 c 462.367
 334.633 456.75 340.574 452.977 347.664 c 672 471.742 m 725.281 417.023 
858.434 512.832 672 636 c 485.566 512.832 618.719 417.023 672 471.793 c 
h
672 471.742 m f*
Q Q
showpage
%%Trailer
%%EOF
