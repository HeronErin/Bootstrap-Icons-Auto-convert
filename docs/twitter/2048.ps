%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1345
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1345
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1249 rectclip
1 0 0 -1 0 1536 cm q
0 g
482.496 1440 m 1062.145 1440 1379.23 959.711 1379.23 543.938 c 1379.359
 530.434 1379.168 516.93 1378.656 503.426 c 1440.371 458.711 1493.645 403.387
 1536 340.031 c 1478.316 365.402 1417.215 382.156 1354.656 389.762 c 1420.57
 350.371 1469.934 288.387 1493.566 215.328 c 1431.676 252.07 1363.891 277.824
 1293.215 291.457 c 1245.715 240.867 1182.855 207.352 1114.375 196.105 c
 1045.898 184.855 975.621 196.504 914.434 229.242 c 853.242 261.98 804.559
 313.98 775.914 377.191 c 747.273 440.398 740.273 511.289 756 578.879 c 
630.688 572.625 508.094 540.086 396.176 483.375 c 284.258 426.664 185.516
 347.047 106.367 249.695 c 66.199 319.117 53.945 401.223 72.098 479.344 
c 90.246 557.469 137.438 625.762 204.098 670.367 c 154.121 668.754 105.234
 655.332 61.441 631.199 c 61.441 635.52 l 61.562 708.23 86.766 778.668 132.801
 834.949 c 178.832 891.23 242.871 929.906 314.113 944.449 c 287.066 951.902
 259.125 955.617 231.07 955.488 c 211.289 955.695 191.535 953.859 172.129
 950.016 c 192.23 1012.637 231.434 1067.391 284.242 1106.594 c 337.047 1145.801
 400.801 1167.484 466.559 1168.609 c 354.824 1256.254 216.887 1303.82 74.879
 1303.68 c 49.852 1303.867 24.84 1302.426 0 1299.359 c 144.137 1391.277 
311.547 1440.074 482.496 1440 c f
Q Q
showpage
%%Trailer
%%EOF
