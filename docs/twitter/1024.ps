%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 673
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 673
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 625 rectclip
1 0 0 -1 0 768 cm q
0 g
241.246 720 m 531.07 720 689.613 479.855 689.613 271.969 c 689.676 265.215
 689.582 258.465 689.324 251.711 c 689.328 251.711 l 720.184 229.355 746.824
 201.695 768 170.016 c 739.156 182.699 708.605 191.078 677.328 194.879 c
 710.285 175.188 734.965 144.191 746.785 107.664 c 715.836 126.035 681.945
 138.914 646.609 145.727 c 614.715 111.762 569.438 93.637 522.918 96.207
 c 476.398 98.781 433.395 121.789 405.441 159.062 c 377.484 196.336 367.441
 244.062 378 289.441 c 315.344 286.312 254.047 270.043 198.086 241.688 c
 142.129 213.332 92.758 173.523 53.184 124.848 c 33.102 159.559 26.973 200.609
 36.047 239.672 c 45.121 278.734 68.719 312.883 102.047 335.184 c 77.059
 334.375 52.617 327.664 30.719 315.602 c 30.719 317.762 l 30.781 354.113
 43.383 389.336 66.398 417.477 c 89.414 445.617 121.438 464.953 157.055 
472.223 c 143.531 475.953 129.562 477.809 115.535 477.742 c 105.645 477.848
 95.77 476.93 86.062 475.008 c 96.113 506.316 115.719 533.695 142.121 553.297
 c 168.523 572.898 200.402 583.742 233.281 584.305 c 177.414 628.125 108.445
 651.91 37.441 651.84 c 24.926 651.934 12.418 651.211 0 649.68 c 72.066 
695.637 155.773 720.035 241.246 720 c f
Q Q
showpage
%%Trailer
%%EOF
