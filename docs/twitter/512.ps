%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 337
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 313 rectclip
1 0 0 -1 0 384 cm q
0 g
120.625 360 m 265.535 360 344.809 239.93 344.809 135.984 c 344.84 132.609
 344.793 129.23 344.664 125.855 c 360.094 114.68 373.41 100.848 384 85.008
 c 369.578 91.352 354.305 95.539 338.664 97.441 c 355.141 87.594 367.484
 72.098 373.391 53.832 c 357.918 63.016 340.973 69.457 323.305 72.863 c 
307.359 55.883 284.719 46.816 261.457 48.105 c 238.199 49.391 216.695 60.895
 202.719 79.531 c 188.742 98.168 183.719 122.031 189 144.719 c 157.672 143.156
 127.023 135.023 99.043 120.844 c 71.062 106.668 46.379 86.762 26.594 62.426
 c 16.551 79.781 13.488 100.305 18.023 119.836 c 22.562 139.367 34.359 156.441
 51.023 167.594 c 38.531 167.188 26.309 163.832 15.359 157.801 c 15.359 
158.879 l 15.391 177.059 21.691 194.668 33.199 208.738 c 44.707 222.809 
60.719 232.477 78.527 236.113 c 71.766 237.977 64.781 238.902 57.77 238.871
 c 52.82 238.922 47.883 238.465 43.031 237.504 c 48.059 253.16 57.859 266.848
 71.059 276.648 c 84.262 286.449 100.199 291.871 116.641 292.152 c 88.707
 314.062 54.223 325.957 18.719 325.922 c 12.465 325.969 6.211 325.605 0 
324.84 c 36.035 347.82 77.887 360.02 120.625 360 c f
Q Q
showpage
%%Trailer
%%EOF
