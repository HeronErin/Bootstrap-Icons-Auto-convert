%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
88.992 186.121 m 88.992 159.457 100.703 144.051 120.648 144.051 c 136.992
 144.051 147.961 155.332 149.113 170.617 c 176.641 170.617 l 176.641 168
 l 175.395 139.535 152.066 120 120.434 120 c 81.938 120 60 145.199 60 186.023
 c 60 203.953 l 60 244.754 81.719 269.473 120.434 269.473 c 151.969 269.473
 175.273 250.465 176.641 222.938 c 176.641 220.203 l 149.113 220.199 l 147.961
 234.961 137.211 245.398 120.648 245.398 c 100.488 245.398 88.992 230.52
 88.992 203.949 c h
236.352 186.121 m 236.352 159.457 248.062 144.051 267.984 144.051 c 284.352
 144.051 295.32 155.332 296.473 170.617 c 324 170.617 l 324 168 l 322.727
 139.535 299.426 120 267.793 120 c 229.297 120 207.359 145.199 207.359 186.023
 c 207.359 203.953 l 207.359 244.754 229.078 269.473 267.793 269.473 c 299.328
 269.473 322.633 250.465 324 222.938 c 324 220.203 l 296.473 220.203 l 295.32
 234.965 284.543 245.402 267.984 245.402 c 247.848 245.402 236.352 230.523
 236.352 203.953 c h
236.352 186.121 m f
336 72 m 342.363 72 348.469 74.527 352.969 79.031 c 357.473 83.531 360 
89.637 360 96 c 360 288 l 360 294.363 357.473 300.469 352.969 304.969 c 
348.469 309.473 342.363 312 336 312 c 48 312 l 41.637 312 35.531 309.473
 31.031 304.969 c 26.527 300.469 24 294.363 24 288 c 24 96 l 24 89.637 26.527
 83.531 31.031 79.031 c 35.531 74.527 41.637 72 48 72 c h
48 48 m 35.27 48 23.062 53.059 14.059 62.059 c 5.059 71.062 0 83.27 0 96
 c 0 288 l 0 300.73 5.059 312.938 14.059 321.941 c 23.062 330.941 35.27 
336 48 336 c 336 336 l 348.73 336 360.938 330.941 369.941 321.941 c 378.941
 312.938 384 300.73 384 288 c 384 96 l 384 83.27 378.941 71.062 369.941 
62.059 c 360.938 53.059 348.73 48 336 48 c h
48 48 m f
Q Q
showpage
%%Trailer
%%EOF
