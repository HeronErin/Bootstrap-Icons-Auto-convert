%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
72 0 m 628.129 0 l 647.219 0.016 665.52 7.613 679.008 21.121 c 746.93 88.992
 l 760.418 102.488 767.996 120.789 768 139.871 c 768 696 l 768 715.094 760.414
 733.41 746.91 746.91 c 733.41 760.414 715.094 768 696 768 c 72 768 l 52.906
 768 34.59 760.414 21.09 746.91 c 7.586 733.41 0 715.094 0 696 c 0 72 l 
0 52.906 7.586 34.59 21.09 21.09 c 34.59 7.586 52.906 0 72 0 c 48 72 m 48
 696 l 48 702.363 50.527 708.469 55.031 712.969 c 59.531 717.473 65.637 
720 72 720 c 96 720 l 96 504 l 96 484.906 103.586 466.59 117.09 453.09 c
 130.59 439.586 148.906 432 168 432 c 600 432 l 619.094 432 637.41 439.586
 650.91 453.09 c 664.414 466.59 672 484.906 672 504 c 672 720 l 696 720 
l 702.363 720 708.469 717.473 712.969 712.969 c 717.473 708.469 720 702.363
 720 696 c 720 139.871 l 720 133.52 717.477 127.426 712.992 122.93 c 645.07
 55.008 l 640.574 50.523 634.48 48 628.129 48 c 624 48 l 624 216 l 624 235.094
 616.414 253.41 602.91 266.91 c 589.41 280.414 571.094 288 552 288 c 216
 288 l 196.906 288 178.59 280.414 165.09 266.91 c 151.586 253.41 144 235.094
 144 216 c 144 48 l 72 48 l 65.637 48 59.531 50.527 55.031 55.031 c 50.527
 59.531 48 65.637 48 72 c 504 48 m 497.637 48 491.531 50.527 487.031 55.031
 c 482.527 59.531 480 65.637 480 72 c 480 216 l 480 222.363 482.527 228.469
 487.031 232.969 c 491.531 237.473 497.637 240 504 240 c 552 240 l 558.363
 240 564.469 237.473 568.969 232.969 c 573.473 228.469 576 222.363 576 216
 c 576 72 l 576 65.637 573.473 59.531 568.969 55.031 c 564.469 50.527 558.363
 48 552 48 c h
504 48 m f
Q Q
showpage
%%Trailer
%%EOF
