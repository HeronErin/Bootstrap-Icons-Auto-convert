%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 114.098 m 164.168 114.098 138.449 128.945 124.531 153.047 c 110.617
 177.152 110.617 206.848 124.531 230.953 c 138.449 255.055 164.168 269.902
 192 269.902 c 219.832 269.902 245.551 255.055 259.469 230.953 c 273.383
 206.848 273.383 177.152 259.469 153.047 c 245.551 128.945 219.832 114.098
 192 114.098 c 138.098 192 m 138.098 172.742 148.371 154.945 165.047 145.316
 c 181.727 135.688 202.273 135.688 218.953 145.316 c 235.629 154.945 245.902
 172.742 245.902 192 c 245.902 211.258 235.629 229.055 218.953 238.684 c
 202.273 248.312 181.727 248.312 165.047 238.684 c 148.371 229.055 138.098
 211.258 138.098 192 c f
235.105 32.23 m 222.457 -10.73 161.547 -10.73 148.898 32.23 c 146.641 39.887
 l 144.852 45.961 140.41 50.902 134.562 53.324 c 128.711 55.75 122.082 55.398
 116.52 52.367 c 109.512 48.527 l 70.152 27.121 27.121 70.176 48.551 109.512
 c 52.367 116.52 l 55.398 122.082 55.75 128.711 53.324 134.562 c 50.902 
140.41 45.961 144.852 39.887 146.641 c 32.23 148.898 l -10.73 161.547 -10.73
 222.457 32.23 235.105 c 39.887 237.363 l 39.887 237.359 l 45.961 239.148
 50.902 243.59 53.324 249.438 c 55.75 255.289 55.398 261.918 52.367 267.48
 c 48.527 274.488 l 27.121 313.848 70.152 356.902 109.512 335.449 c 116.52
 331.633 l 122.082 328.602 128.711 328.25 134.562 330.676 c 140.41 333.098
 144.852 338.039 146.641 344.113 c 148.898 351.77 l 161.547 394.73 222.457
 394.73 235.105 351.77 c 237.363 344.113 l 237.359 344.113 l 239.148 338.039
 243.59 333.098 249.438 330.676 c 255.289 328.25 261.918 328.602 267.48 
331.633 c 274.488 335.473 l 313.848 356.906 356.902 313.824 335.449 274.488
 c 331.633 267.48 l 328.602 261.918 328.25 255.289 330.676 249.438 c 333.098
 243.59 338.039 239.148 344.113 237.359 c 351.77 235.102 l 394.73 222.453
 394.73 161.543 351.77 148.895 c 344.113 146.637 l 344.113 146.641 l 338.039
 144.852 333.098 140.41 330.676 134.562 c 328.25 128.711 328.602 122.082
 331.633 116.52 c 335.473 109.512 l 356.906 70.152 313.824 27.121 274.488
 48.551 c 267.48 52.367 l 261.918 55.398 255.289 55.75 249.438 53.324 c 
243.59 50.902 239.148 45.961 237.359 39.887 c h
171.914 39.023 m 177.816 18.984 206.188 18.984 212.09 39.023 c 214.348 
46.68 l 214.344 46.68 l 218.184 59.711 227.715 70.305 240.266 75.504 c 252.816
 80.699 267.047 79.941 278.977 73.441 c 285.961 69.602 l 304.297 59.641 
324.359 79.68 314.375 98.043 c 310.559 105.051 l 310.559 105.047 l 304.066
 116.977 303.316 131.203 308.52 143.75 c 313.719 156.297 324.316 165.82 
337.344 169.656 c 344.977 171.914 l 365.016 177.816 365.016 206.188 344.977
 212.09 c 337.32 214.348 l 337.32 214.344 l 324.289 218.184 313.695 227.715
 308.496 240.266 c 303.301 252.816 304.059 267.047 310.559 278.977 c 314.398
 285.961 l 324.359 304.297 304.32 324.359 285.957 314.375 c 278.973 310.559
 l 278.977 310.559 l 267.043 304.059 252.812 303.305 240.258 308.504 c 227.707
 313.707 218.18 324.309 214.344 337.344 c 212.086 344.977 l 206.184 365.016
 177.812 365.016 171.91 344.977 c 169.652 337.32 l 169.656 337.32 l 165.812
 324.297 156.289 313.707 143.742 308.512 c 131.195 303.312 116.973 304.066
 105.047 310.559 c 98.039 314.398 l 79.703 324.359 59.641 304.32 69.625 
285.957 c 73.441 278.973 l 73.441 278.977 l 79.953 267.047 80.715 252.809
 75.516 240.25 c 70.32 227.691 59.719 218.16 46.68 214.32 c 39.023 212.062
 l 18.984 206.16 18.984 177.789 39.023 171.887 c 46.68 169.629 l 46.68 169.633
 l 59.699 165.789 70.281 156.266 75.477 143.727 c 80.672 131.188 79.922 
116.973 73.441 105.047 c 69.602 98.039 l 59.641 79.703 79.68 59.641 98.043
 69.625 c 105.051 73.441 l 105.047 73.441 l 116.973 79.934 131.195 80.688
 143.742 75.488 c 156.289 70.293 165.812 59.703 169.656 46.68 c h
171.914 39.023 m f
Q Q
showpage
%%Trailer
%%EOF
