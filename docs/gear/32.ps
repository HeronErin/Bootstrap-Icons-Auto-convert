%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
12 7.133 m 9.312 7.133 7.133 9.312 7.133 12 c 7.133 14.688 9.312 16.867
 12 16.867 c 14.688 16.867 16.867 14.688 16.867 12 c 16.867 9.312 14.688
 7.133 12 7.133 c 8.633 12 m 8.633 10.141 10.141 8.633 12 8.633 c 13.859
 8.633 15.367 10.141 15.367 12 c 15.367 13.859 13.859 15.367 12 15.367 c
 10.141 15.367 8.633 13.859 8.633 12 c f
14.695 2.016 m 13.906 -0.668 10.098 -0.668 9.309 2.016 c 9.168 2.492 l 
9.164 2.492 l 9.055 2.871 8.777 3.18 8.41 3.332 c 8.043 3.484 7.629 3.461
 7.281 3.273 c 6.844 3.035 l 4.383 1.695 1.695 4.387 3.035 6.848 c 3.273
 7.285 l 3.273 7.281 l 3.461 7.629 3.484 8.043 3.332 8.41 c 3.18 8.777 2.871
 9.055 2.492 9.164 c 2.016 9.305 l -0.668 10.094 -0.668 13.902 2.016 14.691
 c 2.492 14.832 l 2.492 14.836 l 2.871 14.945 3.18 15.223 3.332 15.59 c 
3.484 15.957 3.461 16.371 3.273 16.719 c 3.035 17.156 l 1.695 19.617 4.387
 22.309 6.848 20.965 c 7.285 20.727 l 7.281 20.727 l 7.629 20.539 8.043 
20.516 8.41 20.668 c 8.777 20.82 9.055 21.129 9.164 21.508 c 9.305 21.984
 l 10.094 24.668 13.902 24.668 14.691 21.984 c 14.832 21.508 l 14.836 21.508
 l 14.945 21.129 15.223 20.82 15.59 20.668 c 15.957 20.516 16.371 20.539
 16.719 20.727 c 17.156 20.965 l 19.617 22.305 22.309 19.613 20.965 17.152
 c 20.727 16.715 l 20.727 16.719 l 20.539 16.371 20.516 15.957 20.668 15.59
 c 20.82 15.223 21.129 14.945 21.508 14.836 c 21.984 14.695 l 24.668 13.906
 24.668 10.098 21.984 9.309 c 21.508 9.168 l 21.508 9.164 l 21.129 9.055
 20.82 8.777 20.668 8.41 c 20.516 8.043 20.539 7.629 20.727 7.281 c 20.965
 6.844 l 22.305 4.383 19.613 1.695 17.152 3.035 c 16.715 3.273 l 16.719 
3.273 l 16.371 3.461 15.957 3.484 15.59 3.332 c 15.223 3.18 14.945 2.871
 14.836 2.492 c h
10.746 2.441 m 11.113 1.188 12.887 1.188 13.258 2.441 c 13.398 2.918 l 
13.637 3.73 14.23 4.395 15.016 4.719 c 15.801 5.043 16.691 4.996 17.438 
4.59 c 17.875 4.352 l 19.02 3.73 20.273 4.98 19.652 6.129 c 19.414 6.566
 l 19.41 6.566 l 19.004 7.312 18.957 8.199 19.281 8.984 c 19.609 9.77 20.27
 10.363 21.086 10.602 c 21.562 10.742 l 22.816 11.109 22.816 12.883 21.562
 13.254 c 21.086 13.395 l 21.082 13.398 l 20.27 13.637 19.605 14.23 19.281
 15.016 c 18.957 15.801 19.004 16.691 19.41 17.438 c 19.648 17.875 l 20.27
 19.02 19.02 20.273 17.871 19.652 c 17.434 19.414 l 17.438 19.41 l 16.691
 19.004 15.801 18.957 15.016 19.281 c 14.23 19.605 13.637 20.27 13.398 21.086
 c 13.258 21.562 l 12.891 22.816 11.117 22.816 10.746 21.562 c 10.605 21.086
 l 10.602 21.082 l 10.363 20.27 9.77 19.605 8.984 19.281 c 8.199 18.957 
7.312 19.004 6.566 19.41 c 6.129 19.648 l 4.984 20.27 3.73 19.02 4.352 17.871
 c 4.59 17.434 l 4.59 17.438 l 4.996 16.691 5.043 15.801 4.719 15.016 c 
4.395 14.23 3.73 13.637 2.918 13.395 c 2.441 13.254 l 1.188 12.887 1.188
 11.113 2.441 10.742 c 2.918 10.602 l 3.73 10.363 4.391 9.766 4.719 8.984
 c 5.043 8.199 4.996 7.312 4.59 6.566 c 4.352 6.129 l 3.73 4.984 4.98 3.73
 6.129 4.352 c 6.566 4.59 l 7.312 4.996 8.199 5.043 8.984 4.719 c 9.77 4.395
 10.363 3.73 10.602 2.918 c h
10.746 2.441 m f
Q Q
showpage
%%Trailer
%%EOF
