%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 1.781 m 2.328 1.781 1.781 2.328 1.781 3 c 1.781 3.672 2.328 4.219 3 4.219
 c 3.672 4.219 4.219 3.672 4.219 3 c 4.219 2.328 3.672 1.781 3 1.781 c 2.156
 3 m 2.156 2.535 2.535 2.156 3 2.156 c 3.465 2.156 3.844 2.535 3.844 3 c
 3.844 3.465 3.465 3.844 3 3.844 c 2.535 3.844 2.156 3.465 2.156 3 c f
3.672 0.504 m 3.473 -0.168 2.523 -0.168 2.324 0.504 c 2.289 0.625 l 2.293
 0.625 l 2.262 0.719 2.195 0.797 2.102 0.832 c 2.012 0.871 1.906 0.867 1.82
 0.816 c 1.711 0.758 l 1.098 0.422 0.422 1.098 0.758 1.711 c 0.816 1.82 
l 0.867 1.906 0.871 2.012 0.832 2.102 c 0.797 2.195 0.719 2.262 0.625 2.293
 c 0.504 2.328 l -0.168 2.527 -0.168 3.477 0.504 3.676 c 0.625 3.711 l 0.625
 3.707 l 0.719 3.738 0.797 3.805 0.832 3.898 c 0.871 3.988 0.867 4.094 0.816
 4.18 c 0.758 4.289 l 0.422 4.902 1.094 5.578 1.711 5.242 c 1.82 5.184 l
 1.906 5.133 2.012 5.129 2.102 5.168 c 2.195 5.203 2.262 5.281 2.293 5.375
 c 2.328 5.496 l 2.527 6.168 3.477 6.168 3.676 5.496 c 3.711 5.375 l 3.707
 5.375 l 3.738 5.281 3.805 5.203 3.898 5.168 c 3.988 5.129 4.094 5.133 4.18
 5.184 c 4.289 5.242 l 4.902 5.578 5.578 4.902 5.242 4.289 c 5.184 4.18 
l 5.133 4.094 5.129 3.988 5.168 3.898 c 5.203 3.805 5.281 3.738 5.375 3.707
 c 5.496 3.672 l 6.168 3.473 6.168 2.523 5.496 2.324 c 5.375 2.289 l 5.375
 2.293 l 5.281 2.262 5.203 2.195 5.168 2.102 c 5.129 2.012 5.133 1.906 5.184
 1.82 c 5.242 1.711 l 5.578 1.098 4.902 0.422 4.289 0.758 c 4.18 0.816 l
 4.094 0.867 3.988 0.871 3.898 0.832 c 3.805 0.797 3.738 0.719 3.707 0.625
 c h
2.684 0.609 m 2.777 0.297 3.219 0.297 3.312 0.609 c 3.348 0.73 l 3.41 0.934
 3.559 1.098 3.754 1.18 c 3.949 1.262 4.172 1.25 4.359 1.148 c 4.469 1.09
 l 4.754 0.934 5.07 1.246 4.914 1.535 c 4.855 1.645 l 4.852 1.641 l 4.75
 1.828 4.738 2.051 4.82 2.246 c 4.902 2.441 5.066 2.59 5.27 2.652 c 5.391
 2.688 l 5.703 2.781 5.703 3.223 5.391 3.316 c 5.27 3.352 l 5.27 3.348 l
 5.066 3.41 4.902 3.559 4.82 3.754 c 4.738 3.949 4.75 4.172 4.852 4.359 
c 4.91 4.469 l 5.066 4.754 4.754 5.07 4.465 4.914 c 4.355 4.855 l 4.359 
4.852 l 4.172 4.75 3.949 4.738 3.754 4.82 c 3.559 4.902 3.41 5.066 3.348
 5.27 c 3.312 5.391 l 3.219 5.703 2.777 5.703 2.684 5.391 c 2.648 5.27 l
 2.652 5.27 l 2.59 5.066 2.441 4.902 2.246 4.82 c 2.051 4.738 1.828 4.75
 1.641 4.852 c 1.531 4.91 l 1.246 5.066 0.93 4.754 1.086 4.465 c 1.145 4.355
 l 1.148 4.359 l 1.25 4.172 1.262 3.949 1.18 3.754 c 1.098 3.559 0.934 3.41
 0.73 3.348 c 0.609 3.312 l 0.297 3.219 0.297 2.777 0.609 2.684 c 0.73 2.648
 l 0.73 2.652 l 0.934 2.59 1.098 2.441 1.18 2.246 c 1.262 2.051 1.25 1.828
 1.148 1.641 c 1.09 1.531 l 0.934 1.246 1.246 0.93 1.535 1.086 c 1.645 1.145
 l 1.641 1.148 l 1.828 1.25 2.051 1.262 2.246 1.18 c 2.441 1.098 2.59 0.934
 2.652 0.73 c h
2.684 0.609 m f
Q Q
showpage
%%Trailer
%%EOF
