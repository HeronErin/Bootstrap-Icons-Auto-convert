%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 28.523 m 41.043 28.523 34.613 32.234 31.133 38.262 c 27.652 44.289 27.652
 51.711 31.133 57.738 c 34.613 63.766 41.043 67.477 48 67.477 c 54.957 67.477
 61.387 63.766 64.867 57.738 c 68.348 51.711 68.348 44.289 64.867 38.262
 c 61.387 32.234 54.957 28.523 48 28.523 c 34.523 48 m 34.523 40.559 40.559
 34.523 48 34.523 c 55.441 34.523 61.477 40.559 61.477 48 c 61.477 55.441
 55.441 61.477 48 61.477 c 40.559 61.477 34.523 55.441 34.523 48 c f
58.777 8.059 m 55.617 -2.68 40.387 -2.68 37.227 8.059 c 36.664 9.973 l 
36.66 9.973 l 36.211 11.492 35.102 12.727 33.641 13.332 c 32.18 13.938 30.52
 13.848 29.129 13.094 c 27.375 12.133 l 17.535 6.781 6.777 17.543 12.137
 27.379 c 13.09 29.133 l 13.094 29.129 l 13.848 30.52 13.938 32.18 13.332
 33.641 c 12.727 35.102 11.492 36.211 9.973 36.66 c 8.059 37.223 l -2.68
 40.383 -2.68 55.613 8.059 58.773 c 9.973 59.336 l 9.973 59.34 l 11.492 
59.789 12.727 60.898 13.332 62.359 c 13.938 63.82 13.848 65.48 13.094 66.871
 c 12.133 68.625 l 6.781 78.465 17.539 89.23 27.379 83.863 c 29.133 82.91
 l 29.129 82.906 l 30.52 82.152 32.18 82.062 33.641 82.668 c 35.102 83.273
 36.211 84.508 36.66 86.027 c 37.223 87.941 l 40.383 98.68 55.613 98.68 
58.773 87.941 c 59.336 86.027 l 59.34 86.027 l 59.789 84.508 60.898 83.273
 62.359 82.668 c 63.82 82.062 65.48 82.152 66.871 82.906 c 68.625 83.867
 l 78.465 89.227 89.23 78.457 83.863 68.621 c 82.91 66.867 l 82.906 66.871
 l 82.152 65.48 82.062 63.82 82.668 62.359 c 83.273 60.898 84.508 59.789
 86.027 59.34 c 87.941 58.777 l 98.68 55.617 98.68 40.387 87.941 37.227 
c 86.027 36.664 l 86.027 36.66 l 84.508 36.211 83.273 35.102 82.668 33.641
 c 82.062 32.18 82.152 30.52 82.906 29.129 c 83.867 27.375 l 89.227 17.535
 78.457 6.777 68.621 12.137 c 66.867 13.09 l 66.871 13.094 l 65.48 13.848
 63.82 13.938 62.359 13.332 c 60.898 12.727 59.789 11.492 59.34 9.973 c 
h
42.98 9.758 m 44.457 4.746 51.547 4.746 53.023 9.758 c 53.586 11.672 l 
54.547 14.93 56.93 17.578 60.066 18.875 c 63.203 20.176 66.762 19.984 69.742
 18.359 c 71.488 17.398 l 76.074 14.91 81.09 19.918 78.594 24.508 c 77.641
 26.262 l 76.016 29.246 75.828 32.801 77.129 35.938 c 78.43 39.074 81.078
 41.453 84.336 42.414 c 86.242 42.977 l 91.254 44.453 91.254 51.543 86.242
 53.02 c 84.328 53.582 l 84.328 53.586 l 81.07 54.547 78.422 56.93 77.125
 60.066 c 75.824 63.203 76.016 66.762 77.641 69.742 c 78.602 71.488 l 81.09
 76.074 76.082 81.09 71.492 78.594 c 69.746 77.641 l 69.742 77.641 l 66.762
 76.016 63.203 75.824 60.066 77.125 c 56.926 78.426 54.543 81.078 53.586
 84.336 c 53.023 86.242 l 51.547 91.254 44.457 91.254 42.98 86.242 c 42.418
 84.328 l 42.414 84.328 l 41.453 81.074 39.07 78.426 35.938 77.129 c 32.801
 75.828 29.242 76.016 26.262 77.641 c 24.508 78.602 l 19.922 81.09 14.906
 76.082 17.402 71.492 c 18.355 69.746 l 18.359 69.742 l 19.988 66.762 20.18
 63.203 18.879 60.062 c 17.578 56.922 14.93 54.539 11.672 53.578 c 9.758
 53.016 l 4.746 51.539 4.746 44.449 9.758 42.973 c 11.672 42.41 l 11.672
 42.406 l 14.926 41.445 17.57 39.066 18.867 35.934 c 20.168 32.797 19.98
 29.242 18.359 26.262 c 17.398 24.508 l 14.91 19.922 19.918 14.906 24.508
 17.402 c 26.262 18.355 l 26.262 18.359 l 29.242 19.984 32.801 20.172 35.938
 18.871 c 39.07 17.574 41.453 14.926 42.414 11.672 c h
42.98 9.758 m f
Q Q
showpage
%%Trailer
%%EOF
