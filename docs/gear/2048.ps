%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 456.383 m 685.355 456.383 606.094 489.215 547.652 547.652 c 489.215
 606.094 456.383 685.355 456.383 768 c 456.383 850.645 489.215 929.906 547.652
 988.348 c 606.094 1046.785 685.355 1079.617 768 1079.617 c 850.645 1079.617
 929.906 1046.785 988.348 988.348 c 1046.785 929.906 1079.617 850.645 1079.617
 768 c 1079.617 685.355 1046.785 606.094 988.348 547.652 c 929.906 489.215
 850.645 456.383 768 456.383 c 552.383 768 m 552.383 710.816 575.102 655.973
 615.535 615.535 c 655.973 575.102 710.816 552.383 768 552.383 c 825.184
 552.383 880.027 575.102 920.465 615.535 c 960.898 655.973 983.617 710.816
 983.617 768 c 983.617 825.184 960.898 880.027 920.465 920.465 c 880.027
 960.898 825.184 983.617 768 983.617 c 710.816 983.617 655.973 960.898 615.535
 920.465 c 575.102 880.027 552.383 825.184 552.383 768 c f
940.414 128.93 m 889.82 -42.91 646.176 -42.91 595.582 128.93 c 586.559 
159.555 l 586.559 159.551 l 579.402 183.848 561.645 203.602 538.246 213.297
 c 514.848 222.992 488.32 221.586 466.078 209.473 c 438.047 194.113 l 280.605
 108.48 108.48 280.707 194.207 438.051 c 209.473 466.082 l 209.473 466.078
 l 221.586 488.32 222.992 514.848 213.297 538.246 c 203.602 561.645 183.848
 579.402 159.551 586.559 c 128.926 595.582 l -42.914 646.176 -42.914 889.82
 128.926 940.414 c 159.551 949.438 l 159.551 949.441 l 183.848 956.598 203.602
 974.355 213.297 997.754 c 222.992 1021.152 221.586 1047.68 209.473 1069.922
 c 194.113 1097.953 l 108.48 1255.395 280.609 1427.617 438.051 1341.793 
c 466.082 1326.527 l 466.078 1326.527 l 488.32 1314.414 514.848 1313.008
 538.246 1322.703 c 561.645 1332.398 579.402 1352.152 586.559 1376.449 c
 595.582 1407.074 l 646.176 1578.914 889.82 1578.914 940.414 1407.074 c 
949.438 1376.449 l 949.441 1376.449 l 956.598 1352.152 974.355 1332.398 
997.754 1322.703 c 1021.152 1313.008 1047.68 1314.414 1069.922 1326.527 
c 1097.953 1341.887 l 1255.395 1427.613 1427.617 1255.293 1341.793 1097.949
 c 1326.527 1069.918 l 1326.527 1069.922 l 1314.414 1047.68 1313.008 1021.152
 1322.703 997.754 c 1332.398 974.355 1352.152 956.598 1376.449 949.441 c
 1407.074 940.418 l 1578.914 889.824 1578.914 646.18 1407.074 595.586 c 
1376.449 586.562 l 1376.449 586.559 l 1352.152 579.402 1332.398 561.645 
1322.703 538.246 c 1313.008 514.848 1314.414 488.32 1326.527 466.078 c 1341.887
 438.047 l 1427.613 280.605 1255.293 108.48 1097.949 194.207 c 1069.918 
209.473 l 1069.922 209.473 l 1047.68 221.586 1021.152 222.992 997.754 213.297
 c 974.355 203.602 956.598 183.848 949.441 159.551 c h
687.645 156.098 m 711.262 75.938 824.734 75.938 848.348 156.098 c 857.371
 186.723 l 857.375 186.719 l 867.523 221.148 887.742 251.75 915.43 274.586
 c 943.113 297.426 977.004 311.457 1012.73 314.875 c 1048.457 318.289 1084.391
 310.938 1115.902 293.762 c 1143.84 278.402 l 1217.184 238.562 1297.441 
318.723 1257.504 392.164 c 1242.238 420.195 l 1242.238 420.191 l 1225.09
 451.707 1217.758 487.637 1221.191 523.352 c 1224.629 559.07 1238.672 592.941
 1261.512 620.613 c 1284.355 648.285 1314.957 668.488 1349.375 678.625 c
 1379.902 687.648 l 1460.062 711.266 1460.062 824.738 1379.902 848.352 c
 1349.277 857.375 l 1349.281 857.375 l 1314.852 867.523 1284.25 887.742 
1261.414 915.43 c 1238.574 943.113 1224.543 977.004 1221.125 1012.73 c 1217.711
 1048.457 1225.062 1084.391 1242.238 1115.902 c 1257.598 1143.84 l 1297.438
 1217.184 1217.277 1297.441 1143.836 1257.504 c 1115.898 1242.238 l 1115.902
 1242.238 l 1084.383 1225.062 1048.441 1217.719 1012.707 1221.145 c 976.973
 1224.57 943.082 1238.613 915.402 1261.469 c 887.719 1284.32 867.508 1314.938
 857.375 1349.375 c 848.352 1379.902 l 824.734 1460.062 711.262 1460.062
 687.648 1379.902 c 678.625 1349.277 l 678.625 1349.281 l 668.473 1314.871
 648.258 1284.285 620.586 1261.457 c 592.91 1238.629 559.043 1224.602 523.332
 1221.176 c 487.621 1217.75 451.699 1225.086 420.191 1242.238 c 392.16 1257.598
 l 318.816 1297.438 238.559 1217.277 278.496 1143.836 c 293.762 1115.898
 l 293.762 1115.902 l 310.961 1084.387 318.332 1048.438 314.922 1012.695
 c 311.516 976.949 297.48 943.043 274.633 915.344 c 251.785 887.645 221.164
 867.422 186.719 857.281 c 156.094 848.258 l 75.934 824.641 75.934 711.168
 156.094 687.555 c 186.719 678.531 l 186.719 678.527 l 221.109 668.371 251.68
 648.164 274.496 620.504 c 297.316 592.84 311.344 558.988 314.773 523.293
 c 318.207 487.602 310.891 451.695 293.762 420.191 c 278.402 392.16 l 238.562
 318.816 318.723 238.559 392.164 278.496 c 420.195 293.762 l 420.191 293.762
 l 451.699 310.914 487.621 318.25 523.332 314.824 c 559.043 311.398 592.91
 297.371 620.586 274.543 c 648.258 251.715 668.473 221.129 678.625 186.719
 c h
687.645 156.098 m f
Q Q
showpage
%%Trailer
%%EOF
