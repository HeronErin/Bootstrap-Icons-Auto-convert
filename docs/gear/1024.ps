%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 228.191 m 328.336 228.191 276.898 257.891 249.066 306.098 c 221.234
 354.305 221.234 413.695 249.066 461.902 c 276.898 510.109 328.336 539.809
 384 539.809 c 439.664 539.809 491.102 510.109 518.934 461.902 c 546.766
 413.695 546.766 354.305 518.934 306.098 c 491.102 257.891 439.664 228.191
 384 228.191 c 276.191 384 m 276.191 345.484 296.738 309.895 330.098 290.637
 c 363.453 271.379 404.547 271.379 437.902 290.637 c 471.262 309.895 491.809
 345.484 491.809 384 c 491.809 422.516 471.262 458.105 437.902 477.363 c
 404.547 496.621 363.453 496.621 330.098 477.363 c 296.738 458.105 276.191
 422.516 276.191 384 c f
470.207 64.465 m 444.91 -21.457 323.086 -21.457 297.793 64.465 c 293.281
 79.777 l 289.703 91.922 280.824 101.801 269.125 106.648 c 257.426 111.496
 244.16 110.793 233.039 104.734 c 219.023 97.055 l 140.305 54.238 54.238
 140.352 97.102 219.023 c 104.734 233.039 l 110.793 244.16 111.496 257.426
 106.648 269.125 c 101.801 280.824 91.922 289.703 79.777 293.281 c 64.465
 297.793 l -21.457 323.09 -21.457 444.914 64.465 470.207 c 79.777 474.719
 l 91.922 478.297 101.801 487.176 106.648 498.875 c 111.496 510.574 110.793
 523.84 104.734 534.961 c 97.055 548.977 l 54.238 627.695 140.301 713.809
 219.023 670.898 c 233.039 663.266 l 244.16 657.207 257.426 656.504 269.125
 661.352 c 280.824 666.199 289.703 676.078 293.281 688.223 c 297.793 703.535
 l 323.09 789.457 444.914 789.457 470.207 703.535 c 474.719 688.223 l 478.297
 676.078 487.176 666.199 498.875 661.352 c 510.574 656.504 523.84 657.207
 534.961 663.266 c 548.977 670.945 l 627.695 713.809 713.809 627.648 670.898
 548.977 c 663.266 534.961 l 657.207 523.84 656.504 510.574 661.352 498.875
 c 666.199 487.176 676.078 478.297 688.223 474.719 c 703.535 470.207 l 789.457
 444.91 789.457 323.086 703.535 297.793 c 688.223 293.281 l 676.078 289.703
 666.199 280.824 661.352 269.125 c 656.504 257.426 657.207 244.16 663.266
 233.039 c 670.945 219.023 l 713.809 140.305 627.648 54.238 548.977 97.102
 c 534.961 104.734 l 523.84 110.793 510.574 111.496 498.875 106.648 c 487.176
 101.801 478.297 91.922 474.719 79.777 c h
343.824 78.051 m 355.633 37.973 412.367 37.973 424.176 78.051 c 428.688
 93.363 l 428.688 93.359 l 436.371 119.422 455.426 140.613 480.531 151.008
 c 505.637 161.402 534.094 159.883 557.953 146.879 c 571.922 139.199 l 608.594
 119.277 648.723 159.359 628.754 196.078 c 621.121 210.094 l 621.121 210.098
 l 608.137 233.957 606.637 262.406 617.039 287.5 c 627.441 312.594 648.629
 331.637 674.688 339.312 c 689.953 343.824 l 730.031 355.633 730.031 412.367
 689.953 424.176 c 674.641 428.688 l 648.578 436.371 627.387 455.426 616.992
 480.531 c 606.598 505.637 608.117 534.094 621.121 557.953 c 628.801 571.922
 l 648.723 608.594 608.641 648.723 571.922 628.754 c 557.953 621.121 l 534.09
 608.117 505.625 606.605 480.516 617.012 c 455.41 627.414 436.359 648.617
 428.688 674.688 c 424.176 689.953 l 412.367 730.031 355.633 730.031 343.824
 689.953 c 339.312 674.641 l 331.625 648.59 312.578 627.414 287.484 617.02
 c 262.395 606.629 233.949 608.133 210.098 621.121 c 196.082 628.801 l 159.41
 648.723 119.281 608.641 139.25 571.922 c 146.883 557.953 l 146.879 557.953
 l 159.902 534.09 161.43 505.617 151.035 480.5 c 140.637 455.383 119.438
 436.32 93.359 428.641 c 78.047 424.129 l 37.969 412.32 37.969 355.586 78.047
 343.777 c 93.359 339.266 l 119.395 331.574 140.562 312.535 150.953 287.457
 c 161.344 262.375 159.848 233.945 146.879 210.098 c 139.199 196.082 l 119.277
 159.41 159.359 119.281 196.078 139.25 c 210.094 146.883 l 210.098 146.879
 l 233.949 159.867 262.395 161.371 287.484 150.98 c 312.578 140.586 331.625
 119.41 339.312 93.359 c h
343.824 78.051 m f
Q Q
showpage
%%Trailer
%%EOF
