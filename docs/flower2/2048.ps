%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1536 m 835.406 1536 901.625 1518.258 960 1484.555 c 1018.375 1450.852
 1066.852 1402.375 1100.555 1344 c 1134.258 1285.625 1152 1219.406 1152 
1152 c 1253.844 1152 1351.516 1111.543 1423.527 1039.527 c 1495.543 967.516
 1536 869.844 1536 768 c 1536 666.156 1495.543 568.484 1423.527 496.473 
c 1351.516 424.457 1253.844 384 1152 384 c 1152 282.156 1111.543 184.484
 1039.527 112.473 c 967.516 40.457 869.844 0 768 0 c 666.156 0 568.484 40.457
 496.473 112.473 c 424.457 184.484 384 282.156 384 384 c 282.156 384 184.484
 424.457 112.473 496.473 c 40.457 568.484 0 666.156 0 768 c 0 869.844 40.457
 967.516 112.473 1039.527 c 184.484 1111.543 282.156 1152 384 1152 c 384
 1219.406 401.742 1285.625 435.445 1344 c 469.148 1402.375 517.625 1450.852
 576 1484.555 c 634.375 1518.258 700.594 1536 768 1536 c 1056 384 m 1056
 391.039 1055.039 398.945 1053.121 407.711 c 1000.898 430.848 948.387 468.957
 899.715 511.773 c 899.711 511.777 l 858.961 490.859 813.805 479.969 768
 480 c 720.574 480 675.84 491.52 636.289 511.777 c 587.617 468.961 535.105
 430.848 482.977 407.715 c 482.977 407.711 l 481 399.961 480 391.996 480
 384 c 480 307.617 510.344 234.363 564.352 180.352 c 618.363 126.344 691.617
 96 768 96 c 844.383 96 917.637 126.344 971.648 180.352 c 1025.656 234.363
 1056 307.617 1056 384 c 978.047 964.992 m 1028.117 911.617 1055.988 841.184
 1056 768 c 1055.988 694.816 1028.117 624.383 978.047 571.008 c 998.688 
553.727 1019.52 537.793 1040.16 524.254 c 1088.641 492.574 1126.273 480 
1152 480 c 1228.383 480 1301.637 510.344 1355.648 564.352 c 1409.656 618.363
 1440 691.617 1440 768 c 1440 844.383 1409.656 917.637 1355.648 971.648 
c 1301.637 1025.656 1228.383 1056 1152 1056 c 1126.273 1056 1088.641 1043.52
 1040.16 1011.742 c 1018.57 997.371 997.832 981.762 978.047 964.992 c 636.285
 1024.223 m 636.289 1024.223 l 677.031 1045.176 722.184 1056.105 768 1056.105
 c 813.816 1056.105 858.969 1045.176 899.711 1024.223 c 948.383 1067.039
 1000.895 1105.055 1053.117 1128.285 c 1055.039 1137.055 1055.996 1144.957
 1055.996 1151.996 c 1056 1152 l 1056 1228.383 1025.656 1301.637 971.648
 1355.648 c 917.637 1409.656 844.383 1440 768 1440 c 691.617 1440 618.363
 1409.656 564.352 1355.648 c 510.344 1301.637 480 1228.383 480 1152 c 480
 1144.961 480.961 1137.055 482.879 1128.289 c 535.102 1105.059 587.613 1067.043
 636.285 1024.227 c 557.949 571.012 m 557.953 571.008 l 507.883 624.383 
480.012 694.816 480 768 c 480 844.223 509.566 913.535 557.953 964.992 c 
538.168 981.762 517.43 997.371 495.84 1011.742 c 447.359 1043.426 409.727
 1056 384 1056 c 307.617 1056 234.363 1025.656 180.352 971.648 c 126.344
 917.637 96 844.383 96 768 c 96 691.617 126.344 618.363 180.352 564.352 
c 234.363 510.344 307.617 480 384 480 c 409.727 480 447.359 492.48 495.84
 524.258 c 516.48 537.793 537.312 553.633 557.953 571.012 c 768 864 m 733.703
 864 702.012 845.703 684.863 816 c 667.711 786.297 667.711 749.703 684.863
 720 c 702.012 690.297 733.703 672 768 672 c 802.297 672 833.988 690.297
 851.137 720 c 868.289 749.703 868.289 786.297 851.137 816 c 833.988 845.703
 802.297 864 768 864 c f
Q Q
showpage
%%Trailer
%%EOF
