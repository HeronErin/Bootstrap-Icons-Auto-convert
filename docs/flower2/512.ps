%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 384 m 217.461 384 241.879 373.887 259.883 355.883 c 277.887 337.879
 288 313.461 288 288 c 322.297 288 353.988 269.703 371.137 240 c 388.289
 210.297 388.289 173.703 371.137 144 c 353.988 114.297 322.297 96 288 96
 c 288 61.703 269.703 30.012 240 12.863 c 210.297 -4.289 173.703 -4.289 
144 12.863 c 114.297 30.012 96 61.703 96 96 c 61.703 96 30.012 114.297 12.863
 144 c -4.289 173.703 -4.289 210.297 12.863 240 c 30.012 269.703 61.703 
288 96 288 c 96 313.461 106.113 337.879 124.117 355.883 c 142.121 373.887
 166.539 384 192 384 c 264 96 m 264 97.762 263.762 99.734 263.281 101.93
 c 250.227 107.715 237.098 117.242 224.93 127.945 c 214.738 122.715 203.453
 119.992 192 120 c 180.145 120 168.961 122.879 159.07 127.945 c 146.902 
117.242 133.773 107.715 120.742 101.93 c 120.25 99.992 120 98 120 96 c 120
 70.277 133.723 46.508 156 33.645 c 178.277 20.785 205.723 20.785 228 33.645
 c 250.277 46.508 264 70.277 264 96 c 244.512 241.246 m 257.027 227.902 
263.996 210.297 264 192 c 263.996 173.703 257.027 156.098 244.512 142.754
 c 249.672 138.434 254.879 134.449 260.039 131.066 c 272.16 123.145 281.566
 120 288 120 c 313.723 120 337.492 133.723 350.355 156 c 363.215 178.277
 363.215 205.723 350.355 228 c 337.492 250.277 313.723 264 288 264 c 281.566
 264 272.16 260.879 260.039 252.938 c 254.645 249.344 249.457 245.441 244.512
 241.246 c 159.07 256.055 m 179.738 266.684 204.262 266.684 224.93 256.055
 c 237.098 266.758 250.227 276.262 263.281 282.07 c 263.762 284.262 264 
286.238 264 288 c 264 313.723 250.277 337.492 228 350.355 c 205.723 363.215
 178.277 363.215 156 350.355 c 133.723 337.492 120 313.723 120 288 c 120
 286.238 120.238 284.266 120.719 282.07 c 133.773 276.262 146.902 266.758
 159.07 256.055 c 139.484 142.75 m 139.488 142.754 l 126.973 156.098 120.004
 173.703 120 192 c 120 211.055 127.391 228.383 139.488 241.246 c 134.543
 245.441 129.355 249.344 123.961 252.938 c 111.84 260.855 102.434 264 96
 264 c 70.277 264 46.508 250.277 33.645 228 c 20.785 205.723 20.785 178.277
 33.645 156 c 46.508 133.723 70.277 120 96 120 c 102.434 120 111.84 123.121
 123.961 131.062 c 129.121 134.445 134.328 138.406 139.488 142.75 c 192 
216 m 183.426 216 175.504 211.426 171.215 204 c 166.93 196.574 166.93 187.426
 171.215 180 c 175.504 172.574 183.426 168 192 168 c 200.574 168 208.496
 172.574 212.785 180 c 217.07 187.426 217.07 196.574 212.785 204 c 208.496
 211.426 200.574 216 192 216 c f
Q Q
showpage
%%Trailer
%%EOF
