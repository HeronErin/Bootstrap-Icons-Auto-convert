%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 39 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 39 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 39 384 297 rectclip
1 0 0 -1 0 384 cm q
0 g
380.594 274.824 m 373.082 284.305 354.699 291.047 354.699 291.047 c 217.996
 340.152 l 217.996 303.938 l 318.605 268.105 l 330.031 264.027 331.781 258.219
 322.492 255.195 c 313.227 252.148 296.453 253.035 285.051 257.117 c 217.996
 280.734 l 217.996 243.148 l 221.859 241.852 l 221.859 241.852 241.227 234.988
 268.469 231.965 c 295.707 228.965 329.07 232.371 355.254 242.285 c 384.773
 251.645 388.086 265.375 380.598 274.828 c 231 213.191 m 231 120.551 l 231
 109.68 229.008 99.672 218.809 96.84 c 210.984 94.32 206.137 101.594 206.137
 112.441 c 206.137 344.379 l 143.594 324.531 l 143.594 48 l 170.188 52.945
 208.922 64.609 229.754 71.641 c 282.723 89.809 300.676 112.441 300.676 
163.441 c 300.676 213.145 270.004 231.984 231.004 213.168 c h
28.824 300.191 m -1.465 291.602 -6.504 273.84 7.297 263.617 c 20.066 254.16
 41.762 247.059 41.762 247.059 c 131.449 215.137 l 131.449 251.496 l 66.891
 274.609 l 55.516 278.688 53.762 284.473 63.027 287.52 c 72.293 290.543 
89.066 289.68 100.469 285.598 c 131.43 274.34 l 131.43 306.883 l 125.262
 307.914 l 125.258 307.922 l 92.957 313.152 59.871 310.492 28.824 300.168
 c h
28.824 300.191 m f
Q Q
showpage
%%Trailer
%%EOF
