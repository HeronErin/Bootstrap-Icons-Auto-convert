%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
11.895 8.59 m 11.66 8.887 11.086 9.098 11.086 9.098 c 6.812 10.633 l 6.812
 9.5 l 9.957 8.379 l 10.312 8.25 10.367 8.07 10.078 7.977 c 9.789 7.883 
9.266 7.91 8.906 8.035 c 6.812 8.773 l 6.812 7.598 l 6.934 7.559 l 6.934
 7.559 7.539 7.344 8.391 7.25 c 9.242 7.156 10.285 7.262 11.102 7.574 c 
12.023 7.867 12.129 8.297 11.895 8.59 c 7.219 6.664 m 7.219 3.77 l 7.219
 3.43 7.156 3.117 6.836 3.027 c 6.59 2.949 6.441 3.176 6.441 3.516 c 6.441
 10.762 l 4.488 10.141 l 4.488 1.5 l 5.32 1.656 6.531 2.02 7.18 2.238 c 
8.836 2.805 9.395 3.512 9.395 5.105 c 9.395 6.66 8.438 7.246 7.219 6.66 
c h
0.902 9.383 m -0.047 9.113 -0.203 8.559 0.227 8.238 c 0.625 7.941 1.305
 7.723 1.305 7.723 c 4.109 6.727 l 4.109 7.863 l 2.094 8.586 l 1.738 8.715
 1.684 8.895 1.973 8.988 c 2.262 9.082 2.785 9.055 3.145 8.93 c 4.113 8.578
 l 4.113 9.594 l 3.922 9.625 l 3.914 9.621 l 2.906 9.785 1.871 9.703 0.902
 9.379 c h
0.902 9.383 m f
Q Q
showpage
%%Trailer
%%EOF
