%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 158 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 158 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 158 1536 1186 rectclip
1 0 0 -1 0 1536 cm q
0 g
1522.367 1099.297 m 1492.32 1137.219 1418.781 1164.191 1418.781 1164.191
 c 871.965 1360.605 l 871.965 1215.742 l 1274.398 1072.414 l 1320.094 1056.094
 1327.102 1032.863 1289.949 1020.766 c 1252.895 1008.574 1185.789 1012.125
 1140.188 1028.445 c 871.965 1122.91 l 871.965 972.574 l 887.422 967.391
 l 887.422 967.391 964.895 939.934 1073.855 927.84 c 1182.816 915.84 1316.254
 929.473 1420.992 969.121 c 1539.07 1006.562 1552.32 1061.473 1522.367 1099.297
 c 924 852.77 m 924 482.211 l 924 438.723 916.031 398.691 875.23 387.363
 c 843.934 377.285 824.543 406.371 824.543 449.762 c 824.543 1377.504 l 
574.367 1298.113 l 574.367 192 l 680.734 211.777 835.68 258.434 919.008 
286.559 c 1130.879 359.23 1202.688 449.758 1202.688 653.758 c 1202.688 852.574
 1080 927.934 924 852.668 c h
115.297 1200.77 m -5.855 1166.398 -26.016 1095.359 29.184 1054.465 c 80.254
 1016.641 167.039 988.227 167.039 988.227 c 525.793 860.547 l 525.793 1005.988
 l 267.555 1098.438 l 222.051 1114.758 215.043 1137.895 252.098 1150.086
 c 289.152 1162.184 356.258 1158.727 401.859 1142.406 c 525.699 1097.383
 l 525.699 1227.559 l 501.027 1231.688 l 501.023 1231.68 l 371.828 1252.613
 239.488 1241.973 115.297 1200.672 c h
115.297 1200.77 m f
Q Q
showpage
%%Trailer
%%EOF
