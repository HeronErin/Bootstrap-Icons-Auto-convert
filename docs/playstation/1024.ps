%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 79 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 79 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 79 768 593 rectclip
1 0 0 -1 0 768 cm q
0 g
761.184 549.648 m 746.16 568.609 709.391 582.098 709.391 582.098 c 435.984
 680.305 l 435.984 607.871 l 637.199 536.207 l 660.047 528.047 663.551 516.43
 644.977 510.383 c 626.449 504.285 592.898 506.062 570.098 514.223 c 435.984
 561.453 l 435.984 486.285 l 443.711 483.691 l 443.711 483.691 482.445 469.965
 536.926 463.914 c 591.406 457.914 658.125 464.73 710.492 484.555 c 769.531
 503.273 776.156 530.73 761.18 549.645 c 462 426.383 m 462 241.102 l 462
 219.359 458.016 199.34 437.617 193.676 c 421.969 188.637 412.273 203.18
 412.273 224.875 c 412.273 688.746 l 287.184 649.051 l 287.184 96 l 340.367
 105.887 417.84 129.215 459.504 143.281 c 565.441 179.617 601.344 224.883
 601.344 326.883 c 601.344 426.289 540 463.973 462 426.34 c h
57.648 600.383 m -2.93 583.199 -13.008 547.68 14.594 527.23 c 40.129 508.32
 83.523 494.109 83.523 494.109 c 262.898 430.27 l 262.898 502.988 l 133.777
 549.211 l 111.023 557.371 107.52 568.938 126.051 575.035 c 144.578 581.082
 178.129 579.355 200.93 571.195 c 262.852 548.684 l 262.852 613.773 l 250.516
 615.836 l 250.512 615.84 l 185.914 626.305 119.742 620.988 57.648 600.336
 c h
57.648 600.383 m f
Q Q
showpage
%%Trailer
%%EOF
