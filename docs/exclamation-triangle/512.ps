%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 361
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 361
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 337 rectclip
1 0 0 -1 0 384 cm q
0 g
190.512 48.383 m 190.984 48.125 191.512 47.992 192.047 48 c 192.578 47.996
 193.098 48.129 193.559 48.383 c 194.105 48.719 194.555 49.188 194.855 49.754
 c 359.422 329.762 l 360.285 331.203 360.262 332.738 359.469 334.152 c 359.473
 334.152 l 359.141 334.715 358.703 335.203 358.176 335.594 c 357.711 335.91
 357.152 336.055 356.594 336 c 27.504 336 l 26.945 336.055 26.383 335.91
 25.922 335.594 c 25.395 335.203 24.953 334.715 24.625 334.152 c 23.84 332.789
 23.859 331.105 24.672 329.762 c 189.215 49.754 l 189.52 49.188 189.965 
48.719 190.512 48.383 c 215.566 37.582 m 215.566 37.586 l 212.387 32.043
 207.348 27.801 201.344 25.609 c 195.34 23.418 188.754 23.418 182.75 25.609
 c 176.746 27.801 171.711 32.043 168.527 37.586 c 3.961 317.594 l -7.008
 336.266 6.145 360 27.48 360 c 356.594 360 l 377.93 360 391.105 336.238 
380.113 317.594 c h
215.566 37.582 m f
168.047 288 m 168.047 279.426 172.621 271.504 180.047 267.215 c 187.473
 262.93 196.621 262.93 204.047 267.215 c 211.473 271.504 216.047 279.426
 216.047 288 c 216.047 296.574 211.473 304.496 204.047 308.785 c 196.621
 313.07 187.473 313.07 180.047 308.785 c 172.621 304.496 168.047 296.574
 168.047 288 c 170.398 143.879 m 169.754 137.758 171.738 131.648 175.855
 127.07 c 179.977 122.492 185.844 119.879 192 119.879 c 198.156 119.879 
204.023 122.492 208.145 127.07 c 212.262 131.648 214.246 137.758 213.602
 143.879 c 205.203 228.047 l 205.199 228.047 l 204.613 234.902 198.879 240.168
 192 240.168 c 185.121 240.168 179.387 234.902 178.801 228.047 c h
170.398 143.879 m f
Q Q
showpage
%%Trailer
%%EOF
