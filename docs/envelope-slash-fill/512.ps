%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
1.199 85.32 m 3.621 74.719 9.566 65.25 18.07 58.473 c 26.574 51.691 37.125
 48 48 48 c 336 48 l 346.875 48 357.426 51.691 365.93 58.473 c 374.434 65.25
 380.379 74.719 382.801 85.32 c 192 201.938 l h
0 112.727 m 0 283.223 l 139.273 197.832 l h
162.266 211.922 m 4.586 308.547 l 4.586 308.543 l 8.477 316.762 14.625 
323.707 22.309 328.57 c 29.996 333.43 38.906 336.008 48 336 c 198.145 336
 l 194.066 324.438 191.988 312.262 192 300 c 191.965 268.086 206.082 237.797
 230.543 217.297 c 221.734 211.898 l 192 230.062 l h
384 112.727 m 384 232.105 l 363.492 206.738 332.621 191.996 300 192 c 283.664
 191.988 267.539 195.68 252.84 202.801 c 244.727 197.832 l h
384 112.727 m f
359.398 240.602 m 338.18 219.379 307.246 211.09 278.258 218.859 c 249.27
 226.625 226.625 249.27 218.859 278.258 c 211.09 307.246 219.379 338.18 
240.602 359.398 c 261.82 380.621 292.754 388.91 321.742 381.141 c 350.73
 373.375 373.375 350.73 381.141 321.742 c 388.91 292.754 380.621 261.82 
359.398 240.602 c 257.566 257.57 m 257.566 257.566 l 267.348 247.785 280.207
 241.68 293.973 240.289 c 307.734 238.898 321.555 242.305 333.098 249.938
 c 249.938 333.098 l 242.305 321.555 238.898 307.734 240.289 293.973 c 241.68
 280.207 247.785 267.348 257.566 257.566 c 266.926 350.062 m 350.062 266.902
 l 360.297 282.41 362.773 301.785 356.77 319.367 c 350.762 336.953 336.953
 350.762 319.367 356.77 c 301.785 362.773 282.41 360.297 266.902 350.062
 c h
266.926 350.062 m f
Q Q
showpage
%%Trailer
%%EOF
