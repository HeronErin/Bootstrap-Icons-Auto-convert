%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 12 m 5.793 12 5.625 11.832 5.625 11.625 c 5.625 10.656 l 5.141 11.141
 l 4.992 11.285 4.758 11.285 4.609 11.141 c 4.465 10.992 4.465 10.758 4.609
 10.609 c 5.625 9.594 l 5.625 8.777 l 5.141 9.262 l 5.141 9.266 l 4.992 
9.41 4.758 9.41 4.609 9.266 c 4.465 9.117 4.465 8.883 4.609 8.734 c 5.625
 7.719 l 5.625 6.648 l 4.699 7.184 l 4.328 8.57 l 4.273 8.773 4.066 8.891
 3.867 8.836 c 3.668 8.781 3.547 8.578 3.602 8.375 c 3.781 7.715 l 3.078
 8.121 l 2.707 9.508 l 2.703 9.508 l 2.648 9.711 2.441 9.828 2.242 9.773
 c 2.043 9.719 1.926 9.516 1.977 9.312 c 2.156 8.652 l 1.316 9.137 l 1.137
 9.238 0.91 9.176 0.805 9 c 0.703 8.82 0.762 8.594 0.941 8.488 c 1.781 8.004
 l 1.117 7.824 l 0.918 7.773 0.801 7.566 0.852 7.367 c 0.906 7.164 1.113
 7.047 1.312 7.102 c 2.699 7.473 l 3.402 7.066 l 2.742 6.887 l 2.645 6.863
 2.562 6.801 2.512 6.715 c 2.461 6.629 2.445 6.523 2.473 6.426 c 2.496 6.332
 2.562 6.246 2.648 6.199 c 2.734 6.148 2.84 6.137 2.938 6.164 c 4.324 6.535
 l 5.25 6 l 4.324 5.465 l 2.938 5.836 l 2.84 5.863 2.734 5.852 2.648 5.801
 c 2.562 5.754 2.496 5.668 2.473 5.574 c 2.445 5.477 2.461 5.371 2.512 5.285
 c 2.562 5.199 2.645 5.137 2.742 5.113 c 3.406 4.934 l 2.703 4.527 l 1.316
 4.898 l 1.312 4.898 l 1.113 4.949 0.914 4.828 0.859 4.633 c 0.809 4.434
 0.922 4.23 1.117 4.176 c 1.781 3.996 l 0.941 3.512 l 0.855 3.461 0.789 
3.383 0.766 3.285 c 0.738 3.188 0.75 3.086 0.801 3 c 0.852 2.914 0.934 2.848
 1.031 2.824 c 1.129 2.797 1.23 2.812 1.316 2.863 c 2.156 3.348 l 1.977 
2.684 l 1.93 2.488 2.047 2.285 2.246 2.23 c 2.441 2.18 2.648 2.293 2.703
 2.492 c 3.074 3.879 l 3.777 4.285 l 3.602 3.621 l 3.555 3.426 3.672 3.223
 3.871 3.168 c 4.066 3.117 4.27 3.23 4.328 3.43 c 4.699 4.816 l 5.625 5.352
 l 5.625 4.281 l 4.609 3.266 l 4.539 3.195 4.5 3.102 4.5 3 c 4.5 2.902 4.539
 2.805 4.609 2.734 c 4.758 2.59 4.992 2.59 5.141 2.734 c 5.625 3.219 l 5.625
 2.406 l 4.609 1.391 l 4.539 1.32 4.5 1.227 4.5 1.125 c 4.5 1.027 4.539 
0.93 4.609 0.859 c 4.758 0.715 4.992 0.715 5.141 0.859 c 5.625 1.344 l 5.625
 0.375 l 5.625 0.168 5.793 0 6 0 c 6.207 0 6.375 0.168 6.375 0.375 c 6.375
 1.344 l 6.859 0.859 l 7.008 0.715 7.246 0.715 7.391 0.859 c 7.539 1.008
 7.539 1.242 7.391 1.391 c 6.375 2.406 l 6.375 3.223 l 6.859 2.738 l 6.859
 2.734 l 7.008 2.59 7.246 2.59 7.391 2.734 c 7.539 2.883 7.539 3.117 7.391
 3.266 c 6.375 4.281 l 6.375 5.352 l 7.301 4.816 l 7.672 3.43 l 7.727 3.227
 7.934 3.109 8.133 3.164 c 8.332 3.219 8.453 3.422 8.398 3.625 c 8.223 4.285
 l 8.926 3.879 l 9.297 2.492 l 9.352 2.289 9.559 2.172 9.758 2.227 c 9.957
 2.281 10.074 2.484 10.023 2.688 c 9.848 3.348 l 10.688 2.863 l 10.684 2.863
 l 10.863 2.762 11.09 2.824 11.195 3 c 11.297 3.18 11.238 3.406 11.059 3.512
 c 10.219 3.996 l 10.883 4.176 l 11.082 4.227 11.199 4.434 11.148 4.633 
c 11.094 4.836 10.887 4.953 10.688 4.898 c 9.301 4.527 l 8.598 4.934 l 9.262
 5.113 l 9.258 5.113 l 9.457 5.164 9.578 5.371 9.523 5.57 c 9.469 5.773 
9.262 5.891 9.062 5.836 c 7.676 5.465 l 6.75 6 l 7.676 6.535 l 9.062 6.164
 l 9.266 6.109 9.469 6.23 9.523 6.43 c 9.578 6.629 9.457 6.836 9.258 6.887
 c 8.594 7.066 l 9.297 7.473 l 10.684 7.102 l 10.688 7.102 l 10.887 7.047
 11.094 7.168 11.148 7.367 c 11.199 7.566 11.082 7.773 10.883 7.824 c 10.219
 8.004 l 11.059 8.488 l 11.238 8.594 11.297 8.82 11.195 9 c 11.09 9.176 
10.863 9.238 10.684 9.137 c 9.844 8.652 l 10.02 9.316 l 10.023 9.316 l 10.051
 9.41 10.035 9.516 9.988 9.602 c 9.938 9.691 9.855 9.754 9.758 9.781 c 9.66
 9.805 9.559 9.793 9.469 9.742 c 9.383 9.691 9.32 9.605 9.297 9.508 c 8.926
 8.121 l 8.223 7.715 l 8.398 8.379 l 8.445 8.574 8.328 8.777 8.129 8.832
 c 7.934 8.883 7.73 8.77 7.672 8.57 c 7.301 7.184 l 6.375 6.648 l 6.375 
7.719 l 7.391 8.734 l 7.539 8.883 7.539 9.117 7.391 9.266 c 7.246 9.41 7.008
 9.41 6.859 9.266 c 6.375 8.781 l 6.375 9.598 l 7.391 10.613 l 7.391 10.609
 l 7.539 10.758 7.539 10.992 7.391 11.141 c 7.246 11.285 7.008 11.285 6.859
 11.141 c 6.375 10.656 l 6.375 11.625 l 6.375 11.723 6.336 11.82 6.266 11.891
 c 6.195 11.961 6.098 12 6 12 c f
Q Q
showpage
%%Trailer
%%EOF
