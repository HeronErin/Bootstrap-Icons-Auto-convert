%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 96 1344 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 96 1344 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 96 1152 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 144 m 192 131.27 197.059 119.062 206.059 110.059 c 215.062 101.059 
227.27 96 240 96 c 1296 96 l 1313.148 96 1328.996 105.148 1337.57 120 c 
1346.145 134.852 1346.145 153.148 1337.57 168 c 1328.996 182.852 1313.148
 192 1296 192 c 1200 192 l 1200 288 l 1200.02 369.508 1176.98 449.355 1133.543
 518.324 c 1090.109 587.293 1028.047 642.566 954.527 677.762 c 926.688 691.105
 912 713.953 912 734.402 c 912 801.602 l 912 822.051 926.785 844.898 954.527
 858.242 c 954.527 858.238 l 1028.047 893.434 1090.109 948.707 1133.543 
1017.676 c 1176.98 1086.645 1200.02 1166.492 1200 1248 c 1200 1344 l 1296
 1344 l 1313.148 1344 1328.996 1353.148 1337.57 1368 c 1346.145 1382.852
 1346.145 1401.148 1337.57 1416 c 1328.996 1430.852 1313.148 1440 1296 1440
 c 240 1440 l 222.852 1440 207.004 1430.852 198.43 1416 c 189.855 1401.148
 189.855 1382.852 198.43 1368 c 207.004 1353.148 222.852 1344 240 1344 c
 336 1344 l 336 1248 l 335.98 1166.492 359.02 1086.645 402.457 1017.676 
c 445.891 948.707 507.953 893.434 581.473 858.238 c 609.312 844.895 624 
822.047 624 801.598 c 624 734.398 l 624 713.949 609.215 691.102 581.473 
677.758 c 581.473 677.762 l 507.953 642.566 445.891 587.293 402.457 518.324
 c 359.02 449.355 335.98 369.508 336 288 c 336 192 l 240 192 l 227.27 192
 215.062 186.941 206.059 177.941 c 197.059 168.938 192 156.73 192 144 c 
432 192 m 432 288 l 431.984 351.398 449.902 413.512 483.691 467.16 c 517.48
 520.805 565.758 563.797 622.945 591.168 c 674.113 615.742 720 667.105 720
 734.305 c 720 801.695 l 720 868.895 674.113 920.254 622.945 944.832 c 565.758
 972.203 517.48 1015.195 483.691 1068.84 c 449.902 1122.488 431.984 1184.602
 432 1248 c 432 1344 l 1104 1344 l 1104 1248 l 1104.016 1184.602 1086.098
 1122.488 1052.309 1068.84 c 1018.52 1015.195 970.242 972.203 913.055 944.832
 c 861.887 920.258 816 868.992 816 801.695 c 816 734.305 l 816 667.105 861.887
 615.746 913.055 591.168 c 970.242 563.797 1018.52 520.805 1052.309 467.16
 c 1086.098 413.512 1104.016 351.398 1104 288 c 1104 192 l h
432 192 m f
Q Q
showpage
%%Trailer
%%EOF
