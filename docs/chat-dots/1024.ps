%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 3 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 3 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 3 768 717 rectclip
1 0 0 -1 0 768 cm q
0 g
240 384 m 240 401.148 230.852 416.996 216 425.57 c 201.148 434.145 182.852
 434.145 168 425.57 c 153.148 416.996 144 401.148 144 384 c 144 366.852 
153.148 351.004 168 342.43 c 182.852 333.855 201.148 333.855 216 342.43 
c 230.852 351.004 240 366.852 240 384 c 432 384 m 432 401.148 422.852 416.996
 408 425.57 c 393.148 434.145 374.852 434.145 360 425.57 c 345.148 416.996
 336 401.148 336 384 c 336 366.852 345.148 351.004 360 342.43 c 374.852 
333.855 393.148 333.855 408 342.43 c 422.852 351.004 432 366.852 432 384
 c 576 432 m 593.148 432 608.996 422.852 617.57 408 c 626.145 393.148 626.145
 374.852 617.57 360 c 608.996 345.148 593.148 336 576 336 c 558.852 336 
543.004 345.148 534.43 360 c 525.855 374.852 525.855 393.148 534.43 408 
c 543.004 422.852 558.852 432 576 432 c f
103.922 758.543 m 104.883 758.352 l 192.723 740.926 246.387 717.938 271.348
 705.312 c 271.344 705.312 l 308.086 715.145 345.965 720.086 384 720 c 596.062
 720 768 569.566 768 384 c 768 198.434 596.062 48 384 48 c 171.938 48 0 
198.434 0 384 c 0 468.48 35.664 545.762 94.559 604.801 c 90.453 642.727 
82.016 680.059 69.406 716.062 c 69.262 716.59 l 69.266 716.594 l 65.676 
726.902 61.77 737.098 57.551 747.168 c 53.758 756.098 61.102 766.078 70.656
 764.543 c 81.773 762.723 92.863 760.723 103.922 758.543 c 142.32 609.359
 m 143.68 595.133 138.633 581.039 128.543 570.91 c 77.664 519.84 48 454.465
 48 384 c 48 230.785 192.191 96 384 96 c 575.809 96 720 230.785 720 384 
c 720 537.215 575.809 672 384 672 c 350.164 672.082 316.461 667.691 283.777
 658.945 c 272.352 655.883 260.199 657.148 249.648 662.496 c 231.074 671.902
 190.129 689.855 123.215 705.359 c 132.543 674.02 138.938 641.883 142.32
 609.359 c f
Q Q
showpage
%%Trailer
%%EOF
