%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 6 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 6 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 6 1536 1434 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 768 m 480 802.297 461.703 833.988 432 851.137 c 402.297 868.289 365.703
 868.289 336 851.137 c 306.297 833.988 288 802.297 288 768 c 288 733.703
 306.297 702.012 336 684.863 c 365.703 667.711 402.297 667.711 432 684.863
 c 461.703 702.012 480 733.703 480 768 c 864 768 m 864 802.297 845.703 833.988
 816 851.137 c 786.297 868.289 749.703 868.289 720 851.137 c 690.297 833.988
 672 802.297 672 768 c 672 733.703 690.297 702.012 720 684.863 c 749.703
 667.711 786.297 667.711 816 684.863 c 845.703 702.012 864 733.703 864 768
 c 1152 864 m 1186.297 864 1217.988 845.703 1235.137 816 c 1252.289 786.297
 1252.289 749.703 1235.137 720 c 1217.988 690.297 1186.297 672 1152 672 
c 1117.703 672 1086.012 690.297 1068.863 720 c 1051.711 749.703 1051.711
 786.297 1068.863 816 c 1086.012 845.703 1117.703 864 1152 864 c f
207.84 1517.09 m 209.762 1516.707 l 385.441 1481.859 492.77 1435.875 542.691
 1410.629 c 542.688 1410.625 l 616.172 1430.293 691.93 1440.168 768 1440
 c 1192.129 1440 1536 1139.137 1536 768 c 1536 396.863 1192.129 96 768 96
 c 343.871 96 0 396.863 0 768 c 0 936.961 71.328 1091.52 189.121 1209.602
 c 180.91 1285.453 164.031 1360.117 138.816 1432.129 c 138.527 1433.184 
l 131.355 1453.805 123.543 1474.199 115.105 1494.336 c 107.52 1512.191 122.211
 1532.16 141.312 1529.09 c 163.551 1525.441 185.73 1521.441 207.84 1517.09
 c 284.641 1218.723 m 284.641 1218.719 l 287.363 1190.266 277.262 1162.074
 257.09 1141.824 c 155.328 1039.68 96 908.93 96 768 c 96 461.566 384.383
 192 768 192 c 1151.617 192 1440 461.566 1440 768 c 1440 1074.434 1151.617
 1344 768 1344 c 700.324 1344.164 632.926 1335.387 567.551 1317.887 c 544.703
 1311.766 520.395 1314.297 499.297 1324.992 c 462.145 1343.809 380.258 1379.711
 246.434 1410.719 c 265.086 1348.043 277.875 1283.766 284.641 1218.719 c
 f
Q Q
showpage
%%Trailer
%%EOF
