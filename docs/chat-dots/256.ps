%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 180 rectclip
1 0 0 -1 0 192 cm q
0 g
60 96 m 60 102.629 54.629 108 48 108 c 41.371 108 36 102.629 36 96 c 36
 89.371 41.371 84 48 84 c 54.629 84 60 89.371 60 96 c 108 96 m 108 102.629
 102.629 108 96 108 c 89.371 108 84 102.629 84 96 c 84 89.371 89.371 84 
96 84 c 102.629 84 108 89.371 108 96 c 144 108 m 150.629 108 156 102.629
 156 96 c 156 89.371 150.629 84 144 84 c 137.371 84 132 89.371 132 96 c 
132 102.629 137.371 108 144 108 c f
25.98 189.637 m 26.219 189.59 l 48.18 185.234 61.594 179.484 67.836 176.328
 c 77.02 178.785 86.492 180.02 96 180 c 149.016 180 192 142.391 192 96 c
 192 49.609 149.016 12 96 12 c 42.984 12 0 49.609 0 96 c 0 117.121 8.914
 136.441 23.641 151.199 c 22.613 160.684 20.504 170.016 17.352 179.016 c
 17.316 179.148 l 16.418 181.727 15.441 184.273 14.387 186.793 c 13.438 
189.023 15.273 191.52 17.664 191.137 c 20.445 190.68 23.215 190.18 25.98
 189.637 c 35.582 152.34 m 35.578 152.34 l 35.922 148.781 34.656 145.258
 32.137 142.727 c 19.414 129.961 12 113.617 12 96 c 12 57.695 48.047 24 
96 24 c 143.953 24 180 57.695 180 96 c 180 134.305 143.953 168 96 168 c 
87.539 168.02 79.117 166.922 70.945 164.734 c 68.086 163.969 65.051 164.285
 62.41 165.625 c 57.766 167.977 47.531 172.465 30.801 176.34 c 30.805 176.34
 l 33.137 168.504 34.734 160.469 35.578 152.34 c f
Q Q
showpage
%%Trailer
%%EOF
