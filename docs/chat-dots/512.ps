%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 1 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 1 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 1 384 359 rectclip
1 0 0 -1 0 384 cm q
0 g
120 192 m 120 200.574 115.426 208.496 108 212.785 c 100.574 217.07 91.426
 217.07 84 212.785 c 76.574 208.496 72 200.574 72 192 c 72 183.426 76.574
 175.504 84 171.215 c 91.426 166.93 100.574 166.93 108 171.215 c 115.426
 175.504 120 183.426 120 192 c 216 192 m 216 200.574 211.426 208.496 204
 212.785 c 196.574 217.07 187.426 217.07 180 212.785 c 172.574 208.496 168
 200.574 168 192 c 168 183.426 172.574 175.504 180 171.215 c 187.426 166.93
 196.574 166.93 204 171.215 c 211.426 175.504 216 183.426 216 192 c 288 
216 m 296.574 216 304.496 211.426 308.785 204 c 313.07 196.574 313.07 187.426
 308.785 180 c 304.496 172.574 296.574 168 288 168 c 279.426 168 271.504
 172.574 267.215 180 c 262.93 187.426 262.93 196.574 267.215 204 c 271.504
 211.426 279.426 216 288 216 c f
51.961 379.273 m 52.441 379.176 l 96.363 370.465 123.195 358.969 135.672
 352.656 c 154.043 357.574 172.984 360.043 192 360 c 298.031 360 384 284.785
 384 192 c 384 99.215 298.031 24 192 24 c 85.969 24 0 99.215 0 192 c 0 234.238
 17.832 272.879 47.281 302.398 c 45.227 321.363 41.008 340.031 34.703 358.031
 c 34.633 358.297 l 32.84 363.453 30.887 368.551 28.777 373.586 c 26.883
 378.051 30.555 383.043 35.328 382.273 c 40.887 381.359 46.434 380.359 51.961
 379.273 c 71.16 304.68 m 71.84 297.566 69.316 290.52 64.273 285.457 c 38.832
 259.922 24 227.23 24 192 c 24 115.391 96.098 48 192 48 c 287.902 48 360
 115.391 360 192 c 360 268.609 287.902 336 192 336 c 175.082 336.043 158.23
 333.848 141.887 329.473 c 136.176 327.941 130.098 328.574 124.824 331.246
 c 115.535 335.949 95.062 344.926 61.609 352.68 c 66.27 337.012 69.469 320.941
 71.16 304.68 c f
Q Q
showpage
%%Trailer
%%EOF
