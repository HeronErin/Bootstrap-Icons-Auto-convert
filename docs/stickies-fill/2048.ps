%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 144 m 0 1248 l 0 1273.461 10.113 1297.879 28.117 1315.883 c 46.121 1333.887
 70.539 1344 96 1344 c 96 144 l 96 131.27 101.059 119.062 110.059 110.059
 c 119.062 101.059 131.27 96 144 96 c 1344 96 l 1344 70.539 1333.887 46.121
 1315.883 28.117 c 1297.879 10.113 1273.461 0 1248 0 c 144 0 l 105.809 0
 69.184 15.172 42.176 42.176 c 15.172 69.184 0 105.809 0 144 c f
336 192 m 297.809 192 261.184 207.172 234.176 234.176 c 207.172 261.184
 192 297.809 192 336 c 192 1392 l 192 1430.191 207.172 1466.816 234.176 
1493.824 c 261.184 1520.828 297.809 1536 336 1536 c 920.258 1536 l 958.434
 1535.965 995.035 1520.773 1022.016 1493.762 c 1493.855 1022.02 l 1493.855
 1022.016 l 1520.832 995.02 1535.992 958.422 1536 920.258 c 1536 336 l 1536
 297.809 1520.828 261.184 1493.824 234.176 c 1466.816 207.172 1430.191 192
 1392 192 c h
912 1008 m 912 982.539 922.113 958.121 940.117 940.117 c 958.121 922.113
 982.539 912 1008 912 c 1430.016 912 l 1436.391 911.988 1442.508 914.512
 1447.016 919.016 c 1451.527 923.52 1454.059 929.633 1454.059 936.008 c 
1454.059 942.379 1451.52 948.492 1447.008 952.992 c 952.992 1447.008 l 948.492
 1451.52 942.379 1454.059 936.008 1454.059 c 929.633 1454.059 923.52 1451.527
 919.016 1447.016 c 914.512 1442.508 911.988 1436.391 912 1430.016 c h
912 1008 m f
Q Q
showpage
%%Trailer
%%EOF
