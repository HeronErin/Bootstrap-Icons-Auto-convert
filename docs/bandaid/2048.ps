%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 2 2 1534 1534
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 2 2 1534 1534
1536 1536 cairo_set_page_size
%%EndPageSetup
q 2 2 1532 1532 rectclip
1 0 0 -1 0 1536 cm q
0 g
1355.617 180.383 m 1301.609 126.391 1228.367 96.062 1152 96.062 c 1075.633
 96.062 1002.391 126.391 948.383 180.383 c 838.367 290.496 l 1247.422 699.457
 l 1355.613 587.617 l 1355.617 587.617 l 1409.609 533.609 1439.938 460.367
 1439.938 384 c 1439.938 307.633 1409.609 234.391 1355.617 180.383 c 1180.129
 768 m 770.594 358.465 l 358.848 770.977 l 768 1180.129 l h
699.555 1247.426 m 290.879 838.754 l 180.383 948.48 l 129.207 1003.031 
101.258 1075.352 102.457 1150.141 c 103.652 1224.93 133.898 1296.316 186.797
 1349.203 c 239.695 1402.086 311.09 1432.316 385.879 1433.496 c 460.668 
1434.676 532.98 1406.711 587.52 1355.52 c 588.094 1354.945 l 699.453 1247.328
 l h
257.184 736.895 m 880.414 112.512 l 952.656 41.781 1049.871 2.395 1150.973
 2.898 c 1252.07 3.398 1348.891 43.75 1420.426 115.195 c 1491.957 186.641
 1532.43 283.41 1533.055 384.508 c 1533.684 485.605 1494.418 582.875 1423.777
 655.199 c 1281.984 801.984 l 801.41 1282.559 l 655.203 1423.871 l 655.199
 1423.871 l 582.875 1494.512 485.605 1533.781 384.508 1533.152 c 283.41 
1532.523 186.641 1492.055 115.195 1420.52 c 43.75 1348.988 3.398 1252.168
 2.898 1151.066 c 2.395 1049.969 41.781 952.75 112.512 880.512 c 112.609
 880.32 l 257.09 737.09 l h
257.184 736.895 m f
533.762 734.016 m 543.031 742.949 548.328 755.23 548.457 768.102 c 548.59
 780.977 543.539 793.363 534.449 802.48 c 525.359 811.598 512.988 816.68
 500.113 816.586 c 487.238 816.492 474.941 811.23 465.984 801.984 c 456.973
 792.984 451.902 780.77 451.895 768.035 c 451.883 755.297 456.938 743.078
 465.938 734.062 c 474.938 725.051 487.148 719.98 499.887 719.973 c 512.625
 719.965 524.844 725.016 533.855 734.016 c h
669.602 598.273 m 678.859 607.215 684.141 619.508 684.254 632.379 c 684.363
 645.254 679.301 657.637 670.195 666.738 c 661.09 675.844 648.711 680.906
 635.836 680.797 c 622.961 680.684 610.672 675.406 601.727 666.145 c 589.953
 653.953 585.48 636.453 589.961 620.105 c 594.445 603.758 607.215 590.988
 623.562 586.508 c 639.91 582.023 657.406 586.496 669.602 598.273 c 805.441
 462.527 m 817.562 474.668 822.289 492.355 817.836 508.926 c 813.387 525.496
 800.43 538.434 783.852 542.863 c 767.277 547.293 749.598 542.543 737.473
 530.398 c 725.695 518.207 721.223 500.711 725.707 484.363 c 730.188 468.016
 742.961 455.242 759.305 450.762 c 775.652 446.281 793.152 450.754 805.344
 462.527 c h
805.441 1005.598 m 805.441 1005.602 l 817.562 1017.742 822.289 1035.43 
817.836 1052 c 813.387 1068.57 800.43 1081.504 783.852 1085.934 c 767.277
 1090.363 749.598 1085.613 737.473 1073.473 c 725.695 1061.281 721.223 1043.781
 725.707 1027.434 c 730.188 1011.086 742.961 998.316 759.305 993.836 c 775.652
 989.352 793.152 993.824 805.344 1005.602 c h
941.09 869.762 m 953.23 881.883 957.98 899.566 953.551 916.141 c 949.121
 932.719 936.184 945.672 919.613 950.125 c 903.043 954.578 885.355 949.852
 873.215 937.727 c 861.441 925.535 856.969 908.035 861.449 891.691 c 865.934
 875.344 878.703 862.57 895.051 858.09 c 911.398 853.609 928.895 858.082
 941.09 869.855 c h
1076.832 734.02 m 1076.832 734.016 l 1086.105 742.949 1091.402 755.23 1091.531
 768.102 c 1091.66 780.977 1086.613 793.363 1077.523 802.48 c 1068.43 811.598
 1056.059 816.68 1043.184 816.586 c 1030.312 816.492 1018.016 811.23 1009.055
 801.984 c 1000.043 792.984 994.973 780.77 994.965 768.035 c 994.957 755.297
 1000.008 743.078 1009.008 734.062 c 1018.008 725.051 1030.219 719.98 1042.957
 719.973 c 1055.695 719.965 1067.914 725.016 1076.93 734.016 c h
669.602 869.762 m 681.742 881.883 686.492 899.566 682.062 916.141 c 677.633
 932.719 664.699 945.672 648.129 950.125 c 631.555 954.578 613.871 949.852
 601.727 937.727 c 589.953 925.535 585.48 908.035 589.961 891.691 c 594.445
 875.344 607.215 862.57 623.562 858.09 c 639.91 853.609 657.406 858.082 
669.602 869.855 c h
805.441 734.016 m 817.582 746.156 822.324 763.855 817.879 780.438 c 813.434
 797.023 800.48 809.98 783.895 814.422 c 767.309 818.867 749.613 814.125
 737.473 801.984 c 728.457 792.984 723.391 780.77 723.383 768.035 c 723.371
 755.297 728.422 743.078 737.426 734.062 c 746.426 725.051 758.637 719.98
 771.375 719.973 c 784.113 719.965 796.332 725.016 805.344 734.016 c h
941.09 598.273 m 950.348 607.215 955.629 619.508 955.738 632.379 c 955.852
 645.254 950.785 657.637 941.684 666.738 c 932.578 675.844 920.199 680.906
 907.324 680.797 c 894.449 680.684 882.16 675.406 873.215 666.145 c 861.441
 653.953 856.969 636.453 861.449 620.105 c 865.934 603.758 878.703 590.988
 895.051 586.508 c 911.398 582.023 928.895 586.496 941.09 598.273 c f
Q Q
showpage
%%Trailer
%%EOF
