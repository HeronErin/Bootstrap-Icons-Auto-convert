%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.59 1.41 m 9.711 0.531 8.289 0.531 7.41 1.41 c 6.551 2.27 l 9.746 5.465
 l 10.59 4.59 l 11.469 3.711 11.469 2.289 10.59 1.41 c 9.219 6 m 6.02 2.801
 l 2.805 6.023 l 6 9.219 l h
5.465 9.746 m 2.273 6.555 l 1.41 7.41 l 0.578 8.297 0.602 9.684 1.461 10.539
 c 2.32 11.398 3.703 11.422 4.59 10.59 c 4.594 10.586 l h
2.008 5.758 m 6.875 0.879 l 6.879 0.879 l 8.055 -0.27 9.934 -0.262 11.098
 0.898 c 12.262 2.062 12.273 3.941 11.125 5.117 c 10.016 6.266 l 6.262 10.02
 l 5.121 11.125 l 5.117 11.125 l 3.941 12.273 2.062 12.262 0.898 11.098 
c -0.262 9.934 -0.27 8.055 0.879 6.879 c 2.008 5.762 l h
2.008 5.758 m f
4.172 5.734 m 4.242 5.805 4.285 5.898 4.285 6 c 4.285 6.102 4.246 6.199
 4.176 6.27 c 4.105 6.34 4.008 6.379 3.906 6.379 c 3.805 6.379 3.711 6.336
 3.641 6.266 c 3.57 6.195 3.531 6.102 3.531 6 c 3.531 5.902 3.57 5.805 3.641
 5.734 c 3.785 5.59 4.023 5.59 4.172 5.734 c h
5.234 4.676 m 5.23 4.676 l 5.305 4.742 5.344 4.84 5.348 4.941 c 5.348 5.043
 5.309 5.137 5.234 5.207 c 5.164 5.281 5.066 5.32 4.969 5.32 c 4.867 5.316
 4.77 5.277 4.699 5.203 c 4.559 5.059 4.562 4.824 4.707 4.68 c 4.852 4.535
 5.086 4.531 5.23 4.676 c 6.293 3.613 m 6.438 3.762 6.438 3.996 6.293 4.145
 c 6.145 4.289 5.906 4.289 5.762 4.145 c 5.621 3.996 5.621 3.762 5.766 3.617
 c 5.91 3.473 6.145 3.473 6.293 3.613 c h
6.293 7.855 m 6.438 8.004 6.438 8.242 6.293 8.387 c 6.145 8.535 5.906 8.531
 5.762 8.387 c 5.621 8.238 5.621 8.004 5.766 7.859 c 5.91 7.715 6.145 7.715
 6.293 7.855 c h
7.352 6.797 m 7.5 6.941 7.5 7.18 7.352 7.324 c 7.207 7.473 6.969 7.473 
6.82 7.324 c 6.68 7.18 6.684 6.945 6.828 6.801 c 6.973 6.656 7.207 6.652
 7.352 6.797 c h
8.41 5.738 m 8.414 5.734 l 8.484 5.805 8.527 5.898 8.527 6 c 8.527 6.102
 8.488 6.199 8.418 6.27 c 8.348 6.34 8.25 6.379 8.148 6.379 c 8.051 6.379
 7.953 6.336 7.883 6.266 c 7.812 6.195 7.773 6.102 7.773 6 c 7.773 5.902
 7.812 5.805 7.883 5.734 c 8.031 5.59 8.266 5.59 8.414 5.734 c h
5.23 6.797 m 5.379 6.941 5.379 7.18 5.23 7.324 c 5.086 7.473 4.848 7.473
 4.699 7.324 c 4.559 7.18 4.562 6.945 4.707 6.801 c 4.852 6.656 5.086 6.652
 5.23 6.797 c h
6.293 5.734 m 6.438 5.883 6.438 6.117 6.293 6.266 c 6.145 6.414 5.906 6.414
 5.762 6.266 c 5.691 6.195 5.652 6.102 5.652 6 c 5.652 5.902 5.691 5.805
 5.762 5.734 c 5.906 5.59 6.145 5.59 6.293 5.734 c h
7.352 4.676 m 7.426 4.742 7.465 4.84 7.465 4.941 c 7.469 5.043 7.43 5.137
 7.355 5.207 c 7.285 5.281 7.188 5.32 7.09 5.32 c 6.988 5.316 6.891 5.277
 6.82 5.203 c 6.68 5.059 6.684 4.824 6.828 4.68 c 6.973 4.535 7.207 4.531
 7.352 4.676 c f
Q Q
showpage
%%Trailer
%%EOF
