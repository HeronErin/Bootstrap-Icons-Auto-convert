%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 1 1 767 767
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 1 1 767 767
768 768 cairo_set_page_size
%%EndPageSetup
q 1 1 766 766 rectclip
1 0 0 -1 0 768 cm q
0 g
677.809 90.191 m 650.805 63.195 614.184 48.031 576 48.031 c 537.816 48.031
 501.195 63.195 474.191 90.191 c 419.184 145.246 l 623.711 349.727 l 677.809
 293.805 l 677.809 293.809 l 704.805 266.805 719.969 230.184 719.969 192
 c 719.969 153.816 704.805 117.195 677.809 90.191 c 590.062 384 m 385.297
 179.23 l 179.426 385.488 l 384 590.062 l h
349.773 623.711 m 145.441 419.375 l 90.191 474.238 l 55.738 510.965 42.969
 563.023 56.523 611.523 c 70.078 660.023 107.98 697.918 156.484 711.461 
c 204.988 725.004 257.043 712.223 293.762 677.762 c 294.051 677.473 l 349.73
 623.664 l h
128.594 368.449 m 440.211 56.258 l 440.207 56.258 l 476.328 20.891 524.938
 1.195 575.484 1.449 c 626.035 1.699 674.445 21.875 710.211 57.598 c 745.98
 93.32 766.215 141.707 766.527 192.254 c 766.844 242.805 747.207 291.438
 711.887 327.602 c 640.992 400.992 l 400.703 641.281 l 327.598 711.938 l
 327.602 711.938 l 291.438 747.258 242.805 766.891 192.254 766.578 c 141.707
 766.262 93.32 746.027 57.598 710.262 c 21.875 674.492 1.699 626.082 1.449
 575.535 c 1.195 524.984 20.891 476.375 56.258 440.258 c 56.305 440.16 l
 128.543 368.543 l h
128.594 368.449 m f
266.879 367.008 m 271.516 371.473 274.164 377.613 274.23 384.051 c 274.293
 390.488 271.77 396.684 267.227 401.238 c 262.68 405.797 256.492 408.34 
250.055 408.293 c 243.621 408.246 237.473 405.617 232.992 400.992 c 228.484
 396.492 225.949 390.387 225.945 384.016 c 225.941 377.648 228.469 371.539
 232.969 367.031 c 237.469 362.527 243.574 359.992 249.941 359.988 c 256.312
 359.98 262.422 362.508 266.93 367.008 c h
334.801 299.137 m 339.43 303.609 342.07 309.754 342.125 316.191 c 342.184
 322.629 339.648 328.816 335.098 333.371 c 330.547 337.922 324.355 340.453
 317.918 340.398 c 311.48 340.344 305.336 337.703 300.863 333.07 c 294.977
 326.977 292.738 318.227 294.98 310.055 c 297.223 301.879 303.609 295.492
 311.781 293.254 c 319.953 291.012 328.703 293.25 334.801 299.137 c 402.719
 231.266 m 408.781 237.336 411.145 246.18 408.918 254.465 c 406.691 262.75
 400.215 269.219 391.926 271.43 c 383.637 273.645 374.797 271.27 368.734
 265.199 c 362.848 259.105 360.613 250.355 362.852 242.18 c 365.094 234.008
 371.48 227.621 379.652 225.383 c 387.828 223.141 396.574 225.375 402.672
 231.266 c h
402.719 502.801 m 408.781 508.871 411.145 517.715 408.918 526 c 406.691
 534.285 400.215 540.754 391.926 542.969 c 383.637 545.184 374.797 542.809
 368.734 536.734 c 362.848 530.641 360.613 521.891 362.852 513.719 c 365.094
 505.543 371.48 499.156 379.652 496.918 c 387.828 494.676 396.574 496.914
 402.672 502.801 c h
470.543 434.879 m 476.613 440.941 478.988 449.781 476.777 458.07 c 474.562
 466.359 468.094 472.836 459.809 475.062 c 451.523 477.289 442.68 474.926
 436.609 468.863 c 430.719 462.77 428.484 454.02 430.727 445.844 c 432.965
 437.672 439.352 431.285 447.523 429.047 c 455.699 426.805 464.449 429.039
 470.543 434.93 c h
538.414 367.008 m 543.051 371.473 545.699 377.613 545.766 384.051 c 545.828
 390.488 543.305 396.684 538.762 401.238 c 534.215 405.797 528.031 408.34
 521.594 408.293 c 515.156 408.246 509.008 405.617 504.527 400.992 c 500.02
 396.492 497.488 390.387 497.484 384.016 c 497.477 377.648 500.004 371.539
 504.504 367.031 c 509.004 362.527 515.109 359.992 521.48 359.988 c 527.848
 359.98 533.957 362.508 538.465 367.008 c h
334.801 434.879 m 340.871 440.941 343.246 449.781 341.031 458.07 c 338.816
 466.359 332.348 472.836 324.062 475.062 c 315.777 477.289 306.934 474.926
 300.863 468.863 c 294.977 462.77 292.738 454.02 294.98 445.844 c 297.223
 437.672 303.609 431.285 311.781 429.047 c 319.953 426.805 328.703 429.039
 334.801 434.93 c h
402.719 367.008 m 408.789 373.078 411.16 381.926 408.941 390.219 c 406.719
 398.512 400.238 404.988 391.949 407.211 c 383.656 409.434 374.809 407.062
 368.734 400.992 c 364.23 396.492 361.695 390.387 361.691 384.016 c 361.688
 377.648 364.211 371.539 368.711 367.031 c 373.211 362.527 379.316 359.992
 385.688 359.988 c 392.055 359.98 398.164 362.508 402.672 367.008 c h
470.543 299.137 m 475.176 303.609 477.812 309.754 477.871 316.191 c 477.926
 322.629 475.395 328.816 470.84 333.371 c 466.289 337.922 460.102 340.453
 453.664 340.398 c 447.227 340.344 441.082 337.703 436.609 333.07 c 430.719
 326.977 428.484 318.227 430.727 310.055 c 432.965 301.879 439.352 295.492
 447.523 293.254 c 455.699 291.012 464.449 293.25 470.543 299.137 c f
Q Q
showpage
%%Trailer
%%EOF
