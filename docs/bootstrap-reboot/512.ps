%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
27.863 192 m 27.863 235.535 45.156 277.289 75.941 308.074 c 106.723 338.859
 148.473 356.156 192.008 356.16 c 235.543 356.164 277.297 338.875 308.086
 308.094 c 338.875 277.316 356.176 235.566 356.184 192.031 c 356.191 148.496
 338.906 106.742 308.133 75.949 c 277.355 45.156 235.605 27.852 192.07 27.84
 c 184.383 27.84 178.152 21.609 178.152 13.922 c 178.152 6.23 184.383 0 
192.07 0 c 235.051 0.012 276.785 14.445 310.59 40.988 c 344.395 67.531 368.316
 104.652 378.523 146.402 c 388.73 188.152 384.633 232.121 366.891 271.266
 c 349.145 310.414 318.781 342.473 280.652 362.316 c 242.527 382.156 198.848
 388.633 156.605 380.707 c 114.363 372.781 76 350.906 47.66 318.594 c 19.324
 286.281 2.645 245.391 0.301 202.477 c -2.043 159.559 10.078 117.098 34.727
 81.887 c 18.816 68.039 l 14.945 64.672 13.238 59.449 14.375 54.445 c 15.516
 49.441 19.316 45.469 24.266 44.113 c 84.746 27.555 l 84.742 27.551 l 89.23
 26.328 94.031 27.426 97.543 30.477 c 101.051 33.527 102.805 38.129 102.215
 42.742 c 94.246 104.949 l 94.246 104.953 l 93.598 110.047 90.191 114.367
 85.395 116.195 c 80.594 118.023 75.18 117.059 71.305 113.688 c 55.871 100.246
 l 37.547 127.332 27.781 159.297 27.84 192 c h
27.863 192 m f
159.383 280.105 m 159.383 212.23 l 197.062 212.23 l 233.016 280.102 l 264.551
 280.102 l 225.047 207.961 l 246.574 200.762 259.293 181.418 259.293 157.562
 c 259.293 124.684 236.66 103.66 200.348 103.66 c 132 103.656 l 132 280.105
 l h
159.383 190.105 m 159.383 126.648 l 197.062 126.648 l 218.207 126.648 231.047
 138.625 231.047 158.328 c 231.047 178.488 218.949 190.105 197.781 190.105
 c h
159.383 190.105 m f
Q Q
showpage
%%Trailer
%%EOF
