%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
111.457 768 m 111.457 942.141 180.629 1109.148 303.758 1232.293 c 426.891
 1355.434 593.891 1424.621 768.031 1424.641 c 942.172 1424.656 1109.188 
1355.5 1232.344 1232.383 c 1355.496 1109.266 1424.703 942.27 1424.734 768.129
 c 1424.77 593.988 1355.629 426.965 1232.523 303.797 c 1109.418 180.633 
942.43 111.41 768.289 111.359 c 748.395 111.359 730.016 100.746 720.066 
83.52 c 710.121 66.293 710.121 45.066 720.066 27.84 c 730.016 10.613 748.395
 0 768.289 0 c 940.207 0.051 1107.141 57.785 1242.359 163.957 c 1377.574
 270.129 1473.258 418.602 1514.09 585.605 c 1554.918 752.605 1538.535 928.477
 1467.559 1085.062 c 1396.582 1241.648 1275.121 1369.891 1122.617 1449.262
 c 970.113 1528.629 795.391 1554.531 626.418 1522.824 c 457.449 1491.117
 304 1403.633 190.648 1274.375 c 77.293 1145.117 10.586 981.566 1.207 809.902
 c -8.176 638.238 40.316 468.391 138.91 327.551 c 75.262 272.16 l 75.266
 272.16 l 65.078 263.305 58.457 251.051 56.629 237.68 c 54.805 224.309 57.895
 210.727 65.332 199.465 c 72.766 188.199 84.043 180.02 97.055 176.449 c 
338.977 110.211 l 338.977 110.207 l 356.922 105.312 376.129 109.699 390.168
 121.906 c 404.203 134.113 411.219 152.523 408.863 170.977 c 376.992 419.809
 l 375.277 433.207 368.754 445.523 358.633 454.469 c 348.512 463.41 335.484
 468.371 321.977 468.422 c 308.473 468.477 295.406 463.617 285.215 454.754
 c 223.488 400.992 l 150.188 509.332 111.121 637.191 111.359 768 c h
111.457 768 m f
637.535 1120.414 m 637.535 848.93 l 788.254 848.93 l 932.062 1120.418 l
 1058.207 1120.418 l 900.191 831.84 l 986.305 803.039 1037.184 725.664 1037.184
 630.238 c 1037.184 498.719 946.656 414.621 801.406 414.621 c 528 414.625
 l 528 1120.418 l h
637.535 760.414 m 637.535 506.594 l 788.254 506.594 l 872.828 506.594 924.191
 554.496 924.191 633.312 c 924.191 713.953 875.809 760.418 791.137 760.418
 c h
637.535 760.414 m f
Q Q
showpage
%%Trailer
%%EOF
