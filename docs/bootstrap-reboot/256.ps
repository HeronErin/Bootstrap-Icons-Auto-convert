%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
13.934 96 m 13.934 117.77 22.578 138.645 37.969 154.035 c 53.359 169.43
 74.238 178.078 96.004 178.078 c 117.773 178.082 138.648 169.438 154.043
 154.047 c 169.438 138.656 178.086 117.785 178.094 96.016 c 178.098 74.25
 169.453 53.371 154.066 37.977 c 138.676 22.578 117.805 13.926 96.035 13.922
 c 92.191 13.922 89.074 10.805 89.074 6.961 c 89.074 3.117 92.191 0 96.035
 0 c 124.898 0.008 152.227 13.004 170.453 35.387 c 188.676 57.77 195.863
 87.164 190.02 115.43 c 184.18 143.695 165.93 167.832 140.328 181.156 c 
114.723 194.484 84.484 195.582 57.98 184.148 c 31.477 172.715 11.527 149.965
 3.652 122.195 c -4.227 94.426 0.812 64.59 17.363 40.945 c 9.406 34.02 l
 7.473 32.336 6.617 29.723 7.188 27.223 c 7.758 24.723 9.656 22.734 12.133
 22.055 c 42.371 13.773 l 42.371 13.777 l 44.617 13.164 47.016 13.711 48.77
 15.238 c 50.527 16.766 51.402 19.066 51.109 21.371 c 47.125 52.477 l 46.797
 55.023 45.098 57.184 42.695 58.098 c 40.297 59.012 37.59 58.531 35.652 
56.844 c 27.938 50.125 l 18.773 63.668 13.891 79.648 13.922 96 c h
13.934 96 m f
79.691 140.051 m 79.691 106.117 l 98.531 106.117 l 116.508 140.055 l 132.277
 140.055 l 112.523 103.98 l 123.289 100.379 129.648 90.707 129.648 78.781
 c 129.648 62.34 118.332 51.828 100.176 51.828 c 66 51.828 l 66 140.051 
l h
79.691 95.051 m 79.691 63.324 l 98.531 63.324 l 109.102 63.324 115.523 
69.312 115.523 79.164 c 115.523 89.242 109.477 95.051 98.891 95.051 c h
79.691 95.051 m f
Q Q
showpage
%%Trailer
%%EOF
