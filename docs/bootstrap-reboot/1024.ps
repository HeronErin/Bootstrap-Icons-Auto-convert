%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
55.727 384 m 55.727 471.07 90.312 554.574 151.879 616.145 c 213.445 677.719
 296.945 712.312 384.016 712.32 c 471.086 712.328 554.594 677.75 616.172
 616.191 c 677.75 554.633 712.352 471.133 712.367 384.062 c 712.387 296.992
 677.816 213.48 616.262 151.898 c 554.707 90.316 471.215 55.707 384.145 
55.68 c 374.199 55.68 365.008 50.375 360.035 41.762 c 355.062 33.145 355.062
 22.535 360.035 13.922 c 365.008 5.305 374.199 0 384.145 0 c 470.105 0.023
 553.57 28.891 621.18 81.98 c 688.789 135.066 736.629 209.301 757.043 292.801
 c 777.461 376.305 769.266 464.238 733.777 542.531 c 698.293 620.824 637.559
 684.945 561.309 724.629 c 485.055 764.312 397.695 777.266 313.211 761.414
 c 228.723 745.559 152 701.816 95.324 637.188 c 38.645 572.559 5.293 490.781
 0.602 404.949 c -4.086 319.117 20.156 234.195 69.457 163.777 c 37.633 136.082
 l 37.633 136.078 l 32.539 131.652 29.227 125.527 28.316 118.84 c 27.402
 112.152 28.949 105.363 32.664 99.73 c 36.383 94.102 42.02 90.012 48.527
 88.223 c 169.488 55.102 l 169.488 55.105 l 178.461 52.656 188.066 54.852
 195.082 60.953 c 202.102 67.055 205.609 76.262 204.434 85.488 c 188.496
 209.902 l 187.641 216.602 184.375 222.762 179.316 227.234 c 174.254 231.707
 167.742 234.188 160.988 234.211 c 154.234 234.238 147.703 231.809 142.609
 227.375 c 111.746 200.496 l 111.742 200.496 l 75.094 254.664 55.562 318.598
 55.68 384 c h
55.727 384 m f
318.77 560.207 m 318.77 424.465 l 394.129 424.465 l 466.031 560.207 l 529.102
 560.207 l 450.098 415.922 l 493.152 401.523 518.594 362.832 518.594 315.121
 c 518.594 249.359 473.328 207.312 400.707 207.312 c 264 207.312 l 264 560.207
 l h
318.77 380.207 m 318.77 253.297 l 394.129 253.297 l 436.418 253.297 462.098
 277.25 462.098 316.656 c 462.098 356.977 437.906 380.207 395.57 380.207
 c h
318.77 380.207 m f
Q Q
showpage
%%Trailer
%%EOF
