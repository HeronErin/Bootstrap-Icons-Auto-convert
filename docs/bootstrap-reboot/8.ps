%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.434 3 m 0.434 4.039 1.059 4.973 2.02 5.371 c 2.977 5.766 4.082 5.547 
4.812 4.812 c 5.547 4.082 5.766 2.977 5.371 2.02 c 4.973 1.059 4.039 0.434
 3 0.434 c 2.883 0.434 2.785 0.336 2.785 0.219 c 2.785 0.098 2.883 0 3 0
 c 4.383 0 5.586 0.945 5.914 2.289 c 6.242 3.629 5.609 5.023 4.387 5.66 
c 3.16 6.301 1.656 6.016 0.746 4.977 c -0.168 3.938 -0.25 2.41 0.543 1.281
 c 0.293 1.066 l 0.293 1.062 l 0.234 1.012 0.207 0.93 0.227 0.852 c 0.242
 0.773 0.301 0.711 0.379 0.688 c 1.324 0.43 l 1.395 0.41 1.469 0.43 1.523
 0.477 c 1.578 0.523 1.605 0.598 1.598 0.668 c 1.473 1.641 l 1.461 1.719
 1.41 1.785 1.336 1.816 c 1.258 1.844 1.176 1.828 1.113 1.777 c 0.871 1.566
 l 0.586 1.988 0.434 2.488 0.434 3 c h
0.434 3 m f
2.492 4.375 m 2.492 3.316 l 3.082 3.316 l 3.645 4.375 l 4.137 4.375 l 3.516
 3.25 l 3.852 3.137 4.051 2.836 4.051 2.461 c 4.051 1.945 3.695 1.617 3.129
 1.617 c 2.062 1.621 l 2.062 4.379 l h
2.492 2.969 m 2.492 1.98 l 3.082 1.98 l 3.414 1.98 3.613 2.168 3.613 2.477
 c 3.613 2.793 3.426 2.973 3.094 2.973 c h
2.492 2.969 m f
Q Q
showpage
%%Trailer
%%EOF
