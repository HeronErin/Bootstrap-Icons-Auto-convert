%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
3.484 24 m 3.484 29.441 5.645 34.66 9.492 38.508 c 13.34 42.355 18.559 
44.52 24 44.52 c 29.441 44.52 34.664 42.359 38.512 38.512 c 42.359 34.664
 44.523 29.445 44.523 24.004 c 44.523 18.562 42.363 13.344 38.516 9.492 
c 34.668 5.645 29.449 3.48 24.008 3.48 c 23.047 3.48 22.27 2.699 22.27 1.738
 c 22.27 0.777 23.047 0 24.008 0 c 31.227 0.004 38.059 3.25 42.613 8.848
 c 47.168 14.441 48.965 21.789 47.504 28.855 c 46.047 35.922 41.484 41.957
 35.082 45.289 c 28.68 48.621 21.121 48.895 14.496 46.035 c 7.871 43.18 
2.883 37.492 0.914 30.547 c -1.055 23.605 0.203 16.148 4.34 10.234 c 2.352
 8.504 l 1.867 8.086 1.656 7.43 1.797 6.805 c 1.941 6.18 2.414 5.684 3.031
 5.516 c 10.59 3.445 l 10.594 3.445 l 11.152 3.289 11.754 3.43 12.191 3.809
 c 12.633 4.191 12.852 4.766 12.777 5.344 c 11.781 13.121 l 11.781 13.117
 l 11.699 13.754 11.273 14.297 10.676 14.523 c 10.074 14.754 9.398 14.633
 8.914 14.211 c 6.984 12.531 l 4.691 15.918 3.473 19.914 3.48 24 c h
3.484 24 m f
19.922 35.012 m 19.922 26.527 l 24.633 26.527 l 29.125 35.012 l 33.066 
35.012 l 28.133 25.996 l 30.824 25.098 32.414 22.68 32.414 19.695 c 32.414
 15.586 29.586 12.957 25.047 12.957 c 16.5 12.957 l 16.5 35.012 l h
19.922 23.762 m 19.922 15.832 l 24.633 15.832 l 27.277 15.832 28.879 17.328
 28.879 19.793 c 28.879 22.312 27.367 23.766 24.723 23.766 c h
19.922 23.762 m f
Q Q
showpage
%%Trailer
%%EOF
