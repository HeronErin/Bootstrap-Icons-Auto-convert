%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.684 0.27 m 3.734 0.27 3.781 0.289 3.816 0.324 c 5.676 2.184 l 5.746 2.254
 5.746 2.375 5.676 2.445 c 5.496 2.625 5.273 2.664 5.113 2.664 c 5.047 2.664
 4.988 2.656 4.941 2.648 c 3.762 3.828 l 3.793 3.953 3.812 4.078 3.824 4.207
 c 3.84 4.469 3.812 4.84 3.555 5.098 c 3.48 5.172 3.359 5.172 3.289 5.098
 c 2.227 4.039 l 1.035 5.23 l 0.961 5.305 0.578 5.57 0.504 5.496 c 0.43 
5.422 0.695 5.039 0.77 4.965 c 1.961 3.773 l 0.902 2.711 l 0.828 2.641 0.828
 2.52 0.902 2.445 c 1.16 2.188 1.531 2.156 1.793 2.176 c 1.922 2.188 2.047
 2.207 2.172 2.238 c 3.348 1.062 l 3.336 1.004 3.332 0.945 3.332 0.891 c
 3.332 0.73 3.371 0.508 3.555 0.328 c 3.555 0.324 l 3.59 0.289 3.637 0.27
 3.684 0.27 c 3.73 1.062 m h
3.73 1.062 m 3.754 1.129 3.734 1.203 3.684 1.254 c 2.359 2.578 l 2.309 
2.629 2.234 2.648 2.168 2.625 c 2.164 2.625 l 2.164 2.621 l 2.125 2.613 
2.09 2.602 2.055 2.594 c 1.961 2.574 1.863 2.559 1.766 2.551 c 1.605 2.539
 1.453 2.555 1.324 2.605 c 3.391 4.672 l 3.445 4.543 3.457 4.391 3.445 4.23
 c 3.449 4.23 l 3.438 4.098 3.414 3.965 3.375 3.836 c 3.375 3.832 l 3.352
 3.766 3.371 3.691 3.422 3.641 c 4.746 2.316 l 4.746 2.312 l 4.797 2.262
 4.875 2.246 4.945 2.27 c 4.98 2.277 l 5.012 2.285 5.059 2.289 5.109 2.289
 c 5.152 2.289 5.195 2.285 5.238 2.273 c 3.723 0.762 l 3.711 0.805 3.707
 0.848 3.707 0.891 c 3.707 0.949 3.715 1.004 3.73 1.062 c h
3.73 1.062 m f
Q Q
showpage
%%Trailer
%%EOF
