%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 350.879 0 295.535 12.719 243.457 26.879 c 190.176 41.277 136.465
 58.32 104.883 68.641 c 104.879 68.641 l 91.676 73 79.969 81 71.102 91.715
 c 62.238 102.43 56.578 115.426 54.77 129.215 c 26.16 344.109 92.547 503.375
 173.09 608.734 c 207.258 653.797 247.98 693.484 293.902 726.48 c 312.43
 739.586 329.613 749.617 344.207 756.48 c 357.648 762.816 372.094 768 384
 768 c 395.902 768 410.305 762.816 423.793 756.48 c 441.402 747.965 458.234
 737.926 474.098 726.48 c 520.02 693.484 560.742 653.797 594.91 608.734 
c 675.453 503.375 741.84 344.109 713.23 129.215 c 711.43 115.418 705.773
 102.41 696.91 91.688 c 688.043 80.961 676.332 72.957 663.121 68.594 c 617.27
 53.57 571.062 39.645 524.543 26.832 c 472.465 12.77 417.121 0 384 0 c 384
 240 m 406.855 239.965 428.371 250.785 441.973 269.156 c 455.574 287.523
 459.645 311.262 452.941 333.113 c 446.242 354.965 429.562 372.336 408 379.922
 c 426.48 475.441 l 427.84 482.473 425.988 489.75 421.43 495.277 c 416.867
 500.801 410.078 504 402.91 504 c 365.086 504 l 365.09 504 l 357.93 503.988
 351.152 500.781 346.605 495.258 c 342.055 489.734 340.207 482.465 341.566
 475.441 c 360 379.922 l 338.438 372.336 321.758 354.965 315.059 333.113
 c 308.355 311.262 312.426 287.523 326.027 269.156 c 339.629 250.785 361.145
 239.965 384 240 c f*
Q Q
showpage
%%Trailer
%%EOF
