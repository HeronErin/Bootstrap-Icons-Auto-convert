%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1536 m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 
1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 
224.941 c 1167.031 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941
 224.941 c 80.914 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941
 1311.059 c 368.969 1455.086 564.312 1536 768 1536 c 672 624 m 672 703.488
 628.992 768 576 768 c 523.008 768 480 703.488 480 624 c 480 544.512 523.008
 480 576 480 c 628.992 480 672 544.512 672 624 c 411.359 1193.566 m 400.336
 1187.203 392.293 1176.719 388.996 1164.422 c 385.703 1152.125 387.426 1139.023
 393.793 1128 c 431.715 1062.316 486.262 1007.773 551.953 969.855 c 617.641
 931.938 692.152 911.984 768 912 c 843.848 911.984 918.359 931.938 984.047
 969.855 c 1049.738 1007.773 1104.285 1062.316 1142.207 1128 c 1150.645 
1142.84 1150.566 1161.047 1141.996 1175.816 c 1133.43 1190.582 1117.66 1199.688
 1100.586 1199.723 c 1083.516 1199.762 1067.707 1190.73 1059.07 1176 c 1029.574
 1124.91 987.145 1082.484 936.051 1052.992 c 884.953 1023.504 826.996 1007.984
 768 1008 c 709.004 1007.984 651.047 1023.504 599.949 1052.992 c 548.855
 1082.484 506.426 1124.91 476.93 1176 c 470.562 1187.023 460.078 1195.07
 447.781 1198.363 c 435.484 1201.656 422.383 1199.934 411.359 1193.566 c
 960 768 m 907.008 768 864 703.488 864 624 c 864 544.512 907.008 480 960
 480 c 1012.992 480 1056 544.512 1056 624 c 1056 703.488 1012.992 768 960
 768 c f
Q Q
showpage
%%Trailer
%%EOF
