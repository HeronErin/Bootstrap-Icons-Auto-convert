%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 1056 m 323.27 1056 311.062 1061.059 302.059 1070.059 c 293.059 1079.062
 288 1091.27 288 1104 c 288 1200 l 288 1212.73 293.059 1224.938 302.059 
1233.941 c 311.062 1242.941 323.27 1248 336 1248 c 1200 1248 l 1212.73 1248
 1224.938 1242.941 1233.941 1233.941 c 1242.941 1224.938 1248 1212.73 1248
 1200 c 1248 1104 l 1248 1091.27 1242.941 1079.062 1233.941 1070.059 c 1224.938
 1061.059 1212.73 1056 1200 1056 c h
336 1056 m f
228 96 m 188.129 95.848 148.922 106.195 114.316 125.996 c 79.711 145.801
 50.93 174.367 30.863 208.82 c 10.797 243.273 0.152 282.402 0 322.273 c 
0 1213.73 l 0 1213.727 l 0.152 1253.598 10.797 1292.727 30.863 1327.18 c
 50.93 1361.633 79.711 1390.199 114.316 1410.004 c 148.922 1429.805 188.129
 1440.152 228 1440 c 1308 1440 l 1347.871 1440.152 1387.078 1429.805 1421.684
 1410.004 c 1456.289 1390.199 1485.07 1361.633 1505.137 1327.18 c 1525.203
 1292.727 1535.848 1253.598 1536 1213.727 c 1536 322.273 l 1535.848 282.402
 1525.203 243.273 1505.137 208.82 c 1485.07 174.367 1456.289 145.801 1421.684
 125.996 c 1387.078 106.195 1347.871 95.848 1308 96 c h
96 322.273 m 96 250.754 154.656 192 228 192 c 1308 192 l 1381.344 192 1440
 250.754 1440 322.273 c 1440 384 l 96 384 l h
96 480 m 1440 480 l 1440 1213.727 l 1440 1285.246 1381.344 1344 1308 1344
 c 228 1344 l 193.219 1344.23 159.773 1330.633 135.02 1306.203 c 110.266
 1281.773 96.227 1248.508 96 1213.727 c h
96 480 m f
Q Q
showpage
%%Trailer
%%EOF
