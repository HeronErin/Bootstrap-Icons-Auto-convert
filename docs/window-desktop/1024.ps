%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
168 528 m 161.637 528 155.531 530.527 151.031 535.031 c 146.527 539.531
 144 545.637 144 552 c 144 600 l 144 606.363 146.527 612.469 151.031 616.969
 c 155.531 621.473 161.637 624 168 624 c 600 624 l 606.363 624 612.469 621.473
 616.969 616.969 c 621.473 612.469 624 606.363 624 600 c 624 552 l 624 545.637
 621.473 539.531 616.969 535.031 c 612.469 530.527 606.363 528 600 528 c
 h
168 528 m f
114 48 m 83.879 47.887 54.949 59.742 33.57 80.957 c 12.188 102.176 0.113
 131.016 0 161.137 c 0 606.863 l 0.113 636.984 12.188 665.824 33.57 687.043
 c 54.949 708.258 83.879 720.113 114 720 c 654 720 l 684.121 720.113 713.051
 708.258 734.43 687.043 c 755.812 665.824 767.887 636.984 768 606.863 c 
768 161.137 l 767.887 131.016 755.812 102.176 734.43 80.957 c 713.051 59.742
 684.121 47.887 654 48 c h
48 161.137 m 48 125.375 77.328 96 114 96 c 654 96 l 690.672 96 720 125.375
 720 161.137 c 720 192 l 48 192 l h
48 240 m 720 240 l 720 606.863 l 720 642.625 690.672 672 654 672 c 114 
672 l 96.609 672.113 79.887 665.316 67.508 653.102 c 55.133 640.887 48.113
 624.254 48 606.863 c h
48 240 m f
Q Q
showpage
%%Trailer
%%EOF
