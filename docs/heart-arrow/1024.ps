%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 239 768 481
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 239 768 481
768 768 cairo_set_page_size
%%EndPageSetup
q 0 239 768 242 rectclip
1 0 0 -1 0 768 cm q
0 g
321.938 432 m 531.41 432 l 505.684 507.504 628.754 614.688 768.004 408 
c 628.805 201.312 505.684 308.496 531.41 384 c 321.938 384 l 232.992 295.008
 l 226.922 288.938 218.074 286.566 209.781 288.789 c 201.488 291.012 195.012
 297.488 192.789 305.781 c 190.566 314.074 192.938 322.922 199.008 328.992
 c 254.062 384 l 225.934 384 l 136.992 295.008 l 130.922 288.938 122.074
 286.566 113.781 288.789 c 105.488 291.012 99.012 297.488 96.789 305.781
 c 94.566 314.074 96.938 322.922 103.008 328.992 c 158.062 384 l 129.934
 384 l 40.992 295.008 l 34.922 288.938 26.074 286.566 17.781 288.789 c 9.488
 291.012 3.012 297.488 0.789 305.781 c -1.434 314.074 0.938 322.922 7.008
 328.992 c 86.062 408 l 7.008 487.008 l 0.938 493.078 -1.434 501.926 0.789
 510.219 c 3.012 518.512 9.488 524.988 17.781 527.211 c 26.074 529.434 34.922
 527.062 40.992 520.992 c 129.938 432 l 158.066 432 l 103.012 487.008 l 
103.008 487.008 l 96.938 493.078 94.566 501.926 96.789 510.219 c 99.012 
518.512 105.488 524.988 113.781 527.211 c 122.074 529.434 130.922 527.062
 136.992 520.992 c 225.938 432 l 254.066 432 l 199.012 487.008 l 199.008
 487.008 l 192.938 493.078 190.566 501.926 192.789 510.219 c 195.012 518.512
 201.488 524.988 209.781 527.211 c 218.074 529.434 226.922 527.062 232.992
 520.992 c h
321.938 432 m f
Q Q
showpage
%%Trailer
%%EOF
