%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
15.102 1.305 m 14.285 0.469 13.168 0 12 0 c 10.832 0 9.715 0.469 8.898 
1.305 c 7.965 2.262 l 6.629 2.246 l 6.633 2.246 l 5.465 2.23 4.34 2.688 
3.516 3.516 c 2.688 4.34 2.23 5.465 2.246 6.633 c 2.262 7.969 l 1.309 8.902
 l 1.305 8.898 l 0.473 9.715 0 10.832 0 12 c 0 13.168 0.473 14.285 1.305
 15.102 c 2.262 16.035 l 2.246 17.371 l 2.246 17.367 l 2.23 18.535 2.688
 19.66 3.516 20.484 c 4.34 21.312 5.465 21.77 6.633 21.754 c 7.969 21.738
 l 8.902 22.691 l 8.898 22.695 l 9.715 23.527 10.832 24 12 24 c 13.168 24
 14.285 23.527 15.102 22.695 c 16.035 21.738 l 17.371 21.754 l 17.367 21.754
 l 18.535 21.77 19.66 21.312 20.484 20.484 c 21.312 19.66 21.77 18.535 21.754
 17.367 c 21.738 16.031 l 22.691 15.098 l 22.695 15.102 l 23.527 14.285 
24 13.168 24 12 c 24 10.832 23.527 9.715 22.695 8.898 c 21.738 7.965 l 21.754
 6.629 l 21.754 6.633 l 21.77 5.465 21.312 4.34 20.484 3.516 c 19.66 2.688
 18.535 2.23 17.367 2.246 c 16.031 2.262 l h
9 11.25 m 15 11.25 l 15.414 11.25 15.75 11.586 15.75 12 c 15.75 12.414 
15.414 12.75 15 12.75 c 9 12.75 l 8.586 12.75 8.25 12.414 8.25 12 c 8.25
 11.586 8.586 11.25 9 11.25 c f
Q Q
showpage
%%Trailer
%%EOF
