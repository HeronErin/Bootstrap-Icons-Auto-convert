%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 66 96 l 66 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
18.449 89.047 m 18.52 90.957 19.395 92.75 20.855 93.984 c 21.633 94.633
 22.586 95.137 23.723 95.496 c 24.859 95.859 26.188 96.043 27.711 96.043
 c 29.738 96.043 31.453 95.727 32.859 95.094 c 34.281 94.461 35.359 93.582
 36.098 92.453 c 36.102 92.453 l 36.859 91.281 37.25 89.914 37.223 88.52
 c 37.223 87.176 36.953 86.055 36.414 85.16 c 36.414 85.156 l 35.863 84.258
 35.09 83.52 34.164 83.016 c 33.105 82.426 31.961 82.004 30.773 81.758 c
 27.047 80.895 l 27.047 80.891 l 26.168 80.727 25.34 80.363 24.617 79.836
 c 24.066 79.406 23.746 78.742 23.762 78.043 c 23.762 77.105 24.129 76.34
 24.867 75.738 c 25.621 75.129 26.645 74.828 27.945 74.828 c 28.801 74.828
 29.543 74.965 30.164 75.234 c 30.16 75.234 l 30.738 75.465 31.242 75.836
 31.633 76.32 c 32 76.766 32.25 77.297 32.352 77.867 c 36.852 77.867 l 36.777
 76.648 36.363 75.473 35.656 74.473 c 34.902 73.395 33.863 72.543 32.656
 72.012 c 31.184 71.363 29.586 71.051 27.977 71.102 c 26.215 71.102 24.664
 71.402 23.32 72 c 21.973 72.598 20.918 73.438 20.152 74.527 c 19.391 75.621
 19.012 76.898 19.012 78.363 c 19.012 79.57 19.258 80.621 19.75 81.508 c
 20.242 82.395 20.945 83.129 21.855 83.711 c 22.77 84.281 23.852 84.707 
25.094 84.988 c 28.801 85.852 l 30.039 86.145 30.965 86.531 31.574 87.008
 c 31.578 87.008 l 32.184 87.469 32.527 88.199 32.496 88.961 c 32.508 89.582
 32.332 90.188 31.984 90.703 c 31.598 91.227 31.066 91.633 30.457 91.859
 c 29.789 92.141 28.965 92.281 27.98 92.281 c 27.277 92.281 26.637 92.203
 26.059 92.043 c 26.059 92.039 l 25.527 91.898 25.023 91.664 24.57 91.352
 c 23.762 90.828 23.211 89.992 23.039 89.047 c h
0 88.746 m 0 89.734 0.164 90.668 0.492 91.543 c 0.824 92.422 1.309 93.203
 1.949 93.883 c 2.609 94.562 3.422 95.098 4.391 95.484 c 5.375 95.855 6.512
 96.043 7.805 96.043 c 10.324 96.043 12.293 95.352 13.707 93.969 c 15.137
 92.59 15.852 90.582 15.855 87.945 c 15.855 71.594 l 11.109 71.594 l 11.109
 88.062 l 11.109 89.27 10.832 90.203 10.281 90.859 c 9.73 91.516 8.887 91.844
 7.75 91.844 c 7.754 91.844 l 6.641 91.895 5.594 91.324 5.027 90.367 c 4.758
 89.867 4.605 89.312 4.59 88.746 c h
53.441 71.594 m 58.801 71.594 l 51.156 83.637 l 58.68 95.578 l 53.23 95.578
 l 48.129 87.09 l 47.918 87.09 l 42.801 95.578 l 37.637 95.578 l 45.078 
83.48 l 37.711 71.582 l 43.297 71.582 l 48.289 80.211 l 48.504 80.211 l 
53.441 71.582 l h
53.441 71.594 m f*
Q Q
showpage
%%Trailer
%%EOF
