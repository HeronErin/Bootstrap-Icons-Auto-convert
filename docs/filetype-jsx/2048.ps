%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1056 1536 l 1056 1440 l 1152 1440 l 1177.461 1440 1201.879
 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248 1369.461 1248 1344 
c 1248 432 l 1056 432 l 1017.809 432 981.184 416.828 954.176 389.824 c 927.172
 362.816 912 326.191 912 288 c 912 96 l 384 96 l 358.539 96 334.121 106.113
 316.117 124.117 c 298.113 142.121 288 166.539 288 192 c 288 1056 l 192 
1056 l 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227
 333.078 0 384 0 c 912 0 l h
295.199 1424.734 m 296.312 1455.324 310.293 1484.02 333.695 1503.742 c 
346.109 1514.109 361.406 1522.176 379.582 1527.934 c 397.758 1533.758 419.039
 1536.668 443.422 1536.668 c 475.871 1536.668 503.324 1531.613 525.789 1521.5
 c 548.508 1511.387 565.789 1497.309 577.629 1479.262 c 577.633 1479.266
 l 589.738 1460.52 595.988 1438.598 595.586 1416.289 c 595.586 1394.785 
591.266 1376.863 582.625 1362.527 c 573.84 1348.141 561.426 1336.32 546.625
 1328.258 c 529.668 1318.836 511.379 1312.039 492.383 1308.098 c 432.766
 1294.273 l 432.77 1294.273 l 418.711 1291.609 405.426 1285.836 393.887 
1277.375 c 385.043 1270.508 379.957 1259.867 380.16 1248.672 c 380.16 1233.695
 386.047 1221.406 397.824 1211.809 c 409.855 1202.082 426.273 1197.215 447.07
 1197.215 c 460.766 1197.215 472.605 1199.391 482.59 1203.742 c 482.594 
1203.742 l 491.797 1207.418 499.898 1213.402 506.113 1221.121 c 512.02 1228.246
 515.988 1236.777 517.633 1245.887 c 589.633 1245.887 l 588.422 1226.355
 581.809 1207.543 570.527 1191.551 c 558.43 1174.289 541.828 1160.672 522.527
 1152.191 c 498.969 1141.809 473.383 1136.824 447.648 1137.602 c 419.488
 1137.602 394.656 1142.402 373.152 1152 c 351.586 1161.535 334.688 1175.008
 322.465 1192.414 c 310.305 1209.887 304.227 1230.336 304.227 1253.758 c
 304.227 1273.086 308.164 1289.855 316.035 1304.062 c 323.906 1318.27 335.141
 1330.016 349.73 1339.293 c 364.387 1348.445 381.668 1355.262 401.57 1359.742
 c 460.898 1373.566 l 480.738 1378.238 495.523 1384.414 505.25 1392.094 
c 505.246 1392.098 l 514.957 1399.508 520.438 1411.188 519.938 1423.391 
c 520.152 1433.293 517.301 1443.016 511.777 1451.23 c 505.59 1459.656 497.082
 1466.094 487.297 1469.762 c 476.609 1474.242 463.395 1476.48 447.648 1476.48
 c 436.383 1476.48 426.145 1475.199 416.93 1472.641 c 408.418 1470.352 400.363
 1466.617 393.121 1461.602 c 380.219 1453.223 371.355 1439.879 368.641 1424.734
 c h
0 1419.938 m 0 1435.746 2.625 1450.656 7.871 1464.672 c 13.184 1478.75 
20.961 1491.23 31.199 1502.113 c 41.758 1512.992 54.785 1521.539 70.27 1527.746
 c 86.012 1533.699 104.223 1536.676 124.895 1536.676 c 165.215 1536.676 
196.703 1525.605 219.359 1503.461 c 242.207 1481.383 253.664 1449.254 253.727
 1407.078 c 253.727 1145.477 l 177.789 1145.477 l 177.789 1408.996 l 177.789
 1428.324 173.375 1443.234 164.543 1453.73 c 155.711 1464.227 142.207 1469.473
 124.031 1469.473 c 115.305 1469.875 106.637 1467.887 98.957 1463.727 c 
91.273 1459.562 84.875 1453.387 80.449 1445.855 c 76.102 1437.891 73.703
 1429.008 73.441 1419.938 c h
855.07 1145.473 m 940.801 1145.473 l 818.496 1338.145 l 938.879 1529.281
 l 851.711 1529.281 l 770.109 1393.441 l 766.75 1393.441 l 684.863 1529.281
 l 602.207 1529.281 l 721.246 1335.746 l 603.359 1145.379 l 692.734 1145.379
 l 772.605 1283.426 l 776.062 1283.426 l 855.07 1145.379 l h
855.07 1145.473 m f*
Q Q
showpage
%%Trailer
%%EOF
