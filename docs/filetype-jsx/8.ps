%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.125 6 l 4.125 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586
 4.766 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 
1.688 l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 
1.293 0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75
 l 0.75 0.336 1.086 0 1.5 0 c 3.562 0 l h
1.152 5.566 m 1.156 5.684 1.211 5.797 1.305 5.875 c 1.352 5.914 1.414 5.945
 1.484 5.969 c 1.555 5.992 1.637 6.004 1.734 6.004 c 1.859 6.004 1.969 5.984
 2.055 5.945 c 2.145 5.906 2.211 5.852 2.258 5.781 c 2.258 5.777 l 2.305
 5.707 2.328 5.621 2.328 5.531 c 2.328 5.445 2.312 5.379 2.277 5.32 c 2.277
 5.324 l 2.242 5.266 2.191 5.219 2.137 5.188 c 2.07 5.152 1.996 5.125 1.922
 5.109 c 1.688 5.055 l 1.691 5.055 l 1.637 5.047 1.582 5.023 1.539 4.988
 c 1.504 4.965 1.484 4.922 1.484 4.879 c 1.484 4.82 1.508 4.773 1.555 4.734
 c 1.602 4.695 1.664 4.676 1.746 4.676 c 1.801 4.676 1.848 4.684 1.887 4.703
 c 1.922 4.715 1.953 4.738 1.977 4.77 c 2 4.797 2.016 4.832 2.023 4.867 
c 2.305 4.867 l 2.297 4.789 2.273 4.719 2.23 4.656 c 2.18 4.586 2.117 4.535
 2.043 4.5 c 1.949 4.461 1.848 4.441 1.75 4.445 c 1.641 4.445 1.543 4.465
 1.461 4.5 c 1.375 4.539 1.312 4.59 1.262 4.656 c 1.215 4.723 1.191 4.805
 1.191 4.895 c 1.191 4.969 1.207 5.035 1.238 5.09 c 1.27 5.145 1.312 5.191
 1.371 5.227 c 1.43 5.262 1.496 5.289 1.574 5.305 c 1.805 5.359 l 1.883 
5.379 1.941 5.402 1.977 5.434 c 1.973 5.438 l 2.012 5.469 2.031 5.512 2.031
 5.559 c 2.031 5.598 2.02 5.637 2 5.668 c 1.977 5.703 1.941 5.727 1.902 
5.742 c 1.859 5.758 1.809 5.77 1.746 5.77 c 1.703 5.77 1.66 5.766 1.625 
5.754 c 1.629 5.754 l 1.594 5.742 1.562 5.73 1.535 5.711 c 1.484 5.676 1.449
 5.625 1.441 5.566 c h
0 5.547 m 0 5.609 0.012 5.668 0.031 5.723 c 0.051 5.777 0.082 5.828 0.121
 5.867 c 0.164 5.91 0.215 5.941 0.273 5.969 c 0.336 5.992 0.406 6.004 0.488
 6.004 c 0.645 6.004 0.77 5.961 0.855 5.875 c 0.945 5.789 0.988 5.664 0.988
 5.5 c 0.988 4.477 l 0.691 4.477 l 0.691 5.508 l 0.691 5.582 0.676 5.641
 0.641 5.684 c 0.605 5.723 0.555 5.746 0.48 5.746 c 0.484 5.738 l 0.414 
5.742 0.348 5.707 0.312 5.648 c 0.297 5.617 0.289 5.582 0.285 5.547 c h
3.34 4.477 m 3.676 4.473 l 3.199 5.227 l 3.668 5.973 l 3.328 5.973 l 3.008
 5.441 l 2.996 5.441 l 2.676 5.973 l 2.352 5.973 l 2.816 5.215 l 2.355 4.473
 l 2.703 4.473 l 3.016 5.012 l 3.027 5.012 l 3.336 4.473 l h
3.34 4.477 m f*
Q Q
showpage
%%Trailer
%%EOF
