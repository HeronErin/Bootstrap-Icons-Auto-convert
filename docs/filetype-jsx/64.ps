%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 33 48 l 33 45 l 36 45 l 36.797 45 37.559 44.684 38.121 
44.121 c 38.684 43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5
 28.5 11.484 28.5 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33
 l 6 6 l 6 2.688 8.688 0 12 0 c 28.5 0 l h
9.227 44.523 m 9.258 45.48 9.695 46.375 10.43 46.992 c 10.816 47.316 11.297
 47.566 11.863 47.75 c 12.43 47.934 13.098 48.023 13.859 48.023 c 14.875
 48.023 15.73 47.867 16.434 47.551 c 17.145 47.234 17.684 46.793 18.055 
46.23 c 18.051 46.227 l 18.43 45.641 18.625 44.957 18.613 44.258 c 18.613
 43.586 18.477 43.027 18.207 42.578 c 17.934 42.129 17.543 41.762 17.082
 41.508 c 16.551 41.215 15.98 41 15.387 40.879 c 13.523 40.445 l 13.086 
40.363 12.668 40.184 12.309 39.918 c 12.031 39.703 11.875 39.371 11.879 
39.02 c 11.879 38.551 12.062 38.168 12.43 37.867 c 12.805 37.562 13.32 37.41
 13.969 37.41 c 14.398 37.41 14.766 37.477 15.078 37.613 c 15.082 37.617
 l 15.367 37.73 15.621 37.918 15.816 38.16 c 16 38.383 16.125 38.648 16.176
 38.934 c 18.426 38.934 l 18.387 38.324 18.18 37.734 17.828 37.234 c 17.449
 36.695 16.934 36.27 16.328 36.008 c 15.594 35.68 14.793 35.527 13.988 35.551
 c 13.109 35.551 12.332 35.699 11.66 36 c 10.984 36.297 10.457 36.719 10.074
 37.262 c 9.695 37.809 9.504 38.445 9.504 39.18 c 9.504 39.785 9.625 40.309
 9.871 40.75 c 10.117 41.195 10.469 41.562 10.926 41.852 c 11.383 42.137
 11.922 42.352 12.547 42.492 c 14.402 42.926 l 15.023 43.07 15.484 43.266
 15.789 43.504 c 16.094 43.734 16.266 44.102 16.246 44.48 c 16.254 44.789
 16.164 45.094 15.992 45.352 c 15.801 45.613 15.535 45.816 15.227 45.93 
c 14.891 46.07 14.48 46.141 13.988 46.141 c 13.637 46.141 13.316 46.102 
13.027 46.02 c 12.762 45.949 12.512 45.832 12.285 45.676 c 11.883 45.414
 11.605 44.996 11.52 44.523 c h
0 44.371 m 0 44.863 0.082 45.332 0.246 45.77 c 0.41 46.211 0.656 46.598
 0.977 46.941 c 1.305 47.281 1.715 47.547 2.199 47.742 c 2.691 47.93 3.262
 48.02 3.906 48.02 c 5.168 48.02 6.148 47.672 6.859 46.98 c 7.574 46.289
 7.93 45.285 7.934 43.969 c 7.934 35.793 l 5.562 35.793 l 5.562 44.027 l
 5.562 44.633 5.426 45.098 5.148 45.426 c 4.871 45.754 4.449 45.918 3.883
 45.918 c 3.875 45.922 l 3.32 45.945 2.797 45.664 2.516 45.184 c 2.379 44.934
 2.305 44.656 2.297 44.371 c h
26.723 35.793 m 29.398 35.797 l 25.578 41.816 l 29.34 47.789 l 26.617 47.789
 l 24.066 43.543 l 23.961 43.543 l 21.402 47.789 l 18.82 47.789 l 22.539
 41.742 l 18.855 35.793 l 21.648 35.793 l 24.145 40.105 l 24.254 40.105 
l h
26.723 35.793 m f*
Q Q
showpage
%%Trailer
%%EOF
