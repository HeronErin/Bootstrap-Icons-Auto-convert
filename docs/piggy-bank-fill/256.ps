%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 1 23 192 174
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 1 23 192 174
192 192 cairo_set_page_size
%%EndPageSetup
q 1 23 191 151 rectclip
1 0 0 -1 0 192 cm q
0 g
95.566 18.324 m 59.844 18.324 28.715 38.773 19.727 67.824 c 13.125 67.824
 l 13.129 67.824 l 9.586 67.828 6.227 69.395 3.949 72.109 c 1.672 74.82 
0.711 78.398 1.32 81.887 c 4.367 99.406 l 5.094 103.586 7.273 107.371 10.516
 110.102 c 13.762 112.828 17.863 114.324 22.105 114.324 c 25.262 114.324
 l 28.863 120.48 33.52 126.059 39 130.91 c 30.254 160.633 l 29.719 162.445
 30.07 164.406 31.207 165.922 c 32.34 167.434 34.121 168.324 36.012 168.324
 c 60.012 168.324 l 62.547 168.324 64.812 166.73 65.664 164.34 c 71.449 
148.129 l 79.07 150.203 87.168 151.332 95.582 151.332 c 104.066 151.332 
112.238 150.191 119.918 148.066 c 126.434 164.531 l 127.34 166.82 129.551
 168.324 132.012 168.324 c 156.012 168.324 l 157.91 168.32 159.695 167.422
 160.828 165.895 c 161.957 164.371 162.297 162.402 161.746 160.586 c 152.613
 130.516 l 165.719 118.738 174 102.707 174 84.828 c 174 83.086 173.922 81.359
 173.762 79.656 c 176.895 78.336 179.859 76.465 182.223 74.328 c 186.004
 78 192.004 78 192.004 69.324 c 192.004 72 186.004 72 186.473 69.012 c 186.469
 69.012 l 186.965 68.047 187.328 67.016 187.547 65.953 c 188.121 63.129 
187.207 60.207 185.125 58.211 c 182.902 55.922 179.402 55.434 176.641 57.035
 c 174.141 58.43 172.465 60.938 172.141 63.781 c 171.852 66.695 173.125 
69.543 175.98 71.629 c 174.992 72.316 173.953 72.93 172.871 73.465 c 166.465
 41.496 133.465 18.324 95.566 18.324 c 181.641 64.836 m 181.645 64.836 l
 181.418 65.746 181.02 66.602 180.469 67.355 c 179.941 67.055 l 178.188 
65.977 178.059 64.953 178.117 64.379 c 178.242 63.512 178.758 62.746 179.52
 62.305 c 180.109 61.98 180.48 62.051 180.875 62.449 c 181.562 63.035 181.859
 63.957 181.645 64.836 c 73.656 57.035 m 72.102 57.562 70.402 57.43 68.949
 56.672 c 67.492 55.91 66.414 54.59 65.961 53.012 c 65.508 51.434 65.719
 49.742 66.547 48.324 c 67.375 46.91 68.746 45.895 70.344 45.516 c 78.547
 43.172 87.035 41.988 95.566 42 c 104.723 42 113.531 43.32 121.727 45.781
 c 124.902 46.73 126.703 50.074 125.754 53.25 c 124.805 56.426 121.457 58.227
 118.285 57.277 c 110.91 55.086 103.258 53.984 95.566 54 c 87.887 54 80.508
 55.078 73.656 57.047 c h
60 75 m 60 79.969 55.969 84 51 84 c 46.031 84 42 79.969 42 75 c 42 70.031
 46.031 66 51 66 c 55.969 66 60 70.031 60 75 c f
Q Q
showpage
%%Trailer
%%EOF
