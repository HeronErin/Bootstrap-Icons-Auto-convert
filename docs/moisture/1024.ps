%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
648 0 m 639.426 0 631.504 4.574 627.215 12 c 622.93 19.426 622.93 28.574
 627.215 36 c 631.504 43.426 639.426 48 648 48 c 720 48 l 720 180 l 696 
180 l 687.426 180 679.504 184.574 675.215 192 c 670.93 199.426 670.93 208.574
 675.215 216 c 679.504 223.426 687.426 228 696 228 c 720 228 l 720 360 l
 648 360 l 639.426 360 631.504 364.574 627.215 372 c 622.93 379.426 622.93
 388.574 627.215 396 c 631.504 403.426 639.426 408 648 408 c 720 408 l 720
 540 l 696 540 l 687.426 540 679.504 544.574 675.215 552 c 670.93 559.426
 670.93 568.574 675.215 576 c 679.504 583.426 687.426 588 696 588 c 720 
588 l 720 720 l 648 720 l 639.426 720 631.504 724.574 627.215 732 c 622.93
 739.426 622.93 748.574 627.215 756 c 631.504 763.426 639.426 768 648 768
 c 744 768 l 750.363 768 756.469 765.473 760.969 760.969 c 765.473 756.469
 768 750.363 768 744 c 768 24 l 768 17.637 765.473 11.531 760.969 7.031 
c 756.469 2.527 750.363 0 744 0 c h
336 72 m 353.473 55.535 l 348.938 50.719 342.613 47.988 336 47.988 c 329.387
 47.988 323.062 50.719 318.527 55.535 c 318.43 55.633 l 318.141 55.969 l
 317.086 57.074 l 313.246 61.297 l 292.039 84.863 271.645 109.152 252.098
 134.113 c 215.188 181.297 169.824 245.715 137.617 313.008 c 113.664 363.07
 96 416.734 96 467.184 c 96 605.473 202.176 720 336 720 c 469.824 720 576
 605.473 576 467.184 c 576 416.785 558.336 363.07 534.383 313.008 c 502.176
 245.711 456.816 181.297 419.902 134.113 c 399.176 107.656 377.5 81.961 
354.91 57.07 c 353.855 55.965 l 353.566 55.629 l 353.469 55.582 l h
336 72 m 318.527 55.535 l h
335.23 108.77 m 336 107.855 l 336.77 108.766 l 348.289 121.918 364.227 
140.781 382.082 163.676 c 411.41 201.164 445.441 248.922 473.328 299.371
 c 198.719 299.375 l 226.559 248.926 260.641 201.168 289.918 163.68 c 307.82
 140.785 323.805 121.918 335.277 108.77 c h
144 467.184 m 144 430.945 155.711 389.809 174.625 347.375 c 497.379 347.375
 l 516.34 389.809 528.004 430.941 528.004 467.184 c 528 581.617 440.734 
672 336 672 c 231.266 672 144 581.617 144 467.184 c f
Q Q
showpage
%%Trailer
%%EOF
