%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
324 0 m 317.371 0 312 5.371 312 12 c 312 18.629 317.371 24 324 24 c 360
 24 l 360 90 l 348 90 l 341.371 90 336 95.371 336 102 c 336 108.629 341.371
 114 348 114 c 360 114 l 360 180 l 324 180 l 317.371 180 312 185.371 312
 192 c 312 198.629 317.371 204 324 204 c 360 204 l 360 270 l 348 270 l 341.371
 270 336 275.371 336 282 c 336 288.629 341.371 294 348 294 c 360 294 l 360
 360 l 324 360 l 317.371 360 312 365.371 312 372 c 312 378.629 317.371 384
 324 384 c 372 384 l 375.184 384 378.234 382.734 380.484 380.484 c 382.734
 378.234 384 375.184 384 372 c 384 12 l 384 8.816 382.734 5.766 380.484 
3.516 c 378.234 1.266 375.184 0 372 0 c h
168 36 m 176.734 27.77 l 174.469 25.359 171.309 23.996 168 23.996 c 164.691
 23.996 161.531 25.359 159.266 27.77 c 159.219 27.816 l 159.074 27.984 l
 158.547 28.535 l 156.625 30.648 l 146.02 42.434 135.824 54.574 126.047 
67.055 c 107.59 90.648 84.91 122.855 68.809 156.504 c 56.832 181.535 48 
208.367 48 233.594 c 48 302.734 101.09 360 168 360 c 234.91 360 288 302.734
 288 233.594 c 288 208.395 279.168 181.539 267.191 156.504 c 251.086 122.855
 228.406 90.648 209.953 67.055 c 199.59 53.828 188.75 40.98 177.457 28.535
 c 176.93 27.984 l 176.785 27.816 l 176.738 27.793 l h
168 36 m 159.266 27.77 l h
167.617 54.383 m 168 53.93 l 168.383 54.387 l 174.145 60.961 182.109 70.395
 191.039 81.844 c 205.703 100.586 222.719 124.469 236.664 149.691 c 99.359
 149.688 l 113.281 124.465 130.32 100.582 144.961 81.84 c 153.914 70.391
 161.906 60.961 167.641 54.383 c h
72 233.594 m 72 215.473 77.855 194.906 87.312 173.691 c 248.688 173.691
 l 258.168 194.906 264 215.477 264 233.594 c 264 290.809 220.367 336 168
 336 c 115.633 336 72 290.809 72 233.594 c f
Q Q
showpage
%%Trailer
%%EOF
