%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
81 0 m 79.344 0 78 1.344 78 3 c 78 4.656 79.344 6 81 6 c 90 6 l 90 22.5
 l 87 22.5 l 85.344 22.5 84 23.844 84 25.5 c 84 27.156 85.344 28.5 87 28.5
 c 90 28.5 l 90 45 l 81 45 l 79.344 45 78 46.344 78 48 c 78 49.656 79.344
 51 81 51 c 90 51 l 90 67.5 l 87 67.5 l 85.344 67.5 84 68.844 84 70.5 c 
84 72.156 85.344 73.5 87 73.5 c 90 73.5 l 90 90 l 81 90 l 79.344 90 78 91.344
 78 93 c 78 94.656 79.344 96 81 96 c 93 96 l 93.797 96 94.559 95.684 95.121
 95.121 c 95.684 94.559 96 93.797 96 93 c 96 3 l 96 2.203 95.684 1.441 95.121
 0.879 c 94.559 0.316 93.797 0 93 0 c h
42 9 m 44.184 6.941 l 43.617 6.34 42.828 6 42 6 c 41.172 6 40.383 6.34 
39.816 6.941 c 39.805 6.953 l 39.77 6.996 l 39.637 7.133 l 39.156 7.66 l
 36.504 10.609 33.957 13.645 31.512 16.766 c 26.898 22.664 21.227 30.715
 17.203 39.129 c 14.207 45.383 12 52.094 12 58.398 c 12 75.684 25.273 90
 42 90 c 58.727 90 72 75.684 72 58.398 c 72 52.098 69.793 45.383 66.797 
39.125 c 62.77 30.715 57.102 22.66 52.488 16.762 c 52.488 16.766 l 49.898
 13.457 47.188 10.246 44.363 7.133 c 44.23 6.996 l 44.195 6.953 l 44.184
 6.945 l h
42 9 m 39.816 6.941 l h
41.902 13.598 m 42 13.48 l 42.098 13.594 l 43.539 15.238 45.531 17.598 
47.762 20.457 c 51.426 25.145 55.684 31.113 59.168 37.418 c 24.84 37.422
 l 28.32 31.117 32.578 25.145 36.238 20.461 c 38.477 17.598 40.473 15.242
 41.91 13.598 c h
18 58.398 m 18 53.867 19.465 48.727 21.828 43.422 c 62.172 43.422 l 64.543
 48.727 66 53.867 66 58.398 c 66 72.703 55.094 84 42 84 c 28.906 84 18 72.703
 18 58.398 c f
Q Q
showpage
%%Trailer
%%EOF
