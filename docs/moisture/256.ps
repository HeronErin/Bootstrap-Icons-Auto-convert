%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
162 0 m 158.688 0 156 2.688 156 6 c 156 9.312 158.688 12 162 12 c 180 12
 l 180 45 l 174 45 l 170.688 45 168 47.688 168 51 c 168 54.312 170.688 57
 174 57 c 180 57 l 180 90 l 162 90 l 158.688 90 156 92.688 156 96 c 156 
99.312 158.688 102 162 102 c 180 102 l 180 135 l 174 135 l 170.688 135 168
 137.688 168 141 c 168 144.312 170.688 147 174 147 c 180 147 l 180 180 l
 162 180 l 158.688 180 156 182.688 156 186 c 156 189.312 158.688 192 162
 192 c 186 192 l 187.59 192 189.117 191.367 190.242 190.242 c 191.367 189.117
 192 187.59 192 186 c 192 6 l 192 4.41 191.367 2.883 190.242 1.758 c 189.117
 0.633 187.59 0 186 0 c h
84 18 m 88.367 13.883 l 87.234 12.68 85.652 11.996 84 11.996 c 82.348 11.996
 80.766 12.68 79.633 13.883 c 79.609 13.906 l 79.539 13.992 l 79.273 14.27
 l 78.312 15.324 l 73.012 21.215 67.91 27.289 63.023 33.527 c 53.797 45.324
 42.457 61.426 34.402 78.25 c 28.414 90.77 24 104.184 24 116.797 c 24 151.367
 50.543 180 84 180 c 117.457 180 144 151.367 144 116.797 c 144 104.195 139.586
 90.77 133.598 78.254 c 125.547 61.43 114.207 45.324 104.977 33.531 c 104.977
 33.527 l 99.793 26.914 94.375 20.488 88.727 14.27 c 88.461 13.992 l 88.391
 13.906 l 88.367 13.895 l h
84 18 m 79.633 13.883 l h
83.809 27.191 m 84 26.965 l 84.191 27.191 l 87.07 30.48 91.055 35.195 95.52
 40.918 c 102.852 50.289 111.359 62.23 118.332 74.844 c 49.68 74.844 l 56.641
 62.23 65.16 50.293 72.48 40.918 c 76.957 35.195 80.953 30.477 83.82 27.191
 c h
36 116.797 m 36 107.738 38.93 97.453 43.656 86.844 c 124.344 86.844 l 129.082
 97.453 132 107.734 132 116.797 c 132 145.402 110.184 168 84 168 c 57.816
 168 36 145.402 36 116.797 c f
Q Q
showpage
%%Trailer
%%EOF
