%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
40.5 0 m 39.672 0 39 0.672 39 1.5 c 39 2.328 39.672 3 40.5 3 c 45 3 l 45
 11.25 l 43.5 11.25 l 42.672 11.25 42 11.922 42 12.75 c 42 13.578 42.672
 14.25 43.5 14.25 c 45 14.25 l 45 22.5 l 40.5 22.5 l 39.672 22.5 39 23.172
 39 24 c 39 24.828 39.672 25.5 40.5 25.5 c 45 25.5 l 45 33.75 l 43.5 33.75
 l 42.672 33.75 42 34.422 42 35.25 c 42 36.078 42.672 36.75 43.5 36.75 c
 45 36.75 l 45 45 l 40.5 45 l 39.672 45 39 45.672 39 46.5 c 39 47.328 39.672
 48 40.5 48 c 46.5 48 l 46.898 48 47.281 47.844 47.562 47.562 c 47.844 47.281
 48 46.898 48 46.5 c 48 1.5 l 48 1.102 47.844 0.719 47.562 0.438 c 47.281
 0.156 46.898 0 46.5 0 c h
21 4.5 m 22.094 3.473 l 21.809 3.172 21.414 3 21 3 c 20.586 3 20.191 3.172
 19.906 3.473 c 19.879 3.5 l 19.812 3.57 l 19.574 3.836 l 19.578 3.832 l
 18.254 5.305 16.977 6.82 15.758 8.383 c 13.449 11.332 10.617 15.359 8.602
 19.562 c 7.105 22.691 6 26.047 6 29.199 c 6 37.844 12.637 45 21 45 c 29.363
 45 36 37.844 36 29.199 c 36 26.051 34.895 22.691 33.398 19.562 c 31.387
 15.355 28.551 11.332 26.242 8.383 c 24.949 6.727 23.594 5.121 22.184 3.566
 c 22.117 3.496 l 22.098 3.477 l 22.09 3.473 l h
21 4.5 m 19.906 3.473 l h
20.953 6.797 m 21 6.742 l 21.047 6.801 l 21.766 7.621 22.762 8.801 23.879
 10.234 c 25.711 12.578 27.84 15.562 29.582 18.715 c 12.422 18.711 l 14.16
 15.559 16.293 12.574 18.121 10.23 c 19.238 8.801 20.238 7.621 20.957 6.797
 c h
9 29.199 m 9 26.934 9.73 24.363 10.914 21.711 c 31.086 21.711 l 32.27 24.363
 33 26.934 33 29.199 c 33 36.352 27.547 42 21 42 c 14.453 42 9 36.352 9 
29.199 c f
Q Q
showpage
%%Trailer
%%EOF
