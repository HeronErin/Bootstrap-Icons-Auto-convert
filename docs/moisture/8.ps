%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.062 0 m 4.812 0 4.812 0.375 5.062 0.375 c 5.625 0.375 l 5.625 1.406 l
 5.438 1.406 l 5.188 1.406 5.188 1.781 5.438 1.781 c 5.625 1.781 l 5.625
 2.812 l 5.062 2.812 l 4.812 2.812 4.812 3.188 5.062 3.188 c 5.625 3.188
 l 5.625 4.219 l 5.438 4.219 l 5.188 4.219 5.188 4.594 5.438 4.594 c 5.625
 4.594 l 5.625 5.625 l 5.062 5.625 l 4.812 5.625 4.812 6 5.062 6 c 5.812
 6 l 5.918 6 6 5.918 6 5.812 c 6 0.188 l 6 0.082 5.918 0 5.812 0 c h
2.625 0.562 m 2.762 0.434 l 2.688 0.355 2.562 0.355 2.488 0.434 c 2.445
 0.477 l 2.445 0.48 l 2.281 0.664 2.121 0.852 1.969 1.047 c 1.68 1.414 1.324
 1.918 1.074 2.445 c 0.887 2.836 0.75 3.254 0.75 3.648 c 0.75 4.73 1.578
 5.625 2.625 5.625 c 3.672 5.625 4.5 4.73 4.5 3.648 c 4.5 3.254 4.363 2.836
 4.176 2.445 c 3.926 1.918 3.57 1.418 3.281 1.047 c 3.117 0.84 2.949 0.641
 2.773 0.445 c 2.762 0.434 l h
2.625 0.562 m 2.488 0.434 l h
2.617 0.852 m 2.625 0.844 l 2.633 0.852 l 2.723 0.953 2.848 1.102 2.988
 1.281 c 3.219 1.574 3.484 1.945 3.699 2.34 c 1.551 2.34 l 1.77 1.945 2.035
 1.574 2.262 1.281 c 2.402 1.102 2.527 0.953 2.617 0.852 c h
1.125 3.648 m 1.125 3.367 1.215 3.043 1.363 2.711 c 3.887 2.711 l 4.035
 3.043 4.125 3.363 4.125 3.648 c 4.125 4.543 3.441 5.25 2.625 5.25 c 1.809
 5.25 1.125 4.543 1.125 3.648 c f
Q Q
showpage
%%Trailer
%%EOF
