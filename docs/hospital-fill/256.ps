%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
72 0 m 65.371 0 60 5.371 60 12 c 60 24 l 53.371 24 48 29.371 48 36 c 48
 84 l 12 84 l 5.371 84 0 89.371 0 96 c 0 180 l 0 183.184 1.266 186.234 3.516
 188.484 c 5.766 190.734 8.816 192 12 192 c 84 192 l 84 162 l 84 158.688
 86.688 156 90 156 c 102 156 l 103.59 156 105.117 156.633 106.242 157.758
 c 107.367 158.883 108 160.41 108 162 c 108 192 l 180 192 l 183.184 192 
186.234 190.734 188.484 188.484 c 190.734 186.234 192 183.184 192 180 c 
192 96 l 192 92.816 190.734 89.766 188.484 87.516 c 186.234 85.266 183.184
 84 180 84 c 144 84 l 144 36 l 144 32.816 142.734 29.766 140.484 27.516 
c 138.234 25.266 135.184 24 132 24 c 132 12 l 132 8.816 130.734 5.766 128.484
 3.516 c 126.234 1.266 123.184 0 120 0 c h
102 60.406 m 102 73.605 l 113.438 67.004 l 119.438 77.406 l 108 84 l 119.438
 90.602 l 113.438 100.992 l 102 94.391 l 102 107.59 l 90 107.59 l 90 94.391
 l 78.562 100.992 l 72.562 90.602 l 84 84 l 72.562 77.398 l 78.562 67.008
 l 90 73.609 l 90 60.41 l h
27 108 m 33 108 l 33.797 108 34.559 108.316 35.121 108.879 c 35.684 109.441
 36 110.203 36 111 c 36 117 l 36 117.797 35.684 118.559 35.121 119.121 c
 34.559 119.684 33.797 120 33 120 c 27 120 l 25.344 120 24 118.656 24 117
 c 24 111 l 24 109.344 25.344 108 27 108 c 27 132 m 33 132 l 33.797 132 
34.559 132.316 35.121 132.879 c 35.684 133.441 36 134.203 36 135 c 36 141
 l 36 141.797 35.684 142.559 35.121 143.121 c 34.559 143.684 33.797 144 
33 144 c 27 144 l 25.344 144 24 142.656 24 141 c 24 135 l 24 133.344 25.344
 132 27 132 c 24 159 m 24 157.344 25.344 156 27 156 c 33 156 l 33.797 156
 34.559 156.316 35.121 156.879 c 35.684 157.441 36 158.203 36 159 c 36 165
 l 36 165.797 35.684 166.559 35.121 167.121 c 34.559 167.684 33.797 168 
33 168 c 27 168 l 25.344 168 24 166.656 24 165 c h
159 108 m 165 108 l 165.797 108 166.559 108.316 167.121 108.879 c 167.684
 109.441 168 110.203 168 111 c 168 117 l 168 117.797 167.684 118.559 167.121
 119.121 c 166.559 119.684 165.797 120 165 120 c 159 120 l 157.344 120 156
 118.656 156 117 c 156 111 l 156 109.344 157.344 108 159 108 c 156 135 m
 156 133.344 157.344 132 159 132 c 165 132 l 165.797 132 166.559 132.316
 167.121 132.879 c 167.684 133.441 168 134.203 168 135 c 168 141 l 168 141.797
 167.684 142.559 167.121 143.121 c 166.559 143.684 165.797 144 165 144 c
 159 144 l 157.344 144 156 142.656 156 141 c h
159 156 m 165 156 l 165.797 156 166.559 156.316 167.121 156.879 c 167.684
 157.441 168 158.203 168 159 c 168 165 l 168 165.797 167.684 166.559 167.121
 167.121 c 166.559 167.684 165.797 168 165 168 c 159 168 l 157.344 168 156
 166.656 156 165 c 156 159 l 156 157.344 157.344 156 159 156 c f
Q Q
showpage
%%Trailer
%%EOF
