%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 96 m 480 864 l 96 864 l 96 96 l h
96 0 m 70.539 0 46.121 10.113 28.117 28.117 c 10.113 46.121 0 70.539 0 
96 c 0 864 l 0 889.461 10.113 913.879 28.117 931.883 c 46.121 949.887 70.539
 960 96 960 c 480 960 l 505.461 960 529.879 949.887 547.883 931.883 c 565.887
 913.879 576 889.461 576 864 c 576 96 l 576 70.539 565.887 46.121 547.883
 28.117 c 529.879 10.113 505.461 0 480 0 c h
1344 192 m 1344 672 l 864 672 l 864 192 l h
864 96 m 838.539 96 814.121 106.113 796.117 124.117 c 778.113 142.121 768
 166.539 768 192 c 768 672 l 768 697.461 778.113 721.879 796.117 739.883
 c 814.121 757.887 838.539 768 864 768 c 1344 768 l 1369.461 768 1393.879
 757.887 1411.883 739.883 c 1429.887 721.879 1440 697.461 1440 672 c 1440
 192 l 1440 166.539 1429.887 142.121 1411.883 124.117 c 1393.879 106.113
 1369.461 96 1344 96 c h
480 1248 m 480 1440 l 288 1440 l 288 1248 l h
288 1152 m 262.539 1152 238.121 1162.113 220.117 1180.117 c 202.113 1198.121
 192 1222.539 192 1248 c 192 1440 l 192 1465.461 202.113 1489.879 220.117
 1507.883 c 238.121 1525.887 262.539 1536 288 1536 c 480 1536 l 505.461 
1536 529.879 1525.887 547.883 1507.883 c 565.887 1489.879 576 1465.461 576
 1440 c 576 1248 l 576 1222.539 565.887 1198.121 547.883 1180.117 c 529.879
 1162.113 505.461 1152 480 1152 c h
1440 1056 m 1440 1248 l 864 1248 l 864 1056 l h
864 960 m 838.539 960 814.121 970.113 796.117 988.117 c 778.113 1006.121
 768 1030.539 768 1056 c 768 1248 l 768 1273.461 778.113 1297.879 796.117
 1315.883 c 814.121 1333.887 838.539 1344 864 1344 c 1440 1344 l 1465.461
 1344 1489.879 1333.887 1507.883 1315.883 c 1525.887 1297.879 1536 1273.461
 1536 1248 c 1536 1056 l 1536 1030.539 1525.887 1006.121 1507.883 988.117
 c 1489.879 970.113 1465.461 960 1440 960 c h
864 960 m f
Q Q
showpage
%%Trailer
%%EOF
