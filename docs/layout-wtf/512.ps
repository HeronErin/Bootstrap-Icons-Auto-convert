%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
120 24 m 120 216 l 24 216 l 24 24 l h
24 0 m 17.637 0 11.531 2.527 7.031 7.031 c 2.527 11.531 0 17.637 0 24 c
 0 216 l 0 222.363 2.527 228.469 7.031 232.969 c 11.531 237.473 17.637 240
 24 240 c 120 240 l 126.363 240 132.469 237.473 136.969 232.969 c 141.473
 228.469 144 222.363 144 216 c 144 24 l 144 17.637 141.473 11.531 136.969
 7.031 c 132.469 2.527 126.363 0 120 0 c h
336 48 m 336 168 l 216 168 l 216 48 l h
216 24 m 209.637 24 203.531 26.527 199.031 31.031 c 194.527 35.531 192 
41.637 192 48 c 192 168 l 192 174.363 194.527 180.469 199.031 184.969 c 
203.531 189.473 209.637 192 216 192 c 336 192 l 342.363 192 348.469 189.473
 352.969 184.969 c 357.473 180.469 360 174.363 360 168 c 360 48 l 360 41.637
 357.473 35.531 352.969 31.031 c 348.469 26.527 342.363 24 336 24 c h
120 312 m 120 360 l 72 360 l 72 312 l h
72 288 m 65.637 288 59.531 290.527 55.031 295.031 c 50.527 299.531 48 305.637
 48 312 c 48 360 l 48 366.363 50.527 372.469 55.031 376.969 c 59.531 381.473
 65.637 384 72 384 c 120 384 l 126.363 384 132.469 381.473 136.969 376.969
 c 141.473 372.469 144 366.363 144 360 c 144 312 l 144 305.637 141.473 299.531
 136.969 295.031 c 132.469 290.527 126.363 288 120 288 c h
360 264 m 360 312 l 216 312 l 216 264 l h
216 240 m 209.637 240 203.531 242.527 199.031 247.031 c 194.527 251.531
 192 257.637 192 264 c 192 312 l 192 318.363 194.527 324.469 199.031 328.969
 c 203.531 333.473 209.637 336 216 336 c 360 336 l 366.363 336 372.469 333.473
 376.969 328.969 c 381.473 324.469 384 318.363 384 312 c 384 264 l 384 257.637
 381.473 251.531 376.969 247.031 c 372.469 242.527 366.363 240 360 240 c
 h
216 240 m f
Q Q
showpage
%%Trailer
%%EOF
