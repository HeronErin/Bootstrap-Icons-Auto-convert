%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 144 1489 1392
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 144 1489 1392
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 144 1345 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 1392 m 249.809 1392 213.184 1376.828 186.176 1349.824 c 159.172 1322.816
 144 1286.191 144 1248 c 144 288 l 144 249.809 159.172 213.184 186.176 186.176
 c 213.184 159.172 249.809 144 288 144 c 1056 144 l 1073.148 144 1088.996
 153.148 1097.57 168 c 1106.145 182.852 1106.145 201.148 1097.57 216 c 1088.996
 230.852 1073.148 240 1056 240 c 288 240 l 275.27 240 263.062 245.059 254.059
 254.059 c 245.059 263.062 240 275.27 240 288 c 240 1248 l 240 1260.73 245.059
 1272.938 254.059 1281.941 c 263.062 1290.941 275.27 1296 288 1296 c 1248
 1296 l 1260.73 1296 1272.938 1290.941 1281.941 1281.941 c 1290.941 1272.938
 1296 1260.73 1296 1248 c 1296 768 l 1296 750.852 1305.148 735.004 1320 
726.43 c 1334.852 717.855 1353.148 717.855 1368 726.43 c 1382.852 735.004
 1392 750.852 1392 768 c 1392 1248 l 1392 1286.191 1376.828 1322.816 1349.824
 1349.824 c 1322.816 1376.828 1286.191 1392 1248 1392 c h
288 1392 m f
801.984 993.984 m 1473.984 321.984 l 1486.125 309.844 1490.867 292.145 
1486.422 275.562 c 1481.98 258.977 1469.023 246.02 1452.438 241.578 c 1435.855
 237.133 1418.156 241.875 1406.016 254.016 c 768 892.129 l 513.984 638.016
 l 501.844 625.875 484.145 621.133 467.562 625.578 c 450.977 630.02 438.02
 642.977 433.578 659.562 c 429.133 676.145 433.875 693.844 446.016 705.984
 c 734.016 993.984 l 743.02 1003.012 755.25 1008.086 768 1008.086 c 780.75
 1008.086 792.98 1003.012 801.984 993.984 c f
Q Q
showpage
%%Trailer
%%EOF
