%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 90
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 90 rectclip
1 0 0 -1 0 96 cm q
0 g
18 15 m 18 10.031 22.031 6 27 6 c 33 6 l 37.969 6 42 10.031 42 15 c 42 
30 l 54 30 l 54 15 l 54 10.031 58.031 6 63 6 c 69 6 l 73.969 6 78 10.031
 78 15 c 78 29.293 l 78 30.426 78.641 31.465 79.656 31.973 c 85.027 34.656
 l 88.074 36.18 90 39.297 90 42.707 c 90 87 l 90 91.969 85.969 96 81 96 
c 63 96 l 58.031 96 54 91.969 54 87 c 54 69 l 54 68.203 54.312 67.441 54.875
 66.875 c 60 61.758 l 60 57 l 60 56.203 59.684 55.441 59.121 54.879 c 58.559
 54.316 57.797 54 57 54 c 39 54 l 37.344 54 36 55.344 36 57 c 36 61.758 
l 41.125 66.875 l 41.688 67.441 42 68.203 42 69 c 42 87 l 42 91.969 37.969
 96 33 96 c 15 96 l 10.031 96 6 91.969 6 87 c 6 42.707 l 6 39.297 7.93 36.18
 10.98 34.656 c 16.344 31.973 l 17.359 31.465 18 30.426 18 29.293 c h
27 12 m 25.344 12 24 13.344 24 15 c 24 18 l 36 18 l 36 15 l 36 14.203 35.684
 13.441 35.121 12.879 c 34.559 12.316 33.797 12 33 12 c h
36 24 m 24 24 l 24 29.293 l 24 32.703 22.07 35.82 19.02 37.344 c 13.656
 40.027 l 12.641 40.535 12 41.574 12 42.707 c 12 78 l 36 78 l 36 70.242 
l 30.875 65.125 l 30.312 64.559 30 63.797 30 63 c 30 57 l 30 52.031 34.031
 48 39 48 c 57 48 l 61.969 48 66 52.031 66 57 c 66 63 l 66 63.797 65.688
 64.559 65.125 65.125 c 60 70.242 l 60 78 l 84 78 l 84 42.707 l 84 41.574
 83.359 40.535 82.344 40.027 c 76.973 37.344 l 73.926 35.82 72 32.703 72
 29.293 c 72 24 l 60 24 l 60 33 l 60 33.797 59.684 34.559 59.121 35.121 
c 58.559 35.684 57.797 36 57 36 c 39 36 l 37.344 36 36 34.656 36 33 c h
60 18 m 72 18 l 72 15 l 72 14.203 71.684 13.441 71.121 12.879 c 70.559 
12.316 69.797 12 69 12 c 63 12 l 61.344 12 60 13.344 60 15 c h
84 84 m 60 84 l 60 87 l 60 87.797 60.316 88.559 60.879 89.121 c 61.441 
89.684 62.203 90 63 90 c 81 90 l 81.797 90 82.559 89.684 83.121 89.121 c
 83.684 88.559 84 87.797 84 87 c h
36 84 m 12 84 l 12 87 l 12 87.797 12.316 88.559 12.879 89.121 c 13.441 
89.684 14.203 90 15 90 c 33 90 l 33.797 90 34.559 89.684 35.121 89.121 c
 35.684 88.559 36 87.797 36 87 c h
36 84 m f
Q Q
showpage
%%Trailer
%%EOF
