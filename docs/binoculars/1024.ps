%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 720
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 720 rectclip
1 0 0 -1 0 768 cm q
0 g
144 120 m 144 100.906 151.586 82.59 165.09 69.09 c 178.59 55.586 196.906
 48 216 48 c 264 48 l 283.094 48 301.41 55.586 314.91 69.09 c 328.414 82.59
 336 100.906 336 120 c 336 240 l 432 240 l 432 120 l 432 100.906 439.586
 82.59 453.09 69.09 c 466.59 55.586 484.906 48 504 48 c 552 48 l 571.094
 48 589.41 55.586 602.91 69.09 c 616.414 82.59 624 100.906 624 120 c 624
 234.336 l 624 238.789 625.238 243.156 627.578 246.945 c 629.918 250.734
 633.266 253.797 637.246 255.793 c 680.207 277.25 l 680.207 277.246 l 692.168
 283.23 702.227 292.426 709.254 303.805 c 716.285 315.18 720.004 328.289
 720 341.664 c 720 696 l 720 715.094 712.414 733.41 698.91 746.91 c 685.41
 760.414 667.094 768 648 768 c 504 768 l 484.906 768 466.59 760.414 453.09
 746.91 c 439.586 733.41 432 715.094 432 696 c 432 552 l 431.988 545.629
 434.508 539.52 439.008 535.008 c 480 494.062 l 480 456 l 480 449.637 477.473
 443.531 472.969 439.031 c 468.469 434.527 462.363 432 456 432 c 312 432
 l 305.637 432 299.531 434.527 295.031 439.031 c 290.527 443.531 288 449.637
 288 456 c 288 494.062 l 328.992 535.008 l 333.492 539.52 336.012 545.629
 336 552 c 336 696 l 336 715.094 328.414 733.41 314.91 746.91 c 301.41 760.414
 283.094 768 264 768 c 120 768 l 100.906 768 82.59 760.414 69.09 746.91 
c 55.586 733.41 48 715.094 48 696 c 48 341.664 l 48 328.285 51.727 315.172
 58.766 303.793 c 65.801 292.418 75.871 283.223 87.84 277.246 c 130.75 255.789
 l 130.754 255.793 l 134.734 253.797 138.082 250.734 140.422 246.945 c 142.762
 243.156 144 238.789 144 234.336 c h
216 96 m 209.637 96 203.531 98.527 199.031 103.031 c 194.527 107.531 192
 113.637 192 120 c 192 144 l 288 144 l 288 120 l 288 113.637 285.473 107.531
 280.969 103.031 c 276.469 98.527 270.363 96 264 96 c h
288 192 m 192 192 l 192 234.336 l 192 247.715 188.273 260.828 181.234 272.207
 c 174.199 283.582 164.129 292.777 152.16 298.754 c 109.25 320.211 l 109.246
 320.207 l 105.266 322.203 101.918 325.266 99.578 329.055 c 97.238 332.844
 96 337.211 96 341.664 c 96 624 l 288 624 l 288 561.938 l 247.008 520.992
 l 242.508 516.48 239.988 510.371 240 504 c 240 456 l 240 436.906 247.586
 418.59 261.09 405.09 c 274.59 391.586 292.906 384 312 384 c 456 384 l 475.094
 384 493.41 391.586 506.91 405.09 c 520.414 418.59 528 436.906 528 456 c
 528 504 l 528.012 510.371 525.492 516.48 520.992 520.992 c 480 561.938 
l 480 624 l 672 624 l 672 341.664 l 672 337.211 670.762 332.844 668.422 
329.055 c 666.082 325.266 662.734 322.203 658.754 320.207 c 615.793 298.75
 l 615.793 298.754 l 603.832 292.77 593.773 283.574 586.746 272.195 c 579.715
 260.82 575.996 247.711 576 234.336 c 576 192 l 480 192 l 480 264 l 480 
270.363 477.473 276.469 472.969 280.969 c 468.469 285.473 462.363 288 456
 288 c 312 288 l 305.637 288 299.531 285.473 295.031 280.969 c 290.527 276.469
 288 270.363 288 264 c h
480 144 m 576 144 l 576 120 l 576 113.637 573.473 107.531 568.969 103.031
 c 564.469 98.527 558.363 96 552 96 c 504 96 l 497.637 96 491.531 98.527
 487.031 103.031 c 482.527 107.531 480 113.637 480 120 c h
672 672 m 480 672 l 480 696 l 480 702.363 482.527 708.469 487.031 712.969
 c 491.531 717.473 497.637 720 504 720 c 648 720 l 654.363 720 660.469 717.473
 664.969 712.969 c 669.473 708.469 672 702.363 672 696 c h
288 672 m 96 672 l 96 696 l 96 702.363 98.527 708.469 103.031 712.969 c
 107.531 717.473 113.637 720 120 720 c 264 720 l 270.363 720 276.469 717.473
 280.969 712.969 c 285.473 708.469 288 702.363 288 696 c h
288 672 m f
Q Q
showpage
%%Trailer
%%EOF
