%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 67 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 67 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 67 1536 1469 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 192 m 1536 158.297 1527.129 125.188 1510.277 96 c 1493.426 66.812 
1469.188 42.574 1440 25.723 c 1410.812 8.871 1377.703 0 1344 0 c 192 0 l
 141.078 0 92.242 20.227 56.234 56.234 c 20.227 92.242 0 141.078 0 192 c
 0 960 l 0 993.703 8.871 1026.812 25.723 1056 c 42.574 1085.188 66.812 1109.426
 96 1126.277 c 125.188 1143.129 158.297 1152 192 1152 c 1112.258 1152 l 
1137.715 1152.004 1162.129 1162.125 1180.129 1180.129 c 1454.016 1454.016
 l 1463.012 1463.035 1475.219 1468.105 1487.957 1468.117 c 1500.691 1468.129
 1512.91 1463.078 1521.922 1454.078 c 1530.934 1445.078 1535.996 1432.863
 1536 1420.129 c h
336 288 m 1200 288 l 1217.148 288 1232.996 297.148 1241.57 312 c 1250.145
 326.852 1250.145 345.148 1241.57 360 c 1232.996 374.852 1217.148 384 1200
 384 c 336 384 l 318.852 384 303.004 374.852 294.43 360 c 285.855 345.148
 285.855 326.852 294.43 312 c 303.004 297.148 318.852 288 336 288 c 336 
528 m 1200 528 l 1217.148 528 1232.996 537.148 1241.57 552 c 1250.145 566.852
 1250.145 585.148 1241.57 600 c 1232.996 614.852 1217.148 624 1200 624 c
 336 624 l 318.852 624 303.004 614.852 294.43 600 c 285.855 585.148 285.855
 566.852 294.43 552 c 303.004 537.148 318.852 528 336 528 c 336 768 m 816
 768 l 833.148 768 848.996 777.148 857.57 792 c 866.145 806.852 866.145 
825.148 857.57 840 c 848.996 854.852 833.148 864 816 864 c 336 864 l 318.852
 864 303.004 854.852 294.43 840 c 285.855 825.148 285.855 806.852 294.43
 792 c 303.004 777.148 318.852 768 336 768 c f
Q Q
showpage
%%Trailer
%%EOF
