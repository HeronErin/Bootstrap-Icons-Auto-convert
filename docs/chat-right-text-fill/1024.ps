%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 33 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 33 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 33 768 735 rectclip
1 0 0 -1 0 768 cm q
0 g
768 96 m 768 70.539 757.887 46.121 739.883 28.117 c 721.879 10.113 697.461
 0 672 0 c 96 0 l 70.539 0 46.121 10.113 28.117 28.117 c 10.113 46.121 0
 70.539 0 96 c 0 480 l 0 505.461 10.113 529.879 28.117 547.883 c 46.121 
565.887 70.539 576 96 576 c 556.129 576 l 568.855 576.004 581.062 581.062
 590.062 590.062 c 727.008 727.008 l 731.504 731.516 737.609 734.055 743.977
 734.059 c 750.348 734.066 756.457 731.539 760.961 727.039 c 765.465 722.539
 768 716.434 768 710.062 c h
168 144 m 600 144 l 608.574 144 616.496 148.574 620.785 156 c 625.07 163.426
 625.07 172.574 620.785 180 c 616.496 187.426 608.574 192 600 192 c 168 
192 l 159.426 192 151.504 187.426 147.215 180 c 142.93 172.574 142.93 163.426
 147.215 156 c 151.504 148.574 159.426 144 168 144 c 168 264 m 600 264 l
 608.574 264 616.496 268.574 620.785 276 c 625.07 283.426 625.07 292.574
 620.785 300 c 616.496 307.426 608.574 312 600 312 c 168 312 l 159.426 312
 151.504 307.426 147.215 300 c 142.93 292.574 142.93 283.426 147.215 276
 c 151.504 268.574 159.426 264 168 264 c 168 384 m 408 384 l 416.574 384
 424.496 388.574 428.785 396 c 433.07 403.426 433.07 412.574 428.785 420
 c 424.496 427.426 416.574 432 408 432 c 168 432 l 159.426 432 151.504 427.426
 147.215 420 c 142.93 412.574 142.93 403.426 147.215 396 c 151.504 388.574
 159.426 384 168 384 c f
Q Q
showpage
%%Trailer
%%EOF
