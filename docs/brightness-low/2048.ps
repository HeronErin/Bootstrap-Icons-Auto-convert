%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 192 1344 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 192 1344 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 192 1152 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1056 m 691.617 1056 618.363 1025.656 564.352 971.648 c 510.344 917.637
 480 844.383 480 768 c 480 691.617 510.344 618.363 564.352 564.352 c 618.363
 510.344 691.617 480 768 480 c 844.383 480 917.637 510.344 971.648 564.352
 c 1025.656 618.363 1056 691.617 1056 768 c 1056 844.383 1025.656 917.637
 971.648 971.648 c 917.637 1025.656 844.383 1056 768 1056 c 768 1152 m 869.844
 1152 967.516 1111.543 1039.527 1039.527 c 1111.543 967.516 1152 869.844
 1152 768 c 1152 666.156 1111.543 568.484 1039.527 496.473 c 967.516 424.457
 869.844 384 768 384 c 666.156 384 568.484 424.457 496.473 496.473 c 424.457
 568.484 384 666.156 384 768 c 384 869.844 424.457 967.516 496.473 1039.527
 c 568.484 1111.543 666.156 1152 768 1152 c 816 240 m 816 257.148 806.852
 272.996 792 281.57 c 777.148 290.145 758.852 290.145 744 281.57 c 729.148
 272.996 720 257.148 720 240 c 720 222.852 729.148 207.004 744 198.43 c 
758.852 189.855 777.148 189.855 792 198.43 c 806.852 207.004 816 222.852
 816 240 c 816 1296 m 816 1313.148 806.852 1328.996 792 1337.57 c 777.148
 1346.145 758.852 1346.145 744 1337.57 c 729.148 1328.996 720 1313.148 720
 1296 c 720 1278.852 729.148 1263.004 744 1254.43 c 758.852 1245.855 777.148
 1245.855 792 1254.43 c 806.852 1263.004 816 1278.852 816 1296 c 1296 816
 m 1278.852 816 1263.004 806.852 1254.43 792 c 1245.855 777.148 1245.855
 758.852 1254.43 744 c 1263.004 729.148 1278.852 720 1296 720 c 1313.148
 720 1328.996 729.148 1337.57 744 c 1346.145 758.852 1346.145 777.148 1337.57
 792 c 1328.996 806.852 1313.148 816 1296 816 c 240 816 m 222.852 816 207.004
 806.852 198.43 792 c 189.855 777.148 189.855 758.852 198.43 744 c 207.004
 729.148 222.852 720 240 720 c 257.148 720 272.996 729.148 281.57 744 c 
290.145 758.852 290.145 777.148 281.57 792 c 272.996 806.852 257.148 816
 240 816 c 1175.328 428.543 m 1166.383 437.805 1154.094 443.086 1141.219
 443.195 c 1128.344 443.309 1115.965 438.242 1106.859 429.141 c 1097.758
 420.035 1092.691 407.656 1092.805 394.781 c 1092.914 381.906 1098.195 369.617
 1107.457 360.672 c 1119.648 348.898 1137.148 344.426 1153.492 348.906 c
 1169.84 353.387 1182.613 366.16 1187.094 382.508 c 1191.574 398.852 1187.102
 416.352 1175.328 428.543 c 428.543 1175.328 m 419.598 1184.59 407.309 1189.867
 394.434 1189.98 c 381.562 1190.094 369.18 1185.027 360.078 1175.922 c 350.973
 1166.82 345.906 1154.438 346.02 1141.566 c 346.133 1128.691 351.41 1116.402
 360.672 1107.457 c 372.863 1095.68 390.363 1091.207 406.711 1095.691 c 
423.059 1100.172 435.828 1112.941 440.309 1129.289 c 444.793 1145.637 440.32
 1163.137 428.543 1175.328 c 1107.453 1175.328 m 1107.457 1175.328 l 1098.195
 1166.383 1092.914 1154.094 1092.805 1141.219 c 1092.691 1128.344 1097.758
 1115.965 1106.859 1106.859 c 1115.965 1097.758 1128.344 1092.691 1141.219
 1092.805 c 1154.094 1092.914 1166.383 1098.195 1175.328 1107.457 c 1187.102
 1119.648 1191.574 1137.148 1187.094 1153.492 c 1182.613 1169.84 1169.84
 1182.613 1153.492 1187.094 c 1137.148 1191.574 1119.648 1187.102 1107.457
 1175.328 c 360.672 428.543 m 351.41 419.598 346.133 407.309 346.02 394.434
 c 345.906 381.562 350.973 369.18 360.078 360.078 c 369.18 350.973 381.562
 345.906 394.434 346.02 c 407.309 346.133 419.598 351.41 428.543 360.672
 c 440.32 372.863 444.793 390.363 440.309 406.711 c 435.828 423.059 423.059
 435.828 406.711 440.309 c 390.363 444.793 372.863 440.32 360.672 428.543
 c f
Q Q
showpage
%%Trailer
%%EOF
