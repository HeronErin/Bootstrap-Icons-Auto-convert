%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
183.504 3.504 m 185.754 1.246 188.812 -0.02 192 -0.02 c 195.188 -0.02 198.246
 1.246 200.496 3.504 c 244.969 48 l 336 48 l 348.73 48 360.938 53.059 369.941
 62.059 c 378.941 71.062 384 83.27 384 96 c 384 312 l 384 324.73 378.941
 336.938 369.941 345.941 c 360.938 354.941 348.73 360 336 360 c 48 360 l
 35.27 360 23.062 354.941 14.059 345.941 c 5.059 336.938 0 324.73 0 312 
c 0 96 l 0 83.27 5.059 71.062 14.059 62.059 c 23.062 53.059 35.27 48 48 
48 c 139.031 48 l h
24 168 m 24 240 l 360 240 l 360 168 l h
360 144 m 360 96 l 360 89.637 357.473 83.531 352.969 79.031 c 348.469 74.527
 342.363 72 336 72 c 244.969 72 l 238.602 72 232.5 69.469 228 64.969 c 192
 28.969 l 156 64.969 l 151.5 69.469 145.398 72 139.031 72 c 48 72 l 41.637
 72 35.531 74.527 31.031 79.031 c 26.527 83.531 24 89.637 24 96 c 24 144
 l h
360 264 m 24 264 l 24 312 l 24 318.363 26.527 324.469 31.031 328.969 c 
35.531 333.473 41.637 336 48 336 c 336 336 l 342.363 336 348.469 333.473
 352.969 328.969 c 357.473 324.469 360 318.363 360 312 c h
48 108 m 48 101.371 53.371 96 60 96 c 252 96 l 258.629 96 264 101.371 264
 108 c 264 114.629 258.629 120 252 120 c 60 120 l 53.371 120 48 114.629 
48 108 c 48 204 m 48 197.371 53.371 192 60 192 c 324 192 l 330.629 192 336
 197.371 336 204 c 336 210.629 330.629 216 324 216 c 60 216 l 53.371 216
 48 210.629 48 204 c 48 300 m 48 293.371 53.371 288 60 288 c 204 288 l 210.629
 288 216 293.371 216 300 c 216 306.629 210.629 312 204 312 c 60 312 l 53.371
 312 48 306.629 48 300 c f
Q Q
showpage
%%Trailer
%%EOF
