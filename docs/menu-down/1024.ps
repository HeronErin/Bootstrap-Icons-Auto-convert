%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
367.008 7.008 m 371.512 2.492 377.625 -0.043 384 -0.043 c 390.375 -0.043
 396.488 2.492 400.992 7.008 c 489.938 96 l 672 96 l 697.461 96 721.879 
106.113 739.883 124.117 c 757.887 142.121 768 166.539 768 192 c 768 624 
l 768 649.461 757.887 673.879 739.883 691.883 c 721.879 709.887 697.461 
720 672 720 c 96 720 l 70.539 720 46.121 709.887 28.117 691.883 c 10.113
 673.879 0 649.461 0 624 c 0 192 l 0 166.539 10.113 142.121 28.117 124.117
 c 46.121 106.113 70.539 96 96 96 c 278.062 96 l h
48 336 m 48 480 l 720 480 l 720 336 l h
720 288 m 720 192 l 720 179.27 714.941 167.062 705.941 158.059 c 696.938
 149.059 684.73 144 672 144 c 489.938 144 l 477.207 143.996 465 138.938 
456 129.938 c 384 57.938 l 312 129.938 l 303 138.938 290.793 143.996 278.062
 144 c 96 144 l 83.27 144 71.062 149.059 62.059 158.059 c 53.059 167.062
 48 179.27 48 192 c 48 288 l h
720 528 m 48 528 l 48 624 l 48 636.73 53.059 648.938 62.059 657.941 c 71.062
 666.941 83.27 672 96 672 c 672 672 l 684.73 672 696.938 666.941 705.941
 657.941 c 714.941 648.938 720 636.73 720 624 c h
96 216 m 96 209.637 98.527 203.531 103.031 199.031 c 107.531 194.527 113.637
 192 120 192 c 504 192 l 512.574 192 520.496 196.574 524.785 204 c 529.07
 211.426 529.07 220.574 524.785 228 c 520.496 235.426 512.574 240 504 240
 c 120 240 l 113.637 240 107.531 237.473 103.031 232.969 c 98.527 228.469
 96 222.363 96 216 c 96 408 m 96 401.637 98.527 395.531 103.031 391.031 
c 107.531 386.527 113.637 384 120 384 c 648 384 l 656.574 384 664.496 388.574
 668.785 396 c 673.07 403.426 673.07 412.574 668.785 420 c 664.496 427.426
 656.574 432 648 432 c 120 432 l 113.637 432 107.531 429.473 103.031 424.969
 c 98.527 420.469 96 414.363 96 408 c 96 600 m 96 593.637 98.527 587.531
 103.031 583.031 c 107.531 578.527 113.637 576 120 576 c 408 576 l 416.574
 576 424.496 580.574 428.785 588 c 433.07 595.426 433.07 604.574 428.785
 612 c 424.496 619.426 416.574 624 408 624 c 120 624 l 113.637 624 107.531
 621.473 103.031 616.969 c 98.527 612.469 96 606.363 96 600 c f
Q Q
showpage
%%Trailer
%%EOF
