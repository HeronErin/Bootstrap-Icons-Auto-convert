%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.836 2.77 m 3 2.641 l 3 3.359 l 2.836 3.227 l 2.836 3.23 l 2.801 3.203
 2.762 3.188 2.719 3.188 c 2.438 3.188 l 2.438 2.812 l 2.719 2.812 l 2.762
 2.812 2.801 2.797 2.836 2.77 c f
0.188 0.375 m -0.062 0.375 -0.062 0.75 0.188 0.75 c 0.375 0.75 l 0.375 
5.438 l 0.375 5.688 0.75 5.688 0.75 5.438 c 0.75 4.5 l 5.812 4.5 l 5.918
 4.5 6 4.418 6 4.312 c 6 1.688 l 6 1.582 5.918 1.5 5.812 1.5 c 0.75 1.5 
l 0.75 0.562 l 0.75 0.457 0.668 0.375 0.562 0.375 c h
4.543 1.832 m 4.582 1.875 4.617 1.922 4.648 1.969 c 4.828 2.242 4.938 2.605
 4.938 3 c 4.938 3.395 4.832 3.758 4.648 4.031 c 4.617 4.078 4.582 4.125
 4.543 4.168 c 4.277 3.902 l 4.297 3.879 4.316 3.852 4.336 3.824 c 4.473
 3.621 4.562 3.332 4.562 3 c 4.562 2.668 4.473 2.379 4.336 2.176 c 4.32 
2.148 4.301 2.121 4.277 2.098 c h
4.027 3.656 m 3.75 3.375 l 3.77 3.375 3.812 3.363 3.859 3.293 c 3.906 3.227
 3.938 3.121 3.938 3 c 3.938 2.875 3.902 2.773 3.859 2.707 c 3.812 2.637
 3.77 2.625 3.75 2.625 c 4.027 2.348 l 4.082 2.391 4.133 2.441 4.168 2.5
 c 4.258 2.637 4.309 2.816 4.309 3 c 4.309 3.188 4.258 3.367 4.168 3.5 c
 4.172 3.5 l 4.133 3.559 4.086 3.613 4.027 3.652 c 3.375 2.25 m 3.375 3.75
 l 3.375 3.906 3.191 3.996 3.07 3.895 c 2.652 3.562 l 2.25 3.562 l 2.145
 3.562 2.062 3.48 2.062 3.375 c 2.062 2.625 l 2.062 2.52 2.145 2.438 2.25
 2.438 c 2.652 2.438 l 3.07 2.105 l 3.191 2.004 3.375 2.094 3.375 2.25 c
 f
2.438 4.688 m 1.125 4.688 l 1.125 5.062 l 1.125 5.168 1.207 5.25 1.312 
5.25 c 2.25 5.25 l 2.355 5.25 2.438 5.168 2.438 5.062 c h
2.625 5.062 m 2.625 4.688 l 4.125 4.688 l 4.125 5.062 l 4.125 5.168 4.043
 5.25 3.938 5.25 c 2.812 5.25 l 2.707 5.25 2.625 5.168 2.625 5.062 c f
Q Q
showpage
%%Trailer
%%EOF
