%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
181.488 177.359 m 192 168.961 l 192 215.039 l 181.488 206.641 l 179.363
 204.938 176.723 204.004 174 204 c 156 204 l 156 180 l 174 180 l 176.723
 179.996 179.363 179.062 181.488 177.359 c f
12 24 m 5.371 24 0 29.371 0 36 c 0 42.629 5.371 48 12 48 c 24 48 l 24 348
 l 24 354.629 29.371 360 36 360 c 42.629 360 48 354.629 48 348 c 48 288 
l 372 288 l 375.184 288 378.234 286.734 380.484 284.484 c 382.734 282.234
 384 279.184 384 276 c 384 108 l 384 104.816 382.734 101.766 380.484 99.516
 c 378.234 97.266 375.184 96 372 96 c 48 96 l 48 36 l 48 32.816 46.734 29.766
 44.484 27.516 c 42.234 25.266 39.184 24 36 24 c h
290.855 117.145 m 293.254 119.914 295.496 122.848 297.574 125.953 c 309.191
 143.379 316.008 166.754 316.008 192 c 316.008 217.246 309.191 240.625 297.574
 258.047 c 295.496 261.168 293.254 264.102 290.855 266.855 c 273.816 249.816
 l 275.129 248.281 276.391 246.586 277.609 244.727 c 286.25 231.766 292.008
 213.168 292.008 192 c 292.008 170.832 286.246 152.23 277.609 139.246 c 
276.426 137.496 275.172 135.801 273.84 134.16 c h
257.855 233.855 m 240 216 l 241.367 216 244.078 215.16 246.984 210.793 
c 249.863 206.52 252 199.898 252 192 c 252 184.078 249.84 177.48 246.984
 173.207 c 244.078 168.84 241.367 168 240 168 c 257.855 150.145 l 261.457
 152.855 264.527 156.242 266.977 159.887 c 272.785 168.621 276 180.023 276
 192 c 276 203.977 272.785 215.375 266.953 224.113 c 264.477 227.836 261.402
 231.129 257.855 233.855 c 216 144 m 216 240 l 215.992 244.609 213.348 248.805
 209.195 250.801 c 205.043 252.793 200.113 252.234 196.512 249.359 c 169.801
 228 l 144 228 l 137.371 228 132 222.629 132 216 c 132 168 l 132 161.371
 137.371 156 144 156 c 169.801 156 l 196.512 134.641 l 200.113 131.766 205.043
 131.207 209.195 133.199 c 213.348 135.195 215.992 139.391 216 144 c f
156 300 m 72 300 l 72 324 l 72 327.184 73.266 330.234 75.516 332.484 c 
77.766 334.734 80.816 336 84 336 c 144 336 l 147.184 336 150.234 334.734
 152.484 332.484 c 154.734 330.234 156 327.184 156 324 c h
168 324 m 168 300 l 264 300 l 264 324 l 264 327.184 262.734 330.234 260.484
 332.484 c 258.234 334.734 255.184 336 252 336 c 180 336 l 173.371 336 168
 330.629 168 324 c f
Q Q
showpage
%%Trailer
%%EOF
