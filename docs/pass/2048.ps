%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
528 480 m 510.852 480 495.004 489.148 486.43 504 c 477.855 518.852 477.855
 537.148 486.43 552 c 495.004 566.852 510.852 576 528 576 c 1008 576 l 1025.148
 576 1040.996 566.852 1049.57 552 c 1058.145 537.148 1058.145 518.852 1049.57
 504 c 1040.996 489.148 1025.148 480 1008 480 c h
528 672 m 510.852 672 495.004 681.148 486.43 696 c 477.855 710.852 477.855
 729.148 486.43 744 c 495.004 758.852 510.852 768 528 768 c 816 768 l 833.148
 768 848.996 758.852 857.57 744 c 866.145 729.148 866.145 710.852 857.57
 696 c 848.996 681.148 833.148 672 816 672 c h
528 672 m f
768 192 m 801.703 192 834.812 183.129 864 166.277 c 893.188 149.426 917.426
 125.188 934.277 96 c 951.129 66.812 960 33.703 960 0 c 1200 0 l 1238.191
 0 1274.816 15.172 1301.824 42.176 c 1328.828 69.184 1344 105.809 1344 144
 c 1344 1392 l 1344 1430.191 1328.828 1466.816 1301.824 1493.824 c 1274.816
 1520.828 1238.191 1536 1200 1536 c 336 1536 l 297.809 1536 261.184 1520.828
 234.176 1493.824 c 207.172 1466.816 192 1430.191 192 1392 c 192 144 l 192
 105.809 207.172 69.184 234.176 42.176 c 261.184 15.172 297.809 0 336 0 
c 576 0 l 576 33.703 584.871 66.812 601.723 96 c 618.574 125.188 642.812
 149.426 672 166.277 c 701.188 183.129 734.297 192 768 192 c 768 288 m 708.418
 288.031 650.293 269.582 601.633 235.195 c 552.977 200.809 516.18 152.176
 496.32 96 c 336 96 l 323.27 96 311.062 101.059 302.059 110.059 c 293.059
 119.062 288 131.27 288 144 c 288 1392 l 288 1404.73 293.059 1416.938 302.059
 1425.941 c 311.062 1434.941 323.27 1440 336 1440 c 1200 1440 l 1212.73 
1440 1224.938 1434.941 1233.941 1425.941 c 1242.941 1416.938 1248 1404.73
 1248 1392 c 1248 144 l 1248 131.27 1242.941 119.062 1233.941 110.059 c 
1224.938 101.059 1212.73 96 1200 96 c 1039.68 96 l 1019.82 152.176 983.023
 200.809 934.367 235.195 c 885.707 269.582 827.582 288.031 768 288 c f
Q Q
showpage
%%Trailer
%%EOF
