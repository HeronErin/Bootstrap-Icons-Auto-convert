%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 480 1536 960
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 480 1536 960
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 480 1536 480 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 576 m 70.539 576 46.121 586.113 28.117 604.117 c 10.113 622.121 0 646.539
 0 672 c 0 960 l 0 985.461 10.113 1009.879 28.117 1027.883 c 46.121 1045.887
 70.539 1056 96 1056 c 1440 1056 l 1465.461 1056 1489.879 1045.887 1507.883
 1027.883 c 1525.887 1009.879 1536 985.461 1536 960 c 1536 672 l 1536 646.539
 1525.887 622.121 1507.883 604.117 c 1489.879 586.113 1465.461 576 1440 
576 c h
1200 672 m 1217.148 672 1232.996 681.148 1241.57 696 c 1250.145 710.852
 1250.145 729.148 1241.57 744 c 1232.996 758.852 1217.148 768 1200 768 c
 1182.852 768 1167.004 758.852 1158.43 744 c 1149.855 729.148 1149.855 710.852
 1158.43 696 c 1167.004 681.148 1182.852 672 1200 672 c 1392 672 m 1409.148
 672 1424.996 681.148 1433.57 696 c 1442.145 710.852 1442.145 729.148 1433.57
 744 c 1424.996 758.852 1409.148 768 1392 768 c 1374.852 768 1359.004 758.852
 1350.43 744 c 1341.855 729.148 1341.855 710.852 1350.43 696 c 1359.004 
681.148 1374.852 672 1392 672 c 96 720 m 96 707.27 101.059 695.062 110.059
 686.059 c 119.062 677.059 131.27 672 144 672 c 624 672 l 641.148 672 656.996
 681.148 665.57 696 c 674.145 710.852 674.145 729.148 665.57 744 c 656.996
 758.852 641.148 768 624 768 c 144 768 l 131.27 768 119.062 762.941 110.059
 753.941 c 101.059 744.938 96 732.73 96 720 c 120 864 m 648 864 l 656.574
 864 664.496 868.574 668.785 876 c 673.07 883.426 673.07 892.574 668.785
 900 c 664.496 907.426 656.574 912 648 912 c 120 912 l 111.426 912 103.504
 907.426 99.215 900 c 94.93 892.574 94.93 883.426 99.215 876 c 103.504 868.574
 111.426 864 120 864 c f
Q Q
showpage
%%Trailer
%%EOF
