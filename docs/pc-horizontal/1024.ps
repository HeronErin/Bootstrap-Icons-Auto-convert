%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 240 768 480
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 240 768 480
768 768 cairo_set_page_size
%%EndPageSetup
q 0 240 768 240 rectclip
1 0 0 -1 0 768 cm q
0 g
48 288 m 35.27 288 23.062 293.059 14.059 302.059 c 5.059 311.062 0 323.27
 0 336 c 0 480 l 0 492.73 5.059 504.938 14.059 513.941 c 23.062 522.941 
35.27 528 48 528 c 720 528 l 732.73 528 744.938 522.941 753.941 513.941 
c 762.941 504.938 768 492.73 768 480 c 768 336 l 768 323.27 762.941 311.062
 753.941 302.059 c 744.938 293.059 732.73 288 720 288 c h
600 336 m 608.574 336 616.496 340.574 620.785 348 c 625.07 355.426 625.07
 364.574 620.785 372 c 616.496 379.426 608.574 384 600 384 c 591.426 384
 583.504 379.426 579.215 372 c 574.93 364.574 574.93 355.426 579.215 348
 c 583.504 340.574 591.426 336 600 336 c 696 336 m 704.574 336 712.496 340.574
 716.785 348 c 721.07 355.426 721.07 364.574 716.785 372 c 712.496 379.426
 704.574 384 696 384 c 687.426 384 679.504 379.426 675.215 372 c 670.93 
364.574 670.93 355.426 675.215 348 c 679.504 340.574 687.426 336 696 336
 c 48 360 m 48 353.637 50.527 347.531 55.031 343.031 c 59.531 338.527 65.637
 336 72 336 c 312 336 l 320.574 336 328.496 340.574 332.785 348 c 337.07
 355.426 337.07 364.574 332.785 372 c 328.496 379.426 320.574 384 312 384
 c 72 384 l 65.637 384 59.531 381.473 55.031 376.969 c 50.527 372.469 48
 366.363 48 360 c 60 432 m 324 432 l 330.629 432 336 437.371 336 444 c 336
 450.629 330.629 456 324 456 c 60 456 l 53.371 456 48 450.629 48 444 c 48
 437.371 53.371 432 60 432 c f
Q Q
showpage
%%Trailer
%%EOF
