%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48.48 89.16 m 50.672 73.773 60.176 60.402 73.988 53.277 c 87.797 46.148
 104.203 46.148 118.012 53.277 c 131.824 60.402 141.328 73.773 143.52 89.16
 c 143.773 90.75 143.375 92.375 142.422 93.668 c 141.465 94.961 140.027 
95.82 138.434 96.043 c 136.84 96.27 135.223 95.844 133.945 94.867 c 132.668
 93.887 131.836 92.438 131.641 90.84 c 129.996 79.301 122.867 69.273 112.508
 63.926 c 102.152 58.582 89.848 58.582 79.492 63.926 c 69.133 69.273 62.004
 79.301 60.359 90.84 c 60.164 92.438 59.332 93.887 58.055 94.867 c 56.777
 95.844 55.16 96.27 53.566 96.043 c 51.973 95.82 50.535 94.961 49.578 93.668
 c 48.625 92.375 48.227 90.75 48.48 89.16 c 48 114 m 48 110.688 50.688 108
 54 108 c 138 108 l 139.59 108 141.117 108.633 142.242 109.758 c 143.367
 110.883 144 112.41 144 114 c 144 162 l 144 163.59 143.367 165.117 142.242
 166.242 c 141.117 167.367 139.59 168 138 168 c 54 168 l 50.688 168 48 165.312
 48 162 c h
60 120 m 60 156 l 132 156 l 132 120 l 120 120 l 120 126 l 120 129.312 117.312
 132 114 132 c 110.688 132 108 129.312 108 126 c 108 120 l h
60 120 m f
72 28.094 m 72 24 l 72 15.426 76.574 7.504 84 3.215 c 91.426 -1.07 100.574
 -1.07 108 3.215 c 115.426 7.504 120 15.426 120 24 c 120 28.094 l 147.961
 37.98 168 64.656 168 96 c 168 162 l 168 169.957 164.84 177.586 159.215 
183.215 c 153.586 188.84 145.957 192 138 192 c 54 192 l 46.043 192 38.414
 188.84 32.785 183.215 c 27.16 177.586 24 169.957 24 162 c 24 96 l 23.996
 81.105 28.609 66.578 37.203 54.414 c 45.801 42.254 57.957 33.055 72 28.094
 c 84 24 m 84 24.996 l 91.945 23.652 100.055 23.652 108 24.996 c 108 24 
l 108 17.371 102.629 12 96 12 c 89.371 12 84 17.371 84 24 c 96 36 m 80.086
 36 64.824 42.32 53.574 53.574 c 42.32 64.824 36 80.086 36 96 c 36 162 l
 36 166.773 37.895 171.352 41.273 174.727 c 44.648 178.105 49.227 180 54
 180 c 138 180 l 142.773 180 147.352 178.105 150.727 174.727 c 154.105 171.352
 156 166.773 156 162 c 156 96 l 156 80.086 149.68 64.824 138.426 53.574 
c 127.176 42.32 111.914 36 96 36 c f
Q Q
showpage
%%Trailer
%%EOF
