%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1199.328 1283.328 m 1080.445 1382.816 930.82 1438.141 775.809 1439.926 
c 620.801 1441.715 469.938 1389.855 348.793 1293.137 c 227.645 1196.418 
143.66 1060.789 111.074 909.234 c 78.488 757.676 99.301 599.516 169.988 
461.551 c 240.676 323.582 356.887 214.301 498.934 152.215 c 640.977 90.133
 800.121 79.07 949.391 120.898 c 1098.66 162.727 1228.875 254.879 1317.973
 381.734 c 1407.074 508.594 1449.574 662.352 1438.273 816.961 c 1471.297
 820.129 1503.555 831.074 1531.875 848.449 c 1531.871 848.449 l 1550.656
 670.301 1506.57 491.191 1407.25 342.109 c 1307.93 193.031 1159.621 83.359
 987.984 32.07 c 816.348 -19.215 632.184 -8.891 467.355 61.258 c 302.527
 131.41 167.406 256.969 85.371 416.219 c 3.336 575.465 -20.453 758.379 18.125
 933.312 c 56.703 1108.246 155.215 1264.188 296.621 1374.16 c 438.027 1484.137
 613.426 1541.219 792.473 1535.535 c 971.516 1529.852 1142.941 1461.762 
1277.09 1343.039 c 1250.059 1324.625 1224.098 1304.688 1199.328 1283.328
 c 841.152 974.207 m 805.293 982.809 769.836 992.996 734.879 1004.734 c 
722.641 1009.242 709.098 1008.574 697.359 1002.887 c 685.625 997.199 676.707
 986.98 672.66 974.582 c 668.613 962.184 669.789 948.676 675.91 937.16 c
 682.035 925.645 692.578 917.113 705.121 913.535 c 741.602 901.535 782.113
 889.152 819.555 880.605 c 855.074 872.348 894.434 865.918 925.441 870.238
 c 940.801 872.352 963.266 878.398 979.297 897.695 c 997.344 919.391 997.25
 945.406 991.871 965.375 c 985.398 985.965 975.32 1005.238 962.113 1022.305
 c 954.754 1032.543 945.953 1043.52 935.715 1055.234 c 945.953 1067.137 
954.785 1078.242 962.211 1088.547 c 975.844 1107.457 986.785 1126.66 991.973
 1145.668 c 997.254 1165.637 997.348 1191.652 979.301 1213.445 c 963.172
 1232.645 940.516 1238.598 925.254 1240.711 c 894.246 1244.84 854.887 1238.117
 819.461 1229.863 c 819.457 1229.855 l 780.902 1220.398 742.758 1209.348
 705.121 1196.734 c 692.578 1193.156 682.035 1184.629 675.91 1173.113 c 
669.789 1161.598 668.613 1148.086 672.66 1135.688 c 676.707 1123.289 685.625
 1113.07 697.359 1107.383 c 709.098 1101.695 722.641 1101.027 734.879 1105.535
 c 770.496 1117.055 807.934 1128.574 841.344 1136.352 c 858.238 1140.32 
872.512 1143.008 884.16 1144.414 c 869.312 1124.715 853.215 1105.988 835.969
 1088.352 c 827.344 1079.375 822.539 1067.402 822.578 1054.953 c 822.613
 1042.504 827.484 1030.559 836.16 1021.633 c 853.422 1004.301 869.461 985.793
 884.16 966.238 c 869.711 968.211 855.359 970.836 841.152 974.113 c h
914.688 965.855 m 914.109 965.66 l h
914.879 1145.086 m 914.305 1145.184 l h
576 768 m 628.992 768 672 703.488 672 624 c 672 544.512 628.992 480 576
 480 c 523.008 480 480 544.512 480 624 c 480 703.488 523.008 768 576 768
 c 840.672 713.953 m 851.797 720.141 864.926 721.652 877.168 718.16 c 889.41
 714.668 899.766 706.453 905.953 695.328 c 913.5 681.148 924.734 669.266
 938.469 660.938 c 952.207 652.605 967.938 648.137 984 648 c 1016.543 648
 1045.922 666.238 1062.047 695.328 c 1070.383 710.316 1086.078 719.719 1103.227
 719.996 c 1120.375 720.273 1136.367 711.379 1145.18 696.668 c 1153.992 
681.957 1154.285 663.66 1145.953 648.672 c 1130.086 619.535 1106.688 595.191
 1078.199 578.188 c 1049.711 561.18 1017.176 552.137 984 552 c 913.922 552
 853.824 591.551 822.047 648.672 c 815.859 659.797 814.348 672.926 817.84
 685.168 c 821.332 697.41 829.547 707.766 840.672 713.953 c 1344 943.488
 m 1450.559 834.047 1716.863 1025.664 1344 1272 c 971.137 1025.664 1237.441
 834.047 1344 943.586 c h
1344 943.488 m f*
Q Q
showpage
%%Trailer
%%EOF
