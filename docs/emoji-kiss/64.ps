%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
37.48 40.105 m 32.488 44.281 25.84 45.906 19.484 44.508 c 13.125 43.105
 7.777 38.836 5.004 32.949 c 2.23 27.059 2.344 20.215 5.312 14.422 c 8.281
 8.629 13.766 4.539 20.168 3.352 c 26.566 2.164 33.156 4.012 38.008 8.352
 c 42.859 12.691 45.422 19.039 44.945 25.531 c 45.977 25.629 46.984 25.973
 47.871 26.516 c 48.66 19.031 45.895 11.613 40.402 6.473 c 34.906 1.332 
27.32 -0.934 19.91 0.348 c 12.496 1.633 6.113 6.32 2.668 13.008 c -0.777
 19.695 -0.887 27.613 2.371 34.395 c 5.629 41.172 11.879 46.035 19.254 47.523
 c 26.629 49.012 34.273 46.957 39.91 41.969 c 39.062 41.395 38.254 40.773
 37.48 40.105 c 26.289 30.445 m 26.285 30.445 l 25.164 30.711 24.059 31.031
 22.965 31.398 c 22.582 31.539 22.16 31.52 21.793 31.34 c 21.426 31.164 
21.148 30.844 21.02 30.457 c 20.895 30.066 20.93 29.645 21.121 29.285 c 
21.312 28.926 21.645 28.66 22.035 28.547 c 23.176 28.172 24.441 27.785 25.609
 27.52 c 26.719 27.262 27.949 27.059 28.918 27.195 c 29.398 27.262 30.102
 27.449 30.602 28.055 c 31.164 28.734 31.164 29.547 30.996 30.168 c 30.793
 30.812 30.48 31.414 30.066 31.945 c 29.836 32.266 29.562 32.609 29.242 
32.973 c 29.562 33.344 29.84 33.691 30.07 34.012 c 30.496 34.602 30.84 35.203
 31 35.797 c 31.164 36.422 31.168 37.234 30.605 37.914 c 30.102 38.516 29.395
 38.699 28.918 38.766 c 27.949 38.895 26.719 38.684 25.613 38.426 c 25.609
 38.434 l 24.402 38.137 23.211 37.793 22.035 37.398 c 21.645 37.285 21.312
 37.02 21.121 36.66 c 20.93 36.301 20.895 35.879 21.02 35.492 c 21.148 35.102
 21.426 34.785 21.793 34.605 c 22.16 34.43 22.582 34.406 22.965 34.547 c
 24.078 34.906 25.246 35.266 26.293 35.512 c 26.82 35.637 27.266 35.719 
27.633 35.766 c 27.629 35.762 l 27.168 35.148 26.664 34.562 26.125 34.012
 c 25.562 33.43 25.566 32.504 26.129 31.926 c 26.668 31.383 27.172 30.805
 27.629 30.195 c 27.18 30.258 26.73 30.34 26.285 30.441 c h
28.586 30.184 m 28.57 30.176 l h
28.594 35.785 m 28.574 35.789 l h
18 24 m 19.656 24 21 21.984 21 19.5 c 21 17.016 19.656 15 18 15 c 16.344
 15 15 17.016 15 19.5 c 15 21.984 16.344 24 18 24 c 26.27 22.312 m 26.617
 22.504 27.027 22.551 27.41 22.441 c 27.793 22.332 28.117 22.078 28.312 
21.73 c 28.793 20.828 29.727 20.258 30.75 20.25 c 31.766 20.25 32.684 20.82
 33.188 21.73 c 33.59 22.453 34.504 22.715 35.23 22.312 c 35.953 21.91 36.215
 20.996 35.812 20.27 c 34.801 18.418 32.863 17.258 30.75 17.25 c 28.559 
17.25 26.684 18.484 25.688 20.27 c 25.496 20.617 25.449 21.027 25.559 21.41
 c 25.668 21.793 25.922 22.117 26.27 22.312 c 42 29.484 m 45.328 26.062 
53.652 32.051 42 39.75 c 30.348 32.051 38.672 26.062 42 29.488 c h
42 29.484 m f*
Q Q
showpage
%%Trailer
%%EOF
