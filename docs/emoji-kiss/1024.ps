%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
599.664 641.664 m 540.223 691.406 465.41 719.07 387.906 719.965 c 310.398
 720.859 234.969 694.93 174.395 646.57 c 113.82 598.211 71.832 530.395 55.539
 454.617 c 39.242 378.84 49.652 299.758 84.996 230.773 c 120.336 161.793
 178.445 107.148 249.465 76.109 c 320.488 45.066 400.059 39.535 474.695 
60.449 c 549.328 81.363 614.438 127.441 658.988 190.867 c 703.535 254.297
 724.785 331.176 719.137 408.48 c 735.648 410.066 751.777 415.535 765.938
 424.223 c 775.328 335.148 753.285 245.594 703.625 171.055 c 653.965 96.516
 579.812 41.68 493.992 16.035 c 408.176 -9.609 316.09 -4.445 233.676 30.629
 c 151.262 65.703 83.703 128.484 42.684 208.109 c 1.668 287.734 -10.227 
379.191 9.062 466.656 c 28.352 554.121 77.609 632.094 148.309 687.082 c 
219.012 742.066 306.711 770.609 396.234 767.77 c 485.758 764.926 571.473
 730.879 638.543 671.52 c 625.031 662.312 612.047 652.344 599.664 641.664
 c 420.574 487.105 m 402.648 491.406 384.918 496.496 367.441 502.367 c 361.32
 504.621 354.547 504.289 348.68 501.445 c 342.812 498.602 338.352 493.492
 336.332 487.293 c 334.309 481.094 334.895 474.336 337.957 468.578 c 341.016
 462.82 346.289 458.559 352.559 456.77 c 370.797 450.77 391.055 444.578 
409.773 440.305 c 427.535 436.176 447.215 432.961 462.719 435.121 c 470.398
 436.176 481.629 439.199 489.648 448.848 c 498.672 459.695 498.625 472.703
 495.938 482.688 c 492.699 492.98 487.66 502.617 481.055 511.152 c 477.375
 516.273 472.977 521.762 467.855 527.617 c 472.977 533.57 477.391 539.121
 481.102 544.273 c 487.918 553.73 493.391 563.328 495.98 572.832 c 498.621
 582.816 498.668 595.824 489.645 606.719 c 481.582 616.32 470.254 619.293
 462.621 620.352 c 447.117 622.414 427.438 619.055 409.727 614.926 c 409.727
 614.93 l 390.453 610.199 371.379 604.672 352.559 598.367 c 346.289 596.578
 341.016 592.312 337.957 586.559 c 334.895 580.801 334.309 574.043 336.332
 567.844 c 338.352 561.645 342.812 556.535 348.68 553.691 c 354.547 550.848
 361.32 550.516 367.441 552.77 c 385.25 558.531 403.969 564.289 420.672 
568.176 c 429.121 570.16 436.258 571.504 442.078 572.207 c 434.656 562.359
 426.609 552.996 417.984 544.176 c 413.672 539.688 411.27 533.699 411.289
 527.477 c 411.305 521.254 413.742 515.277 418.078 510.816 c 426.711 502.152
 434.73 492.898 442.078 483.121 c 434.855 484.105 427.68 485.418 420.574
 487.055 c h
457.344 482.93 m 457.055 482.836 l h
457.441 572.547 m 457.152 572.594 l h
288 384 m 314.496 384 336 351.742 336 312 c 336 272.258 314.496 240 288
 240 c 261.504 240 240 272.258 240 312 c 240 351.742 261.504 384 288 384
 c 420.336 356.977 m 425.898 360.07 432.465 360.828 438.586 359.082 c 444.707
 357.332 449.883 353.227 452.977 347.664 c 456.75 340.574 462.367 334.633
 469.234 330.469 c 476.102 326.305 483.969 324.07 492 324 c 508.273 324 
522.961 333.121 531.023 347.664 c 535.191 355.156 543.039 359.859 551.613
 359.996 c 560.188 360.137 568.184 355.691 572.59 348.332 c 576.996 340.977
 577.145 331.828 572.977 324.336 c 565.043 309.766 553.344 297.594 539.098
 289.094 c 524.855 280.59 508.59 276.07 492 276 c 456.961 276 426.91 295.777
 411.023 324.336 c 407.93 329.898 407.172 336.465 408.918 342.586 c 410.668
 348.707 414.773 353.883 420.336 356.977 c 672 471.742 m 725.281 417.023
 858.434 512.832 672 636 c 485.566 512.832 618.719 417.023 672 471.793 c
 h
672 471.742 m f*
Q Q
showpage
%%Trailer
%%EOF
