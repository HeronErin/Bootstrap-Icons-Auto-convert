%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.684 5.012 m 3.727 5.812 2.34 5.832 1.363 5.051 c 0.387 4.273 0.094 2.914
 0.664 1.805 c 1.234 0.691 2.508 0.137 3.707 0.473 c 4.91 0.809 5.711 1.945
 5.617 3.191 c 5.746 3.203 5.871 3.246 5.984 3.312 c 6.137 1.879 5.242 0.539
 3.859 0.125 c 2.477 -0.289 0.996 0.344 0.332 1.625 c -0.328 2.91 0.02 4.48
 1.16 5.367 c 2.297 6.254 3.906 6.203 4.988 5.246 c 4.883 5.176 4.781 5.098
 4.684 5.012 c 3.285 3.805 m 3.145 3.84 3.008 3.879 2.871 3.926 c 2.77 3.961
 2.66 3.906 2.629 3.809 c 2.594 3.707 2.652 3.598 2.754 3.57 c 2.895 3.523
 3.055 3.477 3.199 3.441 c 3.34 3.41 3.492 3.383 3.613 3.402 c 3.672 3.41
 3.762 3.434 3.824 3.508 c 3.895 3.594 3.895 3.695 3.875 3.773 c 3.875 3.77
 l 3.848 3.852 3.809 3.926 3.758 3.992 c 3.73 4.031 3.695 4.074 3.656 4.121
 c 3.695 4.168 3.73 4.211 3.758 4.25 c 3.812 4.324 3.855 4.398 3.875 4.473
 c 3.895 4.551 3.895 4.652 3.824 4.738 c 3.762 4.812 3.672 4.836 3.613 4.844
 c 3.492 4.859 3.34 4.832 3.199 4.801 c 3.199 4.805 l 3.051 4.766 2.902 
4.723 2.754 4.676 c 2.652 4.645 2.594 4.539 2.629 4.438 c 2.66 4.336 2.77
 4.281 2.871 4.32 c 3.012 4.367 3.156 4.41 3.285 4.441 c 3.352 4.457 3.406
 4.469 3.453 4.473 c 3.453 4.469 l 3.395 4.395 3.332 4.32 3.266 4.25 c 3.195
 4.18 3.195 4.062 3.266 3.992 c 3.332 3.922 3.395 3.852 3.453 3.773 c 3.398
 3.781 3.34 3.793 3.285 3.805 c h
3.574 3.773 m h
3.574 4.473 m 3.57 4.473 l h
2.25 3 m 2.457 3 2.625 2.746 2.625 2.438 c 2.625 2.129 2.457 1.875 2.25
 1.875 c 2.043 1.875 1.875 2.129 1.875 2.438 c 1.875 2.746 2.043 3 2.25 
3 c 3.285 2.789 m 3.375 2.84 3.488 2.805 3.539 2.715 c 3.598 2.602 3.715
 2.531 3.844 2.531 c 3.973 2.531 4.086 2.602 4.148 2.715 c 4.27 2.934 4.598
 2.754 4.477 2.535 c 4.352 2.301 4.109 2.156 3.844 2.156 c 3.57 2.156 3.336
 2.312 3.211 2.535 c 3.16 2.625 3.195 2.738 3.285 2.789 c 5.25 3.684 m 5.668
 3.258 6.707 4.004 5.25 4.969 c 3.793 4.008 4.832 3.258 5.25 3.688 c h
5.25 3.684 m f*
Q Q
showpage
%%Trailer
%%EOF
