%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
74.957 80.207 m 64.973 88.562 51.68 91.816 38.965 89.016 c 26.25 86.211
 15.555 77.672 10.008 65.895 c 4.461 54.117 4.688 40.434 10.625 28.848 c
 16.562 17.262 27.535 9.082 40.336 6.703 c 53.137 4.328 66.312 8.02 76.016
 16.703 c 85.715 25.387 90.84 38.074 89.891 51.059 c 91.953 51.258 93.969
 51.941 95.742 53.027 c 97.32 38.062 91.789 23.227 80.801 12.945 c 69.816
 2.664 54.645 -1.867 39.816 0.699 c 24.992 3.266 12.227 12.637 5.336 26.012
 c -1.555 39.391 -1.773 55.223 4.742 68.785 c 11.262 82.348 23.758 92.07
 38.508 95.047 c 53.258 98.023 68.551 93.91 79.816 83.941 c 78.129 82.789
 76.508 81.543 74.957 80.207 c 52.57 60.887 m 50.332 61.426 48.113 62.062
 45.93 62.797 c 45.164 63.078 44.32 63.035 43.586 62.68 c 42.852 62.324 
42.293 61.688 42.043 60.91 c 41.789 60.137 41.863 59.293 42.246 58.574 c
 42.629 57.852 43.285 57.32 44.07 57.098 c 46.352 56.348 48.883 55.574 51.223
 55.039 c 53.441 54.523 55.902 54.121 57.84 54.391 c 58.801 54.523 60.203
 54.902 61.207 56.105 c 62.336 57.461 62.328 59.086 61.992 60.336 c 61.586
 61.621 60.957 62.828 60.133 63.895 c 59.672 64.535 59.121 65.219 58.484
 65.953 c 59.125 66.695 59.676 67.391 60.141 68.035 c 60.992 69.219 61.676
 70.418 62 71.605 c 62.328 72.852 62.336 74.48 61.207 75.84 c 60.199 77.039
 58.781 77.41 57.828 77.543 c 55.891 77.801 53.43 77.383 51.215 76.863 c
 51.215 76.867 l 48.805 76.273 46.422 75.586 44.07 74.797 c 43.285 74.574
 42.629 74.039 42.246 73.32 c 41.863 72.602 41.789 71.754 42.043 70.98 c
 42.293 70.207 42.852 69.566 43.586 69.211 c 44.32 68.855 45.164 68.812 
45.93 69.098 c 48.156 69.816 50.496 70.539 52.582 71.023 c 53.637 71.27 
54.531 71.438 55.258 71.527 c 55.262 71.527 l 54.332 70.293 53.324 69.125
 52.246 68.023 c 51.129 66.855 51.133 65.012 52.262 63.852 c 53.34 62.77
 54.34 61.613 55.262 60.391 c 54.355 60.512 53.461 60.676 52.57 60.883 c
 h
57.168 60.363 m 57.129 60.348 l h
57.18 71.566 m 57.145 71.574 l h
36 48 m 39.312 48 42 43.969 42 39 c 42 34.031 39.312 30 36 30 c 32.688 
30 30 34.031 30 39 c 30 43.969 32.688 48 36 48 c 52.543 44.621 m 53.238 
45.008 54.059 45.102 54.824 44.887 c 55.59 44.668 56.234 44.152 56.621 43.457
 c 57.582 41.652 59.453 40.516 61.5 40.5 c 63.535 40.5 65.371 41.641 66.379
 43.457 c 67.184 44.906 69.012 45.426 70.457 44.621 c 71.906 43.816 72.426
 41.988 71.621 40.543 c 69.602 36.832 65.723 34.516 61.5 34.5 c 57.121 34.5
 53.363 36.973 51.379 40.543 c 50.992 41.238 50.898 42.059 51.113 42.824
 c 51.332 43.59 51.848 44.234 52.543 44.621 c 84 58.969 m 90.66 52.129 107.305
 64.105 84 79.5 c 60.695 64.105 77.34 52.129 84 58.973 c h
84 58.969 m f*
Q Q
showpage
%%Trailer
%%EOF
