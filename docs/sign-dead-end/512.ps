%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
114.793 144 m 114.793 192 l 131.352 192 l 145.582 192 152.617 183.383 152.617
 167.953 c 152.617 152.52 145.68 144 131.352 144 c h
122.785 150.719 m 130.465 150.719 l 139.945 150.719 144.434 156.48 144.434
 168.047 c 144.434 179.566 139.969 185.277 130.488 185.277 c 122.785 185.277
 l h
187.68 185.281 m 165.648 185.281 l 165.648 170.832 l 186.359 170.832 l 
186.359 164.398 l 165.648 164.398 l 165.648 150.719 l 187.656 150.719 l 
187.656 144 l 157.703 144 l 157.703 192 l 187.68 192 l h
201.434 178.707 m 197.184 192 l 189.023 192 l 205.535 144 l 214.438 144
 l 230.973 192 l 222.523 192 l 218.277 178.703 l h
216.48 172.586 m 210.047 152.305 l 209.688 152.305 l 203.207 172.586 l 
h
233.902 144 m 233.902 192 l 250.461 192 l 264.691 192 271.727 183.383 271.727
 167.953 c 271.727 152.52 264.77 144 250.465 144 c h
241.895 150.719 m 249.574 150.719 l 259.031 150.719 263.543 156.48 263.543
 168.047 c 263.543 179.566 259.078 185.277 249.574 185.277 c 241.895 185.277
 l h
141.742 257.277 m 163.75 257.277 l 163.754 264 l 133.801 264 l 133.801 
216 l 163.754 216 l 163.754 222.719 l 141.746 222.719 l 141.746 236.398 
l 162.457 236.398 l 162.457 242.832 l 141.746 242.832 l h
177.477 263.996 m 177.48 229.441 l 177.793 229.441 l 200.258 264 l 207.266
 264 l 207.266 216 l 199.586 216 l 199.586 250.465 l 199.25 250.465 l 176.855
 216 l 169.824 216 l 169.824 264 l h
214.918 263.996 m 214.922 216 l 231.48 216 l 245.785 216 252.746 224.52
 252.746 239.953 c 252.742 255.383 245.711 264 231.48 264 c h
230.59 222.715 m 222.91 222.715 l 222.91 257.273 l 230.59 257.273 l 240.07
 257.273 244.535 251.539 244.535 240.043 c 244.535 228.5 240.047 222.715
 230.59 222.715 c f
217.199 10.441 m 203.277 -3.48 180.719 -3.48 166.801 10.441 c 10.465 166.801
 l -3.457 180.723 -3.457 203.258 10.465 217.152 c 166.848 373.535 l 180.77
 387.457 203.305 387.457 217.199 373.535 c 373.582 217.152 l 387.504 203.23
 387.504 180.695 373.582 166.801 c h
183.598 27.242 m 183.602 27.238 l 188.238 22.602 195.762 22.602 200.398
 27.238 c 356.781 183.598 l 356.785 183.602 l 361.422 188.238 361.422 195.762
 356.785 200.398 c 200.398 356.785 l 195.762 361.422 188.238 361.422 183.602
 356.785 c 27.215 200.398 l 22.578 195.762 22.578 188.238 27.215 183.602
 c 183.602 27.215 l h
183.598 27.242 m f
Q Q
showpage
%%Trailer
%%EOF
