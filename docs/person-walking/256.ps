%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 44 0 163 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 44 0 163 192
192 192 cairo_set_page_size
%%EndPageSetup
q 44 0 119 192 rectclip
1 0 0 -1 0 192 cm q
0 g
114 18 m 114 24.43 110.57 30.375 105 33.59 c 99.43 36.805 92.57 36.805 
87 33.59 c 81.43 30.375 78 24.43 78 18 c 78 11.57 81.43 5.625 87 2.41 c 
92.57 -0.805 99.43 -0.805 105 2.41 c 110.57 5.625 114 11.57 114 18 c 77.281
 45.023 m 78.984 43.102 81.43 42.004 84 42 c 101.34 42 l 110.242 42 117.18
 49.715 116.254 58.559 c 111.094 107.555 l 111.098 107.555 l 110.922 109.172
 110.57 110.762 110.039 112.297 c 106.223 123.168 l 108.777 126.07 l 108.781
 126.07 l 109.324 126.711 109.785 127.414 110.148 128.172 c 134.148 179.172
 l 135.238 181.34 135.402 183.859 134.609 186.152 c 133.816 188.445 132.133
 190.324 129.934 191.355 c 127.738 192.387 125.219 192.488 122.945 191.637
 c 120.672 190.785 118.84 189.051 117.863 186.828 c 94.391 136.98 l 74.23
 113.93 l 72.68 112.164 71.879 109.867 72 107.52 c 73.656 76.164 l 68.438
 82.031 l 62.871 115.465 l 62.867 115.465 l 62.055 120.367 57.418 123.684
 52.512 122.867 c 47.609 122.055 44.293 117.418 45.109 112.512 c 51.109 
76.512 l 51.391 74.84 52.137 73.277 53.27 72.012 c 77.27 45.012 l h
77.281 45.023 m f
75 140.941 m 75 123.926 l 89.449 140.426 l 92.582 146.715 l 92.578 146.711
 l 92.254 147.707 91.77 148.645 91.141 149.484 c 61.141 188.484 l 58.109
 192.426 52.461 193.168 48.516 190.141 c 44.574 187.109 43.832 181.461 46.859
 177.516 c h
125.641 90.363 m 119.711 84.434 l 122.172 62.316 l 122.242 61.512 l 135.73
 75 l 153.012 75 l 157.984 75 162.012 79.031 162.012 84 c 162.012 88.969
 157.984 93 153.012 93 c 132 93 l 129.609 93 127.316 92.051 125.629 90.359
 c h
125.641 90.363 m f
Q Q
showpage
%%Trailer
%%EOF
