%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 359 0 1297 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 359 0 1297 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 359 0 938 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
912 144 m 912 195.445 884.555 242.984 840 268.707 c 795.445 294.43 740.555
 294.43 696 268.707 c 651.445 242.984 624 195.445 624 144 c 624 92.555 651.445
 45.016 696 19.293 c 740.555 -6.43 795.445 -6.43 840 19.293 c 884.555 45.016
 912 92.555 912 144 c 618.238 360.191 m 631.887 344.824 651.449 336.023 
672 336 c 810.719 336 l 881.949 336 937.438 397.727 930.047 468.48 c 888.766
 860.449 l 888.77 860.449 l 887.387 873.367 884.551 886.086 880.32 898.367
 c 849.793 985.344 l 870.242 1008.574 l 870.238 1008.574 l 874.605 1013.672
 878.285 1019.32 881.184 1025.375 c 1073.184 1433.375 l 1081.898 1450.73
 1083.234 1470.867 1076.887 1489.219 c 1070.539 1507.57 1057.047 1522.582
 1039.477 1530.844 c 1021.902 1539.105 1001.734 1539.918 983.555 1533.102
 c 965.371 1526.281 950.715 1512.406 942.91 1494.625 c 755.133 1095.84 l
 593.852 911.426 l 593.855 911.426 l 581.445 897.32 575.035 878.922 576 
860.16 c 589.246 609.312 l 547.484 656.258 l 502.941 923.715 l 502.945 923.711
 l 498.727 949.094 481.289 970.293 457.199 979.332 c 433.109 988.367 406.027
 983.867 386.156 967.523 c 366.289 951.18 356.645 925.477 360.863 900.098
 c 408.863 612.098 l 411.113 598.707 417.105 586.227 426.145 576.098 c 618.145
 360.098 l h
618.238 360.191 m f
600 1127.52 m 600 991.391 l 715.586 1123.391 l 740.641 1173.695 l 738.035
 1181.668 734.145 1189.16 729.121 1195.871 c 489.121 1507.871 l 473.445 
1528.277 448.074 1538.773 422.566 1535.402 c 397.055 1532.031 375.281 1515.309
 365.445 1491.531 c 355.609 1467.754 359.207 1440.535 374.879 1420.129 c
 h
1005.121 722.879 m 957.695 675.453 l 977.375 498.523 l 977.949 492.09 l
 1085.852 599.992 l 1224.09 599.992 l 1224.098 600 l 1249.82 600 1273.59
 613.723 1286.449 636 c 1299.312 658.277 1299.312 685.723 1286.449 708 c
 1273.59 730.277 1249.82 744 1224.098 744 c 1056 744 l 1036.879 744.008 
1018.539 736.41 1005.023 722.879 c h
1005.121 722.879 m f
Q Q
showpage
%%Trailer
%%EOF
