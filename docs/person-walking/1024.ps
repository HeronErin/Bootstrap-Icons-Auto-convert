%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 179 0 649 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 179 0 649 768
768 768 cairo_set_page_size
%%EndPageSetup
q 179 0 470 768 rectclip
1 0 0 -1 0 768 cm q
0 g
456 72 m 456 97.723 442.277 121.492 420 134.355 c 397.723 147.215 370.277
 147.215 348 134.355 c 325.723 121.492 312 97.723 312 72 c 312 46.277 325.723
 22.508 348 9.645 c 370.277 -3.215 397.723 -3.215 420 9.645 c 442.277 22.508
 456 46.277 456 72 c 309.121 180.098 m 315.941 172.414 325.723 168.012 336
 168 c 405.359 168 l 440.977 168 468.719 198.863 465.023 234.238 c 444.383
 430.223 l 443.691 436.684 442.277 443.043 440.16 449.184 c 424.895 492.672
 l 435.117 504.289 l 435.121 504.289 l 437.305 506.836 439.145 509.66 440.594
 512.688 c 536.594 716.688 l 540.949 725.363 541.617 735.434 538.441 744.609
 c 535.27 753.785 528.523 761.289 519.738 765.422 c 510.949 769.555 500.867
 769.961 491.777 766.551 c 482.688 763.141 475.359 756.203 471.457 747.312
 c 377.57 547.922 l 296.93 455.715 l 296.93 455.711 l 290.723 448.66 287.52
 439.461 288 430.078 c 294.625 304.652 l 273.746 328.125 l 251.473 461.852
 l 251.473 461.855 l 249.363 474.547 240.645 485.148 228.598 489.664 c 216.555
 494.184 203.016 491.934 193.078 483.762 c 183.145 475.59 178.324 462.738
 180.434 450.047 c 204.434 306.047 l 205.559 299.352 208.551 293.113 213.07
 288.047 c 309.07 180.047 l h
309.121 180.098 m f
300 563.762 m 300 495.699 l 357.793 561.699 l 370.32 586.852 l 370.32 586.848
 l 369.02 590.832 367.074 594.578 364.559 597.938 c 244.559 753.938 l 236.723
 764.141 224.039 769.387 211.281 767.703 c 198.527 766.016 187.641 757.656
 182.723 745.766 c 177.805 733.875 179.602 720.266 187.441 710.062 c h
502.559 361.441 m 478.848 337.73 l 488.688 249.266 l 488.977 246.051 l 
542.93 300.004 l 612.051 300.004 l 612.047 300 l 624.91 300 636.793 306.863
 643.227 318 c 649.656 329.137 649.656 342.863 643.227 354 c 636.793 365.137
 624.91 372 612.047 372 c 528 372 l 518.438 372.004 509.27 368.203 502.512
 361.441 c h
502.559 361.441 m f
Q Q
showpage
%%Trailer
%%EOF
