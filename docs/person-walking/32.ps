%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 5 0 21 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 5 0 21 24
24 24 cairo_set_page_size
%%EndPageSetup
q 5 0 16 24 rectclip
1 0 0 -1 0 24 cm q
0 g
14.25 2.25 m 14.25 3.492 13.242 4.5 12 4.5 c 10.758 4.5 9.75 3.492 9.75
 2.25 c 9.75 1.008 10.758 0 12 0 c 13.242 0 14.25 1.008 14.25 2.25 c 9.66
 5.629 m 9.875 5.387 10.18 5.25 10.5 5.25 c 12.668 5.25 l 13.781 5.25 14.648
 6.215 14.531 7.32 c 13.887 13.445 l 13.867 13.645 13.82 13.844 13.754 14.035
 c 13.277 15.395 l 13.598 15.758 l 13.664 15.84 13.723 15.926 13.77 16.023
 c 16.77 22.398 l 16.906 22.668 16.926 22.98 16.828 23.27 c 16.727 23.555
 16.516 23.789 16.242 23.918 c 15.969 24.047 15.652 24.062 15.367 23.953
 c 15.082 23.848 14.855 23.633 14.734 23.352 c 11.801 17.121 l 9.281 14.238
 l 9.277 14.242 l 9.086 14.02 8.984 13.734 9 13.441 c 9.207 9.523 l 8.555
 10.258 l 7.859 14.438 l 7.859 14.434 l 7.758 15.047 7.176 15.461 6.562 
15.359 c 5.949 15.258 5.535 14.676 5.637 14.062 c 6.387 9.562 l 6.422 9.355
 6.516 9.16 6.66 9 c 9.66 5.625 l h
9.66 5.629 m f
9.375 17.617 m 9.375 15.488 l 11.18 17.551 l 11.57 18.336 l 11.574 18.34
 l 11.531 18.465 11.473 18.582 11.391 18.684 c 7.641 23.559 l 7.266 24.055
 6.559 24.145 6.066 23.766 c 5.57 23.391 5.48 22.684 5.859 22.191 c h
15.703 11.293 m 14.961 10.551 l 15.27 7.785 l 15.277 7.684 l 16.965 9.371
 l 19.125 9.371 l 19.125 9.375 l 19.746 9.375 20.25 9.879 20.25 10.5 c 20.25
 11.121 19.746 11.625 19.125 11.625 c 16.5 11.625 l 16.203 11.625 15.914
 11.508 15.703 11.297 c h
15.703 11.293 m f
Q Q
showpage
%%Trailer
%%EOF
