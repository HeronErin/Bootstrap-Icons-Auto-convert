%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 89 0 325 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 89 0 325 384
384 384 cairo_set_page_size
%%EndPageSetup
q 89 0 236 384 rectclip
1 0 0 -1 0 384 cm q
0 g
228 36 m 228 48.863 221.137 60.746 210 67.176 c 198.863 73.609 185.137 
73.609 174 67.176 c 162.863 60.746 156 48.863 156 36 c 156 23.137 162.863
 11.254 174 4.824 c 185.137 -1.609 198.863 -1.609 210 4.824 c 221.137 11.254
 228 23.137 228 36 c 154.559 90.047 m 157.973 86.207 162.863 84.004 168 
84 c 202.68 84 l 220.488 84 234.359 99.434 232.512 117.121 c 222.191 215.113
 l 221.848 218.34 221.137 221.52 220.078 224.594 c 212.445 246.336 l 217.559
 252.145 l 218.652 253.418 219.57 254.832 220.297 256.344 c 268.297 358.344
 l 270.473 362.684 270.809 367.719 269.223 372.305 c 267.637 376.895 264.262
 380.645 259.867 382.711 c 255.477 384.777 250.434 384.98 245.887 383.273
 c 241.344 381.57 237.68 378.102 235.727 373.656 c 188.781 273.961 l 148.461
 227.855 l 148.465 227.855 l 145.359 224.328 143.758 219.73 144 215.039 
c 147.312 152.328 l 136.871 164.062 l 125.734 230.926 l 125.734 230.93 l
 124.68 237.273 120.32 242.574 114.301 244.832 c 108.277 247.09 101.508 
245.965 96.539 241.879 c 91.57 237.793 89.16 231.367 90.215 225.023 c 102.215
 153.023 l 102.777 149.676 104.277 146.559 106.535 144.023 c 154.535 90.023
 l h
154.559 90.047 m f
150 281.879 m 150 247.848 l 178.895 280.848 l 185.16 293.422 l 185.16 293.426
 l 184.508 295.418 183.535 297.289 182.281 298.969 c 122.281 376.969 l 118.363
 382.07 112.02 384.695 105.641 383.852 c 99.266 383.008 93.82 378.828 91.363
 372.883 c 88.902 366.938 89.801 360.133 93.719 355.031 c h
251.281 180.719 m 239.426 168.863 l 244.348 124.633 l 244.492 123.023 l
 271.469 150 l 306.027 150 l 306.023 150 l 312.453 150 318.398 153.43 321.613
 159 c 324.828 164.57 324.828 171.43 321.613 177 c 318.398 182.57 312.453
 186 306.023 186 c 264 186 l 259.219 186.004 254.633 184.102 251.258 180.719
 c h
251.281 180.719 m f
Q Q
showpage
%%Trailer
%%EOF
