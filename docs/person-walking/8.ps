%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 1 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 1 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 1 0 5 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.562 0.562 m 3.562 0.875 3.312 1.125 3 1.125 c 2.688 1.125 2.438 0.875
 2.438 0.562 c 2.438 0.25 2.688 0 3 0 c 3.312 0 3.562 0.25 3.562 0.562 c
 2.414 1.406 m 2.469 1.348 2.543 1.312 2.625 1.312 c 3.168 1.312 l 3.445
 1.312 3.664 1.555 3.633 1.828 c 3.473 3.359 l 3.465 3.41 3.457 3.461 3.438
 3.508 c 3.316 3.848 l 3.395 3.938 l 3.398 3.941 l 3.418 3.961 3.43 3.98
 3.441 4.004 c 4.191 5.598 l 4.227 5.668 4.23 5.746 4.207 5.816 c 4.184 
5.891 4.129 5.949 4.059 5.98 c 3.992 6.012 3.914 6.016 3.844 5.988 c 3.77
 5.961 3.715 5.906 3.684 5.84 c 2.949 4.281 l 2.32 3.562 l 2.32 3.559 l 
2.27 3.504 2.246 3.434 2.25 3.359 c 2.301 2.379 l 2.137 2.562 l 1.961 3.605
 l 1.965 3.609 l 1.938 3.762 1.793 3.863 1.641 3.84 c 1.488 3.812 1.383 
3.668 1.41 3.516 c 1.598 2.391 l 1.605 2.34 1.629 2.289 1.664 2.25 c h
2.414 1.406 m f
2.344 4.406 m 2.344 3.875 l 2.797 4.391 l 2.895 4.586 l 2.883 4.617 2.867
 4.645 2.848 4.672 c 1.91 5.891 l 1.816 6.012 1.641 6.035 1.516 5.941 c 
1.395 5.848 1.371 5.672 1.465 5.547 c h
3.926 2.824 m 3.742 2.641 l 3.82 1.949 l 3.824 1.926 l 4.246 2.348 l 4.785
 2.348 l 4.781 2.344 l 4.938 2.344 5.062 2.469 5.062 2.625 c 5.062 2.781
 4.938 2.906 4.781 2.906 c 4.125 2.906 l 4.051 2.906 3.98 2.875 3.926 2.824
 c h
3.926 2.824 m f
Q Q
showpage
%%Trailer
%%EOF
