%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 45 rectclip
1 0 0 -1 0 48 cm q
0 g
34.5 6 m 34.898 6 35.281 6.156 35.562 6.438 c 35.844 6.719 36 7.102 36 
7.5 c 36 28.5 l 36 29.328 35.328 30 34.5 30 c 33.672 30 33 29.328 33 28.5
 c 33 7.5 l 33 6.672 33.672 6 34.5 6 c 40.5 6 m 40.898 6 41.281 6.156 41.562
 6.438 c 41.844 6.719 42 7.102 42 7.5 c 42 28.5 l 42 29.328 41.328 30 40.5
 30 c 39.672 30 39 29.328 39 28.5 c 39 7.5 l 39 6.672 39.672 6 40.5 6 c 
10.5 30 m 9.672 30 9 30.672 9 31.5 c 9 32.328 9.672 33 10.5 33 c 28.5 33
 l 29.328 33 30 32.328 30 31.5 c 30 30.672 29.328 30 28.5 30 c h
10.5 36 m 9.672 36 9 36.672 9 37.5 c 9 38.328 9.672 39 10.5 39 c 28.5 39
 l 29.328 39 30 38.328 30 37.5 c 30 36.672 29.328 36 28.5 36 c h
15 9 m 13.344 9 12 10.344 12 12 c 10.5 12 l 9.672 12 9 12.672 9 13.5 c 
9 14.328 9.672 15 10.5 15 c 12 15 l 12 18 l 10.5 18 l 9.672 18 9 18.672 
9 19.5 c 9 20.328 9.672 21 10.5 21 c 12 21 l 12 21.797 12.316 22.559 12.879
 23.121 c 13.441 23.684 14.203 24 15 24 c 15 25.5 l 15 26.328 15.672 27 
16.5 27 c 17.328 27 18 26.328 18 25.5 c 18 24 l 21 24 l 21 25.5 l 21 26.328
 21.672 27 22.5 27 c 23.328 27 24 26.328 24 25.5 c 24 24 l 24.797 24 25.559
 23.684 26.121 23.121 c 26.684 22.559 27 21.797 27 21 c 28.5 21 l 29.328
 21 30 20.328 30 19.5 c 30 18.672 29.328 18 28.5 18 c 27 18 l 27 15 l 28.5
 15 l 29.328 15 30 14.328 30 13.5 c 30 12.672 29.328 12 28.5 12 c 27 12 
l 27 11.203 26.684 10.441 26.121 9.879 c 25.559 9.316 24.797 9 24 9 c 24
 7.5 l 24 6.672 23.328 6 22.5 6 c 21.672 6 21 6.672 21 7.5 c 21 9 l 18 9
 l 18 7.5 l 18 6.672 17.328 6 16.5 6 c 15.672 6 15 6.672 15 7.5 c h
15 12 m 24 12 l 24 21 l 15 21 l h
34.5 33 m 33.672 33 33 33.672 33 34.5 c 33 37.5 l 33 37.898 33.156 38.281
 33.438 38.562 c 33.719 38.844 34.102 39 34.5 39 c 40.5 39 l 40.898 39 41.281
 38.844 41.562 38.562 c 41.844 38.281 42 37.898 42 37.5 c 42 34.5 l 42 34.102
 41.844 33.719 41.562 33.438 c 41.281 33.156 40.898 33 40.5 33 c h
34.5 33 m f
3 6 m 3 2.688 5.688 0 9 0 c 42 0 l 43.59 0 45.117 0.633 46.242 1.758 c 
47.367 2.883 48 4.41 48 6 c 48 39 l 48 40.59 47.367 42.117 46.242 43.242
 c 45.117 44.367 43.59 45 42 45 c 9 45 l 5.688 45 3 42.312 3 39 c 3 33 l
 1.5 33 l 0.672 33 0 32.328 0 31.5 c 0 28.5 l 0 27.672 0.672 27 1.5 27 c
 3 27 l 3 24 l 1.5 24 l 0.672 24 0 23.328 0 22.5 c 0 19.5 l 0 18.672 0.672
 18 1.5 18 c 3 18 l 3 15 l 1.5 15 l 0.672 15 0 14.328 0 13.5 c 0 7.5 l 0
 6.672 0.672 6 1.5 6 c h
6 39 m 6 39.797 6.316 40.559 6.879 41.121 c 7.441 41.684 8.203 42 9 42 
c 42 42 l 42.797 42 43.559 41.684 44.121 41.121 c 44.684 40.559 45 39.797
 45 39 c 45 6 l 45 5.203 44.684 4.441 44.121 3.879 c 43.559 3.316 42.797
 3 42 3 c 9 3 l 7.344 3 6 4.344 6 6 c h
6 39 m f
Q Q
showpage
%%Trailer
%%EOF
