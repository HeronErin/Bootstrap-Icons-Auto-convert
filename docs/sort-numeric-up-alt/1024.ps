%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 71 96 649 694
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 71 96 649 694
768 768 cairo_set_page_size
%%EndPageSetup
q 71 96 578 598 rectclip
1 0 0 -1 0 768 cm q
0 g
545.281 340.703 m 490.707 340.703 463.297 309.168 460.707 279.359 c 508.898
 279.359 l 511.684 290.062 525.363 300.961 546.004 300.961 c 585.555 300.961
 601.875 261.168 600.387 211.871 c 597.555 211.871 l 590.449 230.59 570.195
 247.488 537.027 247.488 c 493.348 247.488 454.469 218.062 454.469 163.105
 c 454.469 108 495.172 74.977 549.172 74.977 c 601.492 74.977 648.195 105.551
 648.195 204 c 648.195 293.617 613.492 340.703 545.234 340.703 c h
548.258 209.422 m 572.449 209.422 593.043 193.293 593.043 162.766 c 593.043
 132.383 573.938 114.383 547.922 114.383 c 522.961 114.383 503.426 132.383
 503.426 162.383 c 503.426 193.102 523.488 209.422 548.258 209.422 c f*
597.023 416.062 m 597.023 672 l 546.719 672 l 546.719 464.832 l 544.27 
464.832 l 486.141 506.062 l 486.141 459.551 l 546.715 416.062 l h
216 648 m 216 656.574 211.426 664.496 204 668.785 c 196.574 673.07 187.426
 673.07 180 668.785 c 172.574 664.496 168 656.574 168 648 c 168 177.938 
l 112.992 232.992 l 106.922 239.062 98.074 241.434 89.781 239.211 c 81.488
 236.988 75.012 230.512 72.789 222.219 c 70.566 213.926 72.938 205.078 79.008
 199.008 c 175.008 103.055 l 175.344 102.719 l 179.867 98.359 185.922 95.949
 192.203 96.004 c 198.484 96.059 204.496 98.57 208.945 103.008 c 304.945
 199.008 l 311.016 205.07 313.391 213.91 311.176 222.199 c 308.961 230.488
 302.492 236.965 294.207 239.191 c 285.922 241.418 277.078 239.055 271.008
 232.992 c 216 177.938 l h
216 648 m f
Q Q
showpage
%%Trailer
%%EOF
