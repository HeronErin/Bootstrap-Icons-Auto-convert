%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1248 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 96 m 1005.078 96 956.242 116.227 920.234 152.234 c 884.227 188.242
 864 237.078 864 288 c 864 672 l 897.703 672 930.812 680.871 960 697.723
 c 989.188 714.574 1013.426 738.812 1030.277 768 c 1047.129 797.188 1056
 830.297 1056 864 c 1056 1344 l 1056 1377.703 1047.129 1410.812 1030.277
 1440 c 1013.426 1469.188 989.188 1493.426 960 1510.277 c 930.812 1527.129
 897.703 1536 864 1536 c 288 1536 l 237.078 1536 188.242 1515.773 152.234
 1479.766 c 116.227 1443.758 96 1394.922 96 1344 c 96 864 l 96 813.078 116.227
 764.242 152.234 728.234 c 188.242 692.227 237.078 672 288 672 c 768 672
 l 768 288 l 768 211.617 798.344 138.363 852.352 84.352 c 906.363 30.344
 979.617 0 1056 0 c 1132.383 0 1205.637 30.344 1259.648 84.352 c 1313.656
 138.363 1344 211.617 1344 288 c 1344 672 l 1344 689.148 1334.852 704.996
 1320 713.57 c 1305.148 722.145 1286.852 722.145 1272 713.57 c 1257.148 
704.996 1248 689.148 1248 672 c 1248 288 l 1248 254.297 1239.129 221.188
 1222.277 192 c 1205.426 162.812 1181.188 138.574 1152 121.723 c 1122.812
 104.871 1089.703 96 1056 96 c 288 768 m 262.539 768 238.121 778.113 220.117
 796.117 c 202.113 814.121 192 838.539 192 864 c 192 1344 l 192 1369.461
 202.113 1393.879 220.117 1411.883 c 238.121 1429.887 262.539 1440 288 1440
 c 864 1440 l 889.461 1440 913.879 1429.887 931.883 1411.883 c 949.887 1393.879
 960 1369.461 960 1344 c 960 864 l 960 838.539 949.887 814.121 931.883 796.117
 c 913.879 778.113 889.461 768 864 768 c h
288 768 m f
Q Q
showpage
%%Trailer
%%EOF
