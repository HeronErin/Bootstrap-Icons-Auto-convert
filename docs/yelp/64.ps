%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 39 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 39 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 39 48 rectclip
1 0 0 -1 0 48 cm q
0 g
12.562 30.285 m 14.77 29.773 l 14.988 29.715 l 14.992 29.715 l 15.762 29.508
 16.383 28.938 16.652 28.188 c 16.926 27.438 16.812 26.602 16.352 25.949
 c 16.105 25.633 15.797 25.371 15.449 25.176 c 15.039 24.945 14.609 24.746
 14.164 24.582 c 11.738 23.695 l 11.742 23.695 l 10.383 23.191 9.02 22.699
 7.648 22.219 c 6.758 21.898 6 21.625 5.348 21.422 c 5.227 21.383 5.086 
21.348 4.977 21.309 c 4.977 21.305 l 4.391 21.102 3.777 20.984 3.16 20.957
 c 2.504 20.93 1.875 21.199 1.441 21.691 c 1.332 21.82 1.227 21.953 1.129
 22.09 c 0.941 22.379 0.785 22.691 0.664 23.016 c 0.215 24.344 -0.012 25.738
 0.004 27.145 c 0.012 28.414 0.043 30.043 0.742 31.148 c 0.742 31.145 l 
0.91 31.43 1.133 31.672 1.402 31.867 c 1.898 32.211 2.402 32.254 2.922 32.289
 c 3.703 32.348 4.461 32.152 5.215 31.98 c 12.555 30.281 l h
37.219 18.551 m 37.223 18.551 l 36.617 17.285 35.805 16.129 34.82 15.133
 c 34.57 14.895 34.293 14.68 33.996 14.504 c 33.848 14.422 33.699 14.352
 33.547 14.281 c 32.941 14.031 32.258 14.066 31.684 14.375 c 31.258 14.586
 30.801 14.922 30.195 15.484 c 30.109 15.57 30.008 15.664 29.914 15.75 c
 29.414 16.219 28.855 16.801 28.191 17.477 c 27.172 18.508 26.16 19.551 
25.16 20.602 c 23.367 22.461 l 23.367 22.465 l 23.039 22.805 22.742 23.172
 22.473 23.559 c 22.246 23.887 22.086 24.258 22.004 24.652 c 21.953 24.949
 21.957 25.258 22.023 25.555 c 22.023 25.57 22.027 25.582 22.031 25.594 
c 22.324 26.875 23.578 27.691 24.867 27.441 c 25.09 27.398 l 34.645 25.191
 l 35.398 25.016 36.164 24.855 36.84 24.465 c 37.293 24.199 37.727 23.941
 38.023 23.414 c 38.18 23.125 38.273 22.805 38.301 22.477 c 38.449 21.176
 37.766 19.695 37.223 18.551 c 20.117 22.57 m 20.809 21.699 20.809 20.406
 20.867 19.344 c 21.078 15.801 21.297 12.258 21.469 8.715 c 21.535 7.371
 21.68 6.043 21.602 4.695 c 21.535 3.578 21.527 2.297 20.82 1.383 c 19.586
 -0.23 16.934 -0.098 15.121 0.148 c 14.566 0.223 14.012 0.328 13.461 0.461
 c 12.914 0.594 12.371 0.742 11.832 0.91 c 10.094 1.48 7.652 2.52 7.242 
4.523 c 7.008 5.656 7.559 6.812 7.988 7.844 c 8.508 9.094 9.219 10.219 9.863
 11.398 c 11.574 14.508 13.312 17.598 15.047 20.688 c 15.562 21.613 16.125
 22.777 17.133 23.258 c 17.199 23.289 17.266 23.312 17.336 23.332 c 17.785
 23.504 18.273 23.535 18.742 23.43 c 18.828 23.41 l 19.262 23.293 19.652
 23.059 19.961 22.73 c h
19.289 32.055 m 19.289 32.051 l 18.66 31.176 17.492 30.879 16.52 31.352
 c 16.367 31.426 16.223 31.52 16.086 31.621 c 15.699 31.93 15.348 32.285
 15.047 32.684 c 14.969 32.781 14.898 32.914 14.809 32.996 c 13.273 35.109
 l 12.402 36.293 11.543 37.484 10.691 38.688 c 10.137 39.469 9.652 40.125
 9.277 40.707 c 9.062 41.035 l 8.605 41.738 8.348 42.254 8.215 42.711 c 
8.211 42.715 l 8.109 43.016 8.078 43.34 8.121 43.656 c 8.16 43.984 8.27 
44.309 8.445 44.594 c 8.539 44.734 8.637 44.871 8.746 45.008 c 8.977 45.27
 9.234 45.508 9.516 45.719 c 11.473 47.039 13.746 47.828 16.105 47.996 c
 16.453 48.008 16.805 47.98 17.152 47.914 c 17.316 47.875 17.48 47.828 17.641
 47.773 c 17.953 47.652 18.234 47.473 18.473 47.238 c 18.703 47.016 18.879
 46.742 18.984 46.441 c 19.16 46 19.277 45.438 19.352 44.602 c 19.387 44.211
 l 19.445 43.52 19.477 42.703 19.523 41.746 c 19.598 40.277 19.656 38.809
 19.703 37.34 c 19.801 34.73 l 19.805 34.73 l 19.84 34.102 19.785 33.473
 19.637 32.863 c 19.562 32.574 19.441 32.305 19.285 32.051 c h
36.637 36.141 m 36.641 36.137 l 36.199 35.691 35.695 35.309 35.145 35.004
 c 34.809 34.805 l 34.211 34.445 33.496 34.066 32.652 33.609 c 31.363 32.902
 30.07 32.207 28.766 31.523 c 26.465 30.301 l 26.344 30.266 26.227 30.18
 26.109 30.125 c 26.113 30.125 l 25.668 29.902 25.199 29.734 24.715 29.629
 c 24.547 29.594 24.375 29.578 24.203 29.574 c 23.125 29.582 22.211 30.359
 22.027 31.422 c 21.996 31.715 22.008 32.012 22.059 32.301 c 22.172 32.914
 22.449 33.52 22.73 34.051 c 23.961 36.355 l 24.645 37.656 25.34 38.949 
26.051 40.238 c 26.508 41.078 26.891 41.797 27.246 42.395 c 27.316 42.508
 27.387 42.621 27.449 42.73 c 27.883 43.449 28.23 43.902 28.586 44.223 c
 28.586 44.219 l 29.059 44.68 29.715 44.902 30.371 44.824 c 30.543 44.801
 30.711 44.773 30.875 44.734 c 31.215 44.645 31.543 44.512 31.852 44.348
 c 32.789 43.828 33.652 43.18 34.414 42.43 c 35.332 41.531 36.145 40.539
 36.777 39.41 c 36.867 39.25 36.941 39.086 37.004 38.914 c 37.008 38.914
 l 37.066 38.758 37.117 38.598 37.16 38.434 c 37.199 38.27 37.227 38.098
 37.246 37.93 c 37.277 37.598 37.238 37.262 37.133 36.949 c 37.031 36.645
 36.863 36.367 36.641 36.137 c f
Q Q
showpage
%%Trailer
%%EOF
