%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 5 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 5 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 5 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.57 3.785 m 1.848 3.723 l 1.875 3.715 l 1.969 3.688 2.047 3.617 2.082 
3.523 c 2.117 3.43 2.102 3.324 2.043 3.242 c 2.012 3.203 1.977 3.172 1.93
 3.148 c 1.879 3.117 1.824 3.094 1.77 3.074 c 1.465 2.965 l 1.469 2.961 
l 1.297 2.898 1.129 2.836 0.957 2.777 c 0.844 2.738 0.75 2.703 0.668 2.676
 c 0.652 2.672 0.637 2.668 0.621 2.66 c 0.621 2.664 l 0.551 2.637 0.473 
2.621 0.395 2.621 c 0.312 2.617 0.234 2.648 0.18 2.711 c 0.168 2.727 0.152
 2.742 0.141 2.762 c 0.117 2.797 0.098 2.836 0.082 2.879 c 0.027 3.047 -0.004
 3.219 0 3.395 c 0 3.555 0.004 3.758 0.094 3.895 c 0.113 3.93 0.141 3.961
 0.176 3.984 c 0.238 4.027 0.301 4.031 0.367 4.039 c 0.465 4.047 0.559 4.023
 0.652 4 c 1.57 3.789 l h
4.652 2.32 m 4.578 2.16 4.477 2.016 4.352 1.891 c 4.32 1.863 4.285 1.836
 4.25 1.812 c 4.23 1.805 4.211 1.793 4.191 1.785 c 4.117 1.754 4.031 1.758
 3.961 1.797 c 3.906 1.824 3.852 1.863 3.773 1.938 c 3.762 1.949 3.75 1.961
 3.738 1.973 c 3.676 2.031 3.605 2.105 3.523 2.188 c 3.395 2.316 3.27 2.445
 3.145 2.578 c 2.922 2.812 l 2.922 2.809 l 2.879 2.852 2.844 2.895 2.809
 2.945 c 2.781 2.984 2.762 3.031 2.75 3.082 c 2.742 3.117 2.746 3.156 2.754
 3.195 c 2.754 3.195 2.754 3.199 2.754 3.199 c 2.789 3.359 2.945 3.461 3.109
 3.43 c 3.137 3.426 l 4.332 3.148 l 4.426 3.125 4.523 3.105 4.605 3.059 
c 4.66 3.027 4.715 2.992 4.754 2.926 c 4.773 2.891 4.785 2.852 4.789 2.809
 c 4.809 2.645 4.723 2.461 4.652 2.316 c 2.516 2.82 m 2.602 2.711 2.602 
2.551 2.609 2.418 c 2.637 1.977 2.664 1.531 2.684 1.09 c 2.691 0.922 2.711
 0.758 2.699 0.586 c 2.691 0.445 2.691 0.285 2.602 0.172 c 2.449 -0.027 
2.117 -0.012 1.891 0.02 c 1.82 0.027 1.754 0.043 1.684 0.059 c 1.613 0.074
 1.547 0.094 1.48 0.113 c 1.262 0.184 0.957 0.316 0.906 0.566 c 0.879 0.707
 0.945 0.852 1 0.98 c 1.066 1.137 1.152 1.277 1.234 1.426 c 1.449 1.812 
1.664 2.199 1.883 2.586 c 1.949 2.703 2.02 2.848 2.145 2.906 c 2.152 2.91
 2.16 2.914 2.172 2.914 c 2.227 2.934 2.289 2.941 2.348 2.926 c 2.359 2.922
 l 2.352 2.926 l 2.406 2.91 2.457 2.883 2.496 2.84 c h
2.414 4.004 m 2.41 4.008 l 2.332 3.898 2.188 3.859 2.066 3.918 c 2.047 
3.93 2.027 3.941 2.012 3.953 c 1.961 3.992 1.918 4.035 1.883 4.086 c 1.875
 4.098 1.863 4.113 1.852 4.125 c 1.66 4.391 l 1.551 4.539 1.445 4.688 1.336
 4.84 c 1.266 4.938 1.207 5.02 1.16 5.094 c 1.133 5.137 l 1.074 5.227 1.043
 5.289 1.027 5.348 c 1.027 5.34 l 1.016 5.379 1.012 5.418 1.016 5.457 c 
1.02 5.5 1.035 5.539 1.055 5.574 c 1.066 5.59 1.078 5.609 1.094 5.625 c 
1.121 5.66 1.152 5.688 1.191 5.715 c 1.434 5.879 1.719 5.977 2.012 6 c 2.059
 6 2.102 5.996 2.145 5.988 c 2.164 5.984 2.184 5.977 2.203 5.973 c 2.242
 5.957 2.281 5.934 2.309 5.906 c 2.336 5.875 2.359 5.844 2.371 5.805 c 2.395
 5.75 2.406 5.68 2.418 5.574 c 2.422 5.527 l 2.43 5.441 2.434 5.34 2.438
 5.219 c 2.445 5.035 2.453 4.852 2.461 4.668 c 2.473 4.34 l 2.477 4.34 l
 2.48 4.262 2.473 4.184 2.453 4.109 c 2.445 4.07 2.43 4.039 2.41 4.008 c
 h
4.582 4.516 m 4.578 4.516 l 4.523 4.461 4.461 4.414 4.395 4.375 c 4.352
 4.352 l 4.277 4.305 4.188 4.258 4.082 4.203 c 3.922 4.113 3.758 4.027 3.598
 3.941 c 3.309 3.789 l 3.293 3.785 3.277 3.773 3.266 3.766 c 3.207 3.738
 3.148 3.719 3.09 3.703 c 3.066 3.699 3.047 3.695 3.027 3.695 c 2.891 3.699
 2.777 3.797 2.754 3.93 c 2.75 3.965 2.75 4 2.758 4.039 c 2.773 4.117 2.805
 4.191 2.844 4.258 c 2.996 4.547 l 3.082 4.711 3.168 4.871 3.258 5.031 c
 3.316 5.137 3.363 5.227 3.406 5.301 c 3.414 5.316 3.422 5.328 3.434 5.344
 c 3.488 5.434 3.531 5.488 3.574 5.531 c 3.574 5.527 l 3.633 5.586 3.715
 5.613 3.797 5.602 c 3.816 5.602 3.84 5.598 3.859 5.594 c 3.902 5.582 3.941
 5.562 3.98 5.543 c 4.098 5.477 4.207 5.398 4.301 5.305 c 4.414 5.191 4.516
 5.07 4.598 4.926 c 4.609 4.906 4.617 4.887 4.625 4.863 c 4.633 4.844 4.641
 4.824 4.645 4.805 c 4.648 4.785 4.652 4.762 4.656 4.742 c 4.66 4.699 4.656
 4.656 4.641 4.617 c 4.629 4.582 4.609 4.547 4.578 4.516 c f
Q Q
showpage
%%Trailer
%%EOF
