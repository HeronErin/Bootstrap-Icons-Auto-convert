%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 10 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 10 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
3.141 7.57 m 3.691 7.441 l 3.746 7.426 l 3.746 7.43 l 3.941 7.379 4.094
 7.234 4.164 7.047 c 4.23 6.859 4.203 6.648 4.086 6.488 c 4.027 6.41 3.949
 6.344 3.863 6.293 c 3.758 6.234 3.652 6.188 3.543 6.145 c 2.938 5.922 l
 2.934 5.926 l 2.594 5.797 2.254 5.676 1.914 5.555 c 1.691 5.477 1.5 5.406
 1.336 5.355 c 1.305 5.348 1.27 5.336 1.242 5.328 c 1.246 5.328 l 1.098 
5.273 0.945 5.246 0.789 5.238 c 0.625 5.234 0.469 5.301 0.359 5.422 c 0.332
 5.457 0.309 5.488 0.281 5.523 c 0.234 5.594 0.195 5.672 0.164 5.754 c 0.051
 6.086 -0.004 6.434 0 6.785 c 0 7.102 0.008 7.508 0.184 7.785 c 0.227 7.855
 0.285 7.918 0.352 7.965 c 0.477 8.051 0.602 8.062 0.73 8.07 c 0.926 8.086
 1.113 8.035 1.305 7.992 c 3.141 7.566 l h
9.305 4.637 m 9.152 4.32 8.953 4.031 8.707 3.781 c 8.641 3.723 8.574 3.672
 8.5 3.625 c 8.461 3.605 8.426 3.586 8.387 3.57 c 8.234 3.508 8.066 3.516
 7.922 3.594 c 7.816 3.645 7.703 3.73 7.551 3.871 c 7.531 3.891 7.504 3.918
 7.48 3.938 c 7.355 4.055 7.215 4.199 7.051 4.367 c 6.797 4.625 6.543 4.887
 6.293 5.148 c 5.844 5.613 l 5.84 5.617 l 5.762 5.703 5.684 5.793 5.617 
5.891 c 5.562 5.973 5.52 6.066 5.5 6.164 c 5.488 6.238 5.488 6.312 5.504
 6.387 c 5.504 6.391 5.504 6.395 5.508 6.395 c 5.508 6.398 l 5.582 6.719
 5.895 6.922 6.215 6.859 c 6.27 6.848 l 8.66 6.297 l 8.848 6.254 9.039 6.211
 9.211 6.117 c 9.324 6.051 9.434 5.984 9.508 5.855 c 9.504 5.855 l 9.543
 5.781 9.57 5.703 9.574 5.617 c 9.613 5.293 9.441 4.922 9.305 4.637 c 5.031
 5.641 m 5.203 5.422 5.203 5.098 5.219 4.836 c 5.27 3.949 5.324 3.062 5.371
 2.18 c 5.387 1.844 5.422 1.512 5.402 1.176 c 5.387 0.898 5.383 0.578 5.207
 0.348 c 4.895 -0.059 4.234 -0.023 3.781 0.039 c 3.641 0.059 3.504 0.086
 3.367 0.117 c 3.227 0.148 3.094 0.184 2.957 0.227 c 2.523 0.367 1.914 0.629
 1.809 1.129 c 1.75 1.41 1.887 1.699 1.996 1.961 c 2.125 2.273 2.305 2.555
 2.465 2.852 c 2.891 3.629 3.328 4.402 3.762 5.176 c 3.891 5.406 4.031 5.699
 4.281 5.82 c 4.297 5.828 4.316 5.836 4.332 5.84 c 4.445 5.883 4.566 5.891
 4.684 5.863 c 4.703 5.859 l 4.707 5.852 l 4.816 5.824 4.914 5.766 4.988
 5.684 c h
4.824 8.012 m 4.664 7.793 4.371 7.719 4.129 7.836 c 4.094 7.855 4.055 7.879
 4.023 7.906 c 3.926 7.98 3.836 8.07 3.762 8.172 c 3.742 8.195 3.723 8.23
 3.703 8.25 c 3.32 8.777 l 3.102 9.074 2.887 9.371 2.676 9.672 c 2.535 9.867
 2.418 10.031 2.32 10.176 c 2.266 10.258 l 2.152 10.434 2.086 10.562 2.055
 10.676 c 2.055 10.68 l 2.027 10.754 2.02 10.836 2.031 10.914 c 2.039 10.996
 2.07 11.078 2.113 11.148 c 2.137 11.184 2.16 11.219 2.188 11.25 c 2.242
 11.316 2.309 11.379 2.379 11.43 c 2.867 11.762 3.438 11.957 4.027 12 c 
4.113 12.004 4.203 11.996 4.289 11.98 c 4.328 11.969 4.371 11.957 4.41 11.941
 c 4.488 11.914 4.559 11.867 4.617 11.809 c 4.676 11.754 4.719 11.684 4.746
 11.609 c 4.789 11.5 4.82 11.359 4.84 11.148 c 4.848 11.051 l 4.863 10.879
 4.871 10.676 4.883 10.434 c 4.902 10.066 4.918 9.699 4.93 9.332 c 4.953
 8.68 l 4.949 8.684 l 4.961 8.527 4.945 8.367 4.91 8.215 c 4.891 8.145 4.859
 8.074 4.82 8.012 c h
9.16 9.035 m 9.051 8.922 8.922 8.828 8.785 8.75 c 8.699 8.699 l 8.551 8.609
 8.371 8.516 8.16 8.402 c 7.84 8.227 7.516 8.051 7.188 7.883 c 6.613 7.578
 l 6.582 7.57 6.555 7.547 6.523 7.535 c 6.527 7.531 l 6.418 7.477 6.301 
7.434 6.18 7.406 c 6.137 7.398 6.094 7.395 6.051 7.395 c 5.781 7.395 5.551
 7.59 5.508 7.855 c 5.5 7.93 5.5 8.004 5.516 8.074 c 5.543 8.227 5.613 8.379
 5.684 8.512 c 5.992 9.086 l 6.164 9.41 6.336 9.734 6.516 10.055 c 6.629
 10.266 6.727 10.445 6.812 10.594 c 6.832 10.621 6.848 10.648 6.863 10.68
 c 6.973 10.859 7.059 10.973 7.148 11.051 c 7.145 11.055 l 7.266 11.172 
7.43 11.227 7.594 11.207 c 7.637 11.199 7.676 11.191 7.719 11.184 c 7.805
 11.16 7.887 11.129 7.961 11.086 c 8.195 10.957 8.414 10.797 8.605 10.605
 c 8.836 10.379 9.039 10.133 9.195 9.852 c 9.219 9.812 9.238 9.77 9.254 
9.727 c 9.254 9.73 l 9.266 9.688 9.277 9.648 9.289 9.609 c 9.297 9.566 9.305
 9.527 9.312 9.484 c 9.312 9.48 l 9.32 9.398 9.309 9.316 9.285 9.238 c 9.258
 9.16 9.215 9.09 9.16 9.035 c f
Q Q
showpage
%%Trailer
%%EOF
