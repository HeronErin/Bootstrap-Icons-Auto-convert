%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 77 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 77 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 77 96 rectclip
1 0 0 -1 0 96 cm q
0 g
25.129 60.57 m 29.543 59.551 l 29.98 59.43 l 31.523 59.016 32.766 57.875
 33.309 56.375 c 33.848 54.875 33.621 53.203 32.699 51.898 c 32.211 51.27
 31.598 50.742 30.898 50.352 c 30.078 49.891 29.219 49.492 28.332 49.164
 c 23.484 47.395 l 20.766 46.383 18.039 45.395 15.301 44.438 c 13.52 43.801
 12 43.246 10.699 42.84 c 10.453 42.762 10.176 42.691 9.957 42.613 c 9.953
 42.613 l 8.781 42.203 7.559 41.969 6.316 41.914 c 5.012 41.859 3.75 42.402
 2.887 43.387 c 2.664 43.641 2.453 43.906 2.258 44.18 c 1.879 44.762 1.566
 45.383 1.324 46.031 c 0.426 48.688 -0.027 51.48 0.004 54.289 c 0.016 56.828
 0.082 60.086 1.48 62.293 c 1.82 62.855 2.27 63.348 2.801 63.73 c 3.797 
64.414 4.797 64.504 5.844 64.578 c 7.402 64.691 8.922 64.309 10.43 63.961
 c 25.113 60.566 l h
74.441 37.105 m 73.234 34.574 71.613 32.262 69.641 30.266 c 69.141 29.785
 68.586 29.363 67.992 29.004 c 67.699 28.844 67.398 28.699 67.094 28.566
 c 65.887 28.062 64.516 28.129 63.367 28.754 c 62.516 29.176 61.602 29.848
 60.391 30.973 c 60.223 31.141 60.012 31.332 59.828 31.508 c 58.824 32.445
 57.711 33.609 56.383 34.957 c 54.344 37.02 52.324 39.105 50.324 41.211 
c 46.734 44.93 l 46.082 45.609 45.484 46.344 44.945 47.117 c 44.488 47.777
 44.168 48.52 44.004 49.301 c 43.902 49.902 43.918 50.516 44.047 51.109 
c 44.047 51.137 44.055 51.164 44.066 51.188 c 44.062 51.188 l 44.645 53.746
 47.156 55.387 49.734 54.883 c 50.18 54.797 l 69.289 50.383 l 70.797 50.035
 72.324 49.711 73.68 48.93 c 74.586 48.402 75.449 47.879 76.043 46.828 c
 76.355 46.25 76.547 45.609 76.602 44.953 c 76.902 42.348 75.535 39.391 
74.441 37.105 c 40.234 45.137 m 41.613 43.398 41.613 40.805 41.734 38.688
 c 42.156 31.602 42.594 24.516 42.941 17.43 c 43.074 14.742 43.363 12.09
 43.207 9.391 c 43.074 7.16 43.059 4.598 41.648 2.766 c 39.168 -0.461 33.863
 -0.199 30.238 0.301 c 29.125 0.453 28.02 0.66 26.922 0.926 c 25.824 1.184
 24.738 1.48 23.664 1.816 c 20.184 2.957 15.305 5.039 14.484 9.039 c 14.016
 11.301 15.121 13.617 15.977 15.68 c 17.016 18.184 18.438 20.434 19.727 
22.789 c 23.148 29.004 26.625 35.184 30.094 41.371 c 31.125 43.219 32.254
 45.555 34.266 46.512 c 34.398 46.57 34.535 46.621 34.672 46.66 c 35.57 
47.004 36.551 47.066 37.484 46.852 c 37.652 46.809 l 37.656 46.816 l 38.523
 46.586 39.305 46.117 39.918 45.461 c h
38.578 64.102 m 38.578 64.105 l 37.32 62.352 34.984 61.762 33.043 62.699
 c 32.738 62.855 32.445 63.035 32.172 63.238 c 31.395 63.859 30.699 64.574
 30.098 65.363 c 29.941 65.562 29.797 65.824 29.617 65.988 c 26.547 70.219
 l 24.809 72.582 23.086 74.969 21.383 77.375 c 20.273 78.934 19.309 80.25
 18.551 81.414 c 18.117 82.074 l 17.207 83.484 16.688 84.512 16.426 85.43
 c 16.422 85.43 l 16.219 86.035 16.156 86.68 16.242 87.312 c 16.32 87.973
 16.543 88.613 16.891 89.184 c 17.074 89.465 17.273 89.738 17.492 90.012
 c 17.488 90.012 l 17.949 90.539 18.469 91.02 19.031 91.434 c 22.949 94.082
 27.492 95.652 32.207 95.992 c 32.91 96.016 33.613 95.961 34.301 95.832 
c 34.633 95.75 34.957 95.652 35.281 95.543 c 35.902 95.309 36.473 94.945
 36.949 94.477 c 37.406 94.027 37.754 93.484 37.969 92.879 c 38.324 91.996
 38.559 90.867 38.707 89.199 c 38.777 88.418 l 38.898 87.031 38.957 85.406
 39.047 83.492 c 39.195 80.551 39.316 77.613 39.406 74.68 c 39.605 69.461
 l 39.684 68.207 39.57 66.945 39.277 65.723 c 39.125 65.152 38.887 64.605
 38.574 64.105 c h
73.277 72.273 m 73.277 72.277 l 72.395 71.383 71.391 70.617 70.289 70.008
 c 69.617 69.605 l 68.422 68.887 66.988 68.129 65.305 67.219 c 62.73 65.809
 60.141 64.418 57.535 63.047 c 52.934 60.605 l 52.695 60.535 52.453 60.367
 52.227 60.25 c 52.223 60.254 l 51.336 59.805 50.398 59.473 49.43 59.258
 c 49.09 59.191 48.75 59.156 48.406 59.148 c 46.254 59.16 44.418 60.719 
44.059 62.844 c 43.992 63.43 44.012 64.023 44.117 64.602 c 44.344 65.824
 44.898 67.039 45.461 68.098 c 47.922 72.707 l 49.285 75.309 50.68 77.895
 52.098 80.473 c 53.008 82.152 53.777 83.594 54.484 84.785 c 54.629 85.012
 54.766 85.238 54.891 85.457 c 55.762 86.891 56.457 87.797 57.164 88.438
 c 57.168 88.441 l 58.117 89.359 59.43 89.805 60.742 89.645 c 61.082 89.602
 61.418 89.543 61.754 89.473 c 62.43 89.285 63.082 89.027 63.703 88.699 
c 65.574 87.652 67.301 86.363 68.832 84.859 c 70.668 83.059 72.293 81.078
 73.559 78.824 c 73.738 78.504 73.891 78.176 74.016 77.836 c 74.016 77.832
 l 74.133 77.516 74.234 77.191 74.32 76.867 c 74.395 76.535 74.453 76.199
 74.496 75.859 c 74.559 75.195 74.48 74.527 74.27 73.895 c 74.066 73.289
 73.727 72.734 73.277 72.277 c f
Q Q
showpage
%%Trailer
%%EOF
