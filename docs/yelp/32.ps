%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 20 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 20 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 20 24 rectclip
1 0 0 -1 0 24 cm q
0 g
6.281 15.141 m 7.387 14.887 l 7.496 14.855 l 7.496 14.859 l 7.879 14.754
 8.191 14.469 8.328 14.094 c 8.461 13.719 8.406 13.301 8.176 12.977 c 8.051
 12.816 7.898 12.688 7.727 12.59 c 7.52 12.473 7.305 12.371 7.082 12.289
 c 5.871 11.848 l 5.191 11.594 4.508 11.348 3.824 11.109 c 3.379 10.949 
3 10.812 2.676 10.711 c 2.613 10.691 2.547 10.672 2.488 10.652 c 2.195 10.551
 1.891 10.492 1.578 10.48 c 1.254 10.465 0.938 10.602 0.723 10.848 c 0.668
 10.91 0.613 10.977 0.562 11.043 c 0.469 11.191 0.391 11.344 0.332 11.508
 c 0.105 12.172 -0.004 12.871 0.004 13.57 c 0.008 14.203 0.023 15.02 0.371
 15.57 c 0.371 15.574 l 0.453 15.715 0.566 15.836 0.699 15.934 c 0.949 16.105
 1.199 16.129 1.461 16.145 c 1.852 16.172 2.23 16.078 2.605 15.988 c 6.277
 15.141 l h
18.609 9.273 m 18.609 9.277 l 18.309 8.645 17.902 8.066 17.41 7.566 c 17.285
 7.445 17.145 7.34 16.996 7.25 c 16.926 7.211 16.848 7.176 16.773 7.141 
c 16.473 7.016 16.129 7.031 15.84 7.188 c 15.625 7.293 15.398 7.461 15.098
 7.742 c 15.055 7.785 15.004 7.832 14.957 7.875 c 14.707 8.109 14.426 8.398
 14.098 8.738 c 13.586 9.254 13.082 9.773 12.582 10.301 c 11.684 11.23 l
 11.52 11.402 11.371 11.586 11.238 11.781 c 11.121 11.945 11.043 12.129 
11 12.324 c 10.977 12.477 10.98 12.629 11.012 12.777 c 11.012 12.785 11.012
 12.789 11.016 12.797 c 11.16 13.438 11.789 13.848 12.434 13.719 c 12.543
 13.699 l 17.32 12.594 l 17.695 12.508 18.078 12.426 18.418 12.23 c 18.645
 12.098 18.859 11.969 19.008 11.707 c 19.012 11.707 l 19.09 11.562 19.137
 11.402 19.152 11.238 c 19.227 10.586 18.887 9.848 18.613 9.277 c 10.059
 11.285 m 10.402 10.852 10.402 10.203 10.434 9.672 c 10.539 7.898 10.648
 6.129 10.734 4.355 c 10.766 3.684 10.84 3.02 10.801 2.344 c 10.77 1.785
 10.762 1.145 10.41 0.688 c 9.793 -0.117 8.465 -0.051 7.559 0.074 c 7.281
 0.113 7.004 0.164 6.73 0.23 c 6.457 0.297 6.184 0.371 5.914 0.453 c 5.043
 0.738 3.824 1.258 3.617 2.258 c 3.5 2.824 3.777 3.402 3.992 3.918 c 4.25
 4.543 4.605 5.105 4.93 5.695 c 5.785 7.25 6.656 8.793 7.523 10.34 c 7.781
 10.801 8.062 11.387 8.566 11.625 c 8.598 11.641 8.633 11.652 8.668 11.664
 c 8.895 11.75 9.137 11.766 9.371 11.711 c 9.414 11.699 l 9.414 11.703 l
 9.629 11.648 9.828 11.527 9.98 11.367 c h
9.645 16.027 m 9.328 15.59 8.746 15.441 8.262 15.676 c 8.184 15.715 8.113
 15.758 8.043 15.809 c 7.848 15.965 7.676 16.145 7.523 16.34 c 7.484 16.391
 7.449 16.457 7.402 16.496 c 6.633 17.555 l 6.199 18.145 5.766 18.742 5.34
 19.344 c 5.062 19.734 4.82 20.062 4.633 20.352 c 4.523 20.516 l 4.297 20.867
 4.168 21.125 4.102 21.355 c 4.105 21.355 l 4.055 21.508 4.039 21.668 4.059
 21.828 c 4.078 21.992 4.133 22.152 4.219 22.297 c 4.266 22.367 4.316 22.438
 4.367 22.504 c 4.371 22.504 l 4.488 22.637 4.617 22.754 4.758 22.859 c 
5.738 23.52 6.875 23.914 8.051 24 c 8.227 24.004 8.402 23.992 8.574 23.957
 c 8.656 23.938 8.738 23.914 8.82 23.887 c 8.977 23.828 9.117 23.734 9.238
 23.617 c 9.352 23.508 9.438 23.371 9.492 23.219 c 9.582 23 9.641 22.715
 9.676 22.301 c 9.695 22.105 l 9.727 21.758 9.742 21.352 9.762 20.875 c 
9.797 20.141 9.828 19.406 9.852 18.672 c 9.902 17.367 l 9.922 17.051 9.895
 16.738 9.82 16.43 c 9.781 16.289 9.723 16.152 9.645 16.027 c h
18.32 18.07 m 18.098 17.844 17.848 17.656 17.574 17.504 c 17.406 17.402
 l 17.109 17.223 16.75 17.035 16.328 16.805 c 15.684 16.453 15.035 16.105
 14.387 15.762 c 13.234 15.152 l 13.176 15.133 13.113 15.094 13.059 15.062
 c 13.055 15.062 l 12.836 14.953 12.598 14.867 12.355 14.812 c 12.273 14.797
 12.188 14.789 12.102 14.785 c 11.562 14.789 11.105 15.18 11.016 15.711 
c 10.996 15.859 11.004 16.004 11.031 16.152 c 11.09 16.457 11.227 16.762
 11.367 17.027 c 11.98 18.18 l 12.32 18.828 12.668 19.477 13.023 20.121 
c 13.25 20.543 13.445 20.902 13.621 21.199 c 13.656 21.258 13.691 21.312
 13.723 21.367 c 13.941 21.727 14.113 21.953 14.293 22.113 c 14.293 22.109
 l 14.527 22.34 14.859 22.449 15.188 22.41 c 15.27 22.402 15.355 22.387 
15.438 22.367 c 15.605 22.32 15.77 22.258 15.926 22.176 c 16.395 21.914 
16.824 21.59 17.207 21.215 c 17.668 20.766 18.074 20.27 18.391 19.707 c 
18.438 19.629 18.473 19.543 18.504 19.461 c 18.504 19.457 l 18.531 19.379
 18.559 19.297 18.582 19.215 c 18.602 19.133 18.617 19.047 18.625 18.961
 c 18.625 18.965 l 18.641 18.797 18.621 18.633 18.566 18.473 c 18.516 18.32
 18.434 18.184 18.32 18.07 c f
Q Q
showpage
%%Trailer
%%EOF
