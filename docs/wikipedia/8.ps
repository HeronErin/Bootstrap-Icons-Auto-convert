%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
3.312 1.125 m 3.621 1.121 4.32 1.125 4.32 1.125 c 4.332 1.137 l 4.332 1.246
 l 4.332 1.277 4.316 1.293 4.281 1.293 c 4.117 1.301 4.086 1.316 4.027 1.402
 c 3.996 1.449 3.93 1.551 3.863 1.664 c 3.293 2.73 l 3.277 2.766 l 3.973
 4.191 l 4.016 4.203 l 5.113 1.598 l 5.152 1.492 5.145 1.418 5.098 1.375
 c 5.047 1.332 5.012 1.309 4.887 1.301 c 4.785 1.297 l 4.785 1.289 l 4.773
 1.289 4.758 1.285 4.75 1.277 c 4.738 1.27 4.73 1.258 4.73 1.246 c 4.73 
1.137 l 4.746 1.125 l 5.984 1.125 l 5.996 1.137 l 5.996 1.246 l 5.996 1.273
 5.98 1.289 5.945 1.289 c 5.781 1.297 5.664 1.332 5.586 1.395 c 5.59 1.395
 l 5.508 1.465 5.441 1.555 5.406 1.66 c 5.406 1.66 4.398 3.969 4.051 4.738
 c 3.918 4.992 3.789 4.969 3.676 4.73 c 3.453 4.258 3.23 3.781 3.016 3.305
 c 2.781 3.785 2.461 4.438 2.305 4.734 c 2.152 5.004 2.023 4.969 1.922 4.742
 c 1.754 4.344 1.496 3.797 1.242 3.25 c 0.965 2.66 0.688 2.07 0.512 1.648
 c 0.449 1.5 0.402 1.402 0.355 1.363 c 0.309 1.324 0.219 1.305 0.074 1.297
 c 0.027 1.285 0 1.273 0 1.254 c 0 1.141 l 0.012 1.129 l 0.242 1.129 1.359
 1.129 1.359 1.129 c 1.371 1.141 l 1.371 1.25 l 1.371 1.281 1.352 1.293 
1.316 1.293 c 1.176 1.301 l 1.055 1.305 0.996 1.34 0.996 1.41 c 0.996 1.441
 1.008 1.492 1.035 1.559 c 1.305 2.215 2.238 4.184 2.238 4.184 c 2.273 4.191
 l 2.875 2.992 l 2.754 2.727 l 2.34 1.91 l 2.34 1.91 2.262 1.746 2.234 1.695
 c 2.199 1.621 l 2.055 1.332 2.047 1.312 1.875 1.293 c 1.824 1.285 1.797
 1.281 1.797 1.254 c 1.797 1.141 l 1.812 1.129 l 2.883 1.129 l 2.91 1.137
 l 2.91 1.25 l 2.91 1.277 2.891 1.289 2.855 1.289 c 2.777 1.301 l 2.582 
1.316 2.613 1.395 2.742 1.656 c 3.137 2.469 l 3.574 1.594 l 3.648 1.434 
3.633 1.395 3.602 1.355 c 3.586 1.336 3.527 1.301 3.398 1.297 c 3.348 1.293
 l 3.352 1.289 l 3.336 1.289 3.324 1.285 3.312 1.277 c 3.305 1.27 3.297 
1.258 3.297 1.246 c 3.297 1.137 l h
3.312 1.125 m f
Q Q
showpage
%%Trailer
%%EOF
