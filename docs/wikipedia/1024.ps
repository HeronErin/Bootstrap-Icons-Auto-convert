%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 138 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 138 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 138 768 486 rectclip
1 0 0 -1 0 768 cm q
0 g
424.078 144.145 m 463.82 143.855 553.102 144.145 553.102 144.145 c 554.688
 145.586 l 554.688 159.41 l 554.688 163.25 552.559 165.172 548.305 165.172
 c 527.52 166.133 523.25 168.195 515.664 179.094 c 511.488 185.141 503.281
 197.957 494.785 212.406 c 421.824 348.871 l 419.762 353.145 l 508.945 535.594
 l 514.371 537.082 l 654.82 203.676 l 659.684 190.234 658.98 180.715 652.707
 175.117 c 646.371 169.645 641.953 166.477 625.684 165.758 c 612.484 165.086
 l 612.48 165.07 l 610.801 165.031 609.184 164.441 607.871 163.391 c 606.5
 162.512 605.668 160.992 605.664 159.359 c 605.664 145.488 l 607.68 144.047
 l 766.367 144.047 l 768 145.488 l 768 159.41 l 768 163.152 765.871 165.027
 761.617 165.027 c 740.816 165.988 725.426 170.484 715.441 178.516 c 715.441
 178.512 l 704.777 187.504 696.691 199.164 692.016 212.305 c 692.016 212.305
 562.848 507.984 518.641 606.289 c 501.695 638.547 485.039 635.57 470.449
 605.379 c 470.449 605.375 l 441.77 544.809 413.656 483.973 386.113 422.879
 c 356.211 484.559 315.312 568.125 295.008 605.758 c 275.281 640.078 259.008
 635.613 246.047 606.668 c 224.445 555.547 191.758 485.758 158.832 415.531
 c 123.551 340.219 88.031 264.379 65.566 210.477 c 57.551 191.277 51.504
 178.941 45.789 174.043 c 40.027 169.242 28.094 166.363 9.98 165.402 c 3.328
 164.609 0 162.93 0 160.367 c 0 145.824 l 1.633 144.383 l 31.152 144.238
 174.145 144.383 174.145 144.383 c 175.777 145.824 l 175.777 159.648 l 175.777
 163.457 173.379 165.344 168.578 165.312 c 150.578 166.082 l 135.121 166.723
 127.395 171.328 127.395 179.906 c 127.332 183.906 129.074 190.305 132.625
 199.105 c 167.184 283.25 286.562 535.008 286.562 535.008 c 290.93 536.113
 l 367.875 382.656 l 352.516 348.578 l 299.52 244.559 l 299.52 244.559 289.297
 223.773 285.793 216.863 c 281.09 207.457 l 262.516 170.496 261.363 168.098
 239.57 165.219 c 232.996 164.402 229.586 163.539 229.586 160.324 c 229.586
 145.73 l 231.555 144.289 l 368.5 144.289 l 372.102 145.441 l 372.102 159.984
 l 372.102 163.312 369.703 164.977 364.902 164.977 c 355.016 166.418 l 329.91
 168.34 333.992 178.609 350.695 211.824 c 401.43 315.648 l 457.59 203.711
 l 466.949 183.215 465.031 178.078 461.141 173.328 c 458.934 170.688 451.445
 166.418 435.219 165.742 c 428.836 165.023 l 428.832 165.023 l 427.16 164.996
 425.543 164.422 424.223 163.391 c 422.855 162.492 422.039 160.953 422.062
 159.312 c 422.062 145.488 l 424.031 144.047 l h
424.078 144.145 m f
Q Q
showpage
%%Trailer
%%EOF
