%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 34 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 34 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 34 192 122 rectclip
1 0 0 -1 0 192 cm q
0 g
106.02 36.035 m 115.957 35.965 138.277 36.035 138.277 36.035 c 138.672 
36.395 l 138.672 39.852 l 138.672 40.812 138.141 41.293 137.074 41.293 c
 131.879 41.531 130.809 42.051 128.914 44.773 c 127.871 46.285 125.816 49.488
 123.695 53.102 c 105.457 87.219 l 104.941 88.285 l 127.238 133.898 l 128.594
 134.27 l 163.707 50.918 l 164.922 47.559 164.746 45.18 163.18 43.777 c 
161.594 42.41 160.492 41.617 156.422 41.438 c 153.121 41.27 l 152.699 41.258
 152.297 41.109 151.969 40.848 c 151.625 40.629 151.418 40.246 151.414 39.84
 c 151.414 36.371 l 151.918 36.012 l 191.59 36.012 l 191.996 36.371 l 191.996
 39.852 l 191.996 40.789 191.465 41.254 190.398 41.254 c 185.199 41.492 
181.352 42.617 178.855 44.625 c 178.859 44.629 l 176.195 46.875 174.172 
49.789 173.004 53.074 c 173.004 53.074 140.711 126.996 129.66 151.57 c 125.426
 159.633 121.262 158.891 117.613 151.344 c 110.441 136.203 103.414 120.992
 96.527 105.719 c 89.051 121.141 78.828 142.031 73.75 151.438 c 68.816 160.016
 64.75 158.902 61.512 151.664 c 56.113 138.883 47.941 121.438 39.707 103.879
 c 30.887 85.051 22.008 66.09 16.391 52.613 c 14.387 47.812 12.875 44.73
 11.445 43.504 c 10.004 42.305 7.02 41.582 2.492 41.344 c 0.832 41.152 0
 40.73 0 40.094 c 0 36.457 l 0.406 36.098 l 7.785 36.062 43.535 36.098 43.535
 36.098 c 43.941 36.457 l 43.941 39.914 l 43.941 40.867 43.34 41.34 42.141
 41.328 c 37.641 41.52 l 33.777 41.68 31.844 42.832 31.844 44.977 c 31.828
 45.977 32.266 47.578 33.152 49.777 c 41.793 70.812 71.637 133.754 71.637
 133.754 c 72.73 134.031 l 91.965 95.668 l 88.125 87.148 l 74.879 61.141
 l 74.879 61.141 72.324 55.945 71.445 54.215 c 70.27 51.863 l 65.625 42.625
 65.336 42.023 59.891 41.305 c 58.246 41.102 57.395 40.883 57.395 40.082
 c 57.395 36.434 l 57.887 36.074 l 92.121 36.074 l 93.02 36.363 l 93.02 
40 l 93.02 40.832 92.418 41.246 91.219 41.246 c 88.746 41.605 l 82.469 42.086
 83.488 44.652 87.668 52.957 c 100.352 78.914 l 114.391 50.93 l 116.73 45.805
 116.25 44.523 115.277 43.332 c 114.727 42.672 112.852 41.605 108.797 41.438
 c 107.199 41.258 l 107.207 41.258 l 106.789 41.25 106.387 41.105 106.055
 40.848 c 105.715 40.621 105.512 40.238 105.516 39.828 c 105.516 36.371 
l 106.008 36.012 l h
106.02 36.035 m f
Q Q
showpage
%%Trailer
%%EOF
