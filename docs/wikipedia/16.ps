%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 2 12 10
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 2 12 10
12 12 cairo_set_page_size
%%EndPageSetup
q 0 2 12 8 rectclip
1 0 0 -1 0 12 cm q
0 g
6.625 2.254 m 7.246 2.25 8.641 2.254 8.641 2.254 c 8.664 2.277 l 8.664 
2.492 l 8.664 2.551 8.629 2.582 8.562 2.582 c 8.238 2.598 8.172 2.629 8.051
 2.801 c 7.984 2.895 7.855 3.094 7.723 3.32 c 6.582 5.453 l 6.551 5.52 l
 7.945 8.371 l 8.031 8.395 l 10.227 3.184 l 10.301 2.973 10.293 2.824 10.195
 2.738 c 10.098 2.652 10.027 2.602 9.773 2.594 c 9.566 2.582 l 9.57 2.578
 l 9.543 2.578 9.52 2.57 9.496 2.555 c 9.477 2.539 9.465 2.516 9.465 2.488
 c 9.465 2.273 l 9.496 2.25 l 11.977 2.25 l 12.004 2.273 l 12.004 2.492 
l 12.004 2.551 11.969 2.578 11.902 2.578 c 11.578 2.594 11.336 2.664 11.18
 2.789 c 11.012 2.93 10.887 3.113 10.812 3.316 c 10.812 3.316 8.793 7.938
 8.102 9.473 c 7.836 9.977 7.578 9.93 7.348 9.457 c 7.352 9.461 l 6.902 
8.512 6.465 7.562 6.031 6.609 c 5.562 7.574 4.926 8.879 4.609 9.469 c 4.301
 10.004 4.047 9.934 3.844 9.484 c 3.508 8.688 2.996 7.594 2.48 6.496 c 1.93
 5.32 1.375 4.133 1.023 3.293 c 0.898 2.992 0.805 2.801 0.715 2.723 c 0.625
 2.648 0.438 2.602 0.156 2.586 c 0.051 2.57 0 2.547 0 2.504 c 0 2.277 l 
0.027 2.254 l 0.488 2.25 2.723 2.254 2.723 2.254 c 2.75 2.277 l 2.75 2.492
 l 2.75 2.551 2.711 2.582 2.637 2.582 c 2.355 2.594 l 2.113 2.605 1.992 
2.676 1.992 2.809 c 1.992 2.871 2.02 2.973 2.074 3.109 c 2.613 4.426 4.48
 8.359 4.48 8.359 c 4.547 8.375 l 5.75 5.977 l 5.512 5.445 l 4.68 3.82 l
 4.68 3.82 4.52 3.496 4.465 3.387 c 4.391 3.238 l 4.102 2.66 4.082 2.625
 3.742 2.578 c 3.641 2.566 3.586 2.551 3.586 2.5 c 3.586 2.273 l 3.617 2.25
 l 5.758 2.25 l 5.812 2.27 l 5.812 2.496 l 5.812 2.547 5.773 2.574 5.699
 2.574 c 5.543 2.598 l 5.152 2.629 5.215 2.789 5.477 3.309 c 6.27 4.93 l
 7.148 3.18 l 7.293 2.859 7.266 2.777 7.203 2.703 c 7.168 2.66 7.051 2.594
 6.797 2.586 c 6.695 2.574 l 6.699 2.578 l 6.676 2.578 6.648 2.57 6.629 
2.555 c 6.605 2.539 6.594 2.516 6.594 2.488 c 6.594 2.273 l 6.625 2.25 l
 h
6.625 2.254 m f
Q Q
showpage
%%Trailer
%%EOF
