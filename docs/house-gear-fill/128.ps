%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 2 0 96 89
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 2 0 96 89
96 96 cairo_set_page_size
%%EndPageSetup
q 2 0 94 89 rectclip
1 0 0 -1 0 96 cm q
0 g
43.758 9 m 46.102 6.656 49.898 6.656 52.242 9 c 66 22.758 l 66 15 l 66 
13.344 67.344 12 69 12 c 75 12 l 75.797 12 76.559 12.316 77.121 12.879 c
 77.684 13.441 78 14.203 78 15 c 78 34.758 l 92.125 48.875 l 93.297 50.051
 93.297 51.949 92.125 53.125 c 90.949 54.297 89.051 54.297 87.875 53.125
 c 48 13.242 l 8.125 53.125 l 6.949 54.297 5.051 54.297 3.875 53.125 c 2.703
 51.949 2.703 50.051 3.875 48.875 c h
43.758 9 m f
66.422 54.281 m 62.965 52.488 58.746 53.117 55.969 55.844 c 55.848 55.969
 l 53.121 58.746 52.488 62.965 54.281 66.422 c 50.543 67.605 48 71.078 48
 75 c 48 78.922 50.543 82.395 54.281 83.578 c 53.254 85.559 53 87.844 53.562
 90 c 21 90 l 16.031 90 12 85.969 12 81 c 12 55.758 l 48 19.758 l 76.344
 48.102 l 71.965 47.441 67.758 50.062 66.422 54.281 c f
78.949 57.648 m 78.691 56.762 l 77.605 53.082 72.398 53.082 71.312 56.762
 c 71.055 57.648 l 71.051 57.648 l 70.727 58.766 69.91 59.672 68.836 60.117
 c 67.766 60.562 66.547 60.496 65.527 59.941 c 64.711 59.496 l 61.344 57.66
 57.66 61.344 59.492 64.711 c 59.941 65.527 l 60.496 66.547 60.559 67.762
 60.113 68.832 c 59.668 69.906 58.762 70.719 57.648 71.047 c 56.762 71.316
 l 53.082 72.395 53.082 77.605 56.762 78.691 c 57.648 78.949 l 58.766 79.273
 59.672 80.09 60.117 81.164 c 60.562 82.234 60.496 83.453 59.941 84.473 
c 59.496 85.289 l 57.66 88.656 61.344 92.34 64.711 90.508 c 65.527 90.059
 l 66.547 89.504 67.762 89.441 68.832 89.887 c 69.906 90.332 70.719 91.238
 71.047 92.352 c 71.316 93.246 l 72.395 96.918 77.605 96.918 78.691 93.246
 c 78.949 92.348 l 79.277 91.234 80.094 90.328 81.164 89.887 c 82.238 89.441
 83.457 89.508 84.473 90.066 c 85.289 90.512 l 88.656 92.34 92.34 88.656
 90.508 85.293 c 90.059 84.477 l 90.059 84.473 l 89.504 83.453 89.441 82.238
 89.887 81.168 c 90.332 80.094 91.238 79.281 92.352 78.953 c 93.246 78.688
 l 96.918 77.602 96.918 72.395 93.246 71.309 c 92.348 71.051 l 91.234 70.723
 90.328 69.906 89.887 68.836 c 89.441 67.762 89.508 66.543 90.066 65.527
 c 90.512 64.711 l 92.34 61.344 88.656 57.66 85.293 59.492 c 84.477 59.941
 l 84.473 59.941 l 83.453 60.496 82.238 60.559 81.168 60.113 c 80.094 59.668
 79.281 58.762 78.953 57.648 c h
75 84 m 70.031 84 66 79.969 66 75 c 66 70.031 70.031 66 75 66 c 79.969 
66 84 70.031 84 75 c 84 79.969 79.969 84 75 84 c f
Q Q
showpage
%%Trailer
%%EOF
