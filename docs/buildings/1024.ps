%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 720 768 rectclip
1 0 0 -1 0 768 cm q
0 g
708.625 3.602 m 715.691 7.973 719.996 15.688 720 24 c 720 744 l 720 750.363
 717.473 756.469 712.969 760.969 c 708.469 765.473 702.363 768 696 768 c
 552 768 l 545.637 768 539.531 765.473 535.031 760.969 c 530.527 756.469
 528 750.363 528 744 c 528 672 l 480 672 l 480 744 l 480 750.363 477.473
 756.469 472.969 760.969 c 468.469 765.473 462.363 768 456 768 c 24 768 
l 17.637 768 11.531 765.473 7.031 760.969 c 2.527 756.469 0 750.363 0 744
 c 0 480 l 0.004 474.965 1.59 470.059 4.539 465.977 c 7.484 461.891 11.641
 458.84 16.414 457.246 c 288 366.719 l 288 216 l 288 211.547 289.238 207.18
 291.578 203.391 c 293.918 199.602 297.266 196.539 301.246 194.543 c 685.246
 2.543 l 692.695 -1.184 701.543 -0.785 708.625 3.602 c 288 417.312 m 48 
497.281 l 48 720 l 288 720 l h
336 720 m 432 720 l 432 648 l 432 641.637 434.527 635.531 439.031 631.031
 c 443.531 626.527 449.637 624 456 624 c 552 624 l 558.363 624 564.469 626.527
 568.969 631.031 c 573.473 635.531 576 641.637 576 648 c 576 720 l 672 720
 l 672 62.832 l 336 230.832 l h
336 720 m f
96 528 m 144 528 l 144 576 l 96 576 l h
192 528 m 240 528 l 240 576 l 192 576 l h
96 624 m 144 624 l 144 672 l 96 672 l h
192 624 m 240 624 l 240 672 l 192 672 l h
384 432 m 432 432 l 432 480 l 384 480 l h
480 432 m 528 432 l 528 480 l 480 480 l h
384 528 m 432 528 l 432 576 l 384 576 l h
480 528 m 528 528 l 528 576 l 480 576 l h
576 432 m 624 432 l 624 480 l 576 480 l h
576 528 m 624 528 l 624 576 l 576 576 l h
384 336 m 432 336 l 432 384 l 384 384 l h
480 336 m 528 336 l 528 384 l 480 384 l h
576 336 m 624 336 l 624 384 l 576 384 l h
384 240 m 432 240 l 432 288 l 384 288 l h
480 240 m 528 240 l 528 288 l 480 288 l h
576 240 m 624 240 l 624 288 l 576 288 l h
576 144 m 624 144 l 624 192 l 576 192 l h
576 144 m f
Q Q
showpage
%%Trailer
%%EOF
