%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 54 168 132
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 54 168 132
192 192 cairo_set_page_size
%%EndPageSetup
q 24 54 144 78 rectclip
1 0 0 -1 0 192 cm q
0 g
102 66 m 102 69.312 99.312 72 96 72 c 92.688 72 90 69.312 90 66 c 90 62.688
 92.688 60 96 60 c 99.312 60 102 62.688 102 66 c 162 138 m 158.688 138 156
 135.312 156 132 c 156 128.688 158.688 126 162 126 c 165.312 126 168 128.688
 168 132 c 168 135.312 165.312 138 162 138 c 24 132 m 24 135.312 26.688 
138 30 138 c 33.312 138 36 135.312 36 132 c 36 128.688 33.312 126 30 126
 c 26.688 126 24 128.688 24 132 c 146.914 89.566 m 145.797 90.727 144.262
 91.387 142.652 91.398 c 141.043 91.414 139.496 90.781 138.359 89.641 c 
137.219 88.504 136.586 86.957 136.602 85.348 c 136.613 83.738 137.273 82.203
 138.434 81.086 c 140.785 78.809 144.527 78.844 146.844 81.156 c 149.156
 83.473 149.191 87.215 146.914 89.566 c 45.082 81.082 m 45.086 81.086 l 
43.926 82.203 43.266 83.738 43.254 85.348 c 43.238 86.957 43.871 88.504 
45.008 89.641 c 46.148 90.781 47.695 91.414 49.305 91.398 c 50.914 91.387
 52.449 90.727 53.566 89.566 c 55.844 87.215 55.809 83.473 53.496 81.156
 c 51.18 78.844 47.438 78.809 45.086 81.086 c 96 84 m 83.27 84 71.062 89.059
 62.059 98.059 c 53.059 107.062 48 119.27 48 132 c 48 133.59 48.633 135.117
 49.758 136.242 c 50.883 137.367 52.41 138 54 138 c 138 138 l 139.59 138
 141.117 137.367 142.242 136.242 c 143.367 135.117 144 133.59 144 132 c 
144 119.27 138.941 107.062 129.941 98.059 c 120.938 89.059 108.73 84 96 
84 c 96 96 m 104.508 95.996 112.746 99.008 119.246 104.5 c 125.746 109.992
 130.09 117.609 131.508 126 c 60.48 126 l 61.898 117.609 66.246 109.988 
72.746 104.496 c 79.25 99.004 87.488 95.996 96 96 c f
Q Q
showpage
%%Trailer
%%EOF
