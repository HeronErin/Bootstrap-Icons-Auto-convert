%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 432 1344 1056
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 432 1344 1056
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 432 1152 624 rectclip
1 0 0 -1 0 1536 cm q
0 g
816 528 m 816 545.148 806.852 560.996 792 569.57 c 777.148 578.145 758.852
 578.145 744 569.57 c 729.148 560.996 720 545.148 720 528 c 720 510.852 
729.148 495.004 744 486.43 c 758.852 477.855 777.148 477.855 792 486.43 
c 806.852 495.004 816 510.852 816 528 c 1296 1104 m 1278.852 1104 1263.004
 1094.852 1254.43 1080 c 1245.855 1065.148 1245.855 1046.852 1254.43 1032
 c 1263.004 1017.148 1278.852 1008 1296 1008 c 1313.148 1008 1328.996 1017.148
 1337.57 1032 c 1346.145 1046.852 1346.145 1065.148 1337.57 1080 c 1328.996
 1094.852 1313.148 1104 1296 1104 c 192 1056 m 192 1073.148 201.148 1088.996
 216 1097.57 c 230.852 1106.145 249.148 1106.145 264 1097.57 c 278.852 1088.996
 288 1073.148 288 1056 c 288 1038.852 278.852 1023.004 264 1014.43 c 249.148
 1005.855 230.852 1005.855 216 1014.43 c 201.148 1023.004 192 1038.852 192
 1056 c 1175.328 716.543 m 1166.383 725.805 1154.094 731.086 1141.219 731.195
 c 1128.344 731.309 1115.965 726.242 1106.859 717.141 c 1097.758 708.035
 1092.691 695.656 1092.805 682.781 c 1092.914 669.906 1098.195 657.617 1107.457
 648.672 c 1119.648 636.898 1137.148 632.426 1153.492 636.906 c 1169.84 
641.387 1182.613 654.16 1187.094 670.508 c 1191.574 686.852 1187.102 704.352
 1175.328 716.543 c 360.672 648.672 m 351.41 657.617 346.133 669.906 346.02
 682.781 c 345.906 695.656 350.973 708.035 360.078 717.141 c 369.18 726.242
 381.562 731.309 394.434 731.195 c 407.309 731.086 419.598 725.805 428.543
 716.543 c 440.32 704.352 444.793 686.852 440.309 670.508 c 435.828 654.16
 423.059 641.387 406.711 636.906 c 390.363 632.426 372.863 636.898 360.672
 648.672 c 768 672 m 666.156 672 568.484 712.457 496.473 784.473 c 424.457
 856.484 384 954.156 384 1056 c 384 1068.73 389.059 1080.938 398.059 1089.941
 c 407.062 1098.941 419.27 1104 432 1104 c 1104 1104 l 1116.73 1104 1128.938
 1098.941 1137.941 1089.941 c 1146.941 1080.938 1152 1068.73 1152 1056 c
 1152 988.594 1134.258 922.375 1100.555 864 c 1066.852 805.625 1018.375 
757.148 960 723.445 c 901.625 689.742 835.406 672 768 672 c 768 768 m 836.074
 767.977 901.961 792.07 953.961 836.008 c 1005.961 879.941 1040.719 940.875
 1052.062 1008 c 483.84 1008 l 495.188 940.859 529.961 879.914 581.98 835.977
 c 634 792.039 699.906 767.957 768 768 c f
Q Q
showpage
%%Trailer
%%EOF
