%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 3 6 21 17
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 3 6 21 17
24 24 cairo_set_page_size
%%EndPageSetup
q 3 6 18 11 rectclip
1 0 0 -1 0 24 cm q
0 g
12.75 8.25 m 12.75 8.664 12.414 9 12 9 c 11.586 9 11.25 8.664 11.25 8.25
 c 11.25 7.836 11.586 7.5 12 7.5 c 12.414 7.5 12.75 7.836 12.75 8.25 c 20.25
 17.25 m 19.836 17.25 19.5 16.914 19.5 16.5 c 19.5 16.086 19.836 15.75 20.25
 15.75 c 20.664 15.75 21 16.086 21 16.5 c 21 16.914 20.664 17.25 20.25 17.25
 c 3 16.5 m 3 16.914 3.336 17.25 3.75 17.25 c 4.164 17.25 4.5 16.914 4.5
 16.5 c 4.5 16.086 4.164 15.75 3.75 15.75 c 3.336 15.75 3 16.086 3 16.5 
c 18.363 11.195 m 18.227 11.34 18.031 11.422 17.832 11.426 c 17.629 11.426
 17.438 11.348 17.293 11.207 c 17.152 11.062 17.074 10.871 17.074 10.668
 c 17.078 10.469 17.16 10.273 17.305 10.137 c 17.598 9.852 18.066 9.855 
18.355 10.145 c 18.645 10.434 18.648 10.902 18.363 11.195 c 5.633 10.137
 m 5.637 10.137 l 5.492 10.273 5.41 10.469 5.406 10.668 c 5.406 10.871 5.484
 11.062 5.625 11.207 c 5.77 11.348 5.961 11.426 6.164 11.426 c 6.363 11.422
 6.555 11.34 6.695 11.195 c 6.98 10.902 6.977 10.434 6.688 10.145 c 6.398
 9.855 5.93 9.852 5.637 10.137 c 12 10.5 m 8.688 10.5 6 13.188 6 16.5 c 
6 16.699 6.078 16.891 6.219 17.031 c 6.359 17.172 6.551 17.25 6.75 17.25
 c 17.25 17.25 l 17.449 17.25 17.641 17.172 17.781 17.031 c 17.922 16.891
 18 16.699 18 16.5 c 18 14.91 17.367 13.383 16.242 12.258 c 15.117 11.133
 13.59 10.5 12 10.5 c 12 12 m 14.195 12 16.074 13.586 16.438 15.75 c 7.559
 15.75 l 7.926 13.582 9.805 12 12 12 c f
Q Q
showpage
%%Trailer
%%EOF
