%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 108 336 264
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 108 336 264
384 384 cairo_set_page_size
%%EndPageSetup
q 48 108 288 156 rectclip
1 0 0 -1 0 384 cm q
0 g
204 132 m 204 138.629 198.629 144 192 144 c 185.371 144 180 138.629 180
 132 c 180 125.371 185.371 120 192 120 c 198.629 120 204 125.371 204 132
 c 324 276 m 317.371 276 312 270.629 312 264 c 312 257.371 317.371 252 324
 252 c 330.629 252 336 257.371 336 264 c 336 270.629 330.629 276 324 276
 c 48 264 m 48 270.629 53.371 276 60 276 c 66.629 276 72 270.629 72 264 
c 72 257.371 66.629 252 60 252 c 53.371 252 48 257.371 48 264 c 293.832 
179.137 m 291.598 181.453 288.523 182.77 285.305 182.801 c 282.086 182.828
 278.992 181.562 276.715 179.285 c 274.438 177.008 273.172 173.914 273.199
 170.695 c 273.23 167.477 274.547 164.402 276.863 162.168 c 281.574 157.621
 289.059 157.684 293.688 162.312 c 298.316 166.941 298.379 174.426 293.832
 179.137 c 90.168 162.168 m 87.852 164.402 86.531 167.477 86.504 170.695
 c 86.477 173.914 87.742 177.008 90.02 179.285 c 92.297 181.562 95.391 182.828
 98.609 182.801 c 101.828 182.77 104.898 181.453 107.137 179.137 c 111.684
 174.426 111.617 166.941 106.988 162.312 c 102.359 157.684 94.875 157.621
 90.168 162.168 c 192 168 m 166.539 168 142.121 178.113 124.117 196.117 
c 106.113 214.121 96 238.539 96 264 c 96 267.184 97.266 270.234 99.516 272.484
 c 101.766 274.734 104.816 276 108 276 c 276 276 l 279.184 276 282.234 274.734
 284.484 272.484 c 286.734 270.234 288 267.184 288 264 c 288 238.539 277.887
 214.121 259.883 196.117 c 241.879 178.113 217.461 168 192 168 c 192 192
 m 209.02 191.996 225.488 198.02 238.488 209 c 251.492 219.984 260.18 235.219
 263.016 252 c 120.961 252 l 123.797 235.215 132.488 219.977 145.496 208.992
 c 158.5 198.008 174.977 191.988 192 192 c f
Q Q
showpage
%%Trailer
%%EOF
