%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 27 84 66
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 27 84 66
96 96 cairo_set_page_size
%%EndPageSetup
q 12 27 72 39 rectclip
1 0 0 -1 0 96 cm q
0 g
51 33 m 51 34.656 49.656 36 48 36 c 46.344 36 45 34.656 45 33 c 45 31.344
 46.344 30 48 30 c 49.656 30 51 31.344 51 33 c 81 69 m 79.344 69 78 67.656
 78 66 c 78 64.344 79.344 63 81 63 c 82.656 63 84 64.344 84 66 c 84 67.656
 82.656 69 81 69 c 12 66 m 12 67.656 13.344 69 15 69 c 16.656 69 18 67.656
 18 66 c 18 64.344 16.656 63 15 63 c 13.344 63 12 64.344 12 66 c 73.457 
44.785 m 72.898 45.363 72.133 45.691 71.328 45.699 c 70.523 45.707 69.746
 45.391 69.18 44.82 c 68.609 44.254 68.293 43.477 68.301 42.672 c 68.309
 41.867 68.637 41.102 69.215 40.543 c 70.395 39.406 72.266 39.422 73.422
 40.578 c 74.578 41.734 74.594 43.605 73.457 44.785 c 22.543 40.543 m 21.965
 41.102 21.633 41.867 21.625 42.672 c 21.621 43.477 21.938 44.254 22.504
 44.82 c 23.074 45.391 23.848 45.707 24.652 45.699 c 25.457 45.691 26.227
 45.363 26.785 44.785 c 27.922 43.605 27.906 41.734 26.746 40.578 c 25.59
 39.422 23.719 39.406 22.543 40.543 c 48 42 m 41.637 42 35.531 44.527 31.031
 49.031 c 26.527 53.531 24 59.637 24 66 c 24 66.797 24.316 67.559 24.879
 68.121 c 25.441 68.684 26.203 69 27 69 c 69 69 l 69.797 69 70.559 68.684
 71.121 68.121 c 71.684 67.559 72 66.797 72 66 c 72 59.637 69.473 53.531
 64.969 49.031 c 60.469 44.527 54.363 42 48 42 c 48 48 m 52.254 48 56.371
 49.504 59.621 52.25 c 62.871 54.996 65.043 58.805 65.754 63 c 30.238 63
 l 30.949 58.805 33.121 54.996 36.375 52.25 c 39.625 49.504 43.746 47.996
 48 48 c f
Q Q
showpage
%%Trailer
%%EOF
