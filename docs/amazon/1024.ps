%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 746 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 746 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 746 768 rectclip
1 0 0 -1 0 768 cm q
0 g
519.023 574.465 m 526.559 578.449 536.305 578.016 543.023 572.066 c 543.262
 572.305 l 543.266 572.305 l 568.965 549.516 594.934 527.035 621.168 504.863
 c 629.473 498 628.031 487.008 621.457 477.84 c 615.457 469.68 l 598.898
 447.359 583.152 426.191 583.152 383.711 c 583.152 225.312 l 583.199 209.234
 l 583.582 148.516 583.871 93.027 538.414 50.594 c 499.391 13.152 434.879
 0 385.441 0 c 288.816 0 180.961 36 158.207 155.52 c 155.949 168.191 165.07
 174.91 173.375 176.785 c 271.969 187.344 l 281.09 186.91 287.809 177.938
 289.535 168.77 c 297.984 127.633 332.543 107.762 371.277 107.762 c 392.156
 107.762 415.871 115.441 428.301 134.16 c 440.973 152.879 440.781 177.84
 440.637 200.207 c 440.637 220.941 l 431.035 221.996 421.102 223.039 410.828
 224.062 c 357.402 229.535 295.773 235.871 249.547 256.223 c 185.902 283.68
 141.121 339.84 141.121 422.305 c 141.121 527.906 207.695 580.609 293.184
 580.609 c 365.473 580.609 404.926 563.617 460.656 506.688 c 468.672 518.496
 l 481.824 537.938 490.559 550.895 518.93 574.465 c h
289.441 404.688 m 289.441 318.098 367.055 302.398 440.496 302.398 c 440.496
 329.758 l 440.543 367.004 440.594 398.59 421.488 432.141 c 405.359 460.699
 379.727 478.27 351.168 478.27 c 312.191 478.27 289.441 448.559 289.441 
404.684 c 20.879 584.352 m 147.07 661.297 342.383 780.383 653.664 632.207
 c 667.105 626.641 676.465 635.949 663.215 652.895 c 649.824 670.078 542.977
 768 363.359 768 c 183.938 768 46.465 645.406 4.512 594.527 c -7.008 581.328
 6.238 575.328 14.062 580.176 c h
20.879 584.352 m f
663.742 573.266 m 690.957 569.906 734.207 571.969 742.703 583.059 c 749.184
 591.508 742.512 629.426 731.52 656.645 c 720.48 683.668 704.062 702.773
 694.945 710.164 c 685.824 717.555 678.961 714.676 683.906 703.59 c 688.945
 692.551 716.738 623.766 705.746 609.367 c 695.523 596.023 649.25 600.871
 627.746 603.129 c 623.426 603.562 l 618.883 603.977 615.152 604.363 612.242
 604.715 c 602.977 605.723 600.48 606.012 599.09 603.18 c 595.539 593.148
 636.48 576.492 663.746 573.277 c f
Q Q
showpage
%%Trailer
%%EOF
