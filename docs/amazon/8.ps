%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.055 4.488 m 4.113 4.52 4.191 4.516 4.242 4.469 c 4.246 4.473 l 4.445 
4.293 4.648 4.117 4.852 3.945 c 4.918 3.891 4.906 3.805 4.855 3.734 c 4.809
 3.672 l 4.68 3.496 4.555 3.332 4.555 3 c 4.555 1.637 l 4.559 1.164 4.559
 0.73 4.203 0.398 c 3.902 0.102 3.398 0 3.012 0 c 2.258 0 1.414 0.281 1.234
 1.215 c 1.215 1.312 1.289 1.367 1.352 1.383 c 2.121 1.465 l 2.191 1.461
 2.246 1.391 2.258 1.32 c 2.324 1 2.594 0.844 2.895 0.844 c 3.059 0.844 
3.242 0.902 3.34 1.051 c 3.438 1.195 3.438 1.391 3.438 1.566 c 3.438 1.727
 l 3.363 1.734 3.285 1.742 3.203 1.75 c 2.785 1.793 2.305 1.844 1.941 2 
c 1.453 2.215 1.102 2.656 1.102 3.301 c 1.102 4.125 1.621 4.539 2.289 4.539
 c 2.855 4.539 3.16 4.406 3.598 3.961 c 3.66 4.055 l 3.762 4.207 3.832 4.309
 4.055 4.492 c h
2.262 3.16 m 2.262 2.484 2.867 2.363 3.441 2.363 c 3.441 2.578 l 3.441 
2.867 3.441 3.117 3.293 3.379 c 3.168 3.602 2.965 3.738 2.742 3.738 c 2.438
 3.738 2.262 3.508 2.262 3.164 c 0.164 4.566 m 1.148 5.168 2.676 6.098 5.109
 4.941 c 5.215 4.898 5.289 4.969 5.184 5.102 c 5.078 5.234 4.242 6 2.84 
6 c 1.438 6 0.363 5.043 0.035 4.645 c -0.055 4.543 0.047 4.496 0.109 4.531
 c h
0.164 4.566 m f
5.184 4.48 m 5.395 4.453 5.734 4.469 5.801 4.559 c 5.852 4.625 5.801 4.922
 5.715 5.133 c 5.629 5.344 5.5 5.492 5.43 5.551 c 5.359 5.609 5.305 5.586
 5.344 5.5 c 5.383 5.414 5.602 4.875 5.516 4.766 c 5.438 4.66 5.074 4.699
 4.906 4.719 c 4.871 4.723 l 4.836 4.727 4.805 4.73 4.785 4.73 c 4.711 4.738
 4.691 4.742 4.684 4.719 c 4.656 4.641 4.977 4.512 5.188 4.484 c f
Q Q
showpage
%%Trailer
%%EOF
