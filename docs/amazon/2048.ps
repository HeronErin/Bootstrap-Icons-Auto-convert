%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1491 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1491 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1491 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1038.047 1148.93 m 1053.117 1156.898 1072.605 1156.035 1086.047 1144.129
 c 1086.527 1144.609 l 1137.926 1099.031 1189.867 1054.066 1242.336 1009.727
 c 1258.945 996 1256.062 974.016 1242.91 955.68 c 1230.91 939.359 l 1197.789
 894.719 1166.301 852.383 1166.301 767.422 c 1166.301 450.621 l 1166.398
 418.461 l 1167.168 297.02 1167.742 186.047 1076.832 101.18 c 998.785 26.305
 869.762 0 770.879 0 c 577.633 0 361.922 72 316.414 311.039 c 311.902 336.383
 330.141 349.824 346.75 353.566 c 543.934 374.688 l 562.172 373.824 575.613
 355.871 579.07 337.535 c 595.965 255.262 665.086 215.52 742.559 215.52 
c 784.32 215.52 831.742 230.879 856.605 268.32 c 881.949 305.762 881.566
 355.68 881.277 400.418 c 881.277 441.891 l 862.078 444.004 842.207 446.082
 821.66 448.129 c 714.812 459.074 591.547 471.746 499.102 512.449 c 371.809
 567.359 282.238 679.68 282.238 844.609 c 282.238 1055.809 415.391 1161.219
 586.367 1161.219 c 730.941 1161.219 809.855 1127.234 921.312 1013.379 c
 937.344 1036.996 l 963.648 1075.875 981.121 1101.797 1037.855 1148.934 
c h
578.879 809.375 m 578.879 636.191 734.113 604.801 880.992 604.801 c 880.992
 659.52 l 881.09 734.016 881.184 797.184 842.977 864.289 c 810.719 921.41
 759.457 956.547 702.336 956.547 c 624.383 956.547 578.879 897.121 578.879
 809.379 c 41.762 1168.703 m 294.145 1322.59 684.77 1560.766 1307.328 1264.414
 c 1334.207 1253.277 1352.93 1271.902 1326.434 1305.789 c 1299.648 1340.16
 1085.953 1536 726.719 1536 c 367.871 1536 92.93 1290.816 9.023 1189.055
 c -14.016 1162.656 12.48 1150.656 28.129 1160.352 c h
41.762 1168.703 m f
1327.488 1146.527 m 1381.922 1139.809 1468.418 1143.934 1485.41 1166.113
 c 1498.371 1183.008 1485.027 1258.848 1463.043 1313.281 c 1440.965 1367.328
 1408.133 1405.539 1389.891 1420.32 c 1371.652 1435.105 1357.922 1429.344
 1367.812 1407.168 c 1377.891 1385.09 1433.477 1247.52 1411.492 1218.719
 c 1391.043 1192.031 1298.5 1201.727 1255.492 1206.238 c 1246.852 1207.102
 l 1237.762 1207.934 1230.309 1208.703 1224.484 1209.406 c 1205.957 1211.422
 1200.965 1212 1198.18 1206.336 c 1191.074 1186.273 1272.965 1152.961 1327.492
 1146.527 c f
Q Q
showpage
%%Trailer
%%EOF
