%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
48 144 m 35.27 144 23.062 149.059 14.059 158.059 c 5.059 167.062 0 179.27
 0 192 c 0 576 l 0 588.73 5.059 600.938 14.059 609.941 c 23.062 618.941 
35.27 624 48 624 c 268.129 624 l 280.855 623.996 293.062 618.938 302.062
 609.938 c 319.008 592.992 l 323.512 588.477 329.625 585.941 336 585.941
 c 342.375 585.941 348.488 588.477 352.992 592.992 c 369.938 609.938 l 378.938
 618.938 391.145 623.996 403.871 624 c 720 624 l 732.73 624 744.938 618.941
 753.941 609.941 c 762.941 600.938 768 588.73 768 576 c 768 192 l 768 179.27
 762.941 167.062 753.941 158.059 c 744.938 149.059 732.73 144 720 144 c 
h
72 192 m 216 192 l 222.363 192 228.469 194.527 232.969 199.031 c 237.473
 203.531 240 209.637 240 216 c 240 408 l 240 414.363 237.473 420.469 232.969
 424.969 c 228.469 429.473 222.363 432 216 432 c 72 432 l 65.637 432 59.531
 429.473 55.031 424.969 c 50.527 420.469 48 414.363 48 408 c 48 216 l 48
 209.637 50.527 203.531 55.031 199.031 c 59.531 194.527 65.637 192 72 192
 c 312 192 m 456 192 l 462.363 192 468.469 194.527 472.969 199.031 c 477.473
 203.531 480 209.637 480 216 c 480 408 l 480 414.363 477.473 420.469 472.969
 424.969 c 468.469 429.473 462.363 432 456 432 c 312 432 l 305.637 432 299.531
 429.473 295.031 424.969 c 290.527 420.469 288 414.363 288 408 c 288 216
 l 288 209.637 290.527 203.531 295.031 199.031 c 299.531 194.527 305.637
 192 312 192 c 528 216 m 528 209.637 530.527 203.531 535.031 199.031 c 539.531
 194.527 545.637 192 552 192 c 696 192 l 702.363 192 708.469 194.527 712.969
 199.031 c 717.473 203.531 720 209.637 720 216 c 720 408 l 720 414.363 717.473
 420.469 712.969 424.969 c 708.469 429.473 702.363 432 696 432 c 552 432
 l 545.637 432 539.531 429.473 535.031 424.969 c 530.527 420.469 528 414.363
 528 408 c h
96 480 m 96 576 l 48 576 l 48 480 l h
192 480 m 192 576 l 144 576 l 144 480 l h
288 480 m 288 576 l 240 576 l 240 480 l h
432 480 m 432 576 l 384 576 l 384 480 l h
528 480 m 528 576 l 480 576 l 480 480 l h
624 480 m 624 576 l 576 576 l 576 480 l h
720 480 m 720 576 l 672 576 l 672 480 l h
720 480 m f
Q Q
showpage
%%Trailer
%%EOF
