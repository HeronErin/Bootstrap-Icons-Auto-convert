%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 288 m 70.539 288 46.121 298.113 28.117 316.117 c 10.113 334.121 0 358.539
 0 384 c 0 1152 l 0 1177.461 10.113 1201.879 28.117 1219.883 c 46.121 1237.887
 70.539 1248 96 1248 c 536.258 1248 l 561.715 1247.996 586.129 1237.875 
604.129 1219.871 c 638.016 1185.984 l 647.02 1176.957 659.25 1171.883 672
 1171.883 c 684.75 1171.883 696.98 1176.957 705.984 1185.984 c 739.871 1219.871
 l 757.871 1237.875 782.285 1247.996 807.742 1248 c 1440 1248 l 1465.461
 1248 1489.879 1237.887 1507.883 1219.883 c 1525.887 1201.879 1536 1177.461
 1536 1152 c 1536 384 l 1536 358.539 1525.887 334.121 1507.883 316.117 c
 1489.879 298.113 1465.461 288 1440 288 c h
144 384 m 432 384 l 444.73 384 456.938 389.059 465.941 398.059 c 474.941
 407.062 480 419.27 480 432 c 480 816 l 480 828.73 474.941 840.938 465.941
 849.941 c 456.938 858.941 444.73 864 432 864 c 144 864 l 131.27 864 119.062
 858.941 110.059 849.941 c 101.059 840.938 96 828.73 96 816 c 96 432 l 96
 419.27 101.059 407.062 110.059 398.059 c 119.062 389.059 131.27 384 144
 384 c 624 384 m 912 384 l 924.73 384 936.938 389.059 945.941 398.059 c 
954.941 407.062 960 419.27 960 432 c 960 816 l 960 828.73 954.941 840.938
 945.941 849.941 c 936.938 858.941 924.73 864 912 864 c 624 864 l 611.27
 864 599.062 858.941 590.059 849.941 c 581.059 840.938 576 828.73 576 816
 c 576 432 l 576 419.27 581.059 407.062 590.059 398.059 c 599.062 389.059
 611.27 384 624 384 c 1056 432 m 1056 419.27 1061.059 407.062 1070.059 398.059
 c 1079.062 389.059 1091.27 384 1104 384 c 1392 384 l 1404.73 384 1416.938
 389.059 1425.941 398.059 c 1434.941 407.062 1440 419.27 1440 432 c 1440
 816 l 1440 828.73 1434.941 840.938 1425.941 849.941 c 1416.938 858.941 
1404.73 864 1392 864 c 1104 864 l 1091.27 864 1079.062 858.941 1070.059 
849.941 c 1061.059 840.938 1056 828.73 1056 816 c h
192 960 m 192 1152 l 96 1152 l 96 960 l h
384 960 m 384 1152 l 288 1152 l 288 960 l h
576 960 m 576 1152 l 480 1152 l 480 960 l h
864 960 m 864 1152 l 768 1152 l 768 960 l h
1056 960 m 1056 1152 l 960 1152 l 960 960 l h
1248 960 m 1248 1152 l 1152 1152 l 1152 960 l h
1440 960 m 1440 1152 l 1344 1152 l 1344 960 l h
1440 960 m f
Q Q
showpage
%%Trailer
%%EOF
