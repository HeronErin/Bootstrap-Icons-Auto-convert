%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 36 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 36 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 36 192 120 rectclip
1 0 0 -1 0 192 cm q
0 g
12 36 m 5.371 36 0 41.371 0 48 c 0 144 l 0 147.184 1.266 150.234 3.516 
152.484 c 5.766 154.734 8.816 156 12 156 c 67.031 156 l 70.215 156 73.266
 154.734 75.516 152.484 c 79.754 148.246 l 80.879 147.121 82.406 146.484
 84 146.484 c 85.594 146.484 87.121 147.121 88.246 148.246 c 92.484 152.484
 l 94.734 154.734 97.785 156 100.969 156 c 180 156 l 183.184 156 186.234
 154.734 188.484 152.484 c 190.734 150.234 192 147.184 192 144 c 192 48 
l 192 44.816 190.734 41.766 188.484 39.516 c 186.234 37.266 183.184 36 180
 36 c h
18 48 m 54 48 l 55.59 48 57.117 48.633 58.242 49.758 c 59.367 50.883 60
 52.41 60 54 c 60 102 l 60 103.59 59.367 105.117 58.242 106.242 c 57.117
 107.367 55.59 108 54 108 c 18 108 l 14.688 108 12 105.312 12 102 c 12 54
 l 12 50.688 14.688 48 18 48 c 78 48 m 114 48 l 115.59 48 117.117 48.633
 118.242 49.758 c 119.367 50.883 120 52.41 120 54 c 120 102 l 120 103.59
 119.367 105.117 118.242 106.242 c 117.117 107.367 115.59 108 114 108 c 
78 108 l 74.688 108 72 105.312 72 102 c 72 54 l 72 50.688 74.688 48 78 48
 c 132 54 m 132 50.688 134.688 48 138 48 c 174 48 l 175.59 48 177.117 48.633
 178.242 49.758 c 179.367 50.883 180 52.41 180 54 c 180 102 l 180 103.59
 179.367 105.117 178.242 106.242 c 177.117 107.367 175.59 108 174 108 c 
138 108 l 134.688 108 132 105.312 132 102 c h
24 120 m 24 144 l 12 144 l 12 120 l h
48 120 m 48 144 l 36 144 l 36 120 l h
72 120 m 72 144 l 60 144 l 60 120 l h
108 120 m 108 144 l 96 144 l 96 120 l h
132 120 m 132 144 l 120 144 l 120 120 l h
156 120 m 156 144 l 144 144 l 144 120 l h
180 120 m 180 144 l 168 144 l 168 120 l h
180 120 m f
Q Q
showpage
%%Trailer
%%EOF
