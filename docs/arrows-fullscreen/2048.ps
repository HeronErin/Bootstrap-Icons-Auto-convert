%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 2 2 1534 1534
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 2 2 1534 1534
1536 1536 cairo_set_page_size
%%EndPageSetup
q 2 2 1532 1532 rectclip
1 0 0 -1 0 1536 cm q
0 g
559.488 976.512 m 550.488 967.512 538.281 962.457 525.551 962.457 c 512.824
 962.457 500.617 967.512 491.617 976.512 c 98.402 1369.727 l 98.398 1104
 l 98.398 1086.852 89.25 1071.004 74.398 1062.43 c 59.547 1053.855 41.25
 1053.855 26.398 1062.43 c 11.547 1071.004 2.398 1086.852 2.398 1104 c 2.398
 1485.602 l 2.398 1498.332 7.457 1510.539 16.457 1519.543 c 25.461 1528.543
 37.668 1533.602 50.398 1533.602 c 432 1533.602 l 449.148 1533.602 464.996
 1524.453 473.57 1509.602 c 482.145 1494.75 482.145 1476.453 473.57 1461.602
 c 464.996 1446.75 449.148 1437.602 432 1437.602 c 166.273 1437.602 l 559.488
 1044.387 l 559.488 1044.383 l 568.488 1035.383 573.543 1023.176 573.543
 1010.449 c 573.543 997.719 568.488 985.512 559.488 976.512 c 976.512 976.512
 m 985.512 967.512 997.719 962.457 1010.449 962.457 c 1023.176 962.457 1035.383
 967.512 1044.383 976.512 c 1437.598 1369.727 l 1437.602 1104 l 1437.602
 1086.852 1446.75 1071.004 1461.602 1062.43 c 1476.453 1053.855 1494.75 
1053.855 1509.602 1062.43 c 1524.453 1071.004 1533.602 1086.852 1533.602
 1104 c 1533.602 1485.602 l 1533.602 1498.332 1528.543 1510.539 1519.543
 1519.543 c 1510.539 1528.543 1498.332 1533.602 1485.602 1533.602 c 1104
 1533.602 l 1086.852 1533.602 1071.004 1524.453 1062.43 1509.602 c 1053.855
 1494.75 1053.855 1476.453 1062.43 1461.602 c 1071.004 1446.75 1086.852 
1437.602 1104 1437.602 c 1369.727 1437.602 l 976.512 1044.387 l 976.512 
1044.383 l 967.512 1035.383 962.457 1023.176 962.457 1010.449 c 962.457 
997.719 967.512 985.512 976.512 976.512 c 976.512 559.488 m 985.512 568.488
 997.719 573.543 1010.449 573.543 c 1023.176 573.543 1035.383 568.488 1044.383
 559.488 c 1437.598 166.273 l 1437.602 432 l 1437.602 449.148 1446.75 464.996
 1461.602 473.57 c 1476.453 482.145 1494.75 482.145 1509.602 473.57 c 1524.453
 464.996 1533.602 449.148 1533.602 432 c 1533.602 50.398 l 1533.602 37.668
 1528.543 25.461 1519.543 16.457 c 1510.539 7.457 1498.332 2.398 1485.602
 2.398 c 1104 2.398 l 1086.852 2.398 1071.004 11.547 1062.43 26.398 c 1053.855
 41.25 1053.855 59.547 1062.43 74.398 c 1071.004 89.25 1086.852 98.398 1104
 98.398 c 1369.727 98.398 l 976.512 491.613 l 976.512 491.617 l 967.512 
500.617 962.457 512.824 962.457 525.551 c 962.457 538.281 967.512 550.488
 976.512 559.488 c 559.488 559.488 m 550.488 568.488 538.281 573.543 525.551
 573.543 c 512.824 573.543 500.617 568.488 491.617 559.488 c 98.398 166.273
 l 98.398 432 l 98.398 449.148 89.25 464.996 74.398 473.57 c 59.547 482.145
 41.25 482.145 26.398 473.57 c 11.547 464.996 2.398 449.148 2.398 432 c 
2.398 50.398 l 2.398 37.668 7.457 25.461 16.457 16.457 c 25.461 7.457 37.668
 2.398 50.398 2.398 c 432 2.398 l 449.148 2.398 464.996 11.547 473.57 26.398
 c 482.145 41.25 482.145 59.547 473.57 74.398 c 464.996 89.25 449.148 98.398
 432 98.398 c 166.273 98.398 l 559.488 491.613 l 559.488 491.617 l 568.488
 500.617 573.543 512.824 573.543 525.551 c 573.543 538.281 568.488 550.488
 559.488 559.488 c f*
Q Q
showpage
%%Trailer
%%EOF
