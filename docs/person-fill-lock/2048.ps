%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1440 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1440 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1248 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 480 m 1056 556.383 1025.656 629.637 971.648 683.648 c 917.637 737.656
 844.383 768 768 768 c 691.617 768 618.363 737.656 564.352 683.648 c 510.344
 629.637 480 556.383 480 480 c 480 403.617 510.344 330.363 564.352 276.352
 c 618.363 222.344 691.617 192 768 192 c 844.383 192 917.637 222.344 971.648
 276.352 c 1025.656 330.363 1056 403.617 1056 480 c 192 1248 m 192 1344 
288 1344 288 1344 c 768 1344 l 768 1248 l 768 1241.59 768.32 1235.18 768.961
 1228.801 c 764.445 1162.344 775.395 1095.75 800.945 1034.234 c 826.496 
972.723 865.953 917.969 916.223 874.273 c 871.426 867.551 822.016 864.129
 768 864 c 288 864 192 1152 192 1248 c 864 1248 m 864 1222.539 874.113 1198.121
 892.117 1180.117 c 910.121 1162.113 934.539 1152 960 1152 c 960 1056 l 
960 1005.078 980.227 956.242 1016.234 920.234 c 1052.242 884.227 1101.078
 864 1152 864 c 1202.922 864 1251.758 884.227 1287.766 920.234 c 1323.773
 956.242 1344 1005.078 1344 1056 c 1344 1152 l 1369.461 1152 1393.879 1162.113
 1411.883 1180.117 c 1429.887 1198.121 1440 1222.539 1440 1248 c 1440 1440
 l 1440 1465.461 1429.887 1489.879 1411.883 1507.883 c 1393.879 1525.887
 1369.461 1536 1344 1536 c 960 1536 l 934.539 1536 910.121 1525.887 892.117
 1507.883 c 874.113 1489.879 864 1465.461 864 1440 c h
1152 960 m 1126.539 960 1102.121 970.113 1084.117 988.117 c 1066.113 1006.121
 1056 1030.539 1056 1056 c 1056 1152 l 1248 1152 l 1248 1056 l 1248 1030.539
 1237.887 1006.121 1219.883 988.117 c 1201.879 970.113 1177.461 960 1152
 960 c f
Q Q
showpage
%%Trailer
%%EOF
