%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 96
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
61.277 8.824 m 65.422 1.266 l 65.699 0.77 65.602 0.387 65.133 0.113 c 64.621
 -0.113 64.23 0 63.961 0.461 c 59.762 8.082 l 59.766 8.082 l 56.066 6.457
 52.07 5.625 48.031 5.645 c 43.902 5.645 39.992 6.453 36.297 8.07 c 32.098
 0.449 l 31.82 0.004 31.434 -0.109 30.926 0.121 c 30.457 0.398 30.359 0.781
 30.633 1.277 c 34.777 8.832 l 30.699 10.836 27.234 13.895 24.738 17.688
 c 22.281 21.367 20.98 25.695 21 30.121 c 75 30.121 l 75 25.621 73.754 21.477
 71.262 17.688 c 68.773 13.906 65.328 10.852 61.277 8.832 c h
37.32 19.816 m 36.898 20.246 36.32 20.484 35.719 20.477 c 35.121 20.492
 34.547 20.25 34.141 19.816 c 33.723 19.398 33.492 18.828 33.496 18.234 
c 33.492 17.641 33.723 17.066 34.141 16.645 c 34.547 16.211 35.121 15.969
 35.719 15.984 c 36.34 15.984 36.871 16.203 37.32 16.645 c 37.754 17.059
 38 17.633 37.992 18.234 c 37.996 18.832 37.754 19.406 37.32 19.816 c 61.926
 19.816 m 61.52 20.25 60.949 20.488 60.355 20.477 c 59.75 20.484 59.172 
20.246 58.746 19.816 c 58.312 19.406 58.07 18.832 58.074 18.234 c 58.074
 17.617 58.297 17.09 58.746 16.645 c 59.172 16.215 59.75 15.977 60.355 15.984
 c 60.977 15.984 61.5 16.203 61.926 16.645 c 62.344 17.066 62.574 17.641
 62.566 18.234 c 62.566 18.848 62.352 19.375 61.926 19.82 c 21 70.621 m 
21 72.387 21.621 73.887 22.867 75.121 c 24.109 76.344 25.633 76.961 27.426
 76.965 c 31.973 76.965 l 32.031 90.059 l 32.031 91.715 32.617 93.121 33.785
 94.277 c 33.785 94.273 l 34.891 95.398 36.41 96.023 37.984 96 c 39.582 
96.031 41.125 95.406 42.246 94.273 c 43.391 93.172 44.027 91.645 43.996 
90.055 c 43.996 76.961 l 52.055 76.961 l 52.055 90.055 l 52.055 91.711 52.641
 93.117 53.809 94.273 c 54.93 95.406 56.473 96.031 58.066 96 c 59.664 96.031
 61.207 95.406 62.328 94.273 c 63.473 93.172 64.109 91.645 64.078 90.055
 c 64.078 76.961 l 68.637 76.961 l 70.379 76.961 71.879 76.344 73.129 75.113
 c 74.367 73.887 74.992 72.387 74.996 70.613 c 75 32.191 l 21 32.191 l h
83.969 31.098 m 82.398 31.07 80.883 31.668 79.758 32.766 c 78.605 33.816
 77.965 35.316 78 36.875 c 78 61.254 l 78 62.879 78.586 64.258 79.758 65.395
 c 80.875 66.508 82.395 67.125 83.969 67.098 c 85.648 67.098 87.074 66.531
 88.242 65.395 c 89.391 64.324 90.027 62.82 90 61.254 c 90 36.875 l 90.035
 35.316 89.395 33.816 88.242 32.766 c 87.094 31.668 85.559 31.066 83.969
 31.098 c 7.758 32.797 m 8.898 31.684 10.438 31.074 12.031 31.098 c 13.672
 31.098 15.074 31.664 16.242 32.797 c 17.387 33.84 18.027 35.328 18 36.875
 c 18 61.254 l 18.027 62.816 17.402 64.316 16.273 65.395 c 15.148 66.516
 13.617 67.133 12.031 67.098 c 10.438 67.121 8.898 66.508 7.758 65.395 c
 6.609 64.324 5.973 62.82 6 61.254 c 6 36.875 l 6 35.289 6.586 33.93 7.758
 32.797 c f
Q Q
showpage
%%Trailer
%%EOF
