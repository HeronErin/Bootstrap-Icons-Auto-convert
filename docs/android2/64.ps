%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 0 45 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 0 45 48
48 48 cairo_set_page_size
%%EndPageSetup
q 3 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
30.641 4.414 m 32.715 0.633 l 32.852 0.387 32.805 0.191 32.57 0.059 c 32.312
 -0.055 32.121 0.004 31.984 0.234 c 29.883 4.043 l 29.883 4.039 l 28.035
 3.227 26.035 2.812 24.016 2.824 c 21.953 2.824 19.996 3.227 18.148 4.035
 c 16.047 0.227 l 15.91 0 15.715 -0.055 15.461 0.059 c 15.227 0.195 15.18
 0.391 15.312 0.637 c 17.387 4.414 l 15.352 5.418 13.617 6.949 12.367 8.844
 c 11.141 10.684 10.488 12.848 10.5 15.059 c 37.5 15.059 l 37.5 12.809 36.879
 10.738 35.633 8.844 c 34.387 6.953 32.664 5.426 30.641 4.414 c h
18.66 9.91 m 18.449 10.121 18.16 10.242 17.859 10.238 c 17.562 10.246 17.273
 10.125 17.07 9.91 c 16.863 9.699 16.746 9.414 16.75 9.117 c 16.746 8.82
 16.859 8.535 17.07 8.32 c 17.273 8.105 17.562 7.984 17.859 7.992 c 18.168
 7.992 18.438 8.102 18.66 8.32 c 18.879 8.527 19 8.816 18.996 9.117 c 19
 9.418 18.875 9.703 18.66 9.91 c 30.965 9.91 m 30.758 10.125 30.473 10.246
 30.176 10.238 c 29.875 10.242 29.586 10.125 29.371 9.91 c 29.156 9.703 
29.035 9.418 29.035 9.117 c 29.035 8.809 29.148 8.543 29.371 8.32 c 29.586
 8.105 29.875 7.988 30.176 7.992 c 30.484 7.992 30.746 8.102 30.961 8.32
 c 30.965 8.32 l 31.172 8.535 31.289 8.82 31.285 9.117 c 31.285 9.422 31.18
 9.688 30.965 9.91 c 10.5 35.309 m 10.5 36.191 10.812 36.941 11.434 37.559
 c 12.055 38.172 12.816 38.477 13.715 38.48 c 15.988 38.48 l 16.02 45.027
 l 16.02 45.855 16.312 46.559 16.895 47.137 c 17.445 47.699 18.203 48.012
 18.992 48 c 19.793 48.016 20.562 47.703 21.121 47.137 c 21.695 46.586 22.016
 45.82 22 45.027 c 22 38.48 l 26.027 38.48 l 26.027 45.027 l 26.027 45.855
 26.32 46.559 26.902 47.137 c 27.465 47.703 28.234 48.016 29.035 48 c 29.832
 48.016 30.602 47.703 31.164 47.137 c 31.738 46.586 32.055 45.82 32.039 
45.027 c 32.039 38.48 l 34.32 38.48 l 35.191 38.48 35.941 38.172 36.566 
37.555 c 37.188 36.941 37.496 36.191 37.5 35.305 c 37.5 16.094 l 10.5 16.094
 l h
41.984 15.547 m 41.984 15.551 l 41.199 15.535 40.441 15.836 39.879 16.383
 c 39.305 16.91 38.98 17.656 39 18.438 c 39 30.625 l 39 31.438 39.293 32.129
 39.879 32.695 c 40.438 33.254 41.195 33.562 41.984 33.551 c 42.824 33.551
 43.535 33.266 44.121 32.699 c 44.121 32.695 l 44.695 32.164 45.016 31.41
 45 30.629 c 45 18.438 l 45.02 17.656 44.695 16.91 44.121 16.383 c 43.547
 15.832 42.781 15.531 41.984 15.551 c 3.879 16.398 m 4.449 15.844 5.219 
15.539 6.016 15.551 c 6.836 15.551 7.539 15.832 8.121 16.398 c 8.691 16.922
 9.012 17.664 9 18.438 c 9 30.629 l 9.016 31.406 8.699 32.16 8.137 32.695
 c 7.574 33.258 6.809 33.566 6.016 33.551 c 5.219 33.559 4.449 33.254 3.879
 32.695 c 3.305 32.164 2.984 31.41 3 30.629 c 3 18.438 l 3 17.645 3.293 
16.965 3.879 16.398 c f
Q Q
showpage
%%Trailer
%%EOF
