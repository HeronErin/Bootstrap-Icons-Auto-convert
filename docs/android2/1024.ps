%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 47 0 721 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 47 0 721 768
768 768 cairo_set_page_size
%%EndPageSetup
q 47 0 674 768 rectclip
1 0 0 -1 0 768 cm q
0 g
490.223 70.609 m 523.391 10.129 l 525.598 6.16 524.832 3.09 521.086 0.914
 c 516.988 -0.91 513.871 0.02 511.727 3.699 c 478.125 64.66 l 478.129 64.656
 l 448.547 51.648 416.555 45.008 384.238 45.168 c 351.215 45.168 319.918
 51.633 290.352 64.559 c 256.75 3.598 l 254.574 0.016 251.457 -0.863 247.391
 0.961 c 243.648 3.168 242.863 6.258 245.039 10.227 c 278.207 70.66 l 278.207
 70.656 l 245.609 86.699 217.887 111.156 197.902 141.504 c 178.25 170.938
 167.836 205.57 168 240.961 c 600 240.961 l 600 204.961 590.031 171.809 
570.098 141.504 c 550.199 111.246 522.641 86.801 490.223 70.656 c h
298.559 158.543 m 295.18 161.969 290.555 163.871 285.742 163.824 c 280.977
 163.934 276.387 162.016 273.121 158.543 c 269.785 155.176 267.938 150.613
 267.984 145.871 c 267.922 141.117 269.773 136.531 273.121 133.152 c 276.387
 129.68 280.977 127.762 285.742 127.871 c 290.703 127.871 294.973 129.633
 298.559 133.152 c 302.043 136.461 303.988 141.07 303.938 145.871 c 303.977
 150.66 302.031 155.246 298.559 158.543 c 495.406 158.543 m 492.152 162.004
 487.582 163.922 482.832 163.824 c 478.004 163.887 473.359 161.98 469.969
 158.543 c 466.5 155.246 464.551 150.66 464.594 145.871 c 464.594 140.941
 466.387 136.703 469.969 133.152 c 473.359 129.715 478.004 127.809 482.832
 127.871 c 487.793 127.871 491.984 129.633 495.406 133.152 c 498.754 136.531
 500.605 141.117 500.543 145.871 c 500.543 150.766 498.832 154.992 495.406
 158.543 c 168 564.961 m 168 579.074 172.977 591.074 182.93 600.961 c 192.883
 610.754 205.043 615.664 219.41 615.695 c 255.793 615.695 l 256.273 720.43
 l 256.273 733.676 260.945 744.926 270.289 754.172 c 270.289 754.176 l 279.121
 763.191 291.266 768.188 303.887 768 c 316.664 768.266 328.984 763.266 337.969
 754.176 c 347.141 745.375 352.219 733.141 351.984 720.434 c 351.984 615.699
 l 416.449 615.699 l 416.449 720.434 l 416.449 733.68 421.121 744.93 430.465
 754.176 c 439.445 763.266 451.77 768.266 464.543 768 c 477.32 768.266 489.641
 763.266 498.625 754.176 c 507.797 745.375 512.875 733.141 512.641 720.434
 c 512.641 615.699 l 549.121 615.699 l 563.074 615.699 575.059 610.77 585.074
 600.914 c 594.996 591.09 599.969 579.09 600.004 564.914 c 600 257.52 l 
168 257.52 l h
671.762 248.785 m 659.195 248.555 647.062 253.359 638.062 262.129 c 628.848
 270.543 623.719 282.531 624 295.008 c 624 490.031 l 624 503.023 628.688
 514.062 638.062 523.152 c 646.984 532.074 659.145 536.992 671.762 536.785
 c 685.203 536.785 696.594 532.242 705.938 523.152 c 715.113 514.609 720.227
 502.566 720 490.031 c 720 295.008 l 720.281 282.531 715.152 270.543 705.938
 262.129 c 696.762 253.328 684.469 248.531 671.762 248.785 c 62.066 262.371
 m 62.062 262.367 l 71.199 253.48 83.496 248.594 96.238 248.785 c 109.359
 248.785 120.59 253.312 129.934 262.371 c 129.938 262.367 l 139.09 270.727
 144.211 282.613 144 295.008 c 144 490.031 l 144.227 502.52 139.215 514.531
 130.176 523.152 c 121.195 532.133 108.938 537.059 96.238 536.785 c 83.488
 536.961 71.191 532.055 62.062 523.152 c 52.887 514.609 47.773 502.566 48
 490.031 c 48 295.008 l 48 282.336 52.688 271.457 62.062 262.367 c f
Q Q
showpage
%%Trailer
%%EOF
