%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.828 0.551 m 4.086 0.078 l 4.102 0.047 4.098 0.023 4.066 0.008 c 4.035
 -0.008 4.012 0 3.992 0.031 c 3.73 0.508 l 3.734 0.504 l 3.504 0.402 3.254
 0.352 3 0.352 c 2.742 0.352 2.496 0.402 2.266 0.504 c 2.004 0.027 l 1.988
 0 1.965 -0.008 1.934 0.008 c 1.906 0.023 1.898 0.051 1.914 0.082 c 2.172
 0.555 l 2.172 0.551 l 1.918 0.676 1.703 0.867 1.547 1.105 c 1.391 1.336
 1.312 1.605 1.312 1.883 c 4.688 1.883 l 4.688 1.602 4.609 1.344 4.453 1.105
 c 4.297 0.867 4.082 0.68 3.828 0.551 c h
2.332 1.238 m 2.305 1.266 2.27 1.281 2.23 1.281 c 2.195 1.281 2.16 1.266
 2.133 1.238 c 2.109 1.211 2.094 1.176 2.094 1.141 c 2.094 1.102 2.109 1.066
 2.133 1.039 c 2.16 1.012 2.195 1 2.23 1 c 2.27 1 2.301 1.016 2.332 1.043
 c 2.332 1.039 l 2.359 1.066 2.375 1.102 2.375 1.141 c 2.375 1.176 2.359
 1.211 2.332 1.238 c 3.871 1.238 m 3.844 1.266 3.809 1.281 3.773 1.281 c
 3.734 1.281 3.699 1.266 3.672 1.238 c 3.645 1.211 3.629 1.176 3.629 1.141
 c 3.629 1.102 3.645 1.07 3.672 1.043 c 3.672 1.039 l 3.699 1.012 3.734 
1 3.773 1 c 3.812 1 3.844 1.016 3.871 1.043 c 3.871 1.039 l 3.898 1.066 
3.91 1.102 3.91 1.141 c 3.91 1.18 3.898 1.211 3.871 1.238 c 1.312 4.414 
m 1.312 4.523 1.352 4.617 1.43 4.695 c 1.508 4.773 1.602 4.809 1.715 4.809
 c 2 4.809 l 2.004 5.625 l 2.004 5.727 2.039 5.816 2.113 5.887 c 2.113 5.891
 l 2.18 5.961 2.277 6 2.375 6 c 2.473 6.004 2.57 5.965 2.641 5.891 c 2.711
 5.824 2.75 5.727 2.75 5.629 c 2.75 4.812 l 3.254 4.812 l 3.254 5.629 l 
3.254 5.73 3.289 5.82 3.363 5.891 c 3.434 5.965 3.531 6.004 3.629 6 c 3.73
 6.004 3.824 5.965 3.895 5.891 c 3.969 5.824 4.008 5.727 4.004 5.629 c 4.004
 4.812 l 4.289 4.812 l 4.398 4.812 4.492 4.773 4.57 4.695 c 4.648 4.617 
4.688 4.523 4.688 4.414 c 4.688 2.012 l 1.312 2.012 l h
5.25 1.945 m 5.148 1.941 5.055 1.98 4.984 2.047 c 4.914 2.113 4.871 2.207
 4.875 2.305 c 4.875 3.828 l 4.875 3.93 4.91 4.016 4.984 4.086 c 5.055 4.156
 5.148 4.195 5.25 4.195 c 5.355 4.195 5.445 4.16 5.516 4.09 c 5.516 4.086
 l 5.586 4.02 5.625 3.926 5.625 3.828 c 5.625 2.305 l 5.629 2.207 5.586 
2.113 5.516 2.047 c 5.445 1.98 5.348 1.941 5.25 1.945 c 0.488 2.051 m 0.484
 2.051 l 0.555 1.98 0.652 1.941 0.75 1.945 c 0.852 1.945 0.941 1.98 1.012
 2.051 c 1.016 2.051 l 1.086 2.113 1.125 2.207 1.125 2.305 c 1.125 3.828
 l 1.125 3.926 1.086 4.02 1.016 4.086 c 0.945 4.156 0.852 4.195 0.75 4.195
 c 0.652 4.195 0.555 4.156 0.484 4.086 c 0.414 4.02 0.375 3.926 0.375 3.828
 c 0.375 2.305 l 0.375 2.207 0.41 2.121 0.484 2.051 c f
Q Q
showpage
%%Trailer
%%EOF
