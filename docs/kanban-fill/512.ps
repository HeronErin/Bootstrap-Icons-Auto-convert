%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 12 0 372 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 12 0 372 384
384 384 cairo_set_page_size
%%EndPageSetup
q 12 0 360 384 rectclip
1 0 0 -1 0 384 cm q
0 g
60 0 m 47.27 0 35.062 5.059 26.059 14.059 c 17.059 23.062 12 35.27 12 48
 c 12 336 l 12 348.73 17.059 360.938 26.059 369.941 c 35.062 378.941 47.27
 384 60 384 c 324 384 l 336.73 384 348.938 378.941 357.941 369.941 c 366.941
 360.938 372 348.73 372 336 c 372 48 l 372 35.27 366.941 23.062 357.941 
14.059 c 348.938 5.059 336.73 0 324 0 c h
180 48 m 204 48 l 210.363 48 216.469 50.527 220.969 55.031 c 225.473 59.531
 228 65.637 228 72 c 228 144 l 228 150.363 225.473 156.469 220.969 160.969
 c 216.469 165.473 210.363 168 204 168 c 180 168 l 173.637 168 167.531 165.473
 163.031 160.969 c 158.527 156.469 156 150.363 156 144 c 156 72 l 156 65.637
 158.527 59.531 163.031 55.031 c 167.531 50.527 173.637 48 180 48 c 60 72
 m 60 65.637 62.527 59.531 67.031 55.031 c 71.531 50.527 77.637 48 84 48
 c 108 48 l 114.363 48 120.469 50.527 124.969 55.031 c 129.473 59.531 132
 65.637 132 72 c 132 240 l 132 246.363 129.473 252.469 124.969 256.969 c
 120.469 261.473 114.363 264 108 264 c 84 264 l 77.637 264 71.531 261.473
 67.031 256.969 c 62.527 252.469 60 246.363 60 240 c h
276 48 m 300 48 l 306.363 48 312.469 50.527 316.969 55.031 c 321.473 59.531
 324 65.637 324 72 c 324 312 l 324 318.363 321.473 324.469 316.969 328.969
 c 312.469 333.473 306.363 336 300 336 c 276 336 l 269.637 336 263.531 333.473
 259.031 328.969 c 254.527 324.469 252 318.363 252 312 c 252 72 l 252 65.637
 254.527 59.531 259.031 55.031 c 263.531 50.527 269.637 48 276 48 c f
Q Q
showpage
%%Trailer
%%EOF
