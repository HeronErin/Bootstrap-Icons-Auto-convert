%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 48 0 1488 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 48 0 1488 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 48 0 1440 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
240 0 m 189.078 0 140.242 20.227 104.234 56.234 c 68.227 92.242 48 141.078
 48 192 c 48 1344 l 48 1377.703 56.871 1410.812 73.723 1440 c 90.574 1469.188
 114.812 1493.426 144 1510.277 c 173.188 1527.129 206.297 1536 240 1536 
c 1296 1536 l 1329.703 1536 1362.812 1527.129 1392 1510.277 c 1421.188 1493.426
 1445.426 1469.188 1462.277 1440 c 1479.129 1410.812 1488 1377.703 1488 
1344 c 1488 192 l 1488 158.297 1479.129 125.188 1462.277 96 c 1445.426 66.812
 1421.188 42.574 1392 25.723 c 1362.812 8.871 1329.703 0 1296 0 c h
720 192 m 816 192 l 841.461 192 865.879 202.113 883.883 220.117 c 901.887
 238.121 912 262.539 912 288 c 912 576 l 912 601.461 901.887 625.879 883.883
 643.883 c 865.879 661.887 841.461 672 816 672 c 720 672 l 694.539 672 670.121
 661.887 652.117 643.883 c 634.113 625.879 624 601.461 624 576 c 624 288
 l 624 262.539 634.113 238.121 652.117 220.117 c 670.121 202.113 694.539
 192 720 192 c 240 288 m 240 262.539 250.113 238.121 268.117 220.117 c 286.121
 202.113 310.539 192 336 192 c 432 192 l 457.461 192 481.879 202.113 499.883
 220.117 c 517.887 238.121 528 262.539 528 288 c 528 960 l 528 985.461 517.887
 1009.879 499.883 1027.883 c 481.879 1045.887 457.461 1056 432 1056 c 336
 1056 l 310.539 1056 286.121 1045.887 268.117 1027.883 c 250.113 1009.879
 240 985.461 240 960 c h
1104 192 m 1200 192 l 1225.461 192 1249.879 202.113 1267.883 220.117 c 
1285.887 238.121 1296 262.539 1296 288 c 1296 1248 l 1296 1273.461 1285.887
 1297.879 1267.883 1315.883 c 1249.879 1333.887 1225.461 1344 1200 1344 
c 1104 1344 l 1078.539 1344 1054.121 1333.887 1036.117 1315.883 c 1018.113
 1297.879 1008 1273.461 1008 1248 c 1008 288 l 1008 262.539 1018.113 238.121
 1036.117 220.117 c 1054.121 202.113 1078.539 192 1104 192 c f
Q Q
showpage
%%Trailer
%%EOF
