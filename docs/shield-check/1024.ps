%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
256.223 76.32 m 210.508 88.91 165.102 102.609 120.047 117.406 c 115.93 
118.734 112.27 121.195 109.488 124.508 c 106.703 127.816 104.906 131.844
 104.305 136.129 c 77.711 335.664 139.152 481.25 212.449 577.152 c 243.469
 618.176 280.473 654.305 322.223 684.336 c 338.832 696.047 353.52 704.496
 365.086 709.922 c 370.848 712.641 375.535 714.531 379.148 715.586 c 379.152
 715.586 l 380.746 716.066 382.363 716.469 384 716.785 c 385.621 716.465
 387.223 716.066 388.801 715.586 c 392.449 714.496 397.152 712.609 402.914
 709.922 c 414.434 704.496 429.172 696 445.777 684.336 c 487.527 654.305
 524.531 618.176 555.551 577.152 c 628.848 481.297 690.285 335.664 663.695
 136.129 c 663.094 131.844 661.297 127.816 658.512 124.508 c 655.73 121.195
 652.07 118.734 647.953 117.406 c 616.707 107.184 563.953 90.527 511.777
 76.367 c 458.496 61.922 409.488 51.215 384 51.215 c 358.559 51.215 309.504
 61.918 256.223 76.367 c h
243.457 26.879 m 295.535 12.719 350.879 0 384 0 c 417.121 0 472.465 12.719
 524.543 26.879 c 577.824 41.277 631.535 58.32 663.117 68.641 c 663.121 
68.641 l 676.324 73 688.031 81 696.898 91.715 c 705.762 102.43 711.422 115.426
 713.23 129.215 c 741.84 344.109 675.453 503.375 594.91 608.734 c 560.742
 653.797 520.02 693.484 474.098 726.48 c 458.234 737.926 441.402 747.965
 423.793 756.48 c 410.352 762.816 395.906 768 384 768 c 372.098 768 357.695
 762.816 344.207 756.48 c 326.598 747.965 309.766 737.926 293.902 726.48
 c 247.98 693.484 207.258 653.797 173.09 608.734 c 92.543 503.375 26.16 
344.113 54.77 129.215 c 56.578 115.426 62.238 102.43 71.102 91.715 c 79.969
 81 91.676 73 104.879 68.641 c 150.73 53.617 196.938 39.691 243.457 26.879
 c f
520.992 247.008 m 525.508 251.512 528.043 257.625 528.043 264 c 528.043
 270.375 525.508 276.488 520.992 280.992 c 376.992 424.992 l 372.488 429.508
 366.375 432.043 360 432.043 c 353.625 432.043 347.512 429.508 343.008 424.992
 c 271.008 352.992 l 264.938 346.922 262.566 338.074 264.789 329.781 c 267.012
 321.488 273.488 315.012 281.781 312.789 c 290.074 310.566 298.922 312.938
 304.992 319.008 c 360 374.062 l 487.008 247.008 l 491.512 242.492 497.625
 239.957 504 239.957 c 510.375 239.957 516.488 242.492 520.992 247.008 c
 f
Q Q
showpage
%%Trailer
%%EOF
