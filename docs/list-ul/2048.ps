%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 336 1440 1296
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 336 1440 1296
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 336 1344 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 1104 m 480 1091.27 485.059 1079.062 494.059 1070.059 c 503.062 1061.059
 515.27 1056 528 1056 c 1392 1056 l 1409.148 1056 1424.996 1065.148 1433.57
 1080 c 1442.145 1094.852 1442.145 1113.148 1433.57 1128 c 1424.996 1142.852
 1409.148 1152 1392 1152 c 528 1152 l 515.27 1152 503.062 1146.941 494.059
 1137.941 c 485.059 1128.938 480 1116.73 480 1104 c 480 720 m 480 707.27
 485.059 695.062 494.059 686.059 c 503.062 677.059 515.27 672 528 672 c 
1392 672 l 1409.148 672 1424.996 681.148 1433.57 696 c 1442.145 710.852 
1442.145 729.148 1433.57 744 c 1424.996 758.852 1409.148 768 1392 768 c 
528 768 l 515.27 768 503.062 762.941 494.059 753.941 c 485.059 744.938 480
 732.73 480 720 c 480 336 m 480 323.27 485.059 311.062 494.059 302.059 c
 503.062 293.059 515.27 288 528 288 c 1392 288 l 1409.148 288 1424.996 297.148
 1433.57 312 c 1442.145 326.852 1442.145 345.148 1433.57 360 c 1424.996 
374.852 1409.148 384 1392 384 c 528 384 l 515.27 384 503.062 378.941 494.059
 369.941 c 485.059 360.938 480 348.73 480 336 c 192 432 m 226.297 432 257.988
 413.703 275.137 384 c 292.289 354.297 292.289 317.703 275.137 288 c 257.988
 258.297 226.297 240 192 240 c 157.703 240 126.012 258.297 108.863 288 c
 91.711 317.703 91.711 354.297 108.863 384 c 126.012 413.703 157.703 432
 192 432 c 192 816 m 226.297 816 257.988 797.703 275.137 768 c 292.289 738.297
 292.289 701.703 275.137 672 c 257.988 642.297 226.297 624 192 624 c 157.703
 624 126.012 642.297 108.863 672 c 91.711 701.703 91.711 738.297 108.863
 768 c 126.012 797.703 157.703 816 192 816 c 192 1200 m 226.297 1200 257.988
 1181.703 275.137 1152 c 292.289 1122.297 292.289 1085.703 275.137 1056 
c 257.988 1026.297 226.297 1008 192 1008 c 157.703 1008 126.012 1026.297
 108.863 1056 c 91.711 1085.703 91.711 1122.297 108.863 1152 c 126.012 1181.703
 157.703 1200 192 1200 c f*
Q Q
showpage
%%Trailer
%%EOF
