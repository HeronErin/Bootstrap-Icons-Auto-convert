%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 168 720 648
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 168 720 648
768 768 cairo_set_page_size
%%EndPageSetup
q 48 168 672 480 rectclip
1 0 0 -1 0 768 cm q
0 g
240 552 m 240 545.637 242.527 539.531 247.031 535.031 c 251.531 530.527
 257.637 528 264 528 c 696 528 l 704.574 528 712.496 532.574 716.785 540
 c 721.07 547.426 721.07 556.574 716.785 564 c 712.496 571.426 704.574 576
 696 576 c 264 576 l 257.637 576 251.531 573.473 247.031 568.969 c 242.527
 564.469 240 558.363 240 552 c 240 360 m 240 353.637 242.527 347.531 247.031
 343.031 c 251.531 338.527 257.637 336 264 336 c 696 336 l 704.574 336 712.496
 340.574 716.785 348 c 721.07 355.426 721.07 364.574 716.785 372 c 712.496
 379.426 704.574 384 696 384 c 264 384 l 257.637 384 251.531 381.473 247.031
 376.969 c 242.527 372.469 240 366.363 240 360 c 240 168 m 240 161.637 242.527
 155.531 247.031 151.031 c 251.531 146.527 257.637 144 264 144 c 696 144
 l 704.574 144 712.496 148.574 716.785 156 c 721.07 163.426 721.07 172.574
 716.785 180 c 712.496 187.426 704.574 192 696 192 c 264 192 l 257.637 192
 251.531 189.473 247.031 184.969 c 242.527 180.469 240 174.363 240 168 c
 96 216 m 113.148 216 128.996 206.852 137.57 192 c 146.145 177.148 146.145
 158.852 137.57 144 c 128.996 129.148 113.148 120 96 120 c 78.852 120 63.004
 129.148 54.43 144 c 45.855 158.852 45.855 177.148 54.43 192 c 63.004 206.852
 78.852 216 96 216 c 96 408 m 113.148 408 128.996 398.852 137.57 384 c 146.145
 369.148 146.145 350.852 137.57 336 c 128.996 321.148 113.148 312 96 312
 c 78.852 312 63.004 321.148 54.43 336 c 45.855 350.852 45.855 369.148 54.43
 384 c 63.004 398.852 78.852 408 96 408 c 96 600 m 113.148 600 128.996 590.852
 137.57 576 c 146.145 561.148 146.145 542.852 137.57 528 c 128.996 513.148
 113.148 504 96 504 c 78.852 504 63.004 513.148 54.43 528 c 45.855 542.852
 45.855 561.148 54.43 576 c 63.004 590.852 78.852 600 96 600 c f*
Q Q
showpage
%%Trailer
%%EOF
