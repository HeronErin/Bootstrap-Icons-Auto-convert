%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.938 0 m 0.875 0 0.812 0.008 0.754 0.02 c 0.828 0.387 l 0.863 0.379 0.902
 0.375 0.938 0.375 c 1.109 0.375 l 1.109 0 l h
1.797 0 m 1.453 0 l 1.453 0.375 l 1.797 0.375 l h
2.484 0 m 2.141 0 l 2.141 0.375 l 2.484 0.375 l h
3.172 0 m 2.828 0 l 2.828 0.375 l 3.172 0.375 l h
3.859 0 m 3.516 0 l 3.516 0.375 l 3.859 0.375 l h
4.547 0 m 4.203 0 l 4.203 0.375 l 4.547 0.375 l h
5.062 0 m 4.891 0 l 4.891 0.375 l 5.062 0.375 l 5.102 0.375 5.137 0.379
 5.172 0.387 c 5.246 0.02 l 5.184 0.008 5.125 0 5.062 0 c 5.844 0.418 m 
5.773 0.312 5.688 0.227 5.582 0.156 c 5.375 0.469 l 5.438 0.512 5.488 0.562
 5.531 0.625 c h
0.418 0.156 m 0.312 0.227 0.227 0.312 0.156 0.418 c 0.469 0.625 l 0.512
 0.562 0.562 0.512 0.625 0.469 c h
6 0.938 m 6 0.875 5.992 0.812 5.98 0.754 c 5.613 0.828 l 5.621 0.863 5.625
 0.898 5.625 0.938 c 5.625 1.109 l 6 1.109 l h
0.02 0.754 m 0.008 0.816 0 0.875 0 0.938 c 0 1.109 l 0.375 1.109 l 0.375
 0.938 l 0.375 0.898 0.379 0.863 0.387 0.828 c h
0 1.453 m 0 1.797 l 0.375 1.797 l 0.375 1.453 l h
6 1.797 m 6 1.453 l 5.625 1.453 l 5.625 1.797 l h
0 2.141 m 0 2.484 l 0.375 2.484 l 0.375 2.141 l h
6 2.484 m 6 2.141 l 5.625 2.141 l 5.625 2.484 l h
0 2.828 m 0 3.172 l 0.375 3.172 l 0.375 2.828 l h
5.625 3.172 m 6 3.172 l 6 2.828 l 5.625 2.828 l h
0 3.516 m 0 3.859 l 0.375 3.859 l 0.375 3.516 l h
6 3.859 m 6 3.516 l 5.625 3.516 l 5.625 3.859 l h
0 4.203 m 0 4.547 l 0.375 4.547 l 0.375 4.203 l h
6 4.547 m 6 4.203 l 5.625 4.203 l 5.625 4.547 l h
0 4.891 m 0 5.062 l 0 5.125 0.008 5.188 0.02 5.246 c 0.387 5.172 l 0.379
 5.137 0.375 5.098 0.375 5.062 c 0.375 4.891 l h
6 5.062 m 6 4.891 l 5.625 4.891 l 5.625 5.062 l 5.625 5.102 5.621 5.137
 5.613 5.172 c 5.98 5.246 l 5.992 5.188 6 5.125 6 5.062 c 0.156 5.582 m 
0.227 5.684 0.312 5.773 0.414 5.84 c 0.621 5.527 l 0.625 5.531 l 0.562 5.488
 0.512 5.438 0.469 5.375 c h
5.582 5.84 m 5.684 5.77 5.773 5.684 5.84 5.582 c 5.527 5.375 l 5.484 5.438
 5.434 5.488 5.371 5.531 c 5.578 5.844 l h
0.754 5.98 m 0.812 5.992 0.875 6 0.938 6 c 1.109 6 l 1.109 5.625 l 0.938
 5.625 l 0.898 5.625 0.863 5.621 0.828 5.613 c h
5.062 6 m 5.125 6 5.188 5.992 5.246 5.98 c 5.172 5.613 l 5.137 5.621 5.098
 5.625 5.062 5.625 c 4.891 5.625 l 4.891 6 l h
1.453 6 m 1.797 6 l 1.797 5.625 l 1.453 5.625 l h
2.141 6 m 2.484 6 l 2.484 5.625 l 2.141 5.625 l h
2.828 5.625 m 2.828 6 l 3.172 6 l 3.172 5.625 l h
3.516 6 m 3.859 6 l 3.859 5.625 l 3.516 5.625 l h
4.203 6 m 4.547 6 l 4.547 5.625 l 4.203 5.625 l h
3.188 1.688 m 3.188 1.438 2.812 1.438 2.812 1.688 c 2.812 2.812 l 1.688
 2.812 l 1.438 2.812 1.438 3.188 1.688 3.188 c 2.812 3.188 l 2.812 4.312
 l 2.812 4.562 3.188 4.562 3.188 4.312 c 3.188 3.188 l 4.312 3.188 l 4.562
 3.188 4.562 2.812 4.312 2.812 c 3.188 2.812 l h
3.188 1.688 m f
Q Q
showpage
%%Trailer
%%EOF
