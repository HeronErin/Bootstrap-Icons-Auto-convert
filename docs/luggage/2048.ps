%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
240 96 m 227.27 96 215.062 101.059 206.059 110.059 c 197.059 119.062 192
 131.27 192 144 c 192 480 l 144 480 l 105.809 480 69.184 495.172 42.176 
522.176 c 15.172 549.184 0 585.809 0 624 c 0 1296 l -0.016 1325.793 9.211
 1354.855 26.402 1379.184 c 43.598 1403.512 67.914 1421.91 96 1431.84 c 
96 1464 l 96 1489.723 109.723 1513.492 132 1526.355 c 154.277 1539.215 181.723
 1539.215 204 1526.355 c 226.277 1513.492 240 1489.723 240 1464 c 240 1440
 l 384 1440 l 384 1344 l 144 1344 l 131.27 1344 119.062 1338.941 110.059
 1329.941 c 101.059 1320.938 96 1308.73 96 1296 c 96 624 l 96 611.27 101.059
 599.062 110.059 590.059 c 119.062 581.059 131.27 576 144 576 c 624 576 
l 636.73 576 648.938 581.059 657.941 590.059 c 666.941 599.062 672 611.27
 672 624 c 672 672 l 768 672 l 768 624 l 768 585.809 752.828 549.184 725.824
 522.176 c 698.816 495.172 662.191 480 624 480 c 576 480 l 576 144 l 576
 131.27 570.941 119.062 561.941 110.059 c 552.938 101.059 540.73 96 528 
96 c h
480 480 m 288 480 l 288 192 l 480 192 l h
480 480 m f
288 720 m 288 702.852 278.852 687.004 264 678.43 c 249.148 669.855 230.852
 669.855 216 678.43 c 201.148 687.004 192 702.852 192 720 c 192 1200 l 192
 1217.148 201.148 1232.996 216 1241.57 c 230.852 1250.145 249.148 1250.145
 264 1241.57 c 278.852 1232.996 288 1217.148 288 1200 c h
1056 576 m 1094.191 576 1130.816 591.172 1157.824 618.176 c 1184.828 645.184
 1200 681.809 1200 720 c 1200 768 l 1392 768 l 1430.191 768 1466.816 783.172
 1493.824 810.176 c 1520.828 837.184 1536 873.809 1536 912 c 1536 1392 l
 1536 1430.191 1520.828 1466.816 1493.824 1493.824 c 1466.816 1520.828 1430.191
 1536 1392 1536 c 624 1536 l 585.809 1536 549.184 1520.828 522.176 1493.824
 c 495.172 1466.816 480 1430.191 480 1392 c 480 912 l 480 873.809 495.172
 837.184 522.176 810.176 c 549.184 783.172 585.809 768 624 768 c 816 768
 l 816 720 l 816 681.809 831.172 645.184 858.176 618.176 c 885.184 591.172
 921.809 576 960 576 c h
912 720 m 912 768 l 1104 768 l 1104 720 l 1104 707.27 1098.941 695.062 
1089.941 686.059 c 1080.938 677.059 1068.73 672 1056 672 c 960 672 l 947.27
 672 935.062 677.059 926.059 686.059 c 917.059 695.062 912 707.27 912 720
 c 576 912 m 576 1392 l 576 1404.73 581.059 1416.938 590.059 1425.941 c 
599.062 1434.941 611.27 1440 624 1440 c 672 1440 l 672 864 l 624 864 l 611.27
 864 599.062 869.059 590.059 878.059 c 581.059 887.062 576 899.27 576 912
 c 1248 1440 m 1248 864 l 768 864 l 768 1440 l h
1392 1440 m 1404.73 1440 1416.938 1434.941 1425.941 1425.941 c 1434.941
 1416.938 1440 1404.73 1440 1392 c 1440 912 l 1440 899.27 1434.941 887.062
 1425.941 878.059 c 1416.938 869.059 1404.73 864 1392 864 c 1344 864 l 1344
 1440 l h
1392 1440 m f
Q Q
showpage
%%Trailer
%%EOF
