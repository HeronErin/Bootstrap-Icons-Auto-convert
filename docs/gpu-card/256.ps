%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 168 rectclip
1 0 0 -1 0 192 cm q
0 g
48 96 m 48 89.57 51.43 83.625 57 80.41 c 62.57 77.195 69.43 77.195 75 80.41
 c 80.57 83.625 84 89.57 84 96 c 84 102.43 80.57 108.375 75 111.59 c 69.43
 114.805 62.57 114.805 57 111.59 c 51.43 108.375 48 102.43 48 96 c 138 78
 m 131.57 78 125.625 81.43 122.41 87 c 119.195 92.57 119.195 99.43 122.41
 105 c 125.625 110.57 131.57 114 138 114 c 144.43 114 150.375 110.57 153.59
 105 c 156.805 99.43 156.805 92.57 153.59 87 c 150.375 81.43 144.43 78 138
 78 c f
0 18 m 0 14.688 2.688 12 6 12 c 18 12 l 19.59 12 21.117 12.633 22.242 13.758
 c 23.367 14.883 24 16.41 24 18 c 24 48 l 186 48 l 187.59 48 189.117 48.633
 190.242 49.758 c 191.367 50.883 192 52.41 192 54 c 192 138 l 192 139.59
 191.367 141.117 190.242 142.242 c 189.117 143.367 187.59 144 186 144 c 
24 144 l 24 174 l 24 177.312 21.312 180 18 180 c 14.688 180 12 177.312 12
 174 c 12 24 l 6 24 l 2.688 24 0 21.312 0 18 c 66 66 m 55.281 66 45.379 
71.719 40.02 81 c 34.66 90.281 34.66 101.719 40.02 111 c 45.379 120.281 
55.281 126 66 126 c 76.719 126 86.621 120.281 91.98 111 c 97.34 101.719 
97.34 90.281 91.98 81 c 86.621 71.719 76.719 66 66 66 c 108 96 m 108 106.719
 113.719 116.621 123 121.98 c 132.281 127.34 143.719 127.34 153 121.98 c
 162.281 116.621 168 106.719 168 96 c 168 85.281 162.281 75.379 153 70.02
 c 143.719 64.66 132.281 64.66 123 70.02 c 113.719 75.379 108 85.281 108
 96 c f
36 150 m 78 150 l 78 162 l 78 163.59 77.367 165.117 76.242 166.242 c 75.117
 167.367 73.59 168 72 168 c 42 168 l 38.688 168 36 165.312 36 162 c h
84 162 m 84 150 l 132 150 l 132 162 l 132 163.59 131.367 165.117 130.242
 166.242 c 129.117 167.367 127.59 168 126 168 c 90 168 l 86.688 168 84 165.312
 84 162 c f
Q Q
showpage
%%Trailer
%%EOF
