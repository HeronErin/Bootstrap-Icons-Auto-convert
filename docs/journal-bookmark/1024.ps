%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 720 768 rectclip
1 0 0 -1 0 768 cm q
0 g
288 384 m 288 48 l 336 48 l 336 341.617 l 419.664 291.359 l 423.391 289.125
 427.656 287.945 432 287.945 c 436.344 287.945 440.609 289.125 444.336 291.359
 c 528 341.617 l 528 48 l 576 48 l 576 384 l 576 389.688 573.98 395.191 
570.305 399.527 c 566.625 403.867 561.523 406.758 555.914 407.684 c 550.301
 408.609 544.543 407.516 539.664 404.594 c 432 339.984 l 324.336 404.641
 l 319.453 407.566 313.688 408.66 308.07 407.73 c 302.453 406.797 297.352
 403.898 293.676 399.551 c 290 395.207 287.988 389.691 288 384 c f*
144 0 m 624 0 l 649.461 0 673.879 10.113 691.883 28.117 c 709.887 46.121
 720 70.539 720 96 c 720 672 l 720 697.461 709.887 721.879 691.883 739.883
 c 673.879 757.887 649.461 768 624 768 c 144 768 l 118.539 768 94.121 757.887
 76.117 739.883 c 58.113 721.879 48 697.461 48 672 c 48 624 l 96 624 l 96
 672 l 96 684.73 101.059 696.938 110.059 705.941 c 119.062 714.941 131.27
 720 144 720 c 624 720 l 636.73 720 648.938 714.941 657.941 705.941 c 666.941
 696.938 672 684.73 672 672 c 672 96 l 672 83.27 666.941 71.062 657.941 
62.059 c 648.938 53.059 636.73 48 624 48 c 144 48 l 131.27 48 119.062 53.059
 110.059 62.059 c 101.059 71.062 96 83.27 96 96 c 96 144 l 48 144 l 48 96
 l 48 70.539 58.113 46.121 76.117 28.117 c 94.121 10.113 118.539 0 144 0
 c f
48 240 m 48 216 l 48 207.426 52.574 199.504 60 195.215 c 67.426 190.93 
76.574 190.93 84 195.215 c 91.426 199.504 96 207.426 96 216 c 96 240 l 120
 240 l 128.574 240 136.496 244.574 140.785 252 c 145.07 259.426 145.07 268.574
 140.785 276 c 136.496 283.426 128.574 288 120 288 c 24 288 l 15.426 288
 7.504 283.426 3.215 276 c -1.07 268.574 -1.07 259.426 3.215 252 c 7.504
 244.574 15.426 240 24 240 c h
48 384 m 48 360 l 48 351.426 52.574 343.504 60 339.215 c 67.426 334.93 
76.574 334.93 84 339.215 c 91.426 343.504 96 351.426 96 360 c 96 384 l 120
 384 l 128.574 384 136.496 388.574 140.785 396 c 145.07 403.426 145.07 412.574
 140.785 420 c 136.496 427.426 128.574 432 120 432 c 24 432 l 15.426 432
 7.504 427.426 3.215 420 c -1.07 412.574 -1.07 403.426 3.215 396 c 7.504
 388.574 15.426 384 24 384 c h
48 528 m 48 504 l 48 495.426 52.574 487.504 60 483.215 c 67.426 478.93 
76.574 478.93 84 483.215 c 91.426 487.504 96 495.426 96 504 c 96 528 l 120
 528 l 128.574 528 136.496 532.574 140.785 540 c 145.07 547.426 145.07 556.574
 140.785 564 c 136.496 571.426 128.574 576 120 576 c 24 576 l 15.426 576
 7.504 571.426 3.215 564 c -1.07 556.574 -1.07 547.426 3.215 540 c 7.504
 532.574 15.426 528 24 528 c h
48 528 m f
Q Q
showpage
%%Trailer
%%EOF
