%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
520.992 343.008 m 525.508 347.512 528.043 353.625 528.043 360 c 528.043
 366.375 525.508 372.488 520.992 376.992 c 376.992 520.992 l 372.488 525.508
 366.375 528.043 360 528.043 c 353.625 528.043 347.512 525.508 343.008 520.992
 c 271.008 448.992 l 264.938 442.922 262.566 434.074 264.789 425.781 c 267.012
 417.488 273.488 411.012 281.781 408.789 c 290.074 406.566 298.922 408.938
 304.992 415.008 c 360 470.062 l 487.008 343.008 l 491.512 338.492 497.625
 335.957 504 335.957 c 510.375 335.957 516.488 338.492 520.992 343.008 c
 f*
192 72 m 144 72 l 118.539 72 94.121 82.113 76.117 100.117 c 58.113 118.121
 48 142.539 48 168 c 48 672 l 48 697.461 58.113 721.879 76.117 739.883 c
 94.121 757.887 118.539 768 144 768 c 624 768 l 649.461 768 673.879 757.887
 691.883 739.883 c 709.887 721.879 720 697.461 720 672 c 720 168 l 720 142.539
 709.887 118.121 691.883 100.117 c 673.879 82.113 649.461 72 624 72 c 576
 72 l 576 120 l 624 120 l 636.73 120 648.938 125.059 657.941 134.059 c 666.941
 143.062 672 155.27 672 168 c 672 672 l 672 684.73 666.941 696.938 657.941
 705.941 c 648.938 714.941 636.73 720 624 720 c 144 720 l 131.27 720 119.062
 714.941 110.059 705.941 c 101.059 696.938 96 684.73 96 672 c 96 168 l 96
 155.27 101.059 143.062 110.059 134.059 c 119.062 125.059 131.27 120 144
 120 c 192 120 l h
192 72 m f
456 48 m 462.363 48 468.469 50.527 472.969 55.031 c 477.473 59.531 480 
65.637 480 72 c 480 120 l 480 126.363 477.473 132.469 472.969 136.969 c 
468.469 141.473 462.363 144 456 144 c 312 144 l 305.637 144 299.531 141.473
 295.031 136.969 c 290.527 132.469 288 126.363 288 120 c 288 72 l 288 65.637
 290.527 59.531 295.031 55.031 c 299.531 50.527 305.637 48 312 48 c h
312 0 m 292.906 0 274.59 7.586 261.09 21.09 c 247.586 34.59 240 52.906 
240 72 c 240 120 l 240 139.094 247.586 157.41 261.09 170.91 c 274.59 184.414
 292.906 192 312 192 c 456 192 l 475.094 192 493.41 184.414 506.91 170.91
 c 520.414 157.41 528 139.094 528 120 c 528 72 l 528 52.906 520.414 34.59
 506.91 21.09 c 493.41 7.586 475.094 0 456 0 c h
312 0 m f
Q Q
showpage
%%Trailer
%%EOF
