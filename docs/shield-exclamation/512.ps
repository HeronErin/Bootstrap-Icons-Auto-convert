%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
128.113 38.16 m 105.254 44.457 82.551 51.305 60.023 58.703 c 55.824 60.059
 52.766 63.695 52.152 68.062 c 38.855 167.832 69.578 240.621 106.223 288.574
 c 121.734 309.086 140.234 327.152 161.113 342.168 c 169.418 348.023 176.762
 352.246 182.547 354.961 c 185.426 356.32 187.77 357.266 189.578 357.793
 c 189.574 357.793 l 190.371 358.035 191.184 358.234 192 358.391 c 192.809
 358.234 193.609 358.031 194.398 357.793 c 196.223 357.25 198.574 356.305
 201.453 354.961 c 207.215 352.25 214.582 348 222.887 342.168 c 243.766 
327.152 262.266 309.086 277.777 288.574 c 314.426 240.645 345.145 167.832
 331.848 68.062 c 331.234 63.695 328.176 60.059 323.977 58.703 c 308.352
 53.59 281.977 45.262 255.887 38.184 c 229.246 30.961 204.742 25.609 192
 25.609 c 179.281 25.609 154.754 30.961 128.113 38.184 c h
121.727 13.441 m 147.77 6.359 175.441 0 192 0 c 208.559 0 236.23 6.359 
262.273 13.441 c 288.914 20.641 315.77 29.16 331.562 34.32 c 331.559 34.32
 l 338.164 36.5 344.016 40.5 348.449 45.855 c 352.879 51.215 355.711 57.715
 356.617 64.609 c 370.922 172.059 337.73 251.688 297.457 304.371 c 297.457
 304.367 l 280.371 326.898 260.012 346.742 237.047 363.238 c 229.117 368.961
 220.699 373.98 211.895 378.238 c 205.176 381.406 197.949 384 192 384 c 
186.047 384 178.848 381.406 172.105 378.238 c 163.301 373.98 154.883 368.961
 146.953 363.238 c 123.988 346.742 103.629 326.898 86.543 304.367 c 46.273
 251.688 13.078 172.055 27.383 64.609 c 28.289 57.715 31.121 51.215 35.551
 45.855 c 39.984 40.5 45.836 36.5 52.441 34.32 c 75.367 26.809 98.469 19.848
 121.727 13.441 c f
168.023 264 m 168.023 255.426 172.598 247.504 180.023 243.215 c 187.449
 238.93 196.598 238.93 204.023 243.215 c 211.449 247.504 216.023 255.426
 216.023 264 c 216.023 272.574 211.449 280.496 204.023 284.785 c 196.598
 289.07 187.449 289.07 180.023 284.785 c 172.598 280.496 168.023 272.574
 168.023 264 c 170.398 119.879 m 169.754 113.758 171.738 107.648 175.855
 103.07 c 179.977 98.492 185.844 95.879 192 95.879 c 198.156 95.879 204.023
 98.492 208.145 103.07 c 212.262 107.648 214.246 113.758 213.602 119.879
 c 205.203 204.047 l 205.199 204.047 l 204.492 210.805 198.797 215.938 192
 215.938 c 185.203 215.938 179.508 210.805 178.801 204.047 c h
170.398 119.879 m f
Q Q
showpage
%%Trailer
%%EOF
