%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 766
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 766
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 766 rectclip
1 0 0 -1 0 768 cm q
0 g
384 311.664 m 463.871 229.535 663.602 373.25 384 558 c 104.398 373.199 
304.129 229.535 384 311.664 c 204 144 m 197.371 144 192 149.371 192 156 
c 192 228 l 192 234.629 197.371 240 204 240 c 210.629 240 216 234.629 216
 228 c 216 168 l 276 168 l 282.629 168 288 162.629 288 156 c 288 149.371
 282.629 144 276 144 c h
492 144 m 485.371 144 480 149.371 480 156 c 480 162.629 485.371 168 492
 168 c 552 168 l 552 228 l 552 234.629 557.371 240 564 240 c 570.629 240
 576 234.629 576 228 c 576 156 l 576 152.816 574.734 149.766 572.484 147.516
 c 570.234 145.266 567.184 144 564 144 c h
216 588 m 216 581.371 210.629 576 204 576 c 197.371 576 192 581.371 192
 588 c 192 660 l 192 666.625 197.375 672 204 672 c 276 672 l 282.629 672
 288 666.629 288 660 c 288 653.371 282.629 648 276 648 c 216 648 l h
576 588 m 576 581.371 570.629 576 564 576 c 557.371 576 552 581.371 552
 588 c 552 648 l 492 648 l 485.371 648 480 653.371 480 660 c 480 666.629
 485.371 672 492 672 c 564 672 l 567.184 672 570.234 670.734 572.484 668.484
 c 574.734 666.234 576 663.184 576 660 c h
576 588 m f
96 95.711 m 96 93.695 l 96 81.797 100.418 70.32 108.402 61.496 c 116.383
 52.672 127.359 47.125 139.199 45.938 c 571.199 2.738 l 571.199 2.734 l 
584.277 1.402 597.328 5.492 607.305 14.047 c 617.285 22.602 623.32 34.875
 624 48 c 636.73 48 648.938 53.059 657.941 62.059 c 666.941 71.062 672 83.27
 672 96 c 672 720 l 672 732.73 666.941 744.938 657.941 753.941 c 648.938
 762.941 636.73 768 624 768 c 144 768 l 131.27 768 119.062 762.941 110.059
 753.941 c 101.059 744.938 96 732.73 96 720 c h
144 96 m 144 720 l 624 720 l 624 96 l h
144 96 m f*
Q Q
showpage
%%Trailer
%%EOF
