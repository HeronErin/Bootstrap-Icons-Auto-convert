%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 77.914 m 115.969 57.383 165.898 93.309 96 139.5 c 26.102 93.301 76.031
 57.383 96 77.914 c 51 36 m 49.344 36 48 37.344 48 39 c 48 57 l 48 58.656
 49.344 60 51 60 c 52.656 60 54 58.656 54 57 c 54 42 l 69 42 l 70.656 42
 72 40.656 72 39 c 72 37.344 70.656 36 69 36 c h
123 36 m 121.344 36 120 37.344 120 39 c 120 40.656 121.344 42 123 42 c 
138 42 l 138 57 l 138 58.656 139.344 60 141 60 c 142.656 60 144 58.656 144
 57 c 144 39 l 144 38.203 143.684 37.441 143.121 36.879 c 142.559 36.316
 141.797 36 141 36 c h
54 147 m 54 145.344 52.656 144 51 144 c 49.344 144 48 145.344 48 147 c 
48 165 l 48 166.656 49.344 168 51 168 c 69 168 l 70.656 168 72 166.656 72
 165 c 72 163.344 70.656 162 69 162 c 54 162 l h
144 147 m 144 145.344 142.656 144 141 144 c 139.344 144 138 145.344 138
 147 c 138 162 l 123 162 l 121.344 162 120 163.344 120 165 c 120 166.656
 121.344 168 123 168 c 141 168 l 141.797 168 142.559 167.684 143.121 167.121
 c 143.684 166.559 144 165.797 144 165 c h
144 147 m f
24 23.93 m 24 23.426 l 24 17.262 28.668 12.102 34.801 11.484 c 142.801 
0.684 l 146.07 0.352 149.332 1.375 151.828 3.512 c 154.32 5.648 155.828 
8.719 156 12 c 159.184 12 162.234 13.266 164.484 15.516 c 166.734 17.766
 168 20.816 168 24 c 168 180 l 168 183.184 166.734 186.234 164.484 188.484
 c 162.234 190.734 159.184 192 156 192 c 36 192 l 29.371 192 24 186.629 
24 180 c h
36 24 m 36 180 l 156 180 l 156 24 l h
36 24 m f*
Q Q
showpage
%%Trailer
%%EOF
