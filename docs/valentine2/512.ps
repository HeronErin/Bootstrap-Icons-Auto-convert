%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 383
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 383
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 383 rectclip
1 0 0 -1 0 384 cm q
0 g
192 155.832 m 231.938 114.77 331.801 186.625 192 279 c 52.199 186.602 152.062
 114.77 192 155.832 c 102 72 m 98.688 72 96 74.688 96 78 c 96 114 l 96 117.312
 98.688 120 102 120 c 105.312 120 108 117.312 108 114 c 108 84 l 138 84 
l 141.312 84 144 81.312 144 78 c 144 74.688 141.312 72 138 72 c h
246 72 m 242.688 72 240 74.688 240 78 c 240 81.312 242.688 84 246 84 c 
276 84 l 276 114 l 276 117.312 278.688 120 282 120 c 285.312 120 288 117.312
 288 114 c 288 78 l 288 76.41 287.367 74.883 286.242 73.758 c 285.117 72.633
 283.59 72 282 72 c h
108 294 m 108 290.688 105.312 288 102 288 c 98.688 288 96 290.688 96 294
 c 96 330 l 96 333.312 98.688 336 102 336 c 138 336 l 141.312 336 144 333.312
 144 330 c 144 326.688 141.312 324 138 324 c 108 324 l h
288 294 m 288 290.688 285.312 288 282 288 c 278.688 288 276 290.688 276
 294 c 276 324 l 246 324 l 242.688 324 240 326.688 240 330 c 240 333.312
 242.688 336 246 336 c 282 336 l 283.59 336 285.117 335.367 286.242 334.242
 c 287.367 333.117 288 331.59 288 330 c h
288 294 m f
48 47.855 m 48 46.848 l 48 40.898 50.211 35.16 54.199 30.75 c 58.191 26.336
 63.68 23.562 69.602 22.969 c 285.602 1.367 l 292.137 0.703 298.664 2.746
 303.652 7.023 c 308.641 11.301 311.66 17.438 312 24 c 318.363 24 324.469
 26.527 328.969 31.031 c 333.473 35.531 336 41.637 336 48 c 336 360 l 336
 366.363 333.473 372.469 328.969 376.969 c 324.469 381.473 318.363 384 312
 384 c 72 384 l 65.637 384 59.531 381.473 55.031 376.969 c 50.527 372.469
 48 366.363 48 360 c h
72 48 m 72 360 l 312 360 l 312 48 l h
72 48 m f*
Q Q
showpage
%%Trailer
%%EOF
