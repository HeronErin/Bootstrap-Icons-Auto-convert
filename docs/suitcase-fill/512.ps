%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 0 312 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 0 312 384
384 384 cairo_set_page_size
%%EndPageSetup
q 72 0 240 384 rectclip
1 0 0 -1 0 384 cm q
0 g
144 12 m 144 5.371 149.371 0 156 0 c 228 0 l 231.184 0 234.234 1.266 236.484
 3.516 c 238.734 5.766 240 8.816 240 12 c 240 72 l 276 72 l 285.547 72 294.703
 75.793 301.457 82.543 c 308.207 89.297 312 98.453 312 108 c 312 324 l 312
 331.465 309.684 338.742 305.367 344.832 c 301.051 350.918 294.949 355.516
 287.902 357.984 c 288.488 364.52 286.371 371.012 282.047 375.945 c 277.723
 380.879 271.566 383.828 265.008 384.105 c 258.453 384.379 252.07 381.957
 247.344 377.406 c 242.621 372.852 239.965 366.562 240 360 c 144 360 l 143.953
 366.512 141.266 372.727 136.551 377.215 c 131.836 381.707 125.496 384.086
 118.992 383.812 c 112.484 383.539 106.371 380.633 102.051 375.766 c 97.727
 370.895 95.57 364.477 96.07 357.984 c 89.031 355.512 82.934 350.914 78.625
 344.824 c 74.312 338.738 71.996 331.461 72 324 c 72 108 l 72 98.453 75.793
 89.297 82.543 82.543 c 89.297 75.793 98.453 72 108 72 c 144 72 l h
216 24 m 168 24 l 168 72 l 216 72 l h
144 132 m 144 125.371 138.629 120 132 120 c 125.371 120 120 125.371 120
 132 c 120 300 l 120 306.629 125.371 312 132 312 c 138.629 312 144 306.629
 144 300 c h
204 132 m 204 125.371 198.629 120 192 120 c 185.371 120 180 125.371 180
 132 c 180 300 l 180 306.629 185.371 312 192 312 c 198.629 312 204 306.629
 204 300 c h
264 132 m 264 125.371 258.629 120 252 120 c 245.371 120 240 125.371 240
 132 c 240 300 l 240 306.629 245.371 312 252 312 c 258.629 312 264 306.629
 264 300 c h
264 132 m f
Q Q
showpage
%%Trailer
%%EOF
