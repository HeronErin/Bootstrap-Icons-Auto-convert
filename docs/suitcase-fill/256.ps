%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 36 0 156 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 36 0 156 192
192 192 cairo_set_page_size
%%EndPageSetup
q 36 0 120 192 rectclip
1 0 0 -1 0 192 cm q
0 g
72 6 m 72 2.688 74.688 0 78 0 c 114 0 l 115.59 0 117.117 0.633 118.242 
1.758 c 119.367 2.883 120 4.41 120 6 c 120 36 l 138 36 l 142.773 36 147.352
 37.895 150.727 41.273 c 154.105 44.648 156 49.227 156 54 c 156 162 l 156
 165.73 154.844 169.371 152.684 172.414 c 150.523 175.461 147.473 177.758
 143.953 178.992 c 144.246 182.262 143.188 185.504 141.023 187.973 c 138.859
 190.441 135.781 191.914 132.504 192.051 c 129.227 192.191 126.035 190.98
 123.672 188.703 c 121.309 186.426 119.984 183.281 120 180 c 72 180 l 71.977
 183.254 70.633 186.363 68.277 188.609 c 65.918 190.852 62.75 192.043 59.496
 191.906 c 56.242 191.77 53.184 190.316 51.023 187.883 c 48.863 185.445 
47.785 182.238 48.035 178.992 c 44.516 177.758 41.469 175.457 39.312 172.414
 c 37.156 169.367 36 165.73 36 162 c 36 54 l 36 49.227 37.895 44.648 41.273
 41.273 c 44.648 37.895 49.227 36 54 36 c 72 36 l h
108 12 m 84 12 l 84 36 l 108 36 l h
72 66 m 72 62.688 69.312 60 66 60 c 62.688 60 60 62.688 60 66 c 60 150 
l 60 153.312 62.688 156 66 156 c 69.312 156 72 153.312 72 150 c h
102 66 m 102 62.688 99.312 60 96 60 c 92.688 60 90 62.688 90 66 c 90 150
 l 90 153.312 92.688 156 96 156 c 99.312 156 102 153.312 102 150 c h
132 66 m 132 62.688 129.312 60 126 60 c 122.688 60 120 62.688 120 66 c 
120 150 l 120 153.312 122.688 156 126 156 c 129.312 156 132 153.312 132 
150 c h
132 66 m f
Q Q
showpage
%%Trailer
%%EOF
