%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1248 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1248 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 960 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 48 m 576 35.27 581.059 23.062 590.059 14.059 c 599.062 5.059 611.27
 0 624 0 c 912 0 l 924.73 0 936.938 5.059 945.941 14.059 c 954.941 23.062
 960 35.27 960 48 c 960 288 l 1104 288 l 1142.191 288 1178.816 303.172 1205.824
 330.176 c 1232.828 357.184 1248 393.809 1248 432 c 1248 1296 l 1248.008
 1325.855 1238.734 1354.973 1221.469 1379.324 c 1204.199 1403.68 1179.789
 1422.062 1151.617 1431.938 c 1153.957 1458.078 1145.492 1484.039 1128.191
 1503.777 c 1110.891 1523.52 1086.262 1535.312 1060.035 1536.414 c 1033.812
 1537.52 1008.277 1527.836 989.379 1509.621 c 970.48 1491.406 959.863 1466.246
 960 1440 c 576 1440 l 575.82 1466.047 565.066 1490.898 546.203 1508.859
 c 527.34 1526.82 501.992 1536.348 475.969 1535.254 c 449.945 1534.156 425.484
 1522.535 408.195 1503.055 c 390.91 1483.574 382.281 1457.902 384.289 1431.938
 c 356.133 1422.047 331.742 1403.656 314.492 1379.305 c 297.242 1354.953
 287.984 1325.844 288 1296 c 288 432 l 288 393.809 303.172 357.184 330.176
 330.176 c 357.184 303.172 393.809 288 432 288 c 576 288 l h
864 96 m 672 96 l 672 288 l 864 288 l h
576 528 m 576 510.852 566.852 495.004 552 486.43 c 537.148 477.855 518.852
 477.855 504 486.43 c 489.148 495.004 480 510.852 480 528 c 480 1200 l 480
 1217.148 489.148 1232.996 504 1241.57 c 518.852 1250.145 537.148 1250.145
 552 1241.57 c 566.852 1232.996 576 1217.148 576 1200 c h
816 528 m 816 510.852 806.852 495.004 792 486.43 c 777.148 477.855 758.852
 477.855 744 486.43 c 729.148 495.004 720 510.852 720 528 c 720 1200 l 720
 1217.148 729.148 1232.996 744 1241.57 c 758.852 1250.145 777.148 1250.145
 792 1241.57 c 806.852 1232.996 816 1217.148 816 1200 c h
1056 528 m 1056 510.852 1046.852 495.004 1032 486.43 c 1017.148 477.855
 998.852 477.855 984 486.43 c 969.148 495.004 960 510.852 960 528 c 960 
1200 l 960 1217.148 969.148 1232.996 984 1241.57 c 998.852 1250.145 1017.148
 1250.145 1032 1241.57 c 1046.852 1232.996 1056 1217.148 1056 1200 c h
1056 528 m f
Q Q
showpage
%%Trailer
%%EOF
