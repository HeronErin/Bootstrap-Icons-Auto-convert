%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
168 36 m 171.184 36 174.234 37.266 176.484 39.516 c 178.734 41.766 180 
44.816 180 48 c 180 144 l 180 147.184 178.734 150.234 176.484 152.484 c 
174.234 154.734 171.184 156 168 156 c 24 156 l 17.371 156 12 150.629 12 
144 c 12 48 l 12 41.371 17.371 36 24 36 c h
24 24 m 17.637 24 11.531 26.527 7.031 31.031 c 2.527 35.531 0 41.637 0 
48 c 0 144 l 0 150.363 2.527 156.469 7.031 160.969 c 11.531 165.473 17.637
 168 24 168 c 168 168 l 174.363 168 180.469 165.473 184.969 160.969 c 189.473
 156.469 192 150.363 192 144 c 192 48 l 192 41.637 189.473 35.531 184.969
 31.031 c 180.469 26.527 174.363 24 168 24 c h
24 24 m f
109.754 97.754 m 110.879 96.625 112.406 95.988 114 95.988 c 115.594 95.988
 117.121 96.625 118.246 97.754 c 138 117.516 l 157.754 97.75 l 157.754 97.754
 l 160.098 95.406 163.902 95.406 166.246 97.754 c 168.594 100.098 168.594
 103.902 166.246 106.246 c 142.246 130.246 l 141.121 131.375 139.594 132.012
 138 132.012 c 136.406 132.012 134.879 131.375 133.754 130.246 c 109.754
 106.246 l 108.625 105.121 107.988 103.594 107.988 102 c 107.988 100.406
 108.625 98.879 109.754 97.754 c f*
138 60 m 139.59 60 141.117 60.633 142.242 61.758 c 143.367 62.883 144 64.41
 144 66 c 144 114 l 144 117.312 141.312 120 138 120 c 134.688 120 132 117.312
 132 114 c 132 66 l 132 62.688 134.688 60 138 60 c f*
42.719 132 m 42.719 84.121 l 43.391 84.121 l 60.527 122.988 l 69.816 122.988
 l 86.855 84.109 l 87.527 84.109 l 87.527 132 l 100.402 132 l 100.402 60.012
 l 86.004 60.012 l 65.484 106.738 l 65.016 106.738 l 44.496 60.012 l 30 
60.012 l 30 132 l h
42.719 132 m f
Q Q
showpage
%%Trailer
%%EOF
