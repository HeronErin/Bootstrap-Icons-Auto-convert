%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 2.25 m 10.699 2.25 10.891 2.328 11.031 2.469 c 11.172 2.609 11.25 
2.801 11.25 3 c 11.25 9 l 11.25 9.199 11.172 9.391 11.031 9.531 c 10.891
 9.672 10.699 9.75 10.5 9.75 c 1.5 9.75 l 1.086 9.75 0.75 9.414 0.75 9 c
 0.75 3 l 0.75 2.586 1.086 2.25 1.5 2.25 c h
1.5 1.5 m 0.672 1.5 0 2.172 0 3 c 0 9 l 0 9.398 0.156 9.781 0.438 10.062
 c 0.719 10.344 1.102 10.5 1.5 10.5 c 10.5 10.5 l 10.898 10.5 11.281 10.344
 11.562 10.062 c 11.844 9.781 12 9.398 12 9 c 12 3 l 12 2.602 11.844 2.219
 11.562 1.938 c 11.281 1.656 10.898 1.5 10.5 1.5 c h
1.5 1.5 m f
6.859 6.109 m 6.93 6.039 7.023 6 7.125 6 c 7.227 6 7.32 6.039 7.391 6.109
 c 8.625 7.344 l 9.859 6.109 l 10.008 5.961 10.242 5.961 10.391 6.109 c 
10.539 6.258 10.539 6.492 10.391 6.641 c 8.891 8.141 l 8.82 8.211 8.727 
8.25 8.625 8.25 c 8.523 8.25 8.43 8.211 8.359 8.141 c 6.859 6.641 l 6.789
 6.57 6.75 6.477 6.75 6.375 c 6.75 6.273 6.789 6.18 6.859 6.109 c f*
8.625 3.75 m 8.723 3.75 8.82 3.789 8.891 3.859 c 8.961 3.93 9 4.027 9 4.125
 c 9 7.125 l 9 7.332 8.832 7.5 8.625 7.5 c 8.418 7.5 8.25 7.332 8.25 7.125
 c 8.25 4.125 l 8.25 3.918 8.418 3.75 8.625 3.75 c f*
2.672 8.25 m 2.672 5.258 l 2.715 5.258 l 3.785 7.688 l 4.367 7.688 l 5.434
 5.258 l 5.477 5.258 l 5.469 8.25 l 6.273 8.25 l 6.273 3.75 l 5.375 3.75
 l 4.094 6.672 l 4.066 6.672 l 2.785 3.75 l 1.875 3.75 l 1.875 8.25 l h
2.672 8.25 m f
Q Q
showpage
%%Trailer
%%EOF
