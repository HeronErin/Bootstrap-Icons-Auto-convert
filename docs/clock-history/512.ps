%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
204.359 24.457 m 200.246 24.152 196.125 24 192 24 c 192 0 l 196.719 0.004
 201.434 0.18 206.137 0.527 c h
252.457 35.258 m 244.762 32.285 236.863 29.887 228.816 28.078 c 234.074
 4.652 l 243.289 6.715 252.297 9.453 261.098 12.859 c h
285.336 52.297 m 281.906 50.008 278.391 47.848 274.801 45.816 c 286.633
 24.938 l 294.84 29.582 302.691 34.828 310.129 40.633 c 295.367 59.57 l 
295.367 59.566 l 292.113 57.031 288.77 54.613 285.336 52.32 c h
329.352 95.258 m 324.605 88.512 319.367 82.125 313.68 76.152 c 331.055 
59.594 l 337.551 66.457 343.527 73.738 348.984 81.434 c h
347.207 127.707 m 347.207 127.703 l 345.633 123.898 343.922 120.152 342.07
 116.473 c 363.504 105.672 l 367.742 114.098 371.352 122.828 374.305 131.785
 c 351.504 139.297 l 350.215 135.379 348.781 131.516 347.207 127.703 c 359.926
 187.871 m 359.93 187.871 l 359.734 179.625 358.93 171.402 357.527 163.273
 c 381.168 159.195 l 382.77 168.477 383.695 177.836 383.953 187.273 c h
356.781 224.781 m 357.582 220.719 358.23 216.637 358.727 212.543 c 382.559
 215.496 l 381.402 224.859 379.559 234.125 377.039 243.215 c 353.902 236.809
 l 355.008 232.855 355.965 228.848 356.781 224.785 c 333.934 281.883 m 338.348
 274.906 342.238 267.645 345.598 260.09 c 367.535 269.809 l 363.695 278.449
 359.254 286.754 354.215 294.719 c h
310.797 310.805 m 313.727 307.875 316.523 304.852 319.195 301.734 c 337.387
 317.406 l 337.391 317.398 l 334.312 320.973 331.102 324.43 327.77 327.77
 c h
310.797 310.805 m f
192 24 m 155.02 24.004 119.07 36.207 89.734 58.723 c 60.395 81.234 39.305
 112.801 29.734 148.523 c 20.164 184.246 22.648 222.125 36.801 256.293 c
 50.953 290.457 75.984 319 108.012 337.492 c 140.039 355.984 177.27 363.391
 213.934 358.562 c 250.602 353.738 284.648 336.949 310.801 310.801 c 327.77
 327.77 l 297.883 357.672 258.961 376.875 217.047 382.402 c 175.133 387.926
 132.566 379.465 95.953 358.332 c 59.34 337.195 30.723 304.566 14.543 265.508
 c -1.637 226.449 -4.473 183.145 6.473 142.309 c 17.418 101.473 41.535 65.391
 75.078 39.66 c 108.625 13.93 149.723 -0.012 192 0 c h
192 24 m f
180 72 m 183.184 72 186.234 73.266 188.484 75.516 c 190.734 77.766 192 
80.816 192 84 c 192 209.039 l 269.953 253.582 l 269.953 253.586 l 275.531
 256.949 277.406 264.156 274.172 269.812 c 270.938 275.473 263.781 277.516
 258.047 274.414 c 174.047 226.414 l 170.309 224.281 168 220.305 168 216
 c 168 84 l 168 77.371 173.371 72 180 72 c f
Q Q
showpage
%%Trailer
%%EOF
