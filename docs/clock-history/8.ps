%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.191 0.383 m 3.129 0.379 3.062 0.375 3 0.375 c 3 0 l 3.074 0 3.148 0.004
 3.223 0.008 c h
3.941 0.551 m 3.945 0.551 l 3.824 0.504 3.699 0.469 3.574 0.438 c 3.656
 0.07 l 3.801 0.102 3.941 0.145 4.078 0.199 c h
4.457 0.816 m 4.406 0.781 4.352 0.746 4.293 0.715 c 4.477 0.387 l 4.48 
0.391 l 4.605 0.461 4.73 0.543 4.848 0.637 c 4.617 0.934 l 4.613 0.93 l 
4.562 0.891 4.512 0.852 4.457 0.816 c h
5.145 1.488 m 5.07 1.383 4.988 1.285 4.902 1.191 c 5.176 0.934 l 5.277 
1.039 5.371 1.156 5.457 1.273 c h
5.422 1.996 m 5.426 1.996 l 5.402 1.938 5.375 1.879 5.344 1.82 c 5.68 1.652
 l 5.746 1.781 5.801 1.918 5.848 2.059 c 5.492 2.176 l 5.473 2.117 5.449
 2.055 5.426 1.996 c 5.625 2.938 m 5.625 2.934 l 5.621 2.805 5.609 2.68 
5.586 2.551 c 5.957 2.488 l 5.98 2.633 5.996 2.781 6 2.926 c h
5.574 3.516 m 5.586 3.453 5.598 3.387 5.605 3.324 c 5.977 3.371 l 5.977
 3.367 l 5.961 3.512 5.93 3.656 5.891 3.801 c 5.527 3.699 l 5.543 3.637 
5.559 3.574 5.574 3.512 c 5.219 4.402 m 5.289 4.293 5.348 4.18 5.402 4.062
 c 5.746 4.215 l 5.688 4.352 5.617 4.48 5.539 4.605 c h
4.855 4.855 m 4.902 4.809 4.945 4.762 4.988 4.715 c 5.273 4.961 l 5.223
 5.016 5.172 5.07 5.121 5.121 c h
4.855 4.855 m f
3 0.375 m 2.125 0.375 1.305 0.812 0.816 1.543 c 0.332 2.27 0.238 3.195 
0.574 4.004 c 0.91 4.816 1.629 5.402 2.488 5.574 c 3.348 5.746 4.234 5.477
 4.855 4.855 c 5.121 5.121 l 4.414 5.832 3.398 6.137 2.414 5.941 c 1.43 
5.746 0.609 5.074 0.227 4.148 c -0.156 3.223 -0.051 2.168 0.504 1.332 c 
1.062 0.5 1.996 0 3 0 c h
3 0.375 m f
2.812 1.125 m 2.918 1.125 3 1.207 3 1.312 c 3 3.266 l 4.219 3.961 l 4.426
 4.09 4.246 4.402 4.031 4.289 c 2.719 3.539 l 2.66 3.504 2.625 3.441 2.625
 3.375 c 2.625 1.312 l 2.625 1.207 2.707 1.125 2.812 1.125 c f
Q Q
showpage
%%Trailer
%%EOF
