%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6.387 0.766 m 6.258 0.754 6.129 0.75 6 0.75 c 6 0 l 6.148 0 6.293 0.004
 6.441 0.016 c h
7.891 1.102 m 7.648 1.008 7.402 0.934 7.152 0.879 c 7.316 0.148 l 7.605
 0.215 7.887 0.297 8.16 0.406 c h
8.918 1.633 m 8.809 1.562 8.699 1.496 8.586 1.434 c 8.957 0.781 l 8.957
 0.777 l 9.215 0.926 9.461 1.09 9.691 1.27 c 9.23 1.859 l 9.23 1.863 l 9.129
 1.781 9.023 1.707 8.918 1.637 c h
10.293 2.977 m 10.145 2.766 9.98 2.566 9.801 2.379 c 10.344 1.863 l 10.547
 2.078 10.734 2.305 10.902 2.547 c h
10.852 3.992 m 10.801 3.871 10.746 3.754 10.691 3.641 c 11.359 3.305 l 
11.359 3.301 l 11.492 3.566 11.605 3.84 11.695 4.117 c 10.984 4.352 l 10.945
 4.23 10.898 4.109 10.852 3.992 c 11.25 5.871 m 11.246 5.871 l 11.242 5.613
 11.215 5.355 11.172 5.102 c 11.91 4.973 l 11.961 5.262 11.988 5.555 11.996
 5.852 c h
11.152 7.023 m 11.176 6.895 11.199 6.77 11.215 6.641 c 11.961 6.734 l 11.953
 6.734 l 11.918 7.027 11.859 7.316 11.781 7.602 c 11.059 7.402 l 11.094 
7.277 11.125 7.152 11.148 7.027 c 10.434 8.812 m 10.57 8.594 10.691 8.367
 10.797 8.133 c 11.48 8.438 l 11.359 8.707 11.223 8.969 11.062 9.215 c h
9.711 9.715 m 9.801 9.625 9.891 9.527 9.973 9.43 c 10.543 9.918 l 10.445
 10.031 10.348 10.137 10.242 10.242 c h
9.711 9.715 m f
6 0.75 m 4.246 0.75 2.609 1.625 1.637 3.082 c 0.66 4.543 0.48 6.391 1.148
 8.008 c 1.82 9.629 3.258 10.809 4.977 11.148 c 6.695 11.492 8.473 10.953
 9.711 9.711 c 10.242 10.242 l 8.824 11.66 6.793 12.277 4.828 11.887 c 2.863
 11.496 1.223 10.148 0.453 8.297 c -0.312 6.445 -0.105 4.332 1.008 2.668
 c 2.125 1 3.996 0 6 0 c h
6 0.75 m f
5.625 2.25 m 5.723 2.25 5.82 2.289 5.891 2.359 c 5.961 2.43 6 2.527 6 2.625
 c 6 6.531 l 8.438 7.922 l 8.438 7.926 l 8.609 8.031 8.668 8.254 8.566 8.434
 c 8.469 8.609 8.242 8.672 8.062 8.574 c 5.438 7.074 l 5.32 7.008 5.25 6.883
 5.25 6.75 c 5.25 2.625 l 5.25 2.418 5.418 2.25 5.625 2.25 c f
Q Q
showpage
%%Trailer
%%EOF
