%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
408.719 48.91 m 400.492 48.305 392.25 48 384 48 c 384 0 l 393.434 0.004
 402.863 0.355 412.273 1.055 c h
504.91 70.512 m 489.527 64.574 473.723 59.777 457.633 56.16 c 468.145 9.312
 l 486.578 13.441 504.594 18.914 522.191 25.727 c h
570.672 104.59 m 570.672 104.594 l 563.809 100.016 556.781 95.691 549.602
 91.633 c 573.266 49.871 l 589.68 59.168 605.383 69.66 620.258 81.266 c 
590.738 119.137 l 590.734 119.137 l 584.227 114.059 577.535 109.223 570.672
 104.641 c h
658.703 190.512 m 649.207 177.023 638.73 164.254 627.359 152.305 c 662.113
 119.184 l 675.105 132.91 687.059 147.473 697.969 162.863 c h
694.414 255.406 m 691.27 247.797 687.844 240.305 684.145 232.945 c 727.008
 211.344 l 735.48 228.199 742.699 245.652 748.609 263.566 c 703.008 278.59
 l 703.008 278.594 l 700.43 270.762 697.562 263.027 694.414 255.406 c 719.855
 375.742 m 719.465 359.25 717.863 342.805 715.055 326.543 c 762.336 318.383
 l 765.535 336.941 767.391 355.664 767.902 374.543 c h
713.566 449.566 m 715.168 441.438 716.461 433.277 717.453 425.086 c 765.117
 430.988 l 765.121 430.992 l 762.809 449.719 759.117 468.25 754.078 486.434
 c 707.805 473.617 l 710.012 465.715 711.934 457.695 713.566 449.57 c 667.871
 563.762 m 676.703 549.809 684.48 535.281 691.199 520.176 c 735.07 539.617
 l 727.391 556.898 718.512 573.504 708.43 589.441 c h
621.598 621.602 m 627.453 615.746 633.055 609.699 638.398 603.457 c 674.781
 634.801 l 674.785 634.801 l 668.625 641.945 662.203 648.863 655.535 655.535
 c h
621.598 621.602 m f
384 48 m 310.039 48.004 238.145 72.414 179.465 117.445 c 120.789 162.473
 78.609 225.605 59.469 297.047 c 40.328 368.488 45.297 444.254 73.602 512.586
 c 101.906 580.918 151.969 638 216.02 674.984 c 280.074 711.965 354.539 
726.777 427.871 717.125 c 501.199 707.477 569.297 673.898 621.602 621.602
 c 655.539 655.539 l 655.535 655.535 l 595.766 715.34 517.926 753.75 434.098
 764.801 c 350.27 775.852 265.137 758.934 191.906 716.66 c 118.676 674.391
 61.441 609.137 29.086 531.02 c -3.273 452.902 -8.945 366.289 12.945 284.617
 c 34.836 202.945 83.066 130.781 150.156 79.32 c 217.25 27.859 299.445 -0.023
 384 0 c h
384 48 m f
360 144 m 366.363 144 372.469 146.527 376.969 151.031 c 381.473 155.531
 384 161.637 384 168 c 384 418.078 l 539.902 507.168 l 547.129 511.527 551.535
 519.363 551.508 527.801 c 551.477 536.238 547.02 544.043 539.762 548.352
 c 532.508 552.664 523.52 552.844 516.098 548.832 c 348.098 452.832 l 344.422
 450.734 341.371 447.703 339.246 444.043 c 337.121 440.387 336 436.23 336
 432 c 336 168 l 336 161.637 338.527 155.531 343.031 151.031 c 347.531 146.527
 353.637 144 360 144 c f
Q Q
showpage
%%Trailer
%%EOF
