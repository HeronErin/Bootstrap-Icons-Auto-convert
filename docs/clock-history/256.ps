%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
102.18 12.227 m 100.125 12.074 98.062 12 96 12 c 96 0 l 98.359 0 100.715
 0.09 103.066 0.266 c h
126.227 17.625 m 126.227 17.629 l 122.383 16.145 118.43 14.945 114.406 
14.039 c 117.035 2.328 l 121.645 3.359 126.148 4.727 130.547 6.434 c h
142.668 26.145 m 142.668 26.148 l 140.953 25.004 139.195 23.922 137.398
 22.906 c 143.312 12.465 l 143.316 12.469 l 147.418 14.793 151.348 17.414
 155.062 20.316 c 147.684 29.785 l 146.059 28.516 144.383 27.305 142.668
 26.16 c h
164.676 47.625 m 164.676 47.629 l 162.301 44.258 159.684 41.062 156.84 
38.074 c 165.527 29.793 l 168.773 33.227 171.762 36.863 174.492 40.715 c
 h
173.605 63.848 m 173.605 63.852 l 172.816 61.949 171.961 60.074 171.035
 58.234 c 181.75 52.836 l 181.754 52.836 l 183.871 57.051 185.676 61.414
 187.152 65.891 c 175.754 69.648 l 175.105 67.691 174.391 65.758 173.605
 63.852 c 179.965 93.938 m 179.867 89.812 179.465 85.699 178.766 81.637 
c 190.586 79.598 l 191.387 84.238 191.852 88.918 191.977 93.637 c h
178.395 112.395 m 178.793 110.363 179.117 108.324 179.367 106.273 c 191.281
 107.75 l 191.281 107.746 l 190.703 112.43 189.777 117.062 188.52 121.609
 c 176.953 118.406 l 177.504 116.43 177.984 114.426 178.395 112.395 c 166.969
 140.941 m 169.176 137.453 171.121 133.82 172.801 130.047 c 183.77 134.906
 l 181.848 139.227 179.629 143.379 177.109 147.363 c h
155.402 155.402 m 156.867 153.938 158.266 152.426 159.602 150.867 c 168.699
 158.703 l 168.695 158.699 l 167.156 160.488 165.551 162.215 163.883 163.883
 c h
155.402 155.402 m f
96 12 m 67.945 12.004 41.746 26.008 26.16 49.336 c 10.574 72.66 7.664 102.227
 18.402 128.145 c 29.137 154.062 52.102 172.91 79.617 178.387 c 107.133 
183.859 135.562 175.234 155.398 155.398 c 163.883 163.883 l 141.211 186.566
 108.711 196.434 77.258 190.184 c 45.801 183.93 19.543 162.383 7.27 132.754
 c -5.004 103.125 -1.672 69.324 16.152 42.66 c 33.973 15.996 63.93 -0.008
 96 0 c h
96 12 m f
90 36 m 91.59 36 93.117 36.633 94.242 37.758 c 95.367 38.883 96 40.41 96
 42 c 96 104.52 l 134.977 126.793 l 137.766 128.477 138.703 132.078 137.086
 134.906 c 135.469 137.734 131.891 138.758 129.023 137.207 c 87.023 113.207
 l 85.156 112.141 84 110.152 84 108 c 84 42 l 84 38.688 86.688 36 90 36 
c f
Q Q
showpage
%%Trailer
%%EOF
