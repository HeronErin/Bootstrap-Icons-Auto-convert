%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
15 3 m 15 1.344 16.344 0 18 0 c 78 0 l 78.797 0 79.559 0.316 80.121 0.879
 c 80.684 1.441 81 2.203 81 3 c 81 6.227 80.934 9.301 80.797 12.215 c 85.586
 13.008 89.852 15.703 92.625 19.688 c 95.402 23.672 96.449 28.605 95.531
 33.375 c 94.613 38.141 91.809 42.336 87.754 45.008 c 83.703 47.676 78.738
 48.598 73.996 47.555 c 69.258 58.746 62.727 64.215 57 65.621 c 57 78.66
 l 65.551 80.797 l 66.715 81.086 67.812 81.605 68.773 82.328 c 79.801 90.602
 l 80.832 91.375 81.254 92.723 80.848 93.949 c 80.438 95.172 79.293 96 78
 96 c 18 96 l 16.707 96 15.562 95.172 15.152 93.949 c 14.746 92.723 15.168
 91.375 16.199 90.602 c 27.227 82.328 l 28.188 81.609 29.285 81.086 30.449
 80.797 c 39 78.66 l 39 65.621 l 33.27 64.219 26.742 58.746 22.004 47.551
 c 17.258 48.598 12.293 47.68 8.234 45.008 c 4.176 42.34 1.367 38.141 0.449
 33.371 c -0.469 28.598 0.582 23.66 3.363 19.676 c 6.145 15.688 10.414 12.996
 15.211 12.211 c 15.07 9.141 15 6.07 15 3 c 15.594 18.238 m 9.074 19.434
 4.758 25.684 5.949 32.203 c 7.141 38.727 13.395 43.043 19.914 41.852 c 
17.918 35.551 16.387 27.777 15.594 18.242 c 76.09 41.852 m 76.094 41.852
 l 82.613 43.043 88.863 38.727 90.059 32.203 c 91.25 25.684 86.934 19.434
 80.41 18.238 c 79.613 27.777 78.082 35.547 76.09 41.848 c 21.023 6 m 21.062
 9.102 21.176 12.039 21.359 14.812 c 22.141 26.98 24.102 36.09 26.578 42.816
 c 31.766 56.879 38.902 60 42 60 c 42.797 60 43.559 60.316 44.121 60.879
 c 44.684 61.441 45 62.203 45 63 c 45 78.66 l 45 81.41 43.129 83.812 40.457
 84.48 c 31.902 86.617 l 31.512 86.711 31.148 86.887 30.828 87.125 c 27 
90 l 69 90 l 65.172 87.125 l 64.852 86.887 64.484 86.711 64.094 86.617 c
 55.543 84.48 l 52.871 83.812 51 81.41 51 78.66 c 51 63 l 51 61.344 52.344
 60 54 60 c 57.098 60 64.234 56.879 69.422 42.816 c 71.898 36.098 73.863
 26.977 74.641 14.812 c 74.82 12.035 74.934 9.098 74.977 6 c h
21.023 6 m f
Q Q
showpage
%%Trailer
%%EOF
