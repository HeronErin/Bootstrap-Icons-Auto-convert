%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.938 0.188 m 0.938 0.082 1.02 0 1.125 0 c 4.875 0 l 4.98 0 5.062 0.082
 5.062 0.188 c 5.062 0.391 5.059 0.582 5.051 0.762 c 5.348 0.812 5.617 0.98
 5.789 1.23 c 5.961 1.48 6.027 1.789 5.973 2.086 c 5.914 2.383 5.738 2.645
 5.484 2.812 c 5.23 2.98 4.922 3.039 4.625 2.973 c 4.328 3.672 3.922 4.016
 3.562 4.102 c 3.562 4.918 l 4.098 5.051 l 4.172 5.07 4.238 5.102 4.301 
5.145 c 4.988 5.664 l 5.133 5.77 5.055 6 4.875 6 c 1.125 6 l 0.945 6 0.867
 5.77 1.012 5.664 c 1.699 5.148 l 1.758 5.102 1.828 5.07 1.902 5.055 c 2.438
 4.918 l 2.438 4.102 l 2.078 4.016 1.672 3.672 1.375 2.973 c 1.078 3.039
 0.77 2.98 0.516 2.812 c 0.262 2.645 0.086 2.383 0.027 2.086 c -0.027 1.789
 0.035 1.48 0.211 1.23 c 0.383 0.98 0.652 0.812 0.949 0.762 c 0.941 0.57
 0.938 0.379 0.938 0.188 c 0.977 1.141 m 0.566 1.215 0.297 1.605 0.371 2.012
 c 0.445 2.422 0.836 2.691 1.246 2.617 c 1.121 2.223 1.027 1.738 0.977 1.141
 c 4.758 2.617 m 4.754 2.617 l 5.164 2.691 5.555 2.422 5.629 2.012 c 5.703
 1.605 5.434 1.215 5.027 1.141 c 4.977 1.738 4.883 2.223 4.758 2.617 c 1.312
 0.375 m 1.316 0.57 1.32 0.754 1.332 0.926 c 1.379 1.688 1.504 2.254 1.66
 2.676 c 1.984 3.555 2.43 3.75 2.625 3.75 c 2.73 3.75 2.812 3.832 2.812 
3.938 c 2.812 4.918 l 2.812 5.09 2.695 5.238 2.527 5.281 c 1.992 5.414 l
 1.969 5.418 1.945 5.43 1.926 5.445 c 1.688 5.625 l 4.312 5.625 l 4.074 
5.445 l 4.055 5.43 4.031 5.418 4.004 5.414 c 3.469 5.281 l 3.473 5.281 l
 3.305 5.238 3.188 5.09 3.188 4.918 c 3.188 3.938 l 3.188 3.832 3.27 3.75
 3.375 3.75 c 3.57 3.75 4.016 3.555 4.34 2.676 c 4.496 2.254 4.617 1.688
 4.668 0.926 c 4.68 0.754 4.688 0.57 4.688 0.375 c h
1.312 0.375 m f
Q Q
showpage
%%Trailer
%%EOF
