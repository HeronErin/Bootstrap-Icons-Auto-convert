%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
7.5 1.5 m 7.5 0.672 8.172 0 9 0 c 39 0 l 39.398 0 39.781 0.156 40.062 0.438
 c 40.344 0.719 40.5 1.102 40.5 1.5 c 40.5 3.113 40.465 4.648 40.398 6.109
 c 42.793 6.504 44.926 7.852 46.312 9.844 c 47.699 11.836 48.223 14.305 
47.766 16.688 c 47.309 19.07 45.906 21.168 43.879 22.504 c 41.852 23.84 
39.371 24.297 37 23.777 c 34.629 29.371 31.367 32.109 28.5 32.809 c 28.5
 39.328 l 32.773 40.395 l 33.355 40.539 33.906 40.801 34.383 41.16 c 39.898
 45.301 l 40.418 45.688 40.629 46.363 40.422 46.973 c 40.219 47.586 39.645
 48 39 48 c 9 48 l 8.355 48 7.781 47.586 7.578 46.973 c 7.371 46.363 7.582
 45.688 8.102 45.301 c 13.617 41.164 l 14.098 40.805 14.645 40.543 15.227
 40.398 c 19.5 39.328 l 19.5 32.809 l 16.637 32.105 13.371 29.371 11 23.773
 c 8.629 24.297 6.145 23.84 4.117 22.504 c 2.086 21.168 0.684 19.07 0.227
 16.684 c -0.234 14.301 0.293 11.828 1.684 9.836 c 3.07 7.844 5.207 6.5 
7.605 6.105 c 7.535 4.57 7.5 3.035 7.5 1.5 c 7.797 9.121 m 4.539 9.715 2.379
 12.844 2.973 16.102 c 3.57 19.363 6.695 21.52 9.957 20.926 c 8.957 17.777
 8.191 13.887 7.797 9.121 c 38.047 20.926 m 41.305 21.52 44.434 19.363 45.027
 16.102 c 45.625 12.844 43.465 9.715 40.207 9.121 c 39.809 13.891 39.043
 17.777 38.047 20.926 c 10.512 3 m 10.531 4.551 10.586 6.02 10.68 7.406 
c 11.07 13.492 12.051 18.043 13.289 21.406 c 15.883 28.441 19.453 30 21 
30 c 21.398 30 21.781 30.156 22.062 30.438 c 22.344 30.719 22.5 31.102 22.5
 31.5 c 22.5 39.328 l 22.5 40.707 21.562 41.906 20.23 42.238 c 15.953 43.305
 l 15.949 43.309 l 15.758 43.355 15.574 43.441 15.414 43.562 c 13.5 45 l
 34.5 45 l 32.586 43.562 l 32.426 43.441 32.242 43.355 32.047 43.309 c 27.773
 42.242 l 27.77 42.238 l 26.438 41.906 25.5 40.707 25.5 39.328 c 25.5 31.5
 l 25.5 30.672 26.172 30 27 30 c 28.547 30 32.117 28.441 34.711 21.406 c
 35.949 18.047 36.93 13.484 37.32 7.406 c 37.41 6.02 37.465 4.551 37.488
 3 c h
10.512 3 m f
Q Q
showpage
%%Trailer
%%EOF
