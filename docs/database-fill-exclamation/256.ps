%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 168 180 rectclip
1 0 0 -1 0 192 cm q
0 g
96 12 m 77.125 12 59.734 15.469 46.848 21.324 c 34.5 26.941 24 35.914 24
 48 c 24 60.086 34.5 69.059 46.848 74.676 c 59.734 80.531 77.125 84 96 84
 c 114.875 84 132.266 80.531 145.152 74.676 c 157.5 69.059 168 60.086 168
 48 c 168 35.914 157.5 26.941 145.152 21.324 c 132.266 15.469 114.875 12
 96 12 c f
24 84 m 24 73.934 l 29.484 79.117 36.047 82.945 41.879 85.598 c 56.664 
92.316 75.816 96 96 96 c 116.184 96 135.336 92.316 150.121 85.598 c 155.953
 82.957 162.516 79.117 168 73.934 c 168 84 l 168 89.09 166.141 93.625 163.066
 97.598 c 152.332 94.938 141.035 95.629 130.707 99.582 c 120.375 103.539
 111.504 110.562 105.289 119.711 c 102.195 119.906 99.098 120.004 96 120
 c 77.125 120 59.734 116.531 46.848 110.676 c 34.5 105.059 24 96.086 24 
84 c 99.086 131.977 m 96 132 l 75.816 132 56.664 128.316 41.879 121.598 
c 36.047 118.957 29.484 115.117 24 109.934 c 24 120 l 24 132.086 34.5 141.059
 46.848 146.676 c 59.734 152.531 77.125 156 96 156 c 96.324 156 l 95.438
 147.887 96.379 139.676 99.086 131.977 c 99.062 167.977 m 96 168 l 75.816
 168 56.664 164.316 41.879 157.598 c 36.047 154.957 29.484 151.117 24 145.934
 c 24 156 l 24 168.086 34.5 177.059 46.848 182.676 c 59.734 188.531 77.125
 192 96 192 c 102.434 192 108.695 191.594 114.66 190.836 c 107.562 184.699
 102.188 176.82 99.059 167.977 c f
192 150 m 192 165.004 183.996 178.871 171 186.375 c 158.004 193.875 141.996
 193.875 129 186.375 c 116.004 178.871 108 165.004 108 150 c 108 134.996
 116.004 121.129 129 113.625 c 141.996 106.125 158.004 106.125 171 113.625
 c 183.996 121.129 192 134.996 192 150 c 150 126 m 146.688 126 144 128.688
 144 132 c 144 150 l 144 153.312 146.688 156 150 156 c 153.312 156 156 153.312
 156 150 c 156 132 l 156 130.41 155.367 128.883 154.242 127.758 c 153.117
 126.633 151.59 126 150 126 c 150 174 m 153.312 174 156 171.312 156 168 
c 156 164.688 153.312 162 150 162 c 146.688 162 144 164.688 144 168 c 144
 171.312 146.688 174 150 174 c f
Q Q
showpage
%%Trailer
%%EOF
