%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 7 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 7 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 7 0 377 384 rectclip
1 0 0 -1 0 384 cm q
0 g
380.496 3.504 m 383.891 6.906 384.93 12.004 383.137 16.465 c 315.938 184.465
 l 314.797 187.484 312.492 189.914 309.539 191.215 c 306.586 192.516 303.238
 192.57 300.242 191.371 c 297.246 190.168 294.863 187.812 293.625 184.836
 c 292.387 181.855 292.402 178.504 293.664 175.535 c 339.145 61.824 l 159.289
 241.68 l 192.312 293.566 l 195.871 299.16 194.223 306.582 188.629 310.141
 c 183.035 313.699 175.613 312.051 172.055 306.457 c 135.312 248.688 l 15.434
 172.414 l 11.68 170.035 8.941 166.352 7.742 162.074 c 6.543 157.793 6.969
 153.223 8.938 149.238 c 10.906 145.258 14.281 142.141 18.406 140.496 c 
367.535 0.887 l 371.996 -0.906 377.094 0.133 380.496 3.527 c h
142.32 224.711 m 322.176 44.855 l 38.184 158.449 l h
142.32 224.711 m f*
300 384 m 330.012 384 357.742 367.988 372.746 342 c 387.75 316.012 387.75
 283.988 372.746 258 c 357.742 232.012 330.012 216 300 216 c 269.988 216
 242.258 232.012 227.254 258 c 212.25 283.988 212.25 316.012 227.254 342
 c 242.258 367.988 269.988 384 300 384 c 308.496 344.496 m 306.18 346.809
 303.023 348.074 299.75 348.004 c 296.48 347.93 293.379 346.523 291.168 
344.113 c 263.594 314.113 l 259.113 309.227 259.441 301.637 264.324 297.156
 c 269.207 292.676 276.801 293.004 281.281 297.887 c 288 305.207 l 288 264
 l 288 257.371 293.371 252 300 252 c 306.629 252 312 257.371 312 264 c 312
 307.031 l 321.504 297.504 l 326.195 292.812 333.805 292.812 338.496 297.504
 c 343.188 302.195 343.188 309.805 338.496 314.496 c h
308.496 344.496 m f*
Q Q
showpage
%%Trailer
%%EOF
