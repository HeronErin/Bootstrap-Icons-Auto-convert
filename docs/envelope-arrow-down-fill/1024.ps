%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
2.398 170.641 m 7.238 149.438 19.137 130.504 36.141 116.941 c 53.145 103.383
 74.25 96 96 96 c 672 96 l 693.75 96 714.855 103.383 731.859 116.941 c 748.863
 130.504 760.762 149.438 765.602 170.641 c 384 403.871 l h
0 225.457 m 0 566.449 l 278.543 395.664 l h
9.215 617.09 m 324.574 423.793 l 384 460.129 l 443.473 423.793 l 461.09
 434.594 l 436.922 454.844 417.492 480.152 404.172 508.734 c 390.852 537.312
 383.969 568.469 384 600 c 384 625.246 388.32 649.441 396.289 672 c 96 672
 l 77.82 672.004 60.012 666.844 44.648 657.125 c 29.285 647.402 16.996 633.52
 9.215 617.09 c 768 225.457 m 768 464.211 l 768 464.207 l 747.75 439.156
 722.152 418.953 693.086 405.074 c 664.016 391.199 632.211 383.996 600 384
 c 567.332 383.977 535.082 391.359 505.68 405.602 c 489.457 395.664 l h
768 225.457 m f
600 768 m 644.555 768 687.289 750.301 718.793 718.793 c 750.301 687.289
 768 644.555 768 600 c 768 555.445 750.301 512.711 718.793 481.207 c 687.289
 449.699 644.555 432 600 432 c 555.445 432 512.711 449.699 481.207 481.207
 c 449.699 512.711 432 555.445 432 600 c 432 644.555 449.699 687.289 481.207
 718.793 c 512.711 750.301 555.445 768 600 768 c 616.992 688.992 m 612.363
 693.617 606.043 696.148 599.5 696.004 c 592.957 695.859 586.758 693.051
 582.336 688.223 c 527.184 628.223 l 521.387 621.906 519.402 612.973 521.977
 604.793 c 524.551 596.613 531.293 590.43 539.664 588.57 c 548.035 586.711
 556.766 589.457 562.559 595.777 c 576 610.418 l 576 528 l 576 519.426 580.574
 511.504 588 507.215 c 595.426 502.93 604.574 502.93 612 507.215 c 619.426
 511.504 624 519.426 624 528 c 624 614.062 l 643.008 595.008 l 649.078 588.938
 657.926 586.566 666.219 588.789 c 674.512 591.012 680.988 597.488 683.211
 605.781 c 685.434 614.074 683.062 622.922 676.992 628.992 c h
616.992 688.992 m f
Q Q
showpage
%%Trailer
%%EOF
