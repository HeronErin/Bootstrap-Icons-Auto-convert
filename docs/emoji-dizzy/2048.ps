%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1440 m 589.773 1440 418.848 1369.199 292.824 1243.176 c 166.801 1117.152
 96 946.227 96 768 c 96 589.773 166.801 418.848 292.824 292.824 c 418.848
 166.801 589.773 96 768 96 c 946.227 96 1117.152 166.801 1243.176 292.824
 c 1369.199 418.848 1440 589.773 1440 768 c 1440 946.227 1369.199 1117.152
 1243.176 1243.176 c 1117.152 1369.199 946.227 1440 768 1440 c 768 1536 
m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 1167.031 1536
 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 224.941 c 1167.031
 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941 224.941 c 80.914
 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 
368.969 1455.086 564.312 1536 768 1536 c f
878.016 494.016 m 887.02 484.988 899.25 479.914 912 479.914 c 924.75 479.914
 936.98 484.988 945.984 494.016 c 1008 556.129 l 1070.016 494.016 l 1082.156
 481.875 1099.855 477.133 1116.438 481.578 c 1133.023 486.02 1145.98 498.977
 1150.422 515.562 c 1154.867 532.145 1150.125 549.844 1137.984 561.984 c
 1075.871 624 l 1137.984 686.016 l 1150.125 698.156 1154.867 715.855 1150.422
 732.438 c 1145.98 749.023 1133.023 761.98 1116.438 766.422 c 1099.855 770.867
 1082.156 766.125 1070.016 753.984 c 1008 691.871 l 945.984 753.984 l 933.844
 766.125 916.145 770.867 899.562 766.422 c 882.977 761.98 870.02 749.023
 865.578 732.438 c 861.133 715.855 865.875 698.156 878.016 686.016 c 940.129
 624 l 878.016 561.984 l 868.988 552.98 863.914 540.75 863.914 528 c 863.914
 515.25 868.988 503.02 878.016 494.016 c 398.016 494.016 m 407.02 484.988
 419.25 479.914 432 479.914 c 444.75 479.914 456.98 484.988 465.984 494.016
 c 528 556.129 l 590.016 494.016 l 602.156 481.875 619.855 477.133 636.438
 481.578 c 653.023 486.02 665.98 498.977 670.422 515.562 c 674.867 532.145
 670.125 549.844 657.984 561.984 c 595.871 624 l 657.984 686.016 l 670.125
 698.156 674.867 715.855 670.422 732.438 c 665.98 749.023 653.023 761.98
 636.438 766.422 c 619.855 770.867 602.156 766.125 590.016 753.984 c 528
 691.871 l 465.984 753.984 l 453.844 766.125 436.145 770.867 419.562 766.422
 c 402.977 761.98 390.02 749.023 385.578 732.438 c 381.133 715.855 385.875
 698.156 398.016 686.016 c 460.129 624 l 398.016 561.984 l 388.988 552.98
 383.914 540.75 383.914 528 c 383.914 515.25 388.988 503.02 398.016 494.016
 c 960 1056 m 960 1106.922 939.773 1155.758 903.766 1191.766 c 867.758 1227.773
 818.922 1248 768 1248 c 717.078 1248 668.242 1227.773 632.234 1191.766 
c 596.227 1155.758 576 1106.922 576 1056 c 576 1005.078 596.227 956.242 
632.234 920.234 c 668.242 884.227 717.078 864 768 864 c 818.922 864 867.758
 884.227 903.766 920.234 c 939.773 956.242 960 1005.078 960 1056 c f
Q Q
showpage
%%Trailer
%%EOF
