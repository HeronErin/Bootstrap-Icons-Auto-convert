%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1441
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1441
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1441 rectclip
1 0 0 -1 0 1536 cm q
0 g
399.168 1154.398 m 411.254 1158.43 421.242 1167.098 426.93 1178.496 c 432.621
 1189.895 433.547 1203.086 429.504 1215.168 c 381.504 1359.168 l 375.621
 1374.812 362.02 1386.273 345.602 1389.414 c 329.188 1392.559 312.316 1386.938
 301.066 1374.57 c 289.82 1362.207 285.816 1344.879 290.496 1328.832 c 338.496
 1184.832 l 342.508 1172.75 351.152 1162.758 362.531 1157.051 c 373.906 
1151.344 387.086 1150.391 399.168 1154.398 c 687.168 1154.398 m 699.254 
1158.43 709.242 1167.098 714.93 1178.496 c 720.621 1189.895 721.547 1203.086
 717.504 1215.168 c 621.504 1503.168 l 615.621 1518.812 602.02 1530.273 
585.602 1533.414 c 569.188 1536.559 552.316 1530.938 541.066 1518.57 c 529.82
 1506.207 525.816 1488.879 530.496 1472.832 c 626.496 1184.832 l 630.508
 1172.75 639.152 1162.758 650.531 1157.051 c 661.906 1151.344 675.086 1150.391
 687.168 1154.398 c 975.168 1154.398 m 987.254 1158.43 997.242 1167.098 
1002.93 1178.496 c 1008.621 1189.895 1009.547 1203.086 1005.504 1215.168
 c 957.504 1359.168 l 951.621 1374.812 938.02 1386.273 921.602 1389.414 
c 905.188 1392.559 888.316 1386.938 877.066 1374.57 c 865.82 1362.207 861.816
 1344.879 866.496 1328.832 c 914.496 1184.832 l 918.508 1172.75 927.152 
1162.758 938.531 1157.051 c 949.906 1151.344 963.086 1150.391 975.168 1154.398
 c 1263.168 1154.398 m 1275.254 1158.43 1285.242 1167.098 1290.93 1178.496
 c 1296.621 1189.895 1297.547 1203.086 1293.504 1215.168 c 1197.504 1503.168
 l 1193.852 1515.691 1185.258 1526.191 1173.699 1532.246 c 1162.145 1538.301
 1148.621 1539.391 1136.246 1535.266 c 1123.867 1531.141 1113.703 1522.152
 1108.094 1510.375 c 1102.48 1498.598 1101.902 1485.043 1106.496 1472.832
 c 1202.496 1184.832 l 1206.508 1172.75 1215.152 1162.758 1226.531 1157.051
 c 1237.906 1151.344 1251.086 1150.391 1263.168 1154.398 c 1286.879 482.59
 m 1286.879 482.594 l 1266.945 382.094 1215.383 290.613 1139.73 221.52 c
 1064.082 152.422 968.312 109.344 866.422 98.574 c 764.535 87.805 661.875
 109.914 573.453 161.664 c 485.027 213.418 415.48 292.102 374.977 386.207
 c 314.246 379.211 252.762 388.918 197.141 414.273 c 141.516 439.633 93.867
 479.688 59.32 530.121 c 24.773 580.551 4.641 639.453 1.09 700.48 c -2.461
 761.508 10.703 822.348 39.168 876.445 c 67.629 930.547 110.312 975.855 
162.617 1007.496 c 214.926 1039.133 274.871 1055.906 336 1056 c 1248 1056
 l 1321.066 1056.082 1391.434 1028.391 1444.848 978.535 c 1498.262 928.68
 1530.727 860.383 1535.668 787.484 c 1540.613 714.586 1517.664 642.531 1471.469
 585.922 c 1425.273 529.309 1359.289 492.371 1286.879 482.594 c 816 192 
m 910.461 191.98 1001.613 226.777 1072.031 289.738 c 1142.445 352.699 1187.188
 439.406 1197.695 533.281 c 1199 545.074 1204.629 555.969 1213.492 563.855
 c 1222.355 571.746 1233.828 576.07 1245.695 576 c 1248 576 l 1298.922 576
 1347.758 596.227 1383.766 632.234 c 1419.773 668.242 1440 717.078 1440 
768 c 1440 818.922 1419.773 867.758 1383.766 903.766 c 1347.758 939.773 
1298.922 960 1248 960 c 336 960 l 290.566 959.977 246.07 947.059 207.688
 922.746 c 169.305 898.43 138.613 863.723 119.18 822.652 c 99.746 781.582
 92.371 735.84 97.91 690.742 c 103.449 645.648 121.672 603.051 150.469 567.902
 c 179.262 532.758 217.441 506.508 260.566 492.203 c 303.691 477.898 349.988
 476.133 394.078 487.105 c 405.844 490.039 418.281 488.414 428.895 482.555
 c 439.508 476.695 447.512 467.035 451.297 455.52 c 476.641 378.816 525.531
 312.059 591.008 264.75 c 656.488 217.438 735.219 191.98 816 192 c f
Q Q
showpage
%%Trailer
%%EOF
