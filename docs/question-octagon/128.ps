%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
27.238 0.875 m 27.801 0.316 28.562 0 29.359 0 c 66.645 0 l 66.641 0 l 67.438
 0 68.199 0.316 68.762 0.875 c 95.125 27.238 l 95.684 27.801 96 28.562 96
 29.359 c 96 66.645 l 96 66.641 l 96 67.438 95.684 68.199 95.125 68.762 
c 68.762 95.125 l 68.199 95.684 67.438 96 66.641 96 c 29.359 96 l 28.562
 96 27.801 95.684 27.238 95.125 c 0.875 68.762 l 0.316 68.199 0 67.438 0
 66.641 c 0 29.359 l 0 28.562 0.316 27.801 0.875 27.238 c h
30.602 6 m 6 30.602 l 6 65.402 l 30.602 90 l 65.402 90 l 90.004 65.398 
l 90 30.602 l 65.398 6 l h
30.602 6 m f
31.531 34.715 m 31.512 35.109 31.66 35.488 31.934 35.77 c 32.207 36.051
 32.586 36.203 32.977 36.199 c 37.926 36.199 l 38.754 36.199 39.414 35.52
 39.523 34.699 c 40.062 30.762 42.762 27.895 47.574 27.895 c 51.691 27.895
 55.457 29.953 55.457 34.902 c 55.457 38.711 53.215 40.465 49.668 43.129
 c 45.629 46.062 42.434 49.488 42.66 55.051 c 42.68 56.352 l 42.691 57.172
 43.359 57.828 44.18 57.828 c 49.047 57.828 l 49.043 57.828 l 49.441 57.828
 49.824 57.672 50.105 57.387 c 50.387 57.105 50.543 56.727 50.543 56.328
 c 50.543 55.699 l 50.543 51.391 52.18 50.137 56.602 46.785 c 60.254 44.008
 64.066 40.922 64.066 34.449 c 64.066 25.383 56.41 21.004 48.027 21.004 
c 40.426 21.004 32.098 24.543 31.527 34.719 c 40.871 69.297 m 40.871 72.496
 43.422 74.859 46.93 74.859 c 50.582 74.859 53.098 72.496 53.098 69.297 
c 53.098 65.984 50.578 63.656 46.922 63.656 c 43.418 63.656 40.867 65.984
 40.867 69.297 c f
Q Q
showpage
%%Trailer
%%EOF
