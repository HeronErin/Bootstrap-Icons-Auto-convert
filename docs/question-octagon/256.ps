%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
54.48 1.754 m 55.605 0.629 57.129 0 58.715 0 c 133.285 0 l 134.871 0 136.395
 0.629 137.52 1.754 c 190.246 54.48 l 191.371 55.605 192 57.129 192 58.715
 c 192 133.285 l 192 134.871 191.371 136.395 190.246 137.52 c 137.52 190.246
 l 136.395 191.371 134.871 192 133.285 192 c 58.715 192 l 57.129 192 55.605
 191.371 54.48 190.246 c 1.754 137.52 l 0.629 136.395 0 134.871 0 133.285
 c 0 58.715 l 0 57.129 0.629 55.605 1.754 54.48 c h
61.199 12 m 12 61.199 l 12 130.801 l 61.199 180 l 130.801 180 l 180 130.801
 l 180 61.199 l 130.801 12 l h
61.199 12 m f
63.059 69.434 m 63.027 70.215 63.32 70.977 63.867 71.539 c 64.414 72.102
 65.168 72.41 65.953 72.395 c 75.852 72.395 l 77.508 72.395 78.828 71.039
 79.043 69.395 c 80.121 61.523 85.523 55.785 95.148 55.785 c 103.379 55.785
 110.918 59.902 110.918 69.801 c 110.918 77.422 106.43 80.926 99.34 86.254
 c 91.266 92.121 84.867 98.973 85.324 110.098 c 85.359 112.703 l 85.355 
112.703 l 85.383 114.344 86.719 115.656 88.355 115.656 c 98.09 115.656 l
 98.883 115.656 99.648 115.34 100.211 114.777 c 100.773 114.215 101.09 113.453
 101.09 112.656 c 101.09 111.395 l 101.09 102.777 104.367 100.27 113.211
 93.562 c 120.52 88.008 128.141 81.84 128.141 68.891 c 128.141 50.758 112.828
 42 96.066 42 c 80.863 42 64.207 49.078 63.066 69.434 c 81.75 138.59 m 81.75
 144.984 86.852 149.715 93.871 149.715 c 101.18 149.715 106.207 144.988 
106.207 138.59 c 106.207 131.965 101.168 127.309 93.859 127.309 c 86.852
 127.309 81.75 131.965 81.75 138.59 c f
Q Q
showpage
%%Trailer
%%EOF
