%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
435.84 14.016 m 444.836 5.043 457.023 0.004 469.727 0 c 1066.273 0 l 1078.977
 0.004 1091.164 5.043 1100.16 14.016 c 1521.984 435.84 l 1530.957 444.836
 1535.996 457.023 1536 469.727 c 1536 1066.273 l 1535.996 1078.977 1530.957
 1091.164 1521.984 1100.16 c 1100.16 1521.984 l 1091.164 1530.957 1078.977
 1535.996 1066.273 1536 c 469.727 1536 l 457.023 1535.996 444.836 1530.957
 435.84 1521.984 c 14.016 1100.16 l 5.043 1091.164 0.004 1078.977 0 1066.273
 c 0 469.727 l 0.004 457.023 5.043 444.836 14.016 435.84 c h
489.602 96 m 96 489.602 l 96 1046.402 l 489.602 1440 l 1046.402 1440 l 
1440.004 1046.398 l 1440 489.602 l 1046.398 96 l h
489.602 96 m f
504.48 555.457 m 504.215 561.723 506.547 567.82 510.926 572.309 c 515.309
 576.797 521.344 579.281 527.617 579.168 c 606.816 579.168 l 620.062 579.168
 630.625 568.32 632.352 555.168 c 640.992 492.191 684.191 446.305 761.184
 446.305 c 827.039 446.305 887.328 479.234 887.328 558.434 c 887.328 619.395
 851.426 647.426 794.688 690.051 c 730.078 736.996 678.91 791.812 682.559
 880.805 c 682.848 901.637 l 682.848 901.633 l 682.949 907.93 685.523 913.938
 690.012 918.355 c 694.5 922.773 700.547 925.25 706.848 925.246 c 784.703
 925.246 l 791.07 925.246 797.172 922.719 801.676 918.219 c 806.176 913.719
 808.703 907.613 808.703 901.246 c 808.703 891.168 l 808.703 822.238 834.91
 802.176 905.664 748.512 c 964.129 704.062 1025.09 654.719 1025.09 551.137
 c 1025.09 406.082 902.594 336 768.48 336 c 646.848 336 513.602 392.641 
504.48 555.457 c 653.953 1108.703 m 653.953 1159.871 694.754 1197.695 750.914
 1197.695 c 809.379 1197.695 849.602 1159.871 849.602 1108.703 c 849.602
 1055.711 809.281 1018.465 750.816 1018.465 c 694.754 1018.465 653.953 1055.711
 653.953 1108.703 c f
Q Q
showpage
%%Trailer
%%EOF
