%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 960 m 323.27 960 311.062 954.941 302.059 945.941 c 293.059 936.938 
288 924.73 288 912 c 288 144 l 288 131.27 293.059 119.062 302.059 110.059
 c 311.062 101.059 323.27 96 336 96 c 1200 96 l 1212.73 96 1224.938 101.059
 1233.941 110.059 c 1242.941 119.062 1248 131.27 1248 144 c 1248 912 l 1248
 924.73 1242.941 936.938 1233.941 945.941 c 1224.938 954.941 1212.73 960
 1200 960 c 1008 960 l 990.852 960 975.004 969.148 966.43 984 c 957.855 
998.852 957.855 1017.148 966.43 1032 c 975.004 1046.852 990.852 1056 1008
 1056 c 1200 1056 l 1238.191 1056 1274.816 1040.828 1301.824 1013.824 c 
1328.828 986.816 1344 950.191 1344 912 c 1344 144 l 1344 105.809 1328.828
 69.184 1301.824 42.176 c 1274.816 15.172 1238.191 0 1200 0 c 336 0 l 297.809
 0 261.184 15.172 234.176 42.176 c 207.172 69.184 192 105.809 192 144 c 
192 912 l 192 950.191 207.172 986.816 234.176 1013.824 c 261.184 1040.828
 297.809 1056 336 1056 c 528 1056 l 545.148 1056 560.996 1046.852 569.57
 1032 c 578.145 1017.148 578.145 998.852 569.57 984 c 560.996 969.148 545.148
 960 528 960 c h
336 960 m f*
734.016 1521.984 m 743.02 1531.012 755.25 1536.086 768 1536.086 c 780.75
 1536.086 792.98 1531.012 801.984 1521.984 c 1089.984 1233.984 l 1102.125
 1221.844 1106.867 1204.145 1102.422 1187.562 c 1097.98 1170.977 1085.023
 1158.02 1068.438 1153.578 c 1051.855 1149.133 1034.156 1153.875 1022.016
 1166.016 c 816 1372.129 l 816 528 l 816 510.852 806.852 495.004 792 486.43
 c 777.148 477.855 758.852 477.855 744 486.43 c 729.148 495.004 720 510.852
 720 528 c 720 1372.129 l 513.984 1166.016 l 501.844 1153.875 484.145 1149.133
 467.562 1153.578 c 450.977 1158.02 438.02 1170.977 433.578 1187.562 c 429.133
 1204.145 433.875 1221.844 446.016 1233.984 c h
734.016 1521.984 m f*
Q Q
showpage
%%Trailer
%%EOF
