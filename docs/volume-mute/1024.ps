%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 168 673 600
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 168 673 600
768 768 cairo_set_page_size
%%EndPageSetup
q 48 168 625 432 rectclip
1 0 0 -1 0 768 cm q
0 g
322.414 170.398 m 326.48 172.359 329.914 175.426 332.316 179.246 c 334.719
 183.066 335.996 187.488 336 192 c 336 576 l 335.992 582.051 333.695 587.879
 329.574 592.309 c 325.453 596.742 319.809 599.453 313.773 599.898 c 307.734
 600.348 301.754 598.496 297.023 594.719 c 183.602 504 l 72 504 l 65.637
 504 59.531 501.473 55.031 496.969 c 50.527 492.469 48 486.363 48 480 c 
48 288 l 48 281.637 50.527 275.531 55.031 271.031 c 59.531 266.527 65.637
 264 72 264 c 183.602 264 l 297.027 173.281 l 297.023 173.281 l 300.555 
170.457 304.812 168.688 309.305 168.18 c 313.797 167.668 318.344 168.441
 322.414 170.398 c 288 241.922 m 206.977 306.719 l 202.727 310.129 197.445
 311.992 192 312 c 96 312 l 96 456 l 192 456 l 197.445 456.008 202.727 457.871
 206.977 461.281 c 288 526.078 l h
664.992 271.012 m 664.992 271.008 l 669.508 275.512 672.043 281.625 672.043
 288 c 672.043 294.375 669.508 300.488 664.992 304.992 c 585.938 384 l 664.992
 463.008 l 671.062 469.078 673.434 477.926 671.211 486.219 c 668.988 494.512
 662.512 500.988 654.219 503.211 c 645.926 505.434 637.078 503.062 631.008
 496.992 c 552 417.938 l 472.992 496.992 l 466.922 503.062 458.074 505.434
 449.781 503.211 c 441.488 500.988 435.012 494.512 432.789 486.219 c 430.566
 477.926 432.938 469.078 439.008 463.008 c 518.062 384 l 439.008 304.992
 l 432.938 298.922 430.566 290.074 432.789 281.781 c 435.012 273.488 441.488
 267.012 449.781 264.789 c 458.074 262.566 466.922 264.938 472.992 271.008
 c 552 350.062 l 631.008 271.008 l 635.512 266.492 641.625 263.957 648 263.957
 c 654.375 263.957 660.488 266.492 664.992 271.008 c f
Q Q
showpage
%%Trailer
%%EOF
