%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 180
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 180 rectclip
1 0 0 -1 0 192 cm q
0 g
79.609 13.621 m 104.273 8.711 129.844 15.113 149.285 31.07 c 168.727 47.023
 180 70.852 180 96 c 180 99.312 177.312 102 174 102 c 170.688 102 168 99.312
 168 96 c 167.996 77.25 160.684 59.242 147.609 45.805 c 134.535 32.367 116.734
 24.559 97.996 24.039 c 79.254 23.52 61.051 30.328 47.25 43.023 c 33.453
 55.719 25.152 73.293 24.109 92.012 c 23.07 110.73 29.371 129.117 41.676
 143.262 c 53.98 157.41 71.316 166.199 90 167.762 c 90 155.699 l 74.512 
154.145 60.234 146.629 50.184 134.742 c 40.133 122.855 35.094 107.527 36.133
 91.996 c 37.172 76.465 44.207 61.945 55.75 51.504 c 67.293 41.062 82.445
 35.516 98.004 36.035 c 113.559 36.555 128.305 43.098 139.129 54.289 c 149.949
 65.477 156 80.434 156 96 c 156 99.312 153.312 102 150 102 c 146.688 102
 144 99.312 144 96 c 144 83.617 139.211 71.715 130.641 62.777 c 122.066 
53.84 110.375 48.562 98 48.047 c 85.629 47.531 73.535 51.816 64.25 60.008
 c 54.961 68.195 49.199 79.66 48.168 92 c 47.133 104.34 50.91 116.602 58.707
 126.223 c 66.5 135.844 77.715 142.082 90 143.629 c 90 131.496 l 80.934 
129.961 72.801 125.012 67.266 117.668 c 61.734 110.32 59.223 101.137 60.25
 92 c 61.273 82.863 65.758 74.461 72.781 68.527 c 79.805 62.59 88.836 59.57
 98.016 60.082 c 107.195 60.594 115.832 64.602 122.152 71.281 c 128.473 
77.961 131.996 86.805 132 96 c 132 99.312 129.312 102 126 102 c 122.688 
102 120 99.312 120 96 c 120 89.984 117.742 84.188 113.672 79.758 c 109.602
 75.328 104.02 72.586 98.023 72.078 c 92.027 71.574 86.062 73.336 81.305
 77.02 c 76.551 80.703 73.348 86.039 72.34 91.969 c 71.332 97.898 72.586
 103.992 75.855 109.043 c 79.129 114.09 84.176 117.727 90 119.23 c 90 106.391
 l 85.297 103.676 83.004 98.141 84.41 92.895 c 85.816 87.648 90.57 84 96
 84 c 101.43 84 106.184 87.648 107.59 92.895 c 108.996 98.141 106.703 103.676
 102 106.391 c 102 186 l 102 189.312 99.312 192 96 192 c 92.688 192 90 189.312
 90 186 c 90 179.785 l 62.73 177.824 38.121 162.715 24.035 139.281 c 9.945
 115.852 8.145 87.031 19.203 62.023 c 30.262 37.02 52.797 18.965 79.609 
13.621 c f
Q Q
showpage
%%Trailer
%%EOF
