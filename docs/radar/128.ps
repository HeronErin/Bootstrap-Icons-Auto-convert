%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 90
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 90 rectclip
1 0 0 -1 0 96 cm q
0 g
39.805 6.809 m 52.137 4.355 64.922 7.559 74.645 15.535 c 84.363 23.512 
90 35.426 90 48 c 90 49.656 88.656 51 87 51 c 85.344 51 84 49.656 84 48 
c 84 38.625 80.34 29.621 73.805 22.902 c 67.27 16.184 58.367 12.277 48.996
 12.02 c 39.629 11.758 30.523 15.164 23.625 21.512 c 16.727 27.859 12.578
 36.645 12.055 46.004 c 11.535 55.367 14.688 64.559 20.836 71.633 c 26.988
 78.703 35.66 83.098 45 83.879 c 45 77.848 l 45 77.852 l 37.258 77.07 30.117
 73.312 25.094 67.371 c 20.066 61.43 17.547 53.766 18.066 46 c 18.586 38.234
 22.102 30.973 27.875 25.75 c 33.648 20.531 41.223 17.758 49 18.016 c 56.781
 18.277 64.152 21.551 69.562 27.145 c 74.977 32.738 78 40.219 78 48 c 78
 49.656 76.656 51 75 51 c 73.344 51 72 49.656 72 48 c 72 41.809 69.605 35.855
 65.32 31.387 c 61.035 26.922 55.188 24.281 49 24.023 c 42.816 23.766 36.77
 25.906 32.125 30.004 c 27.48 34.098 24.602 39.832 24.082 46 c 23.566 52.172
 25.457 58.301 29.352 63.113 c 33.25 67.922 38.855 71.039 45 71.812 c 45
 65.746 l 40.469 64.98 36.398 62.504 33.633 58.832 c 30.867 55.16 29.613
 50.57 30.125 46 c 30.637 41.43 32.879 37.23 36.391 34.262 c 39.902 31.297
 44.418 29.785 49.008 30.039 c 53.598 30.297 57.918 32.301 61.078 35.641
 c 64.238 38.98 66 43.402 66 48 c 66 49.656 64.656 51 63 51 c 61.344 51 
60 49.656 60 48 c 60 43.422 57.395 39.238 53.285 37.223 c 49.172 35.207 
44.273 35.707 40.652 38.508 c 37.031 41.312 35.324 45.934 36.246 50.418 
c 37.172 54.902 40.566 58.473 45 59.617 c 45 53.195 l 42.648 51.84 41.5 
49.07 42.203 46.445 c 42.906 43.824 45.285 42 48 42 c 50.715 42 53.094 43.824
 53.797 46.445 c 54.5 49.07 53.352 51.84 51 53.195 c 51 93 l 51 94.656 49.656
 96 48 96 c 46.344 96 45 94.656 45 93 c 45 89.891 l 31.363 88.91 19.059 
81.355 12.016 69.641 c 4.973 57.926 4.07 43.516 9.602 31.012 c 15.129 18.512
 26.398 9.48 39.805 6.809 c f
Q Q
showpage
%%Trailer
%%EOF
