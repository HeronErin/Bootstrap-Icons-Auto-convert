%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 360
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 360 rectclip
1 0 0 -1 0 384 cm q
0 g
159.215 27.238 m 191.805 20.758 225.582 24.082 256.281 36.793 c 286.98 
49.508 313.219 71.039 331.68 98.668 c 350.145 126.293 359.996 158.773 360
 192 c 360 198.629 354.629 204 348 204 c 341.371 204 336 198.629 336 192
 c 335.996 154.504 321.363 118.488 295.219 91.609 c 269.07 64.734 233.473
 49.113 195.988 48.074 c 158.508 47.039 122.098 60.66 94.504 86.047 c 66.91
 111.434 50.305 146.582 48.223 184.023 c 46.141 221.461 58.742 258.234 83.352
 286.527 c 107.961 314.82 142.633 332.395 180 335.52 c 180 311.398 l 149.023
 308.285 120.469 293.258 100.367 269.484 c 80.266 245.711 70.191 215.059
 72.266 183.996 c 74.344 152.934 88.414 123.891 111.5 103.008 c 134.59 82.125
 164.891 71.031 196.004 72.066 c 227.121 73.105 256.613 86.199 278.258 108.574
 c 299.898 130.953 312 160.867 312 192 c 312 198.629 306.629 204 300 204
 c 293.371 204 288 198.629 288 192 c 287.996 167.234 278.426 143.426 261.281
 125.555 c 244.137 107.68 220.746 97.125 196.004 96.094 c 171.258 95.059
 147.074 103.629 128.5 120.012 c 109.926 136.395 98.402 159.32 96.336 184
 c 94.27 208.68 101.82 233.203 117.41 252.445 c 133.004 271.688 155.43 284.16
 180 287.258 c 180 262.992 l 161.867 259.918 145.598 250.023 134.535 235.332
 c 123.469 220.645 118.445 202.277 120.496 184 c 122.547 165.723 131.52 
148.926 145.562 137.055 c 159.609 125.184 177.668 119.141 196.031 120.164
 c 214.395 121.188 231.668 129.199 244.305 142.559 c 256.945 155.918 263.992
 173.609 264 192 c 264 198.629 258.629 204 252 204 c 245.371 204 240 198.629
 240 192 c 240.004 179.969 235.488 168.375 227.348 159.512 c 219.207 150.652
 208.035 145.172 196.047 144.16 c 184.059 143.145 172.125 146.672 162.609
 154.039 c 153.098 161.402 146.699 172.074 144.68 183.938 c 142.66 195.797
 145.172 207.984 151.715 218.082 c 158.254 228.184 168.352 235.457 180 238.465
 c 180 212.785 l 173.855 209.238 169.598 203.152 168.363 196.168 c 167.133
 189.18 169.055 182.008 173.613 176.574 c 178.176 171.137 184.906 168 192
 168 c 199.094 168 205.824 171.137 210.387 176.574 c 214.945 182.008 216.867
 189.18 215.637 196.168 c 214.402 203.152 210.145 209.238 204 212.785 c 
204 372 l 204 378.629 198.629 384 192 384 c 185.371 384 180 378.629 180 
372 c 180 359.566 l 139.441 356.652 101.32 339.125 72.703 310.238 c 44.086
 281.355 26.914 243.07 24.375 202.488 c 21.836 161.906 34.105 121.777 58.898
 89.551 c 83.695 57.328 119.34 35.188 159.215 27.238 c f
Q Q
showpage
%%Trailer
%%EOF
