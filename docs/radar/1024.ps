%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 720
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 720 rectclip
1 0 0 -1 0 768 cm q
0 g
318.434 54.48 m 383.609 41.512 451.168 48.164 512.562 73.59 c 573.961 99.016
 626.441 142.078 663.363 197.332 c 700.285 252.586 719.996 317.547 720 384
 c 720 392.574 715.426 400.496 708 404.785 c 700.574 409.07 691.426 409.07
 684 404.785 c 676.574 400.496 672 392.574 672 384 c 671.988 309.008 642.727
 236.977 590.434 183.223 c 538.141 129.469 466.945 98.23 391.98 96.152 c
 317.016 94.074 244.199 121.32 189.008 172.094 c 133.816 222.867 100.609
 293.168 96.445 368.047 c 92.277 442.922 117.484 516.473 166.703 573.055
 c 215.922 629.637 285.27 664.789 360 671.039 c 360 622.801 l 298.047 616.574
 240.941 586.516 200.734 538.969 c 160.531 491.422 140.379 430.113 144.535
 367.988 c 148.688 305.863 176.824 247.785 223.004 206.016 c 269.18 164.246
 329.781 142.059 392.012 144.137 c 454.238 146.215 513.227 172.395 556.512
 217.152 c 599.801 261.91 624 321.734 624 384 c 624 392.574 619.426 400.496
 612 404.785 c 604.574 409.07 595.426 409.07 588 404.785 c 580.574 400.496
 576 392.574 576 384 c 575.996 334.469 556.848 286.855 522.559 251.109 c
 488.273 215.363 441.496 194.25 392.008 192.184 c 342.516 190.121 294.145
 207.258 256.996 240.023 c 219.848 272.789 196.801 318.641 192.668 368 c
 188.539 417.359 203.641 466.406 234.824 504.891 c 266.008 543.375 310.855
 568.32 360 574.512 c 360 525.984 l 323.734 519.84 291.199 500.047 269.066
 470.668 c 246.938 441.289 236.891 404.551 240.996 368 c 245.098 331.445
 263.035 297.852 291.129 274.109 c 319.223 250.367 355.336 238.277 392.062
 240.324 c 428.785 242.375 463.332 258.402 488.613 285.117 c 513.895 311.836
 527.984 347.219 528 384 c 528 392.574 523.426 400.496 516 404.785 c 508.574
 409.07 499.426 409.07 492 404.785 c 484.574 400.496 480 392.574 480 384
 c 480.008 359.938 470.973 336.746 454.691 319.027 c 438.414 301.305 416.07
 290.348 392.094 288.316 c 368.113 286.289 344.246 293.34 325.223 308.074
 c 306.195 322.809 293.398 344.148 289.359 367.875 c 285.324 391.598 290.344
 415.969 303.426 436.168 c 316.508 456.363 336.699 470.91 360 476.93 c 360
 425.566 l 347.711 418.473 339.191 406.309 336.73 392.332 c 334.266 378.359
 338.109 364.016 347.23 353.145 c 356.352 342.277 369.812 336 384 336 c 
398.188 336 411.648 342.277 420.77 353.145 c 429.891 364.016 433.734 378.359
 431.27 392.332 c 428.809 406.309 420.289 418.473 408 425.566 c 408 744 
l 408 752.574 403.426 760.496 396 764.785 c 388.574 769.07 379.426 769.07
 372 764.785 c 364.574 760.496 360 752.574 360 744 c 360 719.137 l 278.887
 713.305 202.641 678.25 145.402 620.48 c 88.168 562.707 53.828 486.137 48.75
 404.973 c 43.676 323.809 68.207 243.559 117.801 179.105 c 167.391 114.652
 238.676 70.371 318.434 54.48 c f
Q Q
showpage
%%Trailer
%%EOF
