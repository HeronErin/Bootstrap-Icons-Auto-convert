%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 91 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 91 96
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 85 96 rectclip
1 0 0 -1 0 96 cm q
0 g
30.391 0.949 m 31.641 0.324 33.02 0 34.414 0 c 61.586 0 l 62.98 0 64.355
 0.324 65.605 0.949 c 85.027 10.656 l 88.078 12.18 90.008 15.297 90.008 
18.707 c 90.008 81 l 90.008 84.977 88.426 88.793 85.613 91.605 c 82.801 
94.418 78.984 96 75.008 96 c 21.008 96 l 17.027 96 13.211 94.422 10.395 
91.609 c 7.582 88.797 6 84.98 6 81 c 6 18.707 l 5.996 15.301 7.922 12.184
 10.969 10.656 c h
12 56.23 m 12 81 l 12 85.969 16.031 90 21 90 c 45 90 l 45 48 l 39.883 48
 l 39.59 48 39.297 48.043 39.02 48.125 c h
51 90 m 75 90 l 79.969 90 84 85.969 84 81 c 84 56.23 l 56.98 48.129 l 56.98
 48.133 l 56.703 48.047 56.41 48 56.117 48 c 51 48 l h
84 49.969 m 84 18.707 l 84 17.574 83.359 16.535 82.344 16.027 c 62.93 6.32
 l 62.93 6.316 l 62.512 6.109 62.051 6 61.586 6 c 34.414 6 l 33.953 6 33.492
 6.109 33.078 6.316 c 13.66 16.02 l 12.645 16.527 12 17.57 12 18.707 c 12
 49.969 l 18 48.168 l 18 30 l 18 26.688 20.688 24 24 24 c 72 24 l 73.59 
24 75.117 24.633 76.242 25.758 c 77.367 26.883 78 28.41 78 30 c 78 48.168
 l h
72 46.367 m 72 30 l 51 30 l 51 42 l 56.117 42 l 56.992 42 57.863 42.125
 58.703 42.379 c h
45 42 m 45 30 l 24 30 l 24 46.367 l 37.297 42.379 l 38.133 42.129 39.004
 42 39.875 42 c h
39 12 m 37.344 12 36 13.344 36 15 c 36 16.656 37.344 18 39 18 c 57 18 l
 58.656 18 60 16.656 60 15 c 60 13.344 58.656 12 57 12 c h
21 60 m 19.344 60 18 61.344 18 63 c 18 64.656 19.344 66 21 66 c 22.656 
66 24 64.656 24 63 c 24 61.344 22.656 60 21 60 c 75 60 m 73.344 60 72 61.344
 72 63 c 72 64.656 73.344 66 75 66 c 76.656 66 78 64.656 78 63 c 78 61.344
 76.656 60 75 60 c 30 78 m 30 81.312 27.312 84 24 84 c 20.688 84 18 81.312
 18 78 c 18 74.688 20.688 72 24 72 c 27.312 72 30 74.688 30 78 c 72 84 m
 75.312 84 78 81.312 78 78 c 78 74.688 75.312 72 72 72 c 68.688 72 66 74.688
 66 78 c 66 81.312 68.688 84 72 84 c f
Q Q
showpage
%%Trailer
%%EOF
