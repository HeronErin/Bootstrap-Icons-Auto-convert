%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1441 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1441 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1345 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
486.238 15.168 m 506.242 5.18 528.297 -0.012 550.656 0 c 985.344 0 l 1007.672
 0 1029.691 5.195 1049.664 15.168 c 1360.418 170.496 l 1360.414 170.496 
l 1384.355 182.449 1404.492 200.832 1418.566 223.59 c 1432.641 246.344 1440.094
 272.57 1440.098 299.328 c 1440.098 1296 l 1440.098 1338.129 1429.008 1379.516
 1407.941 1416 c 1386.879 1452.484 1356.582 1482.781 1320.098 1503.848 c
 1283.613 1524.91 1242.227 1536 1200.098 1536 c 336.098 1536 l 293.957 1536.016
 252.555 1524.938 216.055 1503.879 c 179.555 1482.816 149.246 1452.52 128.168
 1416.027 c 107.094 1379.535 96 1338.141 96 1296 c 96 299.328 l 95.984 272.59
 103.41 246.379 117.449 223.625 c 131.488 200.871 151.586 182.473 175.488
 170.496 c h
192 899.711 m 192 1296 l 192 1334.191 207.172 1370.816 234.176 1397.824
 c 261.184 1424.828 297.809 1440 336 1440 c 720 1440 l 720 768 l 638.113
 768 l 633.43 767.996 628.773 768.672 624.289 770.016 c h
816 1440 m 1200 1440 l 1238.191 1440 1274.816 1424.828 1301.824 1397.824
 c 1328.828 1370.816 1344 1334.191 1344 1296 c 1344 899.711 l 911.711 770.109
 l 911.711 770.113 l 907.23 768.738 902.574 768.023 897.887 768 c 816 768
 l h
1344 799.488 m 1344 299.328 l 1344 290.422 1341.52 281.691 1336.844 274.113
 c 1332.164 266.535 1325.469 260.406 1317.504 256.414 c 1006.848 101.086
 l 1006.848 101.09 l 1000.172 97.742 992.809 96 985.344 96 c 550.656 96 
l 543.223 96.016 535.895 97.758 529.246 101.09 c 218.594 256.32 l 210.598
 260.305 203.871 266.441 199.172 274.039 c 194.477 281.637 191.992 290.395
 192 299.328 c 192 799.488 l 288 770.688 l 288 480 l 288 454.539 298.113
 430.121 316.117 412.117 c 334.121 394.113 358.539 384 384 384 c 1152 384
 l 1177.461 384 1201.879 394.113 1219.883 412.117 c 1237.887 430.121 1248
 454.539 1248 480 c 1248 770.688 l h
1152 741.887 m 1152 480 l 816 480 l 816 672 l 897.887 672 l 911.902 671.992
 925.84 674.031 939.266 678.047 c h
720 672 m 720 480 l 384 480 l 384 741.887 l 596.734 678.047 l 610.129 674.039
 624.035 672 638.016 672 c h
624 192 m 606.852 192 591.004 201.148 582.43 216 c 573.855 230.852 573.855
 249.148 582.43 264 c 591.004 278.852 606.852 288 624 288 c 912 288 l 929.148
 288 944.996 278.852 953.57 264 c 962.145 249.148 962.145 230.852 953.57
 216 c 944.996 201.148 929.148 192 912 192 c h
336 960 m 318.852 960 303.004 969.148 294.43 984 c 285.855 998.852 285.855
 1017.148 294.43 1032 c 303.004 1046.852 318.852 1056 336 1056 c 353.148
 1056 368.996 1046.852 377.57 1032 c 386.145 1017.148 386.145 998.852 377.57
 984 c 368.996 969.148 353.148 960 336 960 c 1200 960 m 1182.852 960 1167.004
 969.148 1158.43 984 c 1149.855 998.852 1149.855 1017.148 1158.43 1032 c
 1167.004 1046.852 1182.852 1056 1200 1056 c 1217.148 1056 1232.996 1046.852
 1241.57 1032 c 1250.145 1017.148 1250.145 998.852 1241.57 984 c 1232.996
 969.148 1217.148 960 1200 960 c 480 1248 m 480 1282.297 461.703 1313.988
 432 1331.137 c 402.297 1348.289 365.703 1348.289 336 1331.137 c 306.297
 1313.988 288 1282.297 288 1248 c 288 1213.703 306.297 1182.012 336 1164.863
 c 365.703 1147.711 402.297 1147.711 432 1164.863 c 461.703 1182.012 480
 1213.703 480 1248 c 1152 1344 m 1186.297 1344 1217.988 1325.703 1235.137
 1296 c 1252.289 1266.297 1252.289 1229.703 1235.137 1200 c 1217.988 1170.297
 1186.297 1152 1152 1152 c 1117.703 1152 1086.012 1170.297 1068.863 1200
 c 1051.711 1229.703 1051.711 1266.297 1068.863 1296 c 1086.012 1325.703
 1117.703 1344 1152 1344 c f
Q Q
showpage
%%Trailer
%%EOF
