%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 0 m 9.309 0 12 2.184 12 4.867 c 12 5.941 11.582 6.91 10.715 7.863 c 9.457
 9.312 6.641 11.078 6 11.348 c 5.379 11.609 5.449 11.199 5.477 11.039 c 
5.48 11.027 l 5.566 10.512 l 5.586 10.359 5.609 10.121 5.547 9.969 c 5.48
 9.801 5.215 9.715 5.02 9.672 c 2.133 9.293 0 7.277 0 4.867 c 0 2.184 2.691
 0 6 0 c 3.766 5.766 m 2.621 5.766 l 2.621 3.688 l 2.621 3.625 2.57 3.57
 2.508 3.57 c 2.086 3.57 l 2.02 3.57 1.969 3.625 1.969 3.688 c 1.969 6.301
 l 1.969 6.332 1.98 6.359 2 6.383 c 2.004 6.387 l 2.027 6.406 2.055 6.418
 2.086 6.418 c 3.766 6.418 l 3.832 6.418 3.883 6.367 3.883 6.301 c 3.883
 5.879 l 3.883 5.883 l 3.883 5.816 3.832 5.766 3.766 5.766 c 4.359 3.574
 m 4.359 3.57 l 4.297 3.57 4.242 3.625 4.242 3.688 c 4.242 6.301 l 4.242
 6.367 4.293 6.418 4.359 6.418 c 4.781 6.418 l 4.848 6.418 4.898 6.367 4.898
 6.301 c 4.898 3.688 l 4.898 3.625 4.844 3.57 4.781 3.57 c h
7.258 3.574 m 7.258 3.57 l 7.191 3.57 7.141 3.625 7.141 3.688 c 7.141 5.238
 l 5.941 3.625 l 5.934 3.613 l 5.914 3.594 l 5.906 3.594 l 5.902 3.59 l 
5.895 3.586 l 5.891 3.586 l 5.883 3.582 l 5.879 3.582 l 5.871 3.578 l 5.418
 3.578 l 5.426 3.574 l 5.359 3.574 5.309 3.625 5.309 3.688 c 5.309 6.301
 l 5.309 6.367 5.359 6.418 5.426 6.418 c 5.848 6.418 l 5.914 6.418 5.965
 6.367 5.965 6.301 c 5.965 4.75 l 7.164 6.371 l 7.16 6.371 l 7.172 6.383
 7.18 6.391 7.191 6.398 c 7.199 6.402 l 7.203 6.402 l 7.211 6.406 l 7.215
 6.41 l 7.219 6.41 l 7.227 6.414 l 7.23 6.414 l 7.227 6.414 l 7.238 6.418
 7.246 6.418 7.258 6.422 c 7.68 6.422 l 7.746 6.422 7.797 6.371 7.797 6.305
 c 7.793 3.688 l 7.793 3.625 7.742 3.57 7.68 3.57 c h
10.117 4.113 m 10.117 3.688 l 10.117 3.625 10.066 3.57 10.004 3.57 c 8.32
 3.57 l 8.289 3.57 8.262 3.582 8.238 3.605 c 8.238 3.609 l 8.215 3.629 8.203
 3.66 8.203 3.688 c 8.203 6.301 l 8.203 6.332 8.215 6.359 8.234 6.383 c 
8.234 6.387 l 8.238 6.387 l 8.262 6.406 8.289 6.418 8.32 6.418 c 10 6.418
 l 10.066 6.418 10.117 6.367 10.117 6.301 c 10.117 5.879 l 10.117 5.883 
l 10.117 5.816 10.066 5.766 10.004 5.766 c 8.859 5.766 l 8.859 5.324 l 10.004
 5.324 l 10.07 5.324 10.121 5.273 10.121 5.207 c 10.121 4.785 l 10.117 4.785
 l 10.117 4.723 10.066 4.668 10 4.668 c 8.859 4.668 l 8.859 4.227 l 10.004
 4.227 l 10.07 4.227 10.121 4.176 10.121 4.109 c h
10.117 4.113 m f
Q Q
showpage
%%Trailer
%%EOF
