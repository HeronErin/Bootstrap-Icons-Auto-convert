%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 36 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 36 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 36 768 732 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 595.727 0 768 139.777 768 311.617 c 768 380.402 741.359 442.32 
685.68 503.328 c 605.137 596.062 424.992 709.008 384 726.289 c 344.16 743.09
 348.77 716.832 350.594 706.465 c 350.738 705.602 l 356.211 672.723 l 357.508
 662.93 358.852 647.715 354.965 638.02 c 350.645 627.316 333.652 621.746
 321.172 619.059 c 136.609 594.719 0 465.648 0 311.617 c 0 139.777 172.32
 0 384 0 c 241.055 368.93 m 167.855 368.93 l 167.855 236.062 l 167.855 231.945
 164.531 228.602 160.414 228.574 c 133.441 228.574 l 129.305 228.574 125.953
 231.93 125.953 236.062 c 125.953 403.391 l 125.953 405.359 126.77 407.23
 128.066 408.527 c 128.066 408.574 l 128.262 408.77 l 128.258 408.77 l 129.637
 410.125 131.504 410.867 133.441 410.832 c 241.059 410.832 l 245.188 410.832
 248.5 407.473 248.5 403.344 c 248.5 376.465 l 248.496 376.465 l 248.508
 374.477 247.73 372.57 246.336 371.156 c 244.941 369.742 243.043 368.941
 241.055 368.93 c 279.023 228.578 m 279.023 228.574 l 274.887 228.574 271.535
 231.93 271.535 236.062 c 271.535 403.391 l 271.535 407.52 274.895 410.832
 279.023 410.832 c 306 410.832 l 310.129 410.832 313.441 407.473 313.441
 403.391 c 313.441 236.062 l 313.441 231.945 310.117 228.602 306 228.574
 c h
464.449 228.578 m 464.449 228.574 l 460.312 228.574 456.961 231.93 456.961
 236.062 c 456.961 335.422 l 380.305 231.938 l 379.68 231.219 l 379.68 231.172
 l 379.055 230.547 l 378.527 230.113 l 378.48 230.113 l 378.238 229.922 
l 378.094 229.824 l 377.855 229.68 l 377.473 229.441 l 377.375 229.441 l
 377.23 229.344 l 376.75 229.152 l 376.559 229.055 l 376.078 228.91 l 375.98
 228.91 l 375.836 228.863 l 375.402 228.766 l 375.113 228.766 l 374.969 
228.719 l 374.777 228.719 l 374.68 228.672 l 347.129 228.672 l 347.137 228.672
 l 343.02 228.672 339.676 231.996 339.648 236.113 c 339.648 403.441 l 339.648
 407.57 343.008 410.883 347.137 410.883 c 374.016 410.883 l 378.191 410.883
 381.551 407.523 381.551 403.441 c 381.551 304.082 l 458.352 407.762 l 458.891
 408.449 459.52 409.062 460.223 409.586 c 460.27 409.633 l 460.75 409.922
 l 460.941 410.02 l 461.324 410.211 l 461.66 410.355 l 461.898 410.453 l
 462.379 410.598 l 462.523 410.598 l 462.527 410.594 l 463.156 410.754 463.801
 410.848 464.449 410.879 c 491.328 410.879 l 495.504 410.879 498.863 407.52
 498.863 403.438 c 498.863 236.062 l 498.863 231.93 495.512 228.574 491.375
 228.574 c h
647.57 262.992 m 647.57 236.113 l 647.566 236.113 l 647.582 234.125 646.805
 232.215 645.41 230.805 c 644.012 229.391 642.113 228.59 640.129 228.574
 c 532.512 228.574 l 530.578 228.602 528.73 229.355 527.328 230.688 c 527.281
 230.688 l 527.234 230.785 l 527.137 230.93 l 525.816 232.316 525.062 234.148
 525.023 236.062 c 525.023 403.391 l 525.023 405.359 525.84 407.23 527.137
 408.527 c 527.234 408.672 l 527.332 408.77 l 527.328 408.77 l 528.734 410.082
 530.586 410.816 532.512 410.832 c 640.129 410.832 l 644.258 410.832 647.57
 407.473 647.57 403.344 c 647.57 376.465 l 647.566 376.465 l 647.582 374.477
 646.805 372.57 645.41 371.156 c 644.012 369.742 642.113 368.941 640.129
 368.93 c 566.879 368.93 l 566.879 340.656 l 640.078 340.656 l 644.207 340.656
 647.52 337.297 647.52 333.168 c 647.52 306.289 l 647.531 304.301 646.758
 302.391 645.359 300.98 c 643.965 299.566 642.066 298.766 640.078 298.754
 c 566.879 298.754 l 566.879 270.48 l 640.078 270.48 l 644.207 270.48 647.52
 267.121 647.52 262.992 c h
647.57 262.992 m f
Q Q
showpage
%%Trailer
%%EOF
