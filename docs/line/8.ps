%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 4.652 0 6 1.094 6 2.434 c 6 2.973 5.793 3.453 5.355 3.93 c 4.727 
4.652 3.32 5.535 3 5.672 c 2.688 5.805 2.727 5.598 2.738 5.516 c 2.738 5.508
 l 2.781 5.25 l 2.793 5.172 2.801 5.055 2.773 4.98 c 2.738 4.898 2.605 4.852
 2.508 4.832 c 1.066 4.645 0 3.637 0 2.434 c 0 1.094 1.348 0 3 0 c 1.883
 2.883 m 1.312 2.883 l 1.312 1.844 l 1.312 1.812 1.285 1.785 1.254 1.785
 c 1.043 1.785 l 1.012 1.785 0.984 1.812 0.984 1.844 c 0.984 3.152 l 0.984
 3.168 0.992 3.184 1 3.191 c 1.004 3.195 l 1.012 3.203 1.027 3.211 1.043
 3.211 c 1.883 3.211 l 1.914 3.211 1.941 3.184 1.941 3.152 c 1.941 2.941
 l 1.941 2.91 1.914 2.883 1.883 2.883 c 2.18 1.785 m 2.148 1.785 2.121 1.812
 2.121 1.844 c 2.121 3.152 l 2.121 3.184 2.148 3.211 2.18 3.211 c 2.391 
3.211 l 2.422 3.211 2.449 3.184 2.449 3.152 c 2.449 1.844 l 2.449 1.812 
2.422 1.785 2.391 1.785 c h
3.629 1.785 m 3.598 1.785 3.57 1.812 3.57 1.844 c 3.57 2.621 l 2.973 1.812
 l 2.961 1.801 l 2.953 1.797 l 2.719 1.797 l 2.711 1.785 l 2.68 1.785 2.652
 1.812 2.652 1.844 c 2.652 3.152 l 2.652 3.184 2.68 3.211 2.711 3.211 c 
2.922 3.211 l 2.953 3.211 2.98 3.184 2.98 3.152 c 2.98 2.375 l 3.582 3.184
 l 3.582 3.188 l 3.586 3.191 3.59 3.195 3.594 3.199 c 3.598 3.203 l 3.609
 3.203 l 3.613 3.207 l 3.617 3.211 3.625 3.211 3.629 3.211 c 3.84 3.211 
l 3.871 3.211 3.898 3.184 3.898 3.152 c 3.898 1.844 l 3.898 1.812 3.871 
1.785 3.84 1.785 c h
5.059 2.055 m 5.059 1.844 l 5.059 1.812 5.035 1.785 5 1.785 c 4.16 1.785
 l 4.145 1.785 4.129 1.793 4.121 1.801 c 4.117 1.805 l 4.109 1.816 4.102
 1.828 4.102 1.844 c 4.102 3.152 l 4.102 3.168 4.109 3.184 4.117 3.191 c
 4.121 3.195 l 4.129 3.203 4.145 3.211 4.16 3.211 c 5 3.211 l 5.031 3.211
 5.059 3.184 5.059 3.152 c 5.059 2.941 l 5.059 2.91 5.035 2.883 5 2.883 
c 4.43 2.883 l 4.43 2.66 l 5 2.66 l 5.031 2.66 5.059 2.633 5.059 2.602 c
 5.059 2.391 l 5.059 2.395 l 5.059 2.359 5.031 2.336 5 2.336 c 4.43 2.336
 l 4.43 2.113 l 5 2.113 l 5.031 2.113 5.059 2.086 5.059 2.055 c h
5.059 2.055 m f
Q Q
showpage
%%Trailer
%%EOF
