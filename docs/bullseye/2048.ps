%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1440 m 589.773 1440 418.848 1369.199 292.824 1243.176 c 166.801 1117.152
 96 946.227 96 768 c 96 589.773 166.801 418.848 292.824 292.824 c 418.848
 166.801 589.773 96 768 96 c 946.227 96 1117.152 166.801 1243.176 292.824
 c 1369.199 418.848 1440 589.773 1440 768 c 1440 946.227 1369.199 1117.152
 1243.176 1243.176 c 1117.152 1369.199 946.227 1440 768 1440 c 768 1536 
m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 1167.031 1536
 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 224.941 c 1167.031
 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941 224.941 c 80.914
 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 
368.969 1455.086 564.312 1536 768 1536 c f
768 1248 m 640.695 1248 518.605 1197.43 428.59 1107.41 c 338.57 1017.395
 288 895.305 288 768 c 288 640.695 338.57 518.605 428.59 428.59 c 518.605
 338.57 640.695 288 768 288 c 895.305 288 1017.395 338.57 1107.41 428.59
 c 1197.43 518.605 1248 640.695 1248 768 c 1248 895.305 1197.43 1017.395
 1107.41 1107.41 c 1017.395 1197.43 895.305 1248 768 1248 c 768 1344 m 920.766
 1344 1067.273 1283.316 1175.293 1175.293 c 1283.316 1067.273 1344 920.766
 1344 768 c 1344 615.234 1283.316 468.727 1175.293 360.707 c 1067.273 252.684
 920.766 192 768 192 c 615.234 192 468.727 252.684 360.707 360.707 c 252.684
 468.727 192 615.234 192 768 c 192 920.766 252.684 1067.273 360.707 1175.293
 c 468.727 1283.316 615.234 1344 768 1344 c f
768 1056 m 691.617 1056 618.363 1025.656 564.352 971.648 c 510.344 917.637
 480 844.383 480 768 c 480 691.617 510.344 618.363 564.352 564.352 c 618.363
 510.344 691.617 480 768 480 c 844.383 480 917.637 510.344 971.648 564.352
 c 1025.656 618.363 1056 691.617 1056 768 c 1056 844.383 1025.656 917.637
 971.648 971.648 c 917.637 1025.656 844.383 1056 768 1056 c 768 1152 m 869.844
 1152 967.516 1111.543 1039.527 1039.527 c 1111.543 967.516 1152 869.844
 1152 768 c 1152 666.156 1111.543 568.484 1039.527 496.473 c 967.516 424.457
 869.844 384 768 384 c 666.156 384 568.484 424.457 496.473 496.473 c 424.457
 568.484 384 666.156 384 768 c 384 869.844 424.457 967.516 496.473 1039.527
 c 568.484 1111.543 666.156 1152 768 1152 c f
912 768 m 912 819.445 884.555 866.984 840 892.707 c 795.445 918.43 740.555
 918.43 696 892.707 c 651.445 866.984 624 819.445 624 768 c 624 716.555 
651.445 669.016 696 643.293 c 740.555 617.57 795.445 617.57 840 643.293 
c 884.555 669.016 912 716.555 912 768 c f
Q Q
showpage
%%Trailer
%%EOF
