%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 720 m 294.887 720 209.426 684.602 146.414 621.586 c 83.398 558.574 
48 473.113 48 384 c 48 294.887 83.398 209.426 146.414 146.414 c 209.426 
83.398 294.887 48 384 48 c 473.113 48 558.574 83.398 621.586 146.414 c 684.602
 209.426 720 294.887 720 384 c 720 473.113 684.602 558.574 621.586 621.586
 c 558.574 684.602 473.113 720 384 720 c 384 768 m 485.844 768 583.516 727.543
 655.527 655.527 c 727.543 583.516 768 485.844 768 384 c 768 282.156 727.543
 184.484 655.527 112.473 c 583.516 40.457 485.844 0 384 0 c 282.156 0 184.484
 40.457 112.473 112.473 c 40.457 184.484 0 282.156 0 384 c 0 485.844 40.457
 583.516 112.473 655.527 c 184.484 727.543 282.156 768 384 768 c f
384 624 m 320.348 624 259.305 598.715 214.293 553.707 c 169.285 508.695
 144 447.652 144 384 c 144 320.348 169.285 259.305 214.293 214.293 c 259.305
 169.285 320.348 144 384 144 c 447.652 144 508.695 169.285 553.707 214.293
 c 598.715 259.305 624 320.348 624 384 c 624 447.652 598.715 508.695 553.707
 553.707 c 508.695 598.715 447.652 624 384 624 c 384 672 m 460.383 672 533.637
 641.656 587.648 587.648 c 641.656 533.637 672 460.383 672 384 c 672 307.617
 641.656 234.363 587.648 180.352 c 533.637 126.344 460.383 96 384 96 c 307.617
 96 234.363 126.344 180.352 180.352 c 126.344 234.363 96 307.617 96 384 
c 96 460.383 126.344 533.637 180.352 587.648 c 234.363 641.656 307.617 672
 384 672 c f
384 528 m 332.555 528 285.016 500.555 259.293 456 c 233.57 411.445 233.57
 356.555 259.293 312 c 285.016 267.445 332.555 240 384 240 c 435.445 240
 482.984 267.445 508.707 312 c 534.43 356.555 534.43 411.445 508.707 456
 c 482.984 500.555 435.445 528 384 528 c 384 576 m 434.922 576 483.758 555.773
 519.766 519.766 c 555.773 483.758 576 434.922 576 384 c 576 333.078 555.773
 284.242 519.766 248.234 c 483.758 212.227 434.922 192 384 192 c 333.078
 192 284.242 212.227 248.234 248.234 c 212.227 284.242 192 333.078 192 384
 c 192 434.922 212.227 483.758 248.234 519.766 c 284.242 555.773 333.078
 576 384 576 c f
456 384 m 456 409.723 442.277 433.492 420 446.355 c 397.723 459.215 370.277
 459.215 348 446.355 c 325.723 433.492 312 409.723 312 384 c 312 358.277
 325.723 334.508 348 321.645 c 370.277 308.785 397.723 308.785 420 321.645
 c 442.277 334.508 456 358.277 456 384 c f
Q Q
showpage
%%Trailer
%%EOF
