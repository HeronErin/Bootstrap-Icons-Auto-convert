%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 95 96 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 95 96 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 95 96 1345 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
1104 1200 m 1054.863 1199.996 1006.32 1189.215 961.805 1168.414 c 917.285
 1147.613 877.867 1117.301 846.336 1079.617 c 889.164 1176.676 939.961 1270.02
 998.207 1358.688 c 1020.383 1392.289 996.285 1440 956.16 1440 c 579.84 
1440 l 539.617 1440 515.52 1392.289 537.793 1358.688 c 596.039 1270.02 646.836
 1176.676 689.664 1079.617 c 640.59 1138.262 572.984 1178.414 498.004 1193.441
 c 423.027 1208.469 345.168 1197.473 277.285 1162.266 c 209.402 1127.062
 155.559 1069.754 124.648 999.812 c 93.738 929.867 87.609 851.473 107.277
 777.578 c 126.945 703.68 171.23 638.703 232.82 593.379 c 294.406 548.055
 369.613 525.094 446.016 528.289 c 426 461.184 427.453 389.5 450.168 323.262
 c 472.887 257.023 515.73 199.535 572.715 158.836 c 629.695 118.133 697.973
 96.254 768 96.254 c 838.027 96.254 906.305 118.133 963.285 158.836 c 1020.27
 199.535 1063.113 257.023 1085.832 323.262 c 1108.547 389.5 1110 461.184
 1089.984 528.289 c 1149.695 525.812 1208.98 539.309 1261.738 567.383 c 
1314.492 595.457 1358.809 637.094 1390.109 688.004 c 1421.414 738.91 1438.574
 797.242 1439.82 856.992 c 1441.066 916.738 1426.355 975.738 1397.203 1027.906
 c 1368.051 1080.074 1325.512 1123.523 1273.973 1153.773 c 1222.434 1184.023
 1163.762 1199.98 1104 1200 c f
Q Q
showpage
%%Trailer
%%EOF
