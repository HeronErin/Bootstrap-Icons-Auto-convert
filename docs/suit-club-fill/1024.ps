%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 47 48 720 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 47 48 720 720
768 768 cairo_set_page_size
%%EndPageSetup
q 47 48 673 672 rectclip
1 0 0 -1 0 768 cm q
0 g
552 600 m 527.43 599.996 503.16 594.605 480.902 584.207 c 458.641 573.809
 438.934 558.652 423.168 539.809 c 444.582 588.34 469.98 635.012 499.105
 679.344 c 510.195 696.145 498.145 720 478.082 720 c 289.922 720 l 269.809
 720 257.762 696.145 268.898 679.344 c 268.895 679.344 l 298.02 635.012 
323.418 588.34 344.832 539.809 c 320.297 569.133 286.492 589.207 249.004
 596.723 c 211.516 604.234 172.582 598.738 138.641 581.133 c 104.699 563.531
 77.777 534.879 62.324 499.906 c 46.871 464.934 43.805 425.738 53.641 388.789
 c 63.473 351.84 85.617 319.352 116.41 296.688 c 147.203 274.027 184.809
 262.547 223.008 264.145 c 213 230.59 213.727 194.75 225.086 161.629 c 236.441
 128.512 257.863 99.766 286.355 79.418 c 314.848 59.066 348.988 48.129 384
 48.129 c 419.012 48.129 453.152 59.066 481.645 79.418 c 510.137 99.766 
531.559 128.512 542.914 161.629 c 554.273 194.75 555 230.59 544.992 264.145
 c 574.848 262.906 604.492 269.656 630.867 283.691 c 657.246 297.73 679.402
 318.547 695.055 344 c 710.707 369.453 719.285 398.621 719.91 428.496 c 
720.531 458.367 713.176 487.867 698.602 513.953 c 684.023 540.035 662.758
 561.762 636.988 576.887 c 611.219 592.012 581.879 599.992 552 600 c f
Q Q
showpage
%%Trailer
%%EOF
