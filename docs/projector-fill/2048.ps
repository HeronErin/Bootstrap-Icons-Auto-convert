%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 384 1536 1152
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 384 1536 1152
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 384 1536 768 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 384 m 141.078 384 92.242 404.227 56.234 440.234 c 20.227 476.242 0 
525.078 0 576 c 0 864 l 0 897.703 8.871 930.812 25.723 960 c 42.574 989.188
 66.812 1013.426 96 1030.277 c 125.188 1047.129 158.297 1056 192 1056 c 
192 1081.461 202.113 1105.879 220.117 1123.883 c 238.121 1141.887 262.539
 1152 288 1152 c 384 1152 l 409.461 1152 433.879 1141.887 451.883 1123.883
 c 469.887 1105.879 480 1081.461 480 1056 c 1056 1056 l 1056 1081.461 1066.113
 1105.879 1084.117 1123.883 c 1102.121 1141.887 1126.539 1152 1152 1152 
c 1248 1152 l 1273.461 1152 1297.879 1141.887 1315.883 1123.883 c 1333.887
 1105.879 1344 1081.461 1344 1056 c 1377.703 1056 1410.812 1047.129 1440
 1030.277 c 1469.188 1013.426 1493.426 989.188 1510.277 960 c 1527.129 930.812
 1536 897.703 1536 864 c 1536 576 l 1536 542.297 1527.129 509.188 1510.277
 480 c 1493.426 450.812 1469.188 426.574 1440 409.723 c 1410.812 392.871
 1377.703 384 1344 384 c h
240 576 m 624 576 l 641.148 576 656.996 585.148 665.57 600 c 674.145 614.852
 674.145 633.148 665.57 648 c 656.996 662.852 641.148 672 624 672 c 240 
672 l 222.852 672 207.004 662.852 198.43 648 c 189.855 633.148 189.855 614.852
 198.43 600 c 207.004 585.148 222.852 576 240 576 c 1344 720 m 1344 771.445
 1316.555 818.984 1272 844.707 c 1227.445 870.43 1172.555 870.43 1128 844.707
 c 1083.445 818.984 1056 771.445 1056 720 c 1056 668.555 1083.445 621.016
 1128 595.293 c 1172.555 569.57 1227.445 569.57 1272 595.293 c 1316.555 
621.016 1344 668.555 1344 720 c 192 816 m 192 803.27 197.059 791.062 206.059
 782.059 c 215.062 773.059 227.27 768 240 768 c 624 768 l 641.148 768 656.996
 777.148 665.57 792 c 674.145 806.852 674.145 825.148 665.57 840 c 656.996
 854.852 641.148 864 624 864 c 240 864 l 227.27 864 215.062 858.941 206.059
 849.941 c 197.059 840.938 192 828.73 192 816 c f
Q Q
showpage
%%Trailer
%%EOF
