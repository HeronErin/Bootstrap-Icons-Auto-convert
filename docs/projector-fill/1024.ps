%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 192 768 576
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 192 768 576
768 768 cairo_set_page_size
%%EndPageSetup
q 0 192 768 384 rectclip
1 0 0 -1 0 768 cm q
0 g
96 192 m 70.539 192 46.121 202.113 28.117 220.117 c 10.113 238.121 0 262.539
 0 288 c 0 432 l 0 457.461 10.113 481.879 28.117 499.883 c 46.121 517.887
 70.539 528 96 528 c 96 540.73 101.059 552.938 110.059 561.941 c 119.062
 570.941 131.27 576 144 576 c 192 576 l 204.73 576 216.938 570.941 225.941
 561.941 c 234.941 552.938 240 540.73 240 528 c 528 528 l 528 540.73 533.059
 552.938 542.059 561.941 c 551.062 570.941 563.27 576 576 576 c 624 576 
l 636.73 576 648.938 570.941 657.941 561.941 c 666.941 552.938 672 540.73
 672 528 c 697.461 528 721.879 517.887 739.883 499.883 c 757.887 481.879
 768 457.461 768 432 c 768 288 l 768 262.539 757.887 238.121 739.883 220.117
 c 721.879 202.113 697.461 192 672 192 c h
120 288 m 312 288 l 320.574 288 328.496 292.574 332.785 300 c 337.07 307.426
 337.07 316.574 332.785 324 c 328.496 331.426 320.574 336 312 336 c 120 
336 l 111.426 336 103.504 331.426 99.215 324 c 94.93 316.574 94.93 307.426
 99.215 300 c 103.504 292.574 111.426 288 120 288 c 672 360 m 672 385.723
 658.277 409.492 636 422.355 c 613.723 435.215 586.277 435.215 564 422.355
 c 541.723 409.492 528 385.723 528 360 c 528 334.277 541.723 310.508 564
 297.645 c 586.277 284.785 613.723 284.785 636 297.645 c 658.277 310.508
 672 334.277 672 360 c 96 408 m 96 401.637 98.527 395.531 103.031 391.031
 c 107.531 386.527 113.637 384 120 384 c 312 384 l 320.574 384 328.496 388.574
 332.785 396 c 337.07 403.426 337.07 412.574 332.785 420 c 328.496 427.426
 320.574 432 312 432 c 120 432 l 113.637 432 107.531 429.473 103.031 424.969
 c 98.527 420.469 96 414.363 96 408 c f
Q Q
showpage
%%Trailer
%%EOF
