%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1440 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 192 m 323.27 192 311.062 197.059 302.059 206.059 c 293.059 215.062 
288 227.27 288 240 c 288 720 l 288 732.73 293.059 744.938 302.059 753.941
 c 311.062 762.941 323.27 768 336 768 c 816 768 l 828.73 768 840.938 762.941
 849.941 753.941 c 858.941 744.938 864 732.73 864 720 c 864 240 l 864 227.27
 858.941 215.062 849.941 206.059 c 840.938 197.059 828.73 192 816 192 c 
h
540.574 1196.16 m 397.441 1196.16 l 397.441 1110.434 l 532.129 1110.434
 l 532.129 1061.953 l 397.441 1061.953 l 397.441 979.875 l 540.48 979.875
 l 540.48 928.035 l 334.559 928.031 l 334.559 1248 l 540.574 1248 l h
666.91 1248 m 743.133 1248 l 849.309 928.031 l 778.941 928.031 l 707.902
 1179.07 l 704.926 1179.07 l 633.215 928.031 l 559.871 928.031 l h
666.91 1248 m f
288 0 m 237.078 0 188.242 20.227 152.234 56.234 c 116.227 92.242 96 141.078
 96 192 c 96 1440 l 48 1440 l 30.852 1440 15.004 1449.148 6.43 1464 c -2.145
 1478.852 -2.145 1497.148 6.43 1512 c 15.004 1526.852 30.852 1536 48 1536
 c 1104 1536 l 1121.148 1536 1136.996 1526.852 1145.57 1512 c 1154.145 1497.148
 1154.145 1478.852 1145.57 1464 c 1136.996 1449.148 1121.148 1440 1104 1440
 c 1056 1440 l 1056 1056 l 1081.461 1056 1105.879 1066.113 1123.883 1084.117
 c 1141.887 1102.121 1152 1126.539 1152 1152 c 1152 1200 l 1152 1251.445
 1179.445 1298.984 1224 1324.707 c 1268.555 1350.43 1323.445 1350.43 1368
 1324.707 c 1412.555 1298.984 1440 1251.445 1440 1200 c 1440 384 l 1440.023
 371.262 1434.98 359.035 1425.984 350.016 c 1377.984 302.016 l 1368.984 
293.016 1356.777 287.961 1344.047 287.961 c 1331.32 287.961 1319.113 293.016
 1310.113 302.016 c 1262.113 350.016 l 1253.082 359.02 1248.004 371.246 
1248 384 c 1248 672 l 1248 740.16 1284.48 777.215 1309.055 802.273 c 1309.727
 803.043 l 1334.016 827.812 1344 839.234 1344 864.004 c 1344 1200.004 l 
1344 1200 l 1344 1217.148 1334.852 1232.996 1320 1241.57 c 1305.148 1250.145
 1286.852 1250.145 1272 1241.57 c 1257.148 1232.996 1248 1217.148 1248 1200
 c 1248 1152 l 1248 1118.297 1239.129 1085.188 1222.277 1056 c 1205.426 
1026.812 1181.188 1002.574 1152 985.723 c 1122.812 968.871 1089.703 960 
1056 960 c 1056 192 l 1056 158.297 1047.129 125.188 1030.277 96 c 1013.426
 66.812 989.188 42.574 960 25.723 c 930.812 8.871 897.703 0 864 0 c h
960 192 m 960 1440 l 192 1440 l 192 192 l 192 166.539 202.113 142.121 220.117
 124.117 c 238.121 106.113 262.539 96 288 96 c 864 96 l 889.461 96 913.879
 106.113 931.883 124.117 c 949.887 142.121 960 166.539 960 192 c f
Q Q
showpage
%%Trailer
%%EOF
