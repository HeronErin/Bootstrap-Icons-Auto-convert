%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 720 768 rectclip
1 0 0 -1 0 768 cm q
0 g
168 96 m 161.637 96 155.531 98.527 151.031 103.031 c 146.527 107.531 144
 113.637 144 120 c 144 360 l 144 366.363 146.527 372.469 151.031 376.969
 c 155.531 381.473 161.637 384 168 384 c 408 384 l 414.363 384 420.469 381.473
 424.969 376.969 c 429.473 372.469 432 366.363 432 360 c 432 120 l 432 113.637
 429.473 107.531 424.969 103.031 c 420.469 98.527 414.363 96 408 96 c h
270.289 598.078 m 198.719 598.078 l 198.719 555.215 l 266.062 555.215 l
 266.062 530.977 l 198.719 530.977 l 198.719 489.938 l 270.238 489.938 l
 270.238 464.016 l 167.281 464.016 l 167.281 624 l 270.289 624 l h
333.457 624 m 371.57 624 l 424.66 464.016 l 389.477 464.016 l 353.957 589.535
 l 352.469 589.535 l 316.613 464.016 l 279.941 464.016 l h
333.457 624 m f
144 0 m 118.539 0 94.121 10.113 76.117 28.117 c 58.113 46.121 48 70.539
 48 96 c 48 720 l 24 720 l 15.426 720 7.504 724.574 3.215 732 c -1.07 739.426
 -1.07 748.574 3.215 756 c 7.504 763.426 15.426 768 24 768 c 552 768 l 560.574
 768 568.496 763.426 572.785 756 c 577.07 748.574 577.07 739.426 572.785
 732 c 568.496 724.574 560.574 720 552 720 c 528 720 l 528 528 l 540.73 
528 552.938 533.059 561.941 542.059 c 570.941 551.062 576 563.27 576 576
 c 576 600 l 576 625.723 589.723 649.492 612 662.355 c 634.277 675.215 661.723
 675.215 684 662.355 c 706.277 649.492 720 625.723 720 600 c 720 192 l 720.012
 185.629 717.492 179.52 712.992 175.008 c 688.992 151.008 l 684.492 146.508
 678.387 143.98 672.023 143.98 c 665.66 143.98 659.559 146.508 655.055 151.008
 c 631.055 175.008 l 626.539 179.512 624 185.625 624 192 c 624 336 l 624
 370.078 642.238 388.609 654.527 401.137 c 654.863 401.52 l 667.008 413.902
 672 419.617 672 432 c 672 600 l 672 608.574 667.426 616.496 660 620.785
 c 652.574 625.07 643.426 625.07 636 620.785 c 628.574 616.496 624 608.574
 624 600 c 624 576 l 624 550.539 613.887 526.121 595.883 508.117 c 577.879
 490.113 553.461 480 528 480 c 528 96 l 528 70.539 517.887 46.121 499.883
 28.117 c 481.879 10.113 457.461 0 432 0 c h
480 96 m 480 720 l 96 720 l 96 96 l 96 83.27 101.059 71.062 110.059 62.059
 c 119.062 53.059 131.27 48 144 48 c 432 48 l 444.73 48 456.938 53.059 465.941
 62.059 c 474.941 71.062 480 83.27 480 96 c f
Q Q
showpage
%%Trailer
%%EOF
