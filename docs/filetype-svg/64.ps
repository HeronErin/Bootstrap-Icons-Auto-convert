%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 36 45 l 36.797 45 37.559 44.684 38.121 44.121 c 38.684 
43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5 28.5 11.484 28.5
 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33 l 6 6 l 6 2.688 
8.688 0 12 0 c 28.5 0 l h
0 44.523 m 0.035 45.48 0.473 46.375 1.203 46.992 c 1.59 47.316 2.07 47.566
 2.637 47.75 c 3.207 47.934 3.871 48.023 4.633 48.023 c 5.648 48.023 6.504
 47.867 7.207 47.551 c 7.918 47.234 8.457 46.793 8.828 46.23 c 8.824 46.227
 l 9.203 45.641 9.398 44.957 9.387 44.258 c 9.387 43.586 9.25 43.027 8.98
 42.578 c 8.707 42.129 8.32 41.762 7.855 41.508 c 7.328 41.215 6.754 41 
6.16 40.879 c 4.297 40.445 l 4.301 40.445 l 3.859 40.363 3.445 40.184 3.086
 39.918 c 2.809 39.703 2.648 39.371 2.656 39.02 c 2.656 38.551 2.84 38.168
 3.207 37.867 c 3.582 37.562 4.094 37.41 4.746 37.41 c 5.176 37.41 5.543
 37.477 5.855 37.613 c 5.855 37.617 l 6.145 37.73 6.398 37.918 6.59 38.16
 c 6.777 38.383 6.898 38.648 6.949 38.934 c 9.199 38.934 l 9.164 38.324 
8.957 37.734 8.605 37.234 c 8.227 36.695 7.707 36.27 7.105 36.008 c 6.367
 35.68 5.566 35.527 4.766 35.551 c 3.887 35.551 3.109 35.699 2.438 36 c 
1.762 36.297 1.234 36.719 0.852 37.262 c 0.473 37.809 0.281 38.445 0.281
 39.18 c 0.281 39.785 0.402 40.309 0.648 40.75 c 0.895 41.195 1.246 41.562
 1.703 41.852 c 2.16 42.137 2.699 42.352 3.324 42.492 c 5.18 42.926 l 5.801
 43.07 6.262 43.266 6.566 43.504 c 6.562 43.504 l 6.867 43.734 7.039 44.102
 7.023 44.48 c 7.031 44.789 6.941 45.094 6.77 45.352 c 6.574 45.613 6.309
 45.816 6 45.93 c 5.664 46.07 5.254 46.141 4.762 46.141 c 4.41 46.141 4.09
 46.102 3.801 46.02 c 3.535 45.949 3.285 45.832 3.059 45.676 c 2.652 45.414
 2.375 44.996 2.293 44.523 c h
13.727 47.793 m 16.582 47.793 l 20.562 35.797 l 17.926 35.797 l 15.266 
45.211 l 15.148 45.211 l 12.457 35.797 l 9.707 35.797 l h
30.176 37.914 m 30.402 38.371 30.543 38.863 30.598 39.391 c 28.266 39.391
 l 28.211 39.125 28.113 38.875 27.977 38.645 c 27.844 38.422 27.672 38.23
 27.469 38.074 c 27.258 37.902 27.016 37.773 26.758 37.695 c 26.465 37.605
 26.16 37.562 25.855 37.562 c 25 37.562 24.336 37.863 23.863 38.469 c 23.395
 39.07 23.16 39.918 23.16 41.02 c 23.16 42.512 l 23.16 43.215 23.258 43.832
 23.449 44.359 c 23.629 44.852 23.945 45.281 24.367 45.598 c 24.824 45.902
 25.367 46.059 25.922 46.035 c 26.395 46.047 26.863 45.949 27.289 45.742
 c 27.633 45.566 27.918 45.293 28.109 44.953 c 28.289 44.625 28.379 44.262
 28.379 43.859 c 28.379 43.098 l 25.91 43.098 l 25.91 41.328 l 30.637 41.328
 l 30.637 43.723 l 30.637 44.301 30.539 44.852 30.348 45.371 c 30.352 45.375
 l 30.156 45.891 29.859 46.355 29.473 46.746 c 29.051 47.16 28.543 47.48
 27.988 47.688 c 27.395 47.91 26.699 48.02 25.895 48.02 c 25.121 48.035 
24.355 47.902 23.637 47.625 c 23.023 47.375 22.477 46.988 22.035 46.492 
c 21.598 45.988 21.273 45.395 21.078 44.754 c 20.859 44.027 20.754 43.277
 20.762 42.52 c 20.762 41 l 20.762 39.922 20.961 38.973 21.359 38.152 c 
21.762 37.34 22.348 36.707 23.109 36.254 c 23.875 35.797 24.801 35.57 25.887
 35.57 c 26.602 35.57 27.234 35.672 27.793 35.871 c 28.355 36.07 28.836 
36.348 29.234 36.695 c 29.633 37.047 29.949 37.453 30.176 37.918 c f*
Q Q
showpage
%%Trailer
%%EOF
