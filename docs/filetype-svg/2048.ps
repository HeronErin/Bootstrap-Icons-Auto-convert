%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1152 1440 l 1177.461 1440 1201.879 1429.887 1219.883 1411.883
 c 1237.887 1393.879 1248 1369.461 1248 1344 c 1248 432 l 1056 432 l 1017.809
 432 981.184 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288
 c 912 96 l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113
 142.121 288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078
 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 
l h
0 1424.734 m 1.109 1455.324 15.094 1484.02 38.496 1503.742 c 50.91 1514.109
 66.207 1522.176 84.383 1527.934 c 102.621 1533.758 123.902 1536.668 148.223
 1536.668 c 180.672 1536.668 208.125 1531.613 230.59 1521.5 c 253.309 1511.387
 270.59 1497.309 282.43 1479.262 c 282.434 1479.266 l 294.539 1460.52 300.789
 1438.598 300.383 1416.289 c 300.383 1394.785 296.062 1376.863 287.422 1362.527
 c 287.426 1362.527 l 278.641 1348.141 266.227 1336.32 251.426 1328.258 
c 234.465 1318.836 216.18 1312.039 197.184 1308.098 c 137.566 1294.273 l
 123.512 1291.609 110.227 1285.836 98.688 1277.375 c 89.844 1270.508 84.754
 1259.867 84.961 1248.672 c 84.961 1233.695 90.848 1221.406 102.625 1211.809
 c 114.594 1202.082 131.008 1197.215 151.871 1197.215 c 165.566 1197.215
 177.406 1199.391 187.391 1203.742 c 196.598 1207.418 204.695 1213.402 210.91
 1221.121 c 216.82 1228.246 220.789 1236.777 222.434 1245.887 c 294.434 
1245.887 l 293.223 1226.355 286.609 1207.543 275.328 1191.551 c 263.23 1174.289
 246.629 1160.672 227.328 1152.191 c 203.766 1141.809 178.184 1136.824 152.449
 1137.602 c 124.289 1137.602 99.457 1142.402 77.953 1152 c 56.387 1161.535
 39.488 1175.008 27.266 1192.414 c 15.105 1209.887 9.027 1230.336 9.027 
1253.758 c 9.027 1273.086 12.965 1289.855 20.836 1304.062 c 28.707 1318.27
 39.941 1330.016 54.531 1339.293 c 69.188 1348.445 86.469 1355.262 106.371
 1359.742 c 165.699 1373.566 l 185.539 1378.238 200.324 1384.414 210.051
 1392.094 c 210.047 1392.098 l 219.754 1399.508 225.238 1411.188 224.734
 1423.391 c 224.953 1433.293 222.102 1443.016 216.574 1451.23 c 210.363 
1459.672 201.824 1466.109 192 1469.762 c 181.312 1474.242 168.098 1476.48
 152.352 1476.48 c 141.086 1476.48 130.848 1475.199 121.633 1472.641 c 113.121
 1470.352 105.066 1466.617 97.824 1461.602 c 84.922 1453.223 76.062 1439.879
 73.344 1424.734 c h
439.199 1529.375 m 530.59 1529.375 l 657.98 1145.473 l 573.598 1145.473
 l 488.445 1446.719 l 484.801 1446.719 l 398.688 1145.473 l 310.656 1145.473
 l h
965.566 1213.246 m 972.863 1227.84 977.344 1243.582 979.008 1260.477 c 
904.512 1260.477 l 904.512 1260.48 l 902.801 1252.051 899.684 1243.973 895.297
 1236.574 c 891.02 1229.547 885.488 1223.367 878.977 1218.336 c 872.242 
1212.875 864.516 1208.766 856.223 1206.238 c 846.895 1203.375 837.184 1201.953
 827.426 1202.016 c 800.098 1202.016 778.852 1211.68 763.684 1231.008 c 
748.645 1250.207 741.125 1277.406 741.125 1312.609 c 741.125 1360.32 l 741.125
 1382.848 744.23 1402.559 750.438 1419.457 c 750.434 1419.457 l 756.137 
1435.234 766.309 1449.012 779.711 1459.105 c 794.391 1468.914 811.801 1473.82
 829.441 1473.121 c 844.594 1473.523 859.629 1470.332 873.312 1463.809 c
 884.297 1458.09 893.398 1449.324 899.52 1438.559 c 905.281 1428.062 908.16
 1416.414 908.16 1403.613 c 908.16 1379.23 l 829.152 1379.23 l 829.152 1322.59
 l 980.449 1322.59 l 980.449 1399.199 l 980.449 1417.758 977.379 1435.359
 971.234 1452 c 971.23 1452 l 965.047 1468.441 955.465 1483.391 943.105 
1495.871 c 929.57 1509.16 913.375 1519.434 895.586 1526.016 c 876.641 1533.121
 854.305 1536.672 828.578 1536.672 c 828.574 1536.672 l 803.922 1537.121
 779.41 1532.82 756.383 1524 c 736.766 1515.996 719.23 1503.617 705.121 
1487.809 c 691.141 1471.586 680.711 1452.621 674.496 1432.129 c 667.547 
1408.934 664.148 1384.82 664.414 1360.609 c 664.414 1311.938 l 664.414 1277.379
 670.781 1247.008 683.52 1220.832 c 696.449 1194.848 715.105 1174.594 739.488
 1160.062 c 764 1145.469 793.633 1138.176 828.383 1138.176 c 851.23 1138.176
 871.551 1141.375 889.344 1147.777 c 907.391 1154.176 922.75 1162.977 935.422
 1174.176 c 948.223 1185.441 958.27 1198.465 965.566 1213.246 c f*
Q Q
showpage
%%Trailer
%%EOF
