%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 21 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 21 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 21 24 rectclip
1 0 0 -1 0 24 cm q
0 g
21 6.75 m 21 21 l 21 21.797 20.684 22.559 20.121 23.121 c 19.559 23.684
 18.797 24 18 24 c 18 22.5 l 18.398 22.5 18.781 22.344 19.062 22.062 c 19.344
 21.781 19.5 21.398 19.5 21 c 19.5 6.75 l 16.5 6.75 l 15.258 6.75 14.25 
5.742 14.25 4.5 c 14.25 1.5 l 6 1.5 l 5.172 1.5 4.5 2.172 4.5 3 c 4.5 16.5
 l 3 16.5 l 3 3 l 3 1.344 4.344 0 6 0 c 14.25 0 l h
0 22.262 m 0.016 22.738 0.234 23.188 0.602 23.496 c 0.797 23.656 1.035 
23.785 1.32 23.875 c 1.605 23.965 1.938 24.012 2.316 24.012 c 2.824 24.012
 3.254 23.934 3.602 23.773 c 3.957 23.617 4.227 23.395 4.41 23.113 c 4.414
 23.113 l 4.602 22.82 4.699 22.477 4.695 22.129 c 4.695 21.793 4.629 21.512
 4.492 21.289 c 4.355 21.066 4.16 20.879 3.93 20.754 c 3.664 20.605 3.379
 20.5 3.082 20.438 c 2.152 20.223 l 2.148 20.223 l 1.93 20.18 1.723 20.09
 1.543 19.961 c 1.402 19.852 1.324 19.684 1.328 19.512 c 1.328 19.277 1.422
 19.086 1.605 18.938 c 1.793 18.785 2.051 18.711 2.375 18.711 c 2.59 18.711
 2.773 18.746 2.93 18.812 c 2.93 18.809 l 3.07 18.867 3.199 18.961 3.297
 19.078 c 3.387 19.191 3.449 19.324 3.477 19.469 c 4.602 19.469 l 4.582 
19.16 4.477 18.867 4.301 18.617 c 4.113 18.348 3.855 18.137 3.551 18.004
 c 3.184 17.84 2.785 17.762 2.383 17.773 c 1.941 17.773 1.555 17.848 1.219
 18 c 0.883 18.148 0.617 18.359 0.426 18.633 c 0.234 18.906 0.141 19.227
 0.141 19.59 c 0.141 19.891 0.203 20.152 0.324 20.375 c 0.445 20.598 0.621
 20.781 0.852 20.926 c 1.082 21.07 1.352 21.176 1.66 21.246 c 2.586 21.461
 l 2.895 21.535 3.125 21.629 3.277 21.75 c 3.281 21.75 l 3.434 21.867 3.52
 22.051 3.512 22.242 c 3.516 22.395 3.469 22.547 3.383 22.676 c 3.285 22.809
 3.152 22.906 3 22.965 c 2.832 23.035 2.625 23.07 2.379 23.07 c 2.203 23.07
 2.043 23.051 1.898 23.012 c 1.902 23.012 l 1.766 22.973 1.641 22.914 1.527
 22.836 c 1.328 22.707 1.188 22.5 1.145 22.262 c h
6.863 23.898 m 8.293 23.898 l 10.285 17.898 l 8.965 17.898 l 7.633 22.605
 l 7.574 22.605 l 6.23 17.898 l 4.855 17.898 l h
15.086 18.957 m 15.199 19.184 15.27 19.43 15.297 19.695 c 14.133 19.695
 l 14.105 19.562 14.059 19.438 13.988 19.32 c 13.922 19.211 13.836 19.113
 13.734 19.035 c 13.629 18.949 13.508 18.887 13.379 18.848 c 13.234 18.805
 13.082 18.781 12.93 18.781 c 12.504 18.781 12.172 18.934 11.934 19.234 
c 11.699 19.535 11.582 19.961 11.582 20.508 c 11.582 21.254 l 11.582 21.605
 11.629 21.914 11.727 22.18 c 11.816 22.426 11.973 22.641 12.184 22.797 
c 12.414 22.953 12.684 23.027 12.961 23.016 c 13.195 23.023 13.434 22.973
 13.645 22.871 c 13.816 22.781 13.961 22.645 14.055 22.477 c 14.145 22.312
 14.191 22.129 14.191 21.93 c 14.191 21.547 l 12.957 21.547 l 12.957 20.66
 l 15.32 20.66 l 15.32 21.855 l 15.32 22.145 15.273 22.422 15.176 22.68 
c 15.176 22.688 l 15.078 22.945 14.93 23.18 14.734 23.371 c 14.523 23.582
 14.27 23.742 13.992 23.844 c 13.695 23.953 13.348 24.012 12.945 24.012 
c 12.562 24.016 12.18 23.949 11.82 23.812 c 11.512 23.688 11.238 23.492 
11.016 23.246 c 10.801 22.992 10.637 22.695 10.539 22.379 c 10.43 22.016
 10.379 21.637 10.383 21.258 c 10.383 20.496 l 10.383 19.957 10.48 19.48
 10.68 19.074 c 10.883 18.668 11.172 18.352 11.555 18.125 c 11.938 17.898
 12.402 17.781 12.945 17.781 c 13.301 17.781 13.621 17.832 13.898 17.93 
c 14.18 18.031 14.422 18.168 14.617 18.344 c 14.816 18.52 14.973 18.723 
15.09 18.953 c f*
Q Q
showpage
%%Trailer
%%EOF
