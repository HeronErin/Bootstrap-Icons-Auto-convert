%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 288 360 l 294.363 360 300.469 357.473 304.969
 352.969 c 309.473 348.469 312 342.363 312 336 c 312 108 l 264 108 l 254.453
 108 245.297 104.207 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c
 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531 
72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059
 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
0 356.184 m 0.277 363.832 3.773 371.004 9.625 375.938 c 12.73 378.531 16.555
 380.547 21.098 381.984 c 25.656 383.441 30.977 384.168 37.059 384.168 c
 45.172 384.168 52.035 382.902 57.652 380.375 c 63.332 377.848 67.652 374.328
 70.613 369.816 c 70.609 369.816 l 73.633 365.129 75.195 359.648 75.098 
354.07 c 75.098 348.695 74.02 344.215 71.859 340.629 c 71.855 340.633 l 
69.66 337.035 66.555 334.082 62.855 332.062 c 58.617 329.707 54.043 328.008
 49.297 327.023 c 34.395 323.566 l 34.391 323.566 l 30.879 322.902 27.559
 321.457 24.672 319.344 c 22.461 317.625 21.188 314.969 21.238 312.168 c
 21.238 308.426 22.711 305.352 25.652 302.953 c 28.645 300.52 32.75 299.305
 37.965 299.305 c 41.391 299.305 44.348 299.848 46.844 300.938 c 46.848 
300.938 l 49.148 301.855 51.176 303.352 52.727 305.281 c 54.207 307.062 
55.195 309.195 55.609 311.473 c 73.609 311.473 l 73.305 306.59 71.652 301.887
 68.832 297.887 c 65.809 293.57 61.656 290.168 56.832 288.047 c 50.941 285.453
 44.547 284.207 38.113 284.398 c 31.074 284.398 24.867 285.598 19.488 288
 c 14.098 290.383 9.871 293.754 6.816 298.105 c 3.777 302.473 2.258 307.586
 2.258 313.441 c 2.258 318.273 3.242 322.465 5.211 326.016 c 7.18 329.566
 9.988 332.504 13.637 334.824 c 17.301 337.113 21.621 338.816 26.598 339.938
 c 41.43 343.395 l 46.391 344.562 50.086 346.105 52.52 348.027 c 52.512 
348.023 l 54.938 349.875 56.309 352.797 56.184 355.848 c 56.238 358.324 
55.527 360.754 54.145 362.809 c 52.59 364.918 50.457 366.527 48 367.441 
c 45.328 368.562 42.023 369.121 38.09 369.121 c 35.273 369.121 32.715 368.801
 30.41 368.16 c 30.406 368.16 l 28.281 367.59 26.266 366.656 24.457 365.398
 c 21.23 363.305 19.016 359.969 18.336 356.184 c h
109.801 382.344 m 132.648 382.344 l 164.496 286.367 l 143.398 286.367 l
 122.109 361.68 l 121.199 361.68 l 99.672 286.367 l 77.664 286.367 l h
241.395 303.312 m 243.219 306.961 244.34 310.898 244.754 315.121 c 226.129
 315.121 l 225.699 313.012 224.922 310.992 223.824 309.145 c 222.754 307.387
 221.371 305.84 219.742 304.586 c 218.062 303.219 216.129 302.191 214.055
 301.559 c 211.723 300.844 209.297 300.488 206.855 300.504 c 200.023 300.504
 194.711 302.918 190.918 307.75 c 187.156 312.551 185.277 319.352 185.277
 328.148 c 185.277 340.078 l 185.277 345.711 186.055 350.637 187.605 354.863
 c 187.609 354.863 l 189.035 358.809 191.578 362.254 194.93 364.777 c 198.598
 367.23 202.949 368.457 207.359 368.281 c 211.148 368.383 214.906 367.582
 218.328 365.953 c 221.074 364.523 223.348 362.332 224.879 359.641 c 226.32
 357.016 227.039 354.105 227.039 350.906 c 227.039 344.809 l 207.285 344.809
 l 207.285 330.648 l 245.109 330.648 l 245.109 349.801 l 245.109 354.441
 244.34 358.84 242.805 363 c 242.809 363 l 241.262 367.109 238.867 370.848
 235.777 373.969 c 232.391 377.289 228.344 379.859 223.895 381.504 c 219.16
 383.281 213.574 384.168 207.141 384.168 c 207.145 384.168 l 200.98 384.281
 194.852 383.207 189.098 381 c 184.191 379 179.809 375.902 176.281 371.953
 c 172.785 367.895 170.18 363.156 168.625 358.031 c 166.887 352.234 166.039
 346.203 166.105 340.152 c 166.105 327.984 l 166.105 319.344 167.699 311.754
 170.883 305.207 c 174.113 298.711 178.777 293.648 184.875 290.016 c 191.004
 286.367 198.41 284.543 207.098 284.543 c 212.809 284.543 217.891 285.344
 222.336 286.941 c 226.848 288.543 230.688 290.742 233.855 293.543 c 237.055
 296.359 239.566 299.613 241.391 303.312 c f*
Q Q
showpage
%%Trailer
%%EOF
