%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 47 0 721 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 47 0 721 768
768 768 cairo_set_page_size
%%EndPageSetup
q 47 0 674 768 rectclip
1 0 0 -1 0 768 cm q
0 g
559.008 21.121 m 602.062 64.129 l 520.32 145.871 l 514.969 144.629 509.492
 144 504 144 c 264 144 l 244.906 144 226.59 151.586 213.09 165.09 c 199.586
 178.59 192 196.906 192 216 c 192 474.191 l 96 570.191 l 96 72 l 96 52.906
 103.586 34.59 117.09 21.09 c 130.59 7.586 148.906 0 168 0 c 508.129 0 l
 527.219 0.016 545.52 7.613 559.008 21.121 c 408 258.145 m 474.191 192 l
 408 192 l h
240 426.191 m 330.191 336 l 240 336 l h
528 341.809 m 437.809 432 l 528 432 l h
360 509.809 m 293.809 576 l 360 576 l h
264 624 m 258.398 624 252.961 623.375 247.68 622.129 c 120.098 749.762 
l 132.816 761.09 149.617 768 168 768 c 600 768 l 619.094 768 637.41 760.414
 650.91 746.91 c 664.414 733.41 672 715.094 672 696 c 672 197.809 l 576 
293.809 l 576 552 l 576 571.094 568.414 589.41 554.91 602.91 c 541.41 616.414
 523.094 624 504 624 c h
240 216 m 240 209.637 242.527 203.531 247.031 199.031 c 251.531 194.527
 257.637 192 264 192 c 360 192 l 360 288 l 240 288 l h
408 480 m 528 480 l 528 552 l 528 558.363 525.473 564.469 520.969 568.969
 c 516.469 573.473 510.363 576 504 576 c 408 576 l h
712.992 88.992 m 719.062 82.922 721.434 74.074 719.211 65.781 c 716.988
 57.488 710.512 51.012 702.219 48.789 c 693.926 46.566 685.078 48.938 679.008
 55.008 c 55.008 679.008 l 48.938 685.078 46.566 693.926 48.789 702.219 
c 51.012 710.512 57.488 716.988 65.781 719.211 c 74.074 721.434 82.922 719.062
 88.992 712.992 c h
712.992 88.992 m f
Q Q
showpage
%%Trailer
%%EOF
