%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 95 0 1441 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 95 0 1441 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 95 0 1346 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1118.016 42.238 m 1204.129 128.254 l 1040.641 291.742 l 1029.938 289.254
 1018.988 288 1008 288 c 528 288 l 489.809 288 453.184 303.172 426.176 330.176
 c 399.172 357.184 384 393.809 384 432 c 384 948.383 l 192 1140.383 l 192
 144 l 192 105.809 207.172 69.184 234.176 42.176 c 261.184 15.172 297.809
 0 336 0 c 1016.258 0 l 1054.434 0.035 1091.035 15.227 1118.016 42.238 c
 816 516.289 m 948.383 384 l 816 384 l h
480 852.383 m 660.383 672 l 480 672 l h
1056 683.613 m 875.617 864 l 1056 864 l h
720 1019.613 m 587.617 1152 l 720 1152 l h
528 1248 m 516.801 1248 505.922 1246.754 495.359 1244.258 c 240.191 1499.52
 l 265.633 1522.176 299.23 1536 336 1536 c 1200 1536 l 1238.191 1536 1274.816
 1520.828 1301.824 1493.824 c 1328.828 1466.816 1344 1430.191 1344 1392 
c 1344 395.617 l 1152 587.617 l 1152 1104 l 1152 1142.191 1136.828 1178.816
 1109.824 1205.824 c 1082.816 1232.828 1046.191 1248 1008 1248 c h
480 432 m 480 419.27 485.059 407.062 494.059 398.059 c 503.062 389.059 
515.27 384 528 384 c 720 384 l 720 576 l 480 576 l h
816 960 m 1056 960 l 1056 1104 l 1056 1116.73 1050.941 1128.938 1041.941
 1137.941 c 1032.938 1146.941 1020.73 1152 1008 1152 c 816 1152 l h
1425.984 177.984 m 1438.125 165.844 1442.867 148.145 1438.422 131.562 c
 1433.98 114.977 1421.023 102.02 1404.438 97.578 c 1387.855 93.133 1370.156
 97.875 1358.016 110.016 c 110.016 1358.016 l 97.875 1370.156 93.133 1387.855
 97.578 1404.438 c 102.02 1421.023 114.977 1433.98 131.562 1438.422 c 148.145
 1442.867 165.844 1438.125 177.984 1425.984 c h
1425.984 177.984 m f
Q Q
showpage
%%Trailer
%%EOF
