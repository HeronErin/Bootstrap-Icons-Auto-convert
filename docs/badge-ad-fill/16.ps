%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
8.512 6.254 m 8.512 5.73 8.195 5.402 7.762 5.402 c 7.324 5.402 7.047 5.734
 7.047 6.332 c 7.047 6.672 l 7.047 7.273 7.328 7.609 7.777 7.609 c 8.219
 7.609 8.516 7.281 8.516 6.711 c h
4.453 6.434 m 3.902 4.613 l 3.863 4.609 l 3.312 6.43 l 4.453 6.43 l h
4.453 6.434 m f
1.5 1.5 m 0.672 1.5 0 2.172 0 3 c 0 9 l 0 9.398 0.156 9.781 0.438 10.062
 c 0.719 10.344 1.102 10.5 1.5 10.5 c 10.5 10.5 l 10.898 10.5 11.281 10.344
 11.562 10.062 c 11.844 9.781 12 9.398 12 9 c 12 3 l 12 2.602 11.844 2.219
 11.562 1.938 c 11.281 1.656 10.898 1.5 10.5 1.5 c h
6.156 6.238 m 6.156 5.277 6.676 4.707 7.473 4.707 c 7.965 4.707 8.34 4.926
 8.477 5.285 c 8.516 5.285 l 8.516 3.516 l 9.387 3.516 l 9.383 8.25 l 8.531
 8.25 l 8.531 7.691 l 8.488 7.691 l 8.379 8.047 7.973 8.293 7.465 8.293 
c 6.672 8.293 6.16 7.719 6.16 6.762 c 6.16 6.242 l h
3.125 7.09 m 2.773 8.25 l 1.875 8.25 l 3.383 3.75 l 4.426 3.75 l 5.93 8.25
 l 4.984 8.25 l 4.633 7.094 l 3.129 7.094 l h
3.125 7.09 m f
Q Q
showpage
%%Trailer
%%EOF
