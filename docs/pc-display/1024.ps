%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 48 m 384 35.27 389.059 23.062 398.059 14.059 c 407.062 5.059 419.27
 0 432 0 c 720 0 l 732.73 0 744.938 5.059 753.941 14.059 c 762.941 23.062
 768 35.27 768 48 c 768 720 l 768 732.73 762.941 744.938 753.941 753.941
 c 744.938 762.941 732.73 768 720 768 c 432 768 l 419.27 768 407.062 762.941
 398.059 753.941 c 389.059 744.938 384 732.73 384 720 c h
432 696 m 432 704.574 436.574 712.496 444 716.785 c 451.426 721.07 460.574
 721.07 468 716.785 c 475.426 712.496 480 704.574 480 696 c 480 687.426 
475.426 679.504 468 675.215 c 460.574 670.93 451.426 670.93 444 675.215 
c 436.574 679.504 432 687.426 432 696 c 528 696 m 528 704.574 532.574 712.496
 540 716.785 c 547.426 721.07 556.574 721.07 564 716.785 c 571.426 712.496
 576 704.574 576 696 c 576 687.426 571.426 679.504 564 675.215 c 556.574
 670.93 547.426 670.93 540 675.215 c 532.574 679.504 528 687.426 528 696
 c 456 48 m 447.426 48 439.504 52.574 435.215 60 c 430.93 67.426 430.93 
76.574 435.215 84 c 439.504 91.426 447.426 96 456 96 c 696 96 l 704.574 
96 712.496 91.426 716.785 84 c 721.07 76.574 721.07 67.426 716.785 60 c 
712.496 52.574 704.574 48 696 48 c h
432 168 m 432 174.363 434.527 180.469 439.031 184.969 c 443.531 189.473
 449.637 192 456 192 c 696 192 l 704.574 192 712.496 187.426 716.785 180
 c 721.07 172.574 721.07 163.426 716.785 156 c 712.496 148.574 704.574 144
 696 144 c 456 144 l 449.637 144 443.531 146.527 439.031 151.031 c 434.527
 155.531 432 161.637 432 168 c 72 96 m 52.906 96 34.59 103.586 21.09 117.09
 c 7.586 130.59 0 148.906 0 168 c 0 504 l 0 523.094 7.586 541.41 21.09 554.91
 c 34.59 568.414 52.906 576 72 576 c 288 576 l 288 672 l 264 672 l 255.426
 672 247.504 676.574 243.215 684 c 238.93 691.426 238.93 700.574 243.215
 708 c 247.504 715.426 255.426 720 264 720 c 336 720 l 336 528 l 72 528 
l 65.637 528 59.531 525.473 55.031 520.969 c 50.527 516.469 48 510.363 48
 504 c 48 168 l 48 161.637 50.527 155.531 55.031 151.031 c 59.531 146.527
 65.637 144 72 144 c 336 144 l 336 96 l h
72 96 m f
Q Q
showpage
%%Trailer
%%EOF
