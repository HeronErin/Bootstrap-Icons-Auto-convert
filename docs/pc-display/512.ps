%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 24 m 192 17.637 194.527 11.531 199.031 7.031 c 203.531 2.527 209.637
 0 216 0 c 360 0 l 366.363 0 372.469 2.527 376.969 7.031 c 381.473 11.531
 384 17.637 384 24 c 384 360 l 384 366.363 381.473 372.469 376.969 376.969
 c 372.469 381.473 366.363 384 360 384 c 216 384 l 209.637 384 203.531 381.473
 199.031 376.969 c 194.527 372.469 192 366.363 192 360 c h
216 348 m 216 354.629 221.371 360 228 360 c 234.629 360 240 354.629 240
 348 c 240 341.371 234.629 336 228 336 c 221.371 336 216 341.371 216 348
 c 264 348 m 264 354.629 269.371 360 276 360 c 282.629 360 288 354.629 288
 348 c 288 341.371 282.629 336 276 336 c 269.371 336 264 341.371 264 348
 c 228 24 m 221.371 24 216 29.371 216 36 c 216 42.629 221.371 48 228 48 
c 348 48 l 354.629 48 360 42.629 360 36 c 360 29.371 354.629 24 348 24 c
 h
216 84 m 216 87.184 217.266 90.234 219.516 92.484 c 221.766 94.734 224.816
 96 228 96 c 348 96 l 354.629 96 360 90.629 360 84 c 360 77.371 354.629 
72 348 72 c 228 72 l 221.371 72 216 77.371 216 84 c 36 48 m 26.453 48 17.297
 51.793 10.543 58.543 c 3.793 65.297 0 74.453 0 84 c 0 252 l 0 261.547 3.793
 270.703 10.543 277.457 c 17.297 284.207 26.453 288 36 288 c 144 288 l 144
 336 l 132 336 l 125.371 336 120 341.371 120 348 c 120 354.629 125.371 360
 132 360 c 168 360 l 168 264 l 36 264 l 29.371 264 24 258.629 24 252 c 24
 84 l 24 77.371 29.371 72 36 72 c 168 72 l 168 48 l h
36 48 m f
Q Q
showpage
%%Trailer
%%EOF
