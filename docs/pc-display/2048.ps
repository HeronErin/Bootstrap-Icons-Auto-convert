%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 96 m 768 70.539 778.113 46.121 796.117 28.117 c 814.121 10.113 838.539
 0 864 0 c 1440 0 l 1465.461 0 1489.879 10.113 1507.883 28.117 c 1525.887
 46.121 1536 70.539 1536 96 c 1536 1440 l 1536 1465.461 1525.887 1489.879
 1507.883 1507.883 c 1489.879 1525.887 1465.461 1536 1440 1536 c 864 1536
 l 838.539 1536 814.121 1525.887 796.117 1507.883 c 778.113 1489.879 768
 1465.461 768 1440 c h
864 1392 m 864 1409.148 873.148 1424.996 888 1433.57 c 902.852 1442.145
 921.148 1442.145 936 1433.57 c 950.852 1424.996 960 1409.148 960 1392 c
 960 1374.852 950.852 1359.004 936 1350.43 c 921.148 1341.855 902.852 1341.855
 888 1350.43 c 873.148 1359.004 864 1374.852 864 1392 c 1056 1392 m 1056
 1409.148 1065.148 1424.996 1080 1433.57 c 1094.852 1442.145 1113.148 1442.145
 1128 1433.57 c 1142.852 1424.996 1152 1409.148 1152 1392 c 1152 1374.852
 1142.852 1359.004 1128 1350.43 c 1113.148 1341.855 1094.852 1341.855 1080
 1350.43 c 1065.148 1359.004 1056 1374.852 1056 1392 c 912 96 m 894.852 
96 879.004 105.148 870.43 120 c 861.855 134.852 861.855 153.148 870.43 168
 c 879.004 182.852 894.852 192 912 192 c 1392 192 l 1409.148 192 1424.996
 182.852 1433.57 168 c 1442.145 153.148 1442.145 134.852 1433.57 120 c 1424.996
 105.148 1409.148 96 1392 96 c h
864 336 m 864 348.73 869.059 360.938 878.059 369.941 c 887.062 378.941 
899.27 384 912 384 c 1392 384 l 1409.148 384 1424.996 374.852 1433.57 360
 c 1442.145 345.148 1442.145 326.852 1433.57 312 c 1424.996 297.148 1409.148
 288 1392 288 c 912 288 l 899.27 288 887.062 293.059 878.059 302.059 c 869.059
 311.062 864 323.27 864 336 c 144 192 m 105.809 192 69.184 207.172 42.176
 234.176 c 15.172 261.184 0 297.809 0 336 c 0 1008 l 0 1046.191 15.172 1082.816
 42.176 1109.824 c 69.184 1136.828 105.809 1152 144 1152 c 576 1152 l 576
 1344 l 528 1344 l 510.852 1344 495.004 1353.148 486.43 1368 c 477.855 1382.852
 477.855 1401.148 486.43 1416 c 495.004 1430.852 510.852 1440 528 1440 c
 672 1440 l 672 1056 l 144 1056 l 131.27 1056 119.062 1050.941 110.059 1041.941
 c 101.059 1032.938 96 1020.73 96 1008 c 96 336 l 96 323.27 101.059 311.062
 110.059 302.059 c 119.062 293.059 131.27 288 144 288 c 672 288 l 672 192
 l h
144 192 m f
Q Q
showpage
%%Trailer
%%EOF
