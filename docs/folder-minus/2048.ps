%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 18 192 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 18 192 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 18 192 1518 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
48 288 m 51.84 371.52 l 26.586 408.375 14.977 452.883 19.008 497.375 c 
80.16 1169.375 l 84.496 1217.078 106.504 1261.441 141.867 1293.75 c 177.23
 1326.059 223.395 1343.98 271.297 1344 c 864 1344 l 864 1248 l 271.297 1248
 l 247.348 1247.977 224.27 1239.004 206.598 1222.84 c 188.926 1206.676 177.93
 1184.492 175.777 1160.641 c 114.625 488.641 l 112.195 461.785 121.176 435.148
 139.363 415.242 c 157.555 395.336 183.277 384 210.238 384 c 1325.762 384
 l 1352.723 384 1378.445 395.336 1396.637 415.242 c 1414.824 435.148 1423.805
 461.785 1421.375 488.641 c 1395.84 768 l 1492.32 768 l 1516.895 497.375
 l 1520.125 461.859 1513.395 426.145 1497.465 394.238 c 1481.535 362.328
 1457.031 335.488 1426.707 316.727 c 1396.379 297.961 1361.422 288.016 1325.762
 288 c 943.488 288 l 892.57 287.988 843.742 267.754 807.742 231.742 c 728.254
 152.254 l 728.258 152.258 l 692.258 116.246 643.43 96.012 592.512 96 c 
240 96 l 189.078 96 140.242 116.227 104.234 152.234 c 68.227 188.242 48 
237.078 48 288 c 592.512 192 m 617.969 192.004 642.383 202.125 660.383 220.129
 c 728.258 288 l 210.238 288 l 187.07 288.129 165.215 291.969 144.672 299.52
 c 144 286.078 l 144.504 260.953 154.84 237.027 172.789 219.438 c 190.738
 201.844 214.867 191.996 240 192 c h
592.512 192 m f
1056 1104 m 1056 1091.27 1061.059 1079.062 1070.059 1070.059 c 1079.062
 1061.059 1091.27 1056 1104 1056 c 1488 1056 l 1505.148 1056 1520.996 1065.148
 1529.57 1080 c 1538.145 1094.852 1538.145 1113.148 1529.57 1128 c 1520.996
 1142.852 1505.148 1152 1488 1152 c 1104 1152 l 1091.27 1152 1079.062 1146.941
 1070.059 1137.941 c 1061.059 1128.938 1056 1116.73 1056 1104 c f
Q Q
showpage
%%Trailer
%%EOF
