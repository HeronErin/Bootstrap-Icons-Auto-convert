%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1248 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1248 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 960 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 624 m 348.73 624 360.938 629.059 369.941 638.059 c 378.941 647.062 
384 659.27 384 672 c 384 768 l 384 869.844 424.457 967.516 496.473 1039.527
 c 568.484 1111.543 666.156 1152 768 1152 c 869.844 1152 967.516 1111.543
 1039.527 1039.527 c 1111.543 967.516 1152 869.844 1152 768 c 1152 672 l
 1152 654.852 1161.148 639.004 1176 630.43 c 1190.852 621.855 1209.148 621.855
 1224 630.43 c 1238.852 639.004 1248 654.852 1248 672 c 1248 768 l 1248 
886.996 1203.805 1001.75 1123.98 1089.996 c 1044.156 1178.246 934.398 1233.699
 816 1245.602 c 816 1440 l 1104 1440 l 1121.148 1440 1136.996 1449.148 1145.57
 1464 c 1154.145 1478.852 1154.145 1497.148 1145.57 1512 c 1136.996 1526.852
 1121.148 1536 1104 1536 c 432 1536 l 414.852 1536 399.004 1526.852 390.43
 1512 c 381.855 1497.148 381.855 1478.852 390.43 1464 c 399.004 1449.148
 414.852 1440 432 1440 c 720 1440 l 720 1245.602 l 601.602 1233.699 491.844
 1178.246 412.02 1089.996 c 332.195 1001.75 288 886.996 288 768 c 288 672
 l 288 659.27 293.059 647.062 302.059 638.059 c 311.062 629.059 323.27 624
 336 624 c f
960 768 m 960 818.922 939.773 867.758 903.766 903.766 c 867.758 939.773
 818.922 960 768 960 c 717.078 960 668.242 939.773 632.234 903.766 c 596.227
 867.758 576 818.922 576 768 c 576 288 l 576 237.078 596.227 188.242 632.234
 152.234 c 668.242 116.227 717.078 96 768 96 c 818.922 96 867.758 116.227
 903.766 152.234 c 939.773 188.242 960 237.078 960 288 c h
768 0 m 691.617 0 618.363 30.344 564.352 84.352 c 510.344 138.363 480 211.617
 480 288 c 480 768 l 480 844.383 510.344 917.637 564.352 971.648 c 618.363
 1025.656 691.617 1056 768 1056 c 844.383 1056 917.637 1025.656 971.648 
971.648 c 1025.656 917.637 1056 844.383 1056 768 c 1056 288 l 1056 211.617
 1025.656 138.363 971.648 84.352 c 917.637 30.344 844.383 0 768 0 c f
Q Q
showpage
%%Trailer
%%EOF
