%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 12 m 48.797 12 49.559 12.316 50.121 12.879 c 50.684 13.441 51 14.203
 51 15 c 51 24 l 51 25.656 49.656 27 48 27 c 46.344 27 45 25.656 45 24 c
 45 15 l 45 13.344 46.344 12 48 12 c 22.391 22.391 m 23.562 21.223 25.461
 21.223 26.633 22.391 c 32.121 27.875 l 32.125 27.875 l 33.297 29.051 33.297
 30.949 32.125 32.125 c 30.949 33.297 29.051 33.297 27.875 32.125 c 22.391
 26.637 l 22.391 26.633 l 21.223 25.461 21.223 23.562 22.391 22.391 c 12
 48 m 12 46.344 13.344 45 15 45 c 24.516 45 l 26.172 45 27.516 46.344 27.516
 48 c 27.516 49.656 26.172 51 24.516 51 c 15 51 l 13.344 51 12 49.656 12
 48 c 69 48 m 69 46.344 70.344 45 72 45 c 81 45 l 82.656 45 84 46.344 84
 48 c 84 49.656 82.656 51 81 51 c 72 51 l 70.344 51 69 49.656 69 48 c 73.523
 22.523 m 72.66 21.668 71.289 21.617 70.363 22.402 c 45.281 43.859 l 44.113
 44.859 43.422 46.305 43.375 47.844 c 43.328 49.379 43.934 50.867 45.039
 51.934 c 46.145 53.004 47.648 53.555 49.184 53.457 c 50.719 53.355 52.141
 52.617 53.102 51.414 c 73.707 25.633 l 73.703 25.633 l 74.445 24.703 74.367
 23.367 73.531 22.523 c h
73.523 22.523 m f
39.984 95.336 m 23.07 92.469 8.973 80.801 2.996 64.723 c -2.98 48.645 0.078
 30.602 11.012 17.387 c 21.949 4.172 39.105 -2.203 56.016 0.66 c 72.93 3.523
 87.031 15.191 93.004 31.273 c 98.98 47.352 95.926 65.398 84.988 78.613 
c 74.055 91.828 56.898 98.203 39.984 95.34 c h
11.996 69.637 m 11.992 69.637 l 22.938 63.305 35.359 59.98 48 60 c 61.117
 60 73.414 63.512 84.008 69.637 c 89.133 61.102 91.059 51.02 89.441 41.195
 c 87.828 31.371 82.773 22.438 75.18 15.996 c 67.59 9.551 57.957 6.012 48
 6.012 c 38.043 6.012 28.41 9.551 20.82 15.996 c 13.227 22.438 8.172 31.371
 6.559 41.195 c 4.941 51.02 6.867 61.102 11.992 69.637 c f*
Q Q
showpage
%%Trailer
%%EOF
