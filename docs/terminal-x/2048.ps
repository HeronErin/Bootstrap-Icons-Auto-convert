%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 288 m 166.539 288 142.121 298.113 124.117 316.117 c 106.113 334.121
 96 358.539 96 384 c 96 1152 l 96 1177.461 106.113 1201.879 124.117 1219.883
 c 142.121 1237.887 166.539 1248 192 1248 c 720 1248 l 737.148 1248 752.996
 1257.148 761.57 1272 c 770.145 1286.852 770.145 1305.148 761.57 1320 c 
752.996 1334.852 737.148 1344 720 1344 c 192 1344 l 141.078 1344 92.242 
1323.773 56.234 1287.766 c 20.227 1251.758 0 1202.922 0 1152 c 0 384 l 0
 333.078 20.227 284.242 56.234 248.234 c 92.242 212.227 141.078 192 192 
192 c 1248 192 l 1281.703 192 1314.812 200.871 1344 217.723 c 1373.188 234.574
 1397.426 258.812 1414.277 288 c 1431.129 317.188 1440 350.297 1440 384 
c 1440 768 l 1440 785.148 1430.852 800.996 1416 809.57 c 1401.148 818.145
 1382.852 818.145 1368 809.57 c 1353.148 800.996 1344 785.148 1344 768 c
 1344 384 l 1344 358.539 1333.887 334.121 1315.883 316.117 c 1297.879 298.113
 1273.461 288 1248 288 c h
192 288 m f
302.016 494.016 m 311.02 484.988 323.25 479.914 336 479.914 c 348.75 479.914
 360.98 484.988 369.984 494.016 c 496.992 621.121 l 510.477 634.621 518.047
 652.922 518.047 672 c 518.047 691.078 510.477 709.379 496.992 722.879 c
 369.984 849.984 l 357.844 862.125 340.145 866.867 323.562 862.422 c 306.977
 857.98 294.02 845.023 289.578 828.438 c 285.133 811.855 289.875 794.156
 302.016 782.016 c 412.129 672 l 302.016 561.984 l 292.988 552.98 287.914
 540.75 287.914 528 c 287.914 515.25 292.988 503.02 302.016 494.016 c 528
 864 m 528 851.27 533.059 839.062 542.059 830.059 c 551.062 821.059 563.27
 816 576 816 c 768 816 l 785.148 816 800.996 825.148 809.57 840 c 818.145
 854.852 818.145 873.148 809.57 888 c 800.996 902.852 785.148 912 768 912
 c 576 912 l 563.27 912 551.062 906.941 542.059 897.941 c 533.059 888.938
 528 876.73 528 864 c 1536 1200 m 1536 1289.113 1500.602 1374.574 1437.586
 1437.586 c 1374.574 1500.602 1289.113 1536 1200 1536 c 1110.887 1536 1025.426
 1500.602 962.414 1437.586 c 899.398 1374.574 864 1289.113 864 1200 c 864
 1110.887 899.398 1025.426 962.414 962.414 c 1025.426 899.398 1110.887 864
 1200 864 c 1289.113 864 1374.574 899.398 1437.586 962.414 c 1500.602 1025.426
 1536 1110.887 1536 1200 c 1070.016 1070.016 m 1060.988 1079.02 1055.914
 1091.25 1055.914 1104 c 1055.914 1116.75 1060.988 1128.98 1070.016 1137.984
 c 1132.129 1200 l 1070.016 1262.016 l 1057.875 1274.156 1053.133 1291.855
 1057.578 1308.438 c 1062.02 1325.023 1074.977 1337.98 1091.562 1342.422
 c 1108.145 1346.867 1125.844 1342.125 1137.984 1329.984 c 1200 1267.871
 l 1262.016 1329.984 l 1274.156 1342.125 1291.855 1346.867 1308.438 1342.422
 c 1325.023 1337.98 1337.98 1325.023 1342.422 1308.438 c 1346.867 1291.855
 1342.125 1274.156 1329.984 1262.016 c 1267.871 1200 l 1329.984 1137.984
 l 1342.125 1125.844 1346.867 1108.145 1342.422 1091.562 c 1337.98 1074.977
 1325.023 1062.02 1308.438 1057.578 c 1291.855 1053.133 1274.156 1057.875
 1262.016 1070.016 c 1200 1132.129 l 1137.984 1070.016 l 1128.98 1060.988
 1116.75 1055.914 1104 1055.914 c 1091.25 1055.914 1079.02 1060.988 1070.016
 1070.016 c f
Q Q
showpage
%%Trailer
%%EOF
