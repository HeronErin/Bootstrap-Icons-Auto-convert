%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
60 120 m 66.629 120 72 114.629 72 108 c 72 101.371 66.629 96 60 96 c 53.371
 96 48 101.371 48 108 c 48 114.629 53.371 120 60 120 c 96 120 m 102.629 
120 108 114.629 108 108 c 108 101.371 102.629 96 96 96 c 89.371 96 84 101.371
 84 108 c 84 114.629 89.371 120 96 120 c 144 108 m 144 114.629 138.629 120
 132 120 c 125.371 120 120 114.629 120 108 c 120 101.371 125.371 96 132 
96 c 138.629 96 144 101.371 144 108 c f
0 96 m 0 83.27 5.059 71.062 14.059 62.059 c 23.062 53.059 35.27 48 48 48
 c 312 48 l 324.73 48 336.938 53.059 345.941 62.059 c 354.941 71.062 360
 83.27 360 96 c 360 192 l 360 198.629 354.629 204 348 204 c 341.371 204 
336 198.629 336 192 c 336 168 l 24 168 l 24 288 l 24 294.363 26.527 300.469
 31.031 304.969 c 35.531 309.473 41.637 312 48 312 c 180 312 l 186.629 312
 192 317.371 192 324 c 192 330.629 186.629 336 180 336 c 48 336 l 35.27 
336 23.062 330.941 14.059 321.941 c 5.059 312.938 0 300.73 0 288 c h
24 144 m 336 144 l 336 96 l 336 89.637 333.473 83.531 328.969 79.031 c 
324.469 74.527 318.363 72 312 72 c 48 72 l 41.637 72 35.531 74.527 31.031
 79.031 c 26.527 83.531 24 89.637 24 96 c h
24 144 m f
384 300 m 384 330.012 367.988 357.742 342 372.746 c 316.012 387.75 283.988
 387.75 258 372.746 c 232.012 357.742 216 330.012 216 300 c 216 269.988 
232.012 242.258 258 227.254 c 283.988 212.25 316.012 212.25 342 227.254 
c 367.988 242.258 384 269.988 384 300 c 300 252 m 293.371 252 288 257.371
 288 264 c 288 288 l 264 288 l 257.371 288 252 293.371 252 300 c 252 306.629
 257.371 312 264 312 c 288 312 l 288 336 l 288 342.629 293.371 348 300 348
 c 306.629 348 312 342.629 312 336 c 312 312 l 336 312 l 342.629 312 348
 306.629 348 300 c 348 293.371 342.629 288 336 288 c 312 288 l 312 264 l
 312 260.816 310.734 257.766 308.484 255.516 c 306.234 253.266 303.184 252
 300 252 c f
Q Q
showpage
%%Trailer
%%EOF
