%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 52 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 52 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 52 768 669 rectclip
1 0 0 -1 0 768 cm q
0 g
24 475.199 m 30.363 475.199 36.469 477.73 40.969 482.23 c 45.473 486.73
 48 492.836 48 499.199 c 48 619.199 l 48 631.93 53.059 644.141 62.059 653.141
 c 71.062 662.145 83.27 667.199 96 667.199 c 672 667.199 l 684.73 667.199
 696.938 662.145 705.941 653.141 c 714.941 644.141 720 631.93 720 619.199
 c 720 499.199 l 720 490.625 724.574 482.703 732 478.414 c 739.426 474.129
 748.574 474.129 756 478.414 c 763.426 482.703 768 490.625 768 499.199 c
 768 619.199 l 768 644.66 757.887 669.078 739.883 687.082 c 721.879 705.086
 697.461 715.199 672 715.199 c 96 715.199 l 70.539 715.199 46.121 705.086
 28.117 687.082 c 10.113 669.078 0 644.66 0 619.199 c 0 499.199 l 0 492.836
 2.527 486.73 7.031 482.23 c 11.531 477.73 17.637 475.199 24 475.199 c f
367.008 55.008 m 371.512 50.492 377.625 47.957 384 47.957 c 390.375 47.957
 396.488 50.492 400.992 55.008 c 544.992 199.008 l 551.062 205.078 553.434
 213.926 551.211 222.219 c 548.988 230.512 542.512 236.988 534.219 239.211
 c 525.926 241.434 517.078 239.062 511.008 232.992 c 408 129.938 l 408 552
 l 408 560.574 403.426 568.496 396 572.785 c 388.574 577.07 379.426 577.07
 372 572.785 c 364.574 568.496 360 560.574 360 552 c 360 129.938 l 256.992
 232.992 l 250.922 239.062 242.074 241.434 233.781 239.211 c 225.488 236.988
 219.012 230.512 216.789 222.219 c 214.566 213.926 216.938 205.078 223.008
 199.008 c h
367.008 55.008 m f
Q Q
showpage
%%Trailer
%%EOF
