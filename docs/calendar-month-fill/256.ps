%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48 6 m 48 2.688 45.312 0 42 0 c 38.688 0 36 2.688 36 6 c 36 12 l 24 12 
l 17.637 12 11.531 14.527 7.031 19.031 c 2.527 23.531 0 29.637 0 36 c 0 
48 l 192 48 l 192 36 l 192 29.637 189.473 23.531 184.969 19.031 c 180.469
 14.527 174.363 12 168 12 c 156 12 l 156 6 l 156 2.688 153.312 0 150 0 c
 146.688 0 144 2.688 144 6 c 144 12 l 48 12 l h
49.246 93.66 m 58.801 122.16 l 39.406 122.16 l 49.008 93.66 l h
158.133 121.223 m 158.133 111.238 153.164 104.902 145.391 104.902 c 137.086
 104.902 132.215 110.805 132.215 121.223 c 132.215 124.258 l 132.215 134.48
 137.086 140.625 145.391 140.625 c 153.441 140.625 158.133 134.434 158.133
 124.258 c h
158.133 121.223 m f
192 168 m 192 60 l 0 60 l 0 168 l 0 174.363 2.527 180.469 7.031 184.969
 c 11.531 189.473 17.637 192 24 192 c 168 192 l 174.363 192 180.469 189.473
 184.969 184.969 c 189.473 180.469 192 174.363 192 168 c 30.719 147.984 
m 22.199 147.984 l 44.977 84 l 53.328 84 l 76.105 147.984 l 67.477 147.984
 l 61.008 128.762 l 37.199 128.762 l h
118.199 98.723 m 118.199 147.984 l 110.184 147.984 l 110.184 141.516 l 
109.859 141.516 l 108.121 145.402 103.477 148.777 95.602 148.777 c 85.438
 148.777 78.164 142.969 78.164 131.676 c 78.168 98.723 l 86.281 98.723 l
 86.281 129.371 l 86.281 138.562 91.574 141.516 98.043 141.516 c 105.121
 141.516 110.09 137.062 110.09 129.238 c 110.09 98.723 l h
133.477 151.645 m 134.375 155.629 138.539 159.277 145.297 159.277 c 153.074
 159.277 158.137 154.742 158.137 147 c 158.137 139.738 l 157.898 139.738
 l 155.941 144 150.543 147.516 143.848 147.516 c 132.363 147.516 124.168
 139.453 124.168 124.691 c 124.168 120.613 l 124.168 106.129 132.27 97.969
 143.848 97.969 c 150.543 97.969 155.895 101.484 158.188 105.648 c 158.426
 105.648 l 158.426 98.723 l 166.203 98.723 l 166.203 147.082 l 166.203 159.707
 156.41 166.031 145.25 166.031 c 132.734 166.031 126.363 159.84 125.234 
151.633 c h
133.477 151.645 m f
Q Q
showpage
%%Trailer
%%EOF
