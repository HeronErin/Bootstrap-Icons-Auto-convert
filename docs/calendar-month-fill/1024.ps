%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
192 24 m 192 15.426 187.426 7.504 180 3.215 c 172.574 -1.07 163.426 -1.07
 156 3.215 c 148.574 7.504 144 15.426 144 24 c 144 48 l 96 48 l 70.539 48
 46.121 58.113 28.117 76.117 c 10.113 94.121 0 118.539 0 144 c 0 192 l 768
 192 l 768 144 l 768 118.539 757.887 94.121 739.883 76.117 c 721.879 58.113
 697.461 48 672 48 c 624 48 l 624 24 l 624 15.426 619.426 7.504 612 3.215
 c 604.574 -1.07 595.426 -1.07 588 3.215 c 580.574 7.504 576 15.426 576 
24 c 576 48 l 192 48 l h
196.992 374.641 m 235.199 488.641 l 157.633 488.641 l 196.031 374.641 l
 h
632.543 484.898 m 632.543 444.961 612.672 419.617 581.566 419.617 c 548.352
 419.617 528.863 443.234 528.863 484.898 c 528.863 497.043 l 528.863 537.938
 548.352 562.516 581.566 562.516 c 613.773 562.516 632.543 537.746 632.543
 497.043 c h
632.543 484.898 m f
768 672 m 768 240 l 0 240 l 0 672 l 0 697.461 10.113 721.879 28.117 739.883
 c 46.121 757.887 70.539 768 96 768 c 672 768 l 697.461 768 721.879 757.887
 739.883 739.883 c 757.887 721.879 768 697.461 768 672 c 122.879 591.938
 m 88.801 591.938 l 179.902 336 l 213.309 336 l 304.414 591.938 l 269.902
 591.938 l 244.031 515.043 l 148.801 515.039 l h
472.801 394.898 m 472.801 591.938 l 440.738 591.938 l 440.738 566.066 l
 439.441 566.066 l 432.48 581.617 413.906 595.105 382.418 595.105 c 341.762
 595.105 312.676 571.875 312.676 526.707 c 312.672 394.895 l 345.121 394.895
 l 345.121 517.488 l 345.121 554.258 366.289 566.062 392.16 566.062 c 420.48
 566.062 440.352 548.254 440.352 516.957 c 440.352 394.895 l h
533.906 606.578 m 537.508 622.516 554.164 637.105 581.188 637.105 c 612.293
 637.105 632.547 618.961 632.547 588 c 632.547 558.961 l 631.586 558.961
 l 623.762 576 602.16 590.066 575.379 590.066 c 529.441 590.066 496.66 557.809
 496.66 498.77 c 496.66 482.449 l 496.66 424.512 529.059 391.875 575.379
 391.875 c 602.164 391.875 623.57 405.938 632.738 422.594 c 633.699 422.594
 l 633.699 394.898 l 664.805 394.898 l 664.805 588.34 l 664.805 638.836 
625.637 664.133 580.996 664.133 c 530.934 664.133 505.445 639.363 500.934
 606.531 c h
533.906 606.578 m f
Q Q
showpage
%%Trailer
%%EOF
