%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 372 m 48 48 l 48 35.27 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27
 0 96 0 c 288 0 l 300.73 0 312.938 5.059 321.941 14.059 c 330.941 23.062
 336 35.27 336 48 c 336 372 l 336.004 376.238 333.77 380.168 330.121 382.328
 c 326.477 384.492 321.961 384.57 318.238 382.535 c 192 313.656 l 65.762
 382.535 l 62.039 384.57 57.523 384.492 53.879 382.328 c 50.23 380.168 47.996
 376.238 48 372 c 195.84 98.398 m 195.125 96.93 193.633 96 192 96 c 190.367
 96 188.875 96.93 188.16 98.398 c 172.945 129.238 l 172.32 130.5 171.117
 131.379 169.727 131.594 c 135.648 136.539 l 135.648 136.535 l 134.047 136.777
 132.723 137.906 132.223 139.445 c 131.727 140.984 132.141 142.676 133.297
 143.809 c 157.922 167.832 l 158.93 168.816 159.387 170.23 159.145 171.625
 c 153.359 205.559 l 153.094 207.16 153.754 208.77 155.066 209.719 c 156.379
 210.672 158.117 210.797 159.551 210.047 c 190.031 194.016 l 191.273 193.375
 192.75 193.375 193.992 194.016 c 224.473 210.047 l 225.906 210.785 227.633
 210.652 228.938 209.703 c 230.242 208.754 230.898 207.152 230.641 205.559
 c 224.832 171.602 l 224.59 170.215 225.039 168.801 226.031 167.809 c 250.703
 143.785 l 251.859 142.648 252.273 140.961 251.777 139.422 c 251.277 137.883
 249.953 136.754 248.352 136.512 c 214.273 131.566 l 212.883 131.355 211.68
 130.477 211.055 129.215 c h
195.84 98.398 m f*
Q Q
showpage
%%Trailer
%%EOF
