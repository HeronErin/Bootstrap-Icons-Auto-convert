%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 1488 m 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242
 20.227 333.078 0 384 0 c 1152 0 l 1185.703 0 1218.812 8.871 1248 25.723
 c 1277.188 42.574 1301.426 66.812 1318.277 96 c 1335.129 125.188 1344 158.297
 1344 192 c 1344 1488 l 1344.012 1504.957 1335.074 1520.664 1320.492 1529.316
 c 1305.906 1537.969 1287.836 1538.285 1272.961 1530.145 c 768 1254.625 
l 263.039 1530.145 l 248.164 1538.285 230.094 1537.969 215.508 1529.316 
c 200.926 1520.664 191.988 1504.957 192 1488 c 783.359 393.602 m 781.48 
389.742 778.215 386.734 774.219 385.172 c 770.219 383.609 765.781 383.609
 761.781 385.172 c 757.785 386.734 754.52 389.742 752.641 393.602 c 691.777
 516.961 l 689.277 522.004 684.477 525.516 678.91 526.367 c 542.59 546.145
 l 542.594 546.145 l 538.387 546.781 534.57 548.965 531.891 552.27 c 529.207
 555.57 527.855 559.754 528.094 564 c 528.336 568.246 530.148 572.254 533.184
 575.23 c 631.68 671.328 l 635.711 675.266 637.535 680.93 636.574 686.496
 c 613.441 822.238 l 612.742 826.441 613.637 830.75 615.949 834.324 c 618.262
 837.902 621.824 840.484 625.941 841.57 c 630.059 842.656 634.434 842.164
 638.207 840.191 c 760.129 776.062 l 765.098 773.5 771 773.5 775.969 776.062
 c 897.891 840.191 l 897.887 840.191 l 901.656 842.129 906.012 842.594 910.109
 841.5 c 914.203 840.406 917.742 837.828 920.047 834.27 c 922.348 830.711
 923.242 826.422 922.559 822.238 c 899.328 686.398 l 898.367 680.863 900.156
 675.207 904.129 671.23 c 1002.816 575.133 l 1002.816 575.137 l 1005.852
 572.156 1007.664 568.152 1007.906 563.906 c 1008.145 559.656 1006.793 555.473
 1004.109 552.172 c 1001.43 548.871 997.613 546.688 993.406 546.047 c 857.086
 526.27 l 857.09 526.273 l 851.523 525.418 846.723 521.91 844.223 516.863
 c h
783.359 393.602 m f*
Q Q
showpage
%%Trailer
%%EOF
