%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
24 186 m 24 24 l 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637
 0 48 0 c 144 0 l 150.363 0 156.469 2.527 160.969 7.031 c 165.473 11.531
 168 17.637 168 24 c 168 186 l 168 188.121 166.883 190.082 165.062 191.164
 c 163.238 192.246 160.98 192.285 159.121 191.27 c 96 156.828 l 32.879 191.27
 l 31.02 192.285 28.762 192.246 26.938 191.164 c 25.117 190.082 24 188.121
 24 186 c 97.922 49.199 m 97.562 48.465 96.816 48 96 48 c 95.184 48 94.438
 48.465 94.078 49.199 c 86.469 64.621 l 86.473 64.621 l 86.16 65.25 85.559
 65.688 84.863 65.797 c 67.824 68.27 l 67.023 68.391 66.359 68.953 66.113
 69.723 c 65.863 70.492 66.07 71.336 66.648 71.902 c 78.961 83.914 l 79.465
 84.406 79.691 85.113 79.574 85.809 c 76.68 102.781 l 76.547 103.578 76.879
 104.387 77.535 104.859 c 78.188 105.336 79.059 105.398 79.777 105.023 c
 95.016 97.008 l 95.637 96.688 96.375 96.688 96.996 97.008 c 112.234 105.023
 l 112.953 105.391 113.816 105.324 114.469 104.852 c 115.121 104.375 115.449
 103.574 115.32 102.781 c 112.414 85.801 l 112.297 85.109 112.52 84.402 
113.016 83.902 c 125.352 71.891 l 125.93 71.324 126.137 70.48 125.887 69.711
 c 125.641 68.941 124.977 68.379 124.176 68.258 c 107.137 65.785 l 106.441
 65.676 105.84 65.238 105.527 64.609 c h
97.922 49.199 m f*
Q Q
showpage
%%Trailer
%%EOF
