%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 48 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 48 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 48 576 720 rectclip
1 0 0 -1 0 768 cm q
0 g
168 480 m 161.637 480 155.531 477.473 151.031 472.969 c 146.527 468.469
 144 462.363 144 456 c 144 72 l 144 65.637 146.527 59.531 151.031 55.031
 c 155.531 50.527 161.637 48 168 48 c 600 48 l 606.363 48 612.469 50.527
 616.969 55.031 c 621.473 59.531 624 65.637 624 72 c 624 456 l 624 462.363
 621.473 468.469 616.969 472.969 c 612.469 477.473 606.363 480 600 480 c
 504 480 l 495.426 480 487.504 484.574 483.215 492 c 478.93 499.426 478.93
 508.574 483.215 516 c 487.504 523.426 495.426 528 504 528 c 600 528 l 619.094
 528 637.41 520.414 650.91 506.91 c 664.414 493.41 672 475.094 672 456 c
 672 72 l 672 52.906 664.414 34.59 650.91 21.09 c 637.41 7.586 619.094 0
 600 0 c 168 0 l 148.906 0 130.59 7.586 117.09 21.09 c 103.586 34.59 96 
52.906 96 72 c 96 456 l 96 475.094 103.586 493.41 117.09 506.91 c 130.59
 520.414 148.906 528 168 528 c 264 528 l 272.574 528 280.496 523.426 284.785
 516 c 289.07 508.574 289.07 499.426 284.785 492 c 280.496 484.574 272.574
 480 264 480 c h
168 480 m f*
367.008 199.008 m 371.512 194.492 377.625 191.957 384 191.957 c 390.375
 191.957 396.488 194.492 400.992 199.008 c 544.992 343.008 l 551.062 349.078
 553.434 357.926 551.211 366.219 c 548.988 374.512 542.512 380.988 534.219
 383.211 c 525.926 385.434 517.078 383.062 511.008 376.992 c 408 273.938
 l 408 696 l 408 704.574 403.426 712.496 396 716.785 c 388.574 721.07 379.426
 721.07 372 716.785 c 364.574 712.496 360 704.574 360 696 c 360 273.938 
l 256.992 376.992 l 250.922 383.062 242.074 385.434 233.781 383.211 c 225.488
 380.988 219.012 374.512 216.789 366.219 c 214.566 357.926 216.938 349.078
 223.008 343.008 c h
367.008 199.008 m f*
Q Q
showpage
%%Trailer
%%EOF
