%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 576
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 576
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
385.008 571.199 m 165.742 413.762 l 155.262 407.531 148.836 396.242 148.836
 384.047 c 148.836 371.855 155.262 360.562 165.742 354.336 c 385.008 196.801
 l 392.008 192.684 400.242 191.176 408.246 192.551 c 416.25 193.926 423.512
 198.09 428.738 204.305 c 433.965 210.523 436.82 218.391 436.801 226.512
 c 436.801 288 l 508.801 288 724.801 288 772.801 672 c 652.801 456 436.801
 480 436.801 480 c 436.801 541.488 l 436.801 568.367 407.711 584.594 385.008
 571.25 c h
385.008 571.199 m f
251.137 206.062 m 254.926 211.191 256.516 217.617 255.562 223.918 c 254.609
 230.223 251.184 235.887 246.047 239.664 c 53.473 381.359 l 51.457 382.703
 l 49.332 383.98 48.035 386.273 48.035 388.754 c 48.035 391.23 49.332 393.523
 51.457 394.801 c 53.473 396.145 l 246.047 537.938 l 251.301 541.66 254.836
 547.344 255.859 553.699 c 256.883 560.059 255.309 566.562 251.488 571.746
 c 247.668 576.934 241.926 580.363 235.551 581.273 c 229.172 582.18 222.699
 580.488 217.586 576.574 c 25.871 435.504 l 9.758 425.445 -0.031 407.793
 -0.031 388.801 c -0.031 369.805 9.758 352.152 25.871 342.098 c 217.582 
200.977 l 217.586 200.977 l 222.707 197.203 229.121 195.617 235.414 196.574
 c 241.707 197.527 247.359 200.941 251.137 206.062 c f
Q Q
showpage
%%Trailer
%%EOF
