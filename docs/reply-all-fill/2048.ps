%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1152
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1152
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
770.016 1142.398 m 331.488 827.52 l 310.523 815.062 297.672 792.484 297.672
 768.098 c 297.672 743.711 310.523 721.129 331.488 708.672 c 770.016 393.602
 l 784.016 385.363 800.484 382.355 816.492 385.102 c 832.504 387.852 847.023
 396.18 857.477 408.613 c 867.93 421.047 873.641 436.781 873.602 453.023
 c 873.602 576 l 1017.602 576 1449.602 576 1545.602 1344 c 1305.602 912 
873.602 960 873.602 960 c 873.602 1082.977 l 873.602 1136.738 815.426 1169.184
 770.016 1142.496 c h
770.016 1142.398 m f
502.273 412.129 m 509.848 422.383 513.035 435.23 511.125 447.84 c 509.219
 460.445 502.371 471.777 492.098 479.328 c 106.945 762.719 l 102.914 765.406
 l 102.91 765.406 l 98.668 767.961 96.07 772.551 96.07 777.504 c 96.07 782.457
 98.668 787.047 102.91 789.602 c 106.941 792.289 l 492.094 1075.875 l 492.098
 1075.871 l 502.602 1083.324 509.676 1094.684 511.719 1107.402 c 513.766
 1120.117 510.617 1133.125 502.977 1143.496 c 495.336 1153.867 483.852 1160.73
 471.098 1162.547 c 458.348 1164.363 445.398 1160.977 435.168 1153.152 c
 51.742 871.008 l 19.52 850.895 -0.062 815.586 -0.062 777.602 c -0.062 739.613
 19.52 704.309 51.742 684.191 c 435.168 401.953 l 445.418 394.406 458.242
 391.238 470.828 393.145 c 483.41 395.055 494.723 401.883 502.273 412.129
 c f
Q Q
showpage
%%Trailer
%%EOF
