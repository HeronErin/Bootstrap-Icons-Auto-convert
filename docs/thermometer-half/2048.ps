%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 432 0 1104 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 432 0 1104 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 432 0 672 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
912 1200 m 911.98 1235.367 898.945 1269.492 875.383 1295.867 c 851.816 
1322.242 819.371 1339.023 784.227 1343.008 c 749.086 1346.992 713.703 1337.906
 684.832 1317.477 c 655.957 1297.051 635.613 1266.711 627.676 1232.246 c
 619.734 1197.781 624.758 1161.598 641.785 1130.598 c 658.812 1099.598 686.656
 1075.949 720 1064.16 c 720 624 l 720 606.852 729.148 591.004 744 582.43
 c 758.852 573.855 777.148 573.855 792 582.43 c 806.852 591.004 816 606.852
 816 624 c 816 1064.16 l 844.086 1074.09 868.402 1092.488 885.598 1116.816
 c 902.789 1141.145 912.016 1170.207 912 1200 c f
528 240 m 528 176.348 553.285 115.305 598.293 70.293 c 643.305 25.285 704.348
 0 768 0 c 831.652 0 892.695 25.285 937.707 70.293 c 982.715 115.305 1008
 176.348 1008 240 c 1008 964.801 l 1070.09 1028.168 1104.598 1113.523 1103.992
 1202.238 c 1103.387 1290.953 1067.723 1375.828 1004.777 1438.344 c 941.832
 1500.863 856.715 1535.949 768 1535.949 c 679.285 1535.949 594.168 1500.863
 531.223 1438.344 c 468.277 1375.828 432.613 1290.953 432.008 1202.238 c
 431.402 1113.523 465.91 1028.168 528 964.801 c h
768 96 m 729.809 96 693.184 111.172 666.176 138.176 c 639.172 165.184 624
 201.809 624 240 c 624 1006.754 l 607.969 1021.152 l 571.734 1053.555 546.195
 1096.195 534.727 1143.43 c 523.258 1190.664 526.406 1240.27 543.746 1285.68
 c 561.09 1331.09 591.812 1370.16 631.848 1397.727 c 671.883 1425.293 719.344
 1440.051 767.953 1440.051 c 816.559 1440.051 864.023 1425.293 904.059 1397.727
 c 944.094 1370.16 974.816 1331.09 992.156 1285.68 c 1009.5 1240.27 1012.645
 1190.664 1001.176 1143.43 c 989.711 1096.195 964.168 1053.555 927.938 1021.152
 c 912 1006.754 l 912 240 l 912 201.809 896.828 165.184 869.824 138.176 
c 842.816 111.172 806.191 96 768 96 c f
Q Q
showpage
%%Trailer
%%EOF
