%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 288 m 226.297 288 257.988 269.703 275.137 240 c 292.289 210.297 292.289
 173.703 275.137 144 c 257.988 114.297 226.297 96 192 96 c 157.703 96 126.012
 114.297 108.863 144 c 91.711 173.703 91.711 210.297 108.863 240 c 126.012
 269.703 157.703 288 192 288 c 192 0 m 195.184 0 198.234 1.266 200.484 3.516
 c 202.734 5.766 204 8.816 204 12 c 204 60 l 204 66.629 198.629 72 192 72
 c 185.371 72 180 66.629 180 60 c 180 12 l 180 5.371 185.371 0 192 0 c 192
 312 m 195.184 312 198.234 313.266 200.484 315.516 c 202.734 317.766 204
 320.816 204 324 c 204 372 l 204 378.629 198.629 384 192 384 c 185.371 384
 180 378.629 180 372 c 180 324 l 180 317.371 185.371 312 192 312 c 384 192
 m 384 195.184 382.734 198.234 380.484 200.484 c 378.234 202.734 375.184
 204 372 204 c 324 204 l 317.371 204 312 198.629 312 192 c 312 185.371 317.371
 180 324 180 c 372 180 l 375.184 180 378.234 181.266 380.484 183.516 c 382.734
 185.766 384 188.816 384 192 c 72 192 m 72 195.184 70.734 198.234 68.484
 200.484 c 66.234 202.734 63.184 204 60 204 c 12 204 l 5.371 204 0 198.629
 0 192 c 0 185.371 5.371 180 12 180 c 60 180 l 63.184 180 66.234 181.266
 68.484 183.516 c 70.734 185.766 72 188.816 72 192 c 327.77 56.23 m 332.453
 60.918 332.453 68.516 327.77 73.199 c 293.832 107.16 l 289.141 111.844 
281.539 111.84 276.852 107.148 c 272.168 102.457 272.172 94.855 276.863 
90.168 c 310.801 56.23 l 315.484 51.547 323.082 51.547 327.77 56.23 c 107.137
 276.863 m 111.82 281.551 111.82 289.145 107.137 293.832 c 73.199 327.77
 l 68.492 332.316 61.008 332.25 56.379 327.621 c 51.75 322.992 51.684 315.508
 56.23 310.801 c 90.168 276.863 l 94.855 272.18 102.449 272.18 107.137 276.863
 c 327.77 327.766 m 327.77 327.77 l 323.082 332.453 315.484 332.453 310.801
 327.77 c 276.863 293.832 l 272.316 289.125 272.383 281.641 277.012 277.012
 c 281.641 272.383 289.125 272.316 293.832 276.863 c 327.77 310.801 l 332.453
 315.484 332.453 323.082 327.77 327.77 c 107.137 107.16 m 102.449 111.844
 94.855 111.844 90.168 107.16 c 56.23 73.199 l 53.918 70.965 52.598 67.891
 52.57 64.672 c 52.543 61.453 53.809 58.359 56.082 56.082 c 58.359 53.809
 61.453 52.543 64.672 52.57 c 67.891 52.598 70.965 53.918 73.199 56.23 c
 107.137 90.168 l 109.395 92.418 110.66 95.477 110.66 98.664 c 110.66 101.852
 109.395 104.91 107.137 107.16 c f
Q Q
showpage
%%Trailer
%%EOF
