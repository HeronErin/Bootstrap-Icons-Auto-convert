%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 144 m 113.148 144 128.996 134.852 137.57 120 c 146.145 105.148 146.145
 86.852 137.57 72 c 128.996 57.148 113.148 48 96 48 c 78.852 48 63.004 57.148
 54.43 72 c 45.855 86.852 45.855 105.148 54.43 120 c 63.004 134.852 78.852
 144 96 144 c 96 0 m 97.59 0 99.117 0.633 100.242 1.758 c 101.367 2.883 
102 4.41 102 6 c 102 30 l 102 33.312 99.312 36 96 36 c 92.688 36 90 33.312
 90 30 c 90 6 l 90 2.688 92.688 0 96 0 c 96 156 m 97.59 156 99.117 156.633
 100.242 157.758 c 101.367 158.883 102 160.41 102 162 c 102 186 l 102 189.312
 99.312 192 96 192 c 92.688 192 90 189.312 90 186 c 90 162 l 90 158.688 
92.688 156 96 156 c 192 96 m 192 97.59 191.367 99.117 190.242 100.242 c 
189.117 101.367 187.59 102 186 102 c 162 102 l 158.688 102 156 99.312 156
 96 c 156 92.688 158.688 90 162 90 c 186 90 l 187.59 90 189.117 90.633 190.242
 91.758 c 191.367 92.883 192 94.41 192 96 c 36 96 m 36 97.59 35.367 99.117
 34.242 100.242 c 33.117 101.367 31.59 102 30 102 c 6 102 l 2.688 102 0 
99.312 0 96 c 0 92.688 2.688 90 6 90 c 30 90 l 31.59 90 33.117 90.633 34.242
 91.758 c 35.367 92.883 36 94.41 36 96 c 163.883 28.117 m 166.227 30.461
 166.227 34.258 163.883 36.602 c 146.914 53.582 l 146.914 53.578 l 144.57
 55.922 140.77 55.922 138.426 53.574 c 136.082 51.227 136.086 47.426 138.434
 45.086 c 155.402 28.117 l 155.398 28.117 l 157.742 25.773 161.539 25.773
 163.883 28.117 c 53.566 138.434 m 55.91 140.773 55.91 144.574 53.566 146.914
 c 36.602 163.883 l 34.246 166.156 30.504 166.125 28.188 163.812 c 25.875
 161.496 25.844 157.754 28.117 155.398 c 45.086 138.43 l 45.086 138.434 
l 47.426 136.09 51.227 136.09 53.566 138.434 c 163.883 163.887 m 163.883
 163.883 l 161.539 166.227 157.742 166.227 155.398 163.883 c 138.43 146.914
 l 138.434 146.914 l 136.156 144.562 136.191 140.82 138.504 138.504 c 140.82
 136.191 144.562 136.156 146.914 138.434 c 163.883 155.402 l 163.883 155.398
 l 166.227 157.742 166.227 161.539 163.883 163.883 c 53.566 53.578 m 51.227
 55.922 47.426 55.922 45.086 53.578 c 28.117 36.602 l 26.957 35.48 26.297
 33.945 26.285 32.336 c 26.27 30.727 26.902 29.18 28.043 28.043 c 29.18 
26.902 30.727 26.27 32.336 26.285 c 33.945 26.297 35.48 26.957 36.602 28.117
 c 53.57 45.086 l 53.566 45.086 l 54.695 46.211 55.332 47.738 55.332 49.332
 c 55.332 50.926 54.695 52.453 53.566 53.578 c f
Q Q
showpage
%%Trailer
%%EOF
