%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 36 192 144
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 36 192 144
192 192 cairo_set_page_size
%%EndPageSetup
q 0 36 192 108 rectclip
1 0 0 -1 0 192 cm q
0 g
0 72 m 0 65.637 2.527 59.531 7.031 55.031 c 11.531 50.527 17.637 48 24 
48 c 168 48 l 174.363 48 180.469 50.527 184.969 55.031 c 189.473 59.531 
192 65.637 192 72 c 192 108 l 192 114.363 189.473 120.469 184.969 124.969
 c 180.469 129.473 174.363 132 168 132 c 111.227 132 l 112.953 133.945 115.188
 135.887 117.598 137.699 c 117.602 137.699 l 121.047 140.254 124.688 142.543
 128.484 144.539 c 128.652 144.609 l 128.688 144.633 l 128.688 144.637 l
 131.176 145.883 132.48 148.676 131.84 151.383 c 131.199 154.09 128.781 
156 126 156 c 66 156 l 63.219 156 60.801 154.09 60.16 151.383 c 59.52 148.676
 60.824 145.883 63.312 144.637 c 63.348 144.613 l 63.516 144.527 l 64.605
 143.969 65.68 143.375 66.73 142.754 c 69.379 141.211 71.938 139.523 74.398
 137.699 c 76.797 135.898 79.043 133.941 80.77 132 c 24 132 l 17.637 132
 11.531 129.473 7.031 124.969 c 2.527 120.469 0 114.363 0 108 c h
24 60 m 17.371 60 12 65.371 12 72 c 12 108 l 12 111.184 13.266 114.234 
15.516 116.484 c 17.766 118.734 20.816 120 24 120 c 168 120 l 171.184 120
 174.234 118.734 176.484 116.484 c 178.734 114.234 180 111.184 180 108 c
 180 72 l 180 68.816 178.734 65.766 176.484 63.516 c 174.234 61.266 171.184
 60 168 60 c h
24 60 m f
96 78 m 89.371 78 84 83.371 84 90 c 84 96.629 89.371 102 96 102 c 102.629
 102 108 96.629 108 90 c 108 83.371 102.629 78 96 78 c 72 90 m 72 81.426
 76.574 73.504 84 69.215 c 91.426 64.93 100.574 64.93 108 69.215 c 115.426
 73.504 120 81.426 120 90 c 120 98.574 115.426 106.496 108 110.785 c 100.574
 115.07 91.426 115.07 84 110.785 c 76.574 106.496 72 98.574 72 90 c 156 
90 m 156 93.312 153.312 96 150 96 c 146.688 96 144 93.312 144 90 c 144 86.688
 146.688 84 150 84 c 153.312 84 156 86.688 156 90 c f
Q Q
showpage
%%Trailer
%%EOF
