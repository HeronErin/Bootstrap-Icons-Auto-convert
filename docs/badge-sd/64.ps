%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 36 rectclip
1 0 0 -1 0 48 cm q
0 g
45 12 m 45 11.203 44.684 10.441 44.121 9.879 c 43.559 9.316 42.797 9 42
 9 c 6 9 l 4.344 9 3 10.344 3 12 c 3 36 l 3 36.797 3.316 37.559 3.879 38.121
 c 4.441 38.684 5.203 39 6 39 c 42 39 l 42.797 39 43.559 38.684 44.121 38.121
 c 44.684 37.559 45 36.797 45 36 c h
0 12 m 0 8.688 2.688 6 6 6 c 42 6 l 43.59 6 45.117 6.633 46.242 7.758 c
 47.367 8.883 48 10.41 48 12 c 48 36 l 48 37.59 47.367 39.117 46.242 40.242
 c 45.117 41.367 43.59 42 42 42 c 6 42 l 2.688 42 0 39.312 0 36 c h
15.23 33.344 m 10.66 33.344 8.441 30.945 8.285 28.098 c 11.727 28.098 l
 11.965 29.496 13.309 30.523 15.43 30.523 c 17.648 30.523 18.82 29.508 18.82
 28.035 c 18.82 26.781 17.922 26.133 16.051 25.699 c 13.27 25.055 l 10.473
 24.426 8.711 22.812 8.711 20.082 c 8.711 16.789 11.465 14.637 15.43 14.637
 c 19.543 14.637 21.914 16.945 22.09 19.711 c 18.715 19.711 l 18.488 18.422
 17.316 17.43 15.406 17.43 c 13.441 17.43 12.27 18.445 12.27 19.84 c 12.27
 20.918 13.152 21.633 14.734 21.977 c 17.531 22.625 l 20.445 23.285 22.371
 24.68 22.371 27.699 c 22.371 31.051 19.801 33.344 15.238 33.344 c 24.922
 33 m 24.922 15.004 l 31.492 15.004 l 36.961 15.004 39.543 18.273 39.543
 23.957 c 39.543 29.68 36.922 33.004 31.488 33.004 c h
31.016 17.902 m 28.484 17.902 l 28.484 30.082 l 31.016 30.082 l 34.363 
30.082 35.883 28.082 35.883 24.023 c 35.883 19.961 34.352 17.902 31.016 
17.902 c f*
Q Q
showpage
%%Trailer
%%EOF
