%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
180 48 m 180 44.816 178.734 41.766 176.484 39.516 c 174.234 37.266 171.184
 36 168 36 c 24 36 l 17.371 36 12 41.371 12 48 c 12 144 l 12 147.184 13.266
 150.234 15.516 152.484 c 17.766 154.734 20.816 156 24 156 c 168 156 l 171.184
 156 174.234 154.734 176.484 152.484 c 178.734 150.234 180 147.184 180 144
 c h
0 48 m 0 41.637 2.527 35.531 7.031 31.031 c 11.531 26.527 17.637 24 24 
24 c 168 24 l 174.363 24 180.469 26.527 184.969 31.031 c 189.473 35.531 
192 41.637 192 48 c 192 144 l 192 150.363 189.473 156.469 184.969 160.969
 c 180.469 165.473 174.363 168 168 168 c 24 168 l 17.637 168 11.531 165.473
 7.031 160.969 c 2.527 156.469 0 150.363 0 144 c h
60.926 133.367 m 42.637 133.367 33.77 123.766 33.145 112.379 c 46.91 112.379
 l 47.859 117.973 53.234 122.086 61.719 122.086 c 70.586 122.086 75.277 
118.02 75.277 112.125 c 75.277 107.109 71.676 104.516 64.203 102.777 c 53.078
 100.199 l 41.895 97.68 34.84 91.234 34.84 80.316 c 34.84 67.141 45.855 
58.535 61.719 58.535 c 78.172 58.535 87.664 67.773 88.359 78.84 c 74.855
 78.84 l 73.957 73.68 69.262 69.719 61.621 69.719 c 53.762 69.719 49.07 
73.773 49.07 79.367 c 49.07 83.688 52.598 86.543 58.922 87.91 c 70.105 90.504
 l 81.758 93.145 89.461 98.723 89.461 110.797 c 89.461 124.199 79.176 133.367
 60.926 133.367 c 99.684 132 m 99.684 60.012 l 125.965 60.012 l 147.84 60.012
 158.172 73.09 158.172 95.82 c 158.172 118.715 147.684 132 125.953 132 c
 h
124.055 71.617 m 113.926 71.617 l 113.926 120.336 l 124.055 120.336 l 137.445
 120.336 143.52 112.332 143.52 96.098 c 143.52 79.852 137.398 71.617 124.055
 71.617 c f*
Q Q
showpage
%%Trailer
%%EOF
