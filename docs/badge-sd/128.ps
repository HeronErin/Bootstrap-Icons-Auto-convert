%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
90 24 m 90 22.41 89.367 20.883 88.242 19.758 c 87.117 18.633 85.59 18 84
 18 c 12 18 l 8.688 18 6 20.688 6 24 c 6 72 l 6 73.59 6.633 75.117 7.758
 76.242 c 8.883 77.367 10.41 78 12 78 c 84 78 l 85.59 78 87.117 77.367 88.242
 76.242 c 89.367 75.117 90 73.59 90 72 c h
0 24 m 0 17.371 5.371 12 12 12 c 84 12 l 87.184 12 90.234 13.266 92.484
 15.516 c 94.734 17.766 96 20.816 96 24 c 96 72 l 96 75.184 94.734 78.234
 92.484 80.484 c 90.234 82.734 87.184 84 84 84 c 12 84 l 5.371 84 0 78.629
 0 72 c h
30.461 66.684 m 21.316 66.684 16.883 61.883 16.57 56.191 c 23.453 56.191
 l 23.926 58.988 26.613 61.047 30.855 61.047 c 35.289 61.047 37.637 59.012
 37.637 56.066 c 37.637 53.559 35.836 52.262 32.098 51.391 c 26.535 50.102
 l 20.941 48.84 17.414 45.621 17.414 40.16 c 17.414 33.57 22.922 29.27 30.855
 29.27 c 39.082 29.27 43.828 33.891 44.176 39.422 c 37.43 39.422 l 36.98
 36.844 34.633 34.863 30.812 34.863 c 26.883 34.863 24.535 36.891 24.535
 39.688 c 24.535 41.848 26.301 43.277 29.461 43.961 c 35.055 45.258 l 40.879
 46.578 44.734 49.367 44.734 55.402 c 44.734 62.105 39.594 66.688 30.465
 66.688 c 49.844 66 m 49.844 30.008 l 62.984 30.008 l 73.922 30.008 79.09
 36.547 79.09 47.91 c 79.09 59.359 73.848 66 62.98 66 c h
62.031 35.809 m 56.969 35.809 l 56.969 60.168 l 62.031 60.168 l 68.727 
60.168 71.762 56.164 71.762 48.047 c 71.762 39.922 68.703 35.809 62.031 
35.809 c f*
Q Q
showpage
%%Trailer
%%EOF
