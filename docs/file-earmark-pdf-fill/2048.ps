%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
530.207 1192.703 m 543.648 1184.766 558.336 1177.152 574.27 1169.855 c 
574.273 1169.855 l 560.797 1189.918 546.379 1209.332 531.07 1228.031 c 504.191
 1260.383 483.262 1277.566 470.109 1282.941 c 466.75 1284.094 l 466.754 
1284.098 l 465.801 1282.762 464.965 1281.348 464.258 1279.871 c 458.883 
1269.312 459.074 1259.137 468.098 1245.312 c 478.273 1229.473 498.723 1211.328
 530.211 1192.703 c 765.891 1034.59 m 754.5 1036.957 743.105 1039.453 731.715
 1042.078 c 731.711 1042.078 l 748.641 1008.93 764.645 975.316 779.711 941.281
 c 794.883 969.402 811.215 996.883 828.672 1023.648 c 807.809 1026.719 786.879
 1030.367 765.887 1034.594 c 1008.285 1124.738 m 1008.289 1124.734 l 993.406
 1112.676 979.445 1099.52 966.527 1085.375 c 988.543 1085.824 1008.129 1087.551
 1025.281 1090.559 c 1055.715 1096.031 1070.016 1104.672 1075.008 1110.621
 c 1075.008 1110.625 l 1076.543 1112.309 1077.43 1114.488 1077.504 1116.77
 c 1077.152 1123.539 1075.176 1130.121 1071.742 1135.969 c 1069.836 1140.66
 1066.723 1144.766 1062.719 1147.871 c 1060.762 1149.141 1058.406 1149.652
 1056.098 1149.312 c 1047.457 1149.023 1031.328 1142.977 1008.289 1124.738
 c 794.688 669.121 m 790.848 692.547 784.32 719.426 775.488 748.707 c 775.488
 748.703 l 772.246 737.738 769.395 726.66 766.945 715.488 c 759.648 681.602
 758.594 655.008 762.531 636.578 c 766.18 619.586 773.09 612.77 781.348 
609.41 c 781.344 609.406 l 785.766 607.434 790.457 606.141 795.266 605.566
 c 796.512 608.445 797.953 614.398 798.336 624.574 c 798.848 636.285 797.633
 651.168 794.688 669.215 c h
794.688 669.121 m f
384 0 m 892.129 0 l 917.586 0.004 942 10.125 960 28.129 c 1315.871 384 
l 1333.875 402 1343.996 426.414 1344 451.871 c 1344 1344 l 1344 1377.703
 1335.129 1410.812 1318.277 1440 c 1301.426 1469.188 1277.188 1493.426 1248
 1510.277 c 1218.812 1527.129 1185.703 1536 1152 1536 c 384 1536 l 333.078
 1536 284.242 1515.773 248.234 1479.766 c 212.227 1443.758 192 1394.922 
192 1344 c 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242
 20.227 333.078 0 384 0 c 912 144 m 912 336 l 912 361.461 922.113 385.879
 940.117 403.883 c 958.121 421.887 982.539 432 1008 432 c 1200 432 l h
399.84 1312.129 m 408.48 1329.41 421.918 1345.059 441.887 1352.352 c 461.758
 1359.551 481.438 1356.191 497.566 1349.473 c 528.094 1336.992 558.527 1307.617
 586.461 1274.016 c 618.43 1235.52 652.027 1185.023 684.477 1129.055 c 684.48
 1129.055 l 747.129 1110.512 811.277 1097.473 876.191 1090.078 c 904.992
 1126.848 934.75 1158.527 963.551 1181.277 c 990.43 1202.398 1021.438 1219.965
 1053.215 1221.309 c 1053.215 1221.312 l 1070.523 1222.145 1087.648 1217.508
 1102.176 1208.062 c 1117.055 1198.367 1128.098 1184.352 1136.16 1168.125
 c 1144.801 1150.75 1150.082 1132.605 1149.406 1114.078 c 1148.832 1095.809
 1142.059 1078.273 1130.207 1064.352 c 1108.512 1038.43 1072.992 1025.953
 1038.047 1019.711 c 995.656 1013.18 952.648 1011.57 909.887 1014.91 c 873.797
 963.852 842.312 909.688 815.809 853.055 c 839.809 789.695 857.762 729.789
 865.73 680.832 c 869.188 659.902 871.012 639.938 870.34 621.887 c 870.336
 621.887 l 870.211 603.973 866.043 586.32 858.145 570.238 c 848.922 552.273
 832.105 539.406 812.352 535.199 c 792.961 531.07 772.992 535.199 754.656
 542.59 c 718.465 556.988 699.359 587.711 692.16 621.598 c 685.152 654.238
 688.32 692.254 696.574 730.652 c 705.023 769.629 719.422 812.059 737.855
 854.973 c 737.855 854.977 l 708.305 928.27 674.254 999.672 635.902 1068.77
 c 586.438 1084.359 538.754 1105.113 493.633 1130.688 c 458.113 1151.809
 426.527 1176.766 407.52 1206.238 c 387.359 1237.535 381.121 1274.781 399.84
 1312.125 c f*
Q Q
showpage
%%Trailer
%%EOF
