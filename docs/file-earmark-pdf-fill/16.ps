%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 1 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
4.141 9.316 m 4.246 9.254 4.359 9.195 4.484 9.137 c 4.488 9.141 l 4.383
 9.297 4.27 9.449 4.148 9.594 c 3.938 9.848 3.773 9.98 3.672 10.023 c 3.645
 10.031 l 3.648 10.031 l 3.641 10.023 3.633 10.012 3.629 10 c 3.586 9.918
 3.59 9.84 3.66 9.73 c 3.738 9.605 3.898 9.465 4.145 9.32 c 5.984 8.086 
m 5.895 8.105 5.805 8.125 5.719 8.145 c 5.715 8.141 l 5.848 7.883 5.973 
7.621 6.09 7.355 c 6.211 7.574 6.336 7.789 6.473 7.996 c 6.309 8.02 6.145
 8.047 5.98 8.082 c 7.875 8.785 m 7.879 8.785 l 7.762 8.691 7.652 8.59 7.551
 8.48 c 7.723 8.484 7.875 8.496 8.012 8.52 c 8.25 8.562 8.359 8.629 8.398
 8.676 c 8.41 8.691 8.418 8.707 8.418 8.727 c 8.414 8.777 8.398 8.828 8.371
 8.875 c 8.359 8.91 8.332 8.945 8.301 8.969 c 8.289 8.977 8.27 8.98 8.25
 8.98 c 8.184 8.977 8.055 8.93 7.875 8.789 c 6.207 5.227 m 6.176 5.41 6.125
 5.621 6.059 5.848 c 6.031 5.762 6.012 5.676 5.992 5.59 c 5.934 5.324 5.926
 5.117 5.957 4.973 c 5.984 4.84 6.039 4.785 6.105 4.762 c 6.141 4.746 6.176
 4.734 6.215 4.73 c 6.223 4.754 6.234 4.801 6.238 4.879 c 6.242 4.969 6.234
 5.086 6.211 5.227 c h
6.207 5.227 m f
3 0 m 6.969 0 l 7.168 0 7.359 0.078 7.5 0.219 c 10.281 3 l 10.422 3.141
 10.5 3.332 10.5 3.531 c 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562
 c 9.781 11.844 9.398 12 9 12 c 3 12 l 2.172 12 1.5 11.328 1.5 10.5 c 1.5
 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 1.125 m 7.125 2.625 l 7.125 2.824 7.203
 3.016 7.344 3.156 c 7.484 3.297 7.676 3.375 7.875 3.375 c 9.375 3.375 l
 h
3.125 10.25 m 3.191 10.387 3.297 10.508 3.453 10.562 c 3.609 10.617 3.762
 10.594 3.887 10.539 c 4.125 10.441 4.363 10.211 4.582 9.949 c 4.832 9.648
 5.094 9.254 5.348 8.816 c 5.348 8.82 l 5.836 8.676 6.34 8.574 6.844 8.516
 c 7.07 8.805 7.301 9.051 7.527 9.227 c 7.738 9.391 7.98 9.527 8.227 9.539
 c 8.227 9.543 l 8.363 9.547 8.496 9.512 8.609 9.438 c 8.727 9.363 8.812
 9.254 8.875 9.125 c 8.941 8.988 8.984 8.848 8.977 8.703 c 8.98 8.703 l 
8.977 8.562 8.922 8.426 8.828 8.316 c 8.66 8.113 8.383 8.016 8.109 7.969
 c 8.109 7.965 l 7.777 7.914 7.441 7.902 7.109 7.93 c 6.828 7.531 6.582 
7.105 6.375 6.664 c 6.562 6.168 6.703 5.699 6.766 5.32 c 6.793 5.156 6.809
 5 6.801 4.859 c 6.797 4.719 6.766 4.582 6.703 4.453 c 6.633 4.316 6.5 4.215
 6.348 4.18 c 6.195 4.148 6.039 4.18 5.898 4.238 c 5.617 4.352 5.465 4.59
 5.41 4.855 c 5.355 5.109 5.379 5.406 5.445 5.707 c 5.512 6.012 5.625 6.344
 5.77 6.68 c 5.766 6.68 l 5.535 7.254 5.27 7.809 4.969 8.352 c 4.582 8.473
 4.211 8.633 3.855 8.832 c 3.578 8.996 3.332 9.191 3.184 9.422 c 3.027 9.668
 2.977 9.957 3.125 10.25 c f*
Q Q
showpage
%%Trailer
%%EOF
