%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.07 4.66 m 2.121 4.629 2.18 4.598 2.242 4.57 c 2.191 4.648 2.133 4.723
 2.074 4.797 c 1.969 4.922 1.887 4.992 1.836 5.012 c 1.824 5.016 l 1.82 
5.012 1.816 5.004 1.812 5 c 1.793 4.957 1.793 4.918 1.828 4.863 c 1.867 
4.801 1.949 4.73 2.07 4.656 c 2.992 4.039 m 2.949 4.047 2.902 4.059 2.859
 4.066 c 2.859 4.07 l 2.926 3.941 2.988 3.809 3.047 3.676 c 3.105 3.785 
3.168 3.895 3.238 4 c 3.156 4.012 3.074 4.027 2.992 4.043 c 3.938 4.395 
m 3.879 4.348 3.824 4.297 3.777 4.238 c 3.863 4.238 3.941 4.246 4.008 4.258
 c 4.125 4.277 4.184 4.312 4.203 4.336 c 4.199 4.34 l 4.207 4.344 4.207 
4.352 4.211 4.363 c 4.207 4.391 4.199 4.414 4.188 4.438 c 4.18 4.457 4.168
 4.473 4.152 4.484 c 4.145 4.488 4.133 4.492 4.125 4.488 c 4.09 4.488 4.027
 4.465 3.938 4.391 c 3.105 2.613 m 3.09 2.703 3.066 2.809 3.031 2.926 c 
3.027 2.926 l 3.016 2.883 3.004 2.84 2.996 2.793 c 2.969 2.66 2.965 2.559
 2.98 2.484 c 2.996 2.418 3.023 2.391 3.055 2.379 c 3.051 2.379 l 3.07 2.371
 3.086 2.367 3.105 2.367 c 3.109 2.379 3.117 2.402 3.117 2.441 c 3.121 2.488
 3.113 2.547 3.102 2.617 c h
3.105 2.613 m f
1.5 0 m 3.484 0 l 3.586 0 3.68 0.039 3.75 0.109 c 5.141 1.5 l 5.211 1.57
 5.25 1.664 5.25 1.766 c 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 
c 4.891 5.922 4.699 6 4.5 6 c 1.5 6 l 1.086 6 0.75 5.664 0.75 5.25 c 0.75
 0.75 l 0.75 0.336 1.086 0 1.5 0 c 3.562 0.562 m 3.562 1.312 l 3.562 1.41
 3.602 1.508 3.672 1.578 c 3.742 1.648 3.84 1.688 3.938 1.688 c 4.688 1.688
 l h
1.562 5.125 m 1.598 5.191 1.648 5.254 1.727 5.281 c 1.805 5.309 1.883 5.297
 1.945 5.27 c 2.066 5.223 2.184 5.105 2.293 4.977 c 2.418 4.828 2.551 4.629
 2.676 4.41 c 2.672 4.41 l 2.918 4.34 3.168 4.285 3.422 4.258 c 3.535 4.402
 3.652 4.523 3.762 4.613 c 3.867 4.695 3.988 4.766 4.113 4.77 c 4.184 4.773
 4.25 4.758 4.305 4.719 c 4.363 4.68 4.406 4.625 4.438 4.562 c 4.473 4.496
 4.492 4.422 4.488 4.352 c 4.488 4.281 4.461 4.211 4.414 4.156 c 4.328 4.055
 4.191 4.008 4.055 3.98 c 4.055 3.984 l 3.891 3.957 3.723 3.953 3.555 3.965
 c 3.414 3.766 3.289 3.555 3.188 3.332 c 3.281 3.086 3.352 2.852 3.383 2.66
 c 3.395 2.578 3.402 2.5 3.402 2.43 c 3.398 2.43 l 3.398 2.359 3.383 2.289
 3.352 2.227 c 3.316 2.156 3.25 2.105 3.172 2.09 c 3.098 2.074 3.02 2.09
 2.945 2.117 c 2.805 2.172 2.73 2.293 2.703 2.426 c 2.676 2.555 2.688 2.703
 2.719 2.852 c 2.75 3.004 2.809 3.168 2.879 3.336 c 2.883 3.34 l 2.766 3.625
 2.633 3.906 2.484 4.176 c 2.289 4.234 2.105 4.316 1.93 4.418 c 1.789 4.5
 1.668 4.598 1.594 4.715 c 1.516 4.836 1.492 4.984 1.562 5.129 c f*
Q Q
showpage
%%Trailer
%%EOF
