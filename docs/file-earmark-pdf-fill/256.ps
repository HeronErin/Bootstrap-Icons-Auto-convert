%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
66.277 149.09 m 67.957 148.098 69.793 147.145 71.785 146.234 c 71.785 146.23
 l 70.098 148.738 68.297 151.168 66.383 153.504 c 63.023 157.547 60.406 
159.695 58.762 160.367 c 58.34 160.512 l 58.344 160.512 l 58.227 160.344
 58.121 160.168 58.031 159.984 c 57.359 158.664 57.383 157.391 58.512 155.664
 c 59.785 153.684 62.34 151.418 66.277 149.09 c 95.738 129.324 m 94.312 
129.621 92.891 129.934 91.465 130.262 c 93.578 126.117 95.582 121.914 97.465
 117.66 c 99.359 121.176 101.402 124.609 103.586 127.957 c 100.977 128.34
 98.363 128.797 95.738 129.324 c 126.039 140.594 m 126.035 140.594 l 124.176
 139.086 122.43 137.441 120.816 135.672 c 123.57 135.727 126.016 135.945
 128.16 136.32 c 131.965 137.004 133.754 138.086 134.375 138.828 c 134.566
 139.039 134.68 139.312 134.688 139.598 c 134.645 140.441 134.398 141.266
 133.969 141.996 c 133.73 142.582 133.34 143.098 132.84 143.484 c 132.594
 143.645 132.301 143.707 132.012 143.664 c 130.934 143.629 128.914 142.871
 126.035 140.594 c 99.336 83.641 m 98.855 86.57 98.039 89.93 96.938 93.59
 c 96.531 92.219 96.176 90.832 95.867 89.438 c 94.957 85.203 94.824 81.879
 95.316 79.574 c 95.773 77.449 96.637 76.598 97.668 76.18 c 97.668 76.176
 l 98.219 75.93 98.809 75.766 99.406 75.695 c 99.562 76.055 99.742 76.801
 99.789 78.07 c 99.852 79.535 99.699 81.395 99.332 83.648 c h
99.336 83.641 m f
48 0 m 111.516 0 l 114.699 0 117.75 1.266 120 3.516 c 164.484 48 l 166.734
 50.25 168 53.301 168 56.484 c 168 168 l 168 174.363 165.473 180.469 160.969
 184.969 c 156.469 189.473 150.363 192 144 192 c 48 192 l 41.637 192 35.531
 189.473 31.031 184.969 c 26.527 180.469 24 174.363 24 168 c 24 24 l 24 
17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 18 
m 114 42 l 114 45.184 115.266 48.234 117.516 50.484 c 119.766 52.734 122.816
 54 126 54 c 150 54 l h
49.98 164.016 m 51.059 166.176 52.742 168.133 55.238 169.043 c 57.723 169.941
 60.184 169.523 62.199 168.684 c 66.016 167.125 69.82 163.453 73.312 159.25
 c 77.309 154.438 81.508 148.125 85.566 141.129 c 85.559 141.133 l 93.391
 138.812 101.41 137.184 109.523 136.262 c 113.125 140.859 116.844 144.816
 120.445 147.66 c 123.805 150.301 127.68 152.496 131.652 152.664 c 133.816
 152.77 135.957 152.188 137.773 151.008 c 139.633 149.797 141.012 148.043
 142.02 146.016 c 143.098 143.844 143.758 141.574 143.676 139.258 c 143.676
 139.262 l 143.605 136.977 142.758 134.785 141.277 133.043 c 138.566 129.805
 134.125 128.242 129.758 127.465 c 124.457 126.648 119.082 126.445 113.734
 126.863 c 109.227 120.48 105.289 113.711 101.977 106.633 c 104.977 98.711
 107.219 91.227 108.215 85.105 c 108.648 82.488 108.875 79.992 108.789 77.738
 c 108.793 77.734 l 108.777 75.496 108.254 73.289 107.27 71.281 c 106.113
 69.035 104.012 67.426 101.543 66.898 c 99.117 66.383 96.621 66.898 94.332
 67.824 c 89.809 69.625 87.422 73.465 86.52 77.699 c 85.645 81.777 86.039
 86.531 87.07 91.332 c 88.125 96.203 89.926 101.508 92.23 106.871 c 88.539
 116.035 84.281 124.957 79.488 133.598 c 73.305 135.547 67.344 138.141 61.703
 141.336 c 57.262 143.977 53.316 147.098 50.938 150.781 c 48.418 154.691
 47.637 159.348 49.977 164.016 c f*
Q Q
showpage
%%Trailer
%%EOF
