%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
132.551 298.176 m 135.91 296.191 139.582 294.289 143.566 292.465 c 140.199
 297.48 136.594 302.332 132.77 307.008 c 126.051 315.098 120.816 319.391
 117.531 320.734 c 116.691 321.023 l 116.688 321.023 l 116.449 320.691 116.242
 320.336 116.062 319.969 c 114.719 317.328 114.766 314.785 117.023 311.328
 c 119.566 307.367 124.68 302.832 132.551 298.176 c 191.473 258.648 m 188.625
 259.242 185.777 259.863 182.93 260.52 c 187.16 252.23 191.16 243.828 194.93
 235.32 c 198.719 242.352 202.805 249.223 207.168 255.91 c 201.953 256.68
 196.719 257.59 191.473 258.645 c 252.074 281.18 m 252.07 281.184 l 248.352
 278.168 244.863 274.879 241.633 271.344 c 247.137 271.457 252.031 271.887
 256.32 272.641 c 263.93 274.008 267.504 276.168 268.754 277.656 c 269.137
 278.078 269.355 278.621 269.375 279.191 c 269.289 280.883 268.793 282.531
 267.938 283.992 c 267.457 285.164 266.68 286.191 265.68 286.969 c 265.191
 287.285 264.602 287.414 264.023 287.328 c 261.863 287.258 257.832 285.742
 252.07 281.184 c 198.672 167.281 m 197.711 173.137 196.078 179.855 193.871
 187.176 c 193.062 184.434 192.348 181.664 191.734 178.871 c 189.91 170.398
 189.645 163.75 190.629 159.145 c 191.539 154.898 193.27 153.191 195.332
 152.352 c 195.336 152.352 l 196.441 151.859 197.613 151.535 198.816 151.391
 c 199.129 152.109 199.488 153.598 199.586 156.145 c 199.715 159.074 199.41
 162.793 198.676 167.305 c h
198.672 167.281 m f
96 0 m 223.031 0 l 229.398 0 235.5 2.531 240 7.031 c 328.969 96 l 333.469
 100.5 336 106.602 336 112.969 c 336 336 l 336 348.73 330.941 360.938 321.941
 369.941 c 312.938 378.941 300.73 384 288 384 c 96 384 l 83.27 384 71.062
 378.941 62.059 369.941 c 53.059 360.938 48 348.73 48 336 c 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 36 m 228 
84 l 228 90.363 230.527 96.469 235.031 100.969 c 239.531 105.473 245.637
 108 252 108 c 300 108 l h
99.961 328.031 m 102.121 332.352 105.48 336.262 110.473 338.086 c 115.441
 339.887 120.359 339.047 124.395 337.367 c 132.027 334.246 139.633 326.902
 146.617 318.504 c 154.609 308.879 163.008 296.258 171.121 282.266 c 186.781
 277.629 202.82 274.367 219.047 272.52 c 226.246 281.711 233.688 289.633
 240.887 295.32 c 247.605 300.602 255.359 304.992 263.301 305.328 c 263.305
 305.328 l 267.629 305.535 271.914 304.379 275.543 302.016 c 279.262 299.59
 282.023 296.086 284.039 292.031 c 286.199 287.688 287.52 283.152 287.352
 278.52 c 287.207 273.953 285.516 269.566 282.551 266.09 c 277.125 259.609
 268.246 256.488 259.512 254.93 c 248.914 253.297 238.164 252.891 227.473
 253.727 c 218.449 240.965 210.578 227.422 203.953 213.266 c 209.953 197.426
 214.441 182.449 216.434 170.211 c 217.297 164.98 217.754 159.988 217.586
 155.477 c 217.586 155.473 l 217.551 150.992 216.512 146.578 214.535 142.559
 c 212.23 138.066 208.027 134.852 203.09 133.801 c 198.242 132.77 193.25
 133.801 188.664 135.648 c 179.617 139.25 174.84 146.93 173.039 155.402 
c 171.285 163.562 172.078 173.066 174.145 182.668 c 176.258 192.41 179.855
 203.02 184.465 213.746 c 184.465 213.742 l 177.074 232.066 168.562 249.918
 158.977 267.191 c 146.609 271.09 134.688 276.277 123.406 282.672 c 114.527
 287.953 106.629 294.191 101.879 301.559 c 96.84 309.383 95.277 318.695 
99.957 328.031 c f*
Q Q
showpage
%%Trailer
%%EOF
