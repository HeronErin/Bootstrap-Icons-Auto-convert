%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
265.105 596.352 m 271.824 592.383 279.168 588.574 287.137 584.926 c 287.137
 584.93 l 280.398 594.957 273.191 604.664 265.535 614.016 c 252.094 630.191
 241.633 638.785 235.055 641.473 c 233.375 642.047 l 232.902 641.379 232.484
 640.676 232.129 639.938 c 229.441 634.656 229.535 629.57 234.051 622.656
 c 239.141 614.734 249.363 605.664 265.105 596.352 c 382.945 517.297 m 377.25
 518.48 371.555 519.73 365.855 521.039 c 374.32 504.465 382.324 487.66 389.855
 470.641 c 397.441 484.703 405.609 498.441 414.336 511.824 c 403.902 513.359
 393.441 515.184 382.945 517.297 c 504.145 562.367 m 496.703 556.34 489.723
 549.758 483.266 542.688 c 494.273 542.91 504.066 543.777 512.641 545.281
 c 527.855 548.016 535.008 552.336 537.504 555.312 c 538.273 556.156 538.715
 557.246 538.754 558.383 c 538.578 561.77 537.59 565.062 535.871 567.984
 c 534.918 570.332 533.359 572.383 531.359 573.938 c 530.379 574.57 529.203
 574.828 528.047 574.656 c 523.727 574.512 515.664 571.488 504.145 562.367
 c 397.344 334.559 m 395.422 346.27 392.16 359.711 387.742 374.352 c 386.121
 368.867 384.699 363.328 383.473 357.742 c 379.824 340.797 379.297 327.504
 381.266 318.285 c 383.09 309.789 386.547 306.383 390.672 304.699 c 390.672
 304.703 l 392.883 303.715 395.227 303.07 397.633 302.785 c 398.258 304.227
 398.977 307.199 399.168 312.289 c 399.426 318.145 398.816 325.586 397.344
 334.609 c h
397.344 334.559 m f
192 0 m 446.062 0 l 458.793 0.004 471 5.062 480 14.062 c 657.938 192 l 
666.938 201 671.996 213.207 672 225.938 c 672 672 l 672 697.461 661.887 
721.879 643.883 739.883 c 625.879 757.887 601.461 768 576 768 c 192 768 
l 166.539 768 142.121 757.887 124.117 739.883 c 106.113 721.879 96 697.461
 96 672 c 96 96 l 96 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113
 166.539 0 192 0 c 456 72 m 456 168 l 456 180.73 461.059 192.938 470.059
 201.941 c 479.062 210.941 491.27 216 504 216 c 600 216 l h
199.922 656.062 m 204.242 664.703 210.961 672.527 220.945 676.176 c 230.883
 679.777 240.723 678.098 248.785 674.734 c 264.051 668.496 279.266 653.805
 293.234 637.008 c 309.219 617.762 326.02 592.512 342.242 564.527 c 342.238
 564.527 l 373.562 555.258 405.637 548.734 438.098 545.039 c 452.496 563.422
 467.379 579.262 481.777 590.641 c 495.219 601.199 510.723 609.984 526.609
 610.656 c 535.262 611.07 543.824 608.754 551.09 604.031 c 558.531 599.184
 564.051 592.176 568.082 584.062 c 572.402 575.375 575.043 566.301 574.707
 557.039 c 574.703 557.039 l 574.414 547.902 571.031 539.137 565.105 532.176
 c 554.258 519.215 536.496 512.977 519.027 509.855 c 519.023 509.855 l 497.828
 506.59 476.324 505.785 454.945 507.457 c 436.898 481.926 421.156 454.844
 407.902 426.527 c 419.902 394.848 428.879 364.895 432.863 340.414 c 434.59
 329.949 435.504 319.965 435.168 310.941 c 435.168 310.945 l 435.105 301.988
 433.02 293.16 429.07 285.121 c 424.461 276.137 416.055 269.703 406.176 
267.602 c 396.48 265.539 386.496 267.602 377.328 271.297 c 359.23 278.496
 349.68 293.855 346.082 310.801 c 342.578 327.121 344.16 346.129 348.289
 365.328 c 352.512 384.816 359.715 406.031 368.93 427.488 c 354.152 464.137
 337.129 499.836 317.953 534.383 c 293.219 542.18 269.375 552.559 246.816
 565.344 c 229.055 575.902 213.266 588.383 203.762 603.121 c 193.684 618.77
 190.562 637.395 199.922 656.066 c f*
Q Q
showpage
%%Trailer
%%EOF
