%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 288 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 288 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 240 384 rectclip
1 0 0 -1 0 384 cm q
0 g
144 0 m 147.184 0 150.234 1.266 152.484 3.516 c 154.734 5.766 156 8.816
 156 12 c 156 72 l 228 72 l 228 12 l 228 5.371 233.371 0 240 0 c 246.629
 0 252 5.371 252 12 c 252 72 l 276 72 l 279.184 72 282.234 73.266 284.484
 75.516 c 286.734 77.766 288 80.816 288 84 c 288 156 l 288 178.277 279.148
 199.645 263.398 215.398 c 247.645 231.148 226.277 240 204 240 c 203.953
 250.414 203.762 260.281 203.039 269.281 c 202.055 281.617 200.016 293.352
 195.43 303.457 c 195.434 303.457 l 190.789 314.145 182.555 322.875 172.152
 328.129 c 161.398 333.602 148.055 336 132 336 c 108.047 336 93.359 343.922
 84.625 353.23 c 76.734 361.559 72.23 372.531 72 384 c 48 384 l 48 369.215
 53.566 351.191 67.129 336.77 c 80.977 322.078 102.266 312 132 312 c 145.945
 312 155.09 309.887 161.23 306.742 c 167.016 303.789 170.832 299.543 173.566
 293.543 c 176.469 287.16 178.199 278.641 179.086 267.383 c 179.734 259.223
 179.926 250.152 179.973 240 c 179.977 240 l 157.703 239.992 136.344 231.141
 120.594 215.387 c 104.848 199.637 96 178.273 96 156 c 96 84 l 96 77.371
 101.371 72 108 72 c 132 72 l 132 12 l 132 5.371 137.371 0 144 0 c f
Q Q
showpage
%%Trailer
%%EOF
