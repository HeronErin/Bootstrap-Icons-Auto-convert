%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 168 180 rectclip
1 0 0 -1 0 192 cm q
0 g
150 192 m 165.004 192 178.871 183.996 186.375 171 c 193.875 158.004 193.875
 141.996 186.375 129 c 178.871 116.004 165.004 108 150 108 c 134.996 108
 121.129 116.004 113.625 129 c 106.125 141.996 106.125 158.004 113.625 171
 c 121.129 183.996 134.996 192 150 192 c 156 132 m 156 144 l 168 144 l 171.312
 144 174 146.688 174 150 c 174 153.312 171.312 156 168 156 c 156 156 l 156
 168 l 156 171.312 153.312 174 150 174 c 146.688 174 144 171.312 144 168
 c 144 156 l 132 156 l 128.688 156 126 153.312 126 150 c 126 146.688 128.688
 144 132 144 c 144 144 l 144 132 l 144 128.688 146.688 126 150 126 c 153.312
 126 156 128.688 156 132 c f
145.152 74.676 m 148.977 72.961 152.613 70.848 156 68.375 c 156 84 l 156
 87.469 153.445 91.848 146.965 96.086 c 154.105 95.68 161.258 96.699 168
 99.086 c 168 48 l 168 35.914 157.5 26.941 145.152 21.324 c 132.266 15.469
 114.875 12 96 12 c 77.125 12 59.734 15.469 46.848 21.324 c 34.5 26.941 
24 35.914 24 48 c 24 156 l 24 168.086 34.5 177.059 46.848 182.676 c 59.734
 188.52 77.125 192 96 192 c 102.434 192 108.695 191.594 114.66 190.836 c
 110.914 187.594 107.629 183.852 104.902 179.711 c 101.992 179.902 99.023
 180 96 180 c 78.434 180 62.809 176.762 51.816 171.758 c 40.273 166.5 36
 160.477 36 156 c 36 140.375 l 39.254 142.801 42.961 144.91 46.848 146.676
 c 59.734 152.52 77.125 156 96 156 c 96.324 156 l 95.887 152.012 95.887 
147.988 96.324 144 c 96 144 l 78.434 144 62.809 140.762 51.816 135.758 c
 40.273 130.5 36 124.477 36 120 c 36 104.375 l 39.254 106.801 42.961 108.91
 46.848 110.676 c 59.734 116.52 77.125 120 96 120 c 99.145 120 102.238 119.902
 105.289 119.711 c 108.859 114.441 113.336 109.84 118.512 106.129 c 111.574
 107.328 103.992 108 96 108 c 78.434 108 62.809 104.762 51.816 99.758 c 
40.273 94.5 36 88.477 36 84 c 36 68.375 l 39.254 70.801 42.961 72.91 46.848
 74.676 c 59.734 80.531 77.125 84 96 84 c 114.875 84 132.266 80.531 145.152
 74.676 c 36 48 m 36 43.512 40.273 37.5 51.816 32.242 c 62.809 27.254 78.434
 24 96 24 c 113.566 24 129.191 27.238 140.184 32.242 c 151.727 37.5 156 
43.523 156 48 c 156 52.488 151.727 58.5 140.184 63.758 c 129.191 68.746 
113.566 72 96 72 c 78.434 72 62.809 68.762 51.816 63.758 c 40.273 58.5 36
 52.477 36 48 c f
Q Q
showpage
%%Trailer
%%EOF
