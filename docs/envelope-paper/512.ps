%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
96 0 m 83.27 0 71.062 5.059 62.059 14.059 c 53.059 23.062 48 35.27 48 48
 c 48 75.191 l 25.414 87.238 l 17.738 91.332 11.316 97.438 6.84 104.898 
c 2.363 112.359 0 120.898 0 129.602 c 0 336 l 0 348.73 5.059 360.938 14.059
 369.941 c 23.062 378.941 35.27 384 48 384 c 336 384 l 348.73 384 360.938
 378.941 369.941 369.941 c 378.941 360.938 384 348.73 384 336 c 384 129.602
 l 384 120.898 381.637 112.359 377.16 104.898 c 372.684 97.438 366.262 91.332
 358.586 87.238 c 336 75.191 l 336 48 l 336 35.27 330.941 23.062 321.941
 14.059 c 312.938 5.059 300.73 0 288 0 c h
336 102.406 m 347.281 108.406 l 351.125 110.453 354.336 113.508 356.578
 117.242 c 358.82 120.973 360 125.246 360 129.602 c 360 149.211 l 336 163.609
 l h
312 178.008 m 222 232.008 l 192 214.008 l 162 232.008 l 72 178.008 l 72
 48 l 72 41.637 74.527 35.531 79.031 31.031 c 83.531 26.527 89.637 24 96
 24 c 288 24 l 294.363 24 300.469 26.527 304.969 31.031 c 309.473 35.531
 312 41.637 312 48 c h
48 163.609 m 24 149.211 l 24 129.602 l 24.004 125.25 25.188 120.984 27.43
 117.254 c 29.668 113.527 32.879 110.477 36.719 108.434 c 48 102.406 l h
360 177.195 m 360 314.812 l 245.328 246.004 l h
359.16 342.316 m 359.16 342.312 l 357.773 347.395 354.758 351.879 350.57
 355.074 c 346.387 358.27 341.266 360 336 360 c 48 360 l 42.73 360 37.609
 358.266 33.422 355.062 c 29.238 351.863 26.219 347.375 24.84 342.289 c 
192 241.992 l h
24 314.785 m 24 177.191 l 138.672 246 l 24 314.809 l h
24 314.785 m f
Q Q
showpage
%%Trailer
%%EOF
