%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 0 m 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242 192 141.078
 192 192 c 192 300.77 l 101.664 348.961 l 70.953 365.336 45.27 389.754 27.363
 419.598 c 9.453 449.441 -0.004 483.594 0 518.398 c 0 1344 l 0 1377.703 
8.871 1410.812 25.723 1440 c 42.574 1469.188 66.812 1493.426 96 1510.277
 c 125.188 1527.129 158.297 1536 192 1536 c 1344 1536 l 1377.703 1536 1410.812
 1527.129 1440 1510.277 c 1469.188 1493.426 1493.426 1469.188 1510.277 1440
 c 1527.129 1410.812 1536 1377.703 1536 1344 c 1536 518.398 l 1536.004 483.594
 1526.547 449.441 1508.637 419.598 c 1490.73 389.754 1465.047 365.336 1434.336
 348.961 c 1344 300.77 l 1344 192 l 1344 158.297 1335.129 125.188 1318.277
 96 c 1301.426 66.812 1277.188 42.574 1248 25.723 c 1218.812 8.871 1185.703
 0 1152 0 c h
1344 409.633 m 1389.121 433.633 l 1404.492 441.816 1417.348 454.031 1426.312
 468.961 c 1435.273 483.895 1440.004 500.984 1440 518.398 c 1440 596.832
 l 1344 654.434 l h
1248 712.031 m 888 928.031 l 768 856.031 l 648 928.031 l 288 712.031 l 
288 192 l 288 166.539 298.113 142.121 316.117 124.117 c 334.121 106.113 
358.539 96 384 96 c 1152 96 l 1177.461 96 1201.879 106.113 1219.883 124.117
 c 1237.887 142.121 1248 166.539 1248 192 c h
192 654.43 m 96 596.828 l 96 518.398 l 96.012 501 100.75 483.93 109.715
 469.016 c 118.676 454.105 131.523 441.906 146.879 433.727 c 192 409.633
 l h
1440 708.766 m 1440 1259.23 l 981.312 984 l h
1436.641 1369.246 m 1431.102 1389.57 1419.027 1407.508 1402.289 1420.293
 c 1385.547 1433.078 1365.066 1440.004 1344 1440 c 192 1440 l 170.922 1440
 150.43 1433.059 133.688 1420.258 c 116.945 1407.453 104.883 1389.492 99.359
 1369.152 c 768 967.969 l h
96 1259.137 m 96 708.77 l 554.688 984 l 96 1259.23 l h
96 1259.137 m f
Q Q
showpage
%%Trailer
%%EOF
