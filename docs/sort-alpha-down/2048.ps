%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 143 191 1287 1376
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 143 191 1287 1376
1536 1536 cairo_set_page_size
%%EndPageSetup
q 143 191 1144 1185 rectclip
1 0 0 -1 0 1536 cm q
0 g
967.871 540.383 m 927.742 672 l 825.406 672 l 997.148 160.129 l 1115.613
 160.129 l 1286.594 672 l 1179.074 672 l 1138.852 540.383 l h
1118.59 465.023 m 1056 257.953 l 1051.488 257.953 l 988.895 465.023 l h
1118.59 465.023 m f*
1244.16 1344 m 866.688 1344 l 866.688 1277.664 l 1114.273 920.543 l 1114.273
 915.359 l 873.406 915.359 l 873.406 832.129 l 1236.766 832.129 l 1236.766
 898.465 l 990.332 1255.586 l 990.332 1260.77 l 1244.254 1260.77 l h
432 240 m 432 222.852 422.852 207.004 408 198.43 c 393.148 189.855 374.852
 189.855 360 198.43 c 345.148 207.004 336 222.852 336 240 c 336 1180.129
 l 225.984 1070.016 l 213.844 1057.875 196.145 1053.133 179.562 1057.578
 c 162.977 1062.02 150.02 1074.977 145.578 1091.562 c 141.133 1108.145 145.875
 1125.844 158.016 1137.984 c 350.016 1329.887 l 350.688 1330.559 l 359.699
 1339.348 371.82 1344.219 384.406 1344.109 c 396.992 1344.004 409.027 1338.926
 417.887 1329.984 c 609.887 1137.984 l 622.031 1125.859 626.781 1108.18 
622.352 1091.602 c 617.922 1075.027 604.984 1062.07 588.414 1057.617 c 571.844
 1053.164 554.156 1057.891 542.016 1070.016 c 432 1180.129 l h
432 240 m f
Q Q
showpage
%%Trailer
%%EOF
