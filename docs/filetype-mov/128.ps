%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 72 90 l 73.59 90 75.117 89.367 76.242 88.242 c 77.367 87.117
 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57 18 c 57 6 l 24 
6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12 5.371 17.371 0 
24 0 c 57 0 l h
42.516 81.996 m 42.516 85.129 l 42.516 86.664 42.281 87.945 41.812 88.977
 c 41.812 88.973 l 41.414 89.926 40.738 90.734 39.875 91.297 c 39.027 91.801
 38.055 92.062 37.066 92.051 c 36.074 92.066 35.094 91.805 34.234 91.297
 c 33.383 90.73 32.715 89.922 32.316 88.98 c 31.812 87.762 31.57 86.449 
31.613 85.129 c 31.613 81.996 l 31.613 80.453 31.848 79.172 32.32 78.148
 c 32.719 77.203 33.383 76.398 34.234 75.828 c 35.086 75.305 36.07 75.035
 37.066 75.055 c 38.117 75.055 39.055 75.316 39.875 75.836 c 40.738 76.395
 41.414 77.203 41.812 78.148 c 42.281 79.168 42.516 80.449 42.516 81.996
 c 47.328 85.109 m 47.328 82.031 l 47.328 79.77 46.918 77.828 46.098 76.199
 c 45.328 74.613 44.098 73.297 42.57 72.422 c 41.047 71.543 39.211 71.102
 37.066 71.102 c 34.93 71.102 33.09 71.543 31.547 72.422 c 30.012 73.285
 28.777 74.598 28.008 76.184 c 27.191 77.809 26.785 79.758 26.785 82.035
 c 26.785 85.113 l 26.785 87.367 27.195 89.312 28.016 90.953 c 28.836 92.578
 30.012 93.832 31.551 94.715 c 33.094 95.578 34.934 96.012 37.07 96.012 
c 39.215 96.012 41.047 95.578 42.574 94.715 c 44.105 93.836 45.281 92.582
 46.102 90.953 c 46.922 89.312 47.332 87.367 47.332 85.113 c 4.238 95.555
 m 4.238 79.594 l 4.465 79.594 l 10.176 92.555 l 13.273 92.555 l 18.949 
79.594 l 19.176 79.594 l 19.176 95.555 l 23.465 95.555 l 23.465 71.562 l
 18.664 71.562 l 11.824 87.137 l 11.668 87.137 l 4.828 71.562 l 0 71.555
 l 0 95.555 l h
61.477 95.555 m 55.766 95.555 l 47.727 71.562 l 53.234 71.562 l 58.609 
90.391 l 58.836 90.391 l 64.164 71.562 l 69.438 71.562 l h
61.477 95.555 m f*
Q Q
showpage
%%Trailer
%%EOF
