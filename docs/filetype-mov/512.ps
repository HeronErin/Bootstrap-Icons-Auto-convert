%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 288 360 l 294.363 360 300.469 357.473 304.969
 352.969 c 309.473 348.469 312 342.363 312 336 c 312 108 l 264 108 l 254.453
 108 245.297 104.207 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c
 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531 
72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059
 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
170.062 327.984 m 170.062 340.512 l 170.062 346.656 169.125 351.785 167.254
 355.895 c 167.258 355.895 l 165.656 359.695 162.957 362.934 159.504 365.184
 c 156.105 367.199 152.223 368.246 148.273 368.207 c 144.289 368.266 140.367
 367.219 136.945 365.184 c 133.531 362.918 130.859 359.695 129.266 355.922
 c 127.246 351.043 126.289 345.789 126.457 340.512 c 126.457 327.984 l 126.457
 321.809 127.402 316.68 129.289 312.602 c 130.871 308.82 133.535 305.59 
136.945 303.312 c 140.348 301.219 144.277 300.145 148.273 300.215 c 152.48
 300.215 156.227 301.254 159.504 303.336 c 162.953 305.582 165.652 308.809
 167.258 312.602 c 169.129 316.68 170.066 321.809 170.066 327.984 c 189.312
 340.441 m 189.312 328.129 l 189.312 319.09 187.672 311.312 184.391 304.801
 c 181.316 298.453 176.398 293.184 170.281 289.68 c 164.184 286.16 156.848
 284.398 148.273 284.398 c 139.73 284.398 132.371 286.16 126.195 289.68 
c 126.191 289.68 l 120.047 293.133 115.105 298.387 112.031 304.727 c 108.766
 311.223 107.137 319.023 107.137 328.125 c 107.137 340.438 l 107.137 349.445
 108.777 357.23 112.059 363.789 c 115.34 370.285 120.051 375.301 126.195
 378.836 c 132.371 382.293 139.73 384.02 148.273 384.02 c 156.848 384.02
 164.184 382.293 170.281 378.836 c 176.41 375.316 181.113 370.301 184.395
 363.789 c 187.676 357.23 189.316 349.445 189.316 340.438 c 16.949 382.199
 m 16.949 318.359 l 17.859 318.359 l 40.707 370.199 l 53.09 370.199 l 75.793
 318.359 l 76.703 318.359 l 76.703 382.199 l 93.863 382.199 l 93.863 286.223
 l 74.664 286.223 l 47.305 348.527 l 46.68 348.527 l 19.32 286.223 l 0 286.223
 l 0 382.223 l h
245.91 382.199 m 223.062 382.199 l 190.902 286.223 l 212.934 286.223 l 
234.438 361.535 l 235.348 361.535 l 256.66 286.223 l 277.758 286.223 l h
245.91 382.199 m f*
Q Q
showpage
%%Trailer
%%EOF
