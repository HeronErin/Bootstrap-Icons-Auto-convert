%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 144 180 l 147.184 180 150.234 178.734 152.484
 176.484 c 154.734 174.234 156 171.184 156 168 c 156 54 l 132 54 l 127.227
 54 122.648 52.105 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114
 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637
 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
85.031 163.992 m 85.031 170.258 l 85.031 173.328 84.562 175.895 83.629 
177.949 c 82.828 179.848 81.48 181.465 79.754 182.594 c 78.055 183.602 76.109
 184.121 74.137 184.105 c 72.145 184.133 70.184 183.609 68.473 182.594 c
 66.766 181.457 65.43 179.848 64.633 177.961 c 63.621 175.52 63.145 172.895
 63.227 170.258 c 63.227 163.992 l 63.227 160.902 63.699 158.34 64.641 156.301
 c 64.645 156.301 l 65.438 154.41 66.77 152.793 68.473 151.656 c 70.172 
150.609 72.141 150.07 74.137 150.109 c 76.242 150.109 78.113 150.629 79.754
 151.668 c 81.477 152.789 82.828 154.402 83.629 156.301 c 84.566 158.34 
85.031 160.906 85.031 163.992 c 94.656 170.219 m 94.656 164.062 l 94.656
 159.543 93.836 155.656 92.195 152.398 c 90.66 149.227 88.199 146.594 85.141
 144.84 c 82.094 143.078 78.426 142.199 74.137 142.199 c 69.863 142.199 
66.184 143.078 63.098 144.84 c 60.023 146.566 57.555 149.191 56.016 152.363
 c 54.383 155.609 53.566 159.512 53.566 164.062 c 53.566 170.219 l 53.566
 174.723 54.387 178.613 56.027 181.895 c 57.668 185.141 60.023 187.652 63.094
 189.418 c 66.184 191.145 69.863 192.012 74.133 192.012 c 78.422 192.012
 82.09 191.148 85.137 189.418 c 88.199 187.656 90.551 185.148 92.191 181.895
 c 93.832 178.613 94.652 174.723 94.652 170.219 c 8.469 191.098 m 8.469 
159.176 l 8.926 159.176 l 20.352 185.098 l 26.543 185.098 l 37.895 159.176
 l 38.352 159.176 l 38.352 191.098 l 46.93 191.098 l 46.93 143.109 l 37.328
 143.109 l 23.648 174.262 l 23.336 174.262 l 9.656 143.109 l 0 143.113 l
 0 191.113 l h
122.949 191.098 m 111.523 191.098 l 95.445 143.109 l 106.461 143.109 l 
117.215 180.766 l 117.672 180.766 l 128.328 143.109 l 138.875 143.109 l 
h
122.949 191.098 m f*
Q Q
showpage
%%Trailer
%%EOF
