%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
528 192 m 477.078 192 428.242 212.227 392.234 248.234 c 356.227 284.242
 336 333.078 336 384 c 336 434.922 356.227 483.758 392.234 519.766 c 428.242
 555.773 477.078 576 528 576 c 578.922 576 627.758 555.773 663.766 519.766
 c 699.773 483.758 720 434.922 720 384 c 720 333.078 699.773 284.242 663.766
 248.234 c 627.758 212.227 578.922 192 528 192 c 289.199 360 m 295.355 298.738
 324.824 242.184 371.508 202.035 c 418.191 161.887 478.516 141.219 540.012
 144.301 c 601.508 147.383 659.465 173.984 701.898 218.598 c 744.332 263.211
 767.996 322.43 767.996 384 c 767.996 445.57 744.332 504.789 701.898 549.402
 c 659.465 594.016 601.508 620.617 540.012 623.699 c 478.516 626.781 418.191
 606.113 371.508 565.965 c 324.824 525.816 295.355 469.262 289.199 408 c
 192 408 l 192 427.094 184.414 445.41 170.91 458.91 c 157.41 472.414 139.094
 480 120 480 c 72 480 l 52.906 480 34.59 472.414 21.09 458.91 c 7.586 445.41
 0 427.094 0 408 c 0 360 l 0 340.906 7.586 322.59 21.09 309.09 c 34.59 295.586
 52.906 288 72 288 c 120 288 l 139.094 288 157.41 295.586 170.91 309.09 
c 184.414 322.59 192 340.906 192 360 c h
528 240 m 534.363 240 540.469 242.527 544.969 247.031 c 549.473 251.531
 552 257.637 552 264 c 552 360 l 648 360 l 656.574 360 664.496 364.574 668.785
 372 c 673.07 379.426 673.07 388.574 668.785 396 c 664.496 403.426 656.574
 408 648 408 c 552 408 l 552 504 l 552 512.574 547.426 520.496 540 524.785
 c 532.574 529.07 523.426 529.07 516 524.785 c 508.574 520.496 504 512.574
 504 504 c 504 408 l 408 408 l 399.426 408 391.504 403.426 387.215 396 c
 382.93 388.574 382.93 379.426 387.215 372 c 391.504 364.574 399.426 360
 408 360 c 504 360 l 504 264 l 504 257.637 506.527 251.531 511.031 247.031
 c 515.531 242.527 521.637 240 528 240 c 72 336 m 65.637 336 59.531 338.527
 55.031 343.031 c 50.527 347.531 48 353.637 48 360 c 48 408 l 48 414.363
 50.527 420.469 55.031 424.969 c 59.531 429.473 65.637 432 72 432 c 120 
432 l 126.363 432 132.469 429.473 136.969 424.969 c 141.473 420.469 144 
414.363 144 408 c 144 360 l 144 353.637 141.473 347.531 136.969 343.031 
c 132.469 338.527 126.363 336 120 336 c h
72 336 m f*
Q Q
showpage
%%Trailer
%%EOF
