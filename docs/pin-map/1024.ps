%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
148.801 537.602 m 153.332 531.559 160.445 528 168 528 c 288 528 l 296.574
 528 304.496 532.574 308.785 540 c 313.07 547.426 313.07 556.574 308.785
 564 c 304.496 571.426 296.574 576 288 576 c 180 576 l 72 720 l 696 720 
l 588 576 l 480 576 l 471.426 576 463.504 571.426 459.215 564 c 454.93 556.574
 454.93 547.426 459.215 540 c 463.504 532.574 471.426 528 480 528 c 600 
528 l 607.555 528 614.668 531.559 619.199 537.602 c 763.199 729.602 l 766.785
 734.379 768.457 740.32 767.895 746.266 c 767.328 752.215 764.566 757.734
 760.148 761.754 c 755.73 765.773 749.973 768 744 768 c 24 768 l 18.027 
768 12.27 765.773 7.852 761.754 c 3.434 757.734 0.672 752.215 0.105 746.266
 c -0.457 740.32 1.215 734.379 4.801 729.602 c h
148.801 537.602 m f*
384 48 m 332.555 48 285.016 75.445 259.293 120 c 233.57 164.555 233.57 
219.445 259.293 264 c 285.016 308.555 332.555 336 384 336 c 435.445 336 
482.984 308.555 508.707 264 c 534.43 219.445 534.43 164.555 508.707 120 
c 482.984 75.445 435.445 48 384 48 c 192 192 m 192.004 142.469 211.152 94.855
 245.441 59.109 c 279.727 23.363 326.504 2.25 375.992 0.184 c 425.484 -1.879
 473.855 15.258 511.004 48.023 c 548.152 80.789 571.199 126.641 575.332 
176 c 579.461 225.359 564.359 274.406 533.176 312.891 c 501.992 351.375 
457.145 376.32 408 382.512 c 408 648 l 408 656.574 403.426 664.496 396 668.785
 c 388.574 673.07 379.426 673.07 372 668.785 c 364.574 664.496 360 656.574
 360 648 c 360 382.559 l 313.582 376.711 270.898 354.117 239.961 319.02 
c 209.027 283.922 191.973 238.738 192 191.953 c h
192 192 m f*
Q Q
showpage
%%Trailer
%%EOF
