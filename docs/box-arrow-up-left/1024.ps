%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
353.473 168 m 353.473 161.637 356 155.531 360.5 151.031 c 365.004 146.527
 371.105 144 377.473 144 c 696 144 l 715.094 144 733.41 151.586 746.91 165.09
 c 760.414 178.59 768 196.906 768 216 c 768 696 l 768 715.094 760.414 733.41
 746.91 746.91 c 733.41 760.414 715.094 768 696 768 c 216 768 l 196.906 
768 178.59 760.414 165.09 746.91 c 151.586 733.41 144 715.094 144 696 c 
144 377.473 l 144 368.898 148.574 360.973 156 356.688 c 163.426 352.398 
172.574 352.398 180 356.688 c 187.426 360.973 192 368.898 192 377.473 c 
192 696 l 192 702.363 194.527 708.469 199.031 712.969 c 203.531 717.473 
209.637 720 216 720 c 696 720 l 702.363 720 708.469 717.473 712.969 712.969
 c 717.473 708.469 720 702.363 720 696 c 720 216 l 720 209.637 717.473 203.531
 712.969 199.031 c 708.469 194.527 702.363 192 696 192 c 377.473 192 l 371.105
 192 365.004 189.473 360.5 184.969 c 356 180.469 353.473 174.363 353.473
 168 c f*
0 24 m 0 17.637 2.527 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c
 264 0 l 272.574 0 280.496 4.574 284.785 12 c 289.07 19.426 289.07 28.574
 284.785 36 c 280.496 43.426 272.574 48 264 48 c 81.938 48 l 472.992 439.008
 l 479.062 445.078 481.434 453.926 479.211 462.219 c 476.988 470.512 470.512
 476.988 462.219 479.211 c 453.926 481.434 445.078 479.062 439.008 472.992
 c 48 81.938 l 48 264 l 48 272.574 43.426 280.496 36 284.785 c 28.574 289.07
 19.426 289.07 12 284.785 c 4.574 280.496 0 272.574 0 264 c h
0 24 m f*
Q Q
showpage
%%Trailer
%%EOF
