%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
485.953 1152 m 819.555 1152 l 992.738 1152 1096.801 1064.832 1096.801 921.984
 c 1096.801 816.191 1023.746 738.047 914.016 726.719 c 914.016 717.117 l
 993.887 703.676 1056.289 627.836 1056.289 542.781 c 1056.289 417.98 964.609
 340.223 812.258 340.223 c 485.953 340.223 l h
612 684 m 612 447.168 l 782.879 447.168 l 876.285 447.168 930.91 491.039
 930.91 565.922 c 930.91 642.914 872.926 684 761.566 684 c h
612 1045.152 m 612 783.551 l 786.91 783.551 l 905.566 783.551 968.062 828
 968.062 912.957 c 968.062 998.973 907.871 1045.148 794.207 1045.148 c h
612 1045.152 m f
0 384 m 0 282.156 40.457 184.484 112.473 112.473 c 184.484 40.457 282.156
 0 384 0 c 1152 0 l 1219.406 0 1285.625 17.742 1344 51.445 c 1402.375 85.148
 1450.852 133.625 1484.555 192 c 1518.258 250.375 1536 316.594 1536 384 
c 1536 1152 l 1536 1219.406 1518.258 1285.625 1484.555 1344 c 1450.852 1402.375
 1402.375 1450.852 1344 1484.555 c 1285.625 1518.258 1219.406 1536 1152 
1536 c 384 1536 l 282.156 1536 184.484 1495.543 112.473 1423.527 c 40.457
 1351.516 0 1253.844 0 1152 c h
384 96 m 307.617 96 234.363 126.344 180.352 180.352 c 126.344 234.363 96
 307.617 96 384 c 96 1152 l 96 1228.383 126.344 1301.637 180.352 1355.648
 c 234.363 1409.656 307.617 1440 384 1440 c 1152 1440 l 1228.383 1440 1301.637
 1409.656 1355.648 1355.648 c 1409.656 1301.637 1440 1228.383 1440 1152 
c 1440 384 l 1440 307.617 1409.656 234.363 1355.648 180.352 c 1301.637 126.344
 1228.383 96 1152 96 c h
384 96 m f
Q Q
showpage
%%Trailer
%%EOF
