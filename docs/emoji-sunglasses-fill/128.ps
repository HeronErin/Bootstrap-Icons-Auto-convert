%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 96 m 65.148 96 80.996 86.852 89.57 72 c 98.145 57.148 98.145 38.852 
89.57 24 c 80.996 9.148 65.148 0 48 0 c 30.852 0 15.004 9.148 6.43 24 c 
-2.145 38.852 -2.145 57.148 6.43 72 c 15.004 86.852 30.852 96 48 96 c 13.859
 31.457 m 13.41 29.664 13.812 27.766 14.949 26.309 c 16.086 24.852 17.832
 24 19.68 24 c 36 24 l 37.59 24 39.117 24.633 40.242 25.758 c 41.367 26.883
 42 28.41 42 30 c 42 30.695 l 43.965 30.223 45.98 29.992 48 30 c 50.102 
30 52.141 30.238 54 30.695 c 54 30 l 54 26.688 56.688 24 60 24 c 76.32 24
 l 78.168 24 79.914 24.852 81.051 26.309 c 82.188 27.766 82.59 29.664 82.141
 31.457 c 80.273 38.91 l 78.938 44.25 74.141 48 68.633 48 c 66 48 l 59.746
 48 54.539 43.199 54.035 36.965 c 52.094 36.301 50.051 35.977 48 36 c 45.641
 36 43.559 36.383 41.965 36.965 c 41.461 43.199 36.254 48 30 48 c 27.371
 48 l 21.867 48 17.066 44.25 15.73 38.91 c h
29.812 58.5 m 33.566 64.996 40.496 69 48 69 c 51.688 69 55.309 68.031 58.504
 66.188 c 61.695 64.344 64.348 61.691 66.191 58.5 c 66.586 57.805 67.242
 57.297 68.016 57.086 c 68.785 56.879 69.609 56.984 70.301 57.383 c 70.992
 57.785 71.496 58.445 71.699 59.215 c 71.906 59.988 71.793 60.812 71.387
 61.5 c 69.02 65.605 65.609 69.016 61.504 71.383 c 57.398 73.754 52.742 
75 48 75 c 43.258 75 38.602 73.754 34.496 71.383 c 30.391 69.016 26.98 65.605
 24.613 61.5 c 23.797 60.066 24.293 58.242 25.719 57.418 c 27.148 56.594
 28.973 57.078 29.809 58.5 c h
29.812 58.5 m f
Q Q
showpage
%%Trailer
%%EOF
