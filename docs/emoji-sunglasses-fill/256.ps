%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 192 m 130.297 192 161.988 173.703 179.137 144 c 196.289 114.297 196.289
 77.703 179.137 48 c 161.988 18.297 130.297 0 96 0 c 61.703 0 30.012 18.297
 12.863 48 c -4.289 77.703 -4.289 114.297 12.863 144 c 30.012 173.703 61.703
 192 96 192 c 27.719 62.914 m 26.82 59.332 27.625 55.531 29.898 52.617 c
 32.176 49.703 35.664 48 39.359 48 c 72 48 l 75.184 48 78.234 49.266 80.484
 51.516 c 82.734 53.766 84 56.816 84 60 c 84 61.391 l 87.93 60.449 91.957
 59.98 96 60 c 100.199 60 104.281 60.48 108 61.391 c 108 60 l 108 53.371
 113.371 48 120 48 c 152.641 48 l 156.336 48 159.824 49.703 162.102 52.617
 c 164.375 55.531 165.18 59.332 164.281 62.914 c 160.551 77.816 l 160.547
 77.82 l 159.25 83.012 156.254 87.621 152.035 90.914 c 147.816 94.211 142.621
 96 137.27 96 c 132 96 l 125.969 96 120.156 93.73 115.723 89.641 c 111.289
 85.555 108.559 79.945 108.07 73.934 c 104.188 72.605 100.105 71.949 96 
72 c 91.285 72 87.121 72.77 83.93 73.934 c 83.441 79.945 80.711 85.555 76.277
 89.641 c 71.844 93.73 66.031 96 60 96 c 54.742 96 l 49.391 96 44.195 94.211
 39.977 90.914 c 35.758 87.621 32.762 83.012 31.465 77.82 c h
59.629 117 m 67.129 129.996 80.996 138 96 138 c 103.375 138 110.621 136.062
 117.008 132.375 c 123.395 128.688 128.695 123.387 132.383 117 c 133.176
 115.609 134.484 114.594 136.027 114.176 c 137.57 113.758 139.215 113.969
 140.602 114.77 c 141.984 115.57 142.992 116.887 143.402 118.434 c 143.809
 119.977 143.586 121.621 142.777 123 c 138.035 131.211 131.219 138.027 123.008
 142.77 c 114.797 147.508 105.48 150 96 150 c 86.52 150 77.203 147.508 68.992
 142.77 c 60.781 138.027 53.965 131.211 49.223 123 c 47.594 120.133 48.582
 116.488 51.441 114.84 c 54.297 113.188 57.949 114.156 59.617 117 c h
59.629 117 m f
Q Q
showpage
%%Trailer
%%EOF
