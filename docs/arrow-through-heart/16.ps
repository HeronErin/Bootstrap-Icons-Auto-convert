%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
2.141 11.891 m 2.035 11.996 1.871 12.031 1.73 11.973 c 1.59 11.914 1.5 
11.777 1.5 11.625 c 1.5 10.5 l 0.375 10.5 l 0.223 10.5 0.086 10.41 0.027
 10.27 c -0.031 10.129 0.004 9.965 0.109 9.859 c 1.234 8.734 l 1.305 8.664
 1.402 8.625 1.5 8.625 c 2.844 8.625 l 3.242 8.227 l 2.664 7.625 2.246 7.043
 1.965 6.488 c 1.367 5.309 1.383 4.242 1.805 3.418 c 2.57 1.922 4.637 1.355
 6 2.426 c 6.938 1.691 8.207 1.73 9.16 2.312 c 9.969 1.5 l 9.109 0.641 l
 9.004 0.535 8.969 0.371 9.027 0.23 c 9.086 0.09 9.223 0 9.375 0 c 11.625
 0 l 11.723 0 11.82 0.039 11.891 0.109 c 11.961 0.18 12 0.277 12 0.375 c
 12 2.625 l 12 2.777 11.91 2.914 11.77 2.973 c 11.629 3.031 11.465 2.996
 11.359 2.891 c 10.5 2.031 l 9.746 2.785 l 9.922 2.973 10.074 3.184 10.195
 3.418 c 10.617 4.238 10.633 5.305 10.035 6.488 c 9.441 7.66 8.238 8.953
 6.207 10.297 c 6 10.434 l 5.793 10.297 l 5.082 9.836 4.41 9.316 3.777 8.75
 c 3.375 9.156 l 3.375 10.5 l 3.375 10.598 3.336 10.695 3.266 10.766 c h
4.309 8.219 m 4.844 8.695 5.406 9.137 6 9.531 c 7.844 8.281 8.871 7.125
 9.367 6.148 c 9.875 5.145 9.824 4.332 9.527 3.758 c 8.914 2.562 7.211 2.219
 6.27 3.188 c 6 3.465 l 5.73 3.188 l 4.785 2.219 3.082 2.562 2.473 3.758
 c 2.18 4.332 2.125 5.141 2.633 6.148 c 2.875 6.625 3.242 7.145 3.773 7.695
 c 5.172 6.297 l 5.32 6.148 5.555 6.148 5.703 6.297 c 5.852 6.445 5.852 
6.68 5.703 6.828 c h
4.309 8.219 m f*
Q Q
showpage
%%Trailer
%%EOF
