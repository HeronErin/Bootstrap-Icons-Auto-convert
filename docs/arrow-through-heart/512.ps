%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
68.496 380.496 m 65.062 383.938 59.895 384.969 55.406 383.105 c 50.914 
381.246 47.992 376.859 48 372 c 48 336 l 12 336 l 7.141 336.008 2.754 333.086
 0.895 328.594 c -0.969 324.105 0.062 318.938 3.504 315.504 c 39.504 279.504
 l 41.758 277.254 44.816 275.996 48 276 c 91.031 276 l 103.75 263.281 l 
85.246 244.035 71.879 225.359 62.855 207.602 c 43.703 169.801 44.254 135.699
 57.742 109.395 c 82.223 61.559 148.32 43.414 192 77.594 c 222 54.074 262.656
 55.32 293.09 73.945 c 319.008 48 l 291.527 20.496 l 288.09 17.066 287.059
 11.902 288.914 7.414 c 290.766 2.93 295.145 0 300 0 c 372 0 l 375.184 0
 378.234 1.266 380.484 3.516 c 382.734 5.766 384 8.816 384 12 c 384 84 l
 384.008 88.859 381.086 93.246 376.594 95.105 c 372.105 96.969 366.938 95.938
 363.504 92.496 c 336 64.969 l 311.855 89.113 l 317.52 95.066 322.414 101.855
 326.254 109.395 c 339.742 135.699 340.293 169.801 321.141 207.602 c 302.109
 245.113 263.66 286.512 198.621 329.523 c 192 333.887 l 185.375 329.52 l
 162.656 314.703 141.113 298.16 120.938 280.031 c 108 292.992 l 108 336 
l 108.004 339.184 106.746 342.242 104.496 344.496 c h
137.93 263.039 m 154.949 278.285 173.02 292.32 192 305.039 c 250.945 265.055
 283.848 228.07 299.734 196.75 c 316.031 164.59 314.301 138.672 304.895 
120.309 c 285.285 82.027 230.805 71.012 200.59 102.043 c 192 110.879 l 183.406
 102.047 l 153.191 71.016 98.688 82.031 79.102 120.312 c 69.695 138.695 
67.965 164.594 84.262 196.754 c 92.016 212.02 103.82 228.676 120.719 246.312
 c 165.504 201.504 l 170.195 196.812 177.805 196.812 182.496 201.504 c 187.188
 206.195 187.188 213.805 182.496 218.496 c h
137.93 263.039 m f*
Q Q
showpage
%%Trailer
%%EOF
