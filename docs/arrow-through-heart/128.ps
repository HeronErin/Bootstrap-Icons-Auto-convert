%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
17.125 95.125 m 16.266 95.984 14.973 96.242 13.852 95.777 c 12.73 95.312
 11.996 94.215 12 93 c 12 84 l 3 84 l 1.785 84.004 0.688 83.27 0.223 82.148
 c -0.242 81.027 0.016 79.734 0.875 78.875 c 9.875 69.875 l 10.441 69.312
 11.203 69 12 69 c 22.758 69 l 25.938 65.82 l 21.312 61.008 17.969 56.34
 15.715 51.898 c 10.926 42.449 11.066 33.922 14.438 27.348 c 20.555 15.391
 37.078 10.855 48 19.398 c 55.5 13.52 65.664 13.832 73.273 18.488 c 79.754
 12 l 72.883 5.125 l 72.023 4.266 71.766 2.977 72.227 1.855 c 72.691 0.73
 73.785 0 75 0 c 93 0 l 93.797 0 94.559 0.316 95.121 0.879 c 95.684 1.441
 96 2.203 96 3 c 96 21 l 96.004 22.215 95.27 23.312 94.148 23.777 c 93.027
 24.242 91.734 23.984 90.875 23.125 c 84 16.242 l 77.965 22.277 l 79.379
 23.766 80.605 25.465 81.566 27.348 c 84.938 33.922 85.078 42.449 80.289
 51.898 c 75.531 61.277 65.918 71.625 49.66 82.379 c 48 83.473 l 46.344 
82.379 l 40.664 78.676 35.277 74.539 30.234 70.008 c 27 73.246 l 27 84 l
 27 84.797 26.688 85.559 26.125 86.125 c h
34.484 65.762 m 34.48 65.762 l 38.738 69.57 43.254 73.078 48 76.262 c 62.734
 66.266 70.961 57.02 74.934 49.191 c 79.008 41.152 78.574 34.672 76.223 
30.082 c 71.32 20.512 57.699 17.758 50.148 25.516 c 48 27.719 l 45.852 25.512
 l 38.297 17.754 24.672 20.508 19.777 30.078 c 17.426 34.676 16.992 41.148
 21.066 49.188 c 23.004 53.004 25.957 57.168 30.18 61.578 c 41.375 50.375
 l 42.551 49.203 44.449 49.203 45.625 50.375 c 46.797 51.551 46.797 53.449
 45.625 54.625 c h
34.484 65.762 m f*
Q Q
showpage
%%Trailer
%%EOF
