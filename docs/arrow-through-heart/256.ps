%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
34.246 190.246 m 32.531 191.969 29.949 192.484 27.703 191.555 c 25.457 
190.621 23.996 188.43 24 186 c 24 168 l 6 168 l 3.57 168.004 1.379 166.543
 0.445 164.297 c -0.484 162.051 0.031 159.469 1.754 157.754 c 19.754 139.754
 l 20.879 138.629 22.406 137.996 24 138 c 45.516 138 l 51.875 131.641 l 
42.621 122.016 35.938 112.68 31.426 103.801 c 21.852 84.902 22.125 67.848
 28.871 54.695 c 41.113 30.781 74.16 21.707 96 38.797 c 111 27.035 131.328
 27.66 146.543 36.973 c 159.504 24 l 145.766 10.246 l 144.047 8.535 143.527
 5.953 144.457 3.707 c 145.383 1.465 147.57 0 150 0 c 186 0 l 187.59 0 189.117
 0.633 190.242 1.758 c 191.367 2.883 192 4.41 192 6 c 192 42 l 192.004 44.43
 190.543 46.621 188.297 47.555 c 186.051 48.484 183.469 47.969 181.754 46.246
 c 168 32.484 l 155.93 44.555 l 158.762 47.531 161.211 50.926 163.129 54.695
 c 169.871 67.848 170.148 84.898 160.574 103.801 c 151.059 122.559 131.836
 143.258 99.312 164.762 c 96 166.945 l 92.688 164.762 l 81.328 157.352 70.555
 149.078 60.469 140.016 c 54 146.496 l 54 168 l 54.004 169.594 53.371 171.121
 52.246 172.246 c h
68.961 131.52 m 68.965 131.52 l 77.477 139.141 86.508 146.16 96 152.52 
c 125.473 132.527 141.926 114.035 149.867 98.375 c 158.016 82.297 157.152
 69.336 152.445 60.156 c 142.641 41.016 115.402 35.508 100.293 51.023 c 
96 55.441 l 91.703 51.027 l 76.594 35.512 49.344 41.02 39.551 60.16 c 34.848
 69.352 33.984 82.301 42.129 98.379 c 46.004 106.012 51.91 114.34 60.355
 123.16 c 82.746 100.758 l 82.754 100.754 l 85.098 98.406 88.902 98.406 
91.246 100.754 c 93.594 103.098 93.594 106.902 91.246 109.246 c h
68.961 131.52 m f*
Q Q
showpage
%%Trailer
%%EOF
