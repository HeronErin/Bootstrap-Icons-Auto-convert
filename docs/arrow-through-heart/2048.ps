%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
273.984 1521.984 m 264.98 1531.008 252.758 1536.082 240.012 1536.086 c 
227.266 1536.09 215.039 1531.023 206.031 1522 c 197.027 1512.98 191.977 
1500.746 192 1488 c 192 1344 l 48 1344 l 35.254 1344.023 23.02 1338.973 
14 1329.969 c 4.977 1320.961 -0.09 1308.734 -0.086 1295.988 c -0.082 1283.242
 4.992 1271.02 14.016 1262.016 c 158.016 1118.016 l 167.035 1109.02 179.262
 1103.977 192 1104 c 364.129 1104 l 415.008 1053.121 l 340.992 976.129 287.52
 901.441 251.422 830.402 c 174.812 679.203 177.023 542.785 230.973 437.57
 c 328.895 246.238 593.281 173.664 768 310.367 c 888 216.289 1050.625 221.277
 1172.352 295.773 c 1276.031 192 l 1166.113 81.984 l 1157.094 72.988 1152.023
 60.781 1152.012 48.043 c 1152 35.309 1157.051 23.09 1166.051 14.078 c 1175.051
 5.066 1187.266 0.004 1200 0 c 1488 0 l 1500.73 0 1512.938 5.059 1521.941
 14.059 c 1530.941 23.062 1536 35.27 1536 48 c 1536 336 l 1536.023 348.746
 1530.973 360.98 1521.969 370 c 1512.961 379.023 1500.734 384.09 1487.988
 384.086 c 1475.242 384.082 1463.02 379.008 1454.016 369.984 c 1344 259.871
 l 1247.426 356.445 l 1270.082 380.254 1289.664 407.422 1305.027 437.566
 c 1358.98 542.781 1361.188 679.199 1284.578 830.398 c 1208.449 980.445 
1054.656 1146.047 794.5 1318.078 c 768 1335.551 l 741.504 1318.078 l 650.629
 1258.816 564.453 1192.633 483.742 1120.129 c 432 1171.969 l 432 1344 l 
432.023 1356.738 426.98 1368.965 417.984 1377.984 c h
551.711 1052.16 m 619.801 1113.137 692.07 1169.277 768 1220.16 c 1003.777
 1060.223 1135.391 912.289 1198.945 787.008 c 1264.129 658.367 1257.219 
554.688 1219.586 481.246 c 1141.152 328.125 923.234 284.062 802.371 408.191
 c 768 443.52 l 733.633 408.191 l 612.77 284.062 394.754 328.129 316.418
 481.246 c 278.785 554.781 271.875 658.367 337.059 787.008 c 368.066 848.062
 415.297 914.688 482.883 985.246 c 662.02 806.016 l 662.016 806.016 l 674.156
 793.875 691.855 789.133 708.438 793.578 c 725.023 798.02 737.98 810.977
 742.422 827.562 c 746.867 844.145 742.125 861.844 729.984 873.984 c h
551.711 1052.16 m f*
Q Q
showpage
%%Trailer
%%EOF
