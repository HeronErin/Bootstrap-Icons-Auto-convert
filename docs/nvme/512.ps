%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 96 384 288
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 96 384 288
384 384 cairo_set_page_size
%%EndPageSetup
q 0 96 384 192 rectclip
1 0 0 -1 0 384 cm q
0 g
36 108 m 36 101.371 41.371 96 48 96 c 372 96 l 375.184 96 378.234 97.266
 380.484 99.516 c 382.734 101.766 384 104.816 384 108 c 384 168 l 384 171.184
 382.734 174.234 380.484 176.484 c 378.234 178.734 375.184 180 372 180 c
 365.371 180 360 185.371 360 192 c 360 198.629 365.371 204 372 204 c 375.184
 204 378.234 205.266 380.484 207.516 c 382.734 209.766 384 212.816 384 216
 c 384 276 l 384 279.184 382.734 282.234 380.484 284.484 c 378.234 286.734
 375.184 288 372 288 c 48 288 l 41.371 288 36 282.629 36 276 c 12 276 l 
5.371 276 0 270.629 0 264 c 0 180 l 0 173.371 5.371 168 12 168 c 36 168 
l 39.312 168 42 165.312 42 162 c 42 158.688 39.312 156 36 156 c 12 156 l
 5.371 156 0 150.629 0 144 c 0 120 l 0 113.371 5.371 108 12 108 c h
60 120 m 60 123.184 58.734 126.234 56.484 128.484 c 54.234 130.734 51.184
 132 48 132 c 36 132 l 46.719 132 56.621 137.719 61.98 147 c 67.34 156.281
 67.34 167.719 61.98 177 c 56.621 186.281 46.719 192 36 192 c 24 192 l 24
 252 l 48 252 l 51.184 252 54.234 253.266 56.484 255.516 c 58.734 257.766
 60 260.816 60 264 c 360 264 l 360 225.961 l 350.566 222.641 342.938 215.547
 338.941 206.379 c 334.949 197.207 334.949 186.793 338.941 177.621 c 342.938
 168.453 350.566 161.359 360 158.039 c 360 120 l h
60 120 m f
96 156 m 96 149.371 101.371 144 108 144 c 156 144 l 159.184 144 162.234
 145.266 164.484 147.516 c 166.734 149.766 168 152.816 168 156 c 168 228
 l 168 231.184 166.734 234.234 164.484 236.484 c 162.234 238.734 159.184
 240 156 240 c 108 240 l 101.371 240 96 234.629 96 228 c h
120 168 m 120 216 l 144 216 l 144 168 l h
192 156 m 192 149.371 197.371 144 204 144 c 300 144 l 303.184 144 306.234
 145.266 308.484 147.516 c 310.734 149.766 312 152.816 312 156 c 312 228
 l 312 231.184 310.734 234.234 308.484 236.484 c 306.234 238.734 303.184
 240 300 240 c 204 240 l 197.371 240 192 234.629 192 228 c h
216 168 m 216 216 l 288 216 l 288 168 l h
216 168 m f
Q Q
showpage
%%Trailer
%%EOF
