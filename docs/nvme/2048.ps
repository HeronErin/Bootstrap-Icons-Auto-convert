%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 384 1536 1152
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 384 1536 1152
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 384 1536 768 rectclip
1 0 0 -1 0 1536 cm q
0 g
144 432 m 144 419.27 149.059 407.062 158.059 398.059 c 167.062 389.059 
179.27 384 192 384 c 1488 384 l 1500.73 384 1512.938 389.059 1521.941 398.059
 c 1530.941 407.062 1536 419.27 1536 432 c 1536 672 l 1536 684.73 1530.941
 696.938 1521.941 705.941 c 1512.938 714.941 1500.73 720 1488 720 c 1470.852
 720 1455.004 729.148 1446.43 744 c 1437.855 758.852 1437.855 777.148 1446.43
 792 c 1455.004 806.852 1470.852 816 1488 816 c 1500.73 816 1512.938 821.059
 1521.941 830.059 c 1530.941 839.062 1536 851.27 1536 864 c 1536 1104 l 
1536 1116.73 1530.941 1128.938 1521.941 1137.941 c 1512.938 1146.941 1500.73
 1152 1488 1152 c 192 1152 l 179.27 1152 167.062 1146.941 158.059 1137.941
 c 149.059 1128.938 144 1116.73 144 1104 c 48 1104 l 35.27 1104 23.062 1098.941
 14.059 1089.941 c 5.059 1080.938 0 1068.73 0 1056 c 0 720 l 0 707.27 5.059
 695.062 14.059 686.059 c 23.062 677.059 35.27 672 48 672 c 144 672 l 152.574
 672 160.496 667.426 164.785 660 c 169.07 652.574 169.07 643.426 164.785
 636 c 160.496 628.574 152.574 624 144 624 c 48 624 l 35.27 624 23.062 618.941
 14.059 609.941 c 5.059 600.938 0 588.73 0 576 c 0 480 l 0 467.27 5.059 
455.062 14.059 446.059 c 23.062 437.059 35.27 432 48 432 c h
240 480 m 240 492.73 234.941 504.938 225.941 513.941 c 216.938 522.941 
204.73 528 192 528 c 144 528 l 186.871 528 226.488 550.871 247.922 588 c
 269.359 625.129 269.359 670.871 247.922 708 c 226.488 745.129 186.871 768
 144 768 c 96 768 l 96 1008 l 192 1008 l 204.73 1008 216.938 1013.059 225.941
 1022.059 c 234.941 1031.062 240 1043.27 240 1056 c 1440 1056 l 1440 903.84
 l 1402.262 890.562 1371.746 862.188 1355.77 825.512 c 1339.793 788.836 
1339.793 747.164 1355.77 710.488 c 1371.746 673.812 1402.262 645.438 1440
 632.16 c 1440 480 l h
240 480 m f
384 624 m 384 611.27 389.059 599.062 398.059 590.059 c 407.062 581.059 
419.27 576 432 576 c 624 576 l 636.73 576 648.938 581.059 657.941 590.059
 c 666.941 599.062 672 611.27 672 624 c 672 912 l 672 924.73 666.941 936.938
 657.941 945.941 c 648.938 954.941 636.73 960 624 960 c 432 960 l 419.27
 960 407.062 954.941 398.059 945.941 c 389.059 936.938 384 924.73 384 912
 c h
480 672 m 480 864 l 576 864 l 576 672 l h
768 624 m 768 611.27 773.059 599.062 782.059 590.059 c 791.062 581.059 
803.27 576 816 576 c 1200 576 l 1212.73 576 1224.938 581.059 1233.941 590.059
 c 1242.941 599.062 1248 611.27 1248 624 c 1248 912 l 1248 924.73 1242.941
 936.938 1233.941 945.941 c 1224.938 954.941 1212.73 960 1200 960 c 816 
960 l 803.27 960 791.062 954.941 782.059 945.941 c 773.059 936.938 768 924.73
 768 912 c h
864 672 m 864 864 l 1152 864 l 1152 672 l h
864 672 m f
Q Q
showpage
%%Trailer
%%EOF
