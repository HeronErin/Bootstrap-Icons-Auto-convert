%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0 g
21 6.75 m 21 16.5 l 19.5 16.5 l 19.5 6.75 l 16.5 6.75 l 15.258 6.75 14.25
 5.742 14.25 4.5 c 14.25 1.5 l 6 1.5 l 5.172 1.5 4.5 2.172 4.5 3 c 4.5 16.5
 l 3 16.5 l 3 3 l 3 1.344 4.344 0 6 0 c 14.25 0 l h
10.742 21.281 m 10.742 20.5 l 10.754 20.168 10.695 19.84 10.566 19.539 
c 10.465 19.301 10.297 19.098 10.082 18.957 c 9.871 18.824 9.629 18.758 
9.379 18.762 c 9.129 18.758 8.887 18.828 8.672 18.957 c 8.461 19.102 8.293
 19.301 8.191 19.539 c 8.066 19.84 8.004 20.168 8.016 20.5 c 8.016 21.281
 l 8.016 21.664 8.074 21.984 8.191 22.242 c 8.293 22.48 8.461 22.684 8.672
 22.824 c 8.887 22.949 9.133 23.016 9.379 23.012 c 9.625 23.016 9.871 22.949
 10.082 22.824 c 10.297 22.684 10.465 22.48 10.566 22.246 c 10.691 21.941
 10.754 21.613 10.742 21.281 c 11.945 20.508 m 11.945 21.277 l 11.945 21.84
 11.844 22.328 11.637 22.738 c 11.445 23.133 11.137 23.461 10.754 23.676
 c 10.371 23.891 9.914 24 9.379 24 c 8.898 24.016 8.426 23.902 8 23.676 
c 7.617 23.461 7.309 23.133 7.117 22.738 c 6.902 22.281 6.797 21.781 6.809
 21.277 c 6.809 20.508 l 6.809 19.938 6.91 19.453 7.117 19.047 c 7.32 18.637
 7.617 18.324 8.004 18.105 c 8.391 17.887 8.852 17.777 9.383 17.777 c 9.918
 17.777 10.375 17.887 10.758 18.105 c 11.141 18.324 11.438 18.641 11.645
 19.051 c 11.848 19.457 11.949 19.941 11.949 20.508 c 1.5 23.887 m 1.5 17.887
 l 3.688 17.887 l 4.297 17.887 4.801 18.004 5.195 18.238 c 5.59 18.473 5.887
 18.812 6.078 19.258 c 6.273 19.703 6.371 20.238 6.371 20.867 c 6.371 21.5
 6.273 22.043 6.078 22.492 c 5.883 22.941 5.582 23.289 5.188 23.527 c 4.793
 23.766 4.293 23.883 3.688 23.883 c h
3.531 18.855 m 2.684 18.855 l 2.684 22.914 l 3.527 22.914 l 3.805 22.914
 4.047 22.875 4.25 22.793 c 4.254 22.793 l 4.453 22.715 4.625 22.586 4.754
 22.414 c 4.887 22.242 4.984 22.031 5.047 21.781 c 5.051 21.781 l 5.121 
21.492 5.156 21.195 5.152 20.895 c 5.152 20.445 5.094 20.066 4.977 19.766
 c 4.973 19.766 l 4.875 19.488 4.691 19.246 4.441 19.086 c 4.203 18.934 
3.898 18.859 3.527 18.859 c h
13.664 20.531 m 13.664 20.16 13.715 19.84 13.82 19.582 c 13.91 19.344 14.066
 19.133 14.27 18.984 c 14.48 18.84 14.73 18.77 14.984 18.777 c 15.211 18.777
 15.41 18.824 15.582 18.922 c 15.75 19.012 15.891 19.148 15.988 19.312 c
 16.094 19.484 16.156 19.684 16.172 19.883 c 17.32 19.883 l 17.32 19.773
 l 17.316 19.773 l 17.297 19.215 17.043 18.691 16.617 18.328 c 16.402 18.145
 16.152 18.004 15.883 17.922 c 15.59 17.82 15.285 17.77 14.973 17.773 c 
14.438 17.773 13.984 17.887 13.605 18.109 c 13.23 18.332 12.945 18.648 12.75
 19.059 c 12.555 19.469 12.453 19.957 12.453 20.527 c 12.453 21.273 l 12.453
 21.84 12.551 22.328 12.742 22.738 c 12.938 23.145 13.223 23.457 13.598 
23.68 c 13.973 23.895 14.43 24.004 14.969 24.004 c 15.41 24.004 15.801 23.922
 16.145 23.758 c 16.488 23.594 16.766 23.367 16.973 23.078 c 16.977 23.074
 l 17.184 22.777 17.305 22.426 17.316 22.062 c 17.316 21.949 l 16.168 21.949
 l 16.172 21.949 l 16.156 22.145 16.098 22.332 15.996 22.496 c 15.895 22.652
 15.754 22.781 15.586 22.867 c 15.398 22.957 15.191 23.004 14.984 23 c 14.73
 23.008 14.48 22.938 14.266 22.805 c 14.062 22.656 13.906 22.449 13.82 22.215
 c 13.711 21.914 13.656 21.594 13.664 21.273 c h
21.301 17.891 m 22.641 17.891 l 20.727 20.898 l 22.609 23.887 l 21.246 
23.887 l 19.973 21.766 l 19.922 21.766 l 18.645 23.887 l 17.352 23.887 l
 19.211 20.863 l 17.367 17.887 l 18.766 17.887 l 20.012 20.047 l 20.062 
20.047 l h
21.301 17.891 m f*
Q Q
showpage
%%Trailer
%%EOF
