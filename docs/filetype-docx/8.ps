%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
2.684 5.32 m 2.684 5.125 l 2.688 5.043 2.672 4.961 2.641 4.883 c 2.617 
4.824 2.574 4.773 2.52 4.738 c 2.469 4.707 2.406 4.691 2.344 4.691 c 2.281
 4.691 2.223 4.707 2.168 4.738 c 2.113 4.773 2.074 4.824 2.047 4.883 c 2.016
 4.961 2 5.043 2.004 5.125 c 2.004 5.32 l 2.004 5.418 2.02 5.496 2.047 5.562
 c 2.074 5.621 2.113 5.672 2.168 5.707 c 2.223 5.738 2.281 5.754 2.344 5.754
 c 2.406 5.754 2.469 5.738 2.52 5.707 c 2.574 5.672 2.617 5.621 2.641 5.562
 c 2.672 5.484 2.688 5.402 2.684 5.32 c 2.984 5.125 m 2.984 5.316 l 2.984
 5.457 2.957 5.578 2.906 5.68 c 2.91 5.684 l 2.859 5.781 2.785 5.863 2.688
 5.918 c 2.594 5.973 2.477 6 2.344 6 c 2.227 6.004 2.105 5.977 2 5.918 c
 1.906 5.863 1.828 5.781 1.777 5.684 c 1.727 5.57 1.699 5.445 1.703 5.32
 c 1.703 5.129 l 1.703 4.988 1.73 4.863 1.781 4.762 c 1.832 4.66 1.906 4.582
 2.004 4.527 c 2.102 4.473 2.215 4.445 2.348 4.445 c 2.48 4.445 2.598 4.473
 2.691 4.527 c 2.789 4.582 2.859 4.66 2.914 4.762 c 2.965 4.863 2.992 4.984
 2.992 5.125 c 0.375 5.973 m 0.375 4.473 l 0.922 4.473 l 1.074 4.473 1.199
 4.504 1.297 4.562 c 1.395 4.621 1.469 4.707 1.52 4.816 c 1.57 4.926 1.594
 5.062 1.594 5.219 c 1.594 5.379 1.57 5.512 1.52 5.625 c 1.469 5.738 1.395
 5.824 1.297 5.883 c 1.199 5.941 1.074 5.973 0.922 5.973 c h
0.883 4.715 m 0.672 4.715 l 0.672 5.73 l 0.883 5.73 l 0.953 5.73 1.012 
5.719 1.062 5.699 c 1.113 5.68 1.156 5.645 1.188 5.605 c 1.219 5.562 1.246
 5.512 1.262 5.445 c 1.281 5.375 1.289 5.297 1.289 5.223 c 1.289 5.109 1.273
 5.016 1.246 4.941 c 1.242 4.941 l 1.219 4.871 1.172 4.812 1.109 4.77 c 
1.051 4.73 0.973 4.711 0.879 4.711 c h
3.418 5.133 m 3.418 5.039 3.43 4.961 3.457 4.895 c 3.453 4.895 l 3.477 
4.836 3.516 4.785 3.566 4.746 c 3.621 4.711 3.684 4.691 3.746 4.695 c 3.801
 4.695 3.852 4.707 3.895 4.73 c 3.938 4.754 3.973 4.785 3.996 4.828 c 4.023
 4.871 4.039 4.922 4.043 4.973 c 4.328 4.973 l 4.328 4.945 l 4.324 4.805
 4.262 4.672 4.156 4.582 c 4.102 4.535 4.039 4.5 3.973 4.48 c 3.898 4.457
 3.82 4.441 3.742 4.445 c 3.609 4.445 3.496 4.473 3.402 4.527 c 3.309 4.582
 3.238 4.66 3.188 4.766 c 3.137 4.867 3.113 4.992 3.113 5.133 c 3.113 5.32
 l 3.113 5.461 3.137 5.586 3.188 5.688 c 3.234 5.789 3.309 5.867 3.402 5.922
 c 3.496 5.977 3.609 6.004 3.746 6.004 c 3.855 6.004 3.953 5.984 4.039 5.941
 c 4.125 5.902 4.195 5.844 4.246 5.77 c 4.297 5.695 4.324 5.605 4.328 5.516
 c 4.328 5.488 l 4.043 5.488 l 4.039 5.535 4.023 5.582 4 5.625 c 3.973 5.664
 3.938 5.695 3.895 5.719 c 3.848 5.738 3.797 5.75 3.746 5.75 c 3.684 5.75
 3.621 5.734 3.566 5.699 c 3.516 5.664 3.477 5.613 3.453 5.555 c 3.426 5.477
 3.414 5.398 3.418 5.316 c h
5.328 4.473 m 5.664 4.473 l 5.188 5.227 l 5.656 5.973 l 5.316 5.973 l 4.996
 5.441 l 4.984 5.441 l 4.664 5.973 l 4.34 5.973 l 4.805 5.219 l 4.344 4.477
 l 4.691 4.477 l 5.004 5.016 l 5.016 5.016 l h
5.328 4.473 m f*
Q Q
showpage
%%Trailer
%%EOF
