%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 725 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 725 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 677 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 528 l 624 528 l 624 216 l 528 216 l 508.906 216 490.59 208.414
 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c 456 48 l 192 48 l 
179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062 144 83.27 144 96
 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 124.117 28.117 c 
142.121 10.113 166.539 0 192 0 c 456 0 l h
343.727 681.023 m 343.727 655.969 l 344.133 645.426 342.215 634.922 338.113
 625.199 c 334.93 617.605 329.547 611.137 322.656 606.625 c 315.902 602.438
 308.086 600.285 300.145 600.434 c 292.168 600.309 284.32 602.477 277.535
 606.672 c 270.707 611.207 265.367 617.652 262.176 625.199 c 258.07 634.922
 256.156 645.426 256.559 655.969 c 256.559 681.023 l 256.559 693.312 258.43
 703.566 262.176 711.793 c 265.359 719.359 270.703 725.82 277.535 730.367
 c 284.371 734.426 292.195 736.52 300.145 736.414 c 308.059 736.5 315.848
 734.41 322.656 730.367 c 329.539 725.867 334.922 719.418 338.113 711.84
 c 342.148 702.082 344.062 691.578 343.727 681.023 c 382.27 656.254 m 382.27
 680.879 l 382.27 698.895 378.988 714.465 372.43 727.582 c 372.434 727.586
 l 366.219 740.211 356.375 750.691 344.16 757.68 c 331.969 764.59 317.297
 768.047 300.145 768.047 c 284.777 768.453 269.566 764.879 255.984 757.68
 c 243.75 750.715 233.898 740.227 227.711 727.586 c 220.828 713 217.457 
697.004 217.871 680.879 c 217.871 656.254 l 217.871 638.047 221.152 622.445
 227.711 609.453 c 234.27 596.301 243.711 586.27 256.031 579.355 c 268.383
 572.316 283.102 568.797 300.191 568.797 c 317.312 568.797 331.969 572.316
 344.16 579.355 c 356.418 586.363 365.855 596.445 372.48 609.594 c 379.008
 622.586 382.273 638.137 382.273 656.25 c 48 764.398 m 48 572.445 l 118.031
 572.445 l 137.52 572.445 153.598 576.207 166.27 583.727 c 178.941 591.184
 188.367 602.062 194.543 616.367 c 200.816 630.605 203.949 647.793 203.949
 667.918 c 203.949 688.207 200.812 705.551 194.543 719.949 c 188.238 734.383
 178.719 745.406 165.984 753.02 c 153.312 760.605 137.328 764.395 118.031
 764.395 c h
112.992 603.406 m 85.922 603.406 l 85.922 733.344 l 112.945 733.344 l 121.809
 733.344 129.539 732.031 136.129 729.406 c 142.449 726.871 147.984 722.695
 152.16 717.312 c 156.383 711.871 159.52 705.121 161.566 697.055 c 163.883
 687.766 164.98 678.215 164.832 668.641 c 164.832 654.242 162.945 642.191
 159.168 632.496 c 156.043 623.566 150.074 615.91 142.176 610.703 c 134.59
 605.84 124.832 603.406 112.895 603.406 c h
437.281 656.973 m 437.281 645.035 438.93 634.91 442.227 626.59 c 442.223
 626.594 l 445.07 618.949 450.094 612.309 456.672 607.488 c 463.383 602.926
 471.363 600.609 479.473 600.863 c 486.672 600.863 493.039 602.414 498.578
 605.52 c 498.574 605.52 l 504.004 608.402 508.535 612.719 511.68 618 c 
515.027 623.551 517 629.82 517.441 636.289 c 554.16 636.289 l 554.16 632.785
 l 553.516 614.906 545.402 598.121 531.793 586.512 c 524.91 580.621 516.91
 576.18 508.273 573.457 c 498.914 570.25 489.074 568.676 479.184 568.801
 c 462.094 568.801 447.52 572.367 435.457 579.504 c 423.457 586.609 414.32
 596.734 408.051 609.887 c 401.746 623.008 398.594 638.656 398.594 656.832
 c 398.594 680.734 l 398.594 698.91 401.699 714.527 407.906 727.582 c 414.145
 740.574 423.281 750.605 435.312 757.68 c 447.312 764.59 461.938 768.047
 479.184 768.047 c 493.262 768.047 505.824 765.422 516.863 760.176 c 527.902
 754.93 536.719 747.664 543.312 738.383 c 549.934 728.852 553.699 717.629
 554.16 706.031 c 554.16 702.383 l 517.441 702.383 l 517.008 708.578 515.082
 714.57 511.824 719.855 c 508.598 724.926 504.074 729.035 498.719 731.762
 c 492.715 734.633 486.129 736.078 479.473 735.984 c 471.371 736.215 463.383
 734.023 456.527 729.695 c 449.957 725.004 444.969 718.426 442.223 710.832
 c 438.699 701.199 437.023 690.988 437.281 680.734 c h
681.695 572.492 m 724.605 572.492 l 663.406 668.781 l 723.598 764.398 l
 680.012 764.398 l 639.211 696.477 l 637.531 696.477 l 596.637 764.398 l
 555.262 764.398 l 614.781 667.68 l 555.836 572.449 l 600.57 572.449 l 640.508
 641.52 l 642.188 641.52 l h
681.695 572.492 m f*
Q Q
showpage
%%Trailer
%%EOF
