%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1450 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1450 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1354 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1056 l 1248 1056 l 1248 432 l 1056 432 l 1017.809 432 981.184
 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288 c 912 96 
l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113 142.121 
288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078 212.227
 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 l h
687.457 1362.047 m 687.457 1311.934 l 687.457 1311.938 l 688.266 1290.848
 684.434 1269.84 676.223 1250.398 c 669.855 1235.211 659.09 1222.27 645.312
 1213.246 c 631.809 1204.875 616.176 1200.574 600.289 1200.863 c 584.332
 1200.621 568.641 1204.949 555.07 1213.344 c 541.418 1222.414 530.734 1235.301
 524.352 1250.398 c 516.145 1269.84 512.309 1290.848 513.121 1311.938 c 
513.121 1362.051 l 513.121 1386.625 516.863 1407.141 524.352 1423.586 c 
530.719 1438.719 541.402 1451.641 555.07 1460.734 c 568.742 1468.852 584.391
 1473.035 600.289 1472.832 c 616.121 1473 631.695 1468.816 645.312 1460.734
 c 659.078 1451.738 669.84 1438.836 676.223 1423.68 c 684.301 1404.164 688.129
 1383.156 687.457 1362.047 c 764.547 1312.512 m 764.547 1361.758 l 764.547
 1397.789 757.988 1428.926 744.867 1455.164 c 744.863 1455.168 l 732.441
 1480.422 712.75 1501.383 688.32 1515.359 c 663.938 1529.184 634.594 1536.094
 600.289 1536.094 c 600.289 1536.098 l 569.555 1536.902 539.133 1529.762
 511.969 1515.359 c 487.504 1501.43 467.801 1480.457 455.426 1455.168 c 
441.656 1425.996 434.914 1394.008 435.742 1361.762 c 435.742 1312.516 l 
435.742 1276.102 442.301 1244.898 455.422 1218.914 c 468.543 1192.609 487.422
 1172.547 512.062 1158.723 c 536.766 1144.645 566.207 1137.602 600.383 1137.602
 c 634.621 1137.602 663.934 1144.641 688.32 1158.723 c 712.832 1172.738 
731.711 1192.898 744.961 1219.203 c 758.016 1245.188 764.547 1276.293 764.547
 1312.516 c 96 1528.801 m 96 1144.898 l 236.062 1144.898 l 275.039 1144.898
 307.199 1152.418 332.543 1167.457 c 357.887 1182.367 376.734 1204.129 389.086
 1232.738 c 401.629 1261.219 407.902 1295.586 407.902 1335.844 c 407.902
 1376.418 401.629 1411.109 389.086 1439.906 c 376.477 1468.77 357.438 1490.816
 331.965 1506.051 c 306.621 1521.219 274.652 1528.805 236.062 1528.805 c
 h
225.984 1206.816 m 171.84 1206.816 l 171.84 1466.688 l 225.887 1466.688
 l 243.613 1466.688 259.07 1464.062 272.254 1458.816 c 272.258 1458.816 
l 284.902 1453.738 295.969 1445.391 304.32 1434.625 c 312.77 1423.746 319.039
 1410.242 323.137 1394.113 c 327.766 1375.531 329.961 1356.426 329.664 1337.281
 c 329.664 1308.48 325.887 1284.387 318.336 1264.992 c 312.086 1247.137 
300.145 1231.824 284.352 1221.406 c 269.184 1211.68 249.664 1206.812 225.793
 1206.812 c h
874.559 1313.953 m 874.559 1290.082 877.855 1269.824 884.445 1253.184 c
 884.449 1253.184 l 890.141 1237.898 900.188 1224.617 913.344 1214.977 c
 926.762 1205.855 942.727 1201.215 958.945 1201.727 c 973.344 1201.727 986.082
 1204.832 997.152 1211.039 c 1008.008 1216.809 1017.07 1225.441 1023.359
 1236 c 1030.051 1247.105 1034 1259.641 1034.879 1272.574 c 1108.32 1272.574
 l 1108.32 1265.566 l 1107.031 1229.816 1090.805 1196.242 1063.586 1173.023
 c 1049.824 1161.238 1033.824 1152.355 1016.543 1146.91 c 997.828 1140.5
 978.148 1137.352 958.367 1137.602 c 924.191 1137.602 895.039 1144.738 870.91
 1159.008 c 846.91 1173.215 828.637 1193.473 816.094 1219.777 c 803.484 
1246.016 797.184 1277.312 797.184 1313.664 c 797.184 1361.473 l 797.184 
1397.824 803.391 1429.059 815.809 1455.168 c 828.289 1481.152 846.562 1501.215
 870.625 1515.359 c 894.625 1529.184 923.871 1536.094 958.367 1536.094 c
 986.527 1536.094 1011.648 1530.848 1033.727 1520.352 c 1055.805 1509.855
 1073.438 1495.328 1086.621 1476.766 c 1086.625 1476.77 l 1099.867 1457.703
 1107.395 1435.258 1108.32 1412.062 c 1108.32 1404.766 l 1034.879 1404.766
 l 1034.879 1404.77 l 1034.016 1417.152 1030.16 1429.145 1023.648 1439.711
 c 1017.199 1449.848 1008.148 1458.07 997.441 1463.52 c 985.43 1469.266 
972.254 1472.156 958.945 1471.969 c 942.738 1472.426 926.762 1468.051 913.055
 1459.391 c 899.918 1450.004 889.941 1436.848 884.449 1421.664 c 877.398
 1402.398 874.043 1381.98 874.559 1361.473 c h
1363.391 1144.992 m 1449.215 1144.992 l 1326.816 1337.566 l 1447.199 1528.797
 l 1360.031 1528.797 l 1278.43 1392.957 l 1275.07 1392.957 l 1193.277 1528.797
 l 1110.523 1528.797 l 1229.562 1335.355 l 1111.676 1144.891 l 1201.148 
1144.891 l 1281.02 1283.035 l 1284.379 1283.035 l h
1363.391 1144.992 m f*
Q Q
showpage
%%Trailer
%%EOF
