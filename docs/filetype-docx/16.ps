%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 8.25 l 9.75 8.25 l 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
5.371 10.641 m 5.371 10.25 l 5.379 10.086 5.348 9.922 5.281 9.77 c 5.234
 9.648 5.148 9.551 5.043 9.477 c 4.938 9.414 4.812 9.379 4.691 9.383 c 4.566
 9.379 4.441 9.414 4.336 9.48 c 4.23 9.551 4.145 9.652 4.098 9.77 c 4.031
 9.922 4.004 10.086 4.008 10.25 c 4.008 10.641 l 4.008 10.832 4.035 10.992
 4.094 11.121 c 4.098 11.121 l 4.145 11.238 4.23 11.34 4.336 11.41 c 4.441
 11.477 4.566 11.508 4.691 11.508 c 4.812 11.508 4.934 11.477 5.043 11.41
 c 5.148 11.34 5.234 11.242 5.281 11.121 c 5.348 10.969 5.375 10.805 5.371
 10.641 c 5.973 10.254 m 5.973 10.637 l 5.973 10.918 5.922 11.16 5.82 11.367
 c 5.723 11.566 5.566 11.73 5.379 11.84 c 5.188 11.949 4.961 12 4.691 12
 c 4.449 12.008 4.211 11.953 4 11.84 c 3.809 11.73 3.656 11.566 3.559 11.367
 c 3.449 11.141 3.398 10.891 3.402 10.641 c 3.402 10.258 l 3.402 9.973 3.453
 9.73 3.555 9.527 c 3.656 9.32 3.805 9.164 3.996 9.059 c 4.188 8.949 4.418
 8.895 4.688 8.895 c 4.953 8.895 5.184 8.949 5.375 9.059 c 5.566 9.168 5.715
 9.324 5.816 9.531 c 5.918 9.734 5.969 9.977 5.969 10.262 c 0.75 11.945 
m 0.75 8.945 l 1.844 8.945 l 2.148 8.945 2.398 9.004 2.598 9.121 c 2.797
 9.238 2.941 9.406 3.039 9.633 c 3.137 9.855 3.188 10.125 3.188 10.438 c
 3.188 10.754 3.137 11.027 3.039 11.25 c 2.941 11.477 2.793 11.648 2.594
 11.766 c 2.395 11.883 2.145 11.945 1.844 11.945 c h
1.766 9.43 m 1.344 9.43 l 1.344 11.461 l 1.766 11.461 l 1.902 11.461 2.023
 11.441 2.129 11.398 c 2.227 11.355 2.312 11.293 2.379 11.207 c 2.445 11.121
 2.492 11.016 2.527 10.891 c 2.523 10.891 l 2.562 10.746 2.578 10.598 2.574
 10.449 c 2.574 10.223 2.543 10.035 2.484 9.883 c 2.488 9.883 l 2.438 9.742
 2.344 9.625 2.223 9.543 c 2.105 9.469 1.953 9.43 1.766 9.43 c h
6.832 10.266 m 6.832 10.078 6.859 9.922 6.91 9.789 c 6.953 9.672 7.031 
9.566 7.137 9.492 c 7.242 9.422 7.363 9.383 7.492 9.387 c 7.605 9.387 7.703
 9.41 7.789 9.461 c 7.875 9.508 7.945 9.574 7.996 9.656 c 8.047 9.742 8.078
 9.84 8.086 9.941 c 8.66 9.941 l 8.66 9.887 l 8.648 9.609 8.523 9.344 8.309
 9.164 c 8.203 9.07 8.078 9.004 7.941 8.961 c 7.797 8.91 7.641 8.887 7.488
 8.887 c 7.223 8.887 6.992 8.941 6.805 9.055 c 6.617 9.164 6.473 9.324 6.375
 9.531 c 6.277 9.734 6.227 9.98 6.227 10.266 c 6.227 10.641 l 6.227 10.926
 6.273 11.168 6.371 11.371 c 6.469 11.574 6.613 11.73 6.801 11.84 c 6.988
 11.949 7.215 12 7.484 12 c 7.703 12 7.902 11.961 8.074 11.879 c 8.246 11.797
 8.383 11.684 8.488 11.539 c 8.594 11.387 8.652 11.215 8.66 11.031 c 8.66
 10.973 l 8.086 10.973 l 8.086 10.977 l 8.078 11.07 8.047 11.164 7.996 11.246
 c 7.945 11.328 7.875 11.391 7.793 11.434 c 7.699 11.48 7.598 11.5 7.492
 11.5 c 7.363 11.504 7.242 11.469 7.133 11.402 c 7.031 11.328 6.953 11.227
 6.91 11.105 c 6.855 10.957 6.828 10.797 6.832 10.637 c h
10.652 8.945 m 11.324 8.945 l 10.367 10.449 l 11.309 11.941 l 10.629 11.941
 l 9.992 10.879 l 9.965 10.879 l 9.324 11.941 l 8.676 11.941 l 9.605 10.43
 l 8.684 8.941 l 9.383 8.941 l 10.008 10.02 l 10.035 10.02 l h
10.652 8.945 m f*
Q Q
showpage
%%Trailer
%%EOF
