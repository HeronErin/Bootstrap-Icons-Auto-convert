%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1440 m 589.773 1440 418.848 1369.199 292.824 1243.176 c 166.801 1117.152
 96 946.227 96 768 c 96 589.773 166.801 418.848 292.824 292.824 c 418.848
 166.801 589.773 96 768 96 c 946.227 96 1117.152 166.801 1243.176 292.824
 c 1369.199 418.848 1440 589.773 1440 768 c 1440 946.227 1369.199 1117.152
 1243.176 1243.176 c 1117.152 1369.199 946.227 1440 768 1440 c 768 1536 
m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 1167.031 1536
 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 224.941 c 1167.031
 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941 224.941 c 80.914
 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 
368.969 1455.086 564.312 1536 768 1536 c f
960 768 m 960 818.922 939.773 867.758 903.766 903.766 c 867.758 939.773
 818.922 960 768 960 c 717.078 960 668.242 939.773 632.234 903.766 c 596.227
 867.758 576 818.922 576 768 c 576 717.078 596.227 668.242 632.234 632.234
 c 668.242 596.227 717.078 576 768 576 c 818.922 576 867.758 596.227 903.766
 632.234 c 939.773 668.242 960 717.078 960 768 c 768 384 m 666.156 384 568.484
 424.457 496.473 496.473 c 424.457 568.484 384 666.156 384 768 c 384 785.148
 374.852 800.996 360 809.57 c 345.148 818.145 326.852 818.145 312 809.57
 c 297.148 800.996 288 785.148 288 768 c 288 640.695 338.57 518.605 428.59
 428.59 c 518.605 338.57 640.695 288 768 288 c 785.148 288 800.996 297.148
 809.57 312 c 818.145 326.852 818.145 345.148 809.57 360 c 800.996 374.852
 785.148 384 768 384 c 1200 720 m 1212.73 720 1224.938 725.059 1233.941 
734.059 c 1242.941 743.062 1248 755.27 1248 768 c 1248 852.258 1225.82 935.031
 1183.691 1008 c 1141.562 1080.969 1080.969 1141.562 1008 1183.691 c 935.031
 1225.82 852.258 1248 768 1248 c 750.852 1248 735.004 1238.852 726.43 1224
 c 717.855 1209.148 717.855 1190.852 726.43 1176 c 735.004 1161.148 750.852
 1152 768 1152 c 835.406 1152 901.625 1134.258 960 1100.555 c 1018.375 1066.852
 1066.852 1018.375 1100.555 960 c 1134.258 901.625 1152 835.406 1152 768
 c 1152 755.27 1157.059 743.062 1166.059 734.059 c 1175.062 725.059 1187.27
 720 1200 720 c f
Q Q
showpage
%%Trailer
%%EOF
