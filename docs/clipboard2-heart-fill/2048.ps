%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 201 0 1354 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 201 0 1354 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 201 0 1153 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
965.566 48.098 m 965.594 35.348 960.547 23.117 951.543 14.094 c 942.539
 5.07 930.316 0 917.566 0 c 631.488 0 l 604.992 0 583.488 21.602 583.488
 48.098 c 583.465 60.742 578.449 72.871 569.531 81.84 c 560.617 90.809 548.52
 95.898 535.871 96 c 523.219 96 511.082 101.027 502.133 109.973 c 493.188
 118.922 488.16 131.059 488.16 143.711 c 488.16 192 l 488.16 204.73 493.219
 216.938 502.219 225.941 c 511.219 234.941 523.43 240 536.16 240 c 1013.09
 240 l 1025.82 240 1038.027 234.941 1047.027 225.941 c 1056.031 216.938 
1061.09 204.73 1061.09 192 c 1061.09 143.711 l 1061.09 131.043 1056.047 
118.891 1047.078 109.941 c 1038.109 100.988 1025.949 95.973 1013.281 96 
c 1000.617 95.926 988.496 90.848 979.559 81.875 c 970.621 72.902 965.594
 60.762 965.566 48.098 c f*
400.703 96 m 345.984 96 l 307.793 96 271.164 111.172 244.16 138.176 c 217.156
 165.184 201.984 201.809 201.984 240 c 201.984 1392 l 201.984 1430.191 217.156
 1466.816 244.16 1493.824 c 271.164 1520.828 307.793 1536 345.984 1536 c
 1209.984 1536 l 1248.176 1536 1284.801 1520.828 1311.809 1493.824 c 1338.812
 1466.816 1353.984 1430.191 1353.984 1392 c 1353.984 240 l 1353.984 201.809
 1338.812 165.184 1311.809 138.176 c 1284.801 111.172 1248.176 96 1209.984
 96 c 1148.352 96 l 1153.727 111.105 1156.449 127.105 1156.512 144 c 1156.512
 192 l 1156.512 271.488 1092.383 336 1013.281 336 c 535.777 336 l 497.703
 335.871 461.238 320.633 434.398 293.629 c 407.559 266.629 392.539 230.074
 392.641 192 c 392.641 144 l 392.703 127.105 395.426 111.105 400.801 96 
c h
774.527 622.273 m 933.504 461.664 1330.848 742.656 774.527 1104 c 218.207
 742.656 615.551 461.762 774.527 622.273 c f*
Q Q
showpage
%%Trailer
%%EOF
