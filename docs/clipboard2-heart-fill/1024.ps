%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 100 0 677 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 100 0 677 768
768 768 cairo_set_page_size
%%EndPageSetup
q 100 0 577 768 rectclip
1 0 0 -1 0 768 cm q
0 g
482.785 24.047 m 482.797 17.676 480.273 11.559 475.773 7.047 c 471.27 2.535
 465.156 0 458.785 0 c 315.746 0 l 302.5 0 291.746 10.801 291.746 24.047
 c 291.742 24.047 l 291.73 30.371 289.223 36.434 284.766 40.922 c 280.309
 45.406 274.258 47.949 267.938 48 c 261.609 48 255.543 50.512 251.066 54.988
 c 246.594 59.461 244.078 65.527 244.078 71.855 c 244.078 96 l 244.078 102.363
 246.609 108.469 251.109 112.969 c 255.609 117.473 261.715 120 268.078 120
 c 506.543 120 l 512.91 120 519.016 117.473 523.516 112.969 c 528.016 108.469
 530.543 102.363 530.543 96 c 530.543 71.855 l 530.543 65.52 528.023 59.445
 523.539 54.969 c 519.055 50.496 512.977 47.988 506.641 48 c 500.309 47.961
 494.246 45.422 489.781 40.938 c 485.312 36.449 482.797 30.379 482.785 24.047
 c f*
200.352 48 m 172.992 48 l 153.895 48 135.582 55.586 122.082 69.09 c 108.578
 82.59 100.992 100.906 100.992 120 c 100.992 696 l 100.992 715.094 108.578
 733.41 122.082 746.91 c 135.582 760.414 153.895 768 172.992 768 c 604.992
 768 l 624.086 768 642.402 760.414 655.902 746.91 c 669.406 733.41 676.992
 715.094 676.992 696 c 676.992 120 l 676.992 100.906 669.406 82.59 655.902
 69.09 c 642.402 55.586 624.086 48 604.992 48 c 574.176 48 l 576.863 55.551
 578.223 63.551 578.254 72 c 578.258 96 l 578.258 135.742 546.195 168 506.641
 168 c 267.887 168 l 248.852 167.938 230.621 160.316 217.199 146.816 c 203.777
 133.312 196.27 115.035 196.32 96 c 196.32 72 l 196.352 63.551 197.711 55.551
 200.398 48 c h
387.262 311.137 m 466.75 230.832 665.422 371.328 387.262 552 c 109.102 
371.328 307.773 230.879 387.262 311.137 c f*
Q Q
showpage
%%Trailer
%%EOF
