%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
422.977 128.832 m 518.926 46.094 641.305 0.398 768 0 c 1026.238 0 1240.609
 192 1263.938 439.586 c 1416.77 461.184 1536 589.152 1536 746.207 c 1536
 918.625 1392.191 1056 1217.953 1056 c 960 1056 l 942.852 1056 927.004 1046.852
 918.43 1032 c 909.855 1017.148 909.855 998.852 918.43 984 c 927.004 969.148
 942.852 960 960 960 c 1218.047 960 l 1341.984 960 1440 862.848 1440 746.207
 c 1440 629.473 1342.078 532.32 1217.953 532.32 c 1169.953 532.32 l 1169.953
 484.32 l 1170.047 271.199 991.488 96 768 96 c 664.309 96.414 564.176 133.867
 485.664 201.602 c 412.992 264.195 374.977 339.648 374.977 398.883 c 374.977
 441.891 l 332.258 446.594 l 198.145 461.281 96 571.391 96 702.527 c 96 
843.359 214.078 960 362.977 960 c 576 960 l 593.148 960 608.996 969.148 
617.57 984 c 626.145 998.852 626.145 1017.148 617.57 1032 c 608.996 1046.852
 593.148 1056 576 1056 c 362.977 1056 l 163.969 1056 0 899.137 0 702.527
 c 0 533.281 121.535 393.121 282.434 357.598 c 296.16 274.75 349.441 192.191
 422.977 128.828 c f*
734.016 398.016 m 743.02 388.988 755.25 383.914 768 383.914 c 780.75 383.914
 792.98 388.988 801.984 398.016 c 1089.984 686.016 l 1102.125 698.156 1106.867
 715.855 1102.422 732.438 c 1097.98 749.023 1085.023 761.98 1068.438 766.422
 c 1051.855 770.867 1034.156 766.125 1022.016 753.984 c 816 547.871 l 816
 1392 l 816 1409.148 806.852 1424.996 792 1433.57 c 777.148 1442.145 758.852
 1442.145 744 1433.57 c 729.148 1424.996 720 1409.148 720 1392 c 720 547.871
 l 513.984 753.984 l 501.844 766.125 484.145 770.867 467.562 766.422 c 450.977
 761.98 438.02 749.023 433.578 732.438 c 429.133 715.855 433.875 698.156
 446.016 686.016 c h
734.016 398.016 m f*
Q Q
showpage
%%Trailer
%%EOF
