%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
0.109 36.941 m 0.418 36.172 1.289 35.801 2.059 36.109 c 7.328 38.219 l 
8.402 38.645 9.598 38.645 10.672 38.219 c 13.715 37 l 15.5 36.285 17.496
 36.285 19.285 37 c 22.332 38.219 l 22.328 38.219 l 23.402 38.645 24.598
 38.645 25.672 38.219 c 28.715 37 l 30.5 36.285 32.496 36.285 34.285 37 
c 37.332 38.219 l 37.328 38.219 l 38.402 38.645 39.598 38.645 40.672 38.219
 c 45.941 36.109 l 46.312 35.949 46.73 35.949 47.105 36.102 c 47.477 36.258
 47.77 36.555 47.922 36.93 c 48.07 37.305 48.062 37.723 47.902 38.094 c 
47.738 38.461 47.434 38.75 47.059 38.891 c 41.785 41 l 39.996 41.715 38 
41.715 36.215 41 c 33.172 39.781 l 32.098 39.355 30.902 39.355 29.828 39.781
 c 26.781 41 l 26.785 41 l 24.996 41.715 23 41.715 21.215 41 c 18.172 39.781
 l 17.098 39.355 15.902 39.355 14.828 39.781 c 11.781 41 l 11.785 41 l 9.996
 41.715 8 41.715 6.215 41 c 0.945 38.891 l 0.941 38.891 l 0.172 38.582 -0.199
 37.711 0.109 36.941 c 0.109 42.941 m 0.418 42.172 1.289 41.801 2.059 42.109
 c 7.328 44.219 l 8.402 44.645 9.598 44.645 10.672 44.219 c 13.715 43 l 
15.5 42.285 17.496 42.285 19.285 43 c 22.332 44.219 l 22.328 44.219 l 23.402
 44.645 24.598 44.645 25.672 44.219 c 28.715 43 l 30.5 42.285 32.496 42.285
 34.285 43 c 37.332 44.219 l 37.328 44.219 l 38.402 44.645 39.598 44.645
 40.672 44.219 c 45.941 42.109 l 46.312 41.949 46.73 41.949 47.105 42.102
 c 47.477 42.258 47.77 42.555 47.922 42.93 c 48.07 43.305 48.062 43.723 
47.902 44.094 c 47.738 44.461 47.434 44.75 47.059 44.891 c 41.785 47 l 39.996
 47.715 38 47.715 36.215 47 c 33.172 45.781 l 32.098 45.355 30.902 45.355
 29.828 45.781 c 26.781 47 l 26.785 47 l 24.996 47.715 23 47.715 21.215 
47 c 18.172 45.781 l 17.098 45.355 15.902 45.355 14.828 45.781 c 11.781 
47 l 11.785 47 l 9.996 47.715 8 47.715 6.215 47 c 0.945 44.891 l 0.941 44.891
 l 0.172 44.582 -0.199 43.711 0.109 42.941 c 7.984 24.238 m 6.617 27.426
 5.004 30.531 2.457 32.648 c 2.461 32.652 l 1.82 33.156 0.898 33.062 0.375
 32.438 c -0.145 31.812 -0.074 30.883 0.539 30.348 c 2.496 28.715 3.883 
26.195 5.23 23.059 c 5.652 22.074 6.074 21.02 6.512 19.926 c 7.418 17.664
 8.383 15.25 9.543 13 c 11.289 9.602 13.586 6.316 17.102 3.898 c 20.633 
1.469 25.254 0 31.5 0 c 35.891 0 39.031 1.199 41.035 3.176 c 43.047 5.156
 43.715 7.73 43.492 10.082 c 43.27 12.395 42.168 14.629 40.434 15.977 c 
38.824 17.273 36.629 17.582 34.723 16.785 c 32.773 18.711 32 21.82 32.594
 24.629 c 33.227 27.645 35.352 30 39 30 c 46.5 30 l 47.328 30 48 30.672 
48 31.5 c 48 32.328 47.328 33 46.5 33 c 39 33 l 33.648 33 30.523 29.355 
29.656 25.246 c 28.961 21.945 29.672 18.129 31.93 15.395 c 31.5 15.18 l 
29.168 16.344 l 28.746 16.555 28.25 16.555 27.828 16.344 c 24.828 14.844
 l 24.113 14.461 23.836 13.578 24.199 12.852 c 24.562 12.129 25.434 11.82
 26.168 12.16 c 28.5 13.324 l 30.828 12.16 l 31.25 11.949 31.746 11.949 
32.168 12.16 c 35.168 13.66 l 35.27 13.715 l 36.59 14.508 37.699 14.301 
38.594 13.605 c 39.578 12.84 40.352 11.418 40.504 9.797 c 40.652 8.211 40.203
 6.57 38.93 5.312 c 37.656 4.055 35.359 3.004 31.5 3.004 c 25.746 3.004 
21.742 4.348 18.805 6.371 c 15.848 8.398 13.828 11.215 12.211 14.371 c 11.117
 16.5 10.246 18.672 9.375 20.852 c 8.926 21.98 8.473 23.109 7.984 24.242
 c f
Q Q
showpage
%%Trailer
%%EOF
