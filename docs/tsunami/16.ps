%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
0.027 9.234 m 0.105 9.043 0.324 8.949 0.516 9.027 c 1.832 9.555 l 2.102
 9.66 2.398 9.66 2.668 9.555 c 3.43 9.25 l 3.875 9.07 4.375 9.07 4.82 9.25
 c 5.582 9.555 l 5.852 9.66 6.148 9.66 6.418 9.555 c 7.18 9.25 l 7.625 9.07
 8.125 9.07 8.57 9.25 c 9.332 9.555 l 9.602 9.66 9.898 9.66 10.168 9.555
 c 11.484 9.027 l 11.578 8.988 11.684 8.988 11.777 9.027 c 11.871 9.066 
11.941 9.141 11.98 9.234 c 12.02 9.324 12.016 9.43 11.977 9.523 c 11.934
 9.617 11.859 9.688 11.766 9.723 c 10.445 10.25 l 10 10.43 9.5 10.43 9.055
 10.25 c 8.293 9.945 l 8.023 9.84 7.727 9.84 7.457 9.945 c 6.695 10.25 l
 6.25 10.43 5.75 10.43 5.305 10.25 c 4.543 9.945 l 4.273 9.84 3.977 9.84
 3.707 9.945 c 2.945 10.25 l 2.5 10.43 2 10.43 1.555 10.25 c 0.238 9.723
 l 0.234 9.723 l 0.043 9.645 -0.051 9.426 0.027 9.234 c 0.027 10.734 m 0.105
 10.543 0.324 10.449 0.516 10.527 c 1.832 11.055 l 2.102 11.16 2.398 11.16
 2.668 11.055 c 3.43 10.75 l 3.875 10.57 4.375 10.57 4.82 10.75 c 5.582 
11.055 l 5.852 11.16 6.148 11.16 6.418 11.055 c 7.18 10.75 l 7.625 10.57
 8.125 10.57 8.57 10.75 c 9.332 11.055 l 9.602 11.16 9.898 11.16 10.168 
11.055 c 11.484 10.527 l 11.578 10.488 11.684 10.488 11.777 10.527 c 11.871
 10.566 11.941 10.641 11.98 10.734 c 12.02 10.824 12.016 10.93 11.977 11.023
 c 11.934 11.117 11.859 11.188 11.766 11.223 c 10.445 11.75 l 10 11.93 9.5
 11.93 9.055 11.75 c 8.293 11.445 l 8.023 11.34 7.727 11.34 7.457 11.445
 c 6.695 11.75 l 6.25 11.93 5.75 11.93 5.305 11.75 c 4.543 11.445 l 4.273
 11.34 3.977 11.34 3.707 11.445 c 2.945 11.75 l 2.5 11.93 2 11.93 1.555 
11.75 c 0.238 11.223 l 0.234 11.223 l 0.043 11.145 -0.051 10.926 0.027 10.734
 c 1.996 6.059 m 1.652 6.855 1.25 7.633 0.613 8.16 c 0.613 8.164 l 0.457
 8.289 0.223 8.266 0.094 8.109 c -0.035 7.953 -0.02 7.723 0.137 7.586 c 
0.625 7.18 0.973 6.547 1.309 5.762 c 1.414 5.516 1.52 5.25 1.629 4.98 c 
1.855 4.414 2.098 3.812 2.387 3.25 c 2.82 2.398 3.395 1.578 4.273 0.973 
c 5.156 0.367 6.312 0 7.875 0 c 8.973 0 9.758 0.301 10.258 0.793 c 10.762
 1.289 10.926 1.93 10.871 2.52 c 10.816 3.098 10.539 3.656 10.105 3.992 
c 10.109 3.992 l 9.707 4.316 9.156 4.395 8.68 4.195 c 8.191 4.676 8 5.453
 8.148 6.156 c 8.309 6.91 8.84 7.5 9.75 7.5 c 11.625 7.5 l 11.832 7.5 12
 7.668 12 7.875 c 12 8.082 11.832 8.25 11.625 8.25 c 9.75 8.25 l 8.41 8.25
 7.629 7.34 7.414 6.312 c 7.238 5.488 7.418 4.531 7.984 3.848 c 7.875 3.797
 l 7.293 4.086 l 7.188 4.141 7.062 4.141 6.957 4.086 c 6.207 3.711 l 6.027
 3.613 5.957 3.395 6.051 3.215 c 6.141 3.031 6.359 2.957 6.543 3.039 c 7.125
 3.328 l 7.707 3.039 l 7.812 2.988 7.938 2.988 8.043 3.039 c 8.793 3.414
 l 8.82 3.426 l 9.148 3.625 9.43 3.57 9.652 3.398 c 9.898 3.207 10.094 2.852
 10.129 2.445 c 10.168 2.047 10.055 1.637 9.734 1.324 c 9.414 1.012 8.844
 0.746 7.875 0.746 c 6.438 0.746 5.438 1.082 4.699 1.59 c 3.961 2.102 3.457
 2.805 3.051 3.594 c 2.777 4.125 2.559 4.668 2.344 5.215 c 2.23 5.496 2.117
 5.781 1.996 6.062 c f
Q Q
showpage
%%Trailer
%%EOF
