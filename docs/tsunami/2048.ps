%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 14 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 14 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 14 1536 1522 rectclip
1 0 0 -1 0 1536 cm q
0 g
3.457 1182.145 m 8.195 1170.332 17.43 1160.887 29.129 1155.879 c 40.832
 1150.875 54.043 1150.723 65.855 1155.457 c 234.527 1222.945 l 268.855 1236.672
 307.145 1236.672 341.473 1222.945 c 438.816 1183.969 l 496.035 1161.078
 559.867 1161.078 617.09 1183.969 c 714.531 1222.945 l 714.527 1222.945 
l 748.855 1236.672 787.145 1236.672 821.473 1222.945 c 918.816 1183.969 
l 976.035 1161.078 1039.867 1161.078 1097.09 1183.969 c 1194.531 1222.945
 l 1194.527 1222.945 l 1228.855 1236.672 1267.145 1236.672 1301.473 1222.945
 c 1470.145 1155.457 l 1482.02 1150.406 1495.426 1150.352 1507.34 1155.301
 c 1519.258 1160.254 1528.68 1169.793 1533.48 1181.77 c 1538.281 1193.746
 1538.059 1207.152 1532.859 1218.961 c 1527.664 1230.773 1517.93 1239.992
 1505.855 1244.543 c 1337.086 1312.031 l 1337.09 1312.031 l 1279.867 1334.922
 1216.035 1334.922 1158.816 1312.031 c 1061.473 1273.055 l 1027.145 1259.328
 988.855 1259.328 954.527 1273.055 c 857.086 1312.031 l 857.09 1312.031 
l 799.867 1334.922 736.035 1334.922 678.816 1312.031 c 581.473 1273.055 
l 547.145 1259.328 508.855 1259.328 474.527 1273.055 c 377.086 1312.031 
l 377.09 1312.031 l 319.867 1334.922 256.035 1334.922 198.816 1312.031 c
 30.145 1244.543 l 18.332 1239.805 8.887 1230.57 3.879 1218.871 c -1.125
 1207.168 -1.277 1193.957 3.457 1182.145 c 3.457 1374.145 m 8.195 1362.332
 17.43 1352.887 29.129 1347.879 c 40.832 1342.875 54.043 1342.723 65.855
 1347.457 c 234.527 1414.945 l 268.855 1428.672 307.145 1428.672 341.473
 1414.945 c 438.816 1375.969 l 496.035 1353.078 559.867 1353.078 617.09 
1375.969 c 714.531 1414.945 l 714.527 1414.945 l 748.855 1428.672 787.145
 1428.672 821.473 1414.945 c 918.816 1375.969 l 976.035 1353.078 1039.867
 1353.078 1097.09 1375.969 c 1194.531 1414.945 l 1194.527 1414.945 l 1228.855
 1428.672 1267.145 1428.672 1301.473 1414.945 c 1470.145 1347.457 l 1482.02
 1342.406 1495.426 1342.352 1507.34 1347.301 c 1519.258 1352.254 1528.68
 1361.793 1533.48 1373.77 c 1538.281 1385.746 1538.059 1399.152 1532.859
 1410.961 c 1527.664 1422.773 1517.93 1431.992 1505.855 1436.543 c 1337.086
 1504.031 l 1337.09 1504.031 l 1279.867 1526.922 1216.035 1526.922 1158.816
 1504.031 c 1061.473 1465.055 l 1027.145 1451.328 988.855 1451.328 954.527
 1465.055 c 857.086 1504.031 l 857.09 1504.031 l 799.867 1526.922 736.035
 1526.922 678.816 1504.031 c 581.473 1465.055 l 547.145 1451.328 508.855
 1451.328 474.527 1465.055 c 377.086 1504.031 l 377.09 1504.031 l 319.867
 1526.922 256.035 1526.922 198.816 1504.031 c 30.145 1436.543 l 18.332 1431.805
 8.887 1422.57 3.879 1410.871 c -1.125 1399.168 -1.277 1385.957 3.457 1374.145
 c 255.551 775.68 m 211.773 877.727 160.125 977.086 78.719 1044.863 c 65.5
 1055.352 47.746 1058.129 31.957 1052.18 c 16.164 1046.227 4.66 1032.418
 1.652 1015.816 c -1.355 999.211 4.578 982.246 17.281 971.137 c 79.875 918.914
 124.227 838.273 167.426 737.855 c 180.867 706.367 194.402 672.574 208.418
 637.633 c 237.41 565.25 268.32 487.969 305.379 416.066 c 361.246 307.199
 434.688 202.078 547.199 124.703 c 660.191 47.039 808.129 0 1008 0 c 1148.449
 0 1249.055 38.398 1313.184 101.566 c 1377.504 164.926 1398.91 247.293 1391.809
 322.559 c 1384.703 396.574 1349.473 468.094 1293.887 511.199 c 1268.574
 531.574 1238.234 544.738 1206.062 549.301 c 1173.891 553.863 1141.082 549.652
 1111.105 537.121 c 1048.707 598.754 1024.035 698.305 1042.945 788.066 c
 1063.297 884.641 1131.266 960 1248 960 c 1488 960 l 1505.148 960 1520.996
 969.148 1529.57 984 c 1538.145 998.852 1538.145 1017.148 1529.57 1032 c
 1520.996 1046.852 1505.148 1056 1488 1056 c 1248 1056 l 1076.734 1056 976.703
 939.359 949.055 807.84 c 926.781 702.238 949.535 580.031 1021.824 492.574
 c 1008 485.762 l 933.406 523.008 l 919.898 529.758 904.004 529.758 890.496
 523.008 c 794.496 475.008 l 779.711 467.035 770.172 451.918 769.34 435.141
 c 768.504 418.367 776.5 402.375 790.422 392.977 c 804.34 383.578 822.16
 382.141 837.406 389.184 c 912 426.43 l 986.496 389.184 l 1000.004 382.434
 1015.898 382.434 1029.406 389.184 c 1125.406 437.184 l 1128.672 438.91 
l 1170.91 464.254 1206.434 457.629 1235.039 435.453 c 1266.527 410.973 1291.297
 365.469 1296.191 313.531 c 1300.992 262.746 1286.59 210.234 1245.793 170.012
 c 1204.992 129.789 1131.555 96.09 1008 96.09 c 823.871 96.09 695.809 139.098
 601.727 203.898 c 507.168 268.801 442.559 358.848 390.719 459.84 c 355.68
 528 327.84 597.406 300 667.199 c 285.602 703.297 271.105 739.488 255.551
 775.68 c f
Q Q
showpage
%%Trailer
%%EOF
