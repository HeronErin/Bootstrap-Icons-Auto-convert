%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 7 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 7 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 7 768 761 rectclip
1 0 0 -1 0 768 cm q
0 g
1.727 591.07 m 4.098 585.164 8.715 580.441 14.566 577.941 c 20.414 575.438
 27.02 575.363 32.93 577.727 c 117.266 611.469 l 117.266 611.473 l 134.426
 618.336 153.574 618.336 170.734 611.473 c 219.406 591.984 l 248.02 580.539
 279.934 580.539 308.543 591.984 c 357.262 611.473 l 357.266 611.473 l 374.426
 618.336 393.574 618.336 410.734 611.473 c 459.406 591.984 l 488.02 580.539
 519.934 580.539 548.543 591.984 c 597.262 611.473 l 597.266 611.473 l 614.426
 618.336 633.574 618.336 650.734 611.473 c 735.07 577.73 l 735.07 577.727
 l 741.008 575.203 747.711 575.176 753.672 577.652 c 759.629 580.125 764.34
 584.895 766.738 590.883 c 769.141 596.871 769.027 603.574 766.43 609.48
 c 763.832 615.387 758.965 619.996 752.93 622.273 c 668.547 656.016 l 668.543
 656.016 l 639.934 667.461 608.02 667.461 579.406 656.016 c 530.734 636.527
 l 513.574 629.664 494.426 629.664 477.266 636.527 c 428.547 656.016 l 428.543
 656.016 l 399.934 667.461 368.02 667.461 339.406 656.016 c 290.734 636.527
 l 273.574 629.664 254.426 629.664 237.266 636.527 c 188.547 656.016 l 188.543
 656.016 l 159.934 667.461 128.02 667.461 99.406 656.016 c 15.07 622.273
 l 9.164 619.902 4.441 615.285 1.941 609.434 c -0.562 603.586 -0.637 596.98
 1.727 591.07 c 1.727 687.07 m 4.098 681.164 8.715 676.441 14.566 673.941
 c 20.414 671.438 27.02 671.363 32.93 673.727 c 117.266 707.469 l 117.266
 707.473 l 134.426 714.336 153.574 714.336 170.734 707.473 c 219.406 687.984
 l 248.02 676.539 279.934 676.539 308.543 687.984 c 357.262 707.473 l 357.266
 707.473 l 374.426 714.336 393.574 714.336 410.734 707.473 c 459.406 687.984
 l 488.02 676.539 519.934 676.539 548.543 687.984 c 597.262 707.473 l 597.266
 707.473 l 614.426 714.336 633.574 714.336 650.734 707.473 c 735.07 673.73
 l 735.07 673.727 l 741.008 671.203 747.711 671.176 753.672 673.652 c 759.629
 676.125 764.34 680.895 766.738 686.883 c 769.141 692.871 769.027 699.574
 766.43 705.48 c 763.832 711.387 758.965 715.996 752.93 718.273 c 668.547
 752.016 l 668.543 752.016 l 639.934 763.461 608.02 763.461 579.406 752.016
 c 530.734 732.527 l 513.574 725.664 494.426 725.664 477.266 732.527 c 428.547
 752.016 l 428.543 752.016 l 399.934 763.461 368.02 763.461 339.406 752.016
 c 290.734 732.527 l 273.574 725.664 254.426 725.664 237.266 732.527 c 188.547
 752.016 l 188.543 752.016 l 159.934 763.461 128.02 763.461 99.406 752.016
 c 15.07 718.273 l 9.164 715.902 4.441 711.285 1.941 705.434 c -0.562 699.586
 -0.637 692.98 1.727 687.07 c 127.777 387.84 m 105.891 438.863 80.066 488.543
 39.363 522.434 c 39.359 522.434 l 32.75 527.676 23.871 529.066 15.977 526.09
 c 8.082 523.113 2.328 516.211 0.828 507.906 c -0.676 499.605 2.289 491.125
 8.641 485.566 c 39.938 459.453 62.113 419.133 83.711 368.926 c 90.43 353.184
 97.199 336.285 104.207 318.812 c 118.703 282.621 134.16 243.98 152.688 
208.027 c 180.625 153.602 217.344 101.039 273.602 62.352 c 330.098 23.52
 404.062 0 504 0 c 574.223 0 624.527 19.199 656.594 50.785 c 688.754 82.465
 699.457 123.648 695.906 161.281 c 692.355 198.289 674.738 234.051 646.945
 255.602 c 634.289 265.789 619.117 272.367 603.031 274.648 c 586.945 276.93
 570.543 274.828 555.551 268.559 c 524.352 299.375 512.016 349.152 521.473
 394.031 c 531.648 442.32 565.633 480 624 480 c 744 480 l 752.574 480 760.496
 484.574 764.785 492 c 769.07 499.426 769.07 508.574 764.785 516 c 760.496
 523.426 752.574 528 744 528 c 624 528 l 538.367 528 488.352 469.68 474.527
 403.922 c 463.391 351.121 474.766 290.02 510.91 246.289 c 504 242.879 l
 466.703 261.504 l 459.949 264.879 452 264.879 445.246 261.504 c 397.246
 237.504 l 389.855 233.52 385.086 225.957 384.668 217.57 c 384.254 209.184
 388.25 201.188 395.211 196.488 c 402.172 191.789 411.082 191.07 418.703
 194.594 c 456 213.219 l 493.246 194.594 l 500 191.219 507.949 191.219 514.703
 194.594 c 562.703 218.594 l 564.336 219.457 l 585.457 232.129 603.215 228.816
 617.52 217.73 c 633.262 205.492 645.648 182.738 648.094 156.77 c 650.492
 131.379 643.293 105.121 622.895 85.008 c 602.496 64.895 565.773 48.047 
504 48.047 c 411.938 48.047 347.902 69.551 300.863 101.949 c 253.586 134.398
 221.281 179.426 195.359 229.922 c 177.84 264 163.918 298.707 150 333.602
 c 142.801 351.648 135.551 369.746 127.777 387.84 c f
Q Q
showpage
%%Trailer
%%EOF
