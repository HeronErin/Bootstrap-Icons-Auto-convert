%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 3 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 3 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 3 384 381 rectclip
1 0 0 -1 0 384 cm q
0 g
0.863 295.535 m 3.332 289.387 10.312 286.398 16.465 288.863 c 58.633 305.734
 l 67.215 309.168 76.785 309.168 85.367 305.734 c 109.703 295.992 l 124.008
 290.27 139.969 290.27 154.273 295.992 c 178.633 305.734 l 187.215 309.168
 196.785 309.168 205.367 305.734 c 229.703 295.992 l 244.008 290.27 259.969
 290.27 274.273 295.992 c 298.633 305.734 l 307.215 309.168 316.785 309.168
 325.367 305.734 c 367.535 288.863 l 370.504 287.602 373.855 287.586 376.836
 288.824 c 379.812 290.062 382.168 292.449 383.371 295.441 c 384.57 298.438
 384.516 301.789 383.215 304.742 c 381.914 307.691 379.484 310 376.465 311.137
 c 334.273 328.008 l 319.969 333.73 304.008 333.73 289.703 328.008 c 265.367
 318.266 l 256.785 314.832 247.215 314.832 238.633 318.266 c 214.273 328.008
 l 199.969 333.73 184.008 333.73 169.703 328.008 c 145.367 318.266 l 136.785
 314.832 127.215 314.832 118.633 318.266 c 94.273 328.008 l 79.969 333.73
 64.008 333.73 49.703 328.008 c 7.535 311.137 l 1.387 308.668 -1.602 301.688
 0.863 295.535 c 0.863 343.535 m 3.332 337.387 10.312 334.398 16.465 336.863
 c 58.633 353.734 l 67.215 357.168 76.785 357.168 85.367 353.734 c 109.703
 343.992 l 124.008 338.27 139.969 338.27 154.273 343.992 c 178.633 353.734
 l 187.215 357.168 196.785 357.168 205.367 353.734 c 229.703 343.992 l 244.008
 338.27 259.969 338.27 274.273 343.992 c 298.633 353.734 l 307.215 357.168
 316.785 357.168 325.367 353.734 c 367.535 336.863 l 370.504 335.602 373.855
 335.586 376.836 336.824 c 379.812 338.062 382.168 340.449 383.371 343.441
 c 384.57 346.438 384.516 349.789 383.215 352.742 c 381.914 355.691 379.484
 358 376.465 359.137 c 334.273 376.008 l 319.969 381.73 304.008 381.73 289.703
 376.008 c 265.367 366.266 l 256.785 362.832 247.215 362.832 238.633 366.266
 c 214.273 376.008 l 199.969 381.73 184.008 381.73 169.703 376.008 c 145.367
 366.266 l 136.785 362.832 127.215 362.832 118.633 366.266 c 94.273 376.008
 l 79.969 381.73 64.008 381.73 49.703 376.008 c 7.535 359.137 l 1.387 356.668
 -1.602 349.688 0.863 343.535 c 63.887 193.922 m 52.941 219.434 40.031 244.273
 19.68 261.219 c 19.68 261.215 l 14.578 265.266 7.172 264.504 3.004 259.496
 c -1.168 254.492 -0.582 247.074 4.32 242.785 c 19.969 229.73 31.055 209.57
 41.855 184.465 c 45.215 176.594 48.598 168.145 52.102 159.41 c 59.348 141.312
 67.078 121.996 76.34 104.02 c 90.312 76.801 108.672 50.52 136.801 31.176
 c 165.047 11.762 202.031 0 252 0 c 287.113 0 312.266 9.602 328.297 25.391
 c 344.375 41.23 349.73 61.824 347.953 80.637 c 346.176 99.141 337.367 117.02
 323.473 127.797 c 323.473 127.801 l 317.145 132.895 309.559 136.184 301.516
 137.324 c 293.473 138.465 285.27 137.414 277.777 134.281 c 262.176 149.688
 256.008 174.578 260.738 197.016 c 265.824 221.16 282.816 240 312 240 c 
372 240 l 378.629 240 384 245.371 384 252 c 384 258.629 378.629 264 372 
264 c 312 264 l 269.184 264 244.176 234.84 237.266 201.961 c 231.699 175.562
 237.387 145.008 255.457 123.145 c 252 121.441 l 233.352 130.754 l 229.977
 132.441 226 132.441 222.625 130.754 c 198.625 118.754 l 192.918 115.676
 190.688 108.621 193.586 102.824 c 196.484 97.023 203.465 94.578 209.352
 97.297 c 228 106.609 l 246.625 97.297 l 250 95.609 253.977 95.609 257.352
 97.297 c 281.352 109.297 l 282.168 109.73 l 292.727 116.066 301.609 114.41
 308.762 108.867 c 316.633 102.746 322.824 91.371 324.051 78.387 c 325.25
 65.691 321.652 52.562 311.449 42.508 c 301.25 32.453 282.891 24.027 252
 24.027 c 205.969 24.027 173.953 34.781 150.434 50.98 c 126.793 67.199 110.641
 89.711 97.68 114.961 c 88.918 132 81.961 149.352 75 166.801 c 71.398 175.824
 67.777 184.871 63.887 193.922 c f
Q Q
showpage
%%Trailer
%%EOF
