%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
0.215 73.883 m 0.832 72.348 2.578 71.602 4.117 72.215 c 14.66 76.434 l 
14.656 76.434 l 16.805 77.293 19.195 77.293 21.344 76.434 c 27.43 73.996
 l 27.426 73.996 l 31.004 72.566 34.992 72.566 38.566 73.996 c 44.656 76.434
 l 46.805 77.293 49.195 77.293 51.344 76.434 c 57.43 73.996 l 57.426 73.996
 l 61.004 72.566 64.992 72.566 68.566 73.996 c 74.656 76.434 l 76.805 77.293
 79.195 77.293 81.344 76.434 c 91.887 72.215 l 91.883 72.215 l 92.625 71.902
 93.465 71.898 94.207 72.207 c 94.953 72.516 95.543 73.113 95.844 73.859
 c 96.141 74.609 96.129 75.445 95.805 76.184 c 95.48 76.922 94.871 77.5 
94.117 77.785 c 83.57 82.004 l 83.566 82.004 l 79.992 83.434 76.004 83.434
 72.426 82.004 c 66.34 79.566 l 66.344 79.566 l 64.195 78.707 61.805 78.707
 59.656 79.566 c 53.566 82.004 l 49.992 83.434 46.004 83.434 42.426 82.004
 c 36.34 79.566 l 36.344 79.566 l 34.195 78.707 31.805 78.707 29.656 79.566
 c 23.566 82.004 l 19.992 83.434 16.004 83.434 12.426 82.004 c 1.883 77.785
 l 0.348 77.168 -0.398 75.422 0.215 73.883 c 0.215 85.883 m 0.832 84.348
 2.578 83.602 4.117 84.215 c 14.66 88.434 l 14.656 88.434 l 16.805 89.293
 19.195 89.293 21.344 88.434 c 27.43 85.996 l 27.426 85.996 l 31.004 84.566
 34.992 84.566 38.566 85.996 c 44.656 88.434 l 46.805 89.293 49.195 89.293
 51.344 88.434 c 57.43 85.996 l 57.426 85.996 l 61.004 84.566 64.992 84.566
 68.566 85.996 c 74.656 88.434 l 76.805 89.293 79.195 89.293 81.344 88.434
 c 91.887 84.215 l 91.883 84.215 l 92.625 83.902 93.465 83.898 94.207 84.207
 c 94.953 84.516 95.543 85.113 95.844 85.859 c 96.141 86.609 96.129 87.445
 95.805 88.184 c 95.48 88.922 94.871 89.5 94.117 89.785 c 83.57 94.004 l
 83.566 94.004 l 79.992 95.434 76.004 95.434 72.426 94.004 c 66.34 91.566
 l 66.344 91.566 l 64.195 90.707 61.805 90.707 59.656 91.566 c 53.566 94.004
 l 49.992 95.434 46.004 95.434 42.426 94.004 c 36.34 91.566 l 36.344 91.566
 l 34.195 90.707 31.805 90.707 29.656 91.566 c 23.566 94.004 l 19.992 95.434
 16.004 95.434 12.426 94.004 c 1.883 89.785 l 0.348 89.168 -0.398 87.422
 0.215 85.883 c 15.973 48.48 m 13.238 54.859 10.008 61.07 4.922 65.305 c
 3.645 66.316 1.793 66.125 0.75 64.875 c -0.293 63.625 -0.145 61.77 1.078
 60.695 c 4.988 57.43 7.762 52.391 10.461 46.117 c 11.301 44.148 12.148 
42.039 13.023 39.852 c 14.836 35.328 16.766 30.496 19.082 26.004 c 22.578
 19.199 27.168 12.629 34.199 7.793 c 41.262 2.941 50.508 0 63 0 c 71.777
 0 78.066 2.398 82.074 6.348 c 86.094 10.309 87.434 15.457 86.988 20.16 
c 86.543 24.785 84.344 29.258 80.867 31.949 c 77.645 34.543 73.262 35.164
 69.445 33.57 c 65.547 37.422 64.004 43.645 65.184 49.254 c 66.457 55.289
 70.703 60 78 60 c 93 60 l 94.656 60 96 61.344 96 63 c 96 64.656 94.656 
66 93 66 c 78 66 l 67.297 66 61.043 58.711 59.316 50.488 c 57.926 43.887
 59.348 36.25 63.863 30.785 c 63 30.359 l 58.34 32.688 l 57.492 33.109 56.5
 33.109 55.656 32.688 c 49.656 29.688 l 48.23 28.918 47.672 27.156 48.398
 25.707 c 49.121 24.258 50.867 23.645 52.34 24.324 c 57 26.652 l 61.656 
24.324 l 62.5 23.902 63.492 23.902 64.34 24.324 c 70.34 27.324 l 70.543 
27.434 l 73.184 29.02 75.402 28.605 77.191 27.219 c 79.16 25.688 80.707 
22.844 81.012 19.598 c 81.312 16.422 80.41 13.141 77.863 10.629 c 75.312
 8.113 70.723 6.008 63 6.008 c 51.492 6.008 43.488 8.695 37.609 12.746 c
 31.699 16.801 27.66 22.43 24.422 28.738 c 22.23 33 20.492 37.336 18.75 
41.699 c 17.852 43.957 16.945 46.219 15.973 48.48 c f
Q Q
showpage
%%Trailer
%%EOF
