%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1536 m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 
1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 
224.941 c 1167.031 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941
 224.941 c 80.914 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941
 1311.059 c 368.969 1455.086 564.312 1536 768 1536 c 622.848 672 m 600.77
 614.594 559.391 576 511.969 576 c 464.641 576 423.266 614.594 401.09 672
 c 389.586 641.309 383.797 608.773 384 576 c 384 469.922 441.312 384 511.969
 384 c 582.723 384 640.031 469.922 640.031 576 c 640.031 610.945 633.793
 643.777 622.848 672 c 1134.91 672 m 1112.832 614.594 1071.359 576 1024.031
 576 c 976.605 576 935.23 614.594 913.152 672 c 901.617 641.316 895.793 
608.781 895.969 576 c 895.969 469.922 953.281 384 1024.031 384 c 1094.688
 384 1152 469.922 1152 576 c 1152 610.945 1145.762 643.777 1134.91 672 c
 258.816 840.574 m 268.812 831.648 282.199 827.512 295.488 829.246 c 417.406
 843.457 619.008 864 768 864 c 917.09 864 1118.688 843.457 1240.512 829.246
 c 1253.832 827.48 1267.262 831.621 1277.281 840.574 c 1281.168 843.965 
1284.074 848.336 1285.695 853.234 c 1287.316 858.133 1287.594 863.375 1286.496
 868.414 c 1277.855 913.535 1263.266 956.828 1243.777 997.246 c 1218.531
 1000.605 1188.48 1004.445 1154.594 1008.285 c 1154.594 1008.289 l 1026.254
 1023.219 897.199 1031.133 768 1032 c 626.398 1032 486.336 1020.191 381.406
 1008.289 c 347.52 1004.449 317.469 1000.609 292.125 997.25 c 292.129 997.246
 l 272.465 956.281 258.168 912.945 249.602 868.32 c 248.512 863.27 248.805
 858.023 250.441 853.125 c 252.082 848.227 255.008 843.859 258.91 840.48
 c h
768 1296 m 689.797 1296.059 612.562 1278.715 541.895 1245.223 c 471.227
 1211.73 408.895 1162.934 359.426 1102.367 c 370.562 1103.711 l 477.602 
1115.809 621.602 1128 768.004 1128 c 914.402 1128 1058.402 1115.809 1165.445
 1103.711 c 1176.676 1102.367 l 1176.672 1102.367 l 1127.191 1162.945 1064.844
 1211.75 994.16 1245.242 c 923.473 1278.734 846.219 1296.074 768 1296 c f
Q Q
showpage
%%Trailer
%%EOF
