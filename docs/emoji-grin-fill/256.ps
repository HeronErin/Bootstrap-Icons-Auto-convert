%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 192 m 130.297 192 161.988 173.703 179.137 144 c 196.289 114.297 196.289
 77.703 179.137 48 c 161.988 18.297 130.297 0 96 0 c 61.703 0 30.012 18.297
 12.863 48 c -4.289 77.703 -4.289 114.297 12.863 144 c 30.012 173.703 61.703
 192 96 192 c 77.855 84 m 75.094 76.824 69.922 72 63.996 72 c 58.082 72 
52.906 76.824 50.137 84 c 48.699 80.164 47.973 76.098 48 72 c 48 58.738 
55.164 48 63.996 48 c 72.84 48 80.004 58.738 80.004 72 c 80.004 76.367 79.223
 80.473 77.855 84 c 141.863 84 m 139.102 76.824 133.918 72 128.004 72 c 
122.074 72 116.902 76.824 114.145 84 c 112.703 80.164 111.973 76.098 111.996
 72 c 111.996 58.738 119.16 48 128.004 48 c 136.836 48 144 58.738 144 72
 c 144 76.367 143.219 80.473 141.863 84 c 32.352 105.07 m 33.602 103.957
 35.273 103.438 36.938 103.656 c 52.176 105.434 77.375 108 96 108 c 114.637
 108 139.836 105.434 155.062 103.656 c 156.73 103.434 158.406 103.953 159.66
 105.07 c 160.648 105.934 161.09 107.27 160.812 108.551 c 159.734 114.191
 157.91 119.602 155.473 124.656 c 152.316 125.078 148.562 125.555 144.324
 126.035 c 128.281 127.902 112.148 128.891 96 129 c 78.301 129 60.793 127.523
 47.676 126.035 c 43.441 125.555 39.684 125.074 36.516 124.656 c 34.059 
119.535 32.27 114.117 31.199 108.539 c 30.922 107.254 31.371 105.922 32.363
 105.059 c h
96 162 m 76.203 162.016 57.449 153.129 44.93 137.797 c 46.32 137.965 l 
59.699 139.477 77.699 141 96 141 c 114.301 141 132.301 139.477 145.68 137.965
 c 147.082 137.797 l 147.086 137.797 l 134.559 153.129 115.801 162.02 96
 162 c f
Q Q
showpage
%%Trailer
%%EOF
