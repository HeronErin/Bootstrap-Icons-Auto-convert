%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 384 m 242.922 384 291.758 363.773 327.766 327.766 c 363.773 291.758
 384 242.922 384 192 c 384 141.078 363.773 92.242 327.766 56.234 c 291.758
 20.227 242.922 0 192 0 c 141.078 0 92.242 20.227 56.234 56.234 c 20.227
 92.242 0 141.078 0 192 c 0 242.922 20.227 291.758 56.234 327.766 c 92.242
 363.773 141.078 384 192 384 c 155.711 168 m 150.191 153.648 139.848 144
 127.992 144 c 116.16 144 105.816 153.648 100.273 168 c 97.398 160.328 95.949
 152.195 96 144 c 96 117.48 110.328 96 127.992 96 c 145.68 96 160.008 117.48
 160.008 144 c 160.008 152.734 158.449 160.945 155.711 168 c 283.727 168
 m 278.207 153.648 267.84 144 256.008 144 c 244.152 144 233.809 153.648 
228.289 168 c 225.406 160.328 223.949 152.195 223.992 144 c 223.992 117.48
 238.32 96 256.008 96 c 273.672 96 288 117.48 288 144 c 288 152.734 286.441
 160.945 283.727 168 c 64.703 210.145 m 67.203 207.91 70.551 206.879 73.871
 207.312 c 104.352 210.863 154.754 216 192 216 c 229.273 216 279.672 210.863
 310.129 207.312 c 313.457 206.871 316.816 207.906 319.32 210.145 c 321.301
 211.871 322.184 214.539 321.625 217.105 c 319.465 228.387 315.816 239.211
 310.945 249.312 c 304.633 250.152 297.121 251.113 288.648 252.074 c 288.648
 252.07 l 256.562 255.805 224.301 257.785 192 258 c 156.602 258 121.586 
255.047 95.352 252.07 c 86.879 251.109 79.367 250.148 73.031 249.309 c 73.031
 249.312 l 68.117 239.07 64.543 228.238 62.398 217.078 c 61.848 214.508 
62.738 211.84 64.727 210.121 c h
192 324 m 152.41 324.031 114.902 306.254 89.855 275.594 c 92.641 275.93
 l 119.402 278.953 155.402 282 192 282 c 228.602 282 264.602 278.953 291.359
 275.93 c 294.168 275.594 l 269.117 306.262 231.602 324.035 192 324 c f
Q Q
showpage
%%Trailer
%%EOF
