%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.027 1.605 m 4.867 0.797 4.203 0.191 3.383 0.105 c 2.566 0.016 1.789 0.473
 1.465 1.227 c 1.105 1.188 0.746 1.293 0.469 1.527 c 0.195 1.758 0.023 2.094
 0.004 2.453 c -0.016 2.816 0.113 3.168 0.359 3.43 c 0.605 3.695 0.953 3.844
 1.312 3.844 c 4.875 3.844 l 5.469 3.844 5.957 3.387 6 2.793 c 6.039 2.203
 5.613 1.684 5.027 1.605 c 3.188 0.469 m 3.953 0.469 4.594 1.043 4.68 1.801
 c 4.688 1.898 4.77 1.969 4.867 1.969 c 4.875 1.969 l 5.289 1.969 5.625 
2.305 5.625 2.719 c 5.625 3.133 5.289 3.469 4.875 3.469 c 1.312 3.469 l 
1.043 3.469 0.789 3.352 0.609 3.152 c 0.434 2.949 0.352 2.684 0.383 2.418
 c 0.414 2.152 0.562 1.91 0.781 1.758 c 1.004 1.605 1.277 1.559 1.539 1.621
 c 1.633 1.645 1.73 1.59 1.762 1.5 c 1.965 0.883 2.539 0.469 3.188 0.469
 c 0.984 4.312 m 1.035 4.312 1.078 4.355 1.078 4.406 c 1.078 4.621 l 1.266
 4.512 l 1.375 4.453 1.465 4.613 1.359 4.676 c 1.172 4.781 l 1.359 4.887
 l 1.465 4.949 1.375 5.109 1.266 5.051 c 1.078 4.945 l 1.078 5.16 l 1.078
 5.156 l 1.078 5.281 0.891 5.281 0.891 5.156 c 0.891 4.941 l 0.703 5.051
 l 0.594 5.109 0.504 4.949 0.609 4.887 c 0.797 4.781 l 0.609 4.676 l 0.504
 4.613 0.594 4.453 0.703 4.512 c 0.891 4.617 l 0.891 4.402 l 0.891 4.406
 l 0.891 4.355 0.934 4.312 0.984 4.312 c 2.016 5.062 m 2.066 5.062 2.109
 5.105 2.109 5.156 c 2.109 5.371 l 2.297 5.262 l 2.406 5.203 2.496 5.363
 2.391 5.426 c 2.203 5.531 l 2.391 5.637 l 2.496 5.699 2.406 5.859 2.297
 5.801 c 2.109 5.695 l 2.109 5.91 l 2.109 5.906 l 2.109 6.031 1.922 6.031
 1.922 5.906 c 1.922 5.691 l 1.734 5.801 l 1.625 5.859 1.535 5.699 1.641
 5.637 c 1.828 5.531 l 1.641 5.426 l 1.535 5.363 1.625 5.203 1.734 5.262
 c 1.922 5.367 l 1.922 5.152 l 1.922 5.156 l 1.922 5.105 1.965 5.062 2.016
 5.062 c 4.078 5.062 m 4.129 5.062 4.172 5.105 4.172 5.156 c 4.172 5.371
 l 4.359 5.262 l 4.469 5.203 4.559 5.363 4.453 5.426 c 4.266 5.531 l 4.453
 5.637 l 4.559 5.699 4.469 5.859 4.359 5.801 c 4.172 5.695 l 4.172 5.91 
l 4.172 5.906 l 4.172 6.031 3.984 6.031 3.984 5.906 c 3.984 5.691 l 3.797
 5.801 l 3.688 5.859 3.598 5.699 3.703 5.637 c 3.891 5.531 l 3.703 5.426
 l 3.598 5.363 3.688 5.203 3.797 5.262 c 3.984 5.367 l 3.984 5.152 l 3.984
 5.156 l 3.984 5.105 4.027 5.062 4.078 5.062 c 3.047 4.312 m 3.098 4.312
 3.141 4.355 3.141 4.406 c 3.141 4.621 l 3.328 4.512 l 3.438 4.453 3.527
 4.613 3.422 4.676 c 3.234 4.781 l 3.422 4.887 l 3.527 4.949 3.438 5.109
 3.328 5.051 c 3.141 4.945 l 3.141 5.16 l 3.141 5.156 l 3.141 5.281 2.953
 5.281 2.953 5.156 c 2.953 4.941 l 2.766 5.051 l 2.656 5.109 2.566 4.949
 2.672 4.887 c 2.859 4.781 l 2.672 4.676 l 2.566 4.613 2.656 4.453 2.766
 4.512 c 2.953 4.617 l 2.953 4.402 l 2.953 4.406 l 2.953 4.355 2.996 4.312
 3.047 4.312 c 5.109 4.312 m 5.16 4.312 5.203 4.355 5.203 4.406 c 5.203 
4.621 l 5.391 4.512 l 5.5 4.453 5.59 4.613 5.484 4.676 c 5.297 4.781 l 5.484
 4.887 l 5.59 4.949 5.5 5.109 5.391 5.051 c 5.203 4.945 l 5.203 5.16 l 5.203
 5.156 l 5.203 5.281 5.016 5.281 5.016 5.156 c 5.016 4.941 l 4.828 5.051
 l 4.719 5.109 4.629 4.949 4.734 4.887 c 4.922 4.781 l 4.734 4.676 l 4.629
 4.613 4.719 4.453 4.828 4.512 c 5.016 4.617 l 5.016 4.402 l 5.016 4.406
 l 5.016 4.355 5.059 4.312 5.109 4.312 c f
Q Q
showpage
%%Trailer
%%EOF
