%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 107 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 107 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 107 1536 1429 rectclip
1 0 0 -1 0 1536 cm q
0 g
881.855 460.512 m 939.652 449.801 991.242 417.578 1026.223 370.34 c 1061.207
 323.102 1076.98 264.359 1070.367 205.949 c 1063.758 147.539 1035.25 93.809
 990.594 55.586 c 945.938 17.363 888.449 -2.512 829.723 -0.031 c 770.992
 2.449 715.387 27.098 674.109 68.949 c 632.836 110.805 608.961 166.746 607.297
 225.504 c 720.387 225.504 l 809.57 225.504 881.859 297.793 881.859 386.977
 c h
469.535 1203.359 m 720.383 1203.359 l 809.566 1203.359 881.855 1131.07 
881.855 1041.887 c 881.855 535.68 l 1149.023 535.68 l 1166.812 536.133 1183.699
 543.625 1195.973 556.512 c 1208.246 569.395 1214.91 586.625 1214.496 604.414
 c 1214.496 1016.641 l 1216.969 1123.375 1176.98 1226.73 1103.305 1304.004
 c 1029.633 1381.277 928.301 1426.152 821.566 1428.77 c 666.238 1424.93 
533.566 1333.73 469.535 1203.168 c h
1500.289 303.648 m 1500.289 361.078 1469.648 414.148 1419.91 442.863 c 
1370.176 471.578 1308.898 471.578 1259.16 442.863 c 1209.422 414.148 1178.785
 361.078 1178.785 303.648 c 1178.785 246.219 1209.422 193.148 1259.16 164.434
 c 1308.898 135.719 1370.176 135.719 1419.91 164.434 c 1469.648 193.148 
1500.289 246.219 1500.289 303.648 c 1285.441 1214.496 m 1273.922 1214.305
 l 1299.531 1151.25 1311.977 1083.625 1310.496 1015.586 c 1310.496 605.375
 l 1310.867 581.398 1305.949 557.637 1296.098 535.777 c 1468.129 535.777
 l 1505.57 535.777 1536 566.211 1536 603.648 c 1536 965.09 l 1535.949 1031.219
 1509.656 1094.629 1462.895 1141.391 c 1416.133 1188.152 1352.723 1214.445
 1286.594 1214.496 c h
1285.441 1214.496 m f
65.473 321.504 m 720.383 321.504 l 756.574 321.504 785.855 350.785 785.855
 386.977 c 785.855 1041.887 l 785.906 1059.27 779.027 1075.949 766.734 1088.238
 c 754.445 1100.531 737.766 1107.41 720.383 1107.359 c 65.473 1107.359 l
 48.094 1107.41 31.41 1100.531 19.121 1088.238 c 6.832 1075.949 -0.051 1059.27
 0 1041.887 c 0 386.879 l 0 350.688 29.281 321.406 65.473 321.406 c h
565.25 570.719 m 565.25 501.598 l 220.609 501.598 l 220.609 570.719 l 350.883
 570.719 l 350.879 927.359 l 434.398 927.359 l 434.398 570.719 l h
565.25 570.719 m f
Q Q
showpage
%%Trailer
%%EOF
