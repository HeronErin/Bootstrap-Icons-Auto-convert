%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 26 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 26 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 26 384 358 rectclip
1 0 0 -1 0 384 cm q
0 g
220.465 115.129 m 234.914 112.449 247.809 104.395 256.555 92.586 c 265.301
 80.773 269.246 66.09 267.594 51.488 c 265.938 36.887 258.812 23.453 247.648
 13.898 c 236.484 4.34 222.113 -0.629 207.43 -0.008 c 192.746 0.613 178.848
 6.773 168.527 17.238 c 158.211 27.699 152.238 41.688 151.824 56.375 c 180.098
 56.375 l 202.395 56.375 220.465 74.445 220.465 96.742 c h
117.387 300.84 m 180.098 300.84 l 202.395 300.84 220.465 282.77 220.465
 260.473 c 220.465 133.922 l 287.258 133.922 l 291.703 134.035 295.926 135.906
 298.992 139.129 c 302.062 142.348 303.727 146.656 303.625 151.105 c 303.625
 254.16 l 304.242 280.844 294.246 306.684 275.828 326 c 257.406 345.32 232.074
 356.539 205.391 357.191 c 166.559 356.23 133.391 333.43 117.383 300.793
 c h
375.074 75.91 m 375.07 75.91 l 375.07 90.27 367.414 103.535 354.977 110.715
 c 342.543 117.895 327.223 117.895 314.789 110.715 c 302.355 103.535 294.695
 90.27 294.695 75.91 c 294.695 61.555 302.355 48.285 314.789 41.109 c 327.223
 33.93 342.543 33.93 354.977 41.109 c 367.414 48.285 375.07 61.555 375.07
 75.91 c 321.359 303.621 m 318.48 303.574 l 324.883 287.812 327.996 270.906
 327.625 253.895 c 327.625 151.344 l 327.719 145.352 326.488 139.41 324.023
 133.945 c 367.031 133.945 l 376.391 133.945 384 141.555 384 150.914 c 384
 241.273 l 383.988 257.805 377.414 273.656 365.723 285.348 c 354.031 297.039
 338.18 303.609 321.648 303.625 c h
321.359 303.621 m f
16.367 80.375 m 180.094 80.375 l 189.141 80.375 196.461 87.695 196.461 
96.742 c 196.461 260.469 l 196.465 260.473 l 196.477 264.816 194.758 268.988
 191.684 272.059 c 188.613 275.133 184.441 276.852 180.098 276.84 c 16.367
 276.84 l 12.023 276.852 7.852 275.133 4.781 272.059 c 1.707 268.988 -0.012
 264.816 0 260.473 c 0 96.719 l 0 87.672 7.32 80.352 16.367 80.352 c h
141.312 142.68 m 141.312 125.398 l 55.152 125.398 l 55.152 142.68 l 87.719
 142.68 l 87.719 231.84 l 108.598 231.84 l 108.602 142.68 l h
141.312 142.68 m f
Q Q
showpage
%%Trailer
%%EOF
