%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 53 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 53 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 53 768 715 rectclip
1 0 0 -1 0 768 cm q
0 g
440.93 230.258 m 469.828 224.902 495.621 208.789 513.113 185.168 c 530.602
 161.551 538.488 132.18 535.184 102.973 c 531.879 73.77 517.625 46.906 495.297
 27.793 c 472.969 8.68 444.227 -1.254 414.859 -0.016 c 385.496 1.223 357.691
 13.551 337.055 34.477 c 316.418 55.402 304.48 83.375 303.648 112.754 c 
360.191 112.754 l 404.785 112.754 440.926 148.898 440.926 193.488 c h
234.77 601.684 m 360.195 601.684 l 404.789 601.684 440.93 565.539 440.93
 520.949 c 440.93 267.84 l 574.516 267.84 l 574.512 267.84 l 583.406 268.066
 591.848 271.812 597.988 278.254 c 604.125 284.699 607.453 293.312 607.246
 302.207 c 607.246 508.32 l 608.484 561.688 588.488 613.367 551.652 652.004
 c 514.816 690.641 464.152 713.074 410.785 714.383 c 333.121 712.461 266.785
 666.863 234.77 601.582 c h
750.145 151.828 m 750.145 151.824 l 750.145 180.539 734.824 207.074 709.957
 221.434 c 685.086 235.789 654.449 235.789 629.578 221.434 c 604.711 207.074
 589.391 180.539 589.391 151.824 c 589.391 123.109 604.711 96.574 629.578
 82.215 c 654.449 67.859 685.086 67.859 709.957 82.215 c 734.824 96.574 
750.145 123.109 750.145 151.824 c 642.719 607.25 m 636.957 607.152 l 636.961
 607.152 l 649.766 575.625 655.988 541.812 655.246 507.793 c 655.246 302.688
 l 655.434 290.699 652.977 278.816 648.047 267.887 c 734.062 267.887 l 752.781
 267.887 768 283.102 768 301.824 c 768 482.543 l 767.973 515.609 754.828
 547.312 731.445 570.695 c 708.066 594.074 676.363 607.223 643.297 607.246
 c h
642.719 607.25 m f
32.734 160.754 m 360.191 160.754 l 378.289 160.754 392.926 175.395 392.926
 193.488 c 392.926 520.945 l 392.93 520.945 l 392.953 529.633 389.512 537.977
 383.367 544.121 c 377.223 550.266 368.883 553.707 360.191 553.68 c 32.734
 553.68 l 24.047 553.707 15.703 550.266 9.559 544.121 c 3.414 537.977 -0.027
 529.633 0 520.945 c 0 193.441 l 0 175.344 14.641 160.707 32.734 160.707
 c h
282.621 285.363 m 282.621 250.805 l 110.301 250.805 l 110.301 285.363 l
 175.438 285.363 l 175.441 463.68 l 217.203 463.68 l 217.199 285.359 l h
282.621 285.363 m f
Q Q
showpage
%%Trailer
%%EOF
