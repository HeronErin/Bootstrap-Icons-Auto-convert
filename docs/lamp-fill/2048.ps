%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 191 0 1345 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 191 0 1345 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 191 0 1154 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
483.84 29.09 m 487.543 20.449 493.703 13.086 501.555 7.914 c 509.402 2.742
 518.602 -0.008 528 0 c 1008 0 l 1027.199 0 1044.48 11.52 1052.16 29.09 
c 1340.16 701.09 l 1345.848 714.402 1345.223 729.57 1338.461 742.371 c 1331.695
 755.172 1319.516 764.238 1305.312 767.039 c 1305.121 767.039 l 1290.723
 769.855 1276.32 772.445 1261.922 774.816 c 1114.43 798.918 965.418 812.551
 816 815.617 c 816 1296 l 816 1313.148 806.852 1328.996 792 1337.57 c 777.148
 1346.145 758.852 1346.145 744 1337.57 c 729.148 1328.996 720 1313.148 720
 1296 c 720 815.52 l 570.582 812.453 421.57 798.82 274.078 774.719 c 259.68
 772.414 245.277 769.855 230.879 767.039 c 230.59 767.039 l 230.594 767.039
 l 216.379 764.219 204.203 755.133 197.457 742.309 c 190.707 729.484 190.113
 714.301 195.84 700.992 c 483.84 28.992 l h
483.84 29.09 m f*
623.328 1207.105 m 625.41 1219.656 622.422 1232.52 615.023 1242.871 c 607.625
 1253.223 596.422 1260.211 583.871 1262.305 c 515.52 1273.633 460.992 1290.625
 424.992 1309.633 c 411.75 1315.957 399.723 1324.57 389.473 1335.07 c 387.449
 1337.203 385.766 1339.633 384.48 1342.273 c 384.383 1342.656 l 384 1343.617
 l 384 1344 l 384.191 1344.77 l 385.727 1347.938 l 389.492 1353.512 394.203
 1358.387 399.648 1362.336 c 415.488 1374.816 441.41 1388.258 477.695 1400.258
 c 549.793 1424.258 652.414 1440 768 1440 c 883.586 1440 986.207 1424.352
 1058.305 1400.258 c 1094.594 1388.16 1120.512 1374.816 1136.352 1362.336
 c 1141.832 1358.395 1146.574 1353.52 1150.367 1347.938 c 1151.809 1344.77
 l 1152 1344 l 1152 1343.617 l 1150.707 1340.434 1148.852 1337.508 1146.527
 1334.977 c 1136.27 1324.508 1124.246 1315.93 1111.008 1309.633 c 1074.91
 1290.625 1020.48 1273.633 952.129 1262.305 c 939.266 1260.562 927.656 1253.684
 919.949 1243.234 c 912.242 1232.789 909.094 1219.668 911.223 1206.863 c
 913.355 1194.059 920.578 1182.66 931.254 1175.273 c 941.926 1167.883 955.137
 1165.133 967.871 1167.648 c 1041.793 1179.84 1107.262 1199.137 1155.742
 1224.672 c 1200 1248 1248 1286.398 1248 1344 c 1248 1384.895 1223.039 1416.191
 1195.777 1437.793 c 1167.938 1459.68 1130.496 1477.441 1088.641 1491.359
 c 1004.352 1519.488 890.977 1536 768 1536 c 645.023 1536 531.648 1519.488
 447.359 1491.359 c 405.504 1477.438 368.062 1459.68 340.223 1437.793 c 
312.961 1416.191 288 1384.895 288 1344 c 288 1286.496 336 1248 380.258 1224.672
 c 428.738 1199.137 494.211 1179.84 568.129 1167.648 c 580.68 1165.566 593.543
 1168.551 603.895 1175.949 c 614.246 1183.348 621.234 1194.555 623.328 1207.105
 c f
Q Q
showpage
%%Trailer
%%EOF
