%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 11 0 85 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 11 0 85 96
96 96 cairo_set_page_size
%%EndPageSetup
q 11 0 74 96 rectclip
1 0 0 -1 0 96 cm q
0 g
30.238 1.816 m 30.715 0.715 31.801 0 33 0 c 63 0 l 64.199 0 65.281 0.719
 65.762 1.816 c 83.762 43.816 l 84.117 44.648 84.078 45.598 83.652 46.398
 c 83.23 47.199 82.469 47.766 81.582 47.941 c 81.57 47.941 l 80.672 48.117
 79.77 48.281 78.871 48.426 c 69.652 49.934 60.34 50.785 51 50.977 c 51 
81 l 51 82.656 49.656 84 48 84 c 46.344 84 45 82.656 45 81 c 45 50.969 l
 35.66 50.777 26.348 49.926 17.129 48.422 c 16.23 48.277 15.328 48.117 14.43
 47.941 c 14.41 47.941 l 13.523 47.766 12.762 47.195 12.34 46.395 c 11.918
 45.594 11.883 44.645 12.238 43.812 c 30.238 1.812 l h
30.238 1.816 m f*
38.957 75.445 m 39.23 77.078 38.125 78.621 36.492 78.895 c 32.219 79.602
 28.812 80.664 26.562 81.852 c 25.734 82.246 24.984 82.785 24.344 83.441
 c 24.215 83.574 24.109 83.727 24.031 83.891 c 24.023 83.914 l 24 83.973
 l 24 84 l 24.012 84.047 l 24.109 84.246 l 24.344 84.594 24.637 84.898 24.977
 85.145 c 25.965 85.926 27.586 86.766 29.855 87.516 c 34.363 89.016 40.777
 90 48 90 c 55.223 90 61.637 89.023 66.145 87.516 c 68.414 86.758 70.031
 85.926 71.023 85.145 c 71.363 84.898 71.66 84.594 71.898 84.246 c 71.988
 84.047 l 72 84 l 72 83.977 l 71.918 83.777 71.805 83.594 71.656 83.438 
c 71.016 82.781 70.266 82.246 69.438 81.852 c 67.18 80.664 63.781 79.602
 59.508 78.895 c 58.703 78.785 57.977 78.355 57.496 77.703 c 57.016 77.051
 56.82 76.23 56.953 75.43 c 57.086 74.629 57.535 73.918 58.203 73.453 c 
58.871 72.992 59.695 72.82 60.492 72.977 c 65.113 73.738 69.203 74.945 72.234
 76.539 c 75 78 78 80.398 78 84 c 78 86.555 76.441 88.512 74.734 89.863 
c 72.996 91.23 70.656 92.34 68.039 93.211 c 62.77 94.969 55.684 96 48 96
 c 40.312 96 33.227 94.969 27.961 93.211 c 25.344 92.34 23.004 91.23 21.266
 89.863 c 19.559 88.512 18 86.555 18 84 c 18 80.406 21 78 23.766 76.543 
c 26.797 74.945 30.887 73.742 35.508 72.98 c 35.508 72.977 l 37.141 72.707
 38.688 73.812 38.957 75.445 c f
Q Q
showpage
%%Trailer
%%EOF
