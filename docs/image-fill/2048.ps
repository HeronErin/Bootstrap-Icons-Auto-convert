%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
0.191 288 m 0.191 237.078 20.422 188.242 56.426 152.234 c 92.434 116.227
 141.27 96 192.191 96 c 1344.191 96 l 1377.895 96 1411.004 104.871 1440.191
 121.723 c 1469.379 138.574 1493.617 162.812 1510.469 192 c 1527.32 221.188
 1536.191 254.297 1536.191 288 c 1536.191 1248 l 1536.191 1281.703 1527.32
 1314.812 1510.469 1344 c 1493.617 1373.188 1469.379 1397.426 1440.191 1414.277
 c 1411.004 1431.129 1377.895 1440 1344.191 1440 c 192.191 1440 l 141.27
 1440 92.434 1419.773 56.426 1383.766 c 20.422 1347.758 0.191 1298.922 0.191
 1248 c h
96.191 1152 m 96.191 1248 l 96.191 1273.461 106.305 1297.879 124.309 1315.883
 c 142.312 1333.887 166.73 1344 192.191 1344 c 1344.191 1344 l 1369.652 
1344 1394.07 1333.887 1412.074 1315.883 c 1430.078 1297.879 1440.191 1273.461
 1440.191 1248 c 1440.191 912 l 1077.598 725.09 l 1077.602 725.09 l 1068.598
 720.578 1058.406 719.016 1048.465 720.617 c 1038.523 722.219 1029.336 726.906
 1022.207 734.016 c 666.047 1090.176 l 410.688 920.062 l 401.469 913.926
 390.41 911.164 379.387 912.25 c 368.363 913.336 358.055 918.199 350.207
 926.016 c h
576.191 528 m 576.191 476.555 548.746 429.016 504.191 403.293 c 459.637
 377.57 404.746 377.57 360.191 403.293 c 315.637 429.016 288.191 476.555
 288.191 528 c 288.191 579.445 315.637 626.984 360.191 652.707 c 404.746
 678.43 459.637 678.43 504.191 652.707 c 548.746 626.984 576.191 579.445
 576.191 528 c f
Q Q
showpage
%%Trailer
%%EOF
