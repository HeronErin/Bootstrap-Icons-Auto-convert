%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
0.098 144 m 0.098 118.539 10.211 94.121 28.215 76.117 c 46.219 58.113 70.637
 48 96.098 48 c 672.098 48 l 697.559 48 721.977 58.113 739.977 76.117 c 
757.98 94.121 768.098 118.539 768.098 144 c 768.098 624 l 768.098 649.461
 757.98 673.879 739.977 691.883 c 721.977 709.887 697.559 720 672.098 720
 c 96.098 720 l 70.637 720 46.219 709.887 28.215 691.883 c 10.211 673.879
 0.098 649.461 0.098 624 c h
48.098 576 m 48.098 624 l 48.098 636.73 53.152 648.938 62.156 657.941 c
 71.156 666.941 83.367 672 96.098 672 c 672.098 672 l 684.828 672 697.035
 666.941 706.039 657.941 c 715.039 648.938 720.098 636.73 720.098 624 c 
720.098 456 l 538.801 362.543 l 534.297 360.289 529.203 359.508 524.23 360.309
 c 519.262 361.109 514.668 363.453 511.105 367.008 c 333.027 545.086 l 205.348
 460.031 l 205.344 460.031 l 200.734 456.961 195.203 455.582 189.691 456.125
 c 184.18 456.668 179.027 459.098 175.105 463.008 c h
288.098 264 m 288.098 238.277 274.371 214.508 252.098 201.645 c 229.82 
188.785 202.371 188.785 180.098 201.645 c 157.82 214.508 144.098 238.277
 144.098 264 c 144.098 289.723 157.82 313.492 180.098 326.355 c 202.371 
339.215 229.82 339.215 252.098 326.355 c 274.371 313.492 288.098 289.723
 288.098 264 c f
Q Q
showpage
%%Trailer
%%EOF
