%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 384 1248 1152
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 384 1248 1152
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 384 960 768 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 432 m 288 414.852 297.148 399.004 312 390.43 c 326.852 381.855 345.148
 381.855 360 390.43 c 374.852 399.004 384 414.852 384 432 c 384 1104 l 384
 1121.148 374.852 1136.996 360 1145.57 c 345.148 1154.145 326.852 1154.145
 312 1145.57 c 297.148 1136.996 288 1121.148 288 1104 c h
480 432 m 480 414.852 489.148 399.004 504 390.43 c 518.852 381.855 537.148
 381.855 552 390.43 c 566.852 399.004 576 414.852 576 432 c 576 1104 l 576
 1121.148 566.852 1136.996 552 1145.57 c 537.148 1154.145 518.852 1154.145
 504 1145.57 c 489.148 1136.996 480 1121.148 480 1104 c h
672 432 m 672 414.852 681.148 399.004 696 390.43 c 710.852 381.855 729.148
 381.855 744 390.43 c 758.852 399.004 768 414.852 768 432 c 768 1104 l 768
 1121.148 758.852 1136.996 744 1145.57 c 729.148 1154.145 710.852 1154.145
 696 1145.57 c 681.148 1136.996 672 1121.148 672 1104 c h
864 432 m 864 419.27 869.059 407.062 878.059 398.059 c 887.062 389.059 
899.27 384 912 384 c 1008 384 l 1020.73 384 1032.938 389.059 1041.941 398.059
 c 1050.941 407.062 1056 419.27 1056 432 c 1056 1104 l 1056 1116.73 1050.941
 1128.938 1041.941 1137.941 c 1032.938 1146.941 1020.73 1152 1008 1152 c
 912 1152 l 899.27 1152 887.062 1146.941 878.059 1137.941 c 869.059 1128.938
 864 1116.73 864 1104 c h
1152 432 m 1152 414.852 1161.148 399.004 1176 390.43 c 1190.852 381.855
 1209.148 381.855 1224 390.43 c 1238.852 399.004 1248 414.852 1248 432 c
 1248 1104 l 1248 1121.148 1238.852 1136.996 1224 1145.57 c 1209.148 1154.145
 1190.852 1154.145 1176 1145.57 c 1161.148 1136.996 1152 1121.148 1152 1104
 c h
1152 432 m f
Q Q
showpage
%%Trailer
%%EOF
