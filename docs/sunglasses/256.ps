%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 60 192 132
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 60 192 132
192 192 cairo_set_page_size
%%EndPageSetup
q 0 60 192 72 rectclip
1 0 0 -1 0 192 cm q
0 g
36 60 m 29.637 60 23.531 62.527 19.031 67.031 c 14.527 71.531 12 77.637
 12 84 c 12 90 l 6 90 l 2.688 90 0 92.688 0 96 c 0 99.312 2.688 102 6 102
 c 12 102 l 12 108 l 12 114.363 14.527 120.469 19.031 124.969 c 23.531 129.473
 29.637 132 36 132 c 48 132 l 57.547 132 66.703 128.207 73.457 121.457 c
 80.207 114.703 84 105.547 84 96 c 84 89.371 89.371 84 96 84 c 102.629 84
 108 89.371 108 96 c 108 105.547 111.793 114.703 118.543 121.457 c 125.297
 128.207 134.453 132 144 132 c 156 132 l 162.363 132 168.469 129.473 172.969
 124.969 c 177.473 120.469 180 114.363 180 108 c 180 102 l 186 102 l 189.312
 102 192 99.312 192 96 c 192 92.688 189.312 90 186 90 c 180 90 l 180 84 
l 180 77.637 177.473 71.531 172.969 67.031 c 168.469 62.527 162.363 60 156
 60 c 132 60 l 127.023 60 122.172 61.543 118.113 64.418 c 114.055 67.297
 110.992 71.363 109.344 76.055 c 105.395 73.414 100.75 72 96 72 c 91.25 
72 86.605 73.414 82.656 76.055 c 81.008 71.363 77.945 67.297 73.887 64.418
 c 69.828 61.543 64.977 60 60 60 c h
36 72 m 47.293 72 l 50.461 72 51.469 76.273 48.637 77.688 c 43.152 80.422
 l 43.152 80.426 l 38.512 82.746 34.746 86.512 32.426 91.152 c 29.691 96.637
 l 28.273 99.469 24 98.461 24 95.281 c 24 84 l 24 77.371 29.371 72 36 72
 c f
Q Q
showpage
%%Trailer
%%EOF
