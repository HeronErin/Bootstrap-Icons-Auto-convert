%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 240 768 528
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 240 768 528
768 768 cairo_set_page_size
%%EndPageSetup
q 0 240 768 288 rectclip
1 0 0 -1 0 768 cm q
0 g
144 240 m 118.539 240 94.121 250.113 76.117 268.117 c 58.113 286.121 48
 310.539 48 336 c 48 360 l 24 360 l 15.426 360 7.504 364.574 3.215 372 c
 -1.07 379.426 -1.07 388.574 3.215 396 c 7.504 403.426 15.426 408 24 408
 c 48 408 l 48 432 l 48 457.461 58.113 481.879 76.117 499.883 c 94.121 517.887
 118.539 528 144 528 c 192 528 l 230.191 528 266.816 512.828 293.824 485.824
 c 320.828 458.816 336 422.191 336 384 c 336 366.852 345.148 351.004 360
 342.43 c 374.852 333.855 393.148 333.855 408 342.43 c 422.852 351.004 432
 366.852 432 384 c 432 422.191 447.172 458.816 474.176 485.824 c 501.184
 512.828 537.809 528 576 528 c 624 528 l 649.461 528 673.879 517.887 691.883
 499.883 c 709.887 481.879 720 457.461 720 432 c 720 408 l 744 408 l 752.574
 408 760.496 403.426 764.785 396 c 769.07 388.574 769.07 379.426 764.785
 372 c 760.496 364.574 752.574 360 744 360 c 720 360 l 720 336 l 720 310.539
 709.887 286.121 691.883 268.117 c 673.879 250.113 649.461 240 624 240 c
 528 240 l 508.102 239.992 488.691 246.168 472.457 257.676 c 456.223 269.18
 443.961 285.445 437.375 304.223 c 421.582 293.652 403.004 288.004 384 288
 c 364.996 288.004 346.418 293.652 330.625 304.223 c 324.039 285.445 311.777
 269.18 295.543 257.676 c 279.309 246.168 259.898 239.992 240 240 c h
144 288 m 189.168 288 l 201.84 288 205.871 305.09 194.543 310.754 c 172.605
 321.699 l 172.609 321.695 l 154.039 330.984 138.984 346.039 129.695 364.609
 c 118.75 386.547 l 113.09 397.871 96 393.84 96 381.121 c 96 336 l 96 323.27
 101.059 311.062 110.059 302.059 c 119.062 293.059 131.27 288 144 288 c f
Q Q
showpage
%%Trailer
%%EOF
