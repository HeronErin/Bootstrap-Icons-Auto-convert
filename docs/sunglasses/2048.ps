%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 480 1536 1056
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 480 1536 1056
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 480 1536 576 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 480 m 237.078 480 188.242 500.227 152.234 536.234 c 116.227 572.242
 96 621.078 96 672 c 96 720 l 48 720 l 30.852 720 15.004 729.148 6.43 744
 c -2.145 758.852 -2.145 777.148 6.43 792 c 15.004 806.852 30.852 816 48
 816 c 96 816 l 96 864 l 96 897.703 104.871 930.812 121.723 960 c 138.574
 989.188 162.812 1013.426 192 1030.277 c 221.188 1047.129 254.297 1056 288
 1056 c 384 1056 l 460.383 1056 533.637 1025.656 587.648 971.648 c 641.656
 917.637 672 844.383 672 768 c 672 733.703 690.297 702.012 720 684.863 c
 749.703 667.711 786.297 667.711 816 684.863 c 845.703 702.012 864 733.703
 864 768 c 864 844.383 894.344 917.637 948.352 971.648 c 1002.363 1025.656
 1075.617 1056 1152 1056 c 1248 1056 l 1281.703 1056 1314.812 1047.129 1344
 1030.277 c 1373.188 1013.426 1397.426 989.188 1414.277 960 c 1431.129 930.812
 1440 897.703 1440 864 c 1440 816 l 1488 816 l 1505.148 816 1520.996 806.852
 1529.57 792 c 1538.145 777.148 1538.145 758.852 1529.57 744 c 1520.996 
729.148 1505.148 720 1488 720 c 1440 720 l 1440 672 l 1440 638.297 1431.129
 605.188 1414.277 576 c 1397.426 546.812 1373.188 522.574 1344 505.723 c
 1314.812 488.871 1281.703 480 1248 480 c 1056 480 l 1016.203 479.984 977.383
 492.34 944.914 515.348 c 912.441 538.359 887.926 570.895 874.754 608.449
 c 843.164 587.305 806.012 576.012 768 576 c 729.988 576.012 692.836 587.305
 661.246 608.449 c 648.074 570.895 623.559 538.359 591.086 515.348 c 558.617
 492.34 519.797 479.984 480 480 c h
288 576 m 378.336 576 l 403.68 576 411.742 610.176 389.09 621.504 c 345.219
 643.391 l 345.215 643.391 l 308.082 661.969 277.969 692.082 259.391 729.215
 c 237.504 773.086 l 226.176 795.742 192 787.68 192 762.238 c 192 672 l 
192 646.539 202.113 622.121 220.117 604.117 c 238.121 586.113 262.539 576
 288 576 c f
Q Q
showpage
%%Trailer
%%EOF
