%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 120 384 264
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 120 384 264
384 384 cairo_set_page_size
%%EndPageSetup
q 0 120 384 144 rectclip
1 0 0 -1 0 384 cm q
0 g
72 120 m 59.27 120 47.062 125.059 38.059 134.059 c 29.059 143.062 24 155.27
 24 168 c 24 180 l 12 180 l 5.371 180 0 185.371 0 192 c 0 198.629 5.371 
204 12 204 c 24 204 l 24 216 l 24 228.73 29.059 240.938 38.059 249.941 c
 47.062 258.941 59.27 264 72 264 c 96 264 l 115.094 264 133.41 256.414 146.91
 242.91 c 160.414 229.41 168 211.094 168 192 c 168 183.426 172.574 175.504
 180 171.215 c 187.426 166.93 196.574 166.93 204 171.215 c 211.426 175.504
 216 183.426 216 192 c 216 211.094 223.586 229.41 237.09 242.91 c 250.59
 256.414 268.906 264 288 264 c 312 264 l 324.73 264 336.938 258.941 345.941
 249.941 c 354.941 240.938 360 228.73 360 216 c 360 204 l 372 204 l 378.629
 204 384 198.629 384 192 c 384 185.371 378.629 180 372 180 c 360 180 l 360
 168 l 360 155.27 354.941 143.062 345.941 134.059 c 336.938 125.059 324.73
 120 312 120 c 264 120 l 254.051 119.996 244.348 123.086 236.227 128.836
 c 228.109 134.59 221.98 142.723 218.688 152.113 c 210.793 146.824 201.504
 144.004 192 144 c 182.496 144.004 173.207 146.824 165.312 152.113 c 162.02
 142.723 155.891 134.59 147.773 128.836 c 139.652 123.086 129.949 119.996
 120 120 c h
72 144 m 94.586 144 l 100.922 144 102.938 152.543 97.273 155.375 c 86.305
 160.848 l 77.02 165.492 69.492 173.02 64.848 182.305 c 59.375 193.273 l
 56.543 198.938 48 196.922 48 190.559 c 48 168 l 48 161.637 50.527 155.531
 55.031 151.031 c 59.531 146.527 65.637 144 72 144 c f
Q Q
showpage
%%Trailer
%%EOF
