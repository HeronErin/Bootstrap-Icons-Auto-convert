%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 47 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 47 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 47 768 674 rectclip
1 0 0 -1 0 768 cm q
0 g
552 720 m 558.363 720 564.469 717.473 568.969 712.969 c 573.473 708.469
 576 702.363 576 696 c 576 129.938 l 727.008 280.992 l 733.078 287.062 741.926
 289.434 750.219 287.211 c 758.512 284.988 764.988 278.512 767.211 270.219
 c 769.434 261.926 767.062 253.078 760.992 247.008 c 568.992 55.008 l 564.488
 50.492 558.375 47.957 552 47.957 c 545.625 47.957 539.512 50.492 535.008
 55.008 c 343.008 247.008 l 336.938 253.078 334.566 261.926 336.789 270.219
 c 339.012 278.512 345.488 284.988 353.781 287.211 c 362.074 289.434 370.922
 287.062 376.992 280.992 c 528 129.938 l 528 696 l 528 702.363 530.527 708.469
 535.031 712.969 c 539.531 717.473 545.637 720 552 720 c 216 48 m 222.363
 48 228.469 50.527 232.969 55.031 c 237.473 59.531 240 65.637 240 72 c 240
 638.062 l 391.008 487.008 l 397.078 480.938 405.926 478.566 414.219 480.789
 c 422.512 483.012 428.988 489.488 431.211 497.781 c 433.434 506.074 431.062
 514.922 424.992 520.992 c 232.992 712.992 l 228.488 717.508 222.375 720.043
 216 720.043 c 209.625 720.043 203.512 717.508 199.008 712.992 c 7.008 520.992
 l 0.938 514.922 -1.434 506.074 0.789 497.781 c 3.012 489.488 9.488 483.012
 17.781 480.789 c 26.074 478.566 34.922 480.938 40.992 487.008 c 192 638.062
 l 192 72 l 192 65.637 194.527 59.531 199.031 55.031 c 203.531 50.527 209.637
 48 216 48 c f*
Q Q
showpage
%%Trailer
%%EOF
