%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
7.551 0.652 m 7.141 0.234 6.582 0 6 0 c 5.418 0 4.859 0.234 4.449 0.652
 c 3.984 1.129 l 3.316 1.121 l 2.73 1.117 2.172 1.344 1.758 1.758 c 1.344
 2.172 1.117 2.73 1.121 3.316 c 1.129 3.984 l 0.652 4.449 l 0.234 4.859 
0 5.418 0 6 c 0 6.582 0.234 7.141 0.652 7.551 c 1.129 8.016 l 1.121 8.684
 l 1.117 9.27 1.344 9.828 1.758 10.242 c 2.172 10.656 2.73 10.883 3.316 
10.879 c 3.984 10.871 l 4.449 11.348 l 4.859 11.766 5.418 12 6 12 c 6.582
 12 7.141 11.766 7.551 11.348 c 8.016 10.871 l 8.684 10.879 l 9.27 10.883
 9.828 10.656 10.242 10.242 c 10.656 9.828 10.883 9.27 10.879 8.684 c 10.871
 8.016 l 11.348 7.551 l 11.766 7.141 12 6.582 12 6 c 12 5.418 11.766 4.859
 11.348 4.449 c 10.871 3.984 l 10.879 3.316 l 10.883 2.73 10.656 2.172 10.242
 1.758 c 9.828 1.344 9.27 1.117 8.684 1.121 c 8.016 1.129 l h
6 3 m 6.402 3 6.715 3.348 6.676 3.746 c 6.414 6.375 l 6.395 6.59 6.215 
6.754 6 6.754 c 5.785 6.754 5.605 6.59 5.586 6.375 c 5.324 3.746 l 5.305
 3.555 5.367 3.367 5.496 3.223 c 5.625 3.082 5.809 3 6 3 c 6 7.5 m 6.414
 7.5 6.75 7.836 6.75 8.25 c 6.75 8.664 6.414 9 6 9 c 5.586 9 5.25 8.664 
5.25 8.25 c 5.25 7.836 5.586 7.5 6 7.5 c f
Q Q
showpage
%%Trailer
%%EOF
