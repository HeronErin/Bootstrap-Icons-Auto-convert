%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
483.215 41.762 m 457.113 15.051 421.348 -0.008 384 -0.008 c 346.652 -0.008
 310.887 15.051 284.785 41.762 c 254.93 72.387 l 212.211 71.859 l 212.207
 71.855 l 174.852 71.414 138.895 86.059 112.477 112.477 c 86.059 138.895
 71.414 174.852 71.855 212.207 c 72.336 254.926 l 41.809 284.781 l 41.809
 284.785 l 15.098 310.887 0.039 346.652 0.039 384 c 0.039 421.348 15.098
 457.113 41.809 483.215 c 72.383 513.07 l 71.855 555.789 l 71.855 555.793
 l 71.414 593.148 86.059 629.105 112.477 655.523 c 138.895 681.941 174.852
 696.586 212.207 696.145 c 254.926 695.664 l 284.781 726.191 l 284.785 726.191
 l 310.887 752.902 346.652 767.961 384 767.961 c 421.348 767.961 457.113
 752.902 483.215 726.191 c 513.07 695.617 l 555.789 696.145 l 555.793 696.145
 l 593.148 696.586 629.105 681.941 655.523 655.523 c 681.941 629.105 696.586
 593.148 696.145 555.793 c 695.664 513.074 l 726.191 483.219 l 726.191 483.215
 l 752.902 457.113 767.961 421.348 767.961 384 c 767.961 346.652 752.902
 310.887 726.191 284.785 c 695.617 254.93 l 696.145 212.211 l 696.145 212.207
 l 696.586 174.852 681.941 138.895 655.523 112.477 c 629.105 86.059 593.148
 71.414 555.793 71.855 c 513.074 72.336 l h
384 192 m 409.68 192 429.793 214.176 427.199 239.762 c 410.398 408.098 
l 409.641 416.996 404.449 424.91 396.59 429.156 c 388.734 433.398 379.266
 433.398 371.41 429.156 c 363.551 424.91 358.359 416.996 357.602 408.098
 c 340.801 239.762 l 339.578 227.551 343.578 215.398 351.809 206.301 c 360.039
 197.203 371.73 192.008 384 192 c 384.098 480 m 401.246 480 417.09 489.148
 425.664 504 c 434.238 518.852 434.238 537.148 425.664 552 c 417.09 566.852
 401.246 576 384.098 576 c 366.945 576 351.102 566.852 342.527 552 c 333.953
 537.148 333.953 518.852 342.527 504 c 351.102 489.148 366.945 480 384.098
 480 c f
Q Q
showpage
%%Trailer
%%EOF
