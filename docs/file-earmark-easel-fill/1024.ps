%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 360 m 240 353.637 242.527 347.531 247.031 343.031 c 251.531 338.527
 257.637 336 264 336 c 504 336 l 510.363 336 516.469 338.527 520.969 343.031
 c 525.473 347.531 528 353.637 528 360 c 528 456 l 528 462.363 525.473 468.469
 520.969 472.969 c 516.469 477.473 510.363 480 504 480 c 264 480 l 257.637
 480 251.531 477.473 247.031 472.969 c 242.527 468.469 240 462.363 240 456
 c h
240 360 m f
446.062 0 m 192 0 l 166.539 0 142.121 10.113 124.117 28.117 c 106.113 46.121
 96 70.539 96 96 c 96 672 l 96 697.461 106.113 721.879 124.117 739.883 c
 142.121 757.887 166.539 768 192 768 c 576 768 l 601.461 768 625.879 757.887
 643.883 739.883 c 661.887 721.879 672 697.461 672 672 c 672 225.938 l 671.996
 213.207 666.938 201 657.938 192 c 480 14.062 l 471 5.062 458.793 0.004 
446.062 0 c 456 168 m 456 72 l 600 216 l 504 216 l 491.27 216 479.062 210.941
 470.059 201.941 c 461.059 192.938 456 180.73 456 168 c 408 288 m 504 288
 l 523.094 288 541.41 295.586 554.91 309.09 c 568.414 322.59 576 340.906
 576 360 c 576 456 l 576 475.094 568.414 493.41 554.91 506.91 c 541.41 520.414
 523.094 528 504 528 c 481.297 528 l 502.754 592.414 l 505.094 600.441 503.09
 609.102 497.465 615.285 c 491.844 621.469 483.406 624.281 475.199 622.707
 c 466.988 621.137 460.191 615.406 457.246 607.586 c 430.703 528 l 408 528
 l 408 576 l 408 584.574 403.426 592.496 396 596.785 c 388.574 601.07 379.426
 601.07 372 596.785 c 364.574 592.496 360 584.574 360 576 c 360 528 l 337.297
 528 l 310.754 607.586 l 308.926 613.848 304.629 619.094 298.852 622.121
 c 293.074 625.148 286.312 625.695 280.121 623.633 c 273.934 621.57 268.852
 617.078 266.047 611.188 c 263.238 605.301 262.953 598.523 265.246 592.414
 c 286.703 528 l 264 528 l 244.906 528 226.59 520.414 213.09 506.91 c 199.586
 493.41 192 475.094 192 456 c 192 360 l 192 340.906 199.586 322.59 213.09
 309.09 c 226.59 295.586 244.906 288 264 288 c 360 288 l 360 279.426 364.574
 271.504 372 267.215 c 379.426 262.93 388.574 262.93 396 267.215 c 403.426
 271.504 408 279.426 408 288 c f
Q Q
showpage
%%Trailer
%%EOF
