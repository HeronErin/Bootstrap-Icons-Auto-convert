%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
120 180 m 120 173.371 125.371 168 132 168 c 252 168 l 255.184 168 258.234
 169.266 260.484 171.516 c 262.734 173.766 264 176.816 264 180 c 264 228
 l 264 231.184 262.734 234.234 260.484 236.484 c 258.234 238.734 255.184
 240 252 240 c 132 240 l 125.371 240 120 234.629 120 228 c h
120 180 m f
223.031 0 m 96 0 l 83.27 0 71.062 5.059 62.059 14.059 c 53.059 23.062 48
 35.27 48 48 c 48 336 l 48 348.73 53.059 360.938 62.059 369.941 c 71.062
 378.941 83.27 384 96 384 c 288 384 l 300.73 384 312.938 378.941 321.941
 369.941 c 330.941 360.938 336 348.73 336 336 c 336 112.969 l 336 106.602
 333.469 100.5 328.969 96 c 240 7.031 l 235.5 2.531 229.398 0 223.031 0 
c 228 84 m 228 36 l 300 108 l 252 108 l 245.637 108 239.531 105.473 235.031
 100.969 c 230.527 96.469 228 90.363 228 84 c 204 144 m 252 144 l 261.547
 144 270.703 147.793 277.457 154.543 c 284.207 161.297 288 170.453 288 180
 c 288 228 l 288 237.547 284.207 246.703 277.457 253.457 c 270.703 260.207
 261.547 264 252 264 c 240.648 264 l 251.375 296.207 l 253.184 302.398 249.77
 308.914 243.652 310.953 c 237.531 312.992 230.895 309.828 228.625 303.793
 c 215.352 264 l 204 264 l 204 288 l 204 294.629 198.629 300 192 300 c 185.371
 300 180 294.629 180 288 c 180 264 l 168.648 264 l 155.375 303.793 l 154.461
 306.922 152.312 309.547 149.426 311.062 c 146.535 312.574 143.156 312.848
 140.062 311.816 c 136.969 310.785 134.426 308.539 133.023 305.594 c 131.621
 302.648 131.477 299.262 132.625 296.207 c 143.352 264 l 132 264 l 122.453
 264 113.297 260.207 106.543 253.457 c 99.793 246.703 96 237.547 96 228 
c 96 180 l 96 170.453 99.793 161.297 106.543 154.543 c 113.297 147.793 122.453
 144 132 144 c 180 144 l 180 137.371 185.371 132 192 132 c 198.629 132 204
 137.371 204 144 c f
Q Q
showpage
%%Trailer
%%EOF
