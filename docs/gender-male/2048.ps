%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 95 95 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 95 95 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 95 95 1345 1345 rectclip
1 0 0 -1 0 1536 cm q
0 g
912 192 m 894.852 192 879.004 182.852 870.43 168 c 861.855 153.148 861.855
 134.852 870.43 120 c 879.004 105.148 894.852 96 912 96 c 1392 96 l 1404.73
 96 1416.938 101.059 1425.941 110.059 c 1434.941 119.062 1440 131.27 1440
 144 c 1440 624 l 1440 641.148 1430.852 656.996 1416 665.57 c 1401.148 674.145
 1382.852 674.145 1368 665.57 c 1353.148 656.996 1344 641.148 1344 624 c
 1344 259.871 l 947.617 656.258 l 1025.551 751.602 1063.855 873.254 1054.617
 996.051 c 1045.375 1118.848 989.293 1233.398 897.965 1316.004 c 806.641
 1398.613 687.059 1442.965 563.953 1439.879 c 440.848 1436.797 323.633 1386.52
 236.559 1299.441 c 149.48 1212.367 99.203 1095.152 96.121 972.047 c 93.035
 848.941 137.387 729.359 219.996 638.035 c 302.602 546.707 417.152 490.625
 539.949 481.383 c 662.746 472.145 784.398 510.449 879.742 588.383 c 1276.129
 192 l h
576 576 m 474.156 576 376.484 616.457 304.473 688.473 c 232.457 760.484
 192 858.156 192 960 c 192 1061.844 232.457 1159.516 304.473 1231.527 c 
376.484 1303.543 474.156 1344 576 1344 c 677.844 1344 775.516 1303.543 847.527
 1231.527 c 919.543 1159.516 960 1061.844 960 960 c 960 858.156 919.543 
760.484 847.527 688.473 c 775.516 616.457 677.844 576 576 576 c f*
Q Q
showpage
%%Trailer
%%EOF
