%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 11 0 384 367
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 11 0 384 367
384 384 cairo_set_page_size
%%EndPageSetup
q 11 0 373 367 rectclip
1 0 0 -1 0 384 cm q
0 g
123.938 336 m 360 336 l 352.824 331.223 346.633 322.727 341.281 312 c 319.68
 268.801 312 189.121 312 168 c 312 161.664 311.52 155.457 310.559 149.375
 c 288.047 171.887 l 288.527 188.879 291.816 223.582 299.016 257.809 c 302.879
 276.215 308.062 295.395 314.926 312 c 147.938 312 l h
257.883 98.16 m 257.879 98.16 l 244.859 85.879 228.668 77.484 211.129 73.922
 c 192 70.008 l 172.871 73.871 l 151.168 78.285 131.656 90.066 117.645 107.223
 c 103.637 124.379 95.988 145.852 96 168 c 96 183.07 92.785 220.727 84.984
 257.809 c 83.785 263.535 82.457 269.281 81 275.039 c 41.328 314.711 l 41.809
 313.832 42.281 312.926 42.742 312 c 64.297 268.801 72 189.121 72 168 c 
72 109.922 113.281 61.441 168.121 50.375 c 167.441 43.629 169.652 36.906
 174.203 31.879 c 178.754 26.848 185.219 23.98 192 23.98 c 198.781 23.98
 205.246 26.848 209.797 31.879 c 214.348 36.906 216.559 43.629 215.879 50.375
 c 238.488 54.934 258.789 65.855 274.848 81.191 c h
240 360 m 240 377.148 230.852 392.996 216 401.57 c 201.148 410.145 182.852
 410.145 168 401.57 c 153.148 392.996 144 377.148 144 360 c h
15 375 m 10.031 379.969 10.031 388.031 15 393 c 19.969 397.969 28.031 397.969
 33 393 c 387 39 l 391.969 34.031 391.969 25.969 387 21 c 382.031 16.031
 373.969 16.031 369 21 c h
15 375 m f
Q Q
showpage
%%Trailer
%%EOF
