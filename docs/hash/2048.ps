%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 384 255 1210 1297
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 384 255 1210 1297
1536 1536 cairo_set_page_size
%%EndPageSetup
q 384 255 826 1042 rectclip
1 0 0 -1 0 1536 cm q
0 g
805.441 1214.207 m 804.441 1219.914 803.957 1225.695 804 1231.488 c 804
 1260.77 824.16 1280.258 852 1280.258 c 877.535 1280.258 899.23 1263.746
 905.281 1234.465 c 958.465 974.977 l 1074.051 974.977 l 1114.465 974.977
 1133.281 952.512 1133.281 922.465 c 1133.281 892.512 1115.234 871.586 1074.051
 871.586 c 979.492 871.586 l 1029.027 629.281 l 1150.469 629.281 l 1191.75
 629.281 1209.797 607.488 1209.797 576.77 c 1209.797 546.723 1191.75 526.465
 1150.469 526.465 c 1050.055 526.465 l 1095.75 305.281 l 1095.742 305.281
 l 1096.688 300.082 1097.203 294.816 1097.281 289.535 c 1097.438 276.352
 1092.266 263.66 1082.945 254.336 c 1073.621 245.012 1060.93 239.844 1047.742
 240 c 1035.66 239.77 1023.875 243.77 1014.426 251.305 c 1004.977 258.844
 998.461 269.445 996 281.281 c 945.793 526.465 l 731.23 526.465 l 777.023
 305.281 l 777.793 301.441 778.465 293.953 778.465 289.539 c 778.465 289.535
 l 778.625 276.23 773.363 263.438 763.895 254.09 c 754.422 244.746 741.555
 239.66 728.258 240 c 716.301 239.949 704.699 244.031 695.41 251.551 c 686.121
 259.074 679.715 269.578 677.281 281.281 c 626.879 526.465 l 519.742 526.465
 l 478.461 526.465 460.512 547.586 460.512 577.535 c 460.512 607.488 478.465
 629.277 519.742 629.277 c 606.719 629.277 l 557.277 871.484 l 442.465 871.488
 l 402.051 871.488 384 892.512 384 922.465 c 384 952.418 402.047 974.977
 442.559 974.977 c 536.254 974.977 l 486.719 1214.207 l 485.949 1218.047
 485.277 1226.207 485.277 1231.488 c 485.277 1260.77 505.438 1280.258 533.277
 1280.258 c 558.719 1280.258 580.508 1263.746 586.461 1234.465 c 639.742
 974.977 l 854.973 974.977 l h
709.441 627.742 m 926.977 627.742 l 877.535 873.789 l 658.465 873.793 l
 709.535 627.746 l h
709.441 627.742 m f
Q Q
showpage
%%Trailer
%%EOF
