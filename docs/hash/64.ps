%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 12 7 38 41
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 12 7 38 41
48 48 cairo_set_page_size
%%EndPageSetup
q 12 7 26 34 rectclip
1 0 0 -1 0 48 cm q
0 g
25.172 37.945 m 25.141 38.121 25.125 38.305 25.125 38.484 c 25.125 39.398
 25.754 40.008 26.625 40.008 c 27.422 40.008 28.102 39.492 28.289 38.578
 c 29.949 30.469 l 33.562 30.469 l 34.824 30.469 35.414 29.766 35.414 28.828
 c 35.414 27.891 34.852 27.238 33.562 27.238 c 30.609 27.238 l 32.156 19.668
 l 35.953 19.668 l 37.242 19.668 37.809 18.988 37.809 18.027 c 37.809 17.09
 37.246 16.457 35.953 16.457 c 32.816 16.457 l 34.246 9.547 l 34.242 9.539
 l 34.273 9.379 34.289 9.215 34.289 9.047 c 34.293 8.637 34.133 8.238 33.844
 7.949 c 33.551 7.656 33.152 7.496 32.742 7.5 c 31.965 7.484 31.285 8.027
 31.125 8.789 c 29.555 16.449 l 22.852 16.453 l 24.281 9.543 l 24.305 9.422
 24.328 9.188 24.328 9.051 c 24.328 9.047 l 24.332 8.633 24.168 8.23 23.871
 7.941 c 23.574 7.648 23.172 7.488 22.758 7.5 c 21.988 7.496 21.32 8.035
 21.164 8.789 c 19.59 16.453 l 16.242 16.453 l 14.953 16.453 14.391 17.113
 14.391 18.051 c 14.391 18.988 14.953 19.668 16.242 19.668 c 18.961 19.668
 l 17.414 27.238 l 13.828 27.234 l 12.566 27.234 12 27.891 12 28.828 c 12
 29.766 12.562 30.469 13.828 30.469 c 16.758 30.469 l 15.211 37.945 l 15.188
 38.066 15.164 38.32 15.164 38.484 c 15.164 39.398 15.793 40.008 16.664 
40.008 c 17.461 40.008 18.141 39.492 18.324 38.578 c 19.988 30.469 l 26.715
 30.469 l h
22.172 19.617 m 28.969 19.617 l 27.422 27.305 l 20.578 27.305 l 22.176 
19.617 l h
22.172 19.617 m f
Q Q
showpage
%%Trailer
%%EOF
