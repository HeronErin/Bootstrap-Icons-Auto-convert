%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 48 31 152 163
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 48 31 152 163
192 192 cairo_set_page_size
%%EndPageSetup
q 48 31 104 132 rectclip
1 0 0 -1 0 192 cm q
0 g
100.68 151.777 m 100.555 152.488 100.496 153.211 100.5 153.938 c 100.5 
157.598 103.02 160.035 106.5 160.035 c 109.691 160.035 112.402 157.973 113.16
 154.312 c 119.809 121.875 l 134.258 121.875 l 139.309 121.875 141.66 119.066
 141.66 115.312 c 141.66 111.57 139.402 108.953 134.258 108.953 c 122.438
 108.953 l 128.629 78.664 l 143.809 78.664 l 148.969 78.664 151.223 75.941
 151.223 72.102 c 151.223 68.344 148.965 65.812 143.809 65.812 c 131.258
 65.812 l 136.969 38.164 l 136.969 38.16 l 137.086 37.512 137.148 36.852
 137.16 36.191 c 137.18 34.543 136.535 32.957 135.367 31.793 c 134.203 30.625
 132.617 29.98 130.969 30 c 127.852 29.941 125.133 32.109 124.5 35.16 c 
118.223 65.809 l 91.402 65.809 l 97.125 38.16 l 97.223 37.68 97.305 36.746
 97.305 36.191 c 97.309 36.191 l 97.328 34.527 96.672 32.93 95.488 31.762
 c 94.305 30.594 92.695 29.957 91.031 30 c 87.953 29.988 85.289 32.145 84.66
 35.16 c 78.359 65.809 l 64.969 65.809 l 59.809 65.809 57.566 68.449 57.566
 72.191 c 57.566 75.934 59.809 78.66 64.969 78.66 c 75.84 78.66 l 69.66 
108.938 l 55.309 108.938 l 50.258 108.938 48 111.566 48 115.309 c 48 119.051
 50.258 121.871 55.32 121.871 c 67.031 121.871 l 60.84 151.773 l 60.742 
152.254 60.66 153.273 60.66 153.934 c 60.66 157.594 63.18 160.031 66.66 
160.031 c 69.84 160.031 72.562 157.969 73.309 154.309 c 79.969 121.871 l
 106.871 121.871 l h
88.68 78.469 m 115.871 78.469 l 109.691 109.227 l 82.309 109.223 l 88.691
 78.465 l h
88.68 78.469 m f
Q Q
showpage
%%Trailer
%%EOF
