%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 24 15 76 81
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 24 15 76 81
96 96 cairo_set_page_size
%%EndPageSetup
q 24 15 52 66 rectclip
1 0 0 -1 0 96 cm q
0 g
50.34 75.887 m 50.277 76.246 50.246 76.605 50.25 76.969 c 50.25 78.797 
51.512 80.016 53.25 80.016 c 54.848 80.016 56.203 78.984 56.578 77.152 c
 59.902 60.934 l 67.125 60.934 l 69.652 60.934 70.828 59.531 70.828 57.652
 c 70.828 55.781 69.699 54.473 67.125 54.473 c 61.215 54.473 l 64.312 39.328
 l 71.902 39.328 l 74.48 39.328 75.609 37.965 75.609 36.047 c 75.609 34.168
 74.48 32.902 71.902 32.902 c 65.625 32.902 l 68.48 19.078 l 68.484 19.078
 l 68.543 18.754 68.574 18.426 68.578 18.098 c 68.59 17.273 68.266 16.48
 67.684 15.895 c 67.102 15.312 66.309 14.992 65.484 15 c 63.926 14.969 62.566
 16.055 62.25 17.578 c 59.113 32.902 l 45.703 32.902 l 48.566 19.078 l 48.613
 18.84 48.656 18.371 48.656 18.094 c 48.652 18.098 l 48.664 17.266 48.336
 16.465 47.742 15.879 c 47.152 15.297 46.348 14.98 45.516 15 c 43.977 14.992
 42.645 16.07 42.328 17.578 c 39.18 32.902 l 32.484 32.902 l 29.906 32.902
 28.781 34.223 28.781 36.094 c 28.781 37.965 29.902 39.328 32.484 39.328
 c 37.922 39.328 l 34.832 54.465 l 27.652 54.469 l 25.125 54.469 24 55.781
 24 57.656 c 24 59.527 25.129 60.938 27.66 60.938 c 33.516 60.938 l 30.418
 75.891 l 30.371 76.129 30.328 76.641 30.328 76.969 c 30.328 78.797 31.59
 80.016 33.328 80.016 c 34.918 80.016 36.281 78.984 36.652 77.152 c 39.98
 60.934 l 53.434 60.934 l h
44.34 39.234 m 57.938 39.234 l 54.848 54.613 l 41.152 54.613 l 44.344 39.234
 l h
44.34 39.234 m f
Q Q
showpage
%%Trailer
%%EOF
