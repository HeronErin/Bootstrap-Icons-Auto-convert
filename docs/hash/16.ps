%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 3 1 10 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 3 1 10 11
12 12 cairo_set_page_size
%%EndPageSetup
q 3 1 7 10 rectclip
1 0 0 -1 0 12 cm q
0 g
6.293 9.484 m 6.285 9.531 6.281 9.574 6.281 9.621 c 6.281 9.852 6.438 10.004
 6.656 10.004 c 6.855 10.004 7.023 9.875 7.074 9.645 c 7.488 7.617 l 8.391
 7.617 l 8.707 7.617 8.852 7.441 8.852 7.207 c 8.852 6.973 8.711 6.809 8.391
 6.809 c 7.652 6.809 l 8.039 4.914 l 8.988 4.914 l 9.312 4.914 9.453 4.742
 9.453 4.504 c 9.453 4.27 9.312 4.109 8.988 4.109 c 8.203 4.109 l 8.559 
2.383 l 8.559 2.387 l 8.566 2.344 8.57 2.305 8.574 2.262 c 8.574 2.16 8.535
 2.059 8.461 1.988 c 8.387 1.914 8.289 1.875 8.184 1.875 c 7.992 1.871 7.82
 2.008 7.781 2.199 c 7.391 4.113 l 5.711 4.113 l 6.07 2.387 l 6.078 2.355
 6.082 2.297 6.082 2.266 c 6.082 2.262 l 6.082 2.156 6.043 2.059 5.969 1.984
 c 5.895 1.91 5.793 1.871 5.691 1.875 c 5.496 1.875 5.332 2.008 5.293 2.199
 c 4.898 4.113 l 4.059 4.113 l 3.734 4.113 3.598 4.277 3.598 4.512 c 3.598
 4.746 3.738 4.914 4.059 4.914 c 4.738 4.914 l 4.352 6.805 l 3.457 6.809
 l 3.141 6.809 3 6.973 3 7.207 c 3 7.441 3.141 7.617 3.457 7.617 c 4.188
 7.617 l 3.801 9.484 l 3.793 9.516 3.789 9.578 3.789 9.621 c 3.789 9.852
 3.945 10.004 4.164 10.004 c 4.363 10.004 4.531 9.875 4.578 9.645 c 4.996
 7.617 l 6.676 7.617 l h
5.543 4.902 m 7.242 4.902 l 6.855 6.824 l 5.145 6.828 l 5.543 4.906 l h
5.543 4.902 m f
Q Q
showpage
%%Trailer
%%EOF
