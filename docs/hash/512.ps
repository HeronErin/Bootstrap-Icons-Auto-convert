%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 96 63 303 325
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 96 63 303 325
384 384 cairo_set_page_size
%%EndPageSetup
q 96 63 207 262 rectclip
1 0 0 -1 0 384 cm q
0 g
201.359 303.551 m 201.109 304.977 200.988 306.426 201 307.871 c 201 315.191
 206.039 320.062 213 320.062 c 219.383 320.062 224.809 315.934 226.32 308.613
 c 239.617 243.742 l 268.512 243.742 l 278.617 243.742 283.32 238.125 283.32
 230.613 c 283.32 223.125 278.809 217.895 268.512 217.895 c 244.871 217.895
 l 257.254 157.32 l 287.613 157.32 l 297.934 157.32 302.445 151.871 302.445
 144.191 c 302.445 136.68 297.934 131.617 287.613 131.617 c 262.508 131.617
 l 273.934 76.32 l 273.938 76.32 l 274.172 75.02 274.301 73.703 274.32 72.383
 c 274.359 69.086 273.066 65.914 270.734 63.586 c 268.406 61.254 265.23 
59.961 261.938 60 c 255.703 59.883 250.27 64.215 249 70.32 c 236.449 131.617
 l 182.809 131.617 l 194.258 76.32 l 194.449 75.359 194.617 73.488 194.617
 72.383 c 194.656 69.059 193.34 65.859 190.973 63.523 c 188.605 61.188 185.391
 59.914 182.062 60 c 175.902 59.973 170.574 64.289 169.32 70.32 c 156.719
 131.617 l 129.938 131.617 l 119.617 131.617 115.129 136.898 115.129 144.387
 c 115.129 151.875 119.617 157.324 129.938 157.324 c 151.68 157.324 l 139.32
 217.875 l 110.617 217.871 l 100.512 217.871 96 223.129 96 230.613 c 96 
238.102 100.512 243.742 110.641 243.742 c 134.066 243.742 l 121.684 303.551
 l 121.492 304.512 121.324 306.551 121.324 307.871 c 121.324 315.191 126.363
 320.062 133.324 320.062 c 139.684 320.062 145.133 315.934 146.621 308.613
 c 159.941 243.742 l 213.75 243.742 l h
177.359 156.934 m 231.742 156.934 l 219.383 218.445 l 164.617 218.449 l
 177.387 156.938 l h
177.359 156.934 m f
Q Q
showpage
%%Trailer
%%EOF
