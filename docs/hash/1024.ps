%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 192 127 605 649
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 192 127 605 649
768 768 cairo_set_page_size
%%EndPageSetup
q 192 127 413 522 rectclip
1 0 0 -1 0 768 cm q
0 g
402.719 607.105 m 402.219 609.957 401.98 612.848 402 615.742 c 402 630.383
 412.078 640.125 426 640.125 c 438.77 640.125 449.617 631.867 452.641 617.23
 c 479.234 487.488 l 537.027 487.488 l 557.234 487.488 566.645 476.258 566.645
 461.23 c 566.645 446.254 557.621 435.789 537.027 435.789 c 489.746 435.789
 l 514.516 314.637 l 575.234 314.637 l 595.875 314.637 604.898 303.742 604.898
 288.379 c 604.898 273.355 595.875 263.227 575.234 263.227 c 525.027 263.227
 l 547.875 152.633 l 547.871 152.641 l 548.344 150.043 548.602 147.41 548.641
 144.77 c 548.719 138.176 546.133 131.832 541.473 127.168 c 536.809 122.508
 530.465 119.922 523.871 120 c 517.828 119.883 511.938 121.883 507.215 125.652
 c 502.488 129.422 499.23 134.723 498 140.641 c 472.895 263.234 l 365.617
 263.23 l 388.512 152.637 l 388.895 150.715 389.23 146.973 389.23 144.766
 c 389.23 144.77 l 389.312 138.117 386.684 131.719 381.945 127.047 c 377.211
 122.375 370.777 119.828 364.129 120 c 358.152 119.973 352.348 122.016 347.703
 125.777 c 343.059 129.539 339.859 134.789 338.641 140.641 c 313.441 263.23
 l 259.871 263.23 l 239.23 263.23 230.254 273.789 230.254 288.766 c 230.254
 303.742 239.23 314.637 259.871 314.637 c 303.359 314.637 l 278.641 435.742
 l 221.23 435.742 l 201.023 435.742 192 446.254 192 461.23 c 192 476.207
 201.023 487.488 221.281 487.488 c 268.129 487.488 l 243.359 607.105 l 242.977
 609.027 242.641 613.105 242.641 615.746 c 242.641 630.387 252.719 640.129
 266.641 640.129 c 279.359 640.129 290.258 631.871 293.234 617.234 c 319.875
 487.492 l 427.492 487.492 l h
354.719 313.875 m 463.488 313.875 l 438.77 436.898 l 329.23 436.895 l 354.766
 313.871 l h
354.719 313.875 m f
Q Q
showpage
%%Trailer
%%EOF
