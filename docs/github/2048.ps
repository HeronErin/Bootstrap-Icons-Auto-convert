%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 37 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 37 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 37 1536 1499 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 343.68 0 0 343.68 0 768 c 0 1107.84 219.84 1394.879 525.121 1496.641
 c 563.52 1503.359 577.922 1480.32 577.922 1460.16 c 577.922 1441.922 576.961
 1381.441 576.961 1317.121 c 384 1352.641 334.082 1270.082 318.723 1226.883
 c 310.082 1204.805 272.645 1136.645 240.004 1118.402 c 213.125 1104.004
 174.723 1068.48 239.043 1067.523 c 299.523 1066.562 342.723 1123.203 357.121
 1146.242 c 426.242 1262.402 536.641 1229.762 580.801 1209.602 c 587.52 
1159.68 607.68 1126.082 629.762 1106.883 c 458.883 1087.684 280.32 1021.441
 280.32 727.684 c 280.32 644.164 310.082 575.043 359.039 521.285 c 351.359
 502.086 324.48 423.363 366.719 317.766 c 366.719 317.766 431.039 297.605
 577.918 396.484 c 639.359 379.203 704.637 370.562 769.918 370.562 c 835.199
 370.562 900.477 379.203 961.918 396.484 c 1108.797 296.645 1173.117 317.766
 1173.117 317.766 c 1215.355 423.367 1188.477 502.086 1180.797 521.285 c
 1229.758 575.047 1259.516 643.207 1259.516 727.684 c 1259.516 1022.402 
1079.996 1087.684 909.117 1106.883 c 936.957 1130.883 960.957 1176.961 960.957
 1248.961 c 960.957 1351.68 959.996 1434.242 959.996 1460.16 c 959.996 1480.32
 974.395 1504.32 1012.797 1496.641 c 1012.801 1496.641 l 1165.285 1445.207
 1297.793 1347.23 1391.656 1216.516 c 1485.516 1085.797 1536.004 928.926
 1536 768 c 1536 343.68 1192.32 0 768 0 c f
Q Q
showpage
%%Trailer
%%EOF
