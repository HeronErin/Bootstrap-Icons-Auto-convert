%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 18 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 18 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 18 768 750 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 171.84 0 0 171.84 0 384 c 0 553.922 109.922 697.441 262.559 748.32
 c 281.758 751.68 288.957 740.16 288.957 730.082 c 288.957 720.961 288.477
 690.723 288.477 658.562 c 191.996 676.324 167.035 635.043 159.355 613.441
 c 155.035 602.402 136.316 568.32 119.996 559.203 c 106.555 552.004 87.355
 534.242 119.516 533.762 c 149.754 533.281 171.355 561.602 178.555 573.121
 c 213.113 631.199 268.316 614.883 290.395 604.801 c 293.754 579.84 303.836
 563.039 314.875 553.441 c 229.434 543.84 140.156 510.723 140.156 363.84
 c 140.156 322.078 155.035 287.52 179.516 260.641 c 175.676 251.039 162.234
 211.68 183.355 158.879 c 183.355 158.879 215.516 148.801 288.957 198.238
 c 319.676 189.598 352.316 185.277 384.957 185.277 c 417.598 185.277 450.238
 189.598 480.957 198.238 c 554.398 148.316 586.559 158.879 586.559 158.879
 c 607.68 211.68 594.238 251.039 590.398 260.641 c 614.879 287.52 629.758
 321.602 629.758 363.84 c 629.758 511.199 539.996 543.84 454.559 553.441
 c 468.48 565.441 480.48 588.48 480.48 624.48 c 480.48 675.84 480 717.121
 480 730.082 c 480 740.16 487.199 752.16 506.398 748.32 c 582.645 722.605
 648.895 673.617 695.828 608.258 c 742.758 542.898 768 464.465 768 384 c
 768 171.84 596.16 0 384 0 c f
Q Q
showpage
%%Trailer
%%EOF
