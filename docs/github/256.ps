%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 4 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 4 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 4 192 188 rectclip
1 0 0 -1 0 192 cm q
0 g
96 0 m 42.961 0 0 42.961 0 96 c 0 138.48 27.48 174.359 65.641 187.078 c
 70.441 187.918 72.242 185.039 72.242 182.52 c 72.242 180.238 72.121 172.68
 72.121 164.641 c 48 169.082 41.762 158.762 39.84 153.359 c 38.762 150.598
 34.078 142.078 30 139.801 c 26.641 138 21.84 133.562 29.879 133.441 c 37.438
 133.32 42.84 140.402 44.641 143.281 c 53.281 157.801 67.082 153.723 72.602
 151.203 c 73.441 144.965 75.961 140.762 78.723 138.363 c 57.363 135.965
 35.043 127.684 35.043 90.965 c 35.043 80.523 38.762 71.887 44.883 65.164
 c 43.922 62.766 40.562 52.926 45.844 39.723 c 45.844 39.723 53.883 37.203
 72.242 49.562 c 79.922 47.402 88.082 46.324 96.242 46.324 c 104.402 46.324
 112.562 47.402 120.242 49.562 c 138.602 37.082 146.641 39.723 146.641 39.723
 c 151.922 52.922 148.562 62.762 147.602 65.164 c 153.723 71.883 157.441
 80.402 157.441 90.965 c 157.441 127.805 135 135.965 113.641 138.363 c 117.121
 141.363 120.121 147.125 120.121 156.125 c 120.121 168.965 120 179.285 120
 182.523 c 120 185.043 121.801 188.043 126.602 187.082 c 126.602 187.078
 l 145.66 180.652 162.223 168.402 173.957 152.062 c 185.691 135.727 192 
116.117 192 96 c 192 42.961 149.039 0 96 0 c f
Q Q
showpage
%%Trailer
%%EOF
