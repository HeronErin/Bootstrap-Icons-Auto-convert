%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 36 48 rectclip
1 0 0 -1 0 48 cm q
0 g
6 18 m 6 11.961 9.027 6.328 14.059 2.992 c 19.094 -0.34 25.461 -0.93 31.02
 1.426 c 36.582 3.781 40.59 8.766 41.695 14.699 c 42.801 20.637 40.859 26.73
 36.523 30.93 c 35.914 31.52 35.445 32.129 35.164 32.785 c 32.879 38.094
 l 32.641 38.645 32.098 39 31.5 39 c 32.328 39 33 39.672 33 40.5 c 33 41.328
 32.328 42 31.5 42 c 32.328 42 33 42.672 33 43.5 c 33 44.328 32.328 45 31.5
 45 c 30.828 46.34 l 30.32 47.355 29.281 48 28.145 48 c 19.855 48 l 18.719
 48 17.68 47.355 17.172 46.34 c 16.5 45 l 15.672 45 15 44.328 15 43.5 c 
15 42.672 15.672 42 16.5 42 c 15.672 42 15 41.328 15 40.5 c 15 39.672 15.672
 39 16.5 39 c 15.898 39 15.359 38.645 15.121 38.094 c 12.84 32.785 l 12.836
 32.785 l 12.508 32.086 12.047 31.453 11.477 30.93 c 7.973 27.543 5.992 
22.875 6 18 c 24 3 m 19.992 3 16.152 4.602 13.336 7.449 c 10.516 10.297 
8.957 14.152 9 18.16 c 9.043 22.168 10.684 25.988 13.562 28.777 c 14.352
 29.539 15.105 30.469 15.59 31.602 c 17.488 36 l 30.516 36 l 32.41 31.598
 l 32.895 30.465 33.648 29.535 34.438 28.773 c 34.441 28.777 l 37.32 25.988
 38.961 22.164 39.004 18.16 c 39.047 14.152 37.484 10.297 34.668 7.449 c
 31.848 4.602 28.008 3 24 3 c f
Q Q
showpage
%%Trailer
%%EOF
