%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 337 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 337 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 289 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 144 m 48 95.703 72.211 50.617 112.477 23.945 c 152.742 -2.727 203.699
 -7.438 248.172 11.402 c 292.645 30.242 324.707 70.121 333.562 117.605 c
 342.414 165.086 326.871 213.84 292.176 247.441 c 287.305 252.145 283.559
 257.043 281.305 262.297 c 263.016 304.754 l 261.121 309.148 256.789 312
 252 312 c 258.629 312 264 317.371 264 324 c 264 330.629 258.629 336 252
 336 c 258.629 336 264 341.371 264 348 c 264 354.629 258.629 360 252 360
 c 246.625 370.727 l 244.633 374.715 241.57 378.066 237.781 380.41 c 233.992
 382.754 229.625 383.996 225.168 384 c 158.832 384 l 154.375 383.996 150.008
 382.754 146.219 380.41 c 142.43 378.066 139.367 374.715 137.375 370.727
 c 132 360 l 125.371 360 120 354.629 120 348 c 120 341.371 125.371 336 132
 336 c 125.371 336 120 330.629 120 324 c 120 317.371 125.371 312 132 312
 c 127.203 312.008 122.859 309.156 120.961 304.754 c 102.695 262.273 l 100.062
 256.672 96.371 251.637 91.824 247.441 c 63.77 220.348 47.945 183.004 48
 144 c 192 24 m 159.949 23.996 129.227 36.812 106.684 59.594 c 84.137 82.375
 71.645 113.23 71.988 145.281 c 72.328 177.332 85.477 207.91 108.504 230.207
 c 114.816 236.305 120.84 243.742 124.727 252.793 c 139.922 288 l 244.129
 288 l 259.297 252.793 l 263.184 243.746 269.207 236.305 275.52 230.207 
c 298.547 207.91 311.699 177.324 312.039 145.273 c 312.379 113.223 299.879
 82.363 277.332 59.582 c 254.781 36.801 224.055 23.988 192 24 c f
Q Q
showpage
%%Trailer
%%EOF
