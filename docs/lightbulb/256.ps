%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 169 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 169 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 145 192 rectclip
1 0 0 -1 0 192 cm q
0 g
24 72 m 24 47.852 36.105 25.309 56.238 11.973 c 76.371 -1.363 101.848 -3.719
 124.086 5.703 c 146.32 15.121 162.355 35.062 166.781 58.801 c 171.207 82.543
 163.438 106.922 146.09 123.719 c 143.652 126.07 141.781 128.52 140.652 
131.148 c 131.508 152.375 l 130.559 154.574 128.395 156 126 156 c 129.312
 156 132 158.688 132 162 c 132 165.312 129.312 168 126 168 c 129.312 168
 132 170.688 132 174 c 132 177.312 129.312 180 126 180 c 123.312 185.363
 l 121.281 189.43 117.129 191.996 112.586 192 c 79.414 192 l 74.871 191.996
 70.719 189.43 68.688 185.363 c 66 180 l 62.688 180 60 177.312 60 174 c 
60 170.688 62.688 168 66 168 c 62.688 168 60 165.312 60 162 c 60 158.688
 62.688 156 66 156 c 63.602 156.004 61.43 154.578 60.48 152.375 c 51.348
 131.137 l 50.031 128.336 48.184 125.82 45.91 123.719 c 31.883 110.172 23.973
 91.5 24 72 c 96 12 m 79.973 11.996 64.613 18.406 53.34 29.797 c 42.07 41.188
 35.82 56.617 35.992 72.641 c 36.164 88.664 42.738 103.957 54.254 115.105
 c 57.41 118.152 60.422 121.875 62.367 126.398 c 69.961 144 l 122.066 144
 l 129.652 126.395 l 131.598 121.871 134.609 118.152 137.766 115.102 c 137.762
 115.105 l 149.273 103.953 155.848 88.664 156.02 72.637 c 156.188 56.609
 149.941 41.184 138.664 29.793 c 127.391 18.402 112.027 11.992 96 12 c f
Q Q
showpage
%%Trailer
%%EOF
