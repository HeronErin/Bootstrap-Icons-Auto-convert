%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
892.129 0 m 384 0 l 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242
 192 141.078 192 192 c 192 1344 l 192 1377.703 200.871 1410.812 217.723 
1440 c 234.574 1469.188 258.812 1493.426 288 1510.277 c 317.188 1527.129
 350.297 1536 384 1536 c 1152 1536 l 1185.703 1536 1218.812 1527.129 1248
 1510.277 c 1277.188 1493.426 1301.426 1469.188 1318.277 1440 c 1335.129
 1410.812 1344 1377.703 1344 1344 c 1344 451.871 l 1343.996 426.414 1333.875
 402 1315.871 384 c 960 28.129 l 942 10.125 917.586 0.004 892.129 0 c 912
 336 m 912 144 l 1200 432 l 1008 432 l 982.539 432 958.121 421.887 940.117
 403.883 c 922.113 385.879 912 361.461 912 336 c 672 600 m 672 625.723 658.277
 649.492 636 662.355 c 613.723 675.215 586.277 675.215 564 662.355 c 541.723
 649.492 528 625.723 528 600 c 528 574.277 541.723 550.508 564 537.645 c
 586.277 524.785 613.723 524.785 636 537.645 c 658.277 550.508 672 574.277
 672 600 c 589.344 748.031 m 717.023 833.086 l 895.008 655.008 l 898.57 
651.434 903.168 649.074 908.148 648.266 c 913.133 647.457 918.242 648.234
 922.754 650.496 c 1104 744 l 1104 912 l 1104 924.73 1098.941 936.938 1089.941
 945.941 c 1080.938 954.941 1068.73 960 1056 960 c 480 960 l 467.27 960 
455.062 954.941 446.059 945.941 c 437.059 936.938 432 924.73 432 912 c 432
 864 l 432 864 579.84 741.695 589.344 748.031 c 480 1056 m 1056 1056 l 1073.148
 1056 1088.996 1065.148 1097.57 1080 c 1106.145 1094.852 1106.145 1113.148
 1097.57 1128 c 1088.996 1142.852 1073.148 1152 1056 1152 c 480 1152 l 462.852
 1152 447.004 1142.852 438.43 1128 c 429.855 1113.148 429.855 1094.852 438.43
 1080 c 447.004 1065.148 462.852 1056 480 1056 c 480 1248 m 768 1248 l 785.148
 1248 800.996 1257.148 809.57 1272 c 818.145 1286.852 818.145 1305.148 809.57
 1320 c 800.996 1334.852 785.148 1344 768 1344 c 480 1344 l 462.852 1344
 447.004 1334.852 438.43 1320 c 429.855 1305.148 429.855 1286.852 438.43
 1272 c 447.004 1257.148 462.852 1248 480 1248 c f
Q Q
showpage
%%Trailer
%%EOF
