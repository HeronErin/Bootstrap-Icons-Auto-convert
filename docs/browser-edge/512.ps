%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 1 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 1 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 1 384 383 rectclip
1 0 0 -1 0 384 cm q
0 g
227.566 224.184 m 225.91 225.672 223.488 227.855 223.488 231.598 c 223.488
 235.484 226.055 239.398 230.688 242.543 c 251.734 257.254 291.191 255.504
 292.895 255.453 c 292.941 255.453 l 308.949 255.453 324.621 251.133 338.398
 242.996 c 338.398 243 l 366.586 226.5 383.934 196.316 384 163.656 c 384.434
 132.07 373.441 110.426 368.016 99.719 c 367.055 97.797 l 335.113 35.688
 266.543 0 192 0 c 152.484 0 113.93 12.191 81.602 34.914 c 49.27 57.637 
24.738 89.781 11.352 126.961 c 35.711 97.152 76.391 78.289 120 78.289 c 
187.922 78.289 240.238 123.527 240.238 193.418 c 240.141 193.418 l 240.141
 193.465 l 240.141 201.578 236.109 213.434 228.453 223.32 c 228.598 223.176
 l h
227.566 224.184 m f
0.238 186.07 m -0.559 216.203 5.629 246.113 18.312 273.457 c 32.516 303.699
 54.371 329.711 81.707 348.922 c 109.047 368.133 140.926 379.875 174.191
 382.992 c 167.66 380.531 161.355 377.504 155.352 373.945 c 155.113 373.945
 l 152.234 372.145 l 152.23 372.145 l 137.574 363.004 124.855 351.074 114.793
 337.031 c 91.609 305.301 83.637 264.941 93.023 226.781 c 102.406 188.621
 128.184 156.559 163.441 139.199 c 163.68 139.102 l 164.281 138.812 l 169.273
 136.461 179.16 131.805 192.289 131.973 c 195.395 131.988 198.465 132.254
 201.504 132.766 c 201.504 132.77 l 194.457 126.004 186.422 120.355 177.672
 116.016 c 177.434 115.895 l 152.352 102.77 124.777 102.312 120 102.312 
c 61.441 102.312 4.223 141.527 0.238 186.074 c 246.551 375.961 m 248.68 
375.32 250.797 374.648 252.91 373.945 c 250.461 374.699 248.008 375.387 
245.543 376.008 c h
246.551 375.961 m f
245.473 376.008 m 247.918 375.398 250.344 374.707 252.742 373.945 c 254.711
 373.344 l 296.039 359.055 331.266 331.125 354.602 294.145 c 355.992 291.836
 355.672 288.883 353.82 286.926 c 351.969 284.969 349.039 284.484 346.656
 285.742 c 341.504 288.43 336.199 290.781 330.746 292.797 c 330.742 292.801
 l 313.52 299.195 295.285 302.445 276.91 302.398 c 205.941 302.398 144.141
 253.656 144.141 190.941 c 144.188 187.695 144.555 184.5 145.246 181.367
 c 126.793 199.75 115.531 224.133 113.508 250.098 c 111.48 276.066 118.824
 301.902 134.207 322.922 c 134.277 323.043 l 141.836 333.629 151.246 342.746
 162.07 349.945 c 162.141 349.945 l 165.598 352.105 l 186.645 365.305 206.902
 377.977 245.469 376.008 c f
Q Q
showpage
%%Trailer
%%EOF
