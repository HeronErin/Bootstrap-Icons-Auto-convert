%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.555 3.504 m 3.527 3.527 3.492 3.562 3.492 3.621 c 3.492 3.684 3.531 3.742
 3.605 3.793 c 3.934 4.023 4.551 3.996 4.578 3.996 c 4.828 3.996 5.074 3.93
 5.289 3.801 c 5.289 3.797 l 5.727 3.539 6 3.066 6 2.559 c 6.008 2.066 5.836
 1.727 5.75 1.559 c 5.734 1.527 l 5.234 0.559 4.164 0 3 0 c 1.734 0 0.605
 0.793 0.176 1.984 c 0.559 1.52 1.195 1.223 1.875 1.223 c 2.938 1.223 3.754
 1.93 3.754 3.023 c 3.754 3.148 3.691 3.336 3.57 3.488 c 3.574 3.484 l h
3.555 3.504 m f
0.004 2.906 m -0.008 3.379 0.09 3.844 0.285 4.273 c 0.738 5.234 1.664 5.887
 2.723 5.984 c 2.621 5.945 2.52 5.898 2.426 5.844 c 2.422 5.844 l 2.375 
5.816 l 2.379 5.816 l 2.148 5.672 1.949 5.484 1.793 5.266 c 1.43 4.77 1.309
 4.141 1.453 3.543 c 1.602 2.945 2.004 2.445 2.555 2.176 c 2.559 2.176 l
 2.566 2.172 l 2.645 2.137 2.801 2.062 3.004 2.066 c 3.051 2.066 3.102 2.07
 3.148 2.078 c 3.148 2.074 l 3.039 1.969 2.914 1.879 2.777 1.812 c 2.773
 1.812 l 2.379 1.605 1.949 1.598 1.875 1.598 c 0.961 1.598 0.066 2.211 0.004
 2.906 c 3.852 5.875 m 3.887 5.863 3.918 5.855 3.949 5.844 c 3.91 5.855 
3.871 5.867 3.836 5.875 c h
3.852 5.875 m f
3.836 5.875 m 3.875 5.867 3.91 5.855 3.949 5.844 c 3.98 5.836 l 3.98 5.832
 l 4.625 5.609 5.176 5.172 5.539 4.598 c 5.59 4.516 5.5 4.422 5.418 4.465
 c 5.336 4.508 5.254 4.543 5.168 4.574 c 4.898 4.676 4.613 4.727 4.328 4.727
 c 3.219 4.727 2.254 3.965 2.254 2.984 c 2.254 2.934 2.262 2.883 2.27 2.836
 c 2.27 2.832 l 1.672 3.426 1.602 4.367 2.098 5.047 c 2.215 5.211 2.363 
5.355 2.531 5.469 c 2.586 5.504 l 2.914 5.711 3.23 5.906 3.832 5.879 c f
Q Q
showpage
%%Trailer
%%EOF
