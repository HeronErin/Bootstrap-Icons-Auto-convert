%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
113.785 112.094 m 112.957 112.836 111.746 113.93 111.746 115.801 c 111.746
 117.746 113.031 119.699 115.348 121.273 c 125.871 128.629 145.602 127.754
 146.453 127.73 c 146.477 127.73 l 154.48 127.73 162.316 125.57 169.203 
121.504 c 169.199 121.5 l 183.293 113.25 191.965 98.156 192 81.828 c 192.215
 66.035 186.719 55.211 184.008 49.859 c 183.527 48.898 l 167.555 17.844 
133.273 0 96 0 c 76.242 0 56.965 6.098 40.801 17.457 c 24.637 28.816 12.367
 44.891 5.676 63.48 c 17.855 48.574 38.195 39.145 60 39.145 c 93.961 39.145
 120.121 61.766 120.121 96.707 c 120.074 96.707 l 120.074 96.73 l 120.074
 100.785 118.059 106.715 114.23 111.66 c 114.301 111.59 l h
113.785 112.094 m f
0.121 93.035 m -0.277 108.102 2.812 123.055 9.156 136.727 c 23.609 167.496
 53.25 188.328 87.098 191.496 c 83.832 190.266 80.68 188.75 77.676 186.973
 c 77.555 186.973 l 76.113 186.074 l 76.117 186.07 l 68.789 181.5 62.426
 175.535 57.395 168.516 c 45.805 152.652 41.82 132.473 46.512 113.391 c 
51.203 94.309 64.094 78.281 81.719 69.602 c 81.84 69.555 l 82.141 69.41 
l 84.637 68.234 89.582 65.906 96.145 65.988 c 97.695 65.996 99.234 66.129
 100.754 66.383 c 97.23 63.004 93.211 60.176 88.836 58.008 c 88.715 57.949
 l 76.176 51.383 62.387 51.156 60 51.156 c 30.719 51.156 2.113 70.766 0.121
 93.035 c 123.277 187.98 m 124.34 187.66 125.402 187.324 126.457 186.973
 c 125.234 187.348 124.004 187.691 122.773 188.004 c h
123.277 187.98 m f
122.734 188.004 m 123.957 187.699 125.172 187.355 126.371 186.973 c 127.355
 186.672 l 148.02 179.527 165.633 165.562 177.301 147.07 c 177.996 145.918
 177.836 144.441 176.91 143.461 c 175.984 142.484 174.52 142.242 173.328
 142.871 c 170.754 144.215 168.102 145.391 165.371 146.398 c 156.758 149.598
 147.645 151.223 138.457 151.199 c 102.973 151.199 72.074 126.828 72.074
 95.473 c 72.098 93.848 72.281 92.254 72.625 90.684 c 63.395 99.875 57.766
 112.066 56.754 125.051 c 55.742 138.035 59.414 150.949 67.105 161.461 c
 67.141 161.52 l 70.922 166.812 75.625 171.371 81.035 174.973 c 81.07 174.973
 l 82.797 176.051 l 93.32 182.652 103.449 188.988 122.734 188.004 c f
Q Q
showpage
%%Trailer
%%EOF
