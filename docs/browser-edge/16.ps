%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
7.113 7.004 m 7.062 7.051 6.984 7.117 6.984 7.234 c 6.984 7.355 7.066 7.477
 7.211 7.578 c 7.867 8.039 9.102 7.984 9.156 7.98 c 9.656 7.98 10.145 7.844
 10.578 7.59 c 10.574 7.594 l 11.457 7.078 11.996 6.137 12 5.113 c 12.012
 4.125 11.672 3.449 11.5 3.117 c 11.469 3.059 l 10.473 1.117 8.328 0 6 0
 c 3.469 0 1.211 1.586 0.355 3.969 c 1.117 3.035 2.387 2.445 3.75 2.445 
c 5.871 2.445 7.508 3.859 7.508 6.043 c 7.504 6.043 l 7.504 6.297 7.379 
6.668 7.137 6.977 c 7.141 6.973 l h
7.113 7.004 m f
0.008 5.816 m -0.016 6.758 0.176 7.691 0.57 8.547 c 1.477 10.469 3.328 
11.77 5.445 11.969 c 5.238 11.891 5.043 11.797 4.855 11.688 c 4.848 11.688
 l 4.758 11.633 l 4.758 11.629 l 4.301 11.344 3.902 10.973 3.586 10.531 
c 2.863 9.539 2.613 8.281 2.906 7.086 c 3.199 5.895 4.004 4.891 5.109 4.352
 c 5.117 4.348 l 5.137 4.34 l 5.293 4.266 5.602 4.121 6.012 4.125 c 6.109
 4.125 6.203 4.133 6.301 4.148 c 6.297 4.148 l 6.078 3.938 5.824 3.762 5.551
 3.625 c 5.543 3.621 l 4.762 3.211 3.898 3.195 3.75 3.195 c 1.922 3.195 
0.133 4.422 0.008 5.812 c 7.703 11.746 m 7.77 11.727 7.836 11.707 7.902 
11.684 c 7.824 11.707 7.75 11.73 7.672 11.75 c h
7.703 11.746 m f
7.672 11.75 m 7.746 11.73 7.824 11.711 7.898 11.688 c 7.961 11.668 l 9.25
 11.219 10.352 10.348 11.082 9.191 c 11.18 9.027 11 8.84 10.832 8.93 c 10.672
 9.016 10.504 9.086 10.336 9.148 c 9.797 9.352 9.227 9.453 8.652 9.449 c
 6.434 9.449 4.504 7.926 4.504 5.965 c 4.504 5.863 4.516 5.762 4.539 5.664
 c 4.539 5.668 l 3.348 6.855 3.199 8.734 4.195 10.09 c 4.199 10.094 l 4.434
 10.426 4.73 10.711 5.066 10.934 c 5.07 10.934 l 5.18 11 l 5.836 11.414 
6.469 11.809 7.676 11.746 c f
Q Q
showpage
%%Trailer
%%EOF
