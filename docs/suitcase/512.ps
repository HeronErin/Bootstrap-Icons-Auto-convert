%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 0 312 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 0 312 384
384 384 cairo_set_page_size
%%EndPageSetup
q 72 0 240 384 rectclip
1 0 0 -1 0 384 cm q
0 g
144 120 m 147.184 120 150.234 121.266 152.484 123.516 c 154.734 125.766
 156 128.816 156 132 c 156 300 l 156 306.629 150.629 312 144 312 c 137.371
 312 132 306.629 132 300 c 132 132 l 132 125.371 137.371 120 144 120 c 192
 120 m 195.184 120 198.234 121.266 200.484 123.516 c 202.734 125.766 204
 128.816 204 132 c 204 300 l 204 306.629 198.629 312 192 312 c 185.371 312
 180 306.629 180 300 c 180 132 l 180 125.371 185.371 120 192 120 c 240 120
 m 243.184 120 246.234 121.266 248.484 123.516 c 250.734 125.766 252 128.816
 252 132 c 252 300 l 252 306.629 246.629 312 240 312 c 233.371 312 228 306.629
 228 300 c 228 132 l 228 125.371 233.371 120 240 120 c f
156 0 m 149.371 0 144 5.371 144 12 c 144 72 l 120 72 l 107.27 72 95.062
 77.059 86.059 86.059 c 77.059 95.062 72 107.27 72 120 c 72 312 l 72 320.574
 74.293 328.988 78.645 336.375 c 82.996 343.762 89.246 349.848 96.742 354
 c 94.918 361.188 96.508 368.816 101.051 374.676 c 105.594 380.539 112.586
 383.977 120 384 c 126.363 384 132.469 381.473 136.969 376.969 c 141.473
 372.469 144 366.363 144 360 c 240 360 l 240.02 366.879 242.992 373.418 
248.16 377.961 c 253.328 382.5 260.199 384.605 267.023 383.738 c 273.848
 382.871 279.973 379.117 283.844 373.43 c 287.711 367.742 288.957 360.668
 287.258 354 c 294.754 349.848 301.004 343.762 305.355 336.375 c 309.707
 328.988 312 320.574 312 312 c 312 120 l 312 107.27 306.941 95.062 297.941
 86.059 c 288.938 77.059 276.73 72 264 72 c 240 72 l 240 12 l 240 8.816 
238.734 5.766 236.484 3.516 c 234.234 1.266 231.184 0 228 0 c h
216 72 m 168 72 l 168 24 l 216 24 l h
288 312 m 288 318.363 285.473 324.469 280.969 328.969 c 276.469 333.473
 270.363 336 264 336 c 120 336 l 113.637 336 107.531 333.473 103.031 328.969
 c 98.527 324.469 96 318.363 96 312 c 96 120 l 96 113.637 98.527 107.531
 103.031 103.031 c 107.531 98.527 113.637 96 120 96 c 264 96 l 270.363 96
 276.469 98.527 280.969 103.031 c 285.473 107.531 288 113.637 288 120 c 
h
288 312 m f
Q Q
showpage
%%Trailer
%%EOF
