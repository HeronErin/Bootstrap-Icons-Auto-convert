%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
144 12 m 144 5.371 149.371 0 156 0 c 228 0 l 234.629 0 240 5.371 240 12
 c 240 18.629 234.629 24 228 24 c 216 24 l 216 49.68 l 259.824 56.008 299.379
 79.375 326.066 114.707 c 352.754 150.035 364.418 194.473 358.523 238.359
 c 352.625 282.242 329.645 322.023 294.574 349.055 c 309 363.504 l 313.691
 368.191 313.699 375.793 309.012 380.484 c 304.328 385.176 296.723 385.18
 292.031 380.496 c 274.129 362.594 l 249.047 376.668 220.762 384.043 192
 384 c 163.238 384.043 134.953 376.668 109.871 362.594 c 91.969 380.496 
l 87.277 385.18 79.672 385.176 74.988 380.484 c 70.301 375.793 70.309 368.191
 75 363.504 c 89.449 349.055 l 54.379 322.027 31.398 282.246 25.5 238.363
 c 19.602 194.484 31.262 150.047 57.945 114.715 c 84.629 79.383 124.18 56.012
 168 49.68 c 168 24 l 156 24 l 149.371 24 144 18.629 144 12 c 204 132 m 
204 125.371 198.629 120 192 120 c 185.371 120 180 125.371 180 132 c 180 
212.688 l 145.703 269.809 l 142.289 275.496 144.133 282.871 149.82 286.285
 c 155.508 289.695 162.883 287.855 166.297 282.168 c 202.297 222.168 l 203.41
 220.305 204 218.172 204 216 c h
20.641 129.289 m 8.086 118.371 0.633 102.73 0.055 86.102 c -0.523 69.477
 5.828 53.355 17.59 41.59 c 29.355 29.828 45.477 23.477 62.102 24.055 c 
78.73 24.633 94.371 32.086 105.289 44.641 c 68.812 63.168 39.168 92.812 
20.641 129.289 c 278.711 44.641 m 289.629 32.086 305.27 24.633 321.898 24.055
 c 338.523 23.477 354.645 29.828 366.41 41.59 c 378.172 53.355 384.523 69.477
 383.945 86.102 c 383.367 102.73 375.914 118.371 363.359 129.289 c 344.832
 92.812 315.188 63.168 278.711 44.641 c f
Q Q
showpage
%%Trailer
%%EOF
