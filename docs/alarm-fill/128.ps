%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
36 3 m 36 1.344 37.344 0 39 0 c 57 0 l 58.656 0 60 1.344 60 3 c 60 4.656
 58.656 6 57 6 c 54 6 l 54 12.422 l 64.957 14 74.844 19.844 81.516 28.676
 c 88.188 37.508 91.105 48.617 89.629 59.59 c 88.156 70.559 82.41 80.508
 73.645 87.266 c 77.25 90.879 l 77.25 90.875 l 78.422 92.047 78.426 93.949
 77.254 95.121 c 76.082 96.293 74.18 96.297 73.008 95.125 c 68.531 90.648
 l 62.262 94.168 55.191 96.012 48 96 c 40.809 96.012 33.738 94.168 27.469
 90.648 c 22.992 95.125 l 21.82 96.297 19.918 96.293 18.746 95.121 c 17.574
 93.949 17.578 92.047 18.75 90.875 c 22.363 87.262 l 22.363 87.266 l 13.594
 80.508 7.852 70.562 6.375 59.59 c 4.898 48.621 7.816 37.512 14.484 28.68
 c 21.156 19.844 31.043 14.004 42 12.422 c 42 6 l 39 6 l 37.344 6 36 4.656
 36 3 c 51 33 m 51 31.344 49.656 30 48 30 c 46.344 30 45 31.344 45 33 c 
45 53.172 l 36.426 67.453 l 35.574 68.875 36.035 70.719 37.453 71.57 c 38.875
 72.426 40.723 71.965 41.574 70.543 c 50.574 55.543 l 50.852 55.074 51 54.543
 51 54 c h
5.16 32.32 m 2.023 29.594 0.156 25.684 0.012 21.527 c -0.133 17.367 1.457
 13.34 4.398 10.398 c 7.34 7.457 11.367 5.867 15.527 6.012 c 19.684 6.156
 23.594 8.023 26.32 11.16 c 17.203 15.793 9.793 23.203 5.16 32.32 c 69.68
 11.16 m 72.406 8.023 76.316 6.156 80.473 6.012 c 84.633 5.867 88.66 7.457
 91.602 10.398 c 94.543 13.34 96.133 17.367 95.988 21.527 c 95.844 25.684
 93.977 29.594 90.84 32.32 c 86.207 23.203 78.797 15.793 69.68 11.16 c f
Q Q
showpage
%%Trailer
%%EOF
