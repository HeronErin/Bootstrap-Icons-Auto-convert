%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
288 24 m 288 17.637 290.527 11.531 295.031 7.031 c 299.531 2.527 305.637
 0 312 0 c 456 0 l 464.574 0 472.496 4.574 476.785 12 c 481.07 19.426 481.07
 28.574 476.785 36 c 472.496 43.426 464.574 48 456 48 c 432 48 l 432 99.359
 l 519.648 112.012 598.758 158.75 652.133 229.41 c 705.512 300.074 728.836
 388.949 717.043 476.715 c 705.25 564.484 659.289 644.047 589.152 698.113
 c 618 727.008 l 624.07 733.07 626.445 741.91 624.23 750.199 c 622.016 758.488
 615.547 764.965 607.262 767.191 c 598.977 769.418 590.133 767.055 584.062
 760.992 c 548.254 725.184 l 548.258 725.184 l 498.094 753.34 441.523 768.086
 384 768 c 326.477 768.086 269.906 753.34 219.742 725.184 c 183.934 760.992
 l 183.938 760.992 l 177.867 767.055 169.023 769.418 160.738 767.191 c 152.453
 764.965 145.984 758.488 143.77 750.199 c 141.555 741.91 143.93 733.07 150
 727.008 c 178.895 698.113 l 108.762 644.051 62.797 564.492 51 476.73 c 
39.199 388.965 62.52 300.094 115.887 229.43 c 169.254 158.766 248.359 112.023
 336 99.359 c 336 48 l 312 48 l 305.637 48 299.531 45.473 295.031 40.969
 c 290.527 36.469 288 30.363 288 24 c 408 264 m 408 255.426 403.426 247.504
 396 243.215 c 388.574 238.93 379.426 238.93 372 243.215 c 364.574 247.504
 360 255.426 360 264 c 360 425.375 l 291.406 539.613 l 291.406 539.617 l
 286.992 546.973 286.836 556.125 291 563.629 c 295.164 571.133 303.012 575.844
 311.594 575.988 c 320.172 576.137 328.176 571.691 332.594 564.336 c 404.594
 444.336 l 406.824 440.609 408 436.344 408 432 c h
41.281 258.574 m 16.176 236.738 1.266 205.457 0.109 172.203 c -1.047 138.953
 11.656 106.711 35.184 83.184 c 58.711 59.656 90.953 46.953 124.203 48.109
 c 157.457 49.266 188.738 64.176 210.574 89.281 c 137.625 126.336 78.336
 185.625 41.281 258.574 c 557.426 89.281 m 579.262 64.176 610.543 49.266
 643.797 48.109 c 677.047 46.953 709.289 59.656 732.816 83.184 c 756.344
 106.711 769.047 138.953 767.891 172.203 c 766.734 205.457 751.824 236.738
 726.719 258.574 c 689.664 185.625 630.375 126.336 557.426 89.281 c f
Q Q
showpage
%%Trailer
%%EOF
