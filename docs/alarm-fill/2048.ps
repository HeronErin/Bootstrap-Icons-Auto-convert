%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 48 m 576 35.27 581.059 23.062 590.059 14.059 c 599.062 5.059 611.27
 0 624 0 c 912 0 l 929.148 0 944.996 9.148 953.57 24 c 962.145 38.852 962.145
 57.148 953.57 72 c 944.996 86.852 929.148 96 912 96 c 864 96 l 864 198.719
 l 1039.297 224.023 1197.516 317.5 1304.27 458.824 c 1411.023 600.148 1457.676
 777.898 1434.086 953.43 c 1410.5 1128.965 1318.578 1288.094 1178.305 1396.223
 c 1236 1454.016 l 1248.141 1466.141 1252.891 1483.82 1248.465 1500.398 
c 1244.035 1516.973 1231.098 1529.93 1214.527 1534.383 c 1197.957 1538.836
 1180.27 1534.109 1168.129 1521.984 c 1096.512 1450.367 l 996.191 1506.68
 883.043 1536.172 768 1536 c 652.957 1536.172 539.809 1506.68 439.488 1450.367
 c 367.871 1521.984 l 355.73 1534.109 338.043 1538.836 321.473 1534.383 
c 304.902 1529.93 291.965 1516.973 287.535 1500.398 c 283.109 1483.82 287.859
 1466.141 300 1454.016 c 357.793 1396.223 l 217.52 1288.102 125.598 1128.984
 102 953.461 c 78.402 777.934 125.039 600.188 231.773 458.859 c 338.512 
317.531 496.715 224.043 672 198.719 c 672 96 l 624 96 l 611.27 96 599.062
 90.941 590.059 81.941 c 581.059 72.938 576 60.73 576 48 c 816 528 m 816
 510.852 806.852 495.004 792 486.43 c 777.148 477.855 758.852 477.855 744
 486.43 c 729.148 495.004 720 510.852 720 528 c 720 850.754 l 582.816 1079.234
 l 582.816 1079.23 l 573.984 1093.945 573.672 1112.254 582 1127.258 c 590.328
 1142.262 606.027 1151.688 623.184 1151.977 c 640.344 1152.27 656.352 1143.387
 665.184 1128.672 c 809.184 888.672 l 813.648 881.215 816.004 872.688 816
 864 c h
82.559 517.152 m 49.352 488.266 24.723 450.801 11.375 408.859 c -1.973 
366.914 -3.531 322.109 6.875 279.34 c 17.277 236.574 39.242 197.488 70.367
 166.367 c 101.488 135.242 140.574 113.277 183.34 102.875 c 226.109 92.469
 270.914 94.027 312.859 107.375 c 354.801 120.723 392.266 145.352 421.152
 178.559 c 275.246 252.676 156.676 371.246 82.559 517.152 c 1114.848 178.559
 m 1143.734 145.352 1181.199 120.723 1223.141 107.375 c 1265.086 94.027 
1309.891 92.469 1352.66 102.875 c 1395.426 113.277 1434.512 135.242 1465.633
 166.367 c 1496.758 197.488 1518.723 236.574 1529.125 279.34 c 1539.531 
322.109 1537.973 366.914 1524.625 408.859 c 1511.277 450.801 1486.648 488.266
 1453.441 517.152 c 1379.324 371.246 1260.754 252.676 1114.848 178.559 c
 f
Q Q
showpage
%%Trailer
%%EOF
