%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 95 0 1441 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 95 0 1441 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 95 0 1346 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
912 144 m 912 195.445 884.555 242.984 840 268.707 c 795.445 294.43 740.555
 294.43 696 268.707 c 651.445 242.984 624 195.445 624 144 c 624 92.555 651.445
 45.016 696 19.293 c 740.555 -6.43 795.445 -6.43 840 19.293 c 884.555 45.016
 912 92.555 912 144 c 576 528 m 140.641 485.566 l 123.293 483.426 108.25
 472.547 100.789 456.742 c 93.324 440.934 94.48 422.406 103.852 407.652 
c 113.219 392.895 129.496 383.969 146.977 384 c 1389.121 384 l 1406.598 
383.969 1422.875 392.895 1432.246 407.652 c 1441.613 422.406 1442.77 440.934
 1435.309 456.742 c 1427.844 472.547 1412.805 483.426 1395.457 485.566 c
 960 528 l 960 864 l 1003.391 1480.32 l 1005.004 1497.727 997.656 1514.754
 983.887 1525.523 c 970.117 1536.289 951.816 1539.312 935.312 1533.547 c
 918.812 1527.785 906.375 1514.023 902.305 1497.023 c 791.328 957.121 l 
785.184 932.93 750.816 932.93 744.672 957.121 c 633.695 1497.023 l 629.625
 1514.023 617.188 1527.785 600.688 1533.547 c 584.184 1539.312 565.883 1536.289
 552.113 1525.523 c 538.344 1514.754 530.996 1497.727 532.609 1480.32 c 
576 864 l h
576 528 m f
Q Q
showpage
%%Trailer
%%EOF
