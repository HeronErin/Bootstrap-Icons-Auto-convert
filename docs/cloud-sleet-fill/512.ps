%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
57 324 m 58.59 324 60.117 324.633 61.242 325.758 c 62.367 326.883 63 328.41
 63 330 c 63 343.68 l 75.023 336.793 l 77.891 335.242 81.469 336.266 83.086
 339.094 c 84.703 341.922 83.766 345.523 80.977 347.207 c 69.098 354 l 80.977
 360.793 l 82.398 361.559 83.449 362.871 83.895 364.422 c 84.336 365.977
 84.133 367.645 83.332 369.047 c 82.531 370.449 81.199 371.469 79.633 371.879
 c 78.07 372.285 76.406 372.043 75.023 371.207 c 63 364.344 l 63 378 l 63
 381.312 60.312 384 57 384 c 53.688 384 51 381.312 51 378 c 51 364.32 l 
38.977 371.207 l 37.594 372.043 35.93 372.285 34.367 371.879 c 32.801 371.469
 31.469 370.449 30.668 369.047 c 29.867 367.645 29.664 365.977 30.105 364.422
 c 30.551 362.871 31.602 361.559 33.023 360.793 c 44.902 354 l 33.023 347.207
 l 31.602 346.441 30.551 345.129 30.105 343.578 c 29.664 342.023 29.867 
340.355 30.668 338.953 c 31.469 337.551 32.801 336.531 34.367 336.121 c 
35.93 335.715 37.594 335.957 38.977 336.793 c 51 343.656 l 51 330 l 51 326.688
 53.688 324 57 324 c 101.375 265.273 m 107.285 268.242 109.68 275.434 106.727
 281.352 c 94.727 305.352 l 91.652 311.059 84.598 313.289 78.801 310.391
 c 73 307.488 70.555 300.508 73.273 294.625 c 85.273 270.625 l 88.242 264.715
 95.434 262.32 101.352 265.273 c h
153 324 m 154.59 324 156.117 324.633 157.242 325.758 c 158.367 326.883 
159 328.41 159 330 c 159 343.68 l 171 336.793 l 173.875 335.141 177.547 
336.137 179.195 339.012 c 180.848 341.887 179.852 345.559 176.977 347.207
 c 165.098 354 l 176.977 360.793 l 178.398 361.559 179.449 362.871 179.895
 364.422 c 180.336 365.977 180.133 367.645 179.332 369.047 c 178.531 370.449
 177.199 371.469 175.633 371.879 c 174.07 372.285 172.406 372.043 171.023
 371.207 c 159 364.344 l 159 378 l 159 381.312 156.312 384 153 384 c 149.688
 384 147 381.312 147 378 c 147 364.32 l 134.977 371.207 l 133.594 372.043
 131.93 372.285 130.367 371.879 c 128.801 371.469 127.469 370.449 126.668
 369.047 c 125.867 367.645 125.664 365.977 126.105 364.422 c 126.551 362.871
 127.602 361.559 129.023 360.793 c 140.902 354 l 129.023 347.207 l 127.602
 346.441 126.551 345.129 126.105 343.578 c 125.664 342.023 125.867 340.355
 126.668 338.953 c 127.469 337.551 128.801 336.531 130.367 336.121 c 131.93
 335.715 133.594 335.957 134.977 336.793 c 147 343.656 l 147 330 l 147 326.688
 149.688 324 153 324 c 197.375 265.273 m 203.285 268.242 205.68 275.434 
202.727 281.352 c 190.727 305.352 l 187.652 311.059 180.598 313.289 174.801
 310.391 c 169 307.488 166.555 300.508 169.273 294.625 c 181.273 270.625
 l 184.242 264.715 191.434 262.32 197.352 265.273 c h
249 324 m 250.59 324 252.117 324.633 253.242 325.758 c 254.367 326.883 
255 328.41 255 330 c 255 343.68 l 267 336.793 l 269.875 335.141 273.547 
336.137 275.195 339.012 c 276.848 341.887 275.852 345.559 272.977 347.207
 c 261.098 354 l 272.977 360.793 l 274.398 361.559 275.449 362.871 275.895
 364.422 c 276.336 365.977 276.133 367.645 275.332 369.047 c 274.531 370.449
 273.199 371.469 271.633 371.879 c 270.07 372.285 268.406 372.043 267.023
 371.207 c 255 364.344 l 255 378 l 255 381.312 252.312 384 249 384 c 245.688
 384 243 381.312 243 378 c 243 364.32 l 230.977 371.207 l 229.594 372.043
 227.93 372.285 226.367 371.879 c 224.801 371.469 223.469 370.449 222.668
 369.047 c 221.867 367.645 221.664 365.977 222.105 364.422 c 222.551 362.871
 223.602 361.559 225.023 360.793 c 236.902 354 l 225.023 347.207 l 223.602
 346.441 222.551 345.129 222.105 343.578 c 221.664 342.023 221.867 340.355
 222.668 338.953 c 223.469 337.551 224.801 336.531 226.367 336.121 c 227.93
 335.715 229.594 335.957 230.977 336.793 c 243 343.656 l 243 330 l 243 326.688
 245.688 324 249 324 c 293.375 265.273 m 299.285 268.242 301.68 275.434 
298.727 281.352 c 286.727 305.352 l 285.367 308.301 282.867 310.57 279.805
 311.645 c 276.742 312.719 273.371 312.504 270.469 311.055 c 267.562 309.602
 265.371 307.035 264.395 303.938 c 263.414 300.844 263.73 297.48 265.273
 294.625 c 277.273 270.625 l 280.242 264.715 287.434 262.32 293.352 265.273
 c h
321.719 96.648 m 315.031 62.926 294.203 33.691 264.512 16.355 c 234.824
 -0.98 199.129 -4.754 166.473 5.992 c 133.816 16.738 107.336 40.973 93.742
 72.551 c 70.793 69.906 47.766 76.832 30.082 91.699 c 12.398 106.562 1.613
 128.059 0.273 151.121 c -1.07 174.184 7.148 196.781 22.988 213.598 c 38.828
 230.414 60.898 239.965 84 240 c 312 240 l 336.586 240.027 359.484 227.512
 372.734 206.801 c 385.98 186.09 387.746 160.051 377.414 137.742 c 367.086
 115.434 346.082 99.938 321.719 96.648 c f
Q Q
showpage
%%Trailer
%%EOF
