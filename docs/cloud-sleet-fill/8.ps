%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.891 5.062 m 0.941 5.062 0.984 5.105 0.984 5.156 c 0.984 5.371 l 1.172
 5.262 l 1.281 5.203 1.371 5.363 1.266 5.426 c 1.078 5.531 l 1.266 5.637
 l 1.312 5.664 1.328 5.719 1.301 5.766 c 1.277 5.812 1.219 5.828 1.172 5.801
 c 0.984 5.695 l 0.984 5.91 l 0.984 5.906 l 0.984 6.031 0.797 6.031 0.797
 5.906 c 0.797 5.691 l 0.609 5.801 l 0.562 5.828 0.504 5.812 0.48 5.766 
c 0.453 5.719 0.469 5.664 0.516 5.637 c 0.703 5.531 l 0.516 5.426 l 0.469
 5.398 0.453 5.344 0.48 5.297 c 0.504 5.25 0.562 5.234 0.609 5.262 c 0.797
 5.367 l 0.797 5.152 l 0.797 5.156 l 0.797 5.105 0.84 5.062 0.891 5.062 
c 1.586 4.145 m 1.676 4.191 1.715 4.305 1.668 4.395 c 1.48 4.77 l 1.363 
4.984 1.043 4.824 1.145 4.602 c 1.332 4.227 l 1.379 4.137 1.492 4.098 1.582
 4.145 c h
2.391 5.062 m 2.441 5.062 2.484 5.105 2.484 5.156 c 2.484 5.371 l 2.672
 5.262 l 2.781 5.199 2.875 5.363 2.766 5.426 c 2.578 5.531 l 2.766 5.637
 l 2.812 5.664 2.828 5.719 2.801 5.766 c 2.777 5.812 2.719 5.828 2.672 5.801
 c 2.484 5.695 l 2.484 5.91 l 2.484 5.906 l 2.484 6.031 2.297 6.031 2.297
 5.906 c 2.297 5.691 l 2.109 5.801 l 2.062 5.828 2.004 5.812 1.98 5.766 
c 1.953 5.719 1.969 5.664 2.016 5.637 c 2.203 5.531 l 2.016 5.426 l 1.969
 5.398 1.953 5.344 1.98 5.297 c 2.004 5.25 2.062 5.234 2.109 5.262 c 2.297
 5.367 l 2.297 5.152 l 2.297 5.156 l 2.297 5.105 2.34 5.062 2.391 5.062 
c 3.086 4.145 m 3.176 4.191 3.215 4.305 3.168 4.395 c 2.98 4.77 l 2.863 
4.984 2.543 4.824 2.645 4.602 c 2.832 4.227 l 2.879 4.137 2.992 4.098 3.082
 4.145 c h
3.891 5.062 m 3.941 5.062 3.984 5.105 3.984 5.156 c 3.984 5.371 l 4.172
 5.262 l 4.281 5.199 4.375 5.363 4.266 5.426 c 4.078 5.531 l 4.266 5.637
 l 4.312 5.664 4.328 5.719 4.301 5.766 c 4.277 5.812 4.219 5.828 4.172 5.801
 c 3.984 5.695 l 3.984 5.91 l 3.984 5.906 l 3.984 6.031 3.797 6.031 3.797
 5.906 c 3.797 5.691 l 3.609 5.801 l 3.562 5.828 3.504 5.812 3.48 5.766 
c 3.453 5.719 3.469 5.664 3.516 5.637 c 3.703 5.531 l 3.516 5.426 l 3.469
 5.398 3.453 5.344 3.48 5.297 c 3.504 5.25 3.562 5.234 3.609 5.262 c 3.797
 5.367 l 3.797 5.152 l 3.797 5.156 l 3.797 5.105 3.84 5.062 3.891 5.062 
c 4.586 4.145 m 4.676 4.191 4.715 4.305 4.668 4.395 c 4.48 4.77 l 4.438 
4.867 4.32 4.906 4.227 4.859 c 4.133 4.812 4.094 4.695 4.145 4.602 c 4.332
 4.227 l 4.379 4.137 4.492 4.098 4.582 4.145 c h
5.027 1.512 m 4.867 0.703 4.203 0.098 3.383 0.012 c 2.566 -0.078 1.789 
0.379 1.465 1.133 c 1.105 1.094 0.746 1.199 0.469 1.434 c 0.195 1.664 0.023
 2 0.004 2.359 c -0.016 2.723 0.113 3.074 0.359 3.336 c 0.605 3.602 0.953
 3.75 1.312 3.75 c 4.875 3.75 l 5.469 3.75 5.957 3.293 6 2.699 c 6.039 2.109
 5.613 1.59 5.027 1.512 c f
Q Q
showpage
%%Trailer
%%EOF
