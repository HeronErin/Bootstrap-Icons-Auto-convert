%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 192 768 528
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 192 768 528
768 768 cairo_set_page_size
%%EndPageSetup
q 0 192 768 336 rectclip
1 0 0 -1 0 768 cm q
0 g
336 408 m 336.004 430.348 331.547 452.473 322.895 473.078 c 314.238 493.684
 301.559 512.355 285.602 528 c 482.402 528 l 482.398 528 l 454.586 500.746
 437.102 464.68 432.938 425.961 c 428.773 387.246 438.191 348.285 459.574
 315.742 c 480.961 283.199 512.984 259.094 550.176 247.551 c 587.363 236.008
 627.41 237.742 663.461 252.457 c 699.516 267.172 729.336 293.957 747.828
 328.227 c 766.316 362.496 772.328 402.125 764.836 440.336 c 757.34 478.547
 736.801 512.969 706.734 537.715 c 676.668 562.461 638.941 575.996 600 576
 c 168 576 l 123.445 576 80.711 558.301 49.207 526.793 c 17.699 495.289 
0 452.555 0 408 c 0 363.445 17.699 320.711 49.207 289.207 c 80.711 257.699
 123.445 240 168 240 c 212.555 240 255.289 257.699 286.793 289.207 c 318.301
 320.711 336 363.445 336 408 c 48 408 m 48 450.871 70.871 490.488 108 511.922
 c 145.129 533.359 190.871 533.359 228 511.922 c 265.129 490.488 288 450.871
 288 408 c 288 365.129 265.129 325.512 228 304.078 c 190.871 282.641 145.129
 282.641 108 304.078 c 70.871 325.512 48 365.129 48 408 c 720 408 m 720 
365.129 697.129 325.512 660 304.078 c 622.871 282.641 577.129 282.641 540
 304.078 c 502.871 325.512 480 365.129 480 408 c 480 450.871 502.871 490.488
 540 511.922 c 577.129 533.359 622.871 533.359 660 511.922 c 697.129 490.488
 720 450.871 720 408 c f
Q Q
showpage
%%Trailer
%%EOF
