%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 384 1536 1056
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 384 1536 1056
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 384 1536 672 rectclip
1 0 0 -1 0 1536 cm q
0 g
672 816 m 672.008 860.699 663.094 904.949 645.785 946.156 c 628.477 987.367
 603.121 1024.711 571.199 1056 c 964.801 1056 l 909.172 1001.496 874.203
 929.359 865.879 851.926 c 857.551 774.488 876.383 696.566 919.148 631.48
 c 961.918 566.395 1025.969 518.188 1100.348 495.102 c 1174.73 472.016 1254.82
 475.484 1326.926 504.914 c 1399.031 534.348 1458.672 587.91 1495.652 656.449
 c 1532.637 724.992 1544.66 804.25 1529.668 880.672 c 1514.676 957.098 1473.605
 1025.941 1413.473 1075.434 c 1353.34 1124.922 1277.879 1151.988 1200 1152
 c 336 1152 l 246.887 1152 161.426 1116.602 98.414 1053.586 c 35.398 990.574
 0 905.113 0 816 c 0 726.887 35.398 641.426 98.414 578.414 c 161.426 515.398
 246.887 480 336 480 c 425.113 480 510.574 515.398 573.586 578.414 c 636.602
 641.426 672 726.887 672 816 c 96 816 m 96 879.652 121.285 940.695 166.293
 985.707 c 211.305 1030.715 272.348 1056 336 1056 c 399.652 1056 460.695
 1030.715 505.707 985.707 c 550.715 940.695 576 879.652 576 816 c 576 752.348
 550.715 691.305 505.707 646.293 c 460.695 601.285 399.652 576 336 576 c
 272.348 576 211.305 601.285 166.293 646.293 c 121.285 691.305 96 752.348
 96 816 c 1440 816 m 1440 752.348 1414.715 691.305 1369.707 646.293 c 1324.695
 601.285 1263.652 576 1200 576 c 1136.348 576 1075.305 601.285 1030.293 
646.293 c 985.285 691.305 960 752.348 960 816 c 960 879.652 985.285 940.695
 1030.293 985.707 c 1075.305 1030.715 1136.348 1056 1200 1056 c 1263.652
 1056 1324.695 1030.715 1369.707 985.707 c 1414.715 940.695 1440 879.652
 1440 816 c f
Q Q
showpage
%%Trailer
%%EOF
