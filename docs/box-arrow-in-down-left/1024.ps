%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 48 721 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 48 721 721
768 768 cairo_set_page_size
%%EndPageSetup
q 48 48 673 673 rectclip
1 0 0 -1 0 768 cm q
0 g
462.527 120 m 462.527 113.637 460 107.531 455.5 103.031 c 450.996 98.527
 444.895 96 438.527 96 c 120 96 l 100.906 96 82.59 103.586 69.09 117.09 
c 55.586 130.59 48 148.906 48 168 c 48 648 l 48 667.094 55.586 685.41 69.09
 698.91 c 82.59 712.414 100.906 720 120 720 c 600 720 l 619.094 720 637.41
 712.414 650.91 698.91 c 664.414 685.41 672 667.094 672 648 c 672 329.473
 l 672 320.898 667.426 312.973 660 308.688 c 652.574 304.398 643.426 304.398
 636 308.688 c 628.574 312.973 624 320.898 624 329.473 c 624 648 l 624 654.363
 621.473 660.469 616.969 664.969 c 612.469 669.473 606.363 672 600 672 c
 120 672 l 113.637 672 107.531 669.473 103.031 664.969 c 98.527 660.469 
96 654.363 96 648 c 96 168 l 96 161.637 98.527 155.531 103.031 151.031 c
 107.531 146.527 113.637 144 120 144 c 438.527 144 l 444.895 144 450.996
 141.473 455.5 136.969 c 460 132.469 462.527 126.363 462.527 120 c f*
240 504 m 240 510.363 242.527 516.469 247.031 520.969 c 251.531 525.473
 257.637 528 264 528 c 504 528 l 512.574 528 520.496 523.426 524.785 516
 c 529.07 508.574 529.07 499.426 524.785 492 c 520.496 484.574 512.574 480
 504 480 c 321.938 480 l 712.992 88.992 l 719.062 82.922 721.434 74.074 
719.211 65.781 c 716.988 57.488 710.512 51.012 702.219 48.789 c 693.926 
46.566 685.078 48.938 679.008 55.008 c 288 446.062 l 288 264 l 288 255.426
 283.426 247.504 276 243.215 c 268.574 238.93 259.426 238.93 252 243.215
 c 244.574 247.504 240 255.426 240 264 c h
240 504 m f*
Q Q
showpage
%%Trailer
%%EOF
