%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 240 1393 1296
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 240 1393 1296
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 240 1249 1056 rectclip
1 0 0 -1 0 1536 cm q
0 g
320.641 287.426 m 347.039 254.977 385.922 240 423.746 240 c 1112.258 240
 l 1149.984 240 1188.867 254.977 1215.363 287.426 c 1270.852 355.395 1392.004
 530.691 1392.004 768 c 1392.004 1005.312 1270.852 1180.512 1215.363 1248.574
 c 1188.867 1281.023 1150.082 1296 1112.258 1296 c 423.742 1296 l 385.918
 1296 347.039 1281.023 320.637 1248.574 c 265.152 1180.512 144 1005.312 
144 768 c 144 530.688 265.152 355.488 320.641 287.426 c 423.746 336 m 423.742
 336 l 412.848 335.539 402.32 339.977 395.039 348.098 c 345.504 408.863 
240 562.848 240 768 c 240 973.152 345.504 1127.039 395.039 1187.902 c 400.801
 1194.91 410.688 1200 423.84 1200 c 1112.16 1200 l 1125.312 1200 1135.199
 1194.91 1140.961 1187.902 c 1190.496 1127.133 1296 973.148 1296 768 c 1296
 562.848 1190.496 408.961 1140.961 348.098 c 1133.66 339.949 1123.09 335.512
 1112.16 336 c h
423.746 336 m f
576 528 m 588.73 528 600.938 533.059 609.941 542.059 c 618.941 551.062 
624 563.27 624 576 c 624 720 l 624 737.148 614.852 752.996 600 761.57 c 
585.148 770.145 566.852 770.145 552 761.57 c 537.148 752.996 528 737.148
 528 720 c 528 576 l 528 563.27 533.059 551.062 542.059 542.059 c 551.062
 533.059 563.27 528 576 528 c 960 528 m 972.73 528 984.938 533.059 993.941
 542.059 c 1002.941 551.062 1008 563.27 1008 576 c 1008 720 l 1008 737.148
 998.852 752.996 984 761.57 c 969.148 770.145 950.852 770.145 936 761.57
 c 921.148 752.996 912 737.148 912 720 c 912 576 l 912 563.27 917.059 551.062
 926.059 542.059 c 935.062 533.059 947.27 528 960 528 c 672 960 m 672 1056
 l 864 1056 l 864 960 l 864 925.703 845.703 894.012 816 876.863 c 786.297
 859.711 749.703 859.711 720 876.863 c 690.297 894.012 672 925.703 672 960
 c f
Q Q
showpage
%%Trailer
%%EOF
