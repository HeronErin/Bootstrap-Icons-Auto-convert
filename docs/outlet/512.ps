%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 36 60 349 324
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 36 60 349 324
384 384 cairo_set_page_size
%%EndPageSetup
q 36 60 313 264 rectclip
1 0 0 -1 0 384 cm q
0 g
80.16 71.855 m 86.762 63.742 96.48 60 105.938 60 c 278.066 60 l 287.5 60
 297.219 63.742 303.844 71.855 c 317.715 88.848 348.004 132.672 348.004 
192 c 348.004 251.328 317.715 295.129 303.844 312.145 c 297.219 320.258 
287.523 324 278.066 324 c 105.938 324 l 96.48 324 86.762 320.258 80.16 312.145
 c 66.289 295.129 36 251.328 36 192 c 36 132.672 66.289 88.871 80.16 71.855
 c 105.938 84 m 103.211 83.887 100.578 84.992 98.762 87.023 c 86.375 102.215
 60 140.711 60 192 c 60 243.289 86.375 281.762 98.762 296.977 c 100.203 
298.73 102.672 300 105.961 300 c 278.039 300 l 281.328 300 283.801 298.727
 285.238 296.977 c 297.621 281.785 324 243.289 324 192 c 324 140.711 297.625
 102.238 285.238 87.023 c 283.414 84.988 280.773 83.879 278.039 84 c h
105.938 84 m f
144 132 m 147.184 132 150.234 133.266 152.484 135.516 c 154.734 137.766
 156 140.816 156 144 c 156 180 l 156 186.629 150.629 192 144 192 c 137.371
 192 132 186.629 132 180 c 132 144 l 132 137.371 137.371 132 144 132 c 240
 132 m 243.184 132 246.234 133.266 248.484 135.516 c 250.734 137.766 252
 140.816 252 144 c 252 180 l 252 186.629 246.629 192 240 192 c 233.371 192
 228 186.629 228 180 c 228 144 l 228 137.371 233.371 132 240 132 c 168 240
 m 168 264 l 216 264 l 216 240 l 216 231.426 211.426 223.504 204 219.215
 c 196.574 214.93 187.426 214.93 180 219.215 c 172.574 223.504 168 231.426
 168 240 c f
Q Q
showpage
%%Trailer
%%EOF
