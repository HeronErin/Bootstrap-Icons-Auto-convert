%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 120 696 648
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 120 696 648
768 768 cairo_set_page_size
%%EndPageSetup
q 72 120 624 528 rectclip
1 0 0 -1 0 768 cm q
0 g
160.32 143.711 m 173.52 127.488 192.961 120 211.871 120 c 556.129 120 l
 574.992 120 594.434 127.488 607.68 143.711 c 635.422 177.695 696 265.344
 696 384 c 696 502.656 635.426 590.258 607.68 624.289 c 594.434 640.512 
575.039 648 556.129 648 c 211.871 648 l 192.961 648 173.52 640.512 160.32
 624.289 c 132.574 590.258 72 502.656 72 384 c 72 265.344 132.574 177.742
 160.32 143.711 c 211.871 168 m 206.426 167.77 201.16 169.988 197.52 174.047
 c 172.754 204.434 120 281.426 120 384 c 120 486.574 172.754 563.52 197.52
 593.953 c 200.398 597.457 205.344 600 211.918 600 c 556.078 600 l 562.652
 600 567.598 597.457 570.477 593.953 c 595.246 563.57 647.996 486.578 647.996
 384 c 647.996 281.426 595.242 204.48 570.477 174.047 c 570.48 174.047 l
 566.828 169.977 561.543 167.754 556.078 168 c h
211.871 168 m f
288 264 m 294.363 264 300.469 266.527 304.969 271.031 c 309.473 275.531
 312 281.637 312 288 c 312 360 l 312 368.574 307.426 376.496 300 380.785
 c 292.574 385.07 283.426 385.07 276 380.785 c 268.574 376.496 264 368.574
 264 360 c 264 288 l 264 281.637 266.527 275.531 271.031 271.031 c 275.531
 266.527 281.637 264 288 264 c 480 264 m 486.363 264 492.469 266.527 496.969
 271.031 c 501.473 275.531 504 281.637 504 288 c 504 360 l 504 368.574 499.426
 376.496 492 380.785 c 484.574 385.07 475.426 385.07 468 380.785 c 460.574
 376.496 456 368.574 456 360 c 456 288 l 456 281.637 458.527 275.531 463.031
 271.031 c 467.531 266.527 473.637 264 480 264 c 336 480 m 336 528 l 432
 528 l 432 480 l 432 462.852 422.852 447.004 408 438.43 c 393.148 429.855
 374.852 429.855 360 438.43 c 345.148 447.004 336 462.852 336 480 c f
Q Q
showpage
%%Trailer
%%EOF
