%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 239 0 1297 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 239 0 1297 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 239 0 1058 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1080.098 6.527 m 1089.492 11.977 1096.762 20.445 1100.719 30.559 c 1104.68
 40.672 1105.09 51.832 1101.887 62.207 c 928.992 624 l 1248 624 l 1260.57
 623.996 1272.641 628.922 1281.617 637.719 c 1290.594 646.516 1295.762 658.484
 1296.012 671.051 c 1296.258 683.621 1291.566 695.781 1282.945 704.93 c 
514.945 1520.93 l 504.961 1531.543 490.699 1537.047 476.172 1535.895 c 461.648
 1534.738 448.434 1527.051 440.254 1514.992 c 432.074 1502.934 429.816 1487.812
 434.113 1473.887 c 607.008 912 l 288 912 l 275.43 912.004 263.359 907.078
 254.383 898.281 c 245.406 889.484 240.238 877.516 239.988 864.949 c 239.742
 852.379 244.434 840.219 253.055 831.07 c 1021.055 15.07 l 1028.477 7.18
 1038.352 2.031 1049.07 0.465 c 1059.789 -1.105 1070.723 1 1080.098 6.434
 c h
399.07 816 m 672 816 l 687.234 815.996 701.562 823.227 710.617 835.477 
c 719.668 847.73 722.367 863.551 717.887 878.113 c 586.559 1304.641 l 1136.832
 720 l 864 720 l 848.766 720.004 834.438 712.773 825.383 700.523 c 816.332
 688.27 813.633 672.449 818.113 657.887 c 949.441 231.359 l h
399.07 816 m f
Q Q
showpage
%%Trailer
%%EOF
