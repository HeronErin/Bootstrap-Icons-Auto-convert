%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
6 3 m 6 4.656 4.656 6 3 6 c 1.344 6 0 4.656 0 3 c 0 1.344 1.344 0 3 0 c
 4.656 0 6 1.344 6 3 c 3.562 1.312 m 3.562 1.418 3.645 1.5 3.75 1.5 c 4.062
 1.5 4.367 1.656 4.52 1.961 c 4.566 2.051 4.68 2.09 4.773 2.043 c 4.867 
1.996 4.902 1.883 4.855 1.789 c 4.633 1.344 4.188 1.125 3.75 1.125 c 3.645
 1.125 3.562 1.207 3.562 1.312 c 2.625 2.438 m 2.625 2.129 2.457 1.875 2.25
 1.875 c 2.043 1.875 1.875 2.129 1.875 2.438 c 1.875 2.746 2.043 3 2.25 
3 c 2.457 3 2.625 2.746 2.625 2.438 c 1.688 4.875 m 1.996 4.875 2.25 4.594
 2.25 4.25 c 2.25 3.984 1.918 3.391 1.766 3.129 c 1.73 3.07 1.645 3.07 1.609
 3.129 c 1.457 3.391 1.125 3.984 1.125 4.25 c 1.125 4.594 1.379 4.875 1.688
 4.875 c 3 4.199 m 3.344 4.199 3.602 4.352 3.844 4.508 c 3.922 4.559 4.004
 4.48 3.949 4.402 c 3.738 4.09 3.363 3.633 3 3.633 c 2.801 3.633 2.602 3.77
 2.426 3.941 c 2.457 4.008 2.484 4.074 2.512 4.141 c 2.527 4.184 2.547 4.23
 2.562 4.281 c 2.562 4.285 l 2.699 4.23 2.852 4.199 3 4.199 c 3.75 3 m 3.957
 3 4.125 2.746 4.125 2.438 c 4.125 2.129 3.957 1.875 3.75 1.875 c 3.543 
1.875 3.375 2.129 3.375 2.438 c 3.375 2.746 3.543 3 3.75 3 c 2.438 1.125
 m 2 1.125 1.555 1.344 1.332 1.789 c 1.285 1.883 1.32 1.996 1.414 2.043 
c 1.508 2.09 1.621 2.051 1.668 1.961 c 1.82 1.656 2.125 1.5 2.438 1.5 c 
2.688 1.5 2.688 1.125 2.438 1.125 c f
Q Q
showpage
%%Trailer
%%EOF
