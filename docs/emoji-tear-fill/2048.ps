%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536 971.688 1455.086 1167.031 1311.059 1311.059 c 1167.031 
1455.086 971.688 1536 768 1536 c 564.312 1536 368.969 1455.086 224.941 1311.059
 c 80.914 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969 224.941 224.941
 c 368.969 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914 1311.059 224.941
 c 1455.086 368.969 1536 564.312 1536 768 c 912 336 m 912 348.73 917.059
 360.938 926.059 369.941 c 935.062 378.941 947.27 384 960 384 c 1040.449
 384 1118.398 423.938 1157.09 501.504 c 1162.73 512.988 1172.727 521.742
 1184.852 525.824 c 1196.977 529.906 1210.23 528.977 1221.672 523.246 c 
1233.109 517.512 1241.785 507.453 1245.773 495.293 c 1249.762 483.137 1248.734
 469.891 1242.91 458.496 c 1185.695 344.062 1071.551 288 960 288 c 947.27
 288 935.062 293.059 926.059 302.059 c 917.059 311.062 912 323.27 912 336
 c 672 624 m 672 544.512 628.992 480 576 480 c 523.008 480 480 544.512 480
 624 c 480 703.488 523.008 768 576 768 c 628.992 768 672 703.488 672 624
 c 432 1248 m 511.488 1248 576 1176.383 576 1087.969 c 576 1020.191 491.328
 868.129 451.777 800.93 c 447.691 793.871 440.156 789.523 432 789.523 c 
423.844 789.523 416.309 793.871 412.223 800.93 c 372.672 868.223 288 1020.289
 288 1088.062 c 288 1176.289 352.512 1248 432 1248 c 768 1074.91 m 855.938
 1074.91 922.273 1114.078 984 1154.207 c 1004.352 1167.453 1024.703 1147.582
 1011.07 1127.613 c 956.926 1047.934 861.504 930.91 768 930.91 c 717.121
 930.91 665.664 965.566 620.543 1010.016 c 628.605 1027.297 636.031 1044.414
 642.816 1061.375 c 647.23 1072.512 651.551 1084.445 655.777 1097.184 c 
691.391 1082.57 729.504 1075.008 768 1074.91 c 960 768 m 1012.992 768 1056
 703.488 1056 624 c 1056 544.512 1012.992 480 960 480 c 907.008 480 864 
544.512 864 624 c 864 703.488 907.008 768 960 768 c 624 288 m 512.449 288
 398.398 344.062 341.09 458.496 c 335.266 469.891 334.238 483.137 338.227
 495.293 c 342.215 507.453 350.891 517.512 362.328 523.246 c 373.77 528.977
 387.023 529.906 399.148 525.824 c 411.273 521.742 421.27 512.988 426.91
 501.504 c 465.695 423.938 543.551 384 624 384 c 641.148 384 656.996 374.852
 665.57 360 c 674.145 345.148 674.145 326.852 665.57 312 c 656.996 297.148
 641.148 288 624 288 c f
Q Q
showpage
%%Trailer
%%EOF
