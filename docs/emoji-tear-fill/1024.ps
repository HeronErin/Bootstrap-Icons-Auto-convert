%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
768 384 m 768 485.844 727.543 583.516 655.527 655.527 c 583.516 727.543
 485.844 768 384 768 c 282.156 768 184.484 727.543 112.473 655.527 c 40.457
 583.516 0 485.844 0 384 c 0 282.156 40.457 184.484 112.473 112.473 c 184.484
 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527 112.473 c 727.543
 184.484 768 282.156 768 384 c 456 168 m 456 174.363 458.527 180.469 463.031
 184.969 c 467.531 189.473 473.637 192 480 192 c 520.223 192 559.199 211.969
 578.543 250.754 c 581.367 256.492 586.363 260.871 592.426 262.91 c 598.488
 264.953 605.117 264.488 610.836 261.621 c 616.555 258.758 620.895 253.727
 622.887 247.648 c 624.883 241.566 624.367 234.945 621.457 229.246 c 592.848
 172.031 535.777 144 480 144 c 473.637 144 467.531 146.527 463.031 151.031
 c 458.527 155.531 456 161.637 456 168 c 336 312 m 336 272.258 314.496 240
 288 240 c 261.504 240 240 272.258 240 312 c 240 351.742 261.504 384 288
 384 c 314.496 384 336 351.742 336 312 c 216 624 m 255.742 624 288 588.191
 288 543.984 c 288 510.098 245.664 434.062 225.887 400.465 c 223.848 396.934
 220.078 394.762 216 394.762 c 211.922 394.762 208.152 396.934 206.113 400.465
 c 186.336 434.113 144 510.145 144 544.031 c 144 588.145 176.258 624 216
 624 c 384 537.457 m 427.969 537.457 461.137 557.043 492 577.105 c 502.176
 583.73 512.352 573.793 505.535 563.809 c 478.465 523.969 430.75 465.457
 384 465.457 c 358.559 465.457 332.832 482.785 310.273 505.008 c 314.305
 513.648 318.016 522.207 321.41 530.688 c 323.617 536.254 325.777 542.223
 327.891 548.59 c 327.887 548.594 l 345.695 541.285 364.75 537.504 384 537.457
 c 480 384 m 506.496 384 528 351.742 528 312 c 528 272.258 506.496 240 480
 240 c 453.504 240 432 272.258 432 312 c 432 351.742 453.504 384 480 384
 c 312 144 m 256.223 144 199.199 172.031 170.543 229.246 c 167.633 234.945
 167.117 241.566 169.113 247.648 c 171.105 253.727 175.445 258.758 181.164
 261.621 c 186.883 264.488 193.512 264.953 199.574 262.91 c 205.637 260.871
 210.633 256.492 213.457 250.754 c 232.848 211.969 271.777 192 312 192 c
 320.574 192 328.496 187.426 332.785 180 c 337.07 172.574 337.07 163.426
 332.785 156 c 328.496 148.574 320.574 144 312 144 c f
Q Q
showpage
%%Trailer
%%EOF
