%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
192 96 m 192 130.297 173.703 161.988 144 179.137 c 114.297 196.289 77.703
 196.289 48 179.137 c 18.297 161.988 0 130.297 0 96 c 0 61.703 18.297 30.012
 48 12.863 c 77.703 -4.289 114.297 -4.289 144 12.863 c 173.703 30.012 192
 61.703 192 96 c 114 42 m 114 43.59 114.633 45.117 115.758 46.242 c 116.883
 47.367 118.41 48 120 48 c 130.055 48 139.801 52.992 144.637 62.688 c 145.34
 64.125 146.59 65.219 148.105 65.727 c 149.621 66.238 151.277 66.121 152.707
 65.406 c 154.141 64.688 155.223 63.43 155.723 61.91 c 156.219 60.391 156.09
 58.734 155.363 57.312 c 148.211 43.008 133.945 36 120 36 c 116.688 36 114
 38.688 114 42 c 84 78 m 84 68.062 78.625 60 72 60 c 65.375 60 60 68.062
 60 78 c 60 87.938 65.375 96 72 96 c 78.625 96 84 87.938 84 78 c 54 156 
m 63.938 156 72 147.047 72 135.996 c 72 127.523 61.414 108.516 56.473 100.117
 c 55.961 99.234 55.02 98.691 54 98.691 c 52.98 98.691 52.039 99.234 51.527
 100.117 c 46.586 108.527 36 127.535 36 136.008 c 36 147.035 44.062 156 
54 156 c 96 134.363 m 106.992 134.363 115.285 139.258 123 144.273 c 125.543
 145.93 128.09 143.445 126.383 140.949 c 119.613 130.988 107.688 116.359
 96 116.359 c 89.641 116.359 83.207 120.691 77.566 126.246 c 78.574 128.406
 79.504 130.547 80.352 132.668 c 80.902 134.059 81.445 135.551 81.973 137.145
 c 81.973 137.148 l 86.426 135.32 91.188 134.375 96 134.363 c 120 96 m 126.625
 96 132 87.938 132 78 c 132 68.062 126.625 60 120 60 c 113.375 60 108 68.062
 108 78 c 108 87.938 113.375 96 120 96 c 78 36 m 64.055 36 49.801 43.008
 42.637 57.312 c 41.91 58.734 41.781 60.391 42.277 61.91 c 42.777 63.43 
43.859 64.688 45.293 65.406 c 46.723 66.121 48.379 66.238 49.895 65.727 
c 51.41 65.219 52.66 64.125 53.363 62.688 c 58.211 52.992 67.945 48 78 48
 c 81.312 48 84 45.312 84 42 c 84 38.688 81.312 36 78 36 c f
Q Q
showpage
%%Trailer
%%EOF
