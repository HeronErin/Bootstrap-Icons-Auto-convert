%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
384 192 m 384 242.922 363.773 291.758 327.766 327.766 c 291.758 363.773
 242.922 384 192 384 c 141.078 384 92.242 363.773 56.234 327.766 c 20.227
 291.758 0 242.922 0 192 c 0 141.078 20.227 92.242 56.234 56.234 c 92.242
 20.227 141.078 0 192 0 c 242.922 0 291.758 20.227 327.766 56.234 c 363.773
 92.242 384 141.078 384 192 c 228 84 m 228 87.184 229.266 90.234 231.516
 92.484 c 233.766 94.734 236.816 96 240 96 c 260.113 96 279.602 105.984 
289.273 125.375 c 290.684 128.246 293.18 130.434 296.215 131.457 c 299.246
 132.477 302.559 132.246 305.418 130.812 c 308.277 129.379 310.445 126.863
 311.445 123.824 c 312.441 120.785 312.184 117.473 310.727 114.625 c 296.426
 86.016 267.887 72 240 72 c 233.371 72 228 77.371 228 84 c 168 156 m 168
 136.129 157.246 120 144 120 c 130.754 120 120 136.129 120 156 c 120 175.871
 130.754 192 144 192 c 157.246 192 168 175.871 168 156 c 108 312 m 127.871
 312 144 294.098 144 271.992 c 144 255.047 122.832 217.031 112.945 200.23
 c 111.922 198.469 110.039 197.379 108 197.379 c 105.961 197.379 104.078
 198.469 103.055 200.23 c 93.168 217.055 72 255.07 72 272.016 c 72 294.07
 88.129 312 108 312 c 192 268.727 m 213.984 268.727 230.566 278.52 246 288.551
 c 251.09 291.863 256.176 286.895 252.77 281.902 c 239.234 261.98 215.379
 232.727 192 232.727 c 179.281 232.727 166.414 241.391 155.137 252.504 c
 157.152 256.824 159.008 261.105 160.703 265.344 c 161.809 268.129 162.887
 271.113 163.941 274.297 c 163.945 274.297 l 172.848 270.645 182.375 268.75
 192 268.727 c 240 192 m 253.246 192 264 175.871 264 156 c 264 136.129 253.246
 120 240 120 c 226.754 120 216 136.129 216 156 c 216 175.871 226.754 192
 240 192 c 156 72 m 128.113 72 99.602 86.016 85.273 114.625 c 83.816 117.473
 83.559 120.785 84.555 123.824 c 85.555 126.863 87.723 129.379 90.582 130.812
 c 93.441 132.246 96.754 132.477 99.785 131.457 c 102.82 130.434 105.316
 128.246 106.727 125.375 c 116.426 105.984 135.887 96 156 96 c 162.629 96
 168 90.629 168 84 c 168 77.371 162.629 72 156 72 c f
Q Q
showpage
%%Trailer
%%EOF
