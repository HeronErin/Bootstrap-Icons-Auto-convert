%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0 g
2.879 0.758 m 3.117 0.719 3.359 0.797 3.531 0.969 c 4.5 1.941 l 5.469 0.973
 l 5.469 0.969 l 5.609 0.828 5.801 0.75 6 0.75 c 6.199 0.75 6.391 0.828 
6.531 0.969 c 7.5 1.941 l 8.469 0.973 l 8.469 0.969 l 8.609 0.828 8.801 
0.75 9 0.75 c 9.199 0.75 9.391 0.828 9.531 0.969 c 10.5 1.941 l 11.469 0.973
 l 11.469 0.969 l 11.609 0.828 11.801 0.75 12 0.75 c 12.199 0.75 12.391 
0.828 12.531 0.969 c 13.5 1.941 l 14.469 0.973 l 14.469 0.969 l 14.609 0.828
 14.801 0.75 15 0.75 c 15.199 0.75 15.391 0.828 15.531 0.969 c 16.5 1.938
 l 17.469 0.969 l 17.609 0.828 17.801 0.75 18 0.75 c 18.199 0.75 18.391 
0.828 18.531 0.969 c 19.5 1.938 l 20.469 0.969 l 20.641 0.797 20.883 0.719
 21.121 0.758 c 21.359 0.797 21.562 0.949 21.672 1.164 c 22.422 2.664 l 
22.473 2.77 22.5 2.883 22.5 3 c 22.5 21 l 22.5 21.117 22.473 21.23 22.422
 21.336 c 21.672 22.836 l 21.562 23.051 21.359 23.203 21.121 23.238 c 20.883
 23.277 20.641 23.199 20.469 23.031 c 19.5 22.059 l 18.531 23.027 l 18.531
 23.031 l 18.391 23.172 18.199 23.25 18 23.25 c 17.801 23.25 17.609 23.172
 17.469 23.031 c 16.5 22.059 l 15.531 23.027 l 15.531 23.031 l 15.391 23.172
 15.199 23.25 15 23.25 c 14.801 23.25 14.609 23.172 14.469 23.031 c 13.5
 22.059 l 12.531 23.027 l 12.531 23.031 l 12.391 23.172 12.199 23.25 12 
23.25 c 11.801 23.25 11.609 23.172 11.469 23.031 c 10.5 22.059 l 9.531 23.027
 l 9.531 23.031 l 9.391 23.172 9.199 23.25 9 23.25 c 8.801 23.25 8.609 23.172
 8.469 23.031 c 7.5 22.059 l 6.531 23.027 l 6.531 23.031 l 6.391 23.172 
6.199 23.25 6 23.25 c 5.801 23.25 5.609 23.172 5.469 23.031 c 4.5 22.059
 l 3.531 23.027 l 3.531 23.031 l 3.359 23.203 3.117 23.281 2.879 23.242 
c 2.641 23.203 2.438 23.051 2.328 22.836 c 1.578 21.336 l 1.527 21.23 1.5
 21.117 1.5 21 c 1.5 3 l 1.5 2.883 1.527 2.77 1.578 2.664 c 2.328 1.164 
l 2.438 0.949 2.641 0.797 2.879 0.758 c 3.203 2.766 m 3 3.176 l 3 20.82 
l 3.207 21.23 l 3.973 20.465 l 3.969 20.469 l 4.262 20.176 4.738 20.176 
5.031 20.469 c 6 21.438 l 6.969 20.469 l 7.109 20.328 7.301 20.25 7.5 20.25
 c 7.699 20.25 7.891 20.328 8.031 20.469 c 9 21.438 l 9.969 20.469 l 10.109
 20.328 10.301 20.25 10.5 20.25 c 10.699 20.25 10.891 20.328 11.031 20.469
 c 12 21.438 l 12.969 20.469 l 13.109 20.328 13.301 20.25 13.5 20.25 c 13.699
 20.25 13.891 20.328 14.031 20.469 c 15 21.438 l 15.969 20.469 l 16.109 
20.328 16.301 20.25 16.5 20.25 c 16.699 20.25 16.891 20.328 17.031 20.469
 c 18 21.438 l 18.969 20.469 l 19.109 20.328 19.301 20.25 19.5 20.25 c 19.699
 20.25 19.891 20.328 20.031 20.469 c 20.793 21.23 l 21 20.82 l 21 3.176 
l 20.793 2.766 l 20.027 3.531 l 20.031 3.531 l 19.738 3.824 19.262 3.824
 18.969 3.531 c 18 2.559 l 17.031 3.527 l 17.031 3.531 l 16.891 3.672 16.699
 3.75 16.5 3.75 c 16.301 3.75 16.109 3.672 15.969 3.531 c 15 2.559 l 14.031
 3.527 l 14.031 3.531 l 13.891 3.672 13.699 3.75 13.5 3.75 c 13.301 3.75
 13.109 3.672 12.969 3.531 c 12 2.559 l 11.031 3.527 l 11.031 3.531 l 10.891
 3.672 10.699 3.75 10.5 3.75 c 10.301 3.75 10.109 3.672 9.969 3.531 c 9 
2.559 l 8.031 3.527 l 8.031 3.531 l 7.891 3.672 7.699 3.75 7.5 3.75 c 7.301
 3.75 7.109 3.672 6.969 3.531 c 6 2.559 l 5.031 3.527 l 5.031 3.531 l 4.891
 3.672 4.699 3.75 4.5 3.75 c 4.301 3.75 4.109 3.672 3.969 3.531 c h
3.203 2.766 m f
4.5 6.75 m 4.5 6.336 4.836 6 5.25 6 c 14.25 6 l 14.664 6 15 6.336 15 6.75
 c 15 7.164 14.664 7.5 14.25 7.5 c 5.25 7.5 l 4.836 7.5 4.5 7.164 4.5 6.75
 c 4.5 9.75 m 4.5 9.336 4.836 9 5.25 9 c 14.25 9 l 14.664 9 15 9.336 15 
9.75 c 15 10.164 14.664 10.5 14.25 10.5 c 5.25 10.5 l 4.836 10.5 4.5 10.164
 4.5 9.75 c 4.5 12.75 m 4.5 12.336 4.836 12 5.25 12 c 14.25 12 l 14.664 
12 15 12.336 15 12.75 c 15 13.164 14.664 13.5 14.25 13.5 c 5.25 13.5 l 4.836
 13.5 4.5 13.164 4.5 12.75 c 4.5 15.75 m 4.5 15.336 4.836 15 5.25 15 c 14.25
 15 l 14.664 15 15 15.336 15 15.75 c 15 16.164 14.664 16.5 14.25 16.5 c 
5.25 16.5 l 4.836 16.5 4.5 16.164 4.5 15.75 c 16.5 6.75 m 16.5 6.336 16.836
 6 17.25 6 c 18.75 6 l 19.164 6 19.5 6.336 19.5 6.75 c 19.5 7.164 19.164
 7.5 18.75 7.5 c 17.25 7.5 l 16.836 7.5 16.5 7.164 16.5 6.75 c 16.5 9.75
 m 16.5 9.336 16.836 9 17.25 9 c 18.75 9 l 19.164 9 19.5 9.336 19.5 9.75
 c 19.5 10.164 19.164 10.5 18.75 10.5 c 17.25 10.5 l 16.836 10.5 16.5 10.164
 16.5 9.75 c 16.5 12.75 m 16.5 12.336 16.836 12 17.25 12 c 18.75 12 l 19.164
 12 19.5 12.336 19.5 12.75 c 19.5 13.164 19.164 13.5 18.75 13.5 c 17.25 
13.5 l 16.836 13.5 16.5 13.164 16.5 12.75 c 16.5 15.75 m 16.5 15.336 16.836
 15 17.25 15 c 18.75 15 l 19.164 15 19.5 15.336 19.5 15.75 c 19.5 16.164
 19.164 16.5 18.75 16.5 c 17.25 16.5 l 16.836 16.5 16.5 16.164 16.5 15.75
 c f
Q Q
showpage
%%Trailer
%%EOF
