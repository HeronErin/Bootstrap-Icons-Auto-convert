%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
47.039 24.602 m 47.219 24.234 47.59 24 48 24 c 48.41 24 48.781 24.234 48.961
 24.602 c 52.766 32.312 l 52.766 32.309 l 52.922 32.625 53.219 32.844 53.566
 32.898 c 62.086 34.133 l 62.957 34.258 63.309 35.332 62.676 35.949 c 56.52
 41.957 l 56.27 42.207 56.156 42.559 56.215 42.906 c 57.668 51.391 l 57.664
 51.391 l 57.734 51.789 57.566 52.191 57.238 52.43 c 56.91 52.668 56.477
 52.699 56.117 52.512 c 48.496 48.504 l 48.188 48.344 47.82 48.344 47.508
 48.504 c 39.887 52.512 l 39.531 52.695 39.098 52.664 38.773 52.426 c 38.445
 52.188 38.281 51.789 38.348 51.391 c 39.801 42.906 l 39.797 42.906 l 39.859
 42.559 39.746 42.207 39.496 41.957 c 33.316 35.949 l 33.316 35.953 l 33.027
 35.668 32.926 35.246 33.051 34.859 c 33.176 34.477 33.508 34.195 33.906
 34.133 c 42.426 32.898 l 42.773 32.844 43.074 32.625 43.23 32.309 c h
47.039 24.602 m f
12 12 m 12 5.371 17.371 0 24 0 c 72 0 l 75.184 0 78.234 1.266 80.484 3.516
 c 82.734 5.766 84 8.816 84 12 c 84 93 l 84 94.105 83.391 95.121 82.414 
95.645 c 81.441 96.164 80.258 96.109 79.34 95.496 c 48 78.605 l 16.66 95.496
 l 15.742 96.109 14.559 96.164 13.586 95.645 c 12.609 95.121 12 94.105 12
 93 c h
24 6 m 20.688 6 18 8.688 18 12 c 18 87.395 l 46.34 72.504 l 47.344 71.836
 48.656 71.836 49.66 72.504 c 78 87.395 l 78 12 l 78 10.41 77.367 8.883 
76.242 7.758 c 75.117 6.633 73.59 6 72 6 c h
24 6 m f
Q Q
showpage
%%Trailer
%%EOF
