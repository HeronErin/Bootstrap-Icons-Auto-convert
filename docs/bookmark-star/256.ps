%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
94.078 49.199 m 94.438 48.465 95.184 48 96 48 c 96.816 48 97.562 48.465
 97.922 49.199 c 105.531 64.621 l 105.527 64.621 l 105.84 65.25 106.441 
65.688 107.137 65.797 c 124.176 68.27 l 125.914 68.523 126.625 70.668 125.352
 71.906 c 113.039 83.914 l 112.539 84.41 112.312 85.117 112.43 85.812 c 
115.332 102.781 l 115.465 103.578 115.133 104.387 114.48 104.859 c 113.824
 105.336 112.953 105.398 112.234 105.023 c 96.996 97.008 l 96.375 96.688
 95.637 96.688 95.016 97.008 c 79.777 105.023 l 79.059 105.391 78.195 105.324
 77.543 104.852 c 76.891 104.375 76.562 103.574 76.691 102.781 c 79.594 
85.812 l 79.598 85.812 l 79.715 85.121 79.492 84.414 78.996 83.914 c 66.637
 71.902 l 66.059 71.336 65.852 70.492 66.102 69.723 c 66.348 68.953 67.012
 68.391 67.812 68.27 c 84.852 65.797 l 85.547 65.688 86.148 65.25 86.461
 64.621 c h
94.078 49.199 m f
24 24 m 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48
 0 c 144 0 l 150.363 0 156.469 2.527 160.969 7.031 c 165.473 11.531 168 
17.637 168 24 c 168 186 l 168 188.211 166.781 190.242 164.832 191.285 c 
162.883 192.332 160.516 192.219 158.676 190.992 c 96 157.211 l 33.324 190.992
 l 31.484 192.219 29.117 192.332 27.168 191.285 c 25.219 190.242 24 188.211
 24 186 c h
48 12 m 41.371 12 36 17.371 36 24 c 36 174.793 l 92.676 145.008 l 94.691
 143.668 97.309 143.668 99.324 145.008 c 156 174.793 l 156 24 l 156 20.816
 154.734 17.766 152.484 15.516 c 150.234 13.266 147.184 12 144 12 c h
48 12 m f
Q Q
showpage
%%Trailer
%%EOF
