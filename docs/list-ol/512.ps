%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 70 360 328
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 70 360 328
384 384 cairo_set_page_size
%%EndPageSetup
q 24 70 336 258 rectclip
1 0 0 -1 0 384 cm q
0 g
120 276 m 120 269.371 125.371 264 132 264 c 348 264 l 354.629 264 360 269.371
 360 276 c 360 282.629 354.629 288 348 288 c 132 288 l 125.371 288 120 282.629
 120 276 c 120 180 m 120 173.371 125.371 168 132 168 c 348 168 l 354.629
 168 360 173.371 360 180 c 360 186.629 354.629 192 348 192 c 132 192 l 125.371
 192 120 186.629 120 180 c 120 84 m 120 77.371 125.371 72 132 72 c 348 72
 l 354.629 72 360 77.371 360 84 c 360 90.629 354.629 96 348 96 c 132 96 
l 125.371 96 120 90.629 120 84 c f*
41.113 284.762 m 41.113 273.387 l 48 273.383 l 53.207 273.383 56.711 270.094
 56.711 265.773 c 56.711 261.332 52.918 258.332 48.047 258.332 c 42.695 
258.332 39.238 261.98 39.094 265.773 c 24.934 265.773 l 25.316 254.566 33.887
 246.887 48.598 246.887 c 62.711 246.84 71.492 253.871 71.566 263.758 c 
71.566 263.762 l 71.66 270.766 66.66 276.805 59.762 278.016 c 59.762 278.809
 l 63.547 279.09 67.082 280.82 69.625 283.645 c 72.168 286.465 73.523 290.156
 73.414 293.953 c 73.484 306.746 61.367 313.152 48.191 313.152 c 32.449 
313.152 24.191 304.273 24 294.098 c 37.969 294.098 l 38.16 298.371 42.434
 301.441 48.098 301.512 c 54.195 301.512 58.273 298.031 58.227 293.113 c
 58.18 288.434 54.508 284.762 48.289 284.762 c 41.09 284.762 l h
41.016 171.984 m 26.52 171.984 l 26.52 171.145 l 26.52 161.352 33.598 150.887
 49.512 150.887 c 63.504 150.887 72.551 158.711 72.551 169.031 c 72.551 
178.367 66.383 183.84 61.125 189.383 c 48.238 203.109 l 48.238 203.828 l
 73.535 203.828 l 73.535 216 l 27.434 216 l 27.434 206.52 l 50.402 182.758
 l 53.715 179.352 57.434 175.461 57.434 170.566 c 57.434 166.246 53.906 
162.887 49.227 162.887 c 49.223 162.887 l 47.039 162.809 44.922 163.633 
43.367 165.168 c 41.812 166.707 40.961 168.816 41.016 171 c h
61.535 120 m 46.297 120 l 46.297 70.176 l 45.555 70.176 l 31.203 80.254
 l 31.203 66.645 l 46.301 56.012 l 61.539 56.012 l h
61.535 120 m f
Q Q
showpage
%%Trailer
%%EOF
