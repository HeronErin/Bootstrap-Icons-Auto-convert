%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 2 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 2 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 2 12 9 rectclip
1 0 0 -1 0 12 cm q
0 g
3.75 8.625 m 3.75 8.418 3.918 8.25 4.125 8.25 c 10.875 8.25 l 11.082 8.25
 11.25 8.418 11.25 8.625 c 11.25 8.832 11.082 9 10.875 9 c 4.125 9 l 3.918
 9 3.75 8.832 3.75 8.625 c 3.75 5.625 m 3.75 5.418 3.918 5.25 4.125 5.25
 c 10.875 5.25 l 11.082 5.25 11.25 5.418 11.25 5.625 c 11.25 5.832 11.082
 6 10.875 6 c 4.125 6 l 3.918 6 3.75 5.832 3.75 5.625 c 3.75 2.625 m 3.75
 2.418 3.918 2.25 4.125 2.25 c 10.875 2.25 l 11.082 2.25 11.25 2.418 11.25
 2.625 c 11.25 2.832 11.082 3 10.875 3 c 4.125 3 l 3.918 3 3.75 2.832 3.75
 2.625 c f*
1.285 8.898 m 1.285 8.543 l 1.5 8.543 l 1.664 8.543 1.773 8.441 1.773 8.305
 c 1.773 8.164 1.656 8.07 1.504 8.07 c 1.336 8.07 1.23 8.184 1.223 8.305
 c 0.781 8.305 l 0.793 7.953 1.062 7.715 1.52 7.715 c 1.961 7.715 2.234 
7.934 2.238 8.242 c 2.238 8.461 2.082 8.648 1.867 8.688 c 1.867 8.711 l 
2.113 8.73 2.301 8.941 2.293 9.188 c 2.297 9.586 1.918 9.789 1.504 9.789
 c 1.012 9.789 0.754 9.512 0.746 9.195 c 1.184 9.195 l 1.191 9.328 1.324
 9.426 1.5 9.426 c 1.691 9.426 1.816 9.316 1.816 9.164 c 1.816 9.02 1.699
 8.902 1.508 8.902 c 1.281 8.902 l h
1.281 5.375 m 0.828 5.375 l 0.828 5.348 l 0.828 5.043 1.051 4.715 1.547
 4.715 c 1.984 4.715 2.266 4.961 2.266 5.281 c 2.266 5.574 2.074 5.742 1.91
 5.918 c 1.508 6.348 l 1.508 6.371 l 2.297 6.371 l 2.297 6.75 l 0.855 6.75
 l 0.855 6.453 l 1.574 5.711 l 1.676 5.605 1.793 5.484 1.793 5.328 c 1.793
 5.191 1.684 5.09 1.535 5.09 c 1.539 5.09 l 1.469 5.086 1.402 5.113 1.355
 5.16 c 1.305 5.211 1.281 5.277 1.281 5.344 c h
1.922 3.75 m 1.445 3.75 l 1.445 2.191 l 1.422 2.191 l 0.973 2.508 l 0.973
 2.082 l 1.445 1.75 l 1.922 1.75 l h
1.922 3.75 m f
Q Q
showpage
%%Trailer
%%EOF
