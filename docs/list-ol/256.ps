%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 11 35 180 164
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 11 35 180 164
192 192 cairo_set_page_size
%%EndPageSetup
q 11 35 169 129 rectclip
1 0 0 -1 0 192 cm q
0 g
60 138 m 60 134.688 62.688 132 66 132 c 174 132 l 177.312 132 180 134.688
 180 138 c 180 141.312 177.312 144 174 144 c 66 144 l 62.688 144 60 141.312
 60 138 c 60 90 m 60 86.688 62.688 84 66 84 c 174 84 l 177.312 84 180 86.688
 180 90 c 180 93.312 177.312 96 174 96 c 66 96 l 62.688 96 60 93.312 60 
90 c 60 42 m 60 38.688 62.688 36 66 36 c 174 36 l 177.312 36 180 38.688 
180 42 c 180 45.312 177.312 48 174 48 c 66 48 l 62.688 48 60 45.312 60 42
 c f*
20.555 142.379 m 20.555 136.691 l 24 136.691 l 26.605 136.691 28.355 135.047
 28.355 132.887 c 28.355 130.668 26.461 129.168 24.023 129.168 c 21.348 
129.168 19.621 130.992 19.547 132.887 c 12.469 132.887 l 12.66 127.281 16.945
 123.441 24.301 123.441 c 31.355 123.418 35.75 126.934 35.785 131.879 c 
35.832 135.383 33.328 138.402 29.879 139.008 c 29.879 139.402 l 33.812 139.699
 36.82 143.031 36.707 146.977 c 36.742 153.371 30.684 156.578 24.094 156.578
 c 16.223 156.578 12.094 152.137 11.996 147.051 c 18.98 147.051 l 19.078
 149.188 21.211 150.723 24.043 150.758 c 27.09 150.758 29.133 149.02 29.105
 146.559 c 29.082 144.219 27.246 142.383 24.137 142.383 c 20.535 142.383
 l h
20.508 85.992 m 13.262 85.992 l 13.262 85.57 l 13.262 80.676 16.801 75.441
 24.758 75.441 c 31.754 75.441 36.277 79.352 36.277 84.512 c 36.277 89.18
 33.191 91.914 30.566 94.688 c 24.121 101.551 l 24.121 101.91 l 36.77 101.91
 l 36.77 108 l 13.715 108 l 13.715 103.262 l 25.199 91.383 l 26.855 89.68
 28.715 87.734 28.715 85.285 c 28.715 83.125 26.949 81.445 24.609 81.445
 c 24.613 81.445 l 23.52 81.402 22.461 81.816 21.684 82.586 c 20.906 83.352
 20.48 84.406 20.508 85.5 c h
30.77 60 m 23.148 60 l 23.148 35.09 l 22.777 35.09 l 15.602 40.129 l 15.602
 33.324 l 23.148 28.008 l 30.77 28.008 l h
30.77 60 m f
Q Q
showpage
%%Trailer
%%EOF
