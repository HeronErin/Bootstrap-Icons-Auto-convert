%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 8 45 41
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 8 45 41
48 48 cairo_set_page_size
%%EndPageSetup
q 3 8 42 33 rectclip
1 0 0 -1 0 48 cm q
0 g
15 34.5 m 15 33.672 15.672 33 16.5 33 c 43.5 33 l 44.328 33 45 33.672 45
 34.5 c 45 35.328 44.328 36 43.5 36 c 16.5 36 l 15.672 36 15 35.328 15 34.5
 c 15 22.5 m 15 21.672 15.672 21 16.5 21 c 43.5 21 l 44.328 21 45 21.672
 45 22.5 c 45 23.328 44.328 24 43.5 24 c 16.5 24 l 15.672 24 15 23.328 15
 22.5 c 15 10.5 m 15 9.672 15.672 9 16.5 9 c 43.5 9 l 44.328 9 45 9.672 
45 10.5 c 45 11.328 44.328 12 43.5 12 c 16.5 12 l 15.672 12 15 11.328 15
 10.5 c f*
5.141 35.594 m 5.141 34.172 l 6 34.172 l 6.652 34.172 7.09 33.762 7.09 
33.223 c 7.09 32.668 6.617 32.293 6.008 32.293 c 5.34 32.293 4.906 32.75
 4.891 33.223 c 3.121 33.223 l 3.168 31.82 4.238 30.863 6.078 30.863 c 7.844
 30.855 8.941 31.734 8.949 32.973 c 8.945 32.969 l 8.957 33.844 8.332 34.602
 7.469 34.754 c 7.469 34.852 l 8.453 34.926 9.207 35.758 9.176 36.742 c 
9.184 38.34 7.668 39.141 6.023 39.141 c 4.055 39.141 3.023 38.031 3 36.758
 c 4.746 36.758 l 4.77 37.293 5.305 37.676 6.012 37.684 c 6.773 37.684 7.285
 37.25 7.277 36.633 c 7.27 36.047 6.812 35.59 6.035 35.59 c 5.137 35.59 
l h
5.129 21.496 m 3.316 21.496 l 3.316 21.391 l 3.316 20.168 4.203 18.859 
6.191 18.859 c 7.941 18.859 9.07 19.836 9.07 21.129 c 9.07 22.297 8.301 
22.98 7.641 23.672 c 6.031 25.387 l 6.031 25.477 l 9.191 25.477 l 9.191 
27 l 3.43 27 l 3.43 25.816 l 6.301 22.848 l 6.715 22.422 7.18 21.938 7.18
 21.324 c 7.18 20.785 6.738 20.363 6.152 20.363 c 6.152 20.359 l 5.879 20.352
 5.613 20.453 5.422 20.645 c 5.227 20.84 5.121 21.102 5.129 21.375 c h
7.691 15 m 5.785 15 l 5.785 8.773 l 5.691 8.773 l 3.898 10.035 l 3.898 
8.336 l 5.785 7.008 l 7.691 7.008 l h
7.691 15 m f
Q Q
showpage
%%Trailer
%%EOF
