%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 17 90 82
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 17 90 82
96 96 cairo_set_page_size
%%EndPageSetup
q 6 17 84 65 rectclip
1 0 0 -1 0 96 cm q
0 g
30 69 m 30 67.344 31.344 66 33 66 c 87 66 l 88.656 66 90 67.344 90 69 c
 90 70.656 88.656 72 87 72 c 33 72 l 31.344 72 30 70.656 30 69 c 30 45 m
 30 43.344 31.344 42 33 42 c 87 42 l 88.656 42 90 43.344 90 45 c 90 46.656
 88.656 48 87 48 c 33 48 l 31.344 48 30 46.656 30 45 c 30 21 m 30 19.344
 31.344 18 33 18 c 87 18 l 88.656 18 90 19.344 90 21 c 90 22.656 88.656 
24 87 24 c 33 24 l 31.344 24 30 22.656 30 21 c f*
10.277 71.191 m 10.277 68.348 l 12 68.348 l 13.301 68.348 14.18 67.527 
14.18 66.445 c 14.18 65.336 13.23 64.586 12.016 64.586 c 10.676 64.586 9.812
 65.496 9.777 66.445 c 6.238 66.445 l 6.336 63.645 8.477 61.723 12.152 61.723
 c 15.68 61.711 17.875 63.469 17.895 65.941 c 17.891 65.941 l 17.914 67.691
 16.664 69.199 14.941 69.504 c 14.941 69.703 l 16.906 69.848 18.41 71.516
 18.355 73.488 c 18.375 76.688 15.344 78.289 12.051 78.289 c 8.113 78.289
 6.051 76.07 6.004 73.523 c 9.496 73.523 l 9.543 74.59 10.613 75.359 12.027
 75.379 c 13.551 75.379 14.57 74.508 14.559 73.277 c 14.547 72.105 13.629
 71.188 12.074 71.188 c 10.273 71.188 l h
10.254 42.996 m 6.629 42.996 l 6.629 42.785 l 6.629 40.336 8.398 37.723
 12.375 37.723 c 15.871 37.723 18.137 39.68 18.137 42.258 c 18.137 44.594
 16.594 45.961 15.281 47.348 c 12.059 50.781 l 12.059 50.961 l 18.383 50.961
 l 18.383 54 l 6.859 54 l 6.859 51.629 l 12.602 45.688 l 13.43 44.836 14.359
 43.863 14.359 42.641 c 14.359 41.562 13.477 40.719 12.309 40.719 c 12.305
 40.723 l 11.762 40.703 11.23 40.91 10.84 41.293 c 10.453 41.676 10.242 
42.203 10.254 42.75 c h
15.383 30 m 11.574 30 l 11.574 17.543 l 11.387 17.543 l 7.797 20.062 l 
7.797 16.66 l 11.57 14.004 l 15.379 14.004 l h
15.383 30 m f
Q Q
showpage
%%Trailer
%%EOF
