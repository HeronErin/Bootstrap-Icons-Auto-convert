%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 66 m 97.59 66 99.117 66.633 100.242 67.758 c 101.367 68.883 102 70.41
 102 72 c 102 90 l 120 90 l 123.312 90 126 92.688 126 96 c 126 99.312 123.312
 102 120 102 c 102 102 l 102 120 l 102 123.312 99.312 126 96 126 c 92.688
 126 90 123.312 90 120 c 90 102 l 72 102 l 68.688 102 66 99.312 66 96 c 
66 92.688 68.688 90 72 90 c 90 90 l 90 72 l 90 68.688 92.688 66 96 66 c f*
123.277 30.156 m 112.227 18.828 l 120.805 10.453 l 128.27 18.098 l 138.949
 17.965 l 148.289 17.852 157.277 21.516 163.883 28.117 c 170.484 34.723 
174.148 43.711 174.035 53.051 c 173.914 63.73 l 181.547 71.195 l 188.227
 77.723 191.992 86.664 191.992 96 c 191.992 105.336 188.227 114.277 181.547
 120.805 c 173.902 128.27 l 174.035 138.949 l 174.148 148.289 170.484 157.277
 163.883 163.883 c 157.277 170.484 148.289 174.148 138.949 174.035 c 128.27
 173.914 l 120.805 181.547 l 114.277 188.227 105.336 191.992 96 191.992 
c 86.664 191.992 77.723 188.227 71.195 181.547 c 63.73 173.902 l 53.051 
174.035 l 43.711 174.148 34.723 170.484 28.117 163.883 c 21.516 157.277 
17.852 148.289 17.965 138.949 c 18.086 128.27 l 10.453 120.805 l 3.773 114.277
 0.008 105.336 0.008 96 c 0.008 86.664 3.773 77.723 10.453 71.195 c 18.098
 63.73 l 17.965 53.051 l 17.852 43.711 21.516 34.723 28.117 28.117 c 34.723
 21.516 43.711 17.852 53.051 17.965 c 63.73 18.086 l 71.195 10.453 l 77.723
 3.773 86.664 0.008 96 0.008 c 105.336 0.008 114.277 3.773 120.805 10.453
 c 112.227 18.828 l 112.223 18.828 l 107.957 14.461 102.105 11.996 96 11.996
 c 89.895 11.996 84.043 14.461 79.777 18.828 c 68.738 30.156 l 52.898 29.965
 l 52.895 29.965 l 46.793 29.895 40.918 32.293 36.602 36.609 c 32.285 40.926
 29.891 46.805 29.965 52.906 c 30.156 68.723 l 18.828 79.773 l 18.828 79.777
 l 14.461 84.043 11.996 89.895 11.996 96 c 11.996 102.105 14.461 107.957
 18.828 112.223 c 30.156 123.262 l 29.965 139.102 l 29.965 139.105 l 29.895
 145.207 32.293 151.082 36.609 155.398 c 40.926 159.715 46.805 162.109 52.906
 162.035 c 68.723 161.844 l 79.773 173.172 l 79.777 173.172 l 84.043 177.539
 89.895 180.004 96 180.004 c 102.105 180.004 107.957 177.539 112.223 173.172
 c 123.262 161.844 l 139.102 162.035 l 139.105 162.035 l 145.207 162.105
 151.082 159.707 155.398 155.391 c 159.715 151.074 162.109 145.195 162.035
 139.094 c 161.844 123.277 l 173.172 112.227 l 173.172 112.223 l 177.539
 107.957 180.004 102.105 180.004 96 c 180.004 89.895 177.539 84.043 173.172
 79.777 c 161.844 68.738 l 162.035 52.898 l 162.035 52.895 l 162.105 46.793
 159.707 40.918 155.391 36.602 c 151.074 32.285 145.195 29.891 139.094 29.965
 c h
123.277 30.156 m f
Q Q
showpage
%%Trailer
%%EOF
