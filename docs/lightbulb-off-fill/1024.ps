%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 71 0 697 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 71 0 697 768
768 768 cairo_set_page_size
%%EndPageSetup
q 71 0 626 768 rectclip
1 0 0 -1 0 768 cm q
0 g
96 288 m 96 260.543 99.84 234 107.039 208.801 c 517.824 619.633 l 513.777
 622.477 508.949 624.004 504 624 c 264 624 l 259.305 624.008 254.711 622.641
 250.785 620.062 c 246.863 617.484 243.777 613.816 241.922 609.504 c 205.395
 524.543 l 205.391 524.543 l 200.125 513.348 192.738 503.273 183.648 494.879
 c 155.879 468.062 133.801 435.918 118.742 400.371 c 103.68 364.824 95.945
 326.605 96 288 c 590.543 488.688 m 183.266 81.457 l 237.582 28.996 310.332
 -0.035 385.844 0.621 c 461.355 1.277 533.59 31.566 586.988 84.965 c 640.387
 138.363 670.676 210.598 671.332 286.109 c 671.984 361.621 642.957 434.371
 590.496 488.688 c h
240 696 m 240 689.637 242.527 683.531 247.031 679.031 c 251.531 674.527
 257.637 672 264 672 c 504 672 l 512.574 672 520.496 676.574 524.785 684
 c 529.07 691.426 529.07 700.574 524.785 708 c 520.496 715.426 512.574 720
 504 720 c 493.246 741.457 l 489.266 749.43 483.141 756.133 475.562 760.82
 c 467.98 765.508 459.246 767.996 450.336 768 c 317.664 768 l 308.754 767.996
 300.02 765.508 292.438 760.82 c 284.859 756.133 278.734 749.43 274.754 
741.457 c 264 720 l 257.637 720 251.531 717.473 247.031 712.969 c 242.527
 708.469 240 702.363 240 696 c 112.992 79.008 m 106.922 72.938 98.074 70.566
 89.781 72.789 c 81.488 75.012 75.012 81.488 72.789 89.781 c 70.566 98.074
 72.938 106.922 79.008 112.992 c 655.008 688.992 l 661.078 695.062 669.926
 697.434 678.219 695.211 c 686.512 692.988 692.988 686.512 695.211 678.219
 c 697.434 669.926 695.062 661.078 688.992 655.008 c h
112.992 79.008 m f
Q Q
showpage
%%Trailer
%%EOF
