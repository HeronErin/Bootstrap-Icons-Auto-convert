%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 143 0 1393 1535
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 143 0 1393 1535
1536 1536 cairo_set_page_size
%%EndPageSetup
q 143 0 1250 1535 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 576 m 192 521.09 199.68 468 214.078 417.602 c 1035.645 1239.266 l 1035.648
 1239.266 l 1027.555 1244.957 1017.895 1248.008 1008 1248 c 528 1248 l 518.609
 1248.016 509.422 1245.277 501.574 1240.125 c 493.723 1234.973 487.559 1227.629
 483.84 1219.008 c 410.785 1049.086 l 410.785 1049.09 l 400.246 1026.695
 385.48 1006.547 367.297 989.762 c 311.754 936.125 267.602 871.84 237.48
 800.746 c 207.363 729.648 191.895 653.211 192 576 c 1181.09 977.375 m 366.527
 162.91 l 475.164 57.988 620.66 -0.07 771.688 1.242 c 922.711 2.555 1067.18
 63.133 1173.977 169.93 c 1280.77 276.723 1341.348 421.191 1342.66 572.219
 c 1343.973 723.242 1285.914 868.742 1180.992 977.375 c h
480 1392 m 480 1379.27 485.059 1367.062 494.059 1358.059 c 503.062 1349.059
 515.27 1344 528 1344 c 1008 1344 l 1025.148 1344 1040.996 1353.148 1049.57
 1368 c 1058.145 1382.852 1058.145 1401.148 1049.57 1416 c 1040.996 1430.852
 1025.148 1440 1008 1440 c 986.496 1482.91 l 978.527 1498.855 966.281 1512.266
 951.121 1521.645 c 935.965 1531.02 918.496 1535.992 900.672 1536 c 635.328
 1536 l 617.504 1535.992 600.035 1531.02 584.879 1521.645 c 569.719 1512.266
 557.473 1498.855 549.504 1482.91 c 528 1440 l 515.27 1440 503.062 1434.941
 494.059 1425.941 c 485.059 1416.938 480 1404.73 480 1392 c 225.984 158.016
 m 213.844 145.875 196.145 141.133 179.562 145.578 c 162.977 150.02 150.02
 162.977 145.578 179.562 c 141.133 196.145 145.875 213.844 158.016 225.984
 c 1310.016 1377.984 l 1322.156 1390.125 1339.855 1394.867 1356.438 1390.422
 c 1373.023 1385.98 1385.98 1373.023 1390.422 1356.438 c 1394.867 1339.855
 1390.125 1322.156 1377.984 1310.016 c h
225.984 158.016 m f
Q Q
showpage
%%Trailer
%%EOF
