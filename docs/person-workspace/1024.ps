%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
192 768 m 192 768 144 768 144 720 c 144 672 192 528 384 528 c 576 528 624
 672 624 720 c 624 768 576 768 576 768 c h
384 482.398 m 426.871 482.398 466.488 459.527 487.922 422.398 c 509.359
 385.273 509.359 339.527 487.922 302.398 c 466.488 265.273 426.871 242.398
 384 242.398 c 341.129 242.398 301.512 265.273 280.078 302.398 c 258.641
 339.527 258.641 385.273 280.078 422.398 c 301.512 459.527 341.129 482.398
 384 482.398 c f
96 48 m 70.539 48 46.121 58.113 28.117 76.117 c 10.113 94.121 0 118.539
 0 144 c 0 600 l 0 619.094 7.586 637.41 21.09 650.91 c 34.59 664.414 52.906
 672 72 672 c 103.344 672 l 113.418 636.742 130.855 604.02 154.512 576 c
 48 576 l 48 144 l 48 131.27 53.059 119.062 62.059 110.059 c 71.062 101.059
 83.27 96 96 96 c 672 96 l 684.73 96 696.938 101.059 705.941 110.059 c 714.941
 119.062 720 131.27 720 144 c 720 576 l 613.488 576 l 640.082 607.391 656.207
 641.902 664.656 672 c 696 672 l 715.094 672 733.41 664.414 746.91 650.91
 c 760.414 637.41 768 619.094 768 600 c 768 144 l 768 118.539 757.887 94.121
 739.883 76.117 c 721.879 58.113 697.461 48 672 48 c h
96 48 m f
Q Q
showpage
%%Trailer
%%EOF
