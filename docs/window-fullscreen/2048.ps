%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 336 m 288 353.148 278.852 368.996 264 377.57 c 249.148 386.145 230.852
 386.145 216 377.57 c 201.148 368.996 192 353.148 192 336 c 192 318.852 
201.148 303.004 216 294.43 c 230.852 285.855 249.148 285.855 264 294.43 
c 278.852 303.004 288 318.852 288 336 c 432 336 m 432 353.148 422.852 368.996
 408 377.57 c 393.148 386.145 374.852 386.145 360 377.57 c 345.148 368.996
 336 353.148 336 336 c 336 318.852 345.148 303.004 360 294.43 c 374.852 
285.855 393.148 285.855 408 294.43 c 422.852 303.004 432 318.852 432 336
 c 528 384 m 545.148 384 560.996 374.852 569.57 360 c 578.145 345.148 578.145
 326.852 569.57 312 c 560.996 297.148 545.148 288 528 288 c 510.852 288 
495.004 297.148 486.43 312 c 477.855 326.852 477.855 345.148 486.43 360 
c 495.004 374.852 510.852 384 528 384 c f
48 96 m 35.27 96 23.062 101.059 14.059 110.059 c 5.059 119.062 0 131.27
 0 144 c 0 1392 l 0 1404.73 5.059 1416.938 14.059 1425.941 c 23.062 1434.941
 35.27 1440 48 1440 c 1488 1440 l 1500.73 1440 1512.938 1434.941 1521.941
 1425.941 c 1530.941 1416.938 1536 1404.73 1536 1392 c 1536 144 l 1536 131.27
 1530.941 119.062 1521.941 110.059 c 1512.938 101.059 1500.73 96 1488 96
 c h
96 480 m 96 192 l 1440 192 l 1440 480 l h
96 576 m 1440 576 l 1440 1344 l 96 1344 l h
96 576 m f
Q Q
showpage
%%Trailer
%%EOF
