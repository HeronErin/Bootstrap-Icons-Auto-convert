%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 264 384 l 264 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
38.398 284.398 m 0 284.398 l 0 380.375 l 18.984 380.375 l 18.984 348.168
 l 38.258 348.168 l 45.137 348.168 50.992 346.785 55.824 344.016 c 60.703
 341.215 64.41 337.422 66.938 332.641 c 69.57 327.637 70.898 322.047 70.801
 316.391 c 70.801 310.391 69.535 304.977 67.008 300.145 c 64.477 295.367
 60.648 291.398 55.969 288.695 c 51.168 285.816 45.312 284.383 38.402 284.398
 c 51.48 316.391 m 51.562 319.555 50.859 322.688 49.441 325.512 c 48.168
 327.973 46.176 329.992 43.727 331.297 c 40.934 332.672 37.844 333.348 34.727
 333.266 c 18.91 333.266 l 18.91 299.52 l 34.75 299.52 l 39.98 299.52 44.078
 300.969 47.039 303.863 c 50 306.773 51.48 310.953 51.48 316.391 c 159 380.375
 m 159 284.398 l 140.039 284.398 l 140.039 323.422 l 99.672 323.426 l 99.672
 284.398 l 80.711 284.398 l 80.711 380.375 l 99.672 380.375 l 99.672 339.238
 l 140.039 339.238 l 140.039 380.375 l h
175.871 284.398 m 214.27 284.398 l 221.199 284.398 227.055 285.832 231.836
 288.695 c 236.637 291.496 240.316 295.312 242.875 300.145 c 245.402 304.977
 246.668 310.391 246.668 316.391 c 246.668 322.391 245.379 327.805 242.805
 332.637 c 240.262 337.422 236.559 341.211 231.691 344.012 c 231.695 344.016
 l 226.301 346.926 220.23 348.359 214.105 348.168 c 194.879 348.168 l 194.879
 380.375 l 175.895 380.375 l h
225.312 325.535 m 226.727 322.699 227.422 319.559 227.328 316.391 c 227.328
 310.949 225.855 306.781 222.914 303.887 c 219.969 300.977 215.867 299.52
 210.602 299.52 c 194.762 299.52 l 194.762 333.262 l 210.602 333.262 l 210.602
 333.266 l 213.715 333.348 216.805 332.672 219.602 331.297 c 222.035 329.992
 224.016 327.984 225.289 325.535 c h
225.312 325.535 m f*
Q Q
showpage
%%Trailer
%%EOF
