%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1056 1536 l 1056 1440 l 1152 1440 l 1177.461 1440 1201.879
 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248 1369.461 1248 1344 
c 1248 432 l 1056 432 l 1017.809 432 981.184 416.828 954.176 389.824 c 927.172
 362.816 912 326.191 912 288 c 912 96 l 384 96 l 358.539 96 334.121 106.113
 316.117 124.117 c 298.113 142.121 288 166.539 288 192 c 288 1056 l 192 
1056 l 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227
 333.078 0 384 0 c 912 0 l h
153.602 1137.602 m 0 1137.602 l 0 1521.504 l 75.938 1521.504 l 75.938 1392.672
 l 153.027 1392.672 l 180.547 1392.672 203.973 1387.137 223.301 1376.062
 c 242.82 1364.863 257.637 1349.695 267.75 1330.559 c 267.742 1330.559 l
 278.285 1310.543 283.602 1288.188 283.199 1265.566 c 283.199 1241.566 278.145
 1219.902 268.031 1200.574 c 257.902 1181.469 242.598 1165.602 223.871 1154.785
 c 204.672 1143.266 181.246 1137.539 153.598 1137.602 c 205.918 1265.57 
m 205.922 1265.566 l 206.246 1278.215 203.441 1290.746 197.762 1302.047 
c 192.664 1311.898 184.695 1319.965 174.91 1325.184 c 163.73 1330.691 151.371
 1333.391 138.91 1333.055 c 75.648 1333.055 l 75.648 1198.078 l 139.008 
1198.078 l 159.938 1198.078 176.32 1203.871 188.16 1215.453 c 200 1227.102
 205.922 1243.805 205.922 1265.566 c 636 1521.504 m 636 1137.602 l 560.16
 1137.602 l 560.16 1293.699 l 398.688 1293.695 l 398.688 1137.602 l 322.848
 1137.602 l 322.848 1521.504 l 398.688 1521.504 l 398.688 1356.961 l 560.16
 1356.961 l 560.16 1521.504 l h
703.488 1137.602 m 857.09 1137.602 l 884.801 1137.602 908.227 1143.328 
927.363 1154.785 c 946.562 1165.984 961.285 1181.25 971.523 1200.578 c 981.637
 1219.906 986.691 1241.57 986.691 1265.57 c 986.691 1289.57 981.539 1311.234
 971.234 1330.562 c 961.059 1349.699 946.242 1364.867 926.785 1376.066 c
 926.785 1376.062 l 905.199 1387.703 880.926 1393.43 856.414 1392.672 c 
779.52 1392.672 l 779.52 1521.504 l 703.582 1521.504 l h
901.25 1302.145 m 901.246 1302.145 l 906.914 1290.805 909.684 1278.238 
909.312 1265.566 c 909.312 1243.805 903.426 1227.133 891.648 1215.551 c 
879.871 1203.902 863.457 1198.078 842.402 1198.078 c 779.043 1198.078 l 
779.043 1333.055 l 842.402 1333.055 l 842.398 1333.055 l 854.859 1333.391
 867.215 1330.691 878.398 1325.184 c 888.133 1319.977 896.066 1311.945 901.152
 1302.145 c h
901.25 1302.145 m f*
Q Q
showpage
%%Trailer
%%EOF
