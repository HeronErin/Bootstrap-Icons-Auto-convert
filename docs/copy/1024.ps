%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
192 96 m 192 70.539 202.113 46.121 220.117 28.117 c 238.121 10.113 262.539
 0 288 0 c 672 0 l 697.461 0 721.879 10.113 739.883 28.117 c 757.887 46.121
 768 70.539 768 96 c 768 480 l 768 505.461 757.887 529.879 739.883 547.883
 c 721.879 565.887 697.461 576 672 576 c 288 576 l 262.539 576 238.121 565.887
 220.117 547.883 c 202.113 529.879 192 505.461 192 480 c h
288 48 m 275.27 48 263.062 53.059 254.059 62.059 c 245.059 71.062 240 83.27
 240 96 c 240 480 l 240 492.73 245.059 504.938 254.059 513.941 c 263.062
 522.941 275.27 528 288 528 c 672 528 l 684.73 528 696.938 522.941 705.941
 513.941 c 714.941 504.938 720 492.73 720 480 c 720 96 l 720 83.27 714.941
 71.062 705.941 62.059 c 696.938 53.059 684.73 48 672 48 c h
96 240 m 83.27 240 71.062 245.059 62.059 254.059 c 53.059 263.062 48 275.27
 48 288 c 48 672 l 48 684.73 53.059 696.938 62.059 705.941 c 71.062 714.941
 83.27 720 96 720 c 480 720 l 492.73 720 504.938 714.941 513.941 705.941
 c 522.941 696.938 528 684.73 528 672 c 528 624 l 576 624 l 576 672 l 576
 697.461 565.887 721.879 547.883 739.883 c 529.879 757.887 505.461 768 480
 768 c 96 768 l 70.539 768 46.121 757.887 28.117 739.883 c 10.113 721.879
 0 697.461 0 672 c 0 288 l 0 262.539 10.113 238.121 28.117 220.117 c 46.121
 202.113 70.539 192 96 192 c 144 192 l 144 240 l h
96 240 m f*
Q Q
showpage
%%Trailer
%%EOF
