%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 192 m 384 141.078 404.227 92.242 440.234 56.234 c 476.242 20.227 525.078
 0 576 0 c 1344 0 l 1377.703 0 1410.812 8.871 1440 25.723 c 1469.188 42.574
 1493.426 66.812 1510.277 96 c 1527.129 125.188 1536 158.297 1536 192 c 
1536 960 l 1536 993.703 1527.129 1026.812 1510.277 1056 c 1493.426 1085.188
 1469.188 1109.426 1440 1126.277 c 1410.812 1143.129 1377.703 1152 1344 
1152 c 576 1152 l 525.078 1152 476.242 1131.773 440.234 1095.766 c 404.227
 1059.758 384 1010.922 384 960 c h
576 96 m 550.539 96 526.121 106.113 508.117 124.117 c 490.113 142.121 480
 166.539 480 192 c 480 960 l 480 985.461 490.113 1009.879 508.117 1027.883
 c 526.121 1045.887 550.539 1056 576 1056 c 1344 1056 l 1369.461 1056 1393.879
 1045.887 1411.883 1027.883 c 1429.887 1009.879 1440 985.461 1440 960 c 
1440 192 l 1440 166.539 1429.887 142.121 1411.883 124.117 c 1393.879 106.113
 1369.461 96 1344 96 c h
192 480 m 166.539 480 142.121 490.113 124.117 508.117 c 106.113 526.121
 96 550.539 96 576 c 96 1344 l 96 1369.461 106.113 1393.879 124.117 1411.883
 c 142.121 1429.887 166.539 1440 192 1440 c 960 1440 l 985.461 1440 1009.879
 1429.887 1027.883 1411.883 c 1045.887 1393.879 1056 1369.461 1056 1344 
c 1056 1248 l 1152 1248 l 1152 1344 l 1152 1377.703 1143.129 1410.812 1126.277
 1440 c 1109.426 1469.188 1085.188 1493.426 1056 1510.277 c 1026.812 1527.129
 993.703 1536 960 1536 c 192 1536 l 141.078 1536 92.242 1515.773 56.234 
1479.766 c 20.227 1443.758 0 1394.922 0 1344 c 0 576 l 0 525.078 20.227 
476.242 56.234 440.234 c 92.242 404.227 141.078 384 192 384 c 288 384 l 
288 480 l h
192 480 m f*
Q Q
showpage
%%Trailer
%%EOF
