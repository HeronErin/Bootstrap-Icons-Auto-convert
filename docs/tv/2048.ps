%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
240 1296 m 240 1283.27 245.059 1271.062 254.059 1262.059 c 263.062 1253.059
 275.27 1248 288 1248 c 1248 1248 l 1265.148 1248 1280.996 1257.148 1289.57
 1272 c 1298.145 1286.852 1298.145 1305.148 1289.57 1320 c 1280.996 1334.852
 1265.148 1344 1248 1344 c 288 1344 l 275.27 1344 263.062 1338.941 254.059
 1329.941 c 245.059 1320.938 240 1308.73 240 1296 c 1343.137 288 m 1345.441
 288.098 l 1363.363 289.41 1380.879 294.066 1397.09 301.824 c 1408.73 307.258
 1418.73 315.668 1426.078 326.207 c 1432.512 335.809 1440 352.801 1440 384
 c 1440 959.137 l 1439.902 961.441 l 1438.59 979.363 1433.934 996.879 1426.176
 1013.09 c 1420.742 1024.73 1412.332 1034.73 1401.793 1042.078 c 1392.191
 1048.512 1375.199 1056 1344 1056 c 192.863 1056 l 190.559 1055.902 l 172.637
 1054.59 155.121 1049.934 138.91 1042.176 c 127.27 1036.742 117.27 1028.332
 109.922 1017.793 c 103.488 1008.191 96 991.199 96 960 c 96 384.863 l 96.098
 382.559 l 97.41 364.637 102.066 347.121 109.824 330.91 c 115.258 319.27
 123.668 309.27 134.207 301.922 c 143.809 295.488 160.801 288 192 288 c 
h
1344 192 m 192 192 l 0 192 0 384 0 384 c 0 960 l 0 1152 192 1152 192 1152
 c 1344 1152 l 1536 1152 1536 960 1536 960 c 1536 384 l 1536 192 1344 192
 1344 192 c f
Q Q
showpage
%%Trailer
%%EOF
