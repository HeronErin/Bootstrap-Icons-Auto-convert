%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 96 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 96 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 96 1344 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
1008 96 m 1020.73 96 1032.938 101.059 1041.941 110.059 c 1050.941 119.062
 1056 131.27 1056 144 c 1056 528 l 1056 545.148 1046.852 560.996 1032 569.57
 c 1017.148 578.145 998.852 578.145 984 569.57 c 969.148 560.996 960 545.148
 960 528 c 960 384 l 144 384 l 126.852 384 111.004 374.852 102.43 360 c 
93.855 345.148 93.855 326.852 102.43 312 c 111.004 297.148 126.852 288 144
 288 c 960 288 l 960 144 l 960 131.27 965.059 119.062 974.059 110.059 c 
983.062 101.059 995.27 96 1008 96 c 1152 336 m 1152 323.27 1157.059 311.062
 1166.059 302.059 c 1175.062 293.059 1187.27 288 1200 288 c 1392 288 l 1409.148
 288 1424.996 297.148 1433.57 312 c 1442.145 326.852 1442.145 345.148 1433.57
 360 c 1424.996 374.852 1409.148 384 1392 384 c 1200 384 l 1187.27 384 1175.062
 378.941 1166.059 369.941 c 1157.059 360.938 1152 348.73 1152 336 c 528 
528 m 540.73 528 552.938 533.059 561.941 542.059 c 570.941 551.062 576 563.27
 576 576 c 576 720 l 1392 720 l 1409.148 720 1424.996 729.148 1433.57 744
 c 1442.145 758.852 1442.145 777.148 1433.57 792 c 1424.996 806.852 1409.148
 816 1392 816 c 576 816 l 576 960 l 576 977.148 566.852 992.996 552 1001.57
 c 537.148 1010.145 518.852 1010.145 504 1001.57 c 489.148 992.996 480 977.148
 480 960 c 480 576 l 480 563.27 485.059 551.062 494.059 542.059 c 503.062
 533.059 515.27 528 528 528 c 96 768 m 96 755.27 101.059 743.062 110.059
 734.059 c 119.062 725.059 131.27 720 144 720 c 336 720 l 353.148 720 368.996
 729.148 377.57 744 c 386.145 758.852 386.145 777.148 377.57 792 c 368.996
 806.852 353.148 816 336 816 c 144 816 l 131.27 816 119.062 810.941 110.059
 801.941 c 101.059 792.938 96 780.73 96 768 c 1008 960 m 1020.73 960 1032.938
 965.059 1041.941 974.059 c 1050.941 983.062 1056 995.27 1056 1008 c 1056
 1392 l 1056 1409.148 1046.852 1424.996 1032 1433.57 c 1017.148 1442.145
 998.852 1442.145 984 1433.57 c 969.148 1424.996 960 1409.148 960 1392 c
 960 1248 l 144 1248 l 126.852 1248 111.004 1238.852 102.43 1224 c 93.855
 1209.148 93.855 1190.852 102.43 1176 c 111.004 1161.148 126.852 1152 144
 1152 c 960 1152 l 960 1008 l 960 995.27 965.059 983.062 974.059 974.059
 c 983.062 965.059 995.27 960 1008 960 c 1152 1200 m 1152 1187.27 1157.059
 1175.062 1166.059 1166.059 c 1175.062 1157.059 1187.27 1152 1200 1152 c
 1392 1152 l 1409.148 1152 1424.996 1161.148 1433.57 1176 c 1442.145 1190.852
 1442.145 1209.148 1433.57 1224 c 1424.996 1238.852 1409.148 1248 1392 1248
 c 1200 1248 l 1187.27 1248 1175.062 1242.941 1166.059 1233.941 c 1157.059
 1224.938 1152 1212.73 1152 1200 c f*
Q Q
showpage
%%Trailer
%%EOF
