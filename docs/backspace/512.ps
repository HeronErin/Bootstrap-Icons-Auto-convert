%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 377 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 377 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 377 336 rectclip
1 0 0 -1 0 384 cm q
0 g
139.922 123.504 m 137.664 125.754 136.395 128.812 136.395 132 c 136.395
 135.188 137.664 138.246 139.922 140.496 c 191.398 192 l 139.871 243.504
 l 137.617 245.754 136.352 248.809 136.348 251.992 c 136.348 255.176 137.609
 258.23 139.859 260.484 c 144.547 265.176 152.148 265.18 156.84 260.496 
c 208.367 208.969 l 259.871 260.496 l 264.562 265.18 272.168 265.176 276.852
 260.484 c 281.539 255.793 281.531 248.191 276.84 243.504 c 225.359 192 
l 276.863 140.496 l 281.555 135.809 281.562 128.207 276.875 123.516 c 272.191
 118.824 264.59 118.82 259.895 123.504 c 208.391 175.031 l 156.863 123.504
 l 152.18 118.82 144.582 118.82 139.895 123.504 c h
139.922 123.504 m f
328.391 24 m 341.121 24 353.332 29.059 362.332 38.059 c 371.336 47.062 
376.391 59.27 376.391 72 c 376.391 312 l 376.391 324.73 371.336 336.938 
362.332 345.941 c 353.332 354.941 341.121 360 328.391 360 c 158.469 360 
l 158.473 360 l 144.457 360.008 131.141 353.887 122.016 343.246 c 5.785 
207.602 l 2.055 203.25 0 197.707 0 191.977 c 0 186.246 2.055 180.703 5.785
 176.352 c 122.016 40.801 l 131.129 30.145 144.449 24.008 158.473 24 c h
158.469 48 m 158.473 48 l 151.457 48 144.793 51.07 140.23 56.398 c 24 192
 l 140.258 327.602 l 144.812 332.926 151.465 335.992 158.473 336 c 328.395
 336 l 328.391 336 l 334.758 336 340.863 333.473 345.363 328.969 c 349.863
 324.469 352.391 318.363 352.391 312 c 352.391 72 l 352.391 65.637 349.863
 59.531 345.363 55.031 c 340.863 50.527 334.758 48 328.391 48 c h
158.469 48 m f
Q Q
showpage
%%Trailer
%%EOF
