%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
434.398 20.879 m 406.559 -6.961 361.438 -6.961 333.598 20.879 c 202.754
 151.777 l 384 333.121 l 565.297 151.824 l 434.352 20.879 l h
591.551 377.277 m 591.551 335.902 l 613.965 335.902 l 627.406 335.902 636.379
 343.293 636.379 357.023 c 636.379 370.465 627.645 377.23 613.578 377.23
 c 591.547 377.23 l h
591.551 377.277 m f
616.223 202.703 m 434.879 384 l 616.176 565.297 l 747.07 434.352 l 774.91
 406.512 774.91 361.441 747.07 333.648 c h
617.664 316.031 m 646.031 316.031 662.543 332.062 662.543 356.543 c 662.73
 364.176 660.605 371.688 656.453 378.094 c 652.297 384.5 646.309 389.504
 639.266 392.449 c 664.992 444 l 636.672 444 l 614.258 396.289 l 591.555
 396.289 l 591.555 444 l 566.547 444 l 566.543 316.031 l h
565.297 616.223 m 384 434.879 l 202.703 616.176 l 333.648 747.07 l 361.488
 774.91 406.559 774.91 434.352 747.07 c h
135.555 335.902 m 135.555 377.23 l 157.633 377.23 l 171.648 377.23 180.387
 370.512 180.387 357.023 c 180.387 343.297 171.363 335.902 157.973 335.902
 c h
135.555 335.902 m f
151.777 565.297 m 333.121 384 l 151.777 202.703 l 20.879 333.648 l -6.961
 361.488 -6.961 406.559 20.879 434.352 c h
110.496 316.031 m 161.617 316.031 l 190.031 316.031 206.547 332.062 206.547
 356.543 c 206.547 375.262 194.93 387.934 183.266 392.445 c 208.992 443.996
 l 180.672 443.996 l 158.258 396.285 l 135.555 396.285 l 135.555 443.996
 l 110.547 443.996 l 110.543 316.031 l h
110.496 316.031 m f
Q Q
showpage
%%Trailer
%%EOF
