%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
868.801 41.762 m 813.121 -13.918 722.879 -13.918 667.199 41.762 c 405.504
 303.551 l 768 666.238 l 1130.594 303.645 l 868.703 41.762 l h
1183.105 754.562 m 1183.105 671.809 l 1227.938 671.809 l 1254.816 671.809
 1272.77 686.594 1272.77 714.047 c 1272.77 740.926 1255.297 754.461 1227.168
 754.461 c 1183.105 754.461 l h
1183.105 754.562 m f
1232.449 405.406 m 869.762 768 l 1232.355 1130.594 l 1494.148 868.707 l
 1549.828 813.027 1549.828 722.883 1494.148 667.301 c h
1235.328 632.062 m 1292.062 632.062 1325.09 664.125 1325.09 713.086 c 1325.09
 713.09 l 1325.457 728.352 1321.211 743.375 1312.906 756.188 c 1304.598 
769 1292.617 779.004 1278.527 784.895 c 1329.984 888 l 1273.344 888 l 1228.512
 792.574 l 1183.105 792.574 l 1183.105 888 l 1133.09 888 l 1133.09 632.062
 l h
1130.594 1232.445 m 768 869.762 l 405.406 1232.355 l 667.293 1494.148 l
 722.973 1549.828 813.117 1549.828 868.699 1494.148 c h
271.105 671.805 m 271.105 754.461 l 315.266 754.461 l 343.297 754.461 360.77
 741.02 360.77 714.047 c 360.77 686.59 342.723 671.809 315.938 671.809 c
 h
271.105 671.805 m f
303.551 1130.594 m 666.238 768 l 303.551 405.406 l 41.762 667.297 l -13.918
 722.977 -13.918 813.121 41.762 868.703 c h
220.992 632.066 m 323.23 632.066 l 380.062 632.066 413.086 664.129 413.086
 713.09 c 413.086 750.531 389.855 775.875 366.527 784.898 c 417.984 888.004
 l 361.344 888.004 l 316.512 792.578 l 271.105 792.578 l 271.105 888.004
 l 221.09 888.004 l 221.09 632.062 l h
220.992 632.066 m f
Q Q
showpage
%%Trailer
%%EOF
