%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
217.199 10.441 m 203.277 -3.48 180.719 -3.48 166.801 10.441 c 101.375 75.887
 l 192 166.559 l 282.648 75.91 l 217.176 10.441 l h
295.773 188.641 m 295.773 167.953 l 306.98 167.953 l 313.699 167.953 318.188
 171.648 318.188 178.512 c 318.188 185.23 313.82 188.617 306.789 188.617
 c 295.773 188.617 l h
295.773 188.641 m f
308.113 101.352 m 217.441 192 l 308.09 282.648 l 373.539 217.176 l 387.461
 203.254 387.461 180.719 373.539 166.824 c h
308.832 158.016 m 323.016 158.016 331.273 166.031 331.273 178.273 c 331.363
 182.09 330.305 185.844 328.227 189.047 c 326.148 192.25 323.152 194.75 
319.633 196.223 c 332.496 222 l 318.336 222 l 307.129 198.145 l 295.777 
198.145 l 295.777 222 l 283.273 222 l 283.273 158.016 l h
282.648 308.113 m 192 217.441 l 101.352 308.09 l 166.824 373.539 l 180.746
 387.461 203.281 387.461 217.176 373.539 c h
67.777 167.953 m 67.777 188.617 l 78.816 188.617 l 85.824 188.617 90.191
 185.258 90.191 178.512 c 90.191 171.648 85.68 167.953 78.984 167.953 c 
h
67.777 167.953 m f
75.887 282.648 m 166.559 192 l 75.887 101.352 l 10.441 166.824 l -3.48 
180.746 -3.48 203.281 10.441 217.176 c h
55.246 158.016 m 80.805 158.016 l 95.012 158.016 103.27 166.031 103.27 
178.273 c 103.27 187.633 97.461 193.969 91.629 196.227 c 104.492 222.004
 l 90.332 222.004 l 79.125 198.148 l 67.773 198.148 l 67.773 222.004 l 55.27
 222.004 l 55.273 158.016 l h
55.246 158.016 m f
Q Q
showpage
%%Trailer
%%EOF
