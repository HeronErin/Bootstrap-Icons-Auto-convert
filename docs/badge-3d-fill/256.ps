%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
121.883 71.617 m 111.754 71.617 l 111.754 120.336 l 121.883 120.336 l 135.273
 120.336 141.336 112.332 141.336 96.098 c 141.336 79.852 135.215 71.617 
121.883 71.617 c f
0 48 m 0 41.637 2.527 35.531 7.031 31.031 c 11.531 26.527 17.637 24 24 
24 c 168 24 l 174.363 24 180.469 26.527 184.969 31.031 c 189.473 35.531 
192 41.637 192 48 c 192 144 l 192 150.363 189.473 156.469 184.969 160.969
 c 180.469 165.473 174.363 168 168 168 c 24 168 l 17.637 168 11.531 165.473
 7.031 160.969 c 2.527 156.469 0 150.363 0 144 c h
62.207 100.414 m 69.961 100.414 74.867 104.949 74.926 111.215 c 75.023 
117.66 69.801 122.242 61.895 122.242 c 54.719 122.195 49.449 118.344 49.078
 113.172 c 36 113.172 l 36.359 124.141 45.492 133.43 61.836 133.43 c 76.715
 133.43 89.258 125.508 89.102 111.855 c 88.945 100.418 80.137 95.297 73.598
 94.672 c 73.598 93.93 l 78.879 93.09 87.098 87.605 86.895 77.43 c 86.738
 66.559 77.293 58.59 62.258 58.648 c 46.539 58.707 37.742 67.457 37.371 
78.688 c 50.605 78.688 l 50.871 73.996 55.203 69.676 61.836 69.676 c 68.219
 69.676 72.973 73.637 72.973 79.434 c 73.02 85.18 68.375 89.453 61.836 89.453
 c 54.25 89.453 l 54.25 100.422 l h
97.512 132 m 123.781 132 l 145.5 132 156 118.715 156 95.82 c 156 73.094
 145.668 60.012 123.781 60.012 c 97.512 60.012 l h
97.512 132 m f
Q Q
showpage
%%Trailer
%%EOF
