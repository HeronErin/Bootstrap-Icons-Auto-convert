%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
60.941 35.809 m 55.879 35.809 l 55.879 60.168 l 60.941 60.168 l 67.637 
60.168 70.668 56.164 70.668 48.047 c 70.668 39.922 67.609 35.809 60.941 
35.809 c f
0 24 m 0 17.371 5.371 12 12 12 c 84 12 l 87.184 12 90.234 13.266 92.484
 15.516 c 94.734 17.766 96 20.816 96 24 c 96 72 l 96 75.184 94.734 78.234
 92.484 80.484 c 90.234 82.734 87.184 84 84 84 c 12 84 l 5.371 84 0 78.629
 0 72 c h
31.105 50.207 m 34.98 50.207 37.434 52.477 37.465 55.605 c 37.512 58.828
 34.902 61.121 30.949 61.121 c 27.359 61.098 24.727 59.172 24.543 56.586
 c 18 56.586 l 18.18 62.07 22.746 66.715 30.918 66.715 c 38.359 66.715 44.629
 62.754 44.551 55.926 c 44.473 50.207 40.07 47.645 36.797 47.332 c 36.797
 46.961 l 39.438 46.539 43.547 43.801 43.445 38.711 c 43.367 33.273 38.645
 29.289 31.129 29.32 c 23.27 29.352 18.871 33.723 18.684 39.34 c 25.301 
39.34 l 25.434 36.992 27.598 34.832 30.918 34.832 c 34.109 34.832 36.484
 36.812 36.484 39.711 c 36.508 42.586 34.188 44.723 30.918 44.723 c 27.125
 44.723 l 27.125 50.207 l h
48.758 66 m 61.891 66 l 72.75 66 78 59.359 78 47.91 c 78 36.547 72.836 
30.008 61.891 30.008 c 48.758 30.008 l h
48.758 66 m f
Q Q
showpage
%%Trailer
%%EOF
