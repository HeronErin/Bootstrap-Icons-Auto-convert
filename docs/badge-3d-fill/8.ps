%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.809 2.238 m 3.492 2.238 l 3.492 3.762 l 3.809 3.762 l 4.227 3.762 4.418
 3.512 4.418 3.004 c 4.418 2.496 4.227 2.238 3.809 2.238 c f
0 1.5 m 0 1.086 0.336 0.75 0.75 0.75 c 5.25 0.75 l 5.449 0.75 5.641 0.828
 5.781 0.969 c 5.922 1.109 6 1.301 6 1.5 c 6 4.5 l 6 4.699 5.922 4.891 5.781
 5.031 c 5.641 5.172 5.449 5.25 5.25 5.25 c 0.75 5.25 l 0.336 5.25 0 4.914
 0 4.5 c h
1.945 3.137 m 2.188 3.137 2.34 3.277 2.344 3.473 c 2.348 3.676 2.184 3.816
 1.938 3.816 c 1.715 3.816 1.547 3.695 1.535 3.531 c 1.125 3.535 l 1.137
 3.879 1.422 4.168 1.934 4.168 c 2.398 4.168 2.789 3.922 2.785 3.492 c 2.781
 3.137 2.504 2.977 2.301 2.957 c 2.301 2.934 l 2.465 2.906 2.723 2.734 2.715
 2.418 c 2.711 2.078 2.414 1.828 1.945 1.832 c 1.453 1.832 1.18 2.105 1.168
 2.457 c 1.582 2.457 l 1.59 2.309 1.727 2.176 1.934 2.176 c 2.133 2.176 
2.281 2.301 2.281 2.48 c 2.281 2.66 2.137 2.793 1.934 2.793 c 1.695 2.793
 l 1.695 3.137 l h
3.047 4.125 m 3.867 4.125 l 4.547 4.125 4.875 3.711 4.875 2.996 c 4.875
 2.285 4.551 1.879 3.867 1.879 c 3.047 1.875 l h
3.047 4.125 m f
Q Q
showpage
%%Trailer
%%EOF
