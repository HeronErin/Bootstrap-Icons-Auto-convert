%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
960 868.801 m 1023.652 868.801 1084.695 843.516 1129.707 798.504 c 1174.715
 753.496 1200 692.453 1200 628.801 c 1200 565.148 1174.715 504.102 1129.707
 459.094 c 1084.695 414.086 1023.652 388.801 960 388.801 c 896.348 388.801
 835.305 414.086 790.293 459.094 c 745.285 504.102 720 565.148 720 628.801
 c 720 692.453 745.285 753.496 790.293 798.504 c 835.305 843.516 896.348
 868.801 960 868.801 c f
192 96 m 141.078 96 92.242 116.227 56.234 152.234 c 20.227 188.242 0 237.078
 0 288 c 0 1152 l 0 1185.703 8.871 1218.812 25.723 1248 c 42.574 1277.188
 66.812 1301.426 96 1318.277 c 125.188 1335.129 158.297 1344 192 1344 c 
1344 1344 l 1377.703 1344 1410.812 1335.129 1440 1318.277 c 1469.188 1301.426
 1493.426 1277.188 1510.277 1248 c 1527.129 1218.812 1536 1185.703 1536 
1152 c 1536 288 l 1536 254.297 1527.129 221.188 1510.277 192 c 1493.426 
162.812 1469.188 138.574 1440 121.723 c 1410.812 104.871 1377.703 96 1344
 96 c h
96 288 m 96 262.539 106.113 238.121 124.117 220.117 c 142.121 202.113 166.539
 192 192 192 c 384 192 l 384 384 l 96 384 l h
480 1248 m 480 192 l 1344 192 l 1369.461 192 1393.879 202.113 1411.883 
220.117 c 1429.887 238.121 1440 262.539 1440 288 c 1440 1152 l 1440 1179.359
 1428.48 1204.129 1410.238 1221.602 c 1358.398 1103.426 1230.91 960 960 
960 c 668.449 960 542.879 1126.078 499.391 1248 c h
96 1056 m 384 1056 l 384 1248 l 192 1248 l 166.539 1248 142.121 1237.887
 124.117 1219.883 c 106.113 1201.879 96 1177.461 96 1152 c h
384 960 m 96 960 l 96 768 l 384 768 l h
384 672 m 96 672 l 96 480 l 384 480 l h
384 672 m f
Q Q
showpage
%%Trailer
%%EOF
