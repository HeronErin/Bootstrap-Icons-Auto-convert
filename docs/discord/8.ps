%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.078 1.09 m 4.691 0.91 4.281 0.785 3.859 0.711 c 3.852 0.711 3.844 0.715
 3.84 0.719 c 3.785 0.812 3.727 0.934 3.688 1.031 c 3.23 0.965 2.77 0.965
 2.316 1.031 c 2.27 0.926 2.219 0.82 2.16 0.719 c 2.156 0.715 2.148 0.711
 2.141 0.711 c 1.719 0.785 1.309 0.91 0.918 1.09 c 0.914 1.09 0.914 1.094
 0.91 1.098 c 0.133 2.258 -0.078 3.395 0.023 4.512 c 0.023 4.516 0.027 4.523
 0.031 4.527 c 0.484 4.859 0.992 5.117 1.531 5.285 c 1.539 5.285 1.547 5.281
 1.551 5.277 c 1.668 5.121 1.77 4.953 1.859 4.777 c 1.863 4.77 1.859 4.762
 1.855 4.754 c 1.848 4.75 l 1.688 4.688 1.531 4.613 1.379 4.527 c 1.371 
4.523 1.367 4.512 1.371 4.504 c 1.375 4.496 l 1.406 4.473 1.438 4.449 1.469
 4.422 c 1.473 4.422 l 1.477 4.418 1.484 4.418 1.492 4.422 c 2.473 4.871
 3.539 4.871 4.508 4.422 c 4.504 4.422 l 4.512 4.418 4.52 4.418 4.527 4.422
 c 4.559 4.445 4.59 4.473 4.621 4.496 c 4.617 4.496 l 4.629 4.504 4.629 
4.523 4.617 4.527 c 4.469 4.617 4.312 4.691 4.148 4.75 c 4.145 4.754 4.141
 4.758 4.137 4.762 c 4.137 4.766 4.137 4.773 4.137 4.777 c 4.227 4.953 4.328
 5.117 4.441 5.277 c 4.445 5.277 l 4.449 5.281 4.457 5.285 4.465 5.285 c
 5.004 5.117 5.512 4.863 5.965 4.527 c 5.973 4.523 5.973 4.516 5.973 4.512
 c 6.098 3.219 5.762 2.094 5.086 1.098 c 5.086 1.094 5.082 1.09 5.078 1.09
 c 2.004 3.828 m 1.707 3.828 1.465 3.555 1.465 3.223 c 1.465 2.891 1.703
 2.617 2.004 2.617 c 2.305 2.617 2.547 2.891 2.543 3.223 c 2.543 3.555 2.305
 3.828 2.004 3.828 c 3.996 3.828 m 3.699 3.828 3.457 3.555 3.457 3.223 c
 3.457 2.891 3.695 2.617 3.996 2.617 c 4.297 2.617 4.539 2.891 4.535 3.223
 c 4.535 3.555 4.297 3.828 3.996 3.828 c f
Q Q
showpage
%%Trailer
%%EOF
