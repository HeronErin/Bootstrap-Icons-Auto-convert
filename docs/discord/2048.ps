%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 183 1536 1355
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 183 1536 1355
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 183 1536 1172 rectclip
1 0 0 -1 0 1536 cm q
0 g
1300.32 279.07 m 1200.73 233.336 1095.629 200.711 987.648 182.016 c 985.645
 181.68 983.645 182.641 982.656 184.414 c 969.121 208.414 954.145 239.805
 943.68 264.383 c 827.289 246.734 708.902 246.734 592.512 264.383 c 580.891
 236.984 567.684 210.281 552.961 184.414 c 551.973 182.641 549.973 181.68
 547.969 182.016 c 439.969 200.641 334.848 233.281 235.297 279.07 c 234.441
 279.391 233.727 280.004 233.281 280.801 c 34.176 578.305 -20.449 868.512
 6.336 1155.07 c 6.527 1156.477 7.199 1157.664 8.352 1158.621 c 8.352 1158.625
 l 124.316 1244.469 253.992 1310.039 391.871 1352.543 c 393.871 1353.176
 396.047 1352.438 397.246 1350.719 c 426.879 1310.398 453.055 1267.871 475.773
 1223.133 c 475.777 1223.137 l 476.746 1221.242 476.355 1218.938 474.816
 1217.473 c 473.09 1216.418 l 473.09 1216.414 l 431.746 1200.477 391.691
 1181.379 353.281 1159.297 c 351.055 1158.035 350.207 1155.246 351.359 1152.961
 c 352.801 1151.137 l 360.93 1145.059 368.863 1138.816 376.609 1132.418 
c 376.609 1132.414 l 377.992 1131.305 379.875 1131.047 381.504 1131.742 
c 632.93 1246.559 905.09 1246.559 1153.441 1131.742 c 1155.125 1130.965 
1157.105 1131.227 1158.527 1132.414 c 1166.27 1138.812 1174.207 1145.055
 1182.336 1151.133 c 1182.336 1151.137 l 1183.711 1152.074 1184.5 1153.66
 1184.422 1155.324 c 1184.344 1156.984 1183.406 1158.488 1181.953 1159.297
 c 1143.707 1181.73 1103.586 1200.809 1062.047 1216.32 c 1060.707 1216.805
 1059.652 1217.859 1059.168 1219.199 c 1058.695 1220.492 1058.801 1221.926
 1059.457 1223.137 c 1082.496 1267.777 1108.898 1310.402 1137.891 1350.723
 c 1137.887 1350.719 l 1139.09 1352.438 1141.266 1353.176 1143.266 1352.543
 c 1281.414 1310.273 1411.32 1244.688 1527.359 1158.625 c 1528.527 1157.801
 1529.266 1156.496 1529.375 1155.07 c 1561.438 823.773 1475.711 535.965 
1302.238 280.895 c 1301.934 280.012 1301.219 279.332 1300.32 279.07 c 513.312
 980.543 m 437.57 980.543 375.266 911.039 375.266 825.789 c 375.266 740.543
 436.418 670.941 513.312 670.941 c 590.785 670.941 652.512 741.02 651.359
 825.789 c 651.359 911.035 590.207 980.543 513.312 980.543 c 1023.648 980.543
 m 948 980.543 885.602 911.039 885.602 825.789 c 885.602 740.543 946.754
 670.941 1023.648 670.941 c 1101.121 670.941 1162.945 741.02 1161.695 825.789
 c 1161.695 911.035 1101.121 980.543 1023.648 980.543 c f
Q Q
showpage
%%Trailer
%%EOF
