%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 66 96 l 66 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
15.73 81.996 m 15.73 85.129 l 15.73 86.664 15.496 87.945 15.027 88.977 
c 15.031 88.973 l 14.633 89.922 13.961 90.73 13.098 91.297 c 12.246 91.801
 11.27 92.062 10.277 92.051 c 9.285 92.062 8.312 91.801 7.457 91.297 c 6.605
 90.73 5.938 89.922 5.539 88.98 c 5.035 87.762 4.793 86.449 4.836 85.129
 c 4.836 81.996 l 4.836 80.453 5.07 79.172 5.539 78.148 c 5.938 77.203 6.605
 76.395 7.457 75.828 c 8.305 75.305 9.285 75.039 10.277 75.055 c 11.336 
75.055 12.277 75.316 13.098 75.836 c 13.957 76.395 14.633 77.203 15.031 
78.148 c 15.5 79.168 15.734 80.449 15.734 81.996 c 20.551 85.109 m 20.551
 82.031 l 20.551 79.77 20.141 77.828 19.32 76.199 c 18.547 74.613 17.312
 73.293 15.781 72.422 c 14.262 71.543 12.43 71.102 10.285 71.102 c 8.148
 71.102 6.309 71.543 4.766 72.422 c 3.23 73.285 1.996 74.598 1.23 76.184
 c 0.41 77.805 0 79.758 0 82.031 c 0 85.109 l 0 87.363 0.41 89.309 1.23 
90.949 c 2.051 92.574 3.227 93.828 4.766 94.711 c 6.309 95.574 8.148 96.008
 10.285 96.008 c 12.43 96.008 14.262 95.574 15.789 94.711 c 15.785 94.711
 l 17.312 93.836 18.543 92.527 19.32 90.949 c 20.137 89.309 20.547 87.363
 20.551 85.109 c 32.551 95.551 m 32.551 75.527 l 39.359 75.527 l 39.359 
71.555 l 20.98 71.555 l 20.98 75.527 l 27.781 75.527 l 27.781 95.551 l h
46.059 86.012 m 46.059 95.551 l 41.32 95.551 l 41.32 71.559 l 56.609 71.559
 l 56.609 75.477 l 46.055 75.473 l 46.055 82.176 l 55.691 82.176 l 55.691
 86.004 l h
46.059 86.012 m f*
Q Q
showpage
%%Trailer
%%EOF
