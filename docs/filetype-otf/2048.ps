%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1056 1536 l 1056 1440 l 1152 1440 l 1177.461 1440 1201.879
 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248 1369.461 1248 1344 
c 1248 432 l 1056 432 l 1017.809 432 981.184 416.828 954.176 389.824 c 927.172
 362.816 912 326.191 912 288 c 912 96 l 384 96 l 358.539 96 334.121 106.113
 316.117 124.117 c 298.113 142.121 288 166.539 288 192 c 288 1056 l 192 
1056 l 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227
 333.078 0 384 0 c 912 0 l h
251.711 1311.938 m 251.711 1362.051 l 251.711 1386.625 247.969 1407.141
 240.48 1423.586 c 234.113 1438.773 223.348 1451.711 209.566 1460.734 c 
195.926 1468.836 180.312 1473.02 164.449 1472.832 c 148.582 1473.02 132.973
 1468.836 119.328 1460.734 c 105.672 1451.668 94.988 1438.777 88.609 1423.68
 c 80.531 1404.164 76.703 1383.156 77.375 1362.047 c 77.375 1311.934 l 77.375
 1287.23 81.117 1266.719 88.605 1250.398 c 88.609 1250.398 l 94.973 1235.266
 105.66 1222.344 119.328 1213.246 c 132.883 1204.906 148.535 1200.609 164.449
 1200.863 c 181.41 1200.863 196.449 1205.023 209.57 1213.344 c 209.566 1213.344
 l 223.332 1222.34 234.098 1235.246 240.48 1250.398 c 247.969 1266.719 251.711
 1287.23 251.711 1311.934 c 328.801 1361.758 m 328.801 1312.512 l 328.801
 1276.352 322.242 1245.246 309.121 1219.199 c 296.766 1193.793 277.023 1172.711
 252.48 1158.719 c 228.16 1144.641 198.848 1137.598 164.543 1137.598 c 130.367
 1137.598 100.926 1144.637 76.223 1158.719 c 51.684 1172.555 31.953 1193.555
 19.68 1218.91 c 6.559 1244.895 0 1276.098 0 1312.512 c 0 1361.758 l 0 1397.789
 6.559 1428.926 19.68 1455.164 c 32.801 1481.148 51.648 1501.211 76.223 
1515.355 c 100.926 1529.18 130.367 1536.09 164.543 1536.09 c 198.848 1536.09
 228.191 1529.18 252.574 1515.355 c 252.574 1515.359 l 277.004 1501.383 
296.695 1480.422 309.121 1455.168 c 322.176 1428.93 328.738 1397.793 328.801
 1361.762 c 520.801 1528.801 m 520.801 1208.449 l 629.762 1208.449 l 629.762
 1144.898 l 335.711 1144.895 l 335.711 1208.445 l 444.48 1208.449 l 444.48
 1528.801 l h
736.898 1376.16 m 736.898 1528.801 l 661.059 1528.801 l 661.059 1144.898
 l 905.668 1144.898 l 905.668 1207.586 l 736.895 1207.586 l 736.895 1314.816
 l 891.07 1314.816 l 891.07 1376.062 l h
736.898 1376.16 m f*
Q Q
showpage
%%Trailer
%%EOF
