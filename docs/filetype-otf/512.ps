%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 264 384 l 264 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
62.93 327.984 m 62.93 340.512 l 62.93 346.656 61.992 351.785 60.121 355.895
 c 58.527 359.695 55.836 362.93 52.391 365.184 c 48.98 367.207 45.078 368.254
 41.113 368.207 c 37.145 368.254 33.242 367.207 29.832 365.184 c 26.418 
362.918 23.746 359.695 22.152 355.922 c 20.133 351.043 19.176 345.789 19.344
 340.512 c 19.344 327.984 l 19.344 321.809 20.281 316.68 22.152 312.602 
c 23.742 308.816 26.414 305.586 29.832 303.312 c 33.219 301.227 37.133 300.152
 41.113 300.215 c 45.352 300.215 49.113 301.254 52.395 303.336 c 52.391 
303.336 l 55.832 305.586 58.523 308.812 60.121 312.602 c 61.992 316.68 62.93
 321.809 62.93 327.984 c 82.203 340.441 m 82.203 328.129 l 82.203 319.09
 80.562 311.312 77.281 304.801 c 74.191 298.449 69.258 293.176 63.121 289.68
 c 57.043 286.16 49.715 284.398 41.137 284.398 c 32.594 284.398 25.234 286.16
 19.059 289.68 c 19.055 289.68 l 12.922 293.137 7.988 298.391 4.922 304.727
 c 1.641 311.223 0 319.023 0 328.129 c 0 340.441 l 0 349.449 1.641 357.234
 4.922 363.793 c 8.203 370.289 12.914 375.305 19.059 378.84 c 25.234 382.297
 32.594 384.023 41.137 384.023 c 49.711 384.023 57.047 382.297 63.145 378.84
 c 69.25 375.348 74.176 370.105 77.281 363.793 c 80.547 357.234 82.184 349.449
 82.203 340.441 c 130.203 382.203 m 130.203 302.113 l 157.441 302.113 l 
157.441 286.227 l 83.93 286.223 l 83.93 302.109 l 111.121 302.113 l 111.121
 382.203 l h
184.227 344.043 m 184.227 382.203 l 165.266 382.203 l 165.266 286.227 l
 226.418 286.227 l 226.418 301.898 l 184.223 301.895 l 184.223 328.703 l
 222.766 328.703 l 222.766 344.016 l h
184.227 344.043 m f*
Q Q
showpage
%%Trailer
%%EOF
