%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.125 6 l 4.125 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586
 4.766 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 
1.688 l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 
1.293 0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75
 l 0.75 0.336 1.086 0 1.5 0 c 3.562 0 l h
0.984 5.125 m 0.984 5.32 l 0.984 5.418 0.969 5.496 0.941 5.562 c 0.938 
5.562 l 0.914 5.621 0.871 5.672 0.82 5.707 c 0.766 5.738 0.703 5.754 0.641
 5.754 c 0.582 5.754 0.52 5.738 0.465 5.707 c 0.414 5.672 0.371 5.621 0.348
 5.562 c 0.316 5.484 0.301 5.402 0.301 5.32 c 0.301 5.125 l 0.301 5.027 
0.316 4.949 0.344 4.883 c 0.348 4.883 l 0.371 4.824 0.414 4.773 0.465 4.738
 c 0.52 4.707 0.582 4.691 0.641 4.691 c 0.707 4.691 0.766 4.707 0.816 4.738
 c 0.82 4.738 l 0.871 4.773 0.914 4.824 0.938 4.883 c 0.965 4.945 0.98 5.027
 0.98 5.125 c 1.281 5.32 m 1.281 5.129 l 1.281 4.988 1.254 4.867 1.203 4.766
 c 1.207 4.762 l 1.16 4.664 1.082 4.582 0.984 4.527 c 0.891 4.473 0.773 
4.445 0.641 4.445 c 0.508 4.445 0.391 4.473 0.297 4.527 c 0.203 4.582 0.125
 4.664 0.078 4.762 c 0.027 4.863 0 4.984 0 5.129 c 0 5.32 l 0 5.461 0.027
 5.582 0.078 5.684 c 0.129 5.785 0.203 5.863 0.301 5.918 c 0.398 5.973 0.512
 6 0.645 6 c 0.777 6 0.895 5.973 0.988 5.918 c 1.082 5.863 1.16 5.781 1.207
 5.684 c 1.258 5.582 1.285 5.461 1.285 5.32 c 2.035 5.973 m 2.035 4.723 
l 2.461 4.719 l 2.461 4.469 l 1.312 4.473 l 1.312 4.723 l 1.734 4.719 l 
1.734 5.969 l 2.031 5.969 l h
2.879 5.375 m 2.879 5.973 l 2.582 5.973 l 2.582 4.473 l 3.539 4.473 l 3.539
 4.719 l 2.879 4.719 l 2.879 5.137 l 3.48 5.137 l 3.48 5.375 l h
2.879 5.375 m f*
Q Q
showpage
%%Trailer
%%EOF
