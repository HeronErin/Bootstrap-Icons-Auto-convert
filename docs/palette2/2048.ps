%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 48 m 0 35.27 5.059 23.062 14.059 14.059 c 23.062 5.059 35.27 0 48 0 c
 528 0 l 540.73 0 552.938 5.059 561.941 14.059 c 570.941 23.062 576 35.27
 576 48 c 576 554.594 l 974.113 158.02 l 974.113 158.016 l 983.113 149.016
 995.32 143.961 1008.047 143.961 c 1020.777 143.961 1032.984 149.016 1041.984
 158.016 c 1381.344 497.473 l 1390.371 506.477 1395.445 518.703 1395.445
 531.457 c 1395.445 544.207 1390.371 556.434 1381.344 565.441 c 985.055 
960 l 1488 960 l 1500.73 960 1512.938 965.059 1521.941 974.059 c 1530.941
 983.062 1536 995.27 1536 1008 c 1536 1488 l 1536 1500.73 1530.941 1512.938
 1521.941 1521.941 c 1512.938 1530.941 1500.73 1536 1488 1536 c 288 1536
 l 211.625 1535.984 138.383 1505.629 84.383 1451.617 c 31.391 1398.656 1.125
 1327.133 0 1252.223 c 576 1232.062 m 1279.488 531.262 l 1007.902 259.773
 l 576 690.047 l h
432 1248 m 432 1196.555 404.555 1149.016 360 1123.293 c 315.445 1097.57
 260.555 1097.57 216 1123.293 c 171.445 1149.016 144 1196.555 144 1248 c
 144 1299.445 171.445 1346.984 216 1372.707 c 260.555 1398.43 315.445 1398.43
 360 1372.707 c 404.555 1346.984 432 1299.445 432 1248 c 1440 1440 m 1440
 1056 l 888.77 1056 l 503.328 1440 l h
0 48 m 0 1247.52 l h
0 1247.52 m 0 1248 l h
0 1247.52 m f
Q Q
showpage
%%Trailer
%%EOF
