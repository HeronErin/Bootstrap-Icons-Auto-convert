%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 180
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 180 rectclip
1 0 0 -1 0 192 cm q
0 g
54 12 m 49.227 12 44.648 13.895 41.273 17.273 c 37.895 20.648 36 25.227
 36 30 c 36 36 l 84 36 l 84 30 l 84 25.227 82.105 20.648 78.727 17.273 c
 75.352 13.895 70.773 12 66 12 c h
84 48 m 84 60 l 108 60 l 108 48 l 156 48 l 156 58.586 l 156 60.855 157.281
 62.93 159.312 63.949 c 170.051 69.312 l 173.043 70.809 175.559 73.105 177.312
 75.949 c 179.07 78.797 180 82.074 180 85.414 c 180 156 l 108 156 l 108 
138 l 107.996 136.406 108.629 134.879 109.754 133.754 c 120 123.52 l 120
 114 l 120 112.41 119.367 110.883 118.242 109.758 c 117.117 108.633 115.59
 108 114 108 c 78 108 l 74.688 108 72 110.688 72 114 c 72 123.516 l 82.246
 133.75 l 82.246 133.754 l 83.371 134.879 84.004 136.406 84 138 c 84 156
 l 12 156 l 12 85.414 l 12 82.07 12.934 78.793 14.691 75.949 c 16.449 73.105
 18.969 70.805 21.961 69.312 c 32.688 63.949 l 34.719 62.93 36 60.855 36
 58.586 c 36 48 l h
12 168 m 12 174 l 12 178.773 13.895 183.352 17.273 186.727 c 20.648 190.105
 25.227 192 30 192 c 66 192 l 70.773 192 75.352 190.105 78.727 186.727 c
 82.105 183.352 84 178.773 84 174 c 84 168 l h
108 168 m 108 174 l 108 178.773 109.895 183.352 113.273 186.727 c 116.648
 190.105 121.227 192 126 192 c 162 192 l 166.773 192 171.352 190.105 174.727
 186.727 c 178.105 183.352 180 178.773 180 174 c 180 168 l h
156 36 m 108 36 l 108 30 l 108 25.227 109.895 20.648 113.273 17.273 c 116.648
 13.895 121.227 12 126 12 c 138 12 l 142.773 12 147.352 13.895 150.727 17.273
 c 154.105 20.648 156 25.227 156 30 c h
156 36 m f
Q Q
showpage
%%Trailer
%%EOF
