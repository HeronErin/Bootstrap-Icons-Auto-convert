%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
432 96 m 393.809 96 357.184 111.172 330.176 138.176 c 303.172 165.184 288
 201.809 288 240 c 288 288 l 672 288 l 672 240 l 672 201.809 656.828 165.184
 629.824 138.176 c 602.816 111.172 566.191 96 528 96 c h
672 384 m 672 480 l 864 480 l 864 384 l 1248 384 l 1248 468.672 l 1248 
477.578 1250.48 486.309 1255.156 493.887 c 1259.836 501.465 1266.531 507.594
 1274.496 511.586 c 1360.418 554.496 l 1360.414 554.496 l 1384.336 566.461
 1404.453 584.852 1418.512 607.605 c 1432.566 630.359 1440.008 656.582 1440
 683.328 c 1440 1248 l 864 1248 l 864 1104 l 863.977 1091.262 869.02 1079.035
 878.016 1070.016 c 960 988.129 l 960 912 l 960 899.27 954.941 887.062 945.941
 878.059 c 936.938 869.059 924.73 864 912 864 c 624 864 l 611.27 864 599.062
 869.059 590.059 878.059 c 581.059 887.062 576 899.27 576 912 c 576 988.129
 l 657.984 1070.016 l 666.98 1079.035 672.023 1091.262 672 1104 c 672 1248
 l 96 1248 l 96 683.328 l 96 656.57 103.457 630.344 117.531 607.59 c 131.605
 584.832 151.742 566.449 175.68 554.496 c 261.504 511.586 l 269.469 507.594
 276.164 501.465 280.844 493.887 c 285.52 486.309 288 477.578 288 468.672
 c 288 384 l h
96 1344 m 96 1392 l 96 1430.191 111.172 1466.816 138.176 1493.824 c 165.184
 1520.828 201.809 1536 240 1536 c 528 1536 l 566.191 1536 602.816 1520.828
 629.824 1493.824 c 656.828 1466.816 672 1430.191 672 1392 c 672 1344 l 
h
864 1344 m 864 1392 l 864 1430.191 879.172 1466.816 906.176 1493.824 c 
933.184 1520.828 969.809 1536 1008 1536 c 1296 1536 l 1334.191 1536 1370.816
 1520.828 1397.824 1493.824 c 1424.828 1466.816 1440 1430.191 1440 1392 
c 1440 1344 l h
1248 288 m 864 288 l 864 240 l 864 201.809 879.172 165.184 906.176 138.176
 c 933.184 111.172 969.809 96 1008 96 c 1104 96 l 1142.191 96 1178.816 111.172
 1205.824 138.176 c 1232.828 165.184 1248 201.809 1248 240 c h
1248 288 m f
Q Q
showpage
%%Trailer
%%EOF
