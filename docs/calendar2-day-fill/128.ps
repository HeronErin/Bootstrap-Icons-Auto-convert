%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
21 0 m 21.797 0 22.559 0.316 23.121 0.879 c 23.684 1.441 24 2.203 24 3 
c 24 6 l 72 6 l 72 3 l 72 1.344 73.344 0 75 0 c 76.656 0 78 1.344 78 3 c
 78 6 l 84 6 l 87.184 6 90.234 7.266 92.484 9.516 c 94.734 11.766 96 14.816
 96 18 c 96 84 l 96 87.184 94.734 90.234 92.484 92.484 c 90.234 94.734 87.184
 96 84 96 c 12 96 l 5.371 96 0 90.629 0 84 c 0 18 l 0 11.371 5.371 6 12 
6 c 18 6 l 18 3 l 18 1.344 19.344 0 21 0 c 80.723 18 m 15.27 18 l 13.469
 18 12 19.344 12 21 c 12 27 l 12 28.656 13.465 30 15.27 30 c 80.73 30 l 
82.531 30 84 28.656 84 27 c 84 21 l 84 19.344 82.535 18 80.723 18 c 67.281
 47.129 m 67.285 47.129 l 67.984 47.164 68.672 46.91 69.18 46.426 c 69.688
 45.941 69.977 45.27 69.977 44.566 c 69.977 43.863 69.688 43.191 69.18 42.707
 c 68.672 42.223 67.984 41.965 67.285 42 c 66.598 41.996 65.941 42.266 65.457
 42.75 c 64.973 43.234 64.703 43.895 64.711 44.578 c 64.711 46.008 65.863
 47.129 67.289 47.129 c h
69.305 50.508 m 65.273 50.508 l 65.273 75.137 l 69.305 75.137 l h
28.102 75.137 m 28.102 61.336 l 41.668 61.336 l 41.668 57.676 l 28.105 
57.68 l 28.105 46.805 l 42.891 46.805 l 42.891 43.145 l 24 43.145 l 24 75.137
 l h
47.879 75.137 m 51.934 75.137 l 51.938 59.879 l 51.938 56.555 53.301 53.836
 57.656 53.836 c 58.406 53.836 59.203 53.859 59.629 53.926 c 59.629 50.246
 l 59.629 50.25 l 59.125 50.176 58.613 50.137 58.105 50.129 c 54.613 50.129
 52.758 52.051 52.035 53.531 c 51.914 53.531 l 51.914 50.508 l 47.879 50.508
 l h
47.879 75.137 m f
Q Q
showpage
%%Trailer
%%EOF
