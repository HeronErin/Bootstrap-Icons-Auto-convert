%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 336 1536 1296
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 336 1536 1296
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 336 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 432 m 96 406.539 106.113 382.121 124.117 364.117 c 142.121 346.113 166.539
 336 192 336 c 1344 336 l 1369.461 336 1393.879 346.113 1411.883 364.117
 c 1429.887 382.121 1440 406.539 1440 432 c 1440 1008 l 1440 1033.461 1429.887
 1057.879 1411.883 1075.883 c 1393.879 1093.887 1369.461 1104 1344 1104 
c 192 1104 l 166.539 1104 142.121 1093.887 124.117 1075.883 c 106.113 1057.879
 96 1033.461 96 1008 c h
0 1008 m 0 1041.703 8.871 1074.812 25.723 1104 c 42.574 1133.188 66.812
 1157.426 96 1174.277 c 125.188 1191.129 158.297 1200 192 1200 c 1344 1200
 l 1377.703 1200 1410.812 1191.129 1440 1174.277 c 1469.188 1157.426 1493.426
 1133.188 1510.277 1104 c 1527.129 1074.812 1536 1041.703 1536 1008 c 1536
 432 l 1536 398.297 1527.129 365.188 1510.277 336 c 1493.426 306.812 1469.188
 282.574 1440 265.723 c 1410.812 248.871 1377.703 240 1344 240 c 192 240
 l 141.078 240 92.242 260.227 56.234 296.234 c 20.227 332.242 0 381.078 
0 432 c h
0 1008 m f
1344 720 m 1344 685.703 1325.703 654.012 1296 636.863 c 1266.297 619.711
 1229.703 619.711 1200 636.863 c 1170.297 654.012 1152 685.703 1152 720 
c 1152 754.297 1170.297 785.988 1200 803.137 c 1229.703 820.289 1266.297
 820.289 1296 803.137 c 1325.703 785.988 1344 754.297 1344 720 c f
Q Q
showpage
%%Trailer
%%EOF
