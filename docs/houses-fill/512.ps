%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 368
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 368
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 344 rectclip
1 0 0 -1 0 384 cm q
0 g
172.969 24 m 168.469 19.5 162.363 16.973 156 16.973 c 149.637 16.973 143.531
 19.5 139.031 24 c 3.504 159.504 l -1.188 164.195 -1.188 171.805 3.504 176.496
 c 8.195 181.188 15.805 181.188 20.496 176.496 c 24 172.969 l 24 300 l 24
 309.547 27.793 318.703 34.543 325.457 c 41.297 332.207 50.453 336 60 336
 c 73.199 336 l 72.398 332.051 71.996 328.031 72 324 c 72 225.961 l 60.348
 221.836 51.625 212.023 48.898 199.969 c 46.168 187.91 49.816 175.297 58.559
 166.559 c 187.031 38.062 l h
172.969 24 m f
211.031 48 m 215.531 43.5 221.637 40.973 228 40.973 c 234.363 40.973 240.469
 43.5 244.969 48 c 288 91.031 l 288 60 l 288 53.371 293.371 48 300 48 c 
324 48 l 327.184 48 330.234 49.266 332.484 51.516 c 334.734 53.766 336 56.816
 336 60 c 336 139.031 l 380.496 183.504 l 385.188 188.195 385.188 195.805
 380.496 200.496 c 375.805 205.188 368.195 205.188 363.504 200.496 c 360
 196.969 l 360 324 l 360 333.547 356.207 342.703 349.457 349.457 c 342.703
 356.207 333.547 360 324 360 c 132 360 l 122.453 360 113.297 356.207 106.543
 349.457 c 99.793 342.703 96 333.547 96 324 c 96 196.969 l 92.496 200.496
 l 87.805 205.188 80.195 205.188 75.504 200.496 c 70.812 195.805 70.812 
188.195 75.504 183.504 c h
211.031 48 m f
Q Q
showpage
%%Trailer
%%EOF
