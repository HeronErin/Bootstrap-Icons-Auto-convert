%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1469
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1469
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1373 rectclip
1 0 0 -1 0 1536 cm q
0 g
691.871 96 m 673.871 78.004 649.457 67.891 624 67.891 c 598.543 67.891 
574.129 78.004 556.129 96 c 14.016 638.016 l 1.875 650.156 -2.867 667.855
 1.578 684.438 c 6.02 701.023 18.977 713.98 35.562 718.422 c 52.145 722.867
 69.844 718.125 81.984 705.984 c 96 691.871 l 96 1200 l 96 1238.191 111.172
 1274.816 138.176 1301.824 c 165.184 1328.828 201.809 1344 240 1344 c 292.801
 1344 l 289.594 1328.203 287.984 1312.121 288 1296 c 288 903.84 l 241.391
 887.348 206.5 848.09 195.59 799.867 c 184.676 751.645 199.27 701.191 234.238
 666.238 c 748.125 152.254 l h
691.871 96 m f
844.129 192 m 862.129 174.004 886.543 163.891 912 163.891 c 937.457 163.891
 961.871 174.004 979.871 192 c 1152 364.129 l 1152 240 l 1152 227.27 1157.059
 215.062 1166.059 206.059 c 1175.062 197.059 1187.27 192 1200 192 c 1296
 192 l 1308.73 192 1320.938 197.059 1329.941 206.059 c 1338.941 215.062 
1344 227.27 1344 240 c 1344 556.129 l 1521.984 734.016 l 1534.125 746.156
 1538.867 763.855 1534.422 780.438 c 1529.98 797.023 1517.023 809.98 1500.438
 814.422 c 1483.855 818.867 1466.156 814.125 1454.016 801.984 c 1440 787.871
 l 1440 1296 l 1440 1334.191 1424.828 1370.816 1397.824 1397.824 c 1370.816
 1424.828 1334.191 1440 1296 1440 c 528 1440 l 489.809 1440 453.184 1424.828
 426.176 1397.824 c 399.172 1370.816 384 1334.191 384 1296 c 384 787.871
 l 369.984 801.984 l 357.844 814.125 340.145 818.867 323.562 814.422 c 306.977
 809.98 294.02 797.023 289.578 780.438 c 285.133 763.855 289.875 746.156
 302.016 734.016 c h
844.129 192 m f
Q Q
showpage
%%Trailer
%%EOF
