%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 42 rectclip
1 0 0 -1 0 48 cm q
0 g
13.5 18 m 14.328 18 15 17.328 15 16.5 c 15 15.672 14.328 15 13.5 15 c 12.672
 15 12 15.672 12 16.5 c 12 17.328 12.672 18 13.5 18 c 18 18 m 18.828 18 
19.5 17.328 19.5 16.5 c 19.5 15.672 18.828 15 18 15 c 17.172 15 16.5 15.672
 16.5 16.5 c 16.5 17.328 17.172 18 18 18 c 24 16.5 m 24 17.328 23.328 18
 22.5 18 c 21.672 18 21 17.328 21 16.5 c 21 15.672 21.672 15 22.5 15 c 23.328
 15 24 15.672 24 16.5 c f
36 3 m 37.59 3 39.117 3.633 40.242 4.758 c 41.367 5.883 42 7.41 42 9 c 
43.59 9 45.117 9.633 46.242 10.758 c 47.367 11.883 48 13.41 48 15 c 48 39
 l 48 40.59 47.367 42.117 46.242 43.242 c 45.117 44.367 43.59 45 42 45 c
 12 45 l 8.688 45 6 42.312 6 39 c 2.688 39 0 36.312 0 33 c 0 9 l 0 5.688
 2.688 3 6 3 c h
6 36 m 6 15 l 6 11.688 8.688 9 12 9 c 39 9 l 39 8.203 38.684 7.441 38.121
 6.879 c 37.559 6.316 36.797 6 36 6 c 6 6 l 4.344 6 3 7.344 3 9 c 3 33 l
 3 33.797 3.316 34.559 3.879 35.121 c 4.441 35.684 5.203 36 6 36 c 9 24 
m 9 39 l 9 39.797 9.316 40.559 9.879 41.121 c 10.441 41.684 11.203 42 12
 42 c 42 42 l 42.797 42 43.559 41.684 44.121 41.121 c 44.684 40.559 45 39.797
 45 39 c 45 24 l h
45 21 m 45 15 l 45 14.203 44.684 13.441 44.121 12.879 c 43.559 12.316 42.797
 12 42 12 c 12 12 l 10.344 12 9 13.344 9 15 c 9 21 l h
45 21 m f
Q Q
showpage
%%Trailer
%%EOF
