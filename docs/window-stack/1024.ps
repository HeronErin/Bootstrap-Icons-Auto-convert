%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
216 288 m 224.574 288 232.496 283.426 236.785 276 c 241.07 268.574 241.07
 259.426 236.785 252 c 232.496 244.574 224.574 240 216 240 c 207.426 240
 199.504 244.574 195.215 252 c 190.93 259.426 190.93 268.574 195.215 276
 c 199.504 283.426 207.426 288 216 288 c 288 288 m 296.574 288 304.496 283.426
 308.785 276 c 313.07 268.574 313.07 259.426 308.785 252 c 304.496 244.574
 296.574 240 288 240 c 279.426 240 271.504 244.574 267.215 252 c 262.93 
259.426 262.93 268.574 267.215 276 c 271.504 283.426 279.426 288 288 288
 c 384 264 m 384 272.574 379.426 280.496 372 284.785 c 364.574 289.07 355.426
 289.07 348 284.785 c 340.574 280.496 336 272.574 336 264 c 336 255.426 
340.574 247.504 348 243.215 c 355.426 238.93 364.574 238.93 372 243.215 
c 379.426 247.504 384 255.426 384 264 c f
576 48 m 601.461 48 625.879 58.113 643.883 76.117 c 661.887 94.121 672 
118.539 672 144 c 697.461 144 721.879 154.113 739.883 172.117 c 757.887 
190.121 768 214.539 768 240 c 768 624 l 768 649.461 757.887 673.879 739.883
 691.883 c 721.879 709.887 697.461 720 672 720 c 192 720 l 166.539 720 142.121
 709.887 124.117 691.883 c 106.113 673.879 96 649.461 96 624 c 70.539 624
 46.121 613.887 28.117 595.883 c 10.113 577.879 0 553.461 0 528 c 0 144 
l 0 118.539 10.113 94.121 28.117 76.117 c 46.121 58.113 70.539 48 96 48 
c h
96 576 m 96 240 l 96 214.539 106.113 190.121 124.117 172.117 c 142.121 
154.113 166.539 144 192 144 c 624 144 l 624 131.27 618.941 119.062 609.941
 110.059 c 600.938 101.059 588.73 96 576 96 c 96 96 l 83.27 96 71.062 101.059
 62.059 110.059 c 53.059 119.062 48 131.27 48 144 c 48 528 l 48 540.73 53.059
 552.938 62.059 561.941 c 71.062 570.941 83.27 576 96 576 c 144 384 m 144
 624 l 144 636.73 149.059 648.938 158.059 657.941 c 167.062 666.941 179.27
 672 192 672 c 672 672 l 684.73 672 696.938 666.941 705.941 657.941 c 714.941
 648.938 720 636.73 720 624 c 720 384 l h
720 336 m 720 240 l 720 227.27 714.941 215.062 705.941 206.059 c 696.938
 197.059 684.73 192 672 192 c 192 192 l 179.27 192 167.062 197.059 158.059
 206.059 c 149.059 215.062 144 227.27 144 240 c 144 336 l h
720 336 m f
Q Q
showpage
%%Trailer
%%EOF
