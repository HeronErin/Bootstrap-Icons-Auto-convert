%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 216 24 552 744
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 216 24 552 744
768 768 cairo_set_page_size
%%EndPageSetup
q 216 24 336 720 rectclip
1 0 0 -1 0 768 cm q
0 g
216 144 m 216 101.129 238.871 61.512 276 40.078 c 313.129 18.641 358.871
 18.641 396 40.078 c 433.129 61.512 456 101.129 456 144 c 456 576 l 456 
601.723 442.277 625.492 420 638.355 c 397.723 651.215 370.277 651.215 348
 638.355 c 325.723 625.492 312 601.723 312 576 c 312 240 l 312 231.426 316.574
 223.504 324 219.215 c 331.426 214.93 340.574 214.93 348 219.215 c 355.426
 223.504 360 231.426 360 240 c 360 576 l 360 584.574 364.574 592.496 372
 596.785 c 379.426 601.07 388.574 601.07 396 596.785 c 403.426 592.496 408
 584.574 408 576 c 408 144 l 408 118.277 394.277 94.508 372 81.645 c 349.723
 68.785 322.277 68.785 300 81.645 c 277.723 94.508 264 118.277 264 144 c
 264 576 l 264 618.871 286.871 658.488 324 679.922 c 361.129 701.359 406.871
 701.359 444 679.922 c 481.129 658.488 504 618.871 504 576 c 504 240 l 504
 231.426 508.574 223.504 516 219.215 c 523.426 214.93 532.574 214.93 540
 219.215 c 547.426 223.504 552 231.426 552 240 c 552 576 l 552 620.555 534.301
 663.289 502.793 694.793 c 471.289 726.301 428.555 744 384 744 c 339.445
 744 296.711 726.301 265.207 694.793 c 233.699 663.289 216 620.555 216 576
 c h
216 144 m f
Q Q
showpage
%%Trailer
%%EOF
