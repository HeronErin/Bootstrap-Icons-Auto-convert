%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
384 720 m 377.637 720 371.531 717.473 367.031 712.969 c 362.527 708.469
 360 702.363 360 696 c 360 72 l 360 63.426 364.574 55.504 372 51.215 c 379.426
 46.93 388.574 46.93 396 51.215 c 403.426 55.504 408 63.426 408 72 c 408
 696 l 408 702.363 405.473 708.469 400.969 712.969 c 396.469 717.473 390.363
 720 384 720 c 7.008 400.992 m 2.492 396.488 -0.043 390.375 -0.043 384 c
 -0.043 377.625 2.492 371.512 7.008 367.008 c 103.008 271.008 l 109.078 
264.938 117.926 262.566 126.219 264.789 c 134.512 267.012 140.988 273.488
 143.211 281.781 c 145.434 290.074 143.062 298.922 136.992 304.992 c 81.938
 360 l 264 360 l 272.574 360 280.496 364.574 284.785 372 c 289.07 379.426
 289.07 388.574 284.785 396 c 280.496 403.426 272.574 408 264 408 c 81.938
 408 l 136.992 463.008 l 143.062 469.078 145.434 477.926 143.211 486.219
 c 140.988 494.512 134.512 500.988 126.219 503.211 c 117.926 505.434 109.078
 503.062 103.008 496.992 c h
480 384 m 480 377.637 482.527 371.531 487.031 367.031 c 491.531 362.527
 497.637 360 504 360 c 686.062 360 l 631.008 304.992 l 624.938 298.922 622.566
 290.074 624.789 281.781 c 627.012 273.488 633.488 267.012 641.781 264.789
 c 650.074 262.566 658.922 264.938 664.992 271.008 c 760.992 367.008 l 765.508
 371.512 768.043 377.625 768.043 384 c 768.043 390.375 765.508 396.488 760.992
 400.992 c 664.992 496.992 l 658.922 503.062 650.074 505.434 641.781 503.211
 c 633.488 500.988 627.012 494.512 624.789 486.219 c 622.566 477.926 624.938
 469.078 631.008 463.008 c 686.062 408 l 504 408 l 497.637 408 491.531 405.473
 487.031 400.969 c 482.527 396.469 480 390.363 480 384 c f
Q Q
showpage
%%Trailer
%%EOF
