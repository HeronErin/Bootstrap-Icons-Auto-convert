%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
801.984 14.016 m 792.98 4.988 780.75 -0.086 768 -0.086 c 755.25 -0.086 
743.02 4.988 734.016 14.016 c 446.016 302.016 l 436.988 311.02 431.914 323.25
 431.914 336 c 431.914 348.75 436.988 360.98 446.016 369.984 c 542.016 465.984
 l 551.02 475.012 563.25 480.086 576 480.086 c 588.75 480.086 600.98 475.012
 609.984 465.984 c 672 403.871 l 672 1152 l 96 1152 l 70.539 1152 46.121
 1162.113 28.117 1180.117 c 10.113 1198.121 0 1222.539 0 1248 c 0 1440 l
 0 1465.461 10.113 1489.879 28.117 1507.883 c 46.121 1525.887 70.539 1536
 96 1536 c 1440 1536 l 1465.461 1536 1489.879 1525.887 1507.883 1507.883
 c 1525.887 1489.879 1536 1465.461 1536 1440 c 1536 1248 l 1536 1222.539
 1525.887 1198.121 1507.883 1180.117 c 1489.879 1162.113 1465.461 1152 1440
 1152 c 864 1152 l 864 403.871 l 926.016 465.984 l 935.02 475.012 947.25
 480.086 960 480.086 c 972.75 480.086 984.98 475.012 993.984 465.984 c 1089.984
 369.984 l 1099.012 360.98 1104.086 348.75 1104.086 336 c 1104.086 323.25
 1099.012 311.02 1089.984 302.016 c h
801.984 14.016 m f
96 672 m 70.539 672 46.121 682.113 28.117 700.117 c 10.113 718.121 0 742.539
 0 768 c 0 960 l 0 985.461 10.113 1009.879 28.117 1027.883 c 46.121 1045.887
 70.539 1056 96 1056 c 528 1056 l 545.148 1056 560.996 1046.852 569.57 1032
 c 578.145 1017.148 578.145 998.852 569.57 984 c 560.996 969.148 545.148
 960 528 960 c 96 960 l 96 768 l 528 768 l 545.148 768 560.996 758.852 569.57
 744 c 578.145 729.148 578.145 710.852 569.57 696 c 560.996 681.148 545.148
 672 528 672 c h
1008 672 m 990.852 672 975.004 681.148 966.43 696 c 957.855 710.852 957.855
 729.148 966.43 744 c 975.004 758.852 990.852 768 1008 768 c 1440 768 l 
1440 960 l 1008 960 l 990.852 960 975.004 969.148 966.43 984 c 957.855 998.852
 957.855 1017.148 966.43 1032 c 975.004 1046.852 990.852 1056 1008 1056 
c 1440 1056 l 1465.461 1056 1489.879 1045.887 1507.883 1027.883 c 1525.887
 1009.879 1536 985.461 1536 960 c 1536 768 l 1536 742.539 1525.887 718.121
 1507.883 700.117 c 1489.879 682.113 1465.461 672 1440 672 c h
1008 672 m f
Q Q
showpage
%%Trailer
%%EOF
