%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
200.496 3.504 m 198.246 1.246 195.188 -0.02 192 -0.02 c 188.812 -0.02 185.754
 1.246 183.504 3.504 c 111.504 75.504 l 109.246 77.754 107.98 80.812 107.98
 84 c 107.98 87.188 109.246 90.246 111.504 92.496 c 135.504 116.496 l 137.754
 118.754 140.812 120.02 144 120.02 c 147.188 120.02 150.246 118.754 152.496
 116.496 c 168 100.969 l 168 288 l 24 288 l 17.637 288 11.531 290.527 7.031
 295.031 c 2.527 299.531 0 305.637 0 312 c 0 360 l 0 366.363 2.527 372.469
 7.031 376.969 c 11.531 381.473 17.637 384 24 384 c 360 384 l 366.363 384
 372.469 381.473 376.969 376.969 c 381.473 372.469 384 366.363 384 360 c
 384 312 l 384 305.637 381.473 299.531 376.969 295.031 c 372.469 290.527
 366.363 288 360 288 c 216 288 l 216 100.969 l 231.504 116.496 l 233.754
 118.754 236.812 120.02 240 120.02 c 243.188 120.02 246.246 118.754 248.496
 116.496 c 272.496 92.496 l 274.754 90.246 276.02 87.188 276.02 84 c 276.02
 80.812 274.754 77.754 272.496 75.504 c h
200.496 3.504 m f
24 168 m 17.637 168 11.531 170.527 7.031 175.031 c 2.527 179.531 0 185.637
 0 192 c 0 240 l 0 246.363 2.527 252.469 7.031 256.969 c 11.531 261.473 
17.637 264 24 264 c 132 264 l 138.629 264 144 258.629 144 252 c 144 245.371
 138.629 240 132 240 c 24 240 l 24 192 l 132 192 l 138.629 192 144 186.629
 144 180 c 144 173.371 138.629 168 132 168 c h
252 168 m 245.371 168 240 173.371 240 180 c 240 186.629 245.371 192 252
 192 c 360 192 l 360 240 l 252 240 l 245.371 240 240 245.371 240 252 c 240
 258.629 245.371 264 252 264 c 360 264 l 366.363 264 372.469 261.473 376.969
 256.969 c 381.473 252.469 384 246.363 384 240 c 384 192 l 384 185.637 381.473
 179.531 376.969 175.031 c 372.469 170.527 366.363 168 360 168 c h
252 168 m f
Q Q
showpage
%%Trailer
%%EOF
