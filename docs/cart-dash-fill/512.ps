%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 360 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 360 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 360 360 rectclip
1 0 0 -1 0 384 cm q
0 g
12 24 m 5.371 24 0 29.371 0 36 c 0 42.629 5.371 48 12 48 c 38.641 48 l 
48.266 86.566 l 84.219 278.207 l 84.215 278.207 l 85.277 283.883 90.227 
287.996 96 288 c 120 288 l 102.852 288 87.004 297.148 78.43 312 c 69.855
 326.852 69.855 345.148 78.43 360 c 87.004 374.852 102.852 384 120 384 c
 137.148 384 152.996 374.852 161.57 360 c 170.145 345.148 170.145 326.852
 161.57 312 c 152.996 297.148 137.148 288 120 288 c 288 288 l 270.852 288
 255.004 297.148 246.43 312 c 237.855 326.852 237.855 345.148 246.43 360
 c 255.004 374.852 270.852 384 288 384 c 305.148 384 320.996 374.852 329.57
 360 c 338.145 345.148 338.145 326.852 329.57 312 c 320.996 297.148 305.148
 288 288 288 c 312 288 l 317.773 287.996 322.723 283.883 323.785 278.207
 c 359.785 86.207 l 360.441 82.703 359.504 79.086 357.227 76.34 c 354.949
 73.594 351.566 72.004 348 72 c 69.359 72 l 59.641 33.098 l 58.309 27.754
 53.508 24 48 24 c h
144 336 m 144 344.574 139.426 352.496 132 356.785 c 124.574 361.07 115.426
 361.07 108 356.785 c 100.574 352.496 96 344.574 96 336 c 96 327.426 100.574
 319.504 108 315.215 c 115.426 310.93 124.574 310.93 132 315.215 c 139.426
 319.504 144 327.426 144 336 c 312 336 m 312 344.574 307.426 352.496 300
 356.785 c 292.574 361.07 283.426 361.07 276 356.785 c 268.574 352.496 264
 344.574 264 336 c 264 327.426 268.574 319.504 276 315.215 c 283.426 310.93
 292.574 310.93 300 315.215 c 307.426 319.504 312 327.426 312 336 c 156 
168 m 252 168 l 258.629 168 264 173.371 264 180 c 264 186.629 258.629 192
 252 192 c 156 192 l 149.371 192 144 186.629 144 180 c 144 173.371 149.371
 168 156 168 c f
Q Q
showpage
%%Trailer
%%EOF
