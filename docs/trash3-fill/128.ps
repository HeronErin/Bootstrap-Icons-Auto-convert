%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 96
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
66 9 m 66 15 l 87 15 l 88.656 15 90 16.344 90 18 c 90 19.656 88.656 21 
87 21 c 83.773 21 l 78.656 84.961 l 78.652 84.961 l 78.152 91.195 72.945
 96 66.691 96 c 29.309 96 l 23.055 96 17.848 91.195 17.348 84.961 c 12.227
 21 l 9 21 l 7.344 21 6 19.656 6 18 c 6 16.344 7.344 15 9 15 c 30 15 l 30
 9 l 30 4.031 34.031 0 39 0 c 57 0 l 61.969 0 66 4.031 66 9 c 36 9 m 36 
15 l 60 15 l 60 9 l 60 8.203 59.684 7.441 59.121 6.879 c 58.559 6.316 57.797
 6 57 6 c 39 6 l 37.344 6 36 7.344 36 9 c 27 30.176 m 30 81.176 l 30.031
 81.98 30.387 82.738 30.984 83.277 c 31.582 83.82 32.375 84.098 33.176 84.047
 c 33.98 84 34.734 83.629 35.262 83.02 c 35.789 82.414 36.051 81.617 35.988
 80.812 c 32.988 29.812 l 32.957 29.008 32.602 28.25 32.004 27.711 c 31.406
 27.168 30.613 26.891 29.809 26.941 c 29.004 26.988 28.254 27.359 27.727
 27.965 c 27.195 28.574 26.938 29.371 27 30.176 c 66.18 27.008 m 64.527 
26.91 63.109 28.172 63.012 29.824 c 60.012 80.824 l 59.957 82.453 61.211
 83.824 62.836 83.918 c 64.461 84.016 65.863 82.797 66 81.176 c 69 30.176
 l 69.094 28.52 67.832 27.102 66.18 27.008 c 48 27 m 46.344 27 45 28.344
 45 30 c 45 81 l 45 82.656 46.344 84 48 84 c 49.656 84 51 82.656 51 81 c
 51 30 l 51 29.203 50.684 28.441 50.121 27.879 c 49.559 27.316 48.797 27
 48 27 c f
Q Q
showpage
%%Trailer
%%EOF
