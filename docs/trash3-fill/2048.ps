%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 144 m 1056 240 l 1392 240 l 1409.148 240 1424.996 249.148 1433.57 
264 c 1442.145 278.852 1442.145 297.148 1433.57 312 c 1424.996 326.852 1409.148
 336 1392 336 c 1340.352 336 l 1258.465 1359.359 l 1254.602 1407.477 1232.758
 1452.371 1197.285 1485.105 c 1161.812 1517.84 1115.309 1536.012 1067.039
 1536 c 468.961 1536 l 420.691 1536.012 374.188 1517.84 338.715 1485.105
 c 303.242 1452.371 281.398 1407.477 277.535 1359.359 c 195.648 336 l 144
 336 l 126.852 336 111.004 326.852 102.43 312 c 93.855 297.148 93.855 278.852
 102.43 264 c 111.004 249.148 126.852 240 144 240 c 480 240 l 480 144 l 
480 105.809 495.172 69.184 522.176 42.176 c 549.184 15.172 585.809 0 624
 0 c 912 0 l 950.191 0 986.816 15.172 1013.824 42.176 c 1040.828 69.184 
1056 105.809 1056 144 c 576 144 m 576 240 l 960 240 l 960 144 l 960 131.27
 954.941 119.062 945.941 110.059 c 936.938 101.059 924.73 96 912 96 c 624
 96 l 611.27 96 599.062 101.059 590.059 110.059 c 581.059 119.062 576 131.27
 576 144 c 432 482.785 m 480 1298.785 l 480.52 1311.668 486.199 1323.805
 495.762 1332.457 c 505.328 1341.105 517.969 1345.543 530.844 1344.77 c 
543.715 1343.996 555.734 1338.074 564.191 1328.34 c 572.652 1318.605 576.84
 1305.879 575.809 1293.023 c 527.809 477.023 l 527.289 464.137 521.609 452.004
 512.047 443.352 c 502.48 434.703 489.84 430.262 476.965 431.035 c 464.094
 431.812 452.074 437.73 443.613 447.465 c 435.156 457.199 430.969 469.93
 432 482.785 c 1058.879 432.098 m 1046.176 431.363 1033.699 435.703 1024.195
 444.164 c 1014.691 452.625 1008.934 464.512 1008.191 477.215 c 960.191 
1293.215 l 959.637 1310.07 967.965 1325.977 982.133 1335.121 c 996.297 1344.266
 1014.223 1345.309 1029.355 1337.867 c 1044.484 1330.422 1054.598 1315.586
 1056 1298.785 c 1104 482.785 l 1104.734 470.078 1100.395 457.605 1091.934
 448.098 c 1083.473 438.594 1071.582 432.84 1058.879 432.098 c 768 432 m
 755.27 432 743.062 437.059 734.059 446.059 c 725.059 455.062 720 467.27
 720 480 c 720 1296 l 720 1313.148 729.148 1328.996 744 1337.57 c 758.852
 1346.145 777.148 1346.145 792 1337.57 c 806.852 1328.996 816 1313.148 816
 1296 c 816 480 l 816 467.27 810.941 455.062 801.941 446.059 c 792.938 437.059
 780.73 432 768 432 c f
Q Q
showpage
%%Trailer
%%EOF
