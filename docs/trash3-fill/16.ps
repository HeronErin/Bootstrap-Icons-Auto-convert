%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
8.25 1.125 m 8.25 1.875 l 10.875 1.875 l 11.082 1.875 11.25 2.043 11.25
 2.25 c 11.25 2.457 11.082 2.625 10.875 2.625 c 10.473 2.625 l 9.832 10.621
 l 9.77 11.398 9.117 12 8.336 12 c 3.664 12 l 2.883 12 2.23 11.398 2.168
 10.621 c 1.527 2.625 l 1.125 2.625 l 0.918 2.625 0.75 2.457 0.75 2.25 c
 0.75 2.043 0.918 1.875 1.125 1.875 c 3.75 1.875 l 3.75 1.125 l 3.75 0.504
 4.254 0 4.875 0 c 7.125 0 l 7.746 0 8.25 0.504 8.25 1.125 c 4.5 1.125 m
 4.5 1.875 l 7.5 1.875 l 7.5 1.125 l 7.5 1.027 7.461 0.93 7.391 0.859 c 
7.32 0.789 7.223 0.75 7.125 0.75 c 4.875 0.75 l 4.668 0.75 4.5 0.918 4.5
 1.125 c 3.375 3.773 m 3.75 10.148 l 3.754 10.246 3.797 10.344 3.875 10.41
 c 3.949 10.477 4.047 10.512 4.148 10.508 c 4.246 10.5 4.34 10.453 4.406
 10.379 c 4.473 10.301 4.508 10.203 4.5 10.102 c 4.125 3.727 l 4.121 3.625
 4.074 3.531 4 3.465 c 3.926 3.395 3.828 3.363 3.727 3.367 c 3.625 3.375
 3.531 3.418 3.465 3.496 c 3.398 3.57 3.367 3.672 3.375 3.773 c 8.273 3.379
 m 8.273 3.375 l 8.066 3.363 7.887 3.523 7.875 3.727 c 7.5 10.102 l 7.496
 10.305 7.652 10.477 7.855 10.488 c 8.059 10.5 8.234 10.348 8.25 10.148 
c 8.625 3.773 l 8.637 3.566 8.48 3.387 8.273 3.375 c 6 3.375 m 5.793 3.375
 5.625 3.543 5.625 3.75 c 5.625 10.125 l 5.625 10.332 5.793 10.5 6 10.5 
c 6.207 10.5 6.375 10.332 6.375 10.125 c 6.375 3.75 l 6.375 3.652 6.336 
3.555 6.266 3.484 c 6.195 3.414 6.098 3.375 6 3.375 c f
Q Q
showpage
%%Trailer
%%EOF
