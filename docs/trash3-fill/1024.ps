%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
528 72 m 528 120 l 696 120 l 704.574 120 712.496 124.574 716.785 132 c 
721.07 139.426 721.07 148.574 716.785 156 c 712.496 163.426 704.574 168 
696 168 c 670.176 168 l 629.23 679.68 l 627.301 703.738 616.379 726.184 
598.645 742.551 c 580.906 758.918 557.656 768.004 533.52 768 c 234.48 768
 l 210.344 768.004 187.094 758.918 169.355 742.551 c 151.621 726.184 140.699
 703.738 138.77 679.68 c 97.824 168 l 72 168 l 63.426 168 55.504 163.426
 51.215 156 c 46.93 148.574 46.93 139.426 51.215 132 c 55.504 124.574 63.426
 120 72 120 c 240 120 l 240 72 l 240 52.906 247.586 34.59 261.09 21.09 c
 274.59 7.586 292.906 0 312 0 c 456 0 l 475.094 0 493.41 7.586 506.91 21.09
 c 520.414 34.59 528 52.906 528 72 c 288 72 m 288 120 l 480 120 l 480 72
 l 480 65.637 477.473 59.531 472.969 55.031 c 468.469 50.527 462.363 48 
456 48 c 312 48 l 305.637 48 299.531 50.527 295.031 55.031 c 290.527 59.531
 288 65.637 288 72 c 216 241.391 m 240 649.391 l 240.258 655.836 243.098
 661.902 247.883 666.227 c 252.664 670.555 258.984 672.773 265.422 672.387
 c 271.855 672 277.867 669.039 282.098 664.172 c 286.324 659.305 288.418
 652.938 287.902 646.512 c 263.902 238.512 l 263.645 232.07 260.805 226 
256.023 221.676 c 251.242 217.352 244.918 215.133 238.484 215.52 c 232.047
 215.906 226.035 218.867 221.809 223.734 c 217.578 228.602 215.484 234.965
 216 241.391 c 529.441 216.047 m 523.09 215.68 516.852 217.852 512.098 222.082
 c 507.344 226.312 504.469 232.258 504.098 238.609 c 480.098 646.609 l 479.82
 655.035 483.984 662.988 491.066 667.562 c 498.148 672.133 507.113 672.656
 514.676 668.934 c 522.242 665.211 527.301 657.793 528 649.391 c 552 241.391
 l 552.367 235.039 550.195 228.801 545.965 224.051 c 541.734 219.297 535.793
 216.418 529.441 216.047 c 384 216 m 377.637 216 371.531 218.527 367.031
 223.031 c 362.527 227.531 360 233.637 360 240 c 360 648 l 360 656.574 364.574
 664.496 372 668.785 c 379.426 673.07 388.574 673.07 396 668.785 c 403.426
 664.496 408 656.574 408 648 c 408 240 l 408 233.637 405.473 227.531 400.969
 223.031 c 396.469 218.527 390.363 216 384 216 c f
Q Q
showpage
%%Trailer
%%EOF
