%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
264 36 m 264 60 l 348 60 l 354.629 60 360 65.371 360 72 c 360 78.629 354.629
 84 348 84 c 335.09 84 l 314.617 339.84 l 313.652 351.867 308.191 363.094
 299.32 371.277 c 290.453 379.461 278.828 384.004 266.762 384 c 117.238 
384 l 105.172 384.004 93.547 379.461 84.68 371.277 c 75.809 363.094 70.348
 351.867 69.383 339.84 c 48.91 84 l 36 84 l 29.371 84 24 78.629 24 72 c 
24 65.371 29.371 60 36 60 c 120 60 l 120 36 l 120 26.453 123.793 17.297 
130.543 10.543 c 137.297 3.793 146.453 0 156 0 c 228 0 l 237.547 0 246.703
 3.793 253.457 10.543 c 260.207 17.297 264 26.453 264 36 c 144 36 m 144 
60 l 240 60 l 240 36 l 240 32.816 238.734 29.766 236.484 27.516 c 234.234
 25.266 231.184 24 228 24 c 156 24 l 149.371 24 144 29.371 144 36 c 108 
120.695 m 120 324.695 l 120.129 327.918 121.551 330.953 123.941 333.113 
c 126.332 335.277 129.492 336.387 132.711 336.191 c 135.93 336 138.934 334.52
 141.047 332.086 c 143.164 329.652 144.211 326.469 143.953 323.258 c 131.953
 119.258 l 131.824 116.035 130.402 113 128.012 110.84 c 125.621 108.676 
122.461 107.566 119.242 107.758 c 116.023 107.953 113.02 109.434 110.902
 111.867 c 108.789 114.301 107.742 117.48 108 120.695 c 264.719 108.023 
m 258.105 107.641 252.434 112.691 252.047 119.305 c 240.047 323.305 l 239.832
 329.809 244.848 335.301 251.344 335.68 c 257.844 336.055 263.461 331.184
 264 324.695 c 276 120.695 l 276.383 114.082 271.332 108.41 264.719 108.023
 c 192 108 m 185.371 108 180 113.371 180 120 c 180 324 l 180 330.629 185.371
 336 192 336 c 198.629 336 204 330.629 204 324 c 204 120 l 204 116.816 202.734
 113.766 200.484 111.516 c 198.234 109.266 195.184 108 192 108 c f
Q Q
showpage
%%Trailer
%%EOF
