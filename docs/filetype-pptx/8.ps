%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
0.562 4.445 m 1.164 4.445 l 1.273 4.445 1.363 4.469 1.438 4.512 c 1.512
 4.555 1.57 4.613 1.609 4.691 c 1.648 4.766 1.668 4.852 1.668 4.945 c 1.668
 5.039 1.648 5.125 1.609 5.199 c 1.57 5.273 1.512 5.332 1.434 5.379 c 1.434
 5.375 l 1.352 5.422 1.258 5.441 1.16 5.441 c 0.859 5.441 l 0.859 5.945 
l 0.562 5.945 l h
1.336 5.09 m 1.336 5.086 l 1.355 5.043 1.367 4.992 1.367 4.945 c 1.367 
4.859 1.344 4.797 1.297 4.75 c 1.25 4.703 1.188 4.684 1.105 4.684 c 0.859
 4.684 l 0.859 5.211 l 1.105 5.211 l 1.105 5.207 l 1.152 5.207 1.203 5.199
 1.246 5.176 c 1.285 5.156 1.316 5.125 1.336 5.086 c 1.824 4.441 m 2.426
 4.441 l 2.535 4.441 2.625 4.465 2.699 4.508 c 2.773 4.551 2.832 4.609 2.871
 4.688 c 2.91 4.762 2.93 4.848 2.93 4.941 c 2.93 5.035 2.91 5.121 2.871 
5.195 c 2.832 5.27 2.773 5.328 2.695 5.375 c 2.609 5.422 2.516 5.441 2.422
 5.441 c 2.121 5.441 l 2.121 5.945 l 1.824 5.945 l h
2.598 5.086 m 2.617 5.043 2.629 4.992 2.629 4.945 c 2.629 4.859 2.605 4.797
 2.559 4.75 c 2.512 4.703 2.449 4.684 2.367 4.684 c 2.117 4.68 l 2.117 5.207
 l 2.367 5.207 l 2.414 5.207 2.465 5.199 2.508 5.176 c 2.543 5.156 2.574
 5.125 2.598 5.086 c 3.668 5.941 m 3.668 4.691 l 4.094 4.691 l 4.094 4.441
 l 2.941 4.445 l 2.941 4.695 l 3.367 4.691 l 3.367 5.941 l h
5.09 4.441 m 5.426 4.441 l 4.949 5.195 l 5.418 5.941 l 5.078 5.941 l 4.758
 5.41 l 4.746 5.41 l 4.426 5.941 l 4.102 5.941 l 4.566 5.184 l 4.105 4.441
 l 4.453 4.441 l 4.766 4.98 l 4.777 4.98 l h
5.09 4.441 m f*
Q Q
showpage
%%Trailer
%%EOF
