%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 18 1 174 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 18 1 174 192
192 192 cairo_set_page_size
%%EndPageSetup
q 18 1 156 191 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 132 l 156 132 l 156 54 l 132 54 l 127.227 54 122.648 52.105
 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114 12 l 48 12 l 41.371
 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637 26.527 11.531 
31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
18 142.199 m 37.199 142.199 l 40.672 142.199 43.598 142.914 45.984 144.348
 c 48.398 145.746 50.242 147.656 51.504 150.07 c 52.77 152.484 53.398 155.195
 53.398 158.195 c 53.398 161.195 52.758 163.902 51.477 166.32 c 50.203 168.711
 48.348 170.609 45.91 172.008 c 43.219 173.461 40.188 174.176 37.129 174.086
 c 27.48 174.086 l 27.48 190.191 l 18 190.188 l h
42.719 162.766 m 42.719 162.77 l 43.434 161.352 43.781 159.781 43.738 158.195
 c 43.738 155.477 43 153.391 41.52 151.941 c 40.039 150.484 37.988 149.758
 35.363 149.758 c 27.457 149.758 l 27.457 166.629 l 35.379 166.629 l 35.375
 166.633 l 36.93 166.672 38.469 166.336 39.863 165.648 c 41.086 165 42.082
 163.996 42.719 162.77 c 58.344 142.203 m 77.543 142.203 l 81.016 142.203
 83.941 142.918 86.328 144.352 c 88.742 145.75 90.586 147.66 91.848 150.074
 c 93.113 152.488 93.742 155.199 93.742 158.199 c 93.742 161.199 93.102 
163.906 91.82 166.324 c 90.555 168.715 88.699 170.613 86.254 172.012 c 86.258
 172.008 l 83.562 173.461 80.531 174.176 77.473 174.086 c 67.836 174.086
 l 67.836 190.191 l 58.355 190.191 l h
83.062 162.77 m 83.777 161.352 84.125 159.781 84.086 158.195 c 84.086 155.477
 83.348 153.391 81.867 151.941 c 80.395 150.484 78.344 149.758 75.711 149.758
 c 67.801 149.762 l 67.801 166.633 l 75.723 166.633 l 75.719 166.633 l 77.273
 166.672 78.812 166.336 80.207 165.648 c 81.43 165 82.426 163.996 83.062
 162.77 c 117.285 190.191 m 117.285 150.148 l 130.93 150.148 l 130.93 142.203
 l 94.152 142.199 l 94.152 150.145 l 107.762 150.145 l 107.762 190.188 l
 h
162.836 142.203 m 173.551 142.203 l 158.262 166.289 l 173.309 190.191 l
 162.414 190.191 l 152.215 173.211 l 151.793 173.211 l 141.559 190.191 l
 131.227 190.191 l 146.105 166 l 131.371 142.203 l 142.543 142.203 l 152.527
 159.473 l 152.949 159.473 l h
162.836 142.203 m f*
Q Q
showpage
%%Trailer
%%EOF
