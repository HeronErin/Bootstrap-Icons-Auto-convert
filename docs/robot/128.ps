%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
36 75 m 36 73.344 37.344 72 39 72 c 57 72 l 58.656 72 60 73.344 60 75 c
 60 76.656 58.656 78 57 78 c 39 78 l 37.344 78 36 76.656 36 75 c 18 48.371
 m 18 40.559 25.41 34.59 33.18 35.316 c 43.039 36.234 52.961 36.234 62.82
 35.316 c 70.59 34.59 78 40.559 78 48.371 c 78 55.312 l 78.059 58.059 76.113
 60.438 73.41 60.926 c 68.34 61.809 59.371 63 48 63 c 36.629 63 27.66 61.801
 22.59 60.926 c 19.887 60.438 17.941 58.059 18 55.312 c h
45.254 43.41 m 44.777 43.328 44.293 43.48 43.949 43.816 c 38.43 49.215 
l 38.43 49.219 l 34.676 48.992 30.93 48.625 27.203 48.121 c 26.402 48.039
 25.68 48.609 25.57 49.41 c 25.461 50.207 26 50.949 26.797 51.09 c 30.098
 51.547 34.188 51.984 38.918 52.246 c 38.914 52.246 l 39.336 52.273 39.75
 52.117 40.051 51.82 c 44.574 47.406 l 49.656 57.668 l 49.656 57.664 l 49.875
 58.102 50.289 58.406 50.773 58.48 c 51.254 58.555 51.742 58.391 52.078 
58.039 c 57.672 52.219 l 61.527 51.992 65.375 51.613 69.203 51.09 c 70 50.949
 70.539 50.207 70.43 49.41 c 70.32 48.609 69.598 48.039 68.797 48.121 c 
65.57 48.566 61.555 48.992 56.918 49.254 c 56.914 49.254 l 56.539 49.273
 56.184 49.438 55.922 49.711 c 51.398 54.422 l 46.348 44.223 l 46.344 44.219
 l 46.129 43.793 45.723 43.488 45.254 43.41 c f
51 11.195 m 53.352 9.84 54.5 7.07 53.797 4.445 c 53.094 1.824 50.715 0 
48 0 c 45.285 0 42.906 1.824 42.203 4.445 c 41.5 7.07 42.648 9.84 45 11.195
 c 45 18 l 33 18 l 25.84 18 18.973 20.844 13.906 25.906 c 8.844 30.973 6
 37.84 6 45 c 6 48 l 2.688 48 0 50.688 0 54 c 0 66 l 0 67.59 0.633 69.117
 1.758 70.242 c 2.883 71.367 4.41 72 6 72 c 6 78 l 6 81.184 7.266 84.234
 9.516 86.484 c 11.766 88.734 14.816 90 18 90 c 78 90 l 81.184 90 84.234
 88.734 86.484 86.484 c 88.734 84.234 90 81.184 90 78 c 90 72 l 91.59 72
 93.117 71.367 94.242 70.242 c 95.367 69.117 96 67.59 96 66 c 96 54 l 96
 52.41 95.367 50.883 94.242 49.758 c 93.117 48.633 91.59 48 90 48 c 90 45
 l 90 37.84 87.156 30.973 82.094 25.906 c 77.027 20.844 70.16 18 63 18 c
 51 18 l h
84 45 m 84 78 l 84 79.59 83.367 81.117 82.242 82.242 c 81.117 83.367 79.59
 84 78 84 c 18 84 l 14.688 84 12 81.312 12 78 c 12 45 l 12 39.43 14.211 
34.09 18.152 30.152 c 22.09 26.211 27.43 24 33 24 c 63 24 l 68.57 24 73.91
 26.211 77.848 30.152 c 81.789 34.09 84 39.43 84 45 c f
Q Q
showpage
%%Trailer
%%EOF
