%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 180 rectclip
1 0 0 -1 0 192 cm q
0 g
72 150 m 72 146.688 74.688 144 78 144 c 114 144 l 117.312 144 120 146.688
 120 150 c 120 153.312 117.312 156 114 156 c 78 156 l 74.688 156 72 153.312
 72 150 c 36 96.742 m 36 81.121 50.82 69.18 66.359 70.633 c 86.078 72.473
 105.922 72.473 125.641 70.633 c 141.18 69.18 156 81.121 156 96.742 c 156
 110.629 l 156.117 116.117 152.223 120.875 146.82 121.848 c 136.68 123.613
 118.742 126 96 126 c 73.262 126 55.32 123.602 45.18 121.848 c 39.777 120.875
 35.883 116.117 36 110.629 c h
90.504 86.816 m 90.504 86.82 l 89.555 86.66 88.586 86.961 87.898 87.637
 c 76.859 98.438 l 69.352 97.984 61.863 97.254 54.406 96.238 c 52.805 96.082
 51.359 97.219 51.141 98.816 c 50.918 100.414 52.004 101.902 53.594 102.18
 c 60.195 103.09 68.379 103.969 77.832 104.496 c 78.676 104.543 79.496 104.234
 80.102 103.645 c 89.148 94.812 l 99.312 115.332 l 99.746 116.207 100.578
 116.812 101.543 116.961 c 102.508 117.109 103.484 116.777 104.16 116.074
 c 115.344 104.434 l 115.344 104.438 l 123.059 103.98 130.75 103.23 138.406
 102.18 c 139.996 101.902 141.082 100.414 140.859 98.816 c 140.641 97.219
 139.195 96.082 137.594 96.238 c 131.137 97.125 123.109 97.977 113.832 98.508
 c 113.078 98.551 112.367 98.875 111.84 99.422 c 102.793 108.844 l 92.688
 88.445 l 92.688 88.441 l 92.262 87.582 91.449 86.98 90.504 86.82 c f
102 22.391 m 106.703 19.676 108.996 14.141 107.59 8.895 c 106.184 3.648
 101.43 0 96 0 c 90.57 0 85.816 3.648 84.41 8.895 c 83.004 14.141 85.297
 19.676 90 22.391 c 90 36 l 66 36 l 51.68 36 37.941 41.688 27.816 51.816
 c 17.688 61.941 12 75.68 12 90 c 12 96 l 5.371 96 0 101.371 0 108 c 0 132
 l 0 135.184 1.266 138.234 3.516 140.484 c 5.766 142.734 8.816 144 12 144
 c 12 156 l 12 162.363 14.527 168.469 19.031 172.969 c 23.531 177.473 29.637
 180 36 180 c 156 180 l 162.363 180 168.469 177.473 172.969 172.969 c 177.473
 168.469 180 162.363 180 156 c 180 144 l 183.184 144 186.234 142.734 188.484
 140.484 c 190.734 138.234 192 135.184 192 132 c 192 108 l 192 104.816 190.734
 101.766 188.484 99.516 c 186.234 97.266 183.184 96 180 96 c 180 90 l 180
 75.68 174.312 61.941 164.184 51.816 c 154.059 41.688 140.32 36 126 36 c
 102 36 l h
168 90 m 168 156 l 168 159.184 166.734 162.234 164.484 164.484 c 162.234
 166.734 159.184 168 156 168 c 36 168 l 29.371 168 24 162.629 24 156 c 24
 90 l 24 78.859 28.426 68.18 36.301 60.301 c 44.18 52.426 54.859 48 66 48
 c 126 48 l 137.141 48 147.82 52.426 155.699 60.301 c 163.574 68.18 168 
78.859 168 90 c f
Q Q
showpage
%%Trailer
%%EOF
