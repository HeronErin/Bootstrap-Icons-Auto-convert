%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
372.098 3.168 m 379.473 -1.047 388.527 -1.047 395.902 3.168 c 575.902 106.031
 l 579.578 108.129 582.629 111.164 584.754 114.82 c 586.879 118.48 588 122.633
 588 126.863 c 588 318.625 l 755.902 414.625 l 759.562 416.715 762.609 419.73
 764.73 423.371 c 766.855 427.012 767.98 431.145 768 435.359 c 768 641.09
 l 768 645.316 766.879 649.473 764.754 653.133 c 762.629 656.789 759.578
 659.82 755.902 661.922 c 575.902 764.785 l 568.527 768.996 559.473 768.996
 552.098 764.785 c 384 668.785 l 215.902 764.832 l 208.527 769.047 199.473
 769.047 192.098 764.832 c 12.098 661.969 l 8.422 659.871 5.371 656.836 
3.246 653.18 c 1.121 649.52 0 645.367 0 641.137 c 0 435.406 l 0 431.176 
1.121 427.023 3.246 423.363 c 5.371 419.707 8.422 416.676 12.098 414.574
 c 180 318.625 l 180 126.863 l 180 122.633 181.121 118.48 183.246 114.82
 c 185.371 111.164 188.422 108.129 192.098 106.031 c h
204 360.191 m 72.383 435.406 l 204 510.621 l 335.617 435.406 l h
360 476.785 m 228 552.191 l 228 702.625 l 360 627.219 l h
408 627.219 m 540 702.625 l 540 552.191 l 408 476.785 l h
432.383 435.41 m 564 510.625 l 695.617 435.41 l 564 360.195 l h
540 318.625 m 540 168.191 l 408 243.648 l 408 394.078 l h
360 394.078 m 360 243.648 l 228 168.191 l 228 318.625 l h
252.383 126.863 m 384 202.078 l 515.617 126.863 l 384 51.648 l h
720 476.785 m 588 552.191 l 588 702.625 l 720 627.215 l h
180 702.625 m 180 552.191 l 48 476.785 l 48 627.219 l h
180 702.625 m f
Q Q
showpage
%%Trailer
%%EOF
