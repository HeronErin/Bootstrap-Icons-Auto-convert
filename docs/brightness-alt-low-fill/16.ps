%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 3 11 9
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 3 11 9
12 12 cairo_set_page_size
%%EndPageSetup
q 1 3 10 6 rectclip
1 0 0 -1 0 12 cm q
0 g
6.375 4.125 m 6.375 4.332 6.207 4.5 6 4.5 c 5.793 4.5 5.625 4.332 5.625
 4.125 c 5.625 3.918 5.793 3.75 6 3.75 c 6.207 3.75 6.375 3.918 6.375 4.125
 c 10.125 8.625 m 9.918 8.625 9.75 8.457 9.75 8.25 c 9.75 8.043 9.918 7.875
 10.125 7.875 c 10.332 7.875 10.5 8.043 10.5 8.25 c 10.5 8.457 10.332 8.625
 10.125 8.625 c 1.5 8.25 m 1.5 8.457 1.668 8.625 1.875 8.625 c 2.082 8.625
 2.25 8.457 2.25 8.25 c 2.25 8.043 2.082 7.875 1.875 7.875 c 1.668 7.875
 1.5 8.043 1.5 8.25 c 9.184 5.598 m 9.113 5.672 9.016 5.711 8.914 5.711 
c 8.816 5.715 8.719 5.672 8.648 5.602 c 8.578 5.531 8.535 5.434 8.539 5.336
 c 8.539 5.234 8.578 5.137 8.652 5.066 c 8.801 4.926 9.031 4.926 9.176 5.074
 c 9.324 5.219 9.324 5.449 9.184 5.598 c 2.82 5.066 m 2.816 5.066 l 2.746
 5.137 2.703 5.234 2.703 5.336 c 2.703 5.434 2.742 5.531 2.812 5.602 c 2.883
 5.672 2.98 5.715 3.082 5.711 c 3.184 5.711 3.277 5.672 3.348 5.598 c 3.488
 5.449 3.488 5.219 3.344 5.074 c 3.199 4.926 2.965 4.926 2.816 5.066 c 6
 5.25 m 4.344 5.25 3 6.594 3 8.25 c 3 8.348 3.039 8.445 3.109 8.516 c 3.18
 8.586 3.277 8.625 3.375 8.625 c 8.625 8.625 l 8.723 8.625 8.82 8.586 8.891
 8.516 c 8.961 8.445 9 8.348 9 8.25 c 9 7.453 8.684 6.691 8.121 6.129 c 
7.559 5.566 6.797 5.25 6 5.25 c f
Q Q
showpage
%%Trailer
%%EOF
