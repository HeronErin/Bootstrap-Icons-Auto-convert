%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 198.363 0 204.469 2.527 208.969 7.031 c 213.473 11.531 216 17.637
 216 24 c 216 57.648 l 216 69.914 232.246 74.281 238.391 63.648 c 255.191
 34.512 l 259.48 27.082 267.406 22.504 275.98 22.504 c 284.559 22.5 292.488
 27.074 296.777 34.504 c 301.07 41.93 301.07 51.082 296.785 58.512 c 279.961
 87.648 l 273.816 98.281 285.723 110.184 296.352 104.039 c 325.488 87.215
 l 332.91 82.996 342.012 83.035 349.395 87.32 c 356.777 91.605 361.332 99.488
 361.352 108.027 c 361.367 116.562 356.852 124.465 349.488 128.785 c 320.352
 145.609 l 309.719 151.754 314.062 168 326.352 168 c 360 168 l 368.574 168
 376.496 172.574 380.785 180 c 385.07 187.426 385.07 196.574 380.785 204
 c 376.496 211.426 368.574 216 360 216 c 326.352 216 l 314.062 216 309.719
 232.246 320.352 238.391 c 349.488 255.215 l 355.047 258.375 359.113 263.621
 360.789 269.793 c 362.461 275.961 361.605 282.543 358.41 288.078 c 355.215
 293.617 349.941 297.648 343.762 299.281 c 337.578 300.918 331.004 300.016
 325.488 296.785 c 296.352 279.984 l 285.719 273.816 273.816 285.746 279.961
 296.352 c 296.785 325.488 l 300.016 331.004 300.918 337.578 299.281 343.762
 c 297.648 349.941 293.617 355.215 288.078 358.41 c 282.543 361.605 275.961
 362.461 269.793 360.789 c 263.621 359.113 258.375 355.047 255.215 349.488
 c 238.391 320.352 l 232.246 309.719 216 314.062 216 326.352 c 216 360 l
 216 368.574 211.426 376.496 204 380.785 c 196.574 385.07 187.426 385.07
 180 380.785 c 172.574 376.496 168 368.574 168 360 c 168 326.352 l 168 314.062
 151.754 309.719 145.609 320.352 c 128.785 349.488 l 124.465 356.852 116.562
 361.367 108.027 361.352 c 99.488 361.332 91.605 356.777 87.32 349.395 c
 83.035 342.012 82.996 332.91 87.215 325.488 c 104.016 296.352 l 110.184
 285.719 98.254 273.816 87.648 279.961 c 58.512 296.785 l 52.996 300.016
 46.422 300.918 40.238 299.281 c 34.059 297.648 28.785 293.617 25.59 288.078
 c 22.395 282.543 21.539 275.961 23.211 269.793 c 24.887 263.621 28.953 
258.375 34.512 255.215 c 63.648 238.391 l 74.281 232.246 69.914 216 57.648
 216 c 24 216 l 15.426 216 7.504 211.426 3.215 204 c -1.07 196.574 -1.07
 187.426 3.215 180 c 7.504 172.574 15.426 168 24 168 c 57.648 168 l 69.914
 168 74.281 151.754 63.648 145.609 c 34.512 128.785 l 28.953 125.625 24.887
 120.379 23.211 114.207 c 21.539 108.039 22.395 101.457 25.59 95.922 c 28.785
 90.383 34.059 86.352 40.238 84.719 c 46.422 83.082 52.996 83.984 58.512
 87.215 c 87.648 104.039 l 98.281 110.184 110.184 98.277 104.039 87.648 
c 87.215 58.512 l 82.996 51.09 83.035 41.988 87.32 34.605 c 91.605 27.223
 99.488 22.668 108.027 22.648 c 116.562 22.633 124.465 27.148 128.785 34.512
 c 145.609 63.648 l 151.754 74.281 168 69.914 168 57.648 c 168 24 l 168 
17.637 170.527 11.531 175.031 7.031 c 179.531 2.527 185.637 0 192 0 c 240
 120 m 240 111.426 235.426 103.504 228 99.215 c 220.574 94.93 211.426 94.93
 204 99.215 c 196.574 103.504 192 111.426 192 120 c 192 128.574 196.574 
136.496 204 140.785 c 211.426 145.07 220.574 145.07 228 140.785 c 235.426
 136.496 240 128.574 240 120 c 144 168 m 144 159.426 139.426 151.504 132
 147.215 c 124.574 142.93 115.426 142.93 108 147.215 c 100.574 151.504 96
 159.426 96 168 c 96 176.574 100.574 184.496 108 188.785 c 115.426 193.07
 124.574 193.07 132 188.785 c 139.426 184.496 144 176.574 144 168 c 168 
264 m 176.574 264 184.496 259.426 188.785 252 c 193.07 244.574 193.07 235.426
 188.785 228 c 184.496 220.574 176.574 216 168 216 c 159.426 216 151.504
 220.574 147.215 228 c 142.93 235.426 142.93 244.574 147.215 252 c 151.504
 259.426 159.426 264 168 264 c 288 192 m 288 183.426 283.426 175.504 276
 171.215 c 268.574 166.93 259.426 166.93 252 171.215 c 244.574 175.504 240
 183.426 240 192 c 240 200.574 244.574 208.496 252 212.785 c 259.426 217.07
 268.574 217.07 276 212.785 c 283.426 208.496 288 200.574 288 192 c f
Q Q
showpage
%%Trailer
%%EOF
