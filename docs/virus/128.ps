%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 49.59 0 51.117 0.633 52.242 1.758 c 53.367 2.883 54 4.41 54 6 c 
54 14.41 l 54 17.477 58.062 18.566 59.598 15.91 c 63.797 8.625 l 63.797 
8.629 l 65.453 5.758 69.125 4.773 71.996 6.43 c 74.867 8.086 75.852 11.758
 74.195 14.629 c 69.988 21.914 l 68.453 24.57 71.43 27.547 74.086 26.012
 c 81.371 21.805 l 84.238 20.176 87.883 21.164 89.535 24.02 c 91.184 26.875
 90.219 30.527 87.371 32.195 c 80.086 36.402 l 77.43 37.938 78.516 42 81.586
 42 c 90 42 l 93.312 42 96 44.688 96 48 c 96 51.312 93.312 54 90 54 c 81.59
 54 l 78.52 54 77.434 58.062 80.09 59.598 c 87.375 63.805 l 87.371 63.805
 l 88.762 64.594 89.777 65.906 90.195 67.449 c 90.617 68.988 90.402 70.637
 89.602 72.02 c 88.805 73.402 87.484 74.41 85.941 74.82 c 84.395 75.23 82.75
 75.004 81.371 74.195 c 74.086 69.996 l 71.43 68.453 68.453 71.438 69.988
 74.09 c 74.195 81.375 l 74.195 81.371 l 75.004 82.75 75.23 84.395 74.82
 85.941 c 74.41 87.484 73.402 88.805 72.02 89.602 c 70.637 90.402 68.988
 90.617 67.449 90.195 c 65.906 89.777 64.594 88.762 63.805 87.371 c 59.598
 80.086 l 58.062 77.43 54 78.516 54 81.586 c 54 90 l 54 93.312 51.312 96
 48 96 c 44.688 96 42 93.312 42 90 c 42 81.59 l 42 78.52 37.938 77.434 36.402
 80.09 c 32.195 87.375 l 32.195 87.371 l 30.527 90.219 26.875 91.184 24.02
 89.535 c 21.164 87.883 20.176 84.238 21.805 81.371 c 26.004 74.086 l 27.547
 71.43 24.562 68.453 21.91 69.988 c 14.625 74.195 l 14.629 74.195 l 13.25
 75.004 11.605 75.23 10.059 74.82 c 8.516 74.41 7.195 73.402 6.398 72.02
 c 5.598 70.637 5.383 68.988 5.805 67.449 c 6.223 65.906 7.238 64.594 8.629
 63.805 c 15.914 59.598 l 18.57 58.062 17.48 54 14.414 54 c 6 54 l 2.688
 54 0 51.312 0 48 c 0 44.688 2.688 42 6 42 c 14.41 42 l 17.477 42 18.566
 37.938 15.91 36.402 c 8.625 32.195 l 8.629 32.195 l 7.238 31.406 6.223 
30.094 5.805 28.551 c 5.383 27.012 5.598 25.363 6.398 23.98 c 7.195 22.598
 8.516 21.59 10.059 21.18 c 11.605 20.77 13.25 20.996 14.629 21.805 c 21.914
 26.012 l 24.57 27.547 27.547 24.57 26.012 21.914 c 21.805 14.629 l 20.176
 11.762 21.164 8.117 24.02 6.465 c 26.875 4.816 30.527 5.781 32.195 8.629
 c 36.402 15.914 l 37.938 18.57 42 17.48 42 14.414 c 42 6 l 42 2.688 44.688
 0 48 0 c 60 30 m 60 26.688 57.312 24 54 24 c 50.688 24 48 26.688 48 30 
c 48 33.312 50.688 36 54 36 c 57.312 36 60 33.312 60 30 c 36 42 m 36 38.688
 33.312 36 30 36 c 26.688 36 24 38.688 24 42 c 24 45.312 26.688 48 30 48
 c 33.312 48 36 45.312 36 42 c 42 66 m 45.312 66 48 63.312 48 60 c 48 56.688
 45.312 54 42 54 c 38.688 54 36 56.688 36 60 c 36 63.312 38.688 66 42 66
 c 72 48 m 72 44.688 69.312 42 66 42 c 62.688 42 60 44.688 60 48 c 60 51.312
 62.688 54 66 54 c 69.312 54 72 51.312 72 48 c f
Q Q
showpage
%%Trailer
%%EOF
