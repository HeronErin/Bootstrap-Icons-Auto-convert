%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 0 m 24.797 0 25.559 0.316 26.121 0.879 c 26.684 1.441 27 2.203 27 3 
c 27 7.207 l 27 8.738 29.031 9.285 29.801 7.957 c 31.902 4.316 l 31.898 
4.312 l 32.727 2.879 34.562 2.387 36 3.215 c 37.434 4.043 37.926 5.879 37.098
 7.312 c 34.996 10.953 l 34.227 12.281 35.715 13.77 37.047 13.004 c 40.688
 10.902 l 42.121 10.086 43.941 10.582 44.766 12.012 c 45.59 13.438 45.109
 15.266 43.688 16.098 c 40.047 18.199 l 38.719 18.969 39.262 21 40.797 21
 c 45 21 l 46.656 21 48 22.344 48 24 c 48 25.656 46.656 27 45 27 c 40.793
 27 l 39.258 27 38.715 29.031 40.043 29.801 c 43.684 31.902 l 43.688 31.902
 l 44.379 32.297 44.891 32.953 45.098 33.723 c 45.309 34.496 45.199 35.316
 44.801 36.012 c 44.402 36.703 43.742 37.207 42.969 37.41 c 42.199 37.613
 41.375 37.504 40.688 37.098 c 37.047 34.996 l 35.719 34.227 34.23 35.715
 34.996 37.043 c 37.098 40.684 l 37.098 40.688 l 37.504 41.375 37.613 42.199
 37.41 42.969 c 37.207 43.742 36.703 44.402 36.012 44.801 c 35.316 45.199
 34.496 45.309 33.723 45.098 c 32.953 44.891 32.297 44.379 31.902 43.688
 c 29.801 40.047 l 29.031 38.719 27 39.262 27 40.797 c 27 45 l 27 46.656
 25.656 48 24 48 c 22.344 48 21 46.656 21 45 c 21 40.793 l 21 39.258 18.969
 38.715 18.199 40.043 c 16.098 43.684 l 16.098 43.688 l 15.266 45.109 13.438
 45.59 12.012 44.766 c 10.582 43.941 10.086 42.121 10.902 40.688 c 13.004
 37.047 l 13.773 35.719 12.285 34.23 10.957 34.996 c 7.316 37.098 l 7.312
 37.098 l 6.625 37.504 5.801 37.613 5.031 37.41 c 4.258 37.207 3.598 36.703
 3.199 36.012 c 2.801 35.316 2.691 34.496 2.902 33.723 c 3.109 32.953 3.621
 32.297 4.312 31.902 c 7.953 29.801 l 9.281 29.031 8.734 27 7.203 27 c 3
 27 l 1.344 27 0 25.656 0 24 c 0 22.344 1.344 21 3 21 c 7.207 21 l 8.738
 21 9.285 18.969 7.957 18.199 c 4.316 16.098 l 4.312 16.098 l 3.621 15.703
 3.109 15.047 2.902 14.277 c 2.691 13.504 2.801 12.684 3.199 11.988 c 3.598
 11.297 4.258 10.793 5.031 10.59 c 5.801 10.387 6.625 10.496 7.312 10.902
 c 10.953 13.004 l 12.281 13.773 13.77 12.285 13.004 10.953 c 10.902 7.312
 l 10.086 5.879 10.582 4.059 12.012 3.234 c 13.438 2.41 15.266 2.891 16.098
 4.312 c 18.199 7.953 l 18.969 9.281 21 8.734 21 7.203 c 21 3 l 21 1.344
 22.344 0 24 0 c 30 15 m 30 13.344 28.656 12 27 12 c 25.344 12 24 13.344
 24 15 c 24 16.656 25.344 18 27 18 c 28.656 18 30 16.656 30 15 c 18 21 m
 18 19.344 16.656 18 15 18 c 13.344 18 12 19.344 12 21 c 12 22.656 13.344
 24 15 24 c 16.656 24 18 22.656 18 21 c 21 33 m 22.656 33 24 31.656 24 30
 c 24 28.344 22.656 27 21 27 c 19.344 27 18 28.344 18 30 c 18 31.656 19.344
 33 21 33 c 36 24 m 36 22.344 34.656 21 33 21 c 31.344 21 30 22.344 30 24
 c 30 25.656 31.344 27 33 27 c 34.656 27 36 25.656 36 24 c f
Q Q
showpage
%%Trailer
%%EOF
