%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 793.461 0 817.879 10.113 835.883 28.117 c 853.887 46.121 864 70.539
 864 96 c 864 230.594 l 864 279.648 928.992 297.121 953.566 254.594 c 1020.766
 138.051 l 1020.77 138.047 l 1037.918 108.328 1069.617 90.016 1103.93 90.008
 c 1138.242 90 1169.949 108.297 1187.113 138.008 c 1204.277 167.719 1204.285
 204.328 1187.137 234.047 c 1119.84 350.59 l 1095.266 393.117 1142.879 440.734
 1185.406 416.156 c 1301.949 348.859 l 1301.953 348.863 l 1331.637 331.988
 1368.051 332.148 1397.582 349.285 c 1427.117 366.422 1445.324 397.961 1445.398
 432.105 c 1445.477 466.25 1427.41 497.867 1397.953 515.137 c 1281.41 582.434
 l 1238.883 607.008 1256.258 672 1305.41 672 c 1440 672 l 1474.297 672 1505.988
 690.297 1523.137 720 c 1540.289 749.703 1540.289 786.297 1523.137 816 c
 1505.988 845.703 1474.297 864 1440 864 c 1305.406 864 l 1256.254 864 1238.879
 928.992 1281.406 953.566 c 1397.949 1020.863 l 1397.953 1020.863 l 1420.18
 1033.504 1436.449 1054.488 1443.148 1079.164 c 1449.852 1103.844 1446.426
 1130.176 1433.641 1152.32 c 1420.855 1174.465 1399.762 1190.594 1375.043
 1197.129 c 1350.32 1203.664 1324.012 1200.07 1301.953 1187.137 c 1185.41
 1119.938 l 1142.883 1095.266 1095.266 1142.977 1119.844 1185.41 c 1187.141
 1301.953 l 1187.137 1301.953 l 1200.07 1324.012 1203.664 1350.32 1197.129
 1375.043 c 1190.594 1399.762 1174.465 1420.855 1152.32 1433.641 c 1130.176
 1446.426 1103.844 1449.852 1079.164 1443.148 c 1054.488 1436.449 1033.504
 1420.18 1020.863 1397.953 c 953.566 1281.41 l 928.992 1238.883 864 1256.258
 864 1305.41 c 864 1440 l 864 1474.297 845.703 1505.988 816 1523.137 c 786.297
 1540.289 749.703 1540.289 720 1523.137 c 690.297 1505.988 672 1474.297 
672 1440 c 672 1305.406 l 672 1256.254 607.008 1238.879 582.434 1281.406
 c 515.137 1397.949 l 515.137 1397.953 l 497.867 1427.41 466.25 1445.477
 432.105 1445.398 c 397.961 1445.324 366.422 1427.117 349.285 1397.582 c
 332.148 1368.051 331.988 1331.637 348.863 1301.953 c 416.062 1185.41 l 
440.734 1142.883 393.023 1095.266 350.59 1119.844 c 234.047 1187.141 l 234.047
 1187.137 l 211.988 1200.07 185.68 1203.664 160.957 1197.129 c 136.238 1190.594
 115.145 1174.465 102.359 1152.32 c 89.574 1130.176 86.148 1103.844 92.852
 1079.164 c 99.551 1054.488 115.82 1033.504 138.047 1020.863 c 254.59 953.566
 l 297.117 928.992 279.645 864 230.59 864 c 96 864 l 61.703 864 30.012 845.703
 12.863 816 c -4.289 786.297 -4.289 749.703 12.863 720 c 30.012 690.297 
61.703 672 96 672 c 230.594 672 l 279.648 672 297.121 607.008 254.594 582.434
 c 138.051 515.137 l 138.047 515.137 l 115.82 502.496 99.551 481.512 92.852
 456.836 c 86.148 432.156 89.574 405.824 102.359 383.68 c 115.145 361.535
 136.238 345.406 160.957 338.871 c 185.68 332.336 211.988 335.93 234.047
 348.863 c 350.59 416.16 l 393.117 440.734 440.734 393.121 416.156 350.594
 c 348.859 234.051 l 348.863 234.047 l 331.988 204.363 332.148 167.949 349.285
 138.418 c 366.422 108.883 397.961 90.676 432.105 90.602 c 466.25 90.523
 497.867 108.59 515.137 138.047 c 582.434 254.59 l 607.008 297.117 672 279.645
 672 230.59 c 672 96 l 672 70.539 682.113 46.121 700.117 28.117 c 718.121
 10.113 742.539 0 768 0 c 960 480 m 960 445.703 941.703 414.012 912 396.863
 c 882.297 379.711 845.703 379.711 816 396.863 c 786.297 414.012 768 445.703
 768 480 c 768 514.297 786.297 545.988 816 563.137 c 845.703 580.289 882.297
 580.289 912 563.137 c 941.703 545.988 960 514.297 960 480 c 576 672 m 576
 637.703 557.703 606.012 528 588.863 c 498.297 571.711 461.703 571.711 432
 588.863 c 402.297 606.012 384 637.703 384 672 c 384 706.297 402.297 737.988
 432 755.137 c 461.703 772.289 498.297 772.289 528 755.137 c 557.703 737.988
 576 706.297 576 672 c 672 1056 m 706.297 1056 737.988 1037.703 755.137 
1008 c 772.289 978.297 772.289 941.703 755.137 912 c 737.988 882.297 706.297
 864 672 864 c 637.703 864 606.012 882.297 588.863 912 c 571.711 941.703
 571.711 978.297 588.863 1008 c 606.012 1037.703 637.703 1056 672 1056 c
 1152 768 m 1152 733.703 1133.703 702.012 1104 684.863 c 1074.297 667.711
 1037.703 667.711 1008 684.863 c 978.297 702.012 960 733.703 960 768 c 960
 802.297 978.297 833.988 1008 851.137 c 1037.703 868.289 1074.297 868.289
 1104 851.137 c 1133.703 833.988 1152 802.297 1152 768 c f
Q Q
showpage
%%Trailer
%%EOF
