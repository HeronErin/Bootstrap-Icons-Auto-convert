%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48 180 m 41.371 180 36 174.629 36 168 c 36 161.371 41.371 156 48 156 c 
54.629 156 60 161.371 60 168 c 60 174.629 54.629 180 48 180 c 48 192 m 56.574
 192 64.496 187.426 68.785 180 c 73.07 172.574 73.07 163.426 68.785 156 
c 64.496 148.574 56.574 144 48 144 c 39.426 144 31.504 148.574 27.215 156
 c 22.93 163.426 22.93 172.574 27.215 180 c 31.504 187.426 39.426 192 48
 192 c 144 180 m 137.371 180 132 174.629 132 168 c 132 161.371 137.371 156
 144 156 c 150.629 156 156 161.371 156 168 c 156 174.629 150.629 180 144
 180 c 144 192 m 152.574 192 160.496 187.426 164.785 180 c 169.07 172.574
 169.07 163.426 164.785 156 c 160.496 148.574 152.574 144 144 144 c 135.426
 144 127.504 148.574 123.215 156 c 118.93 163.426 118.93 172.574 123.215
 180 c 127.504 187.426 135.426 192 144 192 c 1.379 38.16 m 2.523 36.789 
4.215 35.996 6 36 c 186 36 l 187.785 36 189.473 36.797 190.613 38.168 c 
191.75 39.543 192.219 41.352 191.891 43.105 c 173.891 139.105 l 173.359 
141.941 170.887 143.996 168 144 c 24 144 l 21.113 143.996 18.641 141.941
 18.109 139.105 c 0.109 43.105 l -0.223 41.352 0.246 39.547 1.379 38.172
 c h
13.223 48 m 28.98 132 l 163.02 132 l 178.777 48 l h
13.223 48 m f
72 12 m 77.66 4.438 86.555 -0.016 96 -0.016 c 105.445 -0.016 114.34 4.438
 120 12 c 129.816 12 138.539 16.727 144 24 c 152.039 24 162.625 30.84 168
 36 c 144 36 l 140.23 36 136.668 34.199 134.398 31.199 c 131.109 26.82 125.879
 24 120 24 c 116.23 24 112.668 22.199 110.398 19.199 c 107.008 14.652 101.672
 11.977 96 11.977 c 90.328 11.977 84.992 14.652 81.602 19.199 c 79.332 22.199
 75.77 24 72 24 c 65.914 24 60.539 27.012 57.266 31.656 c 56.176 33.207 
54.945 34.656 53.57 36 c 36 36 l 37.559 34.234 40.812 30.816 42.742 29.461
 c 44.578 28.176 46.176 26.578 47.461 24.742 c 53.078 16.754 62.234 12 72
 12 c f*
Q Q
showpage
%%Trailer
%%EOF
