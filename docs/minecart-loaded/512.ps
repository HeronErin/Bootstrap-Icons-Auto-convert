%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
96 360 m 87.426 360 79.504 355.426 75.215 348 c 70.93 340.574 70.93 331.426
 75.215 324 c 79.504 316.574 87.426 312 96 312 c 104.574 312 112.496 316.574
 116.785 324 c 121.07 331.426 121.07 340.574 116.785 348 c 112.496 355.426
 104.574 360 96 360 c 96 384 m 113.148 384 128.996 374.852 137.57 360 c 
146.145 345.148 146.145 326.852 137.57 312 c 128.996 297.148 113.148 288
 96 288 c 78.852 288 63.004 297.148 54.43 312 c 45.855 326.852 45.855 345.148
 54.43 360 c 63.004 374.852 78.852 384 96 384 c 288 360 m 279.426 360 271.504
 355.426 267.215 348 c 262.93 340.574 262.93 331.426 267.215 324 c 271.504
 316.574 279.426 312 288 312 c 296.574 312 304.496 316.574 308.785 324 c
 313.07 331.426 313.07 340.574 308.785 348 c 304.496 355.426 296.574 360
 288 360 c 288 384 m 305.148 384 320.996 374.852 329.57 360 c 338.145 345.148
 338.145 326.852 329.57 312 c 320.996 297.148 305.148 288 288 288 c 270.852
 288 255.004 297.148 246.43 312 c 237.855 326.852 237.855 345.148 246.43
 360 c 255.004 374.852 270.852 384 288 384 c 2.762 76.32 m 5.043 73.578 
8.43 71.996 12 72 c 372 72 l 375.566 72.004 378.949 73.594 381.227 76.34
 c 383.504 79.086 384.441 82.703 383.785 86.207 c 347.785 278.207 l 346.723
 283.883 341.773 287.996 336 288 c 48 288 l 42.227 287.996 37.277 283.883
 36.215 278.207 c 0.215 86.207 l -0.441 82.707 0.488 79.09 2.762 76.344 
c h
26.449 96 m 57.961 264 l 326.039 264 l 357.551 96 l h
26.449 96 m f
144 24 m 155.32 8.875 173.105 -0.031 192 -0.031 c 210.895 -0.031 228.68
 8.875 240 24 c 259.633 24 277.078 33.457 288 48 c 304.078 48 325.246 61.68
 336 72 c 288 72 l 280.465 72 273.336 68.398 268.801 62.398 c 262.227 53.637
 251.762 48 240 48 c 232.465 48 225.336 44.398 220.801 38.398 c 214.02 29.309
 203.344 23.953 192 23.953 c 180.656 23.953 169.98 29.309 163.199 38.398
 c 158.664 44.398 151.535 48 144 48 c 131.832 48 121.078 54.023 114.527 
63.312 c 112.352 66.418 109.887 69.312 107.137 72 c 72 72 l 75.121 68.473
 81.625 61.633 85.488 58.922 c 89.156 56.352 92.352 53.156 94.922 49.488
 c 106.156 33.508 124.465 24 144 24 c f*
Q Q
showpage
%%Trailer
%%EOF
