%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
60 12 m 60 5.371 65.371 0 72 0 c 312 0 l 315.184 0 318.234 1.266 320.484
 3.516 c 322.734 5.766 324 8.816 324 12 c 324 24.91 323.727 37.199 323.184
 48.863 c 342.344 52.035 359.406 62.812 370.504 78.75 c 381.602 94.684 385.793
 114.426 382.125 133.496 c 378.457 152.566 367.242 169.348 351.023 180.027
 c 334.805 190.707 314.961 194.387 295.992 190.223 c 277.031 234.984 250.922
 256.871 228 262.488 c 228 314.641 l 262.199 323.184 l 266.855 324.336 271.246
 326.422 275.086 329.305 c 319.199 362.398 l 323.332 365.5 325.016 370.895
 323.383 375.793 c 321.75 380.695 317.164 384 312 384 c 72 384 l 66.836 
384 62.25 380.695 60.617 375.793 c 58.984 370.895 60.668 365.5 64.801 362.398
 c 108.914 329.301 l 112.754 326.422 117.145 324.332 121.801 323.18 c 156
 314.641 l 156 262.488 l 133.078 256.871 106.969 234.984 88.008 190.199 
c 69.031 194.383 49.164 190.719 32.93 180.035 c 16.695 169.355 5.469 152.562
 1.801 133.477 c -1.867 114.395 2.336 94.637 13.453 78.695 c 24.574 62.758
 41.664 51.988 60.84 48.84 c 60.273 36.566 59.996 24.285 60 12 c 62.375 
72.961 m 45.508 76.047 31.562 87.898 25.801 104.051 c 20.039 120.207 23.336
 138.207 34.441 151.273 c 45.551 164.34 62.785 170.488 79.656 167.398 c 
71.664 142.199 65.543 111.094 62.375 72.957 c 304.367 167.398 m 321.238 
170.488 338.473 164.34 349.582 151.273 c 360.691 138.207 363.984 120.207
 358.223 104.051 c 352.461 87.898 338.52 76.047 321.648 72.961 c 318.457
 111.121 312.336 142.199 304.367 167.402 c f
Q Q
showpage
%%Trailer
%%EOF
