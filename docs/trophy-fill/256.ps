%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
30 6 m 30 2.688 32.688 0 36 0 c 156 0 l 157.59 0 159.117 0.633 160.242 
1.758 c 161.367 2.883 162 4.41 162 6 c 162 12.457 161.863 18.602 161.594
 24.434 c 171.172 26.02 179.703 31.406 185.254 39.375 c 190.801 47.344 192.898
 57.215 191.062 66.75 c 189.23 76.285 183.621 84.672 175.512 90.016 c 167.402
 95.355 157.48 97.191 147.996 95.113 c 138.516 117.492 125.461 128.438 114
 131.246 c 114 157.32 l 131.102 161.594 l 133.43 162.168 135.625 163.215
 137.547 164.652 c 159.602 181.199 l 161.668 182.75 162.508 185.449 161.691
 187.898 c 160.875 190.348 158.582 192 156 192 c 36 192 l 33.418 192 31.125
 190.348 30.309 187.898 c 29.492 185.449 30.332 182.75 32.398 181.199 c 
54.453 164.652 l 56.375 163.211 58.57 162.168 60.898 161.594 c 78 157.32
 l 78 131.246 l 66.539 128.438 53.484 117.492 44.004 95.102 c 34.516 97.191
 24.582 95.359 16.465 90.02 c 8.348 84.676 2.734 76.281 0.898 66.738 c -0.934
 57.195 1.168 47.316 6.727 39.348 c 12.285 31.379 20.832 25.996 30.422 24.422
 c 30.137 18.285 29.996 12.141 30 6 c 31.188 36.48 m 22.754 38.023 15.781
 43.949 12.902 52.027 c 10.02 60.102 11.668 69.102 17.223 75.637 c 22.773
 82.168 31.395 85.242 39.828 83.699 c 35.832 71.098 32.773 55.547 31.188
 36.48 c 152.184 83.699 m 160.617 85.242 169.238 82.168 174.789 75.637 c
 180.344 69.102 181.992 60.102 179.109 52.027 c 176.23 43.949 169.258 38.023
 160.824 36.48 c 159.227 55.559 156.168 71.102 152.184 83.699 c f
Q Q
showpage
%%Trailer
%%EOF
