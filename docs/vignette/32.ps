%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
12 1.5 m 6.199 1.5 1.5 6.199 1.5 12 c 1.5 17.801 6.199 22.5 12 22.5 c 17.801
 22.5 22.5 17.801 22.5 12 c 22.5 6.199 17.801 1.5 12 1.5 c 0 12 m 0 5.371
 5.371 0 12 0 c 18.629 0 24 5.371 24 12 c 24 18.629 18.629 24 12 24 c 5.371
 24 0 18.629 0 12 c f
12.75 6.75 m 12.75 7.164 12.414 7.5 12 7.5 c 11.586 7.5 11.25 7.164 11.25
 6.75 c 11.25 6.336 11.586 6 12 6 c 12.414 6 12.75 6.336 12.75 6.75 c 12.75
 17.25 m 12.75 17.664 12.414 18 12 18 c 11.586 18 11.25 17.664 11.25 17.25
 c 11.25 16.836 11.586 16.5 12 16.5 c 12.414 16.5 12.75 16.836 12.75 17.25
 c 15.273 7.828 m 15.176 8.004 15.012 8.129 14.82 8.18 c 14.625 8.234 14.422
 8.207 14.246 8.105 c 14.074 8.008 13.949 7.844 13.898 7.648 c 13.848 7.457
 13.875 7.25 13.977 7.078 c 14.184 6.723 14.641 6.602 14.996 6.809 c 15.355
 7.016 15.477 7.469 15.273 7.828 c 10.023 16.922 m 9.926 17.094 9.762 17.223
 9.57 17.273 c 9.375 17.328 9.172 17.301 8.996 17.199 c 8.824 17.102 8.699
 16.938 8.648 16.742 c 8.598 16.551 8.625 16.344 8.727 16.172 c 8.934 15.816
 9.391 15.695 9.746 15.902 c 10.105 16.109 10.227 16.562 10.023 16.922 c
 16.922 10.023 m 16.75 10.125 16.543 10.152 16.352 10.102 c 16.156 10.051
 15.992 9.926 15.895 9.754 c 15.793 9.578 15.766 9.375 15.82 9.18 c 15.871
 8.988 15.996 8.824 16.172 8.727 c 16.531 8.523 16.984 8.645 17.191 9.004
 c 17.398 9.359 17.277 9.816 16.922 10.023 c 7.828 15.273 m 7.656 15.375
 7.449 15.402 7.258 15.352 c 7.062 15.301 6.898 15.176 6.801 15.004 c 6.699
 14.828 6.672 14.625 6.727 14.43 c 6.777 14.238 6.906 14.074 7.078 13.977
 c 7.438 13.773 7.891 13.895 8.098 14.254 c 8.305 14.609 8.184 15.066 7.828
 15.273 c 17.25 12.75 m 16.836 12.75 16.5 12.414 16.5 12 c 16.5 11.586 16.836
 11.25 17.25 11.25 c 17.664 11.25 18 11.586 18 12 c 18 12.414 17.664 12.75
 17.25 12.75 c 6.75 12.75 m 6.336 12.75 6 12.414 6 12 c 6 11.586 6.336 11.25
 6.75 11.25 c 7.164 11.25 7.5 11.586 7.5 12 c 7.5 12.414 7.164 12.75 6.75
 12.75 c 16.172 15.273 m 15.996 15.176 15.871 15.012 15.82 14.82 c 15.766
 14.625 15.793 14.422 15.895 14.246 c 15.992 14.074 16.156 13.949 16.352
 13.898 c 16.543 13.848 16.75 13.875 16.922 13.977 c 17.277 14.184 17.398
 14.641 17.191 14.996 c 16.984 15.355 16.531 15.477 16.172 15.273 c 7.078
 10.023 m 6.906 9.926 6.777 9.762 6.727 9.57 c 6.672 9.375 6.699 9.172 6.801
 8.996 c 6.898 8.824 7.062 8.699 7.258 8.648 c 7.449 8.598 7.656 8.625 7.828
 8.727 c 8.184 8.934 8.305 9.391 8.098 9.746 c 7.891 10.105 7.438 10.227
 7.078 10.023 c 13.977 16.922 m 13.875 16.75 13.848 16.543 13.898 16.352
 c 13.949 16.156 14.074 15.992 14.246 15.895 c 14.422 15.793 14.625 15.766
 14.82 15.82 c 15.012 15.871 15.176 15.996 15.273 16.172 c 15.477 16.531
 15.355 16.984 14.996 17.191 c 14.641 17.398 14.184 17.277 13.977 16.922
 c 8.727 7.828 m 8.625 7.656 8.598 7.449 8.648 7.258 c 8.699 7.062 8.824
 6.898 8.996 6.801 c 9.172 6.699 9.375 6.672 9.57 6.727 c 9.762 6.777 9.926
 6.906 10.023 7.078 c 10.227 7.438 10.105 7.891 9.746 8.098 c 9.391 8.305
 8.934 8.184 8.727 7.828 c f
Q Q
showpage
%%Trailer
%%EOF
