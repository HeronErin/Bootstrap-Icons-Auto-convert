%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 3 m 16.496 3 9.566 7.004 5.812 13.5 c 2.062 19.996 2.062 28.004 5.812
 34.5 c 9.566 40.996 16.496 45 24 45 c 31.504 45 38.434 40.996 42.188 34.5
 c 45.938 28.004 45.938 19.996 42.188 13.5 c 38.434 7.004 31.504 3 24 3 
c 0 24 m 0 15.426 4.574 7.504 12 3.215 c 19.426 -1.07 28.574 -1.07 36 3.215
 c 43.426 7.504 48 15.426 48 24 c 48 32.574 43.426 40.496 36 44.785 c 28.574
 49.07 19.426 49.07 12 44.785 c 4.574 40.496 0 32.574 0 24 c f
25.5 13.5 m 25.5 14.328 24.828 15 24 15 c 23.172 15 22.5 14.328 22.5 13.5
 c 22.5 12.672 23.172 12 24 12 c 24.828 12 25.5 12.672 25.5 13.5 c 25.5 
34.5 m 25.5 35.328 24.828 36 24 36 c 23.172 36 22.5 35.328 22.5 34.5 c 22.5
 33.672 23.172 33 24 33 c 24.828 33 25.5 33.672 25.5 34.5 c 30.551 15.656
 m 30.352 16.004 30.023 16.258 29.637 16.363 c 29.254 16.469 28.84 16.414
 28.496 16.215 c 28.148 16.016 27.898 15.684 27.793 15.301 c 27.691 14.914
 27.75 14.5 27.949 14.156 c 28.367 13.445 29.281 13.203 29.996 13.617 c 
30.711 14.027 30.957 14.941 30.551 15.656 c 20.051 33.844 m 19.852 34.191
 19.523 34.445 19.137 34.551 c 18.754 34.652 18.34 34.602 17.996 34.402 
c 17.648 34.199 17.398 33.871 17.293 33.484 c 17.191 33.098 17.25 32.688
 17.449 32.344 c 17.867 31.633 18.781 31.391 19.496 31.801 c 20.211 32.215
 20.457 33.125 20.051 33.844 c 33.844 20.051 m 33.5 20.25 33.086 20.309 
32.699 20.207 c 32.316 20.102 31.984 19.852 31.785 19.504 c 31.586 19.16
 31.531 18.746 31.637 18.363 c 31.742 17.977 31.996 17.648 32.344 17.449
 c 33.059 17.043 33.973 17.289 34.383 18.004 c 34.797 18.719 34.555 19.633
 33.844 20.051 c 15.656 30.551 m 15.312 30.75 14.902 30.809 14.516 30.707
 c 14.129 30.602 13.801 30.352 13.598 30.004 c 13.398 29.66 13.348 29.246
 13.449 28.863 c 13.555 28.477 13.809 28.148 14.156 27.949 c 14.875 27.543
 15.785 27.789 16.199 28.504 c 16.609 29.219 16.367 30.133 15.656 30.551
 c 34.5 25.5 m 33.672 25.5 33 24.828 33 24 c 33 23.172 33.672 22.5 34.5 
22.5 c 35.328 22.5 36 23.172 36 24 c 36 24.828 35.328 25.5 34.5 25.5 c 13.5
 25.5 m 12.672 25.5 12 24.828 12 24 c 12 23.172 12.672 22.5 13.5 22.5 c 
14.328 22.5 15 23.172 15 24 c 15 24.828 14.328 25.5 13.5 25.5 c 32.344 30.551
 m 31.996 30.352 31.742 30.023 31.637 29.637 c 31.531 29.254 31.586 28.84
 31.785 28.496 c 31.984 28.148 32.316 27.898 32.699 27.793 c 33.086 27.691
 33.5 27.75 33.844 27.949 c 34.555 28.367 34.797 29.281 34.383 29.996 c 
33.973 30.711 33.059 30.957 32.344 30.551 c 14.156 20.051 m 13.809 19.852
 13.555 19.523 13.449 19.137 c 13.348 18.754 13.398 18.34 13.598 17.996 
c 13.801 17.648 14.129 17.398 14.516 17.293 c 14.902 17.191 15.312 17.25
 15.656 17.449 c 16.367 17.867 16.609 18.781 16.199 19.496 c 15.785 20.211
 14.875 20.457 14.156 20.051 c 27.949 33.844 m 27.75 33.5 27.691 33.086 
27.793 32.699 c 27.898 32.316 28.148 31.984 28.496 31.785 c 28.84 31.586
 29.254 31.531 29.637 31.637 c 30.023 31.742 30.352 31.996 30.551 32.344
 c 30.957 33.059 30.711 33.973 29.996 34.383 c 29.281 34.797 28.367 34.555
 27.949 33.844 c 17.449 15.656 m 17.25 15.312 17.191 14.902 17.293 14.516
 c 17.398 14.129 17.648 13.801 17.996 13.598 c 18.34 13.398 18.754 13.348
 19.137 13.449 c 19.523 13.555 19.852 13.809 20.051 14.156 c 20.457 14.875
 20.211 15.785 19.496 16.199 c 18.781 16.609 17.867 16.367 17.449 15.656
 c f
Q Q
showpage
%%Trailer
%%EOF
