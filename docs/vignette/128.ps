%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 6 m 32.996 6 19.129 14.004 11.625 27 c 4.125 39.996 4.125 56.004 11.625
 69 c 19.129 81.996 32.996 90 48 90 c 63.004 90 76.871 81.996 84.375 69 
c 91.875 56.004 91.875 39.996 84.375 27 c 76.871 14.004 63.004 6 48 6 c 
0 48 m 0 30.852 9.148 15.004 24 6.43 c 38.852 -2.145 57.148 -2.145 72 6.43
 c 86.852 15.004 96 30.852 96 48 c 96 65.148 86.852 80.996 72 89.57 c 57.148
 98.145 38.852 98.145 24 89.57 c 9.148 80.996 0 65.148 0 48 c f
51 27 m 51 28.656 49.656 30 48 30 c 46.344 30 45 28.656 45 27 c 45 25.344
 46.344 24 48 24 c 49.656 24 51 25.344 51 27 c 51 69 m 51 70.656 49.656 
72 48 72 c 46.344 72 45 70.656 45 69 c 45 67.344 46.344 66 48 66 c 49.656
 66 51 67.344 51 69 c 61.098 31.312 m 60.703 32.008 60.047 32.516 59.277
 32.727 c 58.504 32.938 57.684 32.828 56.988 32.43 c 56.297 32.031 55.793
 31.371 55.59 30.598 c 55.387 29.824 55.496 29.004 55.902 28.312 c 56.734
 26.891 58.562 26.41 59.988 27.234 c 61.418 28.059 61.914 29.879 61.098 
31.312 c 40.098 67.684 m 40.098 67.688 l 39.703 68.379 39.047 68.891 38.277
 69.098 c 37.504 69.309 36.684 69.199 35.988 68.801 c 35.297 68.402 34.793
 67.742 34.59 66.969 c 34.387 66.199 34.496 65.375 34.902 64.688 c 35.734
 63.262 37.562 62.781 38.988 63.605 c 40.418 64.43 40.914 66.254 40.098 
67.688 c 67.688 40.098 m 66.996 40.504 66.176 40.613 65.402 40.41 c 64.629
 40.207 63.969 39.703 63.57 39.012 c 63.172 38.316 63.062 37.496 63.273 
36.723 c 63.484 35.953 63.992 35.297 64.688 34.902 c 66.121 34.086 67.941
 34.582 68.766 36.012 c 69.59 37.438 69.109 39.266 67.688 40.098 c 31.316
 61.098 m 31.312 61.098 l 30.625 61.504 29.801 61.613 29.031 61.41 c 28.258
 61.207 27.598 60.703 27.199 60.012 c 26.801 59.316 26.691 58.496 26.902
 57.723 c 27.109 56.953 27.621 56.297 28.312 55.902 c 29.746 55.086 31.57
 55.582 32.395 57.012 c 33.219 58.438 32.738 60.266 31.312 61.098 c 69 51
 m 67.344 51 66 49.656 66 48 c 66 46.344 67.344 45 69 45 c 70.656 45 72 
46.344 72 48 c 72 49.656 70.656 51 69 51 c 27 51 m 25.344 51 24 49.656 24
 48 c 24 46.344 25.344 45 27 45 c 28.656 45 30 46.344 30 48 c 30 49.656 
28.656 51 27 51 c 64.688 61.098 m 63.992 60.703 63.484 60.047 63.273 59.277
 c 63.062 58.504 63.172 57.684 63.57 56.988 c 63.969 56.297 64.629 55.793
 65.402 55.59 c 66.176 55.387 66.996 55.496 67.688 55.902 c 69.109 56.734
 69.59 58.562 68.766 59.988 c 67.941 61.418 66.121 61.914 64.688 61.098 
c 28.316 40.098 m 28.312 40.098 l 27.621 39.703 27.109 39.047 26.902 38.277
 c 26.691 37.504 26.801 36.684 27.199 35.988 c 27.598 35.297 28.258 34.793
 29.031 34.59 c 29.801 34.387 30.625 34.496 31.312 34.902 c 32.738 35.734
 33.219 37.562 32.395 38.988 c 31.57 40.418 29.746 40.914 28.312 40.098 
c 55.902 67.688 m 55.496 66.996 55.387 66.176 55.59 65.402 c 55.793 64.629
 56.297 63.969 56.988 63.57 c 57.684 63.172 58.504 63.062 59.277 63.273 
c 60.047 63.484 60.703 63.992 61.098 64.688 c 61.914 66.121 61.418 67.941
 59.988 68.766 c 58.562 69.59 56.734 69.109 55.902 67.688 c 34.902 31.316
 m 34.902 31.312 l 34.496 30.625 34.387 29.801 34.59 29.031 c 34.793 28.258
 35.297 27.598 35.988 27.199 c 36.684 26.801 37.504 26.691 38.277 26.902
 c 39.047 27.109 39.703 27.621 40.098 28.312 c 40.914 29.746 40.418 31.57
 38.988 32.395 c 37.562 33.219 35.734 32.738 34.902 31.312 c f
Q Q
showpage
%%Trailer
%%EOF
