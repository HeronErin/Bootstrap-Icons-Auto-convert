%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0 3 m 0 1.344 1.344 0 3 0 c 4.656 0 6 1.344 6 3 c 6 4.656 4.656 6 3 6 c
 1.344 6 0 4.656 0 3 c 2.812 0.402 m 2.562 0.48 2.312 0.711 2.105 1.098 
c 2.035 1.23 1.977 1.363 1.93 1.5 c 2.812 1.5 l h
1.535 1.5 m 1.598 1.301 1.676 1.109 1.773 0.922 c 1.84 0.801 1.914 0.684
 1.996 0.574 c 1.531 0.766 1.133 1.086 0.844 1.5 c h
1.316 2.812 m 1.328 2.484 1.367 2.168 1.434 1.875 c 0.629 1.875 l 0.488
 2.168 0.406 2.488 0.383 2.812 c h
1.816 1.875 m 1.742 2.184 1.703 2.496 1.691 2.812 c 2.812 2.812 l 2.812
 1.875 l h
3.188 1.875 m 3.188 2.812 l 4.309 2.812 l 4.297 2.496 4.258 2.184 4.184
 1.875 c h
1.691 3.188 m 1.703 3.504 1.742 3.816 1.816 4.125 c 2.812 4.125 l 2.812
 3.188 l h
3.188 3.188 m 3.188 4.125 l 4.184 4.125 l 4.254 3.84 4.297 3.523 4.309 
3.188 c h
1.93 4.5 m 1.98 4.645 2.039 4.777 2.105 4.902 c 2.312 5.289 2.562 5.52 
2.812 5.598 c 2.812 4.5 l h
1.996 5.426 m 1.914 5.316 1.84 5.199 1.773 5.078 c 1.676 4.891 1.598 4.699
 1.535 4.5 c 0.844 4.5 l 1.133 4.914 1.531 5.234 1.996 5.426 c 1.434 4.125
 m 1.363 3.816 1.324 3.504 1.316 3.188 c 0.383 3.188 l 0.406 3.52 0.492 
3.836 0.629 4.125 c h
4.004 5.426 m 4.469 5.234 4.867 4.914 5.156 4.5 c 4.465 4.5 l 4.402 4.699
 4.324 4.891 4.227 5.078 c 4.16 5.199 4.086 5.316 4.004 5.426 c 3.188 4.5
 m 3.188 5.598 l 3.438 5.52 3.688 5.289 3.895 4.902 c 3.961 4.781 4.02 4.648
 4.07 4.5 c h
4.566 4.125 m 5.371 4.125 l 5.508 3.836 5.594 3.52 5.617 3.188 c 4.684 
3.188 l 4.676 3.504 4.637 3.816 4.566 4.125 c 5.617 2.812 m 5.594 2.488 
5.512 2.168 5.371 1.875 c 4.566 1.875 l 4.633 2.168 4.672 2.484 4.684 2.812
 c h
4.227 0.922 m 4.32 1.098 4.398 1.289 4.465 1.5 c 5.156 1.5 l 4.867 1.086
 4.469 0.766 4.004 0.574 c 4.086 0.68 4.16 0.797 4.227 0.926 c 4.07 1.5 
m 4.023 1.363 3.965 1.23 3.895 1.098 c 3.688 0.711 3.438 0.48 3.188 0.402
 c 3.188 1.5 l h
4.07 1.5 m f
Q Q
showpage
%%Trailer
%%EOF
