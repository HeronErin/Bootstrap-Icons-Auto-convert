%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
0 96 m 0 61.703 18.297 30.012 48 12.863 c 77.703 -4.289 114.297 -4.289 
144 12.863 c 173.703 30.012 192 61.703 192 96 c 192 130.297 173.703 161.988
 144 179.137 c 114.297 196.289 77.703 196.289 48 179.137 c 18.297 161.988
 0 130.297 0 96 c 90 12.926 m 81.961 15.375 73.98 22.766 67.355 35.188 c
 67.355 35.184 l 65.176 39.312 63.297 43.598 61.738 48 c 90 48 l h
49.078 48 m 51.082 41.625 53.652 35.445 56.762 29.531 c 58.848 25.617 61.242
 21.871 63.926 18.336 c 49.059 24.504 36.266 34.797 27.059 48 c h
42.094 90 m 42.453 79.477 43.75 69.383 45.836 60 c 20.09 60 l 15.625 69.426
 12.957 79.598 12.215 90 c h
58.164 60 m 55.805 69.836 54.445 79.891 54.109 90 c 90 90 l 90 60 l h
102 60 m 102 90 l 137.879 90 l 137.547 79.891 136.191 69.84 133.836 60 
c h
54.121 102 m 54.453 112.109 55.809 122.16 58.164 132 c 90 132 l 90 102 
l h
102 102 m 102 132 l 133.836 132 l 136.078 122.82 137.508 112.703 137.891
 102 c h
61.738 144 m 63.402 148.641 65.273 152.91 67.355 156.816 c 73.98 169.238
 81.973 176.617 90 179.078 c 90 144 l h
63.922 173.664 m 63.926 173.664 l 61.242 170.129 58.848 166.383 56.762 
162.469 c 53.652 156.555 51.082 150.375 49.078 144 c 27.059 144 l 36.25 
157.215 49.047 167.512 63.926 173.664 c 45.84 132 m 43.672 122.137 42.418
 112.094 42.098 102 c 12.219 102 l 12.961 112.68 15.711 122.797 20.09 132
 c h
128.074 173.664 m 142.953 167.512 155.75 157.215 164.941 144 c 142.922 
144 l 140.918 150.375 138.348 156.555 135.238 162.469 c 133.152 166.383 
130.758 170.129 128.074 173.664 c 102 144 m 102 179.074 l 110.039 176.625
 118.02 169.234 124.645 156.812 c 126.723 152.918 128.598 148.645 130.262
 143.996 c h
146.16 132 m 171.914 132 l 176.293 122.797 179.043 112.68 179.785 102 c
 149.902 102 l 149.582 112.094 148.328 122.137 146.16 132 c 179.785 90 m
 179.043 79.598 176.375 69.426 171.91 60 c 146.16 60 l 148.25 69.383 149.543
 79.477 149.902 90 c h
135.238 29.531 m 138.203 35.098 140.781 41.293 142.918 48 c 164.941 48 
l 155.75 34.785 142.953 24.488 128.074 18.336 c 130.691 21.742 133.09 25.512
 135.238 29.531 c 130.262 48 m 128.703 43.598 126.824 39.312 124.645 35.184
 c 118.02 22.766 110.039 15.383 102 12.926 c 102 48 l h
130.262 48 m f
Q Q
showpage
%%Trailer
%%EOF
