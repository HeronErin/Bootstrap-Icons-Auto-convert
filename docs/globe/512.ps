%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
0 192 m 0 141.078 20.227 92.242 56.234 56.234 c 92.242 20.227 141.078 0
 192 0 c 242.922 0 291.758 20.227 327.766 56.234 c 363.773 92.242 384 141.078
 384 192 c 384 242.922 363.773 291.758 327.766 327.766 c 291.758 363.773
 242.922 384 192 384 c 141.078 384 92.242 363.773 56.234 327.766 c 20.227
 291.758 0 242.922 0 192 c 180 25.848 m 163.922 30.742 147.961 45.527 134.711
 70.367 c 130.348 78.629 126.594 87.195 123.48 96 c 180 96 l h
98.16 96 m 102.164 83.254 107.305 70.891 113.52 59.062 c 117.695 51.234
 122.488 43.746 127.848 36.672 c 98.117 49.008 72.531 69.594 54.121 96 c
 h
84.191 180 m 84.91 158.953 87.504 138.77 91.68 120 c 40.176 120 l 31.25
 138.848 25.91 159.195 24.434 180 c h
116.328 120 m 111.609 139.676 108.891 159.777 108.215 180 c 180 180 l 180
 120 l h
204 120 m 204 180 l 275.762 180 l 275.094 159.777 272.383 139.676 267.672
 120 c h
108.238 204 m 108.906 224.223 111.617 244.324 116.328 264 c 180 264 l 180
 204 l h
204 204 m 204 264 l 267.672 264 l 272.16 245.641 275.016 225.406 275.785
 204 c h
123.48 288 m 126.809 297.281 130.551 305.824 134.711 313.633 c 147.957 
338.473 163.941 353.234 180 358.152 c 180 288 l h
127.848 347.328 m 122.488 340.254 117.695 332.766 113.52 324.938 c 107.305
 313.109 102.164 300.746 98.16 288 c 54.121 288 l 72.504 314.434 98.094 
335.023 127.848 347.328 c 91.68 264 m 87.348 244.273 84.84 224.188 84.191
 204 c 24.43 204 l 25.918 225.359 31.414 245.594 40.172 264 c h
256.152 347.328 m 285.906 335.023 311.496 314.434 329.879 288 c 285.84 
288 l 281.836 300.746 276.695 313.109 270.48 324.938 c 266.305 332.766 261.512
 340.254 256.152 347.328 c 204 288 m 204 358.152 l 220.078 353.258 236.039
 338.473 249.289 313.633 c 253.449 305.84 257.191 297.297 260.52 288 c h
292.32 264 m 343.824 264 l 352.586 245.594 358.082 225.359 359.566 204 
c 299.805 204 l 299.809 204 l 299.16 224.188 296.652 244.273 292.32 264 
c 359.566 180 m 358.09 159.195 352.75 138.848 343.824 120 c 292.32 120 l
 296.496 138.77 299.09 158.953 299.809 180 c h
270.48 59.062 m 276.41 70.199 281.57 82.582 285.84 96 c 329.879 96 l 311.496
 69.566 285.906 48.977 256.152 36.672 c 261.383 43.488 266.184 51.023 270.48
 59.062 c 260.52 96 m 257.406 87.195 253.652 78.629 249.289 70.367 c 236.039
 45.527 220.078 30.77 204 25.848 c 204 96 l h
260.52 96 m f
Q Q
showpage
%%Trailer
%%EOF
