%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 384 m 0 282.156 40.457 184.484 112.473 112.473 c 184.484 40.457 282.156
 0 384 0 c 485.844 0 583.516 40.457 655.527 112.473 c 727.543 184.484 768
 282.156 768 384 c 768 485.844 727.543 583.516 655.527 655.527 c 583.516
 727.543 485.844 768 384 768 c 282.156 768 184.484 727.543 112.473 655.527
 c 40.457 583.516 0 485.844 0 384 c 360 51.695 m 327.84 61.488 295.922 91.055
 269.426 140.734 c 260.699 157.254 253.191 174.387 246.961 192 c 360 192
 l h
196.32 192 m 204.328 166.508 214.609 141.781 227.039 118.129 c 235.395 
102.465 244.977 87.492 255.695 73.344 c 196.23 98.02 145.066 139.191 108.238
 192 c h
168.383 360 m 169.824 317.902 175.008 277.535 183.359 240 c 80.352 240 
l 62.5 277.699 51.82 318.391 48.863 360 c h
232.656 240 m 223.215 279.352 217.781 319.555 216.434 360 c 360 360 l 360
 240 l h
408 240 m 408 360 l 551.52 360 l 550.188 319.559 544.77 279.352 535.344
 240 c h
216.48 408 m 217.812 448.441 223.23 488.648 232.656 528 c 360 528 l 360
 408 l h
408 408 m 408 528 l 535.344 528 l 544.32 491.281 550.031 450.816 551.566
 408 c h
246.961 576 m 253.617 594.559 261.105 611.648 269.426 627.266 c 295.922
 676.945 327.891 706.465 360 716.305 c 360 576 l h
255.695 694.656 m 244.977 680.508 235.395 665.535 227.039 649.871 c 214.609
 626.219 204.328 601.492 196.32 576 c 108.238 576 l 145.008 628.863 196.191
 670.051 255.695 694.656 c 183.359 528 m 174.691 488.543 169.68 448.375 
168.383 408 c 48.863 408 l 51.84 450.719 62.832 491.184 80.352 528 c h
512.305 694.656 m 571.809 670.051 622.992 628.863 659.762 576 c 571.68 
576 l 563.672 601.492 553.391 626.219 540.961 649.871 c 532.605 665.535 
523.023 680.508 512.305 694.656 c 408 576 m 408 716.305 l 440.16 706.512
 472.078 676.945 498.574 627.266 c 506.895 611.68 514.383 594.594 521.039
 576 c h
584.641 528 m 687.648 528 l 705.168 491.184 716.16 450.719 719.137 408 
c 599.617 408 l 598.32 448.375 593.309 488.543 584.641 528 c 719.137 360
 m 716.18 318.391 705.5 277.699 687.648 240 c 584.641 240 l 592.992 277.535
 598.176 317.902 599.617 360 c h
540.961 118.129 m 552.816 140.402 563.137 165.168 571.68 192 c 659.762 
192 l 622.992 139.137 571.809 97.949 512.305 73.344 c 522.77 86.977 532.367
 102.047 540.961 118.129 c 521.039 192 m 514.809 174.387 507.301 157.254
 498.574 140.734 c 472.078 91.055 440.16 61.535 408 51.695 c 408 192 l h
521.039 192 m f
Q Q
showpage
%%Trailer
%%EOF
