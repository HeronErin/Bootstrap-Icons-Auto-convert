%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 8.25 l 9.75 8.25 l 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
7.023 9.789 m 6.965 9.941 6.941 10.105 6.945 10.266 c 6.945 10.637 l 6.945
 10.82 6.973 10.977 7.023 11.105 c 7.066 11.227 7.145 11.328 7.246 11.402
 c 7.352 11.469 7.477 11.504 7.605 11.5 c 7.707 11.5 7.812 11.48 7.906 11.434
 c 7.988 11.391 8.059 11.328 8.109 11.246 c 8.16 11.164 8.191 11.07 8.199
 10.977 c 8.773 10.977 l 8.773 11.035 l 8.77 11.031 l 8.766 11.215 8.707
 11.387 8.602 11.539 c 8.5 11.684 8.363 11.797 8.188 11.879 c 8.004 11.961
 7.805 12.004 7.602 12 c 7.332 12 7.102 11.945 6.918 11.84 c 6.914 11.84
 l 6.727 11.73 6.578 11.566 6.484 11.367 c 6.387 11.164 6.34 10.918 6.34
 10.637 c 6.34 10.262 l 6.34 9.977 6.391 9.734 6.488 9.527 c 6.586 9.32 
6.73 9.164 6.918 9.051 c 7.105 8.938 7.336 8.883 7.602 8.883 c 7.766 8.883
 7.918 8.906 8.059 8.957 c 8.199 9.004 8.32 9.07 8.426 9.16 c 8.422 9.164
 l 8.637 9.344 8.762 9.609 8.77 9.887 c 8.77 9.941 l 8.195 9.941 l 8.199
 9.941 l 8.191 9.84 8.16 9.742 8.109 9.656 c 8.059 9.574 7.988 9.508 7.902
 9.461 c 7.812 9.41 7.707 9.387 7.605 9.387 c 7.477 9.383 7.352 9.422 7.246
 9.492 c 7.145 9.566 7.066 9.672 7.023 9.789 c 2.449 8.941 m 2.449 11.941
 l 1.855 11.941 l 1.855 10.656 l 0.594 10.656 l 0.594 11.941 l 0 11.941 
l 0 8.941 l 0.594 8.941 l 0.594 10.16 l 1.855 10.16 l 1.855 8.941 l h
3.566 11.457 m 4.91 11.457 l 4.91 11.941 l 2.973 11.945 l 2.973 8.945 l
 4.906 8.945 l 4.906 9.43 l 3.562 9.43 l 3.562 10.199 l 4.824 10.199 l 4.824
 10.656 l 3.562 10.656 l h
5.938 11.941 m 5.938 8.941 l 5.344 8.941 l 5.344 11.941 l h
5.938 11.941 m f*
Q Q
showpage
%%Trailer
%%EOF
