%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 132 l 156 132 l 156 54 l 132 54 l 127.227 54 122.648 52.105
 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114 12 l 48 12 l 41.371
 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637 26.527 11.531 
31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
112.355 156.648 m 111.465 159.078 111.047 161.656 111.121 164.242 c 111.121
 170.184 l 111.121 173.137 111.531 175.645 112.355 177.707 c 113.047 179.609
 114.297 181.254 115.945 182.426 c 117.652 183.504 119.645 184.051 121.668
 183.996 c 123.332 184.02 124.98 183.656 126.48 182.941 c 127.82 182.258
 128.949 181.23 129.758 179.965 c 130.57 178.645 131.051 177.145 131.16 
175.598 c 140.34 175.598 l 140.34 176.508 l 140.223 179.406 139.285 182.215
 137.629 184.598 c 135.988 186.918 133.789 188.734 131.027 190.047 c 131.027
 190.043 l 128.074 191.402 124.848 192.074 121.598 192.012 c 117.277 192.012
 113.621 191.148 110.629 189.418 c 110.629 189.422 l 107.621 187.68 105.227
 185.051 103.777 181.895 c 102.227 178.629 101.449 174.727 101.449 170.184
 c 101.449 164.207 l 101.449 159.664 102.238 155.75 103.812 152.473 c 105.379
 149.184 107.664 146.652 110.664 144.875 c 113.688 143.09 117.332 142.199
 121.598 142.199 c 124.223 142.199 126.648 142.586 128.883 143.363 c 131.121
 144.105 133.078 145.195 134.75 146.629 c 134.746 146.629 l 138.164 149.52
 140.195 153.723 140.34 158.195 c 140.34 159.07 l 131.16 159.07 l 131.047
 157.461 130.555 155.895 129.719 154.512 c 128.938 153.188 127.801 152.105
 126.445 151.379 c 124.98 150.586 123.336 150.184 121.668 150.215 c 119.641
 150.152 117.645 150.73 115.969 151.871 c 114.324 153.078 113.066 154.738
 112.355 156.648 c 39.156 143.113 m 39.156 191.113 l 29.676 191.113 l 29.676
 170.52 l 9.48 170.52 l 9.48 191.086 l 0 191.09 l 0 143.102 l 9.492 143.102
 l 9.492 162.613 l 29.676 162.613 l 29.676 143.102 l h
57.012 183.336 m 78.492 183.336 l 78.492 191.102 l 47.594 191.102 l 47.594
 143.113 l 78.48 143.113 l 78.48 150.891 l 57 150.887 l 57 163.188 l 77.207
 163.188 l 77.207 170.473 l 57.012 170.473 l h
94.969 191.102 m 94.969 143.113 l 85.477 143.113 l 85.477 191.113 l 94.957
 191.113 l h
94.969 191.102 m f*
Q Q
showpage
%%Trailer
%%EOF
