%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 264 l 312 264 l 312 108 l 264 108 l 254.453 108 245.297 104.207
 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637
 24 83.531 26.527 79.031 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264
 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059 14.059 c 71.062 5.059 
83.27 0 96 0 c 228 0 l h
224.711 313.297 m 222.93 318.156 222.094 323.312 222.238 328.488 c 222.238
 340.367 l 222.238 346.27 223.062 351.289 224.711 355.414 c 226.09 359.215
 228.594 362.504 231.887 364.848 c 235.309 367.008 239.293 368.102 243.336
 367.992 c 246.664 368.039 249.957 367.316 252.961 365.879 c 255.637 364.516
 257.898 362.461 259.512 359.93 c 261.141 357.285 262.105 354.289 262.32
 351.191 c 280.68 351.191 l 280.68 353.016 l 280.449 358.812 278.566 364.426
 275.258 369.191 c 271.977 373.832 267.578 377.465 262.059 380.086 c 262.055
 380.09 l 256.145 382.805 249.695 384.148 243.191 384.023 c 234.551 384.023
 227.238 382.297 221.254 378.84 c 221.258 378.84 l 215.242 375.363 210.453
 370.105 207.551 363.793 c 204.445 357.266 202.895 349.457 202.895 340.367
 c 202.895 328.414 l 202.895 319.324 204.469 311.504 207.621 304.941 c 210.758
 298.367 215.324 293.301 221.324 289.75 c 227.371 286.184 234.66 284.398
 243.188 284.398 c 248.434 284.398 253.293 285.176 257.754 286.727 c 262.234
 288.215 266.145 290.391 269.488 293.254 c 269.496 293.258 l 276.324 299.043
 280.387 307.445 280.68 316.391 c 280.68 318.145 l 262.32 318.145 l 262.098
 314.918 261.109 311.793 259.441 309.023 c 257.871 306.375 255.605 304.207
 252.887 302.762 c 249.961 301.168 246.668 300.367 243.336 300.434 c 239.281
 300.305 235.289 301.465 231.938 303.742 c 228.648 306.156 226.137 309.477
 224.711 313.297 c 78.312 286.227 m 78.312 382.227 l 59.352 382.227 l 59.352
 341.039 l 18.961 341.039 l 18.961 382.176 l 0 382.176 l 0 286.199 l 18.984
 286.199 l 18.984 325.223 l 59.352 325.223 l 59.352 286.199 l h
114.023 366.676 m 156.984 366.676 l 156.984 382.203 l 95.184 382.199 l 
95.184 286.223 l 156.961 286.223 l 156.961 301.773 l 114 301.777 l 114 326.379
 l 154.414 326.379 l 154.414 340.945 l 114.023 340.945 l h
189.934 382.203 m 189.934 286.227 l 170.949 286.227 l 170.949 382.227 l
 189.91 382.227 l h
189.934 382.203 m f*
Q Q
showpage
%%Trailer
%%EOF
