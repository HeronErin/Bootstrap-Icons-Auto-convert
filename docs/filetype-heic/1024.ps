%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 528 l 624 528 l 624 216 l 528 216 l 508.906 216 490.59 208.414
 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c 456 48 l 192 48 l 
179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062 144 83.27 144 96
 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 124.117 28.117 c 
142.121 10.113 166.539 0 192 0 c 456 0 l h
449.426 626.594 m 445.863 636.316 444.184 646.625 444.48 656.977 c 444.48
 680.738 l 444.48 692.547 446.129 702.578 449.426 710.836 c 449.426 710.832
 l 452.184 718.43 457.188 725.008 463.777 729.695 c 470.617 734.016 478.586
 736.203 486.672 735.984 c 493.328 736.078 499.914 734.633 505.922 731.762
 c 511.273 729.035 515.797 724.926 519.023 719.855 c 522.281 714.57 524.207
 708.578 524.641 702.383 c 561.359 702.383 l 561.359 706.031 l 560.898 717.629
 557.133 728.852 550.512 738.383 c 543.953 747.664 535.152 754.926 524.113
 760.176 c 512.289 765.605 499.391 768.297 486.383 768.047 c 469.102 768.047
 454.48 764.59 442.512 757.68 c 430.484 750.723 420.91 740.207 415.105 727.586
 c 408.898 714.531 405.793 698.914 405.793 680.738 c 405.793 656.836 l 405.793
 638.66 408.945 623.012 415.25 609.891 c 421.523 596.738 430.656 586.609
 442.656 579.508 c 454.754 572.371 469.328 568.805 486.383 568.805 c 496.879
 568.805 506.59 570.355 515.52 573.461 c 524.48 576.438 532.305 580.789 
538.992 586.516 c 538.992 586.512 l 552.648 598.082 560.773 614.895 561.359
 632.785 c 561.359 636.289 l 524.641 636.289 l 524.191 629.836 522.219 623.586
 518.879 618.047 c 515.742 612.75 511.211 608.418 505.777 605.52 c 499.922
 602.336 493.336 600.73 486.672 600.863 c 478.562 600.609 470.582 602.926
 463.871 607.488 c 457.293 612.309 452.27 618.949 449.426 626.594 c 156.625
 572.449 m 156.625 764.449 l 118.703 764.449 l 118.703 682.078 l 37.922 
682.078 l 37.922 764.352 l 0 764.352 l 0 572.398 l 37.969 572.398 l 37.969
 650.445 l 118.703 650.445 l 118.703 572.398 l h
228.051 733.344 m 313.973 733.344 l 313.973 764.398 l 190.367 764.398 l
 190.367 572.445 l 313.922 572.449 l 313.922 603.555 l 228 603.551 l 228
 652.75 l 308.832 652.75 l 308.832 681.887 l 228.047 681.887 l h
379.875 764.398 m 379.875 572.445 l 341.906 572.445 l 341.906 764.445 l
 379.828 764.445 l h
379.875 764.398 m f*
Q Q
showpage
%%Trailer
%%EOF
