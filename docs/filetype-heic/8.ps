%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
3.512 4.895 m 3.484 4.973 3.469 5.051 3.473 5.133 c 3.473 5.32 l 3.473 
5.414 3.484 5.492 3.512 5.555 c 3.531 5.613 3.57 5.664 3.625 5.699 c 3.676
 5.734 3.738 5.75 3.801 5.75 c 3.855 5.75 3.906 5.738 3.953 5.719 c 3.996
 5.695 4.031 5.664 4.055 5.625 c 4.082 5.582 4.094 5.535 4.098 5.488 c 4.383
 5.488 l 4.383 5.516 l 4.387 5.516 l 4.383 5.605 4.352 5.695 4.301 5.77 
c 4.25 5.844 4.18 5.898 4.094 5.941 c 4.094 5.938 l 4.004 5.98 3.902 6.004
 3.801 6 c 3.664 6 3.551 5.973 3.457 5.918 c 3.363 5.863 3.289 5.781 3.242
 5.684 c 3.195 5.582 3.168 5.461 3.168 5.316 c 3.168 5.129 l 3.168 4.988
 3.191 4.863 3.242 4.762 c 3.293 4.66 3.363 4.578 3.457 4.523 c 3.551 4.469
 3.664 4.441 3.797 4.441 c 3.879 4.441 3.953 4.453 4.023 4.477 c 4.094 4.5
 4.156 4.535 4.207 4.578 c 4.211 4.582 l 4.316 4.672 4.383 4.805 4.387 4.945
 c 4.387 4.973 l 4.098 4.973 l 4.094 4.922 4.078 4.871 4.055 4.828 c 4.027
 4.789 3.992 4.754 3.953 4.73 c 3.906 4.707 3.855 4.691 3.801 4.695 c 3.738
 4.691 3.676 4.711 3.625 4.746 c 3.574 4.785 3.535 4.836 3.512 4.895 c 1.223
 4.473 m 1.223 5.973 l 0.926 5.973 l 0.926 5.328 l 0.297 5.328 l 0.297 5.973
 l 0 5.973 l 0 4.473 l 0.297 4.473 l 0.297 5.082 l 0.926 5.082 l 0.926 4.473
 l h
1.781 5.73 m 2.453 5.73 l 2.453 5.973 l 1.488 5.973 l 1.488 4.473 l 2.453
 4.473 l 2.453 4.715 l 1.781 4.715 l 1.781 5.098 l 2.414 5.098 l 2.414 5.324
 l 1.781 5.328 l h
2.969 5.973 m 2.969 4.473 l 2.672 4.473 l 2.672 5.973 l h
2.969 5.973 m f*
Q Q
showpage
%%Trailer
%%EOF
