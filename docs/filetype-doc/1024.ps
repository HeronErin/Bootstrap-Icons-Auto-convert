%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 576 720 l 588.73 720 600.938 714.941 609.941
 705.941 c 618.941 696.938 624 684.73 624 672 c 624 216 l 528 216 l 508.906
 216 490.59 208.414 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c
 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062
 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 
124.117 28.117 c 142.121 10.113 166.539 0 192 0 c 456 0 l h
295.727 655.969 m 295.727 681.023 l 295.727 693.312 293.855 703.566 290.109
 711.793 c 290.113 711.793 l 286.93 719.387 281.547 725.855 274.656 730.367
 c 267.848 734.41 260.059 736.5 252.145 736.414 c 244.195 736.52 236.371
 734.426 229.535 730.367 c 222.707 725.832 217.367 719.391 214.176 711.84
 c 210.137 702.082 208.223 691.578 208.559 681.023 c 208.559 655.969 l 208.559
 643.617 210.43 633.359 214.176 625.199 c 217.359 617.633 222.703 611.172
 229.535 606.625 c 236.328 602.445 244.172 600.297 252.145 600.434 c 260.594
 600.434 268.098 602.512 274.656 606.672 c 281.539 611.172 286.922 617.621
 290.113 625.199 c 293.855 633.359 295.73 643.613 295.73 655.969 c 334.273
 680.879 m 334.273 656.254 l 334.273 638.176 330.992 622.621 324.434 609.598
 c 324.434 609.602 l 318.27 596.902 308.414 586.363 296.16 579.359 c 283.969
 572.32 269.297 568.801 252.145 568.801 c 235.09 568.801 220.367 572.32 
207.984 579.359 c 195.715 586.277 185.848 596.777 179.711 609.457 c 173.184
 622.449 169.902 638.051 169.871 656.258 c 169.871 680.883 l 169.871 698.898
 173.152 714.469 179.711 727.586 c 186.27 740.578 195.711 750.609 208.031
 757.684 c 220.383 764.594 235.102 768.051 252.191 768.051 c 269.312 768.051
 283.969 764.594 296.16 757.684 c 308.418 750.645 317.855 740.613 324.48
 727.586 c 331.008 714.465 334.273 698.898 334.273 680.883 c 0 572.449 m
 0 764.449 l 70.031 764.449 l 89.328 764.449 105.312 760.641 117.984 753.023
 c 130.809 745.352 140.82 733.758 146.543 719.953 c 152.816 705.555 155.949
 688.211 155.949 667.922 c 155.949 647.762 152.812 630.562 146.543 616.32
 c 140.863 602.676 130.934 591.227 118.223 583.68 c 105.582 576.191 89.52
 572.449 70.031 572.449 c h
37.969 603.41 m 64.992 603.41 l 76.863 603.41 86.609 605.844 94.223 610.707
 c 94.223 610.703 l 102.121 615.91 108.09 623.566 111.215 632.496 c 114.992
 642.16 116.879 654.207 116.879 668.641 c 117.027 678.215 115.93 687.766
 113.617 697.055 c 111.961 704.402 108.754 711.309 104.207 717.312 c 100.031
 722.695 94.5 726.871 88.176 729.406 c 80.766 732.176 72.898 733.512 64.992
 733.344 c 37.922 733.344 l 37.922 603.359 l h
394.227 626.594 m 394.223 626.594 l 390.664 636.316 388.984 646.625 389.281
 656.977 c 389.281 680.738 l 389.281 692.547 390.93 702.578 394.227 710.836
 c 394.223 710.832 l 396.969 718.426 401.957 725.004 408.527 729.695 c 415.383
 734.023 423.371 736.215 431.473 735.984 c 438.129 736.078 444.715 734.633
 450.719 731.762 c 456.074 729.035 460.598 724.926 463.824 719.855 c 467.082
 714.57 469.008 708.578 469.441 702.383 c 506.16 702.383 l 506.16 706.031
 l 505.699 717.629 501.934 728.852 495.312 738.383 c 488.754 747.664 479.953
 754.926 468.914 760.176 c 468.91 760.176 l 457.09 765.605 444.191 768.297
 431.184 768.047 c 413.902 768.047 399.281 764.59 387.312 757.68 c 375.285
 750.723 365.707 740.207 359.902 727.586 c 353.695 714.531 350.59 698.914
 350.59 680.738 c 350.59 656.836 l 350.59 638.66 353.742 623.012 360.047
 609.891 c 366.285 596.738 375.422 586.609 387.453 579.508 c 399.551 572.371
 414.125 568.805 431.18 568.805 c 441.676 568.805 451.387 570.355 460.316
 573.461 c 469.277 576.438 477.102 580.789 483.789 586.516 c 483.793 586.512
 l 497.402 598.121 505.516 614.906 506.16 632.785 c 506.16 636.289 l 469.441
 636.289 l 468.992 629.836 467.02 623.586 463.68 618.047 c 460.543 612.75
 456.008 608.418 450.574 605.52 c 444.719 602.336 438.137 600.73 431.473
 600.863 c 423.363 600.609 415.383 602.926 408.672 607.488 c 402.094 612.309
 397.07 618.949 394.223 626.594 c f*
Q Q
showpage
%%Trailer
%%EOF
