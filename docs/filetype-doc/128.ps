%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 72 90 l 73.59 90 75.117 89.367 76.242 88.242 c 77.367 87.117
 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57 18 c 57 6 l 24 
6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12 5.371 17.371 0 
24 0 c 57 0 l h
36.965 81.996 m 36.965 85.129 l 36.965 86.664 36.73 87.945 36.262 88.977
 c 36.266 88.973 l 35.867 89.922 35.191 90.73 34.332 91.297 c 33.48 91.801
 32.508 92.062 31.52 92.051 c 30.523 92.066 29.547 91.805 28.691 91.297 
c 27.84 90.73 27.172 89.922 26.773 88.98 c 26.266 87.762 26.027 86.449 26.07
 85.129 c 26.07 81.996 l 26.07 80.453 26.305 79.172 26.773 78.148 c 27.168
 77.203 27.836 76.395 28.691 75.828 c 29.539 75.305 30.52 75.035 31.52 75.055
 c 32.574 75.055 33.512 75.316 34.332 75.836 c 35.191 76.395 35.863 77.203
 36.266 78.148 c 36.734 79.168 36.969 80.449 36.969 81.996 c 41.785 85.109
 m 41.785 82.031 l 41.785 79.77 41.375 77.828 40.555 76.199 c 39.785 74.613
 38.551 73.297 37.02 72.422 c 35.496 71.543 33.66 71.102 31.516 71.102 c
 29.383 71.102 27.543 71.543 25.996 72.422 c 24.465 73.285 23.23 74.598 
22.465 76.184 c 21.648 77.809 21.238 79.758 21.234 82.035 c 21.234 85.113
 l 21.234 87.367 21.645 89.312 22.465 90.953 c 23.285 92.578 24.465 93.832
 26.004 94.715 c 27.547 95.578 29.387 96.012 31.523 96.012 c 33.664 96.012
 35.496 95.578 37.02 94.715 c 38.551 93.836 39.73 92.582 40.559 90.953 c
 41.375 89.312 41.781 87.367 41.781 85.113 c 0 71.555 m 0 95.555 l 8.754
 95.555 l 11.164 95.555 13.164 95.078 14.746 94.125 c 14.746 94.129 l 16.352
 93.168 17.602 91.719 18.316 89.992 c 19.102 88.191 19.492 86.023 19.492
 83.488 c 19.492 80.969 19.102 78.816 18.316 77.039 c 17.609 75.336 16.367
 73.902 14.777 72.961 c 13.199 72.023 11.188 71.559 8.754 71.559 c h
4.746 75.426 m 8.125 75.426 l 9.609 75.426 10.828 75.73 11.777 76.336 c
 11.777 76.34 l 12.766 76.988 13.512 77.945 13.902 79.062 c 14.375 80.27
 14.609 81.777 14.609 83.582 c 14.609 83.578 l 14.629 84.777 14.492 85.969
 14.203 87.133 c 13.996 88.051 13.594 88.914 13.027 89.664 c 12.504 90.336
 11.812 90.859 11.023 91.176 c 10.098 91.523 9.113 91.688 8.125 91.668 c
 4.738 91.668 l 4.738 75.422 l h
49.277 78.324 m 48.832 79.539 48.625 80.828 48.66 82.121 c 48.66 85.09 
l 48.66 86.566 48.867 87.82 49.277 88.852 c 49.277 88.855 l 49.621 89.805
 50.246 90.625 51.066 91.211 c 51.922 91.754 52.922 92.027 53.934 91.996
 c 54.766 92.008 55.59 91.828 56.34 91.469 c 57.008 91.129 57.574 90.617
 57.977 89.98 c 58.387 89.32 58.625 88.57 58.68 87.797 c 63.27 87.797 l 
63.27 88.254 l 63.211 89.703 62.742 91.105 61.914 92.297 c 61.094 93.457
 59.992 94.363 58.613 95.02 c 58.613 95.023 l 57.137 95.699 55.523 96.039
 53.898 96.008 c 51.738 96.008 49.91 95.574 48.414 94.711 c 46.91 93.84 
45.715 92.527 44.988 90.949 c 44.211 89.316 43.824 87.363 43.824 85.094 
c 43.824 82.105 l 43.824 79.832 44.219 77.879 45.008 76.238 c 45.789 74.594
 46.93 73.328 48.434 72.441 c 49.945 71.551 51.77 71.102 53.898 71.102 c
 55.211 71.102 56.426 71.297 57.539 71.684 c 58.66 72.055 59.637 72.598 
60.473 73.316 c 60.473 73.312 l 62.176 74.766 63.191 76.863 63.27 79.098
 c 63.27 79.535 l 58.68 79.535 l 58.625 78.73 58.379 77.949 57.961 77.258
 c 57.566 76.594 57 76.051 56.32 75.691 c 55.59 75.293 54.766 75.09 53.934
 75.109 c 52.922 75.074 51.922 75.367 51.086 75.938 c 50.262 76.539 49.633
 77.367 49.277 78.324 c f*
Q Q
showpage
%%Trailer
%%EOF
