%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1152 1440 l 1177.461 1440 1201.879 1429.887 1219.883 1411.883
 c 1237.887 1393.879 1248 1369.461 1248 1344 c 1248 432 l 1056 432 l 1017.809
 432 981.184 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288
 c 912 96 l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113
 142.121 288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078
 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 
l h
591.457 1311.938 m 591.457 1362.051 l 591.457 1386.625 587.715 1407.141
 580.227 1423.586 c 580.223 1423.586 l 573.855 1438.773 563.09 1451.711 
549.312 1460.734 c 535.695 1468.816 520.121 1473 504.289 1472.832 c 488.391
 1473.035 472.742 1468.852 459.07 1460.734 c 445.418 1451.668 434.734 1438.777
 428.352 1423.68 c 420.277 1404.164 416.449 1383.156 417.121 1362.047 c 
417.121 1311.934 l 417.121 1287.23 420.863 1266.719 428.352 1250.398 c 434.719
 1235.266 445.402 1222.344 459.07 1213.246 c 472.652 1204.887 488.344 1200.59
 504.289 1200.863 c 521.184 1200.863 536.191 1205.023 549.312 1213.344 c
 563.078 1222.34 573.84 1235.246 580.223 1250.398 c 587.711 1266.719 591.453
 1287.23 591.453 1311.934 c 668.543 1361.758 m 668.543 1312.512 l 668.543
 1276.352 661.984 1245.246 648.863 1219.199 c 636.535 1193.805 616.828 1172.727
 592.32 1158.719 c 567.938 1144.641 538.594 1137.598 504.289 1137.598 c 
470.176 1137.598 440.738 1144.637 415.969 1158.719 c 391.426 1172.555 371.699
 1193.555 359.426 1218.91 c 346.371 1244.895 339.809 1276.094 339.746 1312.512
 c 339.746 1361.758 l 339.746 1397.789 346.305 1428.926 359.426 1455.164
 c 372.547 1481.148 391.426 1501.211 416.066 1515.355 c 440.77 1529.18 470.211
 1536.09 504.387 1536.09 c 538.625 1536.09 567.938 1529.18 592.324 1515.355
 c 616.836 1501.277 635.715 1481.211 648.965 1455.164 c 662.02 1428.926 
668.551 1397.789 668.551 1361.758 c 0 1144.895 m 0 1528.895 l 140.062 1528.895
 l 178.656 1528.895 210.621 1521.277 235.965 1506.047 c 235.969 1506.047
 l 261.613 1490.703 281.641 1467.512 293.09 1439.902 c 305.633 1411.102 
311.906 1376.414 311.906 1335.84 c 311.906 1295.52 305.633 1261.121 293.09
 1232.641 c 281.73 1205.348 261.863 1182.453 236.449 1167.359 c 211.168 
1152.383 179.043 1144.895 140.066 1144.895 c h
75.938 1206.816 m 129.984 1206.816 l 153.727 1206.816 173.215 1211.68 188.449
 1221.41 c 188.449 1221.406 l 204.242 1231.824 216.18 1247.137 222.434 1264.992
 c 229.984 1284.32 233.762 1308.418 233.762 1337.281 c 234.059 1356.426 
231.863 1375.531 227.23 1394.113 c 223.922 1408.805 217.504 1422.617 208.414
 1434.625 c 200.062 1445.391 188.996 1453.738 176.352 1458.816 c 161.535
 1464.355 145.801 1467.027 129.984 1466.688 c 75.84 1466.688 l 75.84 1206.719
 l h
788.449 1253.184 m 781.328 1272.629 777.973 1293.254 778.559 1313.953 c
 778.559 1361.473 l 778.559 1385.09 781.855 1405.152 788.445 1421.664 c 
788.449 1421.664 l 793.941 1436.848 803.918 1450.004 817.055 1459.391 c 
830.762 1468.051 846.738 1472.426 862.945 1471.969 c 876.254 1472.156 889.43
 1469.266 901.441 1463.52 c 912.148 1458.07 921.199 1449.848 927.648 1439.711
 c 934.16 1429.145 938.016 1417.152 938.879 1404.77 c 1012.32 1404.77 l 
1012.32 1412.066 l 1012.32 1412.062 l 1011.395 1435.258 1003.867 1457.703
 990.625 1476.77 c 977.504 1495.328 959.906 1509.859 937.824 1520.355 c 
937.824 1520.352 l 914.18 1531.215 888.383 1536.598 862.367 1536.098 c 827.809
 1536.098 798.559 1529.188 774.625 1515.363 c 774.625 1515.359 l 750.57 
1501.445 731.418 1480.418 719.809 1455.168 c 707.395 1429.055 701.184 1397.824
 701.184 1361.473 c 701.184 1313.664 l 701.184 1277.312 707.488 1246.016
 720.094 1219.777 c 732.574 1193.473 750.848 1173.219 774.91 1159.008 c 
799.102 1144.734 828.254 1137.602 862.367 1137.602 c 883.359 1137.602 902.781
 1140.707 920.641 1146.914 c 938.562 1152.867 954.207 1161.57 967.586 1173.027
 c 967.586 1173.023 l 994.805 1196.242 1011.031 1229.816 1012.32 1265.566
 c 1012.32 1272.574 l 938.879 1272.574 l 937.984 1259.676 934.035 1247.172
 927.359 1236.098 c 921.086 1225.5 912.02 1216.832 901.152 1211.039 c 889.441
 1204.672 876.273 1201.465 862.945 1201.727 c 846.727 1201.215 830.762 1205.855
 817.344 1214.977 c 804.188 1224.617 794.141 1237.898 788.449 1253.184 c
 f*
Q Q
showpage
%%Trailer
%%EOF
