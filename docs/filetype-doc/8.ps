%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766 5.516 c 4.836
 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 l 3.812 1.688 
3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125 0.543
 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086 0 
1.5 0 c 3.562 0 l h
2.309 5.125 m 2.309 5.32 l 2.309 5.418 2.293 5.496 2.266 5.562 c 2.242 
5.621 2.199 5.672 2.145 5.707 c 2.094 5.738 2.031 5.754 1.969 5.754 c 1.906
 5.754 1.848 5.738 1.793 5.707 c 1.738 5.672 1.699 5.621 1.672 5.562 c 1.641
 5.484 1.625 5.402 1.629 5.32 c 1.629 5.125 l 1.629 5.027 1.645 4.949 1.672
 4.883 c 1.699 4.824 1.738 4.773 1.793 4.738 c 1.848 4.707 1.906 4.691 1.969
 4.691 c 2.035 4.691 2.094 4.707 2.145 4.738 c 2.199 4.773 2.242 4.824 2.266
 4.883 c 2.293 4.945 2.309 5.027 2.309 5.125 c 2.609 5.32 m 2.609 5.129 
l 2.609 4.988 2.582 4.867 2.531 4.766 c 2.535 4.762 l 2.488 4.664 2.41 4.582
 2.312 4.527 c 2.219 4.473 2.102 4.445 1.969 4.445 c 1.836 4.445 1.719 4.473
 1.625 4.527 c 1.527 4.582 1.453 4.664 1.402 4.762 c 1.352 4.863 1.324 4.984
 1.324 5.129 c 1.324 5.32 l 1.324 5.461 1.352 5.582 1.402 5.684 c 1.453 
5.785 1.527 5.863 1.625 5.918 c 1.723 5.973 1.836 6 1.969 6 c 2.102 6 2.219
 5.973 2.312 5.918 c 2.41 5.863 2.48 5.785 2.535 5.684 c 2.586 5.582 2.613
 5.461 2.613 5.32 c 0 4.473 m 0 5.973 l 0.547 5.973 l 0.699 5.973 0.824 
5.941 0.922 5.883 c 1.023 5.824 1.102 5.734 1.145 5.625 c 1.195 5.512 1.219
 5.379 1.219 5.219 c 1.219 5.062 1.195 4.926 1.145 4.816 c 1.102 4.707 1.023
 4.617 0.922 4.559 c 0.824 4.5 0.699 4.473 0.547 4.473 c h
0.297 4.715 m 0.508 4.715 l 0.602 4.715 0.676 4.734 0.734 4.773 c 0.734
 4.77 l 0.797 4.812 0.844 4.871 0.867 4.941 c 0.898 5.016 0.91 5.109 0.91
 5.223 c 0.914 5.223 l 0.914 5.297 0.906 5.375 0.887 5.445 c 0.875 5.504
 0.852 5.559 0.812 5.605 c 0.781 5.645 0.738 5.68 0.688 5.699 c 0.633 5.719
 0.57 5.73 0.508 5.73 c 0.297 5.73 l h
3.082 4.895 m 3.078 4.895 l 3.051 4.973 3.039 5.051 3.043 5.133 c 3.043
 5.32 l 3.043 5.414 3.055 5.492 3.082 5.555 c 3.078 5.555 l 3.102 5.613 
3.141 5.664 3.191 5.699 c 3.246 5.734 3.309 5.75 3.371 5.75 c 3.422 5.75
 3.473 5.738 3.52 5.719 c 3.562 5.695 3.598 5.664 3.625 5.625 c 3.648 5.582
 3.664 5.535 3.668 5.488 c 3.953 5.488 l 3.953 5.516 l 3.949 5.605 3.922
 5.695 3.871 5.77 c 3.82 5.844 3.75 5.898 3.664 5.941 c 3.664 5.938 l 3.57
 5.98 3.469 6.004 3.367 6 c 3.23 6 3.117 5.973 3.023 5.918 c 3.027 5.918
 l 2.934 5.863 2.855 5.781 2.812 5.684 c 2.766 5.582 2.738 5.461 2.738 5.316
 c 2.738 5.129 l 2.738 4.988 2.762 4.863 2.812 4.762 c 2.859 4.66 2.934 
4.578 3.027 4.523 c 3.121 4.469 3.234 4.441 3.367 4.441 c 3.449 4.441 3.523
 4.453 3.594 4.477 c 3.664 4.5 3.727 4.535 3.777 4.578 c 3.781 4.582 l 3.887
 4.672 3.949 4.805 3.953 4.945 c 3.953 4.973 l 3.668 4.973 l 3.664 4.922
 3.648 4.871 3.621 4.828 c 3.598 4.789 3.562 4.754 3.52 4.73 c 3.473 4.707
 3.422 4.691 3.371 4.695 c 3.309 4.691 3.246 4.711 3.191 4.746 c 3.141 4.785
 3.102 4.836 3.078 4.895 c f*
Q Q
showpage
%%Trailer
%%EOF
