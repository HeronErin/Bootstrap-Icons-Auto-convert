%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 288 360 l 294.363 360 300.469 357.473 304.969
 352.969 c 309.473 348.469 312 342.363 312 336 c 312 108 l 264 108 l 254.453
 108 245.297 104.207 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c
 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531 
72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059
 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
147.863 327.984 m 147.863 340.512 l 147.863 346.656 146.926 351.785 145.055
 355.895 c 143.465 359.695 140.773 362.93 137.328 365.184 c 133.926 367.203
 130.031 368.25 126.07 368.207 c 122.098 368.258 118.188 367.211 114.77 
365.184 c 111.355 362.918 108.684 359.695 107.09 355.922 c 105.07 351.043
 104.113 345.789 104.281 340.512 c 104.281 327.984 l 104.281 321.809 105.219
 316.68 107.09 312.602 c 108.68 308.816 111.352 305.586 114.77 303.312 c
 118.164 301.223 122.086 300.148 126.07 300.215 c 130.293 300.215 134.047
 301.254 137.328 303.336 c 140.77 305.586 143.461 308.812 145.055 312.602
 c 146.926 316.68 147.863 321.809 147.863 327.984 c 167.137 340.441 m 167.137
 328.129 l 167.137 319.09 165.496 311.312 162.215 304.801 c 159.133 298.453
 154.207 293.18 148.078 289.68 c 141.98 286.16 134.645 284.398 126.07 284.398
 c 117.543 284.398 110.184 286.16 103.992 289.68 c 97.855 293.137 92.926
 298.391 89.855 304.727 c 86.59 311.223 84.953 319.023 84.934 328.125 c 
84.934 340.438 l 84.934 349.445 86.574 357.23 89.855 363.789 c 93.137 370.285
 97.855 375.301 104.016 378.836 c 110.191 382.293 117.551 384.02 126.094
 384.02 c 134.652 384.02 141.98 382.293 148.078 378.836 c 154.207 375.316
 158.926 370.301 162.238 363.789 c 165.504 357.23 167.133 349.445 167.133
 340.438 c 0 286.223 m 0 382.223 l 35.016 382.223 l 44.664 382.223 52.656
 380.32 58.992 376.512 c 65.402 372.676 70.41 366.879 73.273 359.977 c 76.41
 352.777 77.977 344.105 77.977 333.961 c 77.977 323.883 76.41 315.281 73.273
 308.16 c 70.434 301.336 65.465 295.613 59.113 291.84 c 52.793 288.098 44.762
 286.223 35.016 286.223 c h
18.984 301.703 m 32.496 301.703 l 38.434 301.703 43.305 302.918 47.113 
305.352 c 51.062 307.957 54.047 311.785 55.609 316.246 c 57.496 321.078 
58.441 327.102 58.441 334.316 c 58.441 334.32 l 58.516 339.105 57.965 343.883
 56.809 348.527 c 55.98 352.199 54.375 355.652 52.105 358.656 c 50.016 361.348
 47.25 363.434 44.09 364.703 c 40.383 366.09 36.449 366.758 32.496 366.672
 c 18.961 366.672 l 18.961 301.68 l h
197.113 313.297 m 195.332 318.156 194.492 323.312 194.641 328.488 c 194.641
 340.367 l 194.641 346.27 195.465 351.289 197.113 355.414 c 198.484 359.211
 200.98 362.5 204.266 364.848 c 207.691 367.012 211.684 368.105 215.734 
367.992 c 219.062 368.039 222.359 367.316 225.359 365.879 c 228.035 364.516
 230.301 362.461 231.91 359.93 c 233.539 357.285 234.504 354.289 234.719
 351.191 c 253.078 351.191 l 253.078 353.016 l 252.848 358.812 250.969 364.426
 247.656 369.191 c 244.375 373.832 239.977 377.465 234.457 380.086 c 234.457
 380.09 l 228.543 382.805 222.098 384.148 215.594 384.023 c 206.953 384.023
 199.641 382.297 193.656 378.84 c 187.641 375.363 182.855 370.105 179.953
 363.793 c 176.848 357.266 175.297 349.457 175.297 340.367 c 175.297 328.414
 l 175.297 319.324 176.871 311.504 180.023 304.941 c 183.145 298.367 187.711
 293.301 193.727 289.75 c 199.773 286.184 207.062 284.398 215.59 284.398
 c 220.836 284.398 225.695 285.176 230.156 286.727 c 234.637 288.215 238.547
 290.391 241.891 293.254 c 241.895 293.258 l 248.699 299.059 252.758 307.453
 253.078 316.391 c 253.078 318.145 l 234.719 318.145 l 234.496 314.918 233.508
 311.793 231.84 309.023 c 230.27 306.375 228.004 304.207 225.289 302.762
 c 222.359 301.168 219.066 300.367 215.734 300.434 c 211.68 300.305 207.691
 301.465 204.336 303.742 c 201.047 306.156 198.535 309.477 197.113 313.297
 c f*
Q Q
showpage
%%Trailer
%%EOF
