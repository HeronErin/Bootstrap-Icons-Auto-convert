%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 9 11.25 l 9.199 11.25 9.391 11.172 9.531 11.031 
c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
4.621 10.25 m 4.621 10.641 l 4.621 10.832 4.594 10.992 4.535 11.121 c 4.531
 11.121 l 4.484 11.242 4.398 11.34 4.293 11.41 c 4.184 11.477 4.062 11.508
 3.941 11.508 c 3.816 11.508 3.691 11.477 3.586 11.41 c 3.48 11.34 3.395
 11.242 3.348 11.121 c 3.285 10.969 3.254 10.805 3.258 10.641 c 3.258 10.25
 l 3.258 10.059 3.285 9.898 3.344 9.77 c 3.348 9.77 l 3.395 9.652 3.48 9.551
 3.586 9.477 c 3.691 9.414 3.816 9.379 3.941 9.383 c 4.074 9.383 4.191 9.414
 4.293 9.48 c 4.398 9.551 4.484 9.648 4.531 9.77 c 4.59 9.898 4.617 10.059
 4.617 10.25 c 5.219 10.641 m 5.219 10.258 l 5.219 9.977 5.168 9.73 5.066
 9.527 c 5.07 9.523 l 4.973 9.328 4.82 9.16 4.629 9.051 c 4.438 8.941 4.211
 8.887 3.941 8.887 c 3.676 8.887 3.445 8.941 3.25 9.051 c 3.059 9.16 2.902
 9.324 2.809 9.523 c 2.707 9.727 2.656 9.969 2.656 10.254 c 2.656 10.637
 l 2.656 10.918 2.707 11.16 2.809 11.367 c 2.91 11.57 3.059 11.727 3.25 
11.836 c 3.441 11.945 3.672 11.996 3.941 11.996 c 4.207 11.996 4.438 11.941
 4.629 11.836 c 4.82 11.727 4.969 11.57 5.07 11.367 c 5.172 11.164 5.223
 10.918 5.223 10.637 c 0 8.945 m 0 11.945 l 1.094 11.945 l 1.395 11.945 
1.645 11.887 1.844 11.766 c 2.043 11.645 2.199 11.465 2.289 11.25 c 2.387
 11.023 2.438 10.754 2.438 10.438 c 2.438 10.121 2.387 9.855 2.289 9.633
 c 2.289 9.629 l 2.199 9.418 2.047 9.238 1.848 9.121 c 1.648 9.004 1.398
 8.945 1.094 8.945 c h
0.594 9.43 m 1.016 9.43 l 1.199 9.43 1.352 9.469 1.473 9.543 c 1.594 9.625
 1.688 9.742 1.738 9.883 c 1.797 10.035 1.828 10.223 1.828 10.449 c 1.828
 10.598 1.812 10.746 1.773 10.891 c 1.75 11.008 1.699 11.113 1.629 11.207
 c 1.562 11.293 1.477 11.355 1.379 11.398 c 1.262 11.441 1.141 11.461 1.016
 11.457 c 0.594 11.457 l 0.594 9.426 l h
6.16 9.793 m 6.16 9.789 l 6.105 9.941 6.078 10.105 6.082 10.266 c 6.082
 10.637 l 6.082 10.82 6.109 10.977 6.16 11.105 c 6.203 11.227 6.281 11.328
 6.383 11.402 c 6.492 11.469 6.613 11.504 6.742 11.5 c 6.848 11.5 6.949 
11.48 7.043 11.434 c 7.125 11.391 7.195 11.328 7.246 11.246 c 7.297 11.164
 7.328 11.07 7.336 10.977 c 7.91 10.977 l 7.91 11.035 l 7.91 11.031 l 7.902
 11.215 7.844 11.387 7.738 11.539 c 7.637 11.684 7.5 11.797 7.324 11.879
 c 7.328 11.879 l 7.141 11.961 6.941 12.004 6.738 12 c 6.469 12 6.238 11.945
 6.055 11.84 c 6.051 11.84 l 5.863 11.73 5.715 11.566 5.625 11.367 c 5.527
 11.164 5.48 10.918 5.48 10.637 c 5.48 10.262 l 5.48 9.977 5.531 9.734 5.629
 9.527 c 5.727 9.32 5.871 9.164 6.059 9.051 c 6.246 8.938 6.477 8.883 6.742
 8.883 c 6.906 8.883 7.059 8.906 7.199 8.957 c 7.34 9.004 7.461 9.07 7.566
 9.16 c 7.559 9.164 l 7.773 9.344 7.898 9.609 7.91 9.887 c 7.91 9.941 l 
7.336 9.941 l 7.328 9.84 7.297 9.742 7.246 9.656 c 7.195 9.574 7.125 9.508
 7.039 9.461 c 6.949 9.41 6.848 9.387 6.742 9.387 c 6.613 9.383 6.492 9.422
 6.387 9.492 c 6.281 9.566 6.203 9.672 6.16 9.789 c f*
Q Q
showpage
%%Trailer
%%EOF
