%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 21 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 21 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 21 24 rectclip
1 0 0 -1 0 24 cm q
0 g
21 6.75 m 21 21 l 21 21.797 20.684 22.559 20.121 23.121 c 19.559 23.684
 18.797 24 18 24 c 18 22.5 l 18.398 22.5 18.781 22.344 19.062 22.062 c 19.344
 21.781 19.5 21.398 19.5 21 c 19.5 6.75 l 16.5 6.75 l 15.258 6.75 14.25 
5.742 14.25 4.5 c 14.25 1.5 l 6 1.5 l 5.172 1.5 4.5 2.172 4.5 3 c 4.5 16.5
 l 3 16.5 l 3 3 l 3 1.344 4.344 0 6 0 c 14.25 0 l h
9.242 20.5 m 9.242 21.281 l 9.242 21.664 9.184 21.984 9.066 22.242 c 8.965
 22.48 8.797 22.684 8.582 22.824 c 8.371 22.949 8.125 23.016 7.879 23.012
 c 7.633 23.016 7.387 22.949 7.172 22.824 c 6.961 22.684 6.793 22.48 6.691
 22.246 c 6.566 21.941 6.508 21.613 6.516 21.281 c 6.516 20.5 l 6.516 20.113
 6.574 19.793 6.691 19.539 c 6.793 19.301 6.961 19.098 7.172 18.957 c 7.387
 18.828 7.629 18.758 7.879 18.762 c 8.145 18.762 8.379 18.828 8.582 18.957
 c 8.797 19.098 8.965 19.301 9.066 19.539 c 9.184 19.793 9.242 20.113 9.242
 20.5 c 10.445 21.277 m 10.445 20.508 l 10.445 19.941 10.344 19.457 10.137
 19.051 c 9.945 18.652 9.637 18.324 9.254 18.105 c 8.871 17.887 8.414 17.777
 7.879 17.777 c 7.348 17.777 6.887 17.887 6.5 18.105 c 6.117 18.32 5.809
 18.648 5.617 19.047 c 5.414 19.453 5.312 19.941 5.309 20.508 c 5.309 21.277
 l 5.309 21.84 5.41 22.328 5.617 22.738 c 5.82 23.145 6.117 23.457 6.504
 23.68 c 6.891 23.895 7.352 24.004 7.883 24.004 c 8.418 24.004 8.875 23.895
 9.258 23.68 c 9.641 23.461 9.938 23.145 10.145 22.738 c 10.348 22.328 10.449
 21.84 10.449 21.277 c 0 17.891 m 0 23.891 l 2.188 23.891 l 2.789 23.891
 3.289 23.773 3.688 23.535 c 3.688 23.531 l 4.086 23.293 4.402 22.93 4.578
 22.5 c 4.773 22.051 4.871 21.508 4.871 20.875 c 4.871 20.246 4.773 19.707
 4.578 19.262 c 4.402 18.832 4.09 18.477 3.695 18.238 c 3.301 18.004 2.797
 17.887 2.188 17.887 c h
1.188 18.859 m 2.031 18.859 l 2.402 18.859 2.707 18.934 2.945 19.086 c 
3.191 19.246 3.379 19.488 3.477 19.766 c 3.594 20.066 3.652 20.445 3.652
 20.895 c 3.656 21.195 3.621 21.492 3.551 21.781 c 3.5 22.012 3.398 22.227
 3.258 22.414 c 3.125 22.586 2.953 22.715 2.754 22.793 c 2.523 22.879 2.277
 22.922 2.031 22.918 c 1.184 22.918 l 1.184 18.855 l h
12.32 19.582 m 12.207 19.887 12.156 20.207 12.164 20.531 c 12.164 21.273
 l 12.164 21.641 12.215 21.957 12.32 22.215 c 12.406 22.449 12.562 22.656
 12.766 22.805 c 12.98 22.938 13.23 23.008 13.484 23 c 13.691 23.004 13.898
 22.957 14.086 22.867 c 14.254 22.781 14.395 22.652 14.496 22.496 c 14.598
 22.332 14.656 22.145 14.672 21.949 c 15.82 21.949 l 15.82 22.062 l 15.816
 22.062 l 15.805 22.426 15.684 22.777 15.477 23.074 c 15.273 23.363 14.996
 23.59 14.652 23.754 c 14.285 23.926 13.883 24.008 13.473 24 c 12.934 24
 12.477 23.891 12.102 23.676 c 11.727 23.461 11.43 23.133 11.246 22.738 
c 11.051 22.332 10.957 21.844 10.957 21.273 c 10.957 20.527 l 10.957 19.961
 11.055 19.469 11.254 19.059 c 11.449 18.648 11.734 18.332 12.109 18.109
 c 12.488 17.887 12.941 17.773 13.477 17.773 c 13.805 17.773 14.109 17.82
 14.387 17.918 c 14.668 18.012 14.91 18.148 15.121 18.324 c 15.117 18.328
 l 15.543 18.691 15.797 19.215 15.816 19.773 c 15.816 19.883 l 14.672 19.883
 l 14.656 19.684 14.594 19.488 14.488 19.312 c 14.391 19.148 14.25 19.012
 14.082 18.922 c 13.898 18.824 13.691 18.773 13.484 18.777 c 13.23 18.77
 12.98 18.84 12.77 18.984 c 12.566 19.133 12.41 19.344 12.32 19.582 c f*
Q Q
showpage
%%Trailer
%%EOF
