%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
251.879 166.078 m 282.551 151.223 l 285.965 149.578 288.355 146.367 288.957
 142.629 c 289.559 138.891 288.297 135.09 285.574 132.457 c 279.527 126.602
 269.207 129.121 263.207 135.023 c 257.688 140.449 250.895 143.977 243.621
 147.742 c 241.172 149.039 l 233.059 153.312 234.836 164.062 243.57 166.703
 c 243.574 166.703 l 246.328 167.531 249.289 167.301 251.879 166.055 c h
185.785 235.391 m 185.785 234.719 l 185.781 231.691 187.16 228.828 189.531
 226.945 c 191.902 225.062 195.004 224.367 197.953 225.055 c 200.898 225.746
 203.371 227.742 204.664 230.484 c 205.953 233.223 205.922 236.398 204.574
 239.113 c 199.293 249.746 l 199.297 249.742 l 198.574 251.234 197.598 252.59
 196.414 253.754 c 191.781 258.195 l 191.785 258.191 l 190.18 259.961 187.914
 260.984 185.527 261.027 c 183.141 261.066 180.844 260.113 179.18 258.398
 c 177.52 256.684 176.641 254.359 176.754 251.973 c 176.871 249.586 177.965
 247.355 179.785 245.809 c 182.473 243.215 l 184.598 241.172 185.797 238.344
 185.785 235.391 c 136.129 300 m 147.695 305.594 l 150.238 306.832 153.211
 306.84 155.762 305.617 c 158.312 304.391 160.164 302.07 160.789 299.309
 c 161.414 296.551 160.742 293.656 158.969 291.453 c 157.195 289.25 154.508
 287.977 151.68 288 c 141.695 288 l 138.07 288 134.543 286.832 131.641 284.664
 c 124.992 279.719 l 123.332 278.469 121.211 277.996 119.176 278.414 c 117.141
 278.832 115.383 280.105 114.348 281.91 c 113.312 283.715 113.105 285.875
 113.773 287.844 c 114.441 289.812 115.922 291.398 117.84 292.199 c h
136.129 300 m f
192 0 m 141.078 0 92.242 20.227 56.234 56.234 c 20.227 92.242 0 141.078
 0 192 c 0 242.922 20.227 291.758 56.234 327.766 c 92.242 363.773 141.078
 384 192 384 c 242.922 384 291.758 363.773 327.766 327.766 c 363.773 291.758
 384 242.922 384 192 c 384 141.078 363.773 92.242 327.766 56.234 c 291.758
 20.227 242.922 0 192 0 c 38.688 260.809 m 56.832 229.898 l 56.832 229.895
 l 60.52 223.609 66.863 219.34 74.074 218.289 c 81.285 217.238 88.586 219.523
 93.91 224.496 c 119.688 248.617 l 124.121 252.77 129.984 255.062 136.062
 255.012 c 142.137 254.965 147.961 252.578 152.328 248.352 c 153.238 247.465
 l 158.098 242.77 160.418 236.035 159.48 229.344 c 157.68 216.191 168.359
 204.551 181.559 202.969 c 199.031 200.906 219.648 195.191 223.031 180 c
 225.094 170.734 220.297 160.078 214.367 151.199 c 209.398 143.711 214.367
 132 223.344 132 c 226.297 132 229.105 130.68 230.977 128.398 c 240.41 117.023
 l 245.113 111.336 252.195 108.191 259.539 107.352 c 272.836 105.816 293.309
 100.703 297.531 84 c 299.883 74.617 292.922 68.785 285.914 62.879 c 279.816
 57.789 273.676 52.656 273.555 45.094 c 273.551 45.098 l 305.426 62.781 
330.684 90.359 345.512 123.66 c 360.34 156.961 363.934 194.18 355.754 229.703
 c 355.082 229.164 354.387 228.66 353.664 228.191 c 346.078 223.297 l 339.051
 218.762 330.164 218.215 322.633 221.855 c 318.578 223.824 l 318.574 223.824
 l 313.023 226.5 306.656 226.938 300.793 225.047 c 276.289 217.152 l 273.906
 216.387 271.422 215.996 268.922 216 c 264.961 216 l 259.965 216 255.098
 217.562 251.031 220.461 c 246.969 223.359 243.906 227.457 242.281 232.176
 c 238.152 244.152 l 236.395 249.234 232.98 253.578 228.457 256.488 c 209.211
 268.922 l 209.207 268.922 l 202.359 273.336 198.219 280.93 198.215 289.078
 c 198.215 300 l 198.215 306.363 200.746 312.469 205.246 316.969 c 209.746
 321.473 215.852 324 222.215 324 c 228.383 324 l 233 324.004 237.516 325.336
 241.391 327.84 c 259.68 339.602 l 261.773 340.953 264.066 341.977 266.473
 342.625 c 239.398 356.016 209.215 361.859 179.102 359.543 c 148.984 357.223
 120.051 346.832 95.348 329.457 c 70.641 312.078 51.074 288.367 38.711 260.809
 c h
38.688 260.809 m f
Q Q
showpage
%%Trailer
%%EOF
