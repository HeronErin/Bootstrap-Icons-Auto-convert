%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1007.52 664.32 m 1130.207 604.895 l 1143.852 598.309 1153.418 585.473 1155.828
 570.516 c 1158.238 555.555 1153.191 540.363 1142.305 529.824 c 1118.113
 506.398 1076.832 516.48 1052.832 540.098 c 1030.754 561.793 1003.586 575.906
 974.496 590.977 c 964.703 596.16 l 932.254 613.25 939.359 656.258 974.305
 666.816 c 985.312 670.125 997.16 669.199 1007.52 664.223 c h
743.137 941.566 m 743.137 938.879 l 743.121 926.77 748.645 915.316 758.125
 907.785 c 767.609 900.254 780.016 897.469 791.809 900.227 c 803.602 902.98
 813.484 910.977 818.648 921.93 c 823.812 932.887 823.684 945.598 818.305
 956.449 c 797.184 998.977 l 794.297 1004.941 790.398 1010.367 785.664 1015.008
 c 767.137 1032.77 l 760.719 1039.844 751.66 1043.945 742.109 1044.102 c
 732.559 1044.258 723.367 1040.457 716.719 1033.598 c 710.074 1026.738 706.562
 1017.434 707.02 1007.891 c 707.477 998.352 711.863 989.426 719.137 983.23
 c 729.891 972.863 l 729.887 972.863 l 738.395 964.68 743.18 953.371 743.137
 941.566 c 544.512 1200 m 590.785 1222.367 l 600.957 1227.324 612.84 1227.359
 623.043 1222.465 c 633.246 1217.566 640.652 1208.277 643.152 1197.238 c
 645.652 1186.203 642.973 1174.625 635.875 1165.812 c 628.773 1156.996 618.035
 1151.91 606.719 1152 c 566.781 1152 l 566.785 1152 l 552.289 1152.008 538.18
 1147.324 526.559 1138.656 c 499.965 1118.879 l 499.969 1118.879 l 493.32
 1113.883 484.848 1111.98 476.703 1113.656 c 468.559 1115.328 461.523 1120.422
 457.391 1127.637 c 453.254 1134.852 452.418 1143.496 455.09 1151.371 c 
457.762 1159.242 463.688 1165.594 471.359 1168.801 c h
544.512 1200 m f
768 0 m 564.312 0 368.969 80.914 224.941 224.941 c 80.914 368.969 0 564.312
 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 368.969 1455.086 564.312
 1536 768 1536 c 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086
 1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059
 224.941 c 1167.031 80.914 971.688 0 768 0 c 154.754 1043.23 m 227.328 919.582
 l 227.328 919.586 l 242.078 894.438 267.453 877.359 296.301 873.156 c 325.148
 868.957 354.34 878.09 375.648 897.984 c 478.754 994.465 l 496.488 1011.086
 519.938 1020.246 544.242 1020.051 c 568.551 1019.852 591.848 1010.312 609.312
 993.406 c 612.961 989.855 l 632.395 971.078 641.672 944.137 637.922 917.375
 c 630.723 864.766 673.441 818.207 726.242 811.871 c 796.129 803.613 878.594
 780.766 892.129 720 c 900.387 682.945 881.184 640.32 857.473 604.801 c 
837.602 574.848 857.473 528 893.375 528 c 905.184 528 916.414 522.719 923.902
 513.602 c 961.629 468.098 l 980.445 445.344 1008.766 432.77 1038.141 429.41
 c 1091.324 423.266 1173.211 402.816 1190.109 336.004 c 1199.516 298.469
 1171.676 275.141 1143.645 251.523 c 1119.262 231.172 1094.684 210.629 1094.203
 180.387 c 1094.207 180.383 l 1221.707 251.133 1322.734 361.43 1382.047 
494.637 c 1441.359 627.84 1455.734 776.723 1423.008 918.816 c 1420.336 916.652
 1417.547 914.633 1414.656 912.77 c 1384.32 893.184 l 1356.195 875.047 1320.66
 872.867 1290.527 887.426 c 1274.305 895.297 l 1252.102 906 1226.629 907.754
 1203.168 900.191 c 1105.152 868.605 l 1105.152 868.609 l 1095.629 865.547
 1085.684 863.992 1075.68 864 c 1059.84 864 l 1039.867 864.008 1020.395 
870.246 1004.133 881.844 c 987.871 893.441 975.633 909.82 969.121 928.703
 c 952.609 976.605 l 952.609 976.609 l 945.574 996.938 931.914 1014.312 
913.824 1025.953 c 836.832 1075.68 l 809.434 1093.352 792.875 1123.719 792.863
 1156.32 c 792.863 1200 l 792.863 1225.461 802.977 1249.879 820.98 1267.883
 c 838.984 1285.887 863.402 1296 888.863 1296 c 913.535 1296 l 931.996 1296.012
 950.062 1301.344 965.566 1311.359 c 1038.719 1358.398 l 1047.094 1363.82
 1056.258 1367.898 1065.887 1370.496 c 957.594 1424.059 836.863 1447.434
 716.402 1438.164 c 595.945 1428.895 480.211 1387.32 381.387 1317.82 c 282.562
 1248.32 204.305 1153.461 154.848 1043.23 c h
154.754 1043.23 m f
Q Q
showpage
%%Trailer
%%EOF
