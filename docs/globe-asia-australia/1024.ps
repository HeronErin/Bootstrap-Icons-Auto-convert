%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
503.762 332.16 m 565.105 302.449 l 571.926 299.156 576.711 292.734 577.914
 285.258 c 579.121 277.777 576.594 270.18 571.152 264.91 c 559.055 253.199
 538.418 258.238 526.418 270.047 c 515.379 280.895 501.793 287.949 487.25
 295.488 c 482.355 298.082 l 466.133 306.625 469.684 328.129 487.156 333.41
 c 487.152 333.406 l 492.656 335.062 498.578 334.602 503.762 332.113 c h
371.566 470.785 m 371.566 469.441 l 371.562 463.387 374.32 457.66 379.062
 453.895 c 383.805 450.125 390.008 448.734 395.902 450.113 c 401.801 451.492
 406.742 455.488 409.324 460.965 c 411.906 466.441 411.844 472.801 409.152
 478.223 c 398.594 499.488 l 397.148 502.473 395.199 505.184 392.832 507.504
 c 383.566 516.383 l 380.359 519.922 375.828 521.973 371.055 522.051 c 366.277
 522.129 361.684 520.227 358.359 516.797 c 355.035 513.367 353.281 508.715
 353.512 503.945 c 353.738 499.176 355.93 494.711 359.566 491.617 c 364.941
 486.434 l 364.945 486.434 l 369.195 482.34 371.59 476.688 371.566 470.785
 c 272.258 600 m 295.395 611.184 l 295.391 611.184 l 300.48 613.664 306.422
 613.68 311.523 611.23 c 316.625 608.785 320.328 604.141 321.578 598.621
 c 322.828 593.102 321.484 587.312 317.938 582.906 c 314.387 578.5 309.02
 575.957 303.359 576 c 283.391 576 l 276.145 576.004 269.09 573.664 263.281
 569.328 c 249.984 559.441 l 246.66 556.941 242.426 555.988 238.352 556.828
 c 234.277 557.664 230.762 560.211 228.695 563.82 c 226.629 567.426 226.207
 571.746 227.547 575.684 c 228.883 579.621 231.844 582.797 235.68 584.398
 c h
272.258 600 m f
384 0 m 282.156 0 184.484 40.457 112.473 112.473 c 40.457 184.484 0 282.156
 0 384 c 0 485.844 40.457 583.516 112.473 655.527 c 184.484 727.543 282.156
 768 384 768 c 485.844 768 583.516 727.543 655.527 655.527 c 727.543 583.516
 768 485.844 768 384 c 768 282.156 727.543 184.484 655.527 112.473 c 583.516
 40.457 485.844 0 384 0 c 77.375 521.617 m 113.664 459.793 l 121.039 447.219
 133.727 438.68 148.148 436.578 c 162.574 434.477 177.172 439.047 187.824
 448.992 c 239.375 497.23 l 248.242 505.543 259.969 510.121 272.121 510.023
 c 284.273 509.926 295.922 505.156 304.656 496.703 c 306.48 494.926 l 306.48
 494.93 l 316.195 485.539 320.836 472.07 318.961 458.688 c 315.359 432.383
 336.723 409.102 363.121 405.934 c 398.066 401.805 439.297 390.383 446.066
 359.996 c 450.195 341.469 440.594 320.156 428.738 302.395 c 418.801 287.418
 428.738 263.996 446.691 263.996 c 452.594 263.996 458.211 261.355 461.957
 256.797 c 480.82 234.043 l 490.227 222.668 504.387 216.379 519.078 214.699
 c 545.672 211.629 586.613 201.402 595.062 167.996 c 599.766 149.227 585.848
 137.562 571.832 125.758 c 559.641 115.582 547.352 105.309 547.113 90.191
 c 547.105 90.191 l 610.855 125.566 661.367 180.715 691.023 247.316 c 720.68
 313.922 727.867 388.363 711.504 459.406 c 710.168 458.324 708.773 457.316
 707.328 456.383 c 692.16 446.59 l 692.16 446.594 l 678.098 437.523 660.328
 436.434 645.266 443.711 c 637.152 447.648 l 626.051 453 613.316 453.875
 601.586 450.098 c 552.578 434.305 l 552.574 434.305 l 547.812 432.773 542.844
 431.996 537.84 432 c 529.918 432 l 529.922 432 l 519.934 432.004 510.195
 435.121 502.066 440.922 c 493.934 446.719 487.816 454.91 484.559 464.352
 c 476.301 488.305 l 476.305 488.305 l 472.785 498.469 465.957 507.156 456.91
 512.977 c 418.414 537.84 l 404.719 546.676 396.438 561.859 396.434 578.16
 c 396.434 600 l 396.434 612.73 401.488 624.938 410.492 633.941 c 419.492
 642.941 431.703 648 444.434 648 c 456.77 648 l 465.996 648.004 475.031 
650.672 482.785 655.68 c 519.359 679.199 l 523.547 681.91 528.129 683.949
 532.945 685.246 c 478.797 712.027 418.43 723.719 358.203 719.082 c 297.973
 714.449 240.105 693.66 190.695 658.91 c 141.281 624.16 102.152 576.73 77.426
 521.617 c h
77.375 521.617 m f
Q Q
showpage
%%Trailer
%%EOF
