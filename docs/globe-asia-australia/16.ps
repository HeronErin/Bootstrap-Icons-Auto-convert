%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
7.871 5.191 m 8.828 4.727 l 8.938 4.676 9.012 4.574 9.031 4.457 c 9.047
 4.34 9.008 4.223 8.926 4.141 c 8.738 3.957 8.414 4.035 8.227 4.223 c 8.055
 4.391 7.844 4.504 7.613 4.621 c 7.535 4.66 l 7.281 4.793 7.336 5.129 7.609
 5.211 c 7.613 5.211 l 7.699 5.234 7.789 5.227 7.871 5.188 c h
5.805 7.355 m 5.805 7.336 l 5.805 7.242 5.848 7.152 5.922 7.094 c 5.996
 7.035 6.094 7.012 6.188 7.031 c 6.277 7.055 6.355 7.117 6.395 7.203 c 6.438
 7.289 6.434 7.387 6.395 7.473 c 6.23 7.805 l 6.227 7.805 l 6.207 7.852 
6.176 7.895 6.137 7.93 c 5.992 8.07 l 5.941 8.125 5.871 8.156 5.797 8.156
 c 5.723 8.16 5.652 8.129 5.598 8.074 c 5.547 8.02 5.52 7.949 5.523 7.875
 c 5.527 7.801 5.562 7.73 5.617 7.68 c 5.703 7.598 l 5.703 7.602 l 5.77 
7.535 5.805 7.449 5.805 7.355 c 4.254 9.375 m 4.617 9.551 l 4.695 9.59 4.789
 9.59 4.867 9.551 c 4.945 9.512 5.004 9.441 5.023 9.352 c 5.043 9.266 5.023
 9.176 4.969 9.109 c 4.914 9.039 4.828 9 4.738 9 c 4.426 9 l 4.43 9 l 4.316
 9 4.203 8.965 4.113 8.895 c 3.906 8.738 l 3.906 8.742 l 3.855 8.703 3.789
 8.688 3.723 8.699 c 3.66 8.715 3.605 8.754 3.574 8.809 c 3.543 8.867 3.535
 8.934 3.555 8.996 c 3.578 9.055 3.621 9.105 3.684 9.133 c h
4.254 9.375 m f
6 0 m 2.688 0 0 2.688 0 6 c 0 9.312 2.688 12 6 12 c 9.312 12 12 9.312 12
 6 c 12 2.688 9.312 0 6 0 c 1.211 8.148 m 1.777 7.184 l 1.891 6.988 2.09
 6.855 2.316 6.82 c 2.539 6.789 2.77 6.859 2.934 7.016 c 3.738 7.77 l 3.742
 7.77 l 4.027 8.039 4.477 8.035 4.762 7.762 c 4.789 7.734 l 4.941 7.586 
5.012 7.375 4.984 7.168 c 4.93 6.758 5.262 6.395 5.676 6.344 c 6.223 6.277
 6.867 6.102 6.973 5.625 c 7.039 5.336 6.887 5.004 6.703 4.727 c 6.547 4.492
 6.703 4.125 6.984 4.125 c 7.078 4.125 7.164 4.082 7.223 4.012 c 7.516 3.656
 l 7.664 3.477 7.883 3.379 8.113 3.355 c 8.527 3.309 9.168 3.148 9.301 2.625
 c 9.375 2.332 9.156 2.148 8.938 1.965 c 8.746 1.805 8.555 1.645 8.551 1.41
 c 8.547 1.41 l 10.594 2.543 11.641 4.898 11.117 7.18 c 11.098 7.16 11.074
 7.145 11.051 7.133 c 10.812 6.98 l 10.816 6.977 l 10.594 6.836 10.316 6.82
 10.082 6.934 c 9.957 6.996 l 9.781 7.078 9.582 7.094 9.398 7.031 c 8.633
 6.785 l 8.559 6.762 8.48 6.75 8.402 6.75 c 8.277 6.75 l 8.281 6.75 l 7.961
 6.75 7.676 6.953 7.57 7.254 c 7.441 7.629 l 7.387 7.789 7.281 7.926 7.141
 8.016 c 6.539 8.402 l 6.324 8.543 6.195 8.777 6.195 9.035 c 6.195 9.375
 l 6.195 9.574 6.273 9.766 6.414 9.906 c 6.555 10.047 6.746 10.125 6.945
 10.125 c 7.137 10.125 l 7.281 10.125 7.422 10.168 7.543 10.246 c 8.113 
10.613 l 8.18 10.656 8.254 10.688 8.328 10.707 c 7.047 11.34 5.566 11.426
 4.227 10.941 c 2.883 10.461 1.793 9.453 1.211 8.148 c h
1.211 8.148 m f
Q Q
showpage
%%Trailer
%%EOF
