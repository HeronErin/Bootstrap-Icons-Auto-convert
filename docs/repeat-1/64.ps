%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 42 rectclip
1 0 0 -1 0 48 cm q
0 g
33 12 m 33 16.398 l 33 16.688 33.168 16.953 33.434 17.078 c 33.695 17.199
 34.008 17.16 34.23 16.973 c 41.309 11.074 l 41.48 10.934 41.578 10.723 
41.578 10.5 c 41.578 10.277 41.48 10.066 41.309 9.926 c 34.23 4.027 l 34.008
 3.84 33.695 3.801 33.434 3.922 c 33.168 4.047 33 4.312 33 4.602 c 33 9 
l 15 9 l 9.809 9 4.984 11.684 2.25 16.094 c -0.488 20.504 -0.75 26.02 1.559
 30.668 c 1.93 31.41 2.832 31.715 3.574 31.344 c 4.316 30.973 4.617 30.074
 4.246 29.332 c 2.402 25.609 2.613 21.203 4.801 17.676 c 6.992 14.145 10.848
 12 15 12 c h
46.441 17.332 m 46.07 16.59 45.168 16.285 44.426 16.656 c 43.684 17.027
 43.383 17.926 43.754 18.668 c 45.598 22.391 45.387 26.797 43.199 30.324
 c 41.008 33.855 37.152 36 33 36 c 15.004 36 l 15.004 31.602 l 15.004 31.312
 14.836 31.047 14.57 30.922 c 14.309 30.801 13.996 30.84 13.773 31.027 c
 6.695 36.926 l 6.691 36.926 l 6.523 37.066 6.422 37.277 6.422 37.5 c 6.422
 37.723 6.523 37.934 6.691 38.074 c 13.77 43.973 l 13.773 43.973 l 13.996
 44.16 14.309 44.199 14.57 44.078 c 14.836 43.953 15.004 43.688 15.004 43.398
 c 15.004 39 l 33.004 39 l 38.195 39 43.02 36.316 45.754 31.906 c 48.492
 27.496 48.75 21.98 46.441 17.332 c h
46.441 17.332 m f
27 16.5 m 27 15.891 26.637 15.344 26.074 15.113 c 25.512 14.879 24.867 
15.008 24.438 15.438 c 19.188 20.688 l 18.602 21.273 18.602 22.227 19.188
 22.812 c 19.773 23.398 20.727 23.398 21.312 22.812 c 24 20.121 l 24 31.5
 l 24 32.328 24.672 33 25.5 33 c 26.328 33 27 32.328 27 31.5 c h
27 16.5 m f
Q Q
showpage
%%Trailer
%%EOF
