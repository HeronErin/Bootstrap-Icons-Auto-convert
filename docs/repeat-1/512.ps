%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 30 384 354
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 30 384 354
384 384 cairo_set_page_size
%%EndPageSetup
q 0 30 384 324 rectclip
1 0 0 -1 0 384 cm q
0 g
264 96 m 264 131.184 l 264 133.512 265.348 135.629 267.457 136.617 c 269.562
 137.602 272.051 137.281 273.84 135.793 c 330.48 88.609 l 331.848 87.469
 332.637 85.781 332.637 84 c 332.637 82.219 331.848 80.531 330.48 79.391
 c 273.84 32.207 l 272.051 30.719 269.562 30.398 267.457 31.383 c 265.348
 32.371 264 34.488 264 36.816 c 264 72 l 120 72 l 78.469 71.988 39.883 93.453
 17.988 128.75 c -3.902 164.043 -5.984 208.148 12.48 245.352 c 15.438 251.289
 22.645 253.707 28.586 250.754 c 34.523 247.797 36.941 240.586 33.984 234.648
 c 19.227 204.891 20.902 169.617 38.414 141.391 c 55.926 113.164 86.785 
95.996 120 96 c h
371.52 138.648 m 368.562 132.711 361.355 130.293 355.414 133.246 c 349.477
 136.203 347.059 143.414 350.016 149.352 c 364.773 179.109 363.098 214.383
 345.586 242.609 c 328.074 270.836 297.215 288.004 264 288 c 120.023 288
 l 120.023 252.816 l 120.023 250.488 118.676 248.371 116.57 247.383 c 114.461
 246.398 111.973 246.719 110.184 248.207 c 53.543 295.391 l 52.176 296.531
 51.387 298.219 51.387 300 c 51.387 301.781 52.176 303.469 53.543 304.609
 c 110.184 351.793 l 111.973 353.281 114.461 353.602 116.57 352.617 c 118.676
 351.629 120.023 349.512 120.023 347.184 c 120.023 312 l 264.023 312 l 305.559
 312.012 344.141 290.547 366.035 255.25 c 387.926 219.957 390.008 175.852
 371.543 138.648 c h
371.52 138.648 m f
216 132 m 216.008 127.141 213.086 122.754 208.594 120.895 c 204.105 119.031
 198.938 120.062 195.504 123.504 c 153.504 165.504 l 148.812 170.195 148.812
 177.805 153.504 182.496 c 158.195 187.188 165.805 187.188 170.496 182.496
 c 192 160.969 l 192 252 l 192 258.629 197.371 264 204 264 c 210.629 264
 216 258.629 216 252 c h
216 132 m f
Q Q
showpage
%%Trailer
%%EOF
