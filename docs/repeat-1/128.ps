%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 7 96 89
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 7 96 89
96 96 cairo_set_page_size
%%EndPageSetup
q 0 7 96 82 rectclip
1 0 0 -1 0 96 cm q
0 g
66 24 m 66 32.797 l 66 33.379 66.336 33.906 66.863 34.152 c 67.391 34.402
 68.012 34.32 68.461 33.949 c 82.621 22.152 l 82.961 21.867 83.16 21.445
 83.16 21 c 83.16 20.555 82.961 20.133 82.621 19.848 c 68.461 8.051 l 68.012
 7.68 67.391 7.598 66.863 7.848 c 66.336 8.094 66 8.621 66 9.203 c 66 18
 l 30 18 l 19.617 17.996 9.969 23.363 4.496 32.188 c -0.977 41.012 -1.496
 52.039 3.121 61.34 c 3.859 62.824 5.66 63.426 7.145 62.688 c 8.629 61.949
 9.234 60.148 8.496 58.66 c 4.809 51.223 5.227 42.402 9.605 35.348 c 13.98
 28.293 21.695 24 30 24 c h
92.879 34.66 m 92.141 33.176 90.34 32.574 88.855 33.312 c 87.371 34.051
 86.766 35.852 87.504 37.34 c 91.191 44.777 90.773 53.598 86.395 60.652 
c 82.02 67.707 74.305 72 66 72 c 30.008 72 l 30.008 63.203 l 30.004 62.621
 29.668 62.094 29.141 61.848 c 28.613 61.598 27.992 61.68 27.547 62.051 
c 13.387 73.848 l 13.043 74.133 12.848 74.555 12.848 75 c 12.848 75.445 
13.043 75.867 13.387 76.152 c 27.547 87.949 l 27.992 88.32 28.613 88.402
 29.141 88.152 c 29.668 87.906 30.004 87.379 30.008 86.797 c 30.008 78 l
 66.008 78 l 76.391 78.004 86.035 72.637 91.508 63.812 c 96.98 54.988 97.504
 43.961 92.887 34.66 c h
92.879 34.66 m f
54 33 m 54.004 31.785 53.27 30.688 52.148 30.223 c 51.027 29.758 49.734
 30.016 48.875 30.875 c 38.375 41.375 l 37.203 42.551 37.203 44.449 38.375
 45.625 c 39.551 46.797 41.449 46.797 42.625 45.625 c 48 40.242 l 48 63 
l 48 64.656 49.344 66 51 66 c 52.656 66 54 64.656 54 63 c h
54 33 m f
Q Q
showpage
%%Trailer
%%EOF
