%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 15 192 177
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 15 192 177
192 192 cairo_set_page_size
%%EndPageSetup
q 0 15 192 162 rectclip
1 0 0 -1 0 192 cm q
0 g
132 48 m 132 65.594 l 132 66.754 132.676 67.812 133.727 68.309 c 134.781
 68.801 136.027 68.641 136.922 67.895 c 165.242 44.301 l 165.238 44.305 
l 165.922 43.734 166.32 42.891 166.32 42 c 166.32 41.109 165.922 40.266 
165.238 39.695 c 136.918 16.102 l 136.922 16.105 l 136.027 15.359 134.781
 15.199 133.727 15.691 c 132.676 16.188 132 17.246 132 18.406 c 132 36 l
 60 36 l 39.234 35.996 19.941 46.727 8.996 64.375 c -1.949 82.023 -2.992
 104.074 6.238 122.676 c 7.719 125.645 11.324 126.855 14.293 125.375 c 17.262
 123.898 18.469 120.293 16.992 117.324 c 9.613 102.445 10.453 84.809 19.207
 70.695 c 27.961 56.582 43.391 48 60 48 c h
185.762 69.324 m 184.281 66.355 180.676 65.145 177.707 66.625 c 174.738
 68.102 173.531 71.707 175.008 74.676 c 182.387 89.555 181.547 107.191 172.793
 121.305 c 164.039 135.418 148.609 144 132 144 c 60.012 144 l 60.012 126.406
 l 60.012 125.246 59.34 124.188 58.285 123.691 c 57.23 123.199 55.984 123.359
 55.094 124.105 c 26.773 147.699 l 26.773 147.695 l 26.09 148.266 25.691
 149.109 25.691 150 c 25.691 150.891 26.09 151.734 26.773 152.305 c 55.094
 175.898 l 55.094 175.895 l 55.984 176.641 57.23 176.801 58.285 176.309 
c 59.34 175.812 60.012 174.754 60.012 173.594 c 60.012 156 l 132.012 156
 l 152.777 156.004 172.07 145.273 183.016 127.625 c 193.961 109.977 195.004
 87.926 185.773 69.324 c h
185.762 69.324 m f
108 66 m 108.004 63.57 106.543 61.379 104.297 60.445 c 102.051 59.516 99.469
 60.031 97.754 61.754 c 76.754 82.754 l 74.406 85.098 74.406 88.902 76.754
 91.246 c 79.098 93.594 82.902 93.594 85.246 91.246 c 96 80.484 l 96 126
 l 96 129.312 98.688 132 102 132 c 105.312 132 108 129.312 108 126 c h
108 66 m f
Q Q
showpage
%%Trailer
%%EOF
