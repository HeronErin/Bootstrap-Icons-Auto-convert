%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
58.512 37.156 m 62.105 40.758 68.891 39.777 73.68 34.984 c 78.469 30.191
 79.441 23.391 75.852 19.797 c 72.258 16.195 65.473 17.168 60.684 21.961
 c 55.895 26.762 54.922 33.559 58.512 37.152 c f
94.867 19.871 m 92.688 29.074 86.863 41.629 73.027 57.18 c 71.586 71.629
 l 71.203 75.09 69.652 78.316 67.195 80.785 c 52.902 95.102 l 51.973 96.043
 50.539 96.277 49.355 95.684 c 48.172 95.094 47.504 93.805 47.699 92.496
 c 49.32 81.102 l 49.559 79.422 49.242 77.543 48.535 75.367 c 48.086 74.031
 47.59 72.719 47.039 71.426 c 46.547 70.215 l 41.656 69.031 37.078 66.242
 33.402 62.555 c 29.719 58.863 26.93 54.281 25.754 49.383 c 24.535 48.887
 l 24.535 48.883 l 23.242 48.34 21.93 47.844 20.605 47.395 c 18.426 46.68
 16.555 46.363 14.875 46.602 c 3.5 48.223 l 3.496 48.223 l 2.191 48.414 
0.906 47.746 0.316 46.562 c -0.277 45.379 -0.039 43.949 0.898 43.02 c 15.191
 28.703 l 17.652 26.242 20.875 24.684 24.336 24.301 c 24.371 24.301 l 38.77
 22.871 l 54.031 9.301 66.523 3.492 75.738 1.246 c 81.078 -0.055 85.277 
-0.145 88.219 0.117 c 89.684 0.254 90.828 0.477 91.641 0.676 c 92.039 0.781
 92.359 0.871 92.602 0.945 c 93.707 1.305 94.277 1.727 94.707 2.715 c 94.883
 3.152 l 94.879 3.156 l 95.344 4.562 95.66 6.012 95.82 7.48 c 96.148 10.391
 96.125 14.547 94.867 19.871 c 65.898 64.723 m 66.137 64.484 l 65.496 70.969
 l 65.258 73.039 64.328 74.969 62.855 76.445 c 55.066 84.246 l 55.391 81.965
 l 55.824 78.93 55.188 76.008 54.359 73.457 c 54.055 72.551 53.727 71.648
 53.375 70.758 c 57.805 70.367 62.148 68.477 65.898 64.723 c 31.23 30 m 
27.48 33.758 25.59 38.105 25.207 42.539 c 24.316 42.188 23.414 41.859 22.508
 41.555 c 19.965 40.727 17.047 40.09 14.012 40.523 c 11.73 40.848 l 19.531
 33.047 l 21 31.57 22.926 30.641 24.992 30.406 c 31.473 29.766 l h
87.668 6.234 m 85.387 6.031 81.867 6.074 77.191 7.211 c 67.844 9.492 53.688
 16.188 35.57 34.336 c 31.852 38.055 30.777 42.375 31.449 46.641 c 32.09
 50.695 34.348 54.812 37.738 58.207 c 41.121 61.598 45.238 63.852 49.281
 64.5 c 53.543 65.172 57.855 64.098 61.57 60.371 c 80.043 41.875 86.723 
27.707 88.906 18.449 c 90.004 13.824 89.984 10.379 89.734 8.172 c 89.73 
8.18 l 89.668 7.609 89.578 7.043 89.461 6.48 c 88.863 6.367 88.266 6.285
 87.66 6.234 c h
87.668 6.234 m f
42.055 72.836 m 38.062 70.684 34.414 67.949 31.23 64.723 c 27.816 61.34
 24.961 57.438 22.766 53.16 c 16.152 59.113 10.977 83.484 11.73 84.238 c
 12.48 84.996 35.348 78.863 42.055 72.828 c h
42.055 72.836 m f
Q Q
showpage
%%Trailer
%%EOF
