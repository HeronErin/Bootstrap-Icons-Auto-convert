%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
29.258 18.578 m 31.055 20.379 34.449 19.891 36.844 17.492 c 39.238 15.094
 39.723 11.695 37.93 9.898 c 36.133 8.098 32.738 8.586 30.344 10.98 c 27.949
 13.379 27.465 16.781 29.258 18.578 c f
47.434 9.938 m 46.344 14.539 43.43 20.816 36.512 28.59 c 35.793 35.812 
l 35.602 37.543 34.828 39.16 33.598 40.391 c 26.449 47.551 l 25.984 48.02
 25.27 48.137 24.68 47.844 c 24.086 47.547 23.754 46.902 23.852 46.246 c
 24.66 40.551 l 24.781 39.711 24.621 38.773 24.266 37.684 c 24.043 37.016
 23.793 36.359 23.52 35.711 c 23.273 35.105 l 20.828 34.516 18.539 33.121
 16.699 31.273 c 14.855 29.43 13.461 27.137 12.875 24.688 c 12.266 24.438
 l 12.266 24.441 l 11.621 24.172 10.965 23.922 10.301 23.695 c 9.211 23.34
 8.277 23.18 7.438 23.301 c 1.75 24.109 l 1.094 24.207 0.453 23.871 0.156
 23.281 c -0.137 22.688 -0.02 21.977 0.449 21.512 c 7.594 14.355 l 8.824
 13.125 10.434 12.344 12.164 12.152 c 12.184 12.152 l 19.383 11.438 l 27.016
 4.648 33.262 1.746 37.867 0.625 c 40.539 -0.027 42.637 -0.07 44.105 0.062
 c 44.836 0.133 45.41 0.242 45.816 0.34 c 46.016 0.391 46.176 0.438 46.297
 0.477 c 46.848 0.656 47.133 0.867 47.352 1.363 c 47.438 1.582 l 47.438 
1.578 l 47.672 2.281 47.828 3.004 47.91 3.742 c 48.074 5.195 48.062 7.277
 47.434 9.938 c 32.949 32.363 m 33.07 32.242 l 32.75 35.484 l 32.746 35.484
 l 32.629 36.52 32.164 37.484 31.43 38.223 c 27.535 42.121 l 27.695 40.98
 l 27.91 39.461 27.594 38 27.18 36.727 c 27.18 36.73 l 27.027 36.273 26.863
 35.824 26.688 35.379 c 28.902 35.184 31.074 34.238 32.949 32.359 c 15.613
 15 m 13.738 16.879 12.793 19.055 12.602 21.27 c 12.156 21.094 11.707 20.93
 11.254 20.777 c 9.98 20.363 8.523 20.047 7.008 20.262 c 5.867 20.422 l 
9.766 16.523 l 10.5 15.785 11.465 15.32 12.496 15.203 c 15.734 14.883 l 
h
43.832 3.117 m 42.691 3.016 40.93 3.035 38.594 3.605 c 33.918 4.746 26.844
 8.094 17.781 17.168 c 15.922 19.027 15.383 21.188 15.719 23.32 c 16.039
 25.348 17.168 27.406 18.863 29.105 c 20.555 30.801 22.613 31.93 24.637 
32.254 c 26.766 32.59 28.922 32.055 30.781 30.191 c 40.02 20.941 43.355 
13.859 44.449 9.23 c 45 6.918 44.988 5.195 44.863 4.09 c 44.832 3.805 44.789
 3.52 44.73 3.238 c 44.434 3.184 44.133 3.145 43.828 3.117 c h
43.832 3.117 m f
21.027 36.418 m 19.031 35.34 17.207 33.973 15.613 32.359 c 13.906 30.668
 12.48 28.719 11.383 26.578 c 8.078 29.555 5.488 41.738 5.867 42.117 c 6.242
 42.496 17.676 39.43 21.027 36.41 c h
21.027 36.418 m f
Q Q
showpage
%%Trailer
%%EOF
