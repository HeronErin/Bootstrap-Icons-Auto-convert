%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
117.023 74.316 m 124.211 81.516 137.785 79.559 147.359 69.973 c 156.934
 60.383 158.879 46.789 151.703 39.602 c 144.516 32.402 130.941 34.344 121.367
 43.934 c 111.793 53.535 109.848 67.129 117.023 74.316 c f
189.73 39.742 m 185.375 58.148 173.723 83.254 146.051 114.359 c 143.172
 143.254 l 143.172 143.258 l 142.406 150.18 139.309 156.637 134.387 161.566
 c 105.805 190.199 l 103.941 192.082 101.082 192.555 98.715 191.367 c 96.348
 190.184 95.008 187.609 95.398 184.992 c 98.637 162.203 l 99.117 158.844
 98.48 155.086 97.066 150.73 c 96.176 148.066 95.18 145.438 94.078 142.848
 c 93.094 140.422 l 83.312 138.059 74.156 132.477 66.801 125.098 c 59.434
 117.719 53.852 108.551 51.5 98.758 c 49.062 97.762 l 49.066 97.766 l 46.484
 96.68 43.863 95.688 41.207 94.789 c 36.852 93.359 33.105 92.727 29.746 
93.203 c 6.992 96.441 l 6.996 96.445 l 4.379 96.828 1.812 95.488 0.629 93.125
 c -0.551 90.758 -0.078 87.902 1.801 86.039 c 30.387 57.406 l 35.309 52.484
 41.75 49.367 48.676 48.598 c 48.746 48.598 l 77.547 45.742 l 108.059 18.602
 133.043 6.984 151.477 2.496 c 162.156 -0.109 170.555 -0.289 176.438 0.238
 c 179.367 0.516 181.656 0.957 183.277 1.355 c 184.078 1.562 184.719 1.742
 185.199 1.895 c 187.406 2.613 188.547 3.453 189.41 5.434 c 189.758 6.309
 l 189.758 6.312 l 190.688 9.121 191.32 12.023 191.641 14.965 c 192.301 
20.785 192.254 29.102 189.734 39.746 c 131.797 129.445 m 132.277 128.965
 l 130.992 141.938 l 130.52 146.078 128.656 149.941 125.711 152.891 c 110.137
 168.492 l 110.785 163.934 l 111.648 157.863 110.379 152.02 108.723 146.918
 c 108.719 146.914 l 108.113 145.098 107.457 143.297 106.754 141.516 c 115.609
 140.734 124.297 136.957 131.797 129.445 c 62.461 60 m 54.961 67.512 51.18
 76.211 50.414 85.078 c 50.41 85.078 l 48.629 84.375 46.828 83.719 45.012
 83.113 c 39.922 81.457 34.09 80.184 28.02 81.051 c 23.461 81.699 l 39.062
 66.098 l 42.004 63.145 45.855 61.285 49.984 60.816 c 62.945 59.531 l h
175.332 12.469 m 170.773 12.062 163.727 12.145 154.379 14.426 c 135.684
 18.984 107.375 32.379 71.137 68.68 c 63.695 76.121 61.547 84.758 62.895
 93.293 c 64.18 101.406 68.691 109.637 75.469 116.43 c 82.238 123.211 90.469
 127.723 98.559 129.02 c 107.078 130.363 115.707 128.215 123.133 120.762
 c 160.082 83.766 173.438 55.434 177.805 36.918 c 180 27.664 179.965 20.777
 179.461 16.363 c 179.461 16.355 l 179.336 15.215 179.152 14.082 178.922
 12.961 c 177.73 12.734 176.527 12.57 175.32 12.469 c h
175.332 12.469 m f
84.109 145.668 m 76.125 141.367 68.828 135.898 62.461 129.445 c 55.633 
122.676 49.918 114.871 45.527 106.32 c 32.305 118.223 21.949 166.969 23.461
 168.48 c 24.961 169.992 70.691 157.727 84.109 145.656 c h
84.109 145.668 m f
Q Q
showpage
%%Trailer
%%EOF
