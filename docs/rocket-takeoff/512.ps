%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
234.047 148.633 m 248.422 163.031 275.566 159.121 294.719 139.945 c 313.871
 120.77 317.758 93.578 303.406 79.203 c 289.031 64.805 261.887 68.691 242.734
 87.867 c 223.582 107.066 219.695 134.258 234.047 148.637 c f
379.465 79.488 m 370.754 116.305 347.449 166.512 292.105 228.719 c 286.344
 286.512 l 284.809 300.359 278.613 313.273 268.777 323.137 c 211.609 380.398
 l 207.883 384.164 202.16 385.109 197.426 382.738 c 192.691 380.367 190.016
 375.223 190.801 369.984 c 197.281 324.41 l 198.242 317.691 196.969 310.18
 194.137 301.465 c 192.352 296.133 190.355 290.871 188.16 285.695 c 186.191
 280.848 l 166.633 276.121 148.32 264.961 133.605 250.199 c 118.871 235.438
 107.711 217.102 103.004 197.52 c 98.133 195.527 l 98.137 195.527 l 92.969
 193.359 87.723 191.375 82.414 189.574 c 73.703 186.719 66.215 185.445 59.492
 186.406 c 13.988 192.887 l 13.992 192.887 l 8.758 193.656 3.625 190.98 
1.262 186.246 c -1.102 181.516 -0.16 175.801 3.602 172.078 c 60.77 114.812
 l 70.609 104.973 83.496 98.734 97.344 97.195 c 97.488 97.195 l 155.09 91.484
 l 216.121 37.199 266.09 13.969 302.953 4.992 c 324.312 -0.215 341.113 -0.574
 352.875 0.48 c 358.73 1.031 363.316 1.922 366.555 2.711 c 368.156 3.125
 369.434 3.488 370.395 3.789 c 374.809 5.23 377.09 6.91 378.82 10.867 c 
379.516 12.621 l 379.512 12.625 l 381.375 18.242 382.637 24.043 383.281 
29.93 c 384.602 41.57 384.504 58.203 379.465 79.488 c 263.594 258.887 m 
264.555 257.926 l 261.988 283.871 l 261.984 283.871 l 261.035 292.16 257.316
 299.879 251.426 305.785 c 220.273 336.984 l 221.57 327.863 l 223.297 315.719
 220.754 304.031 217.441 293.832 c 216.223 290.199 214.91 286.598 213.504
 283.031 c 231.215 281.473 248.594 273.91 263.594 258.887 c 124.922 120 
m 109.922 135.023 102.363 152.426 100.824 170.16 c 97.258 168.754 93.66 
167.441 90.023 166.223 c 79.848 162.91 68.184 160.367 56.039 162.094 c 46.918
 163.391 l 78.117 132.191 l 83.996 126.289 91.703 122.566 99.957 121.633
 c 125.879 119.066 l h
350.664 24.938 m 341.543 24.121 327.457 24.289 308.762 28.848 c 271.371
 37.969 214.754 64.75 142.273 137.352 c 127.395 152.23 123.098 169.512 125.785
 186.574 c 128.352 202.797 137.379 219.262 150.938 232.848 c 164.473 246.406
 180.938 255.434 197.113 258.023 c 214.152 260.711 231.41 256.414 246.266
 241.512 c 320.16 167.52 346.875 110.855 355.609 73.824 c 360 55.32 359.93
 41.543 358.922 32.711 c 358.668 30.434 358.309 28.164 357.84 25.922 c 355.457
 25.473 353.055 25.145 350.641 24.938 c h
350.664 24.938 m f
168.215 291.336 m 152.25 282.734 137.66 271.797 124.922 258.887 c 111.266
 245.352 99.836 229.746 91.055 212.641 c 64.605 236.449 43.895 333.938 46.918
 336.961 c 49.918 339.984 141.383 315.457 168.215 291.312 c h
168.215 291.336 m f
Q Q
showpage
%%Trailer
%%EOF
