%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 672 720 rectclip
1 0 0 -1 0 768 cm q
0 g
580.609 298.703 m 595.914 291.844 610.457 283.398 624 273.504 c 624 336
 l 624 349.871 613.777 367.391 587.855 384.336 c 616.422 382.723 645.023
 386.801 672 396.336 c 672 192 l 672 143.664 630 107.762 580.609 85.297 
c 529.055 61.871 459.504 48 384 48 c 308.496 48 238.945 61.871 187.391 85.297
 c 138 107.762 96 143.664 96 192 c 96 624 l 96 672.336 138 708.238 187.391
 730.703 c 238.945 754.078 308.496 768 384 768 c 409.727 768 434.785 766.367
 458.641 763.344 c 443.652 750.371 430.52 735.398 419.617 718.848 c 407.969
 719.617 396.098 720 384 720 c 313.727 720 251.23 707.039 207.266 687.023
 c 161.09 666 144 641.902 144 624 c 144 561.504 l 157.008 571.199 171.84
 579.648 187.391 586.703 c 238.945 610.078 308.496 624 384 624 c 385.297
 624 l 383.551 608.047 383.551 591.953 385.297 576 c 384 576 l 313.727 576
 251.23 563.039 207.266 543.023 c 161.09 522 144 497.902 144 480 c 144 417.504
 l 157.008 427.199 171.84 435.648 187.391 442.703 c 238.945 466.078 308.496
 480 384 480 c 396.574 480 408.961 479.617 421.152 478.848 c 435.441 457.758
 453.352 439.363 474.047 424.512 c 446.305 429.312 415.969 432 384 432 c
 313.727 432 251.23 419.039 207.266 399.023 c 161.09 378 144 353.902 144
 336 c 144 273.504 l 157.008 283.199 171.84 291.648 187.391 298.703 c 238.945
 322.129 308.496 336 384 336 c 459.504 336 529.055 322.129 580.609 298.703
 c 144 192 m 144 174.047 161.09 150 207.266 128.977 c 251.23 109.008 313.727
 96 384 96 c 454.273 96 516.77 108.961 560.734 128.977 c 606.91 150 624 
174.098 624 192 c 624 209.953 606.91 234 560.734 255.023 c 516.77 274.992
 454.273 288 384 288 c 313.727 288 251.23 275.039 207.266 255.023 c 161.09
 234 144 209.902 144 192 c f
570.527 454.078 m 579.168 424.652 620.832 424.652 629.52 454.078 c 631.582
 461.184 l 631.586 461.184 l 634.195 470.109 640.707 477.371 649.297 480.934
 c 657.891 484.496 667.629 483.977 675.793 479.52 c 682.32 475.969 l 709.25
 461.281 738.719 490.754 724.082 517.68 c 720.48 524.207 l 716.043 532.367
 715.531 542.094 719.094 550.672 c 722.652 559.246 729.906 565.754 738.816
 568.367 c 745.969 570.527 l 775.344 579.168 775.344 620.832 745.969 629.52
 c 738.77 631.582 l 738.77 631.586 l 729.859 634.219 722.621 640.738 719.078
 649.328 c 715.535 657.914 716.07 667.645 720.527 675.793 c 724.078 682.32
 l 738.719 709.25 709.246 738.719 682.316 724.082 c 675.789 720.48 l 675.793
 720.48 l 667.633 716.043 657.906 715.531 649.328 719.094 c 640.754 722.652
 634.246 729.906 631.633 738.816 c 629.473 745.969 l 620.832 775.344 579.168
 775.344 570.48 745.969 c 568.418 738.77 l 568.414 738.77 l 565.781 729.859
 559.262 722.621 550.672 719.078 c 542.086 715.535 532.355 716.07 524.207
 720.527 c 517.68 724.078 l 490.75 738.719 461.281 709.246 475.918 682.316
 c 479.52 675.789 l 479.52 675.793 l 483.957 667.633 484.469 657.906 480.906
 649.328 c 477.348 640.754 470.094 634.246 461.184 631.633 c 454.078 629.473
 l 424.652 620.832 424.652 579.168 454.078 570.48 c 461.184 568.418 l 461.184
 568.414 l 470.109 565.805 477.371 559.293 480.934 550.703 c 484.496 542.109
 483.977 532.371 479.52 524.207 c 475.969 517.68 l 461.281 490.75 490.754
 461.281 517.68 475.918 c 524.207 479.52 l 532.367 483.957 542.094 484.469
 550.672 480.906 c 559.246 477.348 565.754 470.094 568.367 461.184 c h
672 600 m 672 625.723 658.277 649.492 636 662.355 c 613.723 675.215 586.277
 675.215 564 662.355 c 541.723 649.492 528 625.723 528 600 c 528 574.277
 541.723 550.508 564 537.645 c 586.277 524.785 613.723 524.785 636 537.645
 c 658.277 550.508 672 574.277 672 600 c f
Q Q
showpage
%%Trailer
%%EOF
