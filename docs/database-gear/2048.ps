%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1344 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
1161.215 597.406 m 1191.824 583.688 1220.914 566.793 1248 547.008 c 1248
 672 l 1248 699.742 1227.551 734.785 1175.711 768.672 c 1232.844 765.449
 1290.047 773.605 1344 792.672 c 1344 384 l 1344 287.328 1260 215.52 1161.215
 170.594 c 1058.113 123.742 919.008 96 768 96 c 616.992 96 477.887 123.742
 374.785 170.594 c 276 215.52 192 287.328 192 384 c 192 1248 l 192 1344.672
 276 1416.48 374.785 1461.406 c 477.887 1508.16 616.992 1536 768 1536 c 
819.457 1536 869.566 1532.734 917.281 1526.688 c 887.305 1500.746 861.043
 1470.801 839.23 1437.695 c 815.938 1439.23 792.191 1440 768 1440 c 627.457
 1440 502.465 1414.078 414.527 1374.047 c 322.176 1332 288 1283.809 288 
1248 c 288 1123.008 l 314.016 1142.398 343.68 1159.297 374.785 1173.406 
c 477.887 1220.16 616.992 1248 768 1248 c 770.594 1248 l 767.102 1216.094
 767.102 1183.906 770.594 1152 c 768 1152 l 627.457 1152 502.465 1126.078
 414.527 1086.047 c 322.176 1044 288 995.809 288 960 c 288 835.008 l 314.016
 854.398 343.68 871.297 374.785 885.406 c 477.887 932.16 616.992 960 768
 960 c 793.152 960 817.922 959.23 842.305 957.695 c 870.883 915.516 906.699
 878.727 948.098 849.023 c 892.609 858.625 831.938 864 768 864 c 627.457
 864 502.465 838.078 414.527 798.047 c 322.176 756 288 707.809 288 672 c
 288 547.008 l 314.016 566.398 343.68 583.297 374.785 597.406 c 477.887 
644.258 616.992 672 768 672 c 919.008 672 1058.113 644.258 1161.215 597.406
 c 288 384 m 288 348.098 322.176 300 414.527 257.953 c 502.465 218.016 627.457
 192 768 192 c 908.543 192 1033.535 217.922 1121.473 257.953 c 1213.824 
300 1248 348.191 1248 384 c 1248 419.902 1213.824 468 1121.473 510.047 c
 1033.535 549.984 908.543 576 768 576 c 627.457 576 502.465 550.078 414.527
 510.047 c 322.176 468 288 419.809 288 384 c f
1141.055 908.16 m 1158.336 849.312 1241.664 849.312 1259.039 908.16 c 1263.168
 922.367 l 1268.391 940.219 1281.418 954.742 1298.598 961.867 c 1315.777
 968.996 1335.262 967.953 1351.586 959.039 c 1364.641 951.934 l 1418.496
 922.559 1477.441 981.5 1448.16 1035.359 c 1440.961 1048.414 l 1432.082 
1064.73 1431.062 1084.188 1438.184 1101.34 c 1445.309 1118.496 1459.809 
1131.508 1477.633 1136.734 c 1491.938 1141.055 l 1550.691 1158.336 1550.691
 1241.664 1491.938 1259.039 c 1477.539 1263.168 l 1477.535 1263.168 l 1459.719
 1268.434 1445.242 1281.48 1438.156 1298.652 c 1431.07 1315.828 1432.137
 1335.285 1441.055 1351.586 c 1448.16 1364.641 l 1477.441 1418.496 1418.496
 1477.441 1364.641 1448.16 c 1351.586 1440.961 l 1335.27 1432.082 1315.812
 1431.062 1298.66 1438.184 c 1281.504 1445.309 1268.492 1459.809 1263.266
 1477.633 c 1258.945 1491.938 l 1241.664 1550.691 1158.336 1550.691 1140.961
 1491.938 c 1136.832 1477.539 l 1136.832 1477.535 l 1131.566 1459.719 1118.52
 1445.242 1101.348 1438.156 c 1084.172 1431.07 1064.715 1432.137 1048.414
 1441.055 c 1035.359 1448.16 l 981.504 1477.441 922.559 1418.496 951.84 
1364.641 c 959.039 1351.586 l 967.918 1335.27 968.938 1315.812 961.816 1298.66
 c 954.691 1281.504 940.191 1268.492 922.367 1263.266 c 908.16 1258.945 
l 849.312 1241.664 849.312 1158.336 908.16 1140.961 c 922.367 1136.832 l
 940.219 1131.609 954.742 1118.582 961.867 1101.402 c 968.996 1084.223 967.953
 1064.738 959.039 1048.414 c 951.934 1035.359 l 922.559 981.504 981.5 922.559
 1035.359 951.84 c 1048.414 959.039 l 1064.73 967.918 1084.188 968.938 1101.34
 961.816 c 1118.496 954.691 1131.508 940.191 1136.734 922.367 c h
1344 1200 m 1344 1251.445 1316.555 1298.984 1272 1324.707 c 1227.445 1350.43
 1172.555 1350.43 1128 1324.707 c 1083.445 1298.984 1056 1251.445 1056 1200
 c 1056 1148.555 1083.445 1101.016 1128 1075.293 c 1172.555 1049.57 1227.445
 1049.57 1272 1075.293 c 1316.555 1101.016 1344 1148.555 1344 1200 c f
Q Q
showpage
%%Trailer
%%EOF
