%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 384 0 1152 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 384 0 1152 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 384 0 768 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 0 m 454.539 0 430.121 10.113 412.117 28.117 c 394.113 46.121 384 70.539
 384 96 c 384 1440 l 384 1465.461 394.113 1489.879 412.117 1507.883 c 430.121
 1525.887 454.539 1536 480 1536 c 1056 1536 l 1081.461 1536 1105.879 1525.887
 1123.883 1507.883 c 1141.887 1489.879 1152 1465.461 1152 1440 c 1152 96
 l 1152 70.539 1141.887 46.121 1123.883 28.117 c 1105.879 10.113 1081.461
 0 1056 0 c h
528 1344 m 545.148 1344 560.996 1353.148 569.57 1368 c 578.145 1382.852
 578.145 1401.148 569.57 1416 c 560.996 1430.852 545.148 1440 528 1440 c
 510.852 1440 495.004 1430.852 486.43 1416 c 477.855 1401.148 477.855 1382.852
 486.43 1368 c 495.004 1353.148 510.852 1344 528 1344 c 720 1344 m 737.148
 1344 752.996 1353.148 761.57 1368 c 770.145 1382.852 770.145 1401.148 761.57
 1416 c 752.996 1430.852 737.148 1440 720 1440 c 702.852 1440 687.004 1430.852
 678.43 1416 c 669.855 1401.148 669.855 1382.852 678.43 1368 c 687.004 1353.148
 702.852 1344 720 1344 c 480 144 m 480 131.27 485.059 119.062 494.059 110.059
 c 503.062 101.059 515.27 96 528 96 c 1008 96 l 1025.148 96 1040.996 105.148
 1049.57 120 c 1058.145 134.852 1058.145 153.148 1049.57 168 c 1040.996 
182.852 1025.148 192 1008 192 c 528 192 l 515.27 192 503.062 186.941 494.059
 177.941 c 485.059 168.938 480 156.73 480 144 c 528 288 m 1008 288 l 1025.148
 288 1040.996 297.148 1049.57 312 c 1058.145 326.852 1058.145 345.148 1049.57
 360 c 1040.996 374.852 1025.148 384 1008 384 c 528 384 l 510.852 384 495.004
 374.852 486.43 360 c 477.855 345.148 477.855 326.852 486.43 312 c 495.004
 297.148 510.852 288 528 288 c f
Q Q
showpage
%%Trailer
%%EOF
