%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 2.703 0 2.516 0.223 2.41 0.43 c 2.305 0.648 2.25 0.887 2.25 1.125
 c 2.25 2.508 l 1.5 2.883 l 1.5 2.812 l 1.5 2.707 1.418 2.625 1.312 2.625
 c 0.938 2.625 l 0.832 2.625 0.75 2.707 0.75 2.812 c 0.75 3.258 l 0.312 
3.477 l 0.121 3.574 0 3.77 0 3.98 c 0 4.5 l 0 4.617 0.105 4.703 0.219 4.684
 c 0.832 4.582 l 0.949 4.934 l 0.945 4.934 l 1.004 5.105 1.246 5.105 1.305
 4.934 c 1.457 4.477 l 2.285 4.34 l 2.426 5.184 l 1.93 5.68 l 1.812 5.797
 1.895 6 2.062 6 c 3.938 6 l 4.105 6 4.188 5.797 4.07 5.68 c 3.574 5.184
 l 3.715 4.34 l 4.543 4.477 l 4.695 4.934 l 4.754 5.105 4.996 5.105 5.055
 4.934 c 5.172 4.582 l 5.781 4.684 l 5.895 4.703 6 4.617 6 4.5 c 6 3.98 
l 6 3.77 5.879 3.574 5.688 3.477 c 5.25 3.258 l 5.25 2.812 l 5.25 2.707 
5.168 2.625 5.062 2.625 c 4.688 2.625 l 4.582 2.625 4.5 2.707 4.5 2.812 
c 4.5 2.883 l 3.75 2.508 l 3.75 1.125 l 3.75 0.91 3.699 0.648 3.59 0.43 
c 3.484 0.223 3.297 0 3 0 c 2.625 1.125 m 2.625 0.965 2.668 0.758 2.746 
0.602 c 2.828 0.434 2.922 0.375 3 0.375 c 3.078 0.375 3.172 0.434 3.254 
0.602 c 3.332 0.758 3.375 0.965 3.375 1.125 c 3.375 2.625 l 3.375 2.695 
3.414 2.762 3.477 2.793 c 5.52 3.816 l 5.523 3.812 l 5.586 3.848 5.625 3.91
 5.625 3.98 c 5.625 4.277 l 3.594 3.938 l 3.594 3.941 l 3.492 3.922 3.395
 3.992 3.379 4.094 c 3.191 5.219 l 3.18 5.277 3.199 5.34 3.242 5.383 c 3.484
 5.625 l 2.516 5.625 l 2.758 5.383 l 2.801 5.34 2.82 5.277 2.809 5.219 c
 2.621 4.094 l 2.605 3.992 2.508 3.922 2.406 3.941 c 0.375 4.277 l 0.375
 3.98 l 0.375 3.91 0.414 3.848 0.477 3.812 c 2.52 2.789 l 2.523 2.793 l 
2.586 2.762 2.625 2.695 2.625 2.625 c h
2.625 1.125 m f
Q Q
showpage
%%Trailer
%%EOF
