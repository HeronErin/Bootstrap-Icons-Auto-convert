%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 0 m 21.641 0 20.125 1.777 19.285 3.453 c 18.453 5.184 18.016 7.078 18
 9 c 18 20.074 l 12 23.074 l 12 22.5 l 12 22.102 11.844 21.719 11.562 21.438
 c 11.281 21.156 10.898 21 10.5 21 c 7.5 21 l 6.672 21 6 21.672 6 22.5 c
 6 26.074 l 2.488 27.828 l 0.965 28.59 0 30.148 0 31.855 c 0 36 l 0 36.441
 0.195 36.859 0.531 37.145 c 0.867 37.43 1.312 37.551 1.746 37.48 c 6.641
 36.664 l 7.578 39.477 l 7.578 39.473 l 7.781 40.086 8.355 40.496 9 40.496
 c 9.645 40.496 10.219 40.086 10.422 39.473 c 11.637 35.832 l 18.266 34.727
 l 19.391 41.484 l 15.438 45.438 l 15.008 45.867 14.879 46.512 15.113 47.074
 c 15.344 47.637 15.891 48 16.5 48 c 31.5 48 l 32.109 48 32.656 47.637 32.887
 47.074 c 33.121 46.512 32.992 45.867 32.562 45.438 c 28.609 41.484 l 29.734
 34.727 l 36.363 35.832 l 37.578 39.473 l 37.781 40.086 38.355 40.496 39
 40.496 c 39.645 40.496 40.219 40.086 40.422 39.473 c 41.359 36.66 l 46.25
 37.477 l 46.25 37.48 l 46.688 37.551 47.133 37.43 47.469 37.145 c 47.805
 36.859 48 36.441 48 36 c 48 31.855 l 48 30.148 47.035 28.59 45.512 27.828
 c 42 26.074 l 42 22.5 l 42 22.102 41.844 21.719 41.562 21.438 c 41.281 
21.156 40.898 21 40.5 21 c 37.5 21 l 36.672 21 36 21.672 36 22.5 c 36 23.074
 l 30 20.074 l 30 9 l 30 7.297 29.578 5.188 28.715 3.453 c 27.875 1.773 
26.359 0 24 0 c 21 9 m 21 7.703 21.328 6.062 21.965 4.797 c 22.625 3.477
 23.359 3 24 3 c 24.641 3 25.375 3.473 26.035 4.797 c 26.668 6.059 27 7.707
 27 9 c 27 21 l 27 21.566 27.32 22.086 27.828 22.34 c 44.172 30.512 l 44.68
 30.766 45 31.285 45 31.855 c 45 34.23 l 28.746 31.52 l 27.93 31.387 27.16
 31.938 27.02 32.75 c 25.52 41.75 l 25.441 42.23 25.598 42.719 25.941 43.062
 c 27.879 45 l 20.121 45 l 22.062 43.062 l 22.406 42.719 22.562 42.23 22.48
 41.754 c 20.98 32.754 l 20.918 32.359 20.699 32.012 20.375 31.777 c 20.051
 31.547 19.648 31.453 19.254 31.52 c 3 34.23 l 3 31.855 l 3 31.285 3.32 
30.766 3.828 30.512 c 20.172 22.34 l 20.68 22.086 21 21.566 21 21 c h
21 9 m f
Q Q
showpage
%%Trailer
%%EOF
