%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 36 168 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 36 168 156
192 192 cairo_set_page_size
%%EndPageSetup
q 24 36 144 120 rectclip
1 0 0 -1 0 192 cm q
0 g
30 36 m 26.688 36 24 38.688 24 42 c 24 45.312 26.688 48 30 48 c 162 48 
l 165.312 48 168 45.312 168 42 c 168 38.688 165.312 36 162 36 c h
30 72 m 26.688 72 24 74.688 24 78 c 24 81.312 26.688 84 30 84 c 102 84 
l 105.312 84 108 81.312 108 78 c 108 74.688 105.312 72 102 72 c h
30 108 m 26.688 108 24 110.688 24 114 c 24 117.312 26.688 120 30 120 c 
102 120 l 105.312 120 108 117.312 108 114 c 108 110.688 105.312 108 102 
108 c h
30 144 m 26.688 144 24 146.688 24 150 c 24 153.312 26.688 156 30 156 c 
162 156 l 165.312 156 168 153.312 168 150 c 168 146.688 165.312 144 162 
144 c h
151.355 79.523 m 149.617 78.359 147.836 77.258 146.016 76.223 c 148.535
 72 l 150 72.887 151.809 74.035 153.961 75.445 c 156.121 76.852 158.16 78.566
 160.082 80.582 c 161.953 82.551 163.547 84.797 164.859 87.324 c 166.172
 89.805 166.828 92.57 166.828 95.629 c 166.828 99.949 165.965 103.441 164.234
 106.105 c 162.5 108.73 159.613 110.043 155.582 110.043 c 153.008 110.043
 150.988 109.199 149.535 107.512 c 149.531 107.508 l 148.121 105.996 147.32
 104.02 147.277 101.953 c 147.277 99.191 148.121 97.109 149.809 95.699 c
 151.449 94.242 153.723 93.516 156.637 93.516 c 160.008 93.516 l 159.82 
91.461 159.324 89.445 158.531 87.539 c 157.77 85.906 156.746 84.41 155.508
 83.102 c 154.266 81.754 152.871 80.555 151.355 79.523 c 125.34 79.523 m
 123.602 78.359 121.82 77.258 120 76.223 c 122.52 72 l 123.984 72.887 125.793
 74.035 127.945 75.445 c 130.105 76.852 132.145 78.566 134.066 80.582 c 
135.938 82.551 137.531 84.797 138.844 87.324 c 140.156 89.805 140.812 92.57
 140.812 95.629 c 140.812 99.949 139.949 103.441 138.219 106.105 c 136.484
 108.73 133.598 110.043 129.566 110.043 c 126.992 110.043 124.973 109.199
 123.52 107.512 c 123.516 107.508 l 122.105 105.996 121.305 104.02 121.262
 101.953 c 121.262 99.191 122.105 97.109 123.793 95.699 c 125.441 94.242
 127.719 93.516 130.621 93.516 c 133.992 93.516 l 133.805 91.492 133.332
 89.504 132.59 87.613 c 131.809 85.953 130.762 84.434 129.492 83.113 c 128.25
 81.758 126.855 80.551 125.34 79.512 c h
125.34 79.523 m f
Q Q
showpage
%%Trailer
%%EOF
