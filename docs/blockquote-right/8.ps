%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
0.938 1.125 m 0.688 1.125 0.688 1.5 0.938 1.5 c 5.062 1.5 l 5.312 1.5 5.312
 1.125 5.062 1.125 c h
0.938 2.25 m 0.688 2.25 0.688 2.625 0.938 2.625 c 3.188 2.625 l 3.438 2.625
 3.438 2.25 3.188 2.25 c h
0.938 3.375 m 0.688 3.375 0.688 3.75 0.938 3.75 c 3.188 3.75 l 3.438 3.75
 3.438 3.375 3.188 3.375 c h
0.938 4.5 m 0.688 4.5 0.688 4.875 0.938 4.875 c 5.062 4.875 l 5.312 4.875
 5.312 4.5 5.062 4.5 c h
4.73 2.484 m 4.676 2.449 4.621 2.414 4.562 2.383 c 4.641 2.25 l 4.688 2.277
 4.742 2.312 4.809 2.359 c 4.875 2.402 4.941 2.457 5 2.52 c 5.059 2.582 
5.109 2.652 5.148 2.73 c 5.188 2.809 5.211 2.895 5.211 2.988 c 5.211 3.125
 5.184 3.23 5.129 3.316 c 5.074 3.398 4.984 3.438 4.859 3.438 c 4.777 3.438
 4.715 3.41 4.672 3.359 c 4.629 3.312 4.605 3.25 4.602 3.188 c 4.602 3.102
 4.629 3.035 4.68 2.992 c 4.73 2.945 4.801 2.926 4.895 2.926 c 5 2.926 l
 5 2.922 l 4.996 2.859 4.98 2.797 4.953 2.734 c 4.93 2.684 4.898 2.637 4.859
 2.598 c 4.82 2.555 4.777 2.516 4.73 2.484 c 3.918 2.484 m 3.863 2.449 3.809
 2.414 3.75 2.383 c 3.828 2.25 l 3.875 2.277 3.93 2.312 3.996 2.359 c 4.062
 2.402 4.129 2.457 4.188 2.52 c 4.246 2.582 4.297 2.652 4.336 2.73 c 4.375
 2.809 4.398 2.895 4.398 2.988 c 4.398 3.125 4.371 3.23 4.316 3.316 c 4.262
 3.398 4.172 3.438 4.047 3.438 c 3.965 3.438 3.902 3.41 3.859 3.359 c 3.816
 3.312 3.789 3.25 3.789 3.188 c 3.789 3.102 3.816 3.035 3.867 2.992 c 3.918
 2.945 3.988 2.926 4.082 2.926 c 4.188 2.926 l 4.188 2.922 l 4.18 2.859 
4.168 2.797 4.145 2.738 c 4.117 2.688 4.086 2.637 4.047 2.598 c 4.008 2.555
 3.965 2.516 3.918 2.484 c h
3.918 2.484 m f
Q Q
showpage
%%Trailer
%%EOF
