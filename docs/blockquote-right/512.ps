%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 72 336 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 72 336 312
384 384 cairo_set_page_size
%%EndPageSetup
q 48 72 288 240 rectclip
1 0 0 -1 0 384 cm q
0 g
60 72 m 53.371 72 48 77.371 48 84 c 48 90.629 53.371 96 60 96 c 324 96 
l 330.629 96 336 90.629 336 84 c 336 77.371 330.629 72 324 72 c h
60 144 m 53.371 144 48 149.371 48 156 c 48 162.629 53.371 168 60 168 c 
204 168 l 210.629 168 216 162.629 216 156 c 216 149.371 210.629 144 204 
144 c h
60 216 m 53.371 216 48 221.371 48 228 c 48 234.629 53.371 240 60 240 c 
204 240 l 210.629 240 216 234.629 216 228 c 216 221.371 210.629 216 204 
216 c h
60 288 m 53.371 288 48 293.371 48 300 c 48 306.629 53.371 312 60 312 c 
324 312 l 330.629 312 336 306.629 336 300 c 336 293.371 330.629 288 324 
288 c h
302.711 159.047 m 299.234 156.715 295.672 154.516 292.031 152.449 c 297.07
 144 l 300 145.777 303.613 148.07 307.918 150.887 c 312.238 153.703 316.316
 157.125 320.156 161.16 c 323.898 165.098 327.086 169.594 329.707 174.648
 c 332.332 179.609 333.645 185.145 333.645 191.258 c 333.645 199.898 331.918
 206.883 328.461 212.211 c 324.988 217.457 319.223 220.082 311.156 220.082
 c 306.004 220.082 301.973 218.395 299.059 215.02 c 299.062 215.016 l 296.242
 211.992 294.637 208.035 294.551 203.902 c 294.551 198.383 296.238 194.215
 299.613 191.398 c 302.895 188.488 307.445 187.031 313.27 187.031 c 320.016
 187.031 l 319.641 182.922 318.648 178.891 317.062 175.078 c 315.539 171.816
 313.496 168.816 311.016 166.199 c 308.531 163.508 305.742 161.105 302.711
 159.047 c 250.68 159.047 m 247.203 156.715 243.641 154.516 240 152.449 
c 245.039 144 l 247.969 145.777 251.582 148.07 255.887 150.887 c 260.207
 153.703 264.285 157.125 268.125 161.16 c 271.867 165.098 275.055 169.594
 277.676 174.648 c 280.301 179.609 281.613 185.145 281.613 191.258 c 281.613
 199.898 279.887 206.883 276.43 212.211 c 272.957 217.457 267.191 220.082
 259.125 220.082 c 253.973 220.082 249.941 218.395 247.027 215.02 c 247.031
 215.016 l 244.211 211.992 242.605 208.035 242.52 203.902 c 242.52 198.383
 244.207 194.215 247.582 191.398 c 250.879 188.488 255.43 187.031 261.238
 187.031 c 267.984 187.031 l 267.609 182.984 266.664 179.008 265.176 175.223
 c 263.617 171.906 261.523 168.867 258.984 166.223 c 256.5 163.516 253.715
 161.098 250.68 159.023 c h
250.68 159.047 m f
Q Q
showpage
%%Trailer
%%EOF
