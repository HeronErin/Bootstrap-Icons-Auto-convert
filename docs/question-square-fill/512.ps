%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 0 m 35.27 0 23.062 5.059 14.059 14.059 c 5.059 23.062 0 35.27 0 48 c
 0 336 l 0 348.73 5.059 360.938 14.059 369.941 c 23.062 378.941 35.27 384
 48 384 c 336 384 l 348.73 384 360.938 378.941 369.941 369.941 c 378.941
 360.938 384 348.73 384 336 c 384 48 l 384 35.27 378.941 23.062 369.941 
14.059 c 360.938 5.059 348.73 0 336 0 c h
131.902 144.793 m 130.34 144.812 128.836 144.191 127.746 143.066 c 126.656
 141.945 126.078 140.426 126.145 138.863 c 128.398 98.184 161.688 84 192.121
 84 c 225.625 84 256.25 101.52 256.25 137.762 c 256.25 163.684 241.012 176.02
 226.395 187.129 c 208.707 200.543 202.156 205.562 202.156 222.793 c 202.156
 225.312 l 202.152 225.312 l 202.152 226.902 201.52 228.43 200.395 229.555
 c 199.27 230.68 197.742 231.312 196.152 231.312 c 176.711 231.312 l 173.434
 231.312 170.766 228.684 170.711 225.406 c 170.613 220.199 l 169.703 197.953
 182.492 184.246 198.645 172.512 c 212.805 161.855 221.805 154.848 221.805
 139.609 c 221.805 119.809 206.734 111.578 190.27 111.578 c 170.996 111.578
 160.199 123.051 158.062 138.793 c 157.629 142.082 154.992 144.793 151.68
 144.793 c 131.879 144.793 l h
187.703 299.426 m 173.688 299.426 163.488 289.969 163.488 277.18 c 163.488
 263.934 173.688 254.621 187.727 254.621 c 202.344 254.621 212.398 263.934
 212.398 277.18 c 212.398 289.973 202.32 299.426 187.703 299.426 c f
Q Q
showpage
%%Trailer
%%EOF
