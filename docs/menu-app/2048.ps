%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 144 m 0 105.809 15.172 69.184 42.176 42.176 c 69.184 15.172 105.809 0
 144 0 c 336 0 l 374.191 0 410.816 15.172 437.824 42.176 c 464.828 69.184
 480 105.809 480 144 c 480 336 l 480 374.191 464.828 410.816 437.824 437.824
 c 410.816 464.828 374.191 480 336 480 c 144 480 l 105.809 480 69.184 464.828
 42.176 437.824 c 15.172 410.816 0 374.191 0 336 c h
144 96 m 131.27 96 119.062 101.059 110.059 110.059 c 101.059 119.062 96
 131.27 96 144 c 96 336 l 96 348.73 101.059 360.938 110.059 369.941 c 119.062
 378.941 131.27 384 144 384 c 336 384 l 348.73 384 360.938 378.941 369.941
 369.941 c 378.941 360.938 384 348.73 384 336 c 384 144 l 384 131.27 378.941
 119.062 369.941 110.059 c 360.938 101.059 348.73 96 336 96 c h
0 768 m 0 717.078 20.227 668.242 56.234 632.234 c 92.242 596.227 141.078
 576 192 576 c 1344 576 l 1377.703 576 1410.812 584.871 1440 601.723 c 1469.188
 618.574 1493.426 642.812 1510.277 672 c 1527.129 701.188 1536 734.297 1536
 768 c 1536 1248 l 1536 1281.703 1527.129 1314.812 1510.277 1344 c 1493.426
 1373.188 1469.188 1397.426 1440 1414.277 c 1410.812 1431.129 1377.703 1440
 1344 1440 c 192 1440 l 141.078 1440 92.242 1419.773 56.234 1383.766 c 20.227
 1347.758 0 1298.922 0 1248 c h
96 1056 m 96 1248 l 96 1273.461 106.113 1297.879 124.117 1315.883 c 142.121
 1333.887 166.539 1344 192 1344 c 1344 1344 l 1369.461 1344 1393.879 1333.887
 1411.883 1315.883 c 1429.887 1297.879 1440 1273.461 1440 1248 c 1440 1056
 l h
1440 960 m 1440 768 l 1440 742.539 1429.887 718.121 1411.883 700.117 c 
1393.879 682.113 1369.461 672 1344 672 c 192 672 l 166.539 672 142.121 682.113
 124.117 700.117 c 106.113 718.121 96 742.539 96 768 c 96 960 l h
192 816 m 192 803.27 197.059 791.062 206.059 782.059 c 215.062 773.059 
227.27 768 240 768 c 1104 768 l 1121.148 768 1136.996 777.148 1145.57 792
 c 1154.145 806.852 1154.145 825.148 1145.57 840 c 1136.996 854.852 1121.148
 864 1104 864 c 240 864 l 227.27 864 215.062 858.941 206.059 849.941 c 197.059
 840.938 192 828.73 192 816 c 192 1200 m 192 1187.27 197.059 1175.062 206.059
 1166.059 c 215.062 1157.059 227.27 1152 240 1152 c 816 1152 l 833.148 1152
 848.996 1161.148 857.57 1176 c 866.145 1190.852 866.145 1209.148 857.57
 1224 c 848.996 1238.852 833.148 1248 816 1248 c 240 1248 l 227.27 1248 
215.062 1242.941 206.059 1233.941 c 197.059 1224.938 192 1212.73 192 1200
 c f
Q Q
showpage
%%Trailer
%%EOF
