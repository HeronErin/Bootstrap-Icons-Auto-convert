%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 1 1 767 767
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 1 1 767 767
768 768 cairo_set_page_size
%%EndPageSetup
q 1 1 766 766 rectclip
1 0 0 -1 0 768 cm q
0 g
279.742 488.258 m 275.242 483.758 269.141 481.23 262.777 481.23 c 256.41
 481.23 250.309 483.758 245.809 488.258 c 49.199 684.867 l 49.199 552 l 
49.199 543.426 44.625 535.504 37.199 531.215 c 29.773 526.93 20.625 526.93
 13.199 531.215 c 5.773 535.504 1.199 543.426 1.199 552 c 1.199 742.801 
l 1.199 749.164 3.73 755.27 8.23 759.77 c 12.73 764.27 18.836 766.801 25.199
 766.801 c 216 766.801 l 224.574 766.801 232.496 762.227 236.785 754.801
 c 241.07 747.375 241.07 738.227 236.785 730.801 c 232.496 723.375 224.574
 718.801 216 718.801 c 83.137 718.801 l 279.746 522.191 l 279.742 522.191
 l 284.242 517.691 286.77 511.59 286.77 505.223 c 286.77 498.859 284.242
 492.758 279.742 488.258 c 488.254 279.746 m 488.258 279.742 l 492.758 284.242
 498.859 286.77 505.223 286.77 c 511.59 286.77 517.691 284.242 522.191 279.742
 c 718.801 83.133 l 718.801 216 l 718.801 224.574 723.375 232.496 730.801
 236.785 c 738.227 241.07 747.375 241.07 754.801 236.785 c 762.227 232.496
 766.801 224.574 766.801 216 c 766.801 25.199 l 766.801 18.836 764.27 12.73
 759.77 8.23 c 755.27 3.73 749.164 1.199 742.801 1.199 c 552 1.199 l 543.426
 1.199 535.504 5.773 531.215 13.199 c 526.93 20.625 526.93 29.773 531.215
 37.199 c 535.504 44.625 543.426 49.199 552 49.199 c 684.863 49.199 l 488.254
 245.809 l 488.258 245.809 l 483.758 250.309 481.23 256.41 481.23 262.777
 c 481.23 269.141 483.758 275.242 488.258 279.742 c f*
Q Q
showpage
%%Trailer
%%EOF
