%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
53.594 4.363 m 52.137 -1.457 43.875 -1.457 42.41 4.363 c 41.984 6.078 l
 41.98 6.078 l 41.473 8.109 39.906 9.703 37.883 10.246 c 35.859 10.785 33.703
 10.188 32.25 8.684 c 31.02 7.418 l 26.848 3.105 19.691 7.238 21.34 13.004
 c 21.82 14.707 l 22.395 16.715 21.836 18.879 20.359 20.359 c 18.879 21.84
 16.719 22.402 14.707 21.828 c 13.004 21.344 l 7.242 19.695 3.105 26.852
 7.418 31.023 c 8.684 32.254 l 8.684 32.25 l 10.188 33.703 10.785 35.859
 10.246 37.883 c 9.703 39.906 8.109 41.473 6.078 41.98 c 4.363 42.406 l 
-1.457 43.863 -1.457 52.125 4.363 53.59 c 6.078 54.016 l 6.078 54.02 l 8.109
 54.527 9.703 56.094 10.246 58.117 c 10.785 60.141 10.188 62.297 8.684 63.75
 c 7.418 64.98 l 3.105 69.152 7.238 76.309 13.004 74.66 c 14.707 74.18 l
 16.719 73.602 18.883 74.164 20.363 75.645 c 21.844 77.121 22.402 79.289
 21.828 81.301 c 21.344 83 l 19.695 88.762 26.852 92.898 31.023 88.586 c
 32.254 87.32 l 32.25 87.316 l 33.703 85.812 35.859 85.215 37.883 85.754
 c 39.906 86.297 41.473 87.891 41.98 89.922 c 42.406 91.637 l 43.863 97.457
 52.125 97.457 53.59 91.637 c 54.016 89.922 l 54.02 89.922 l 54.527 87.891
 56.094 86.297 58.117 85.754 c 60.141 85.215 62.297 85.812 63.75 87.316 
c 64.98 88.582 l 69.152 92.895 76.309 88.762 74.66 82.996 c 74.18 81.293
 l 73.602 79.281 74.164 77.117 75.645 75.637 c 77.121 74.156 79.289 73.598
 81.301 74.172 c 83 74.656 l 88.762 76.305 92.898 69.148 88.586 64.977 c
 87.32 63.746 l 87.316 63.75 l 85.812 62.297 85.215 60.141 85.754 58.117
 c 86.297 56.094 87.891 54.527 89.922 54.02 c 91.637 53.594 l 97.457 52.137
 97.457 43.875 91.637 42.41 c 89.922 41.984 l 89.922 41.98 l 87.891 41.473
 86.297 39.906 85.754 37.883 c 85.215 35.859 85.812 33.703 87.316 32.25 
c 88.582 31.02 l 92.895 26.848 88.762 19.691 82.996 21.34 c 81.293 21.82
 l 79.285 22.395 77.121 21.836 75.641 20.359 c 74.16 18.879 73.598 16.719
 74.172 14.707 c 74.656 13.004 l 76.305 7.242 69.148 3.105 64.977 7.418 
c 63.746 8.684 l 63.75 8.684 l 62.297 10.188 60.141 10.785 58.117 10.246
 c 56.094 9.703 54.527 8.109 54.02 6.078 c h
48 77.98 m 39.973 78.094 32.238 74.988 26.523 69.352 c 20.805 63.715 17.586
 56.023 17.586 47.996 c 17.586 39.969 20.805 32.277 26.523 26.645 c 32.238
 21.008 39.973 17.898 48 18.012 c 58.715 18.012 68.613 23.727 73.969 33.008
 c 79.328 42.285 79.328 53.715 73.969 62.992 c 68.613 72.273 58.715 77.988
 48 77.988 c h
48 77.98 m f
Q Q
showpage
%%Trailer
%%EOF
