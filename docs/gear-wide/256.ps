%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
107.184 8.723 m 104.27 -2.918 87.742 -2.918 84.816 8.723 c 83.965 12.156
 l 82.949 16.219 79.809 19.41 75.766 20.492 c 71.723 21.574 67.406 20.375
 64.5 17.363 c 62.039 14.832 l 53.699 6.203 39.383 14.473 42.684 26.004 
c 43.645 29.41 l 44.793 33.434 43.672 37.762 40.715 40.719 c 37.762 43.676
 33.434 44.801 29.41 43.656 c 26.004 42.684 l 14.484 39.383 6.203 53.699
 14.832 62.039 c 17.363 64.5 l 20.375 67.406 21.574 71.723 20.492 75.766
 c 19.41 79.809 16.219 82.949 12.156 83.965 c 8.723 84.816 l -2.918 87.73
 -2.918 104.258 8.723 107.184 c 12.156 108.035 l 16.219 109.051 19.41 112.191
 20.492 116.234 c 21.574 120.277 20.375 124.594 17.363 127.5 c 14.832 129.961
 l 6.203 138.301 14.473 152.617 26.004 149.316 c 29.41 148.355 l 33.438 
147.203 37.766 148.328 40.727 151.285 c 43.684 154.246 44.809 158.578 43.656
 162.602 c 42.684 165.996 l 39.383 177.516 53.699 185.797 62.039 177.168
 c 64.5 174.637 l 67.406 171.625 71.723 170.426 75.766 171.508 c 79.809 
172.59 82.949 175.781 83.965 179.844 c 84.816 183.277 l 87.73 194.918 104.258
 194.918 107.184 183.277 c 108.035 179.844 l 109.051 175.781 112.191 172.59
 116.234 171.508 c 120.277 170.426 124.594 171.625 127.5 174.637 c 129.961
 177.168 l 138.301 185.797 152.617 177.527 149.316 165.996 c 148.355 162.59
 l 147.203 158.562 148.328 154.234 151.285 151.273 c 154.246 148.316 158.578
 147.191 162.602 148.344 c 165.996 149.316 l 177.516 152.617 185.797 138.301
 177.168 129.961 c 174.637 127.5 l 171.625 124.594 170.426 120.277 171.508
 116.234 c 172.59 112.191 175.781 109.051 179.844 108.035 c 183.277 107.184
 l 194.918 104.27 194.918 87.742 183.277 84.816 c 179.844 83.965 l 175.781
 82.949 172.59 79.809 171.508 75.766 c 170.426 71.723 171.625 67.406 174.637
 64.5 c 177.168 62.039 l 185.797 53.699 177.527 39.383 165.996 42.684 c 
162.59 43.645 l 158.566 44.793 154.238 43.672 151.281 40.715 c 148.324 37.762
 147.199 33.434 148.344 29.41 c 149.316 26.004 l 152.617 14.484 138.301 
6.203 129.961 14.832 c 127.5 17.363 l 124.594 20.375 120.277 21.574 116.234
 20.492 c 112.191 19.41 109.051 16.219 108.035 12.156 c h
96 155.965 m 79.949 156.191 64.477 149.973 53.043 138.703 c 41.613 127.43
 35.176 112.047 35.176 95.992 c 35.176 79.941 41.613 64.559 53.043 53.285
 c 64.477 42.016 79.949 35.797 96 36.023 c 117.426 36.023 137.227 47.457
 147.941 66.012 c 158.656 84.57 158.656 107.43 147.941 125.988 c 137.227
 144.543 117.426 155.977 96 155.977 c h
96 155.965 m f
Q Q
showpage
%%Trailer
%%EOF
