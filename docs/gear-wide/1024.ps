%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
428.734 34.895 m 417.07 -11.664 350.973 -11.664 339.262 34.895 c 335.855
 48.621 l 335.855 48.625 l 333.184 59.312 326.773 68.688 317.785 75.055 
c 308.797 81.422 297.824 84.355 286.855 83.328 c 275.887 82.301 265.652 
77.383 258 69.457 c 248.16 59.328 l 214.801 24.816 157.535 57.887 170.734
 104.016 c 174.574 117.648 l 177.598 128.227 176.734 139.539 172.145 149.539
 c 167.551 159.539 159.531 167.562 149.535 172.164 c 139.543 176.766 128.23
 177.637 117.648 174.625 c 104.016 170.738 l 57.938 157.539 24.816 214.801
 59.328 248.164 c 69.457 258.004 l 69.457 258 l 77.383 265.652 82.301 275.887
 83.328 286.855 c 84.355 297.824 81.422 308.797 75.055 317.785 c 68.688 
326.773 59.312 333.184 48.625 335.855 c 34.898 339.262 l -11.66 350.926 
-11.66 417.023 34.898 428.734 c 48.625 432.141 l 48.625 432.145 l 59.312
 434.816 68.688 441.227 75.055 450.215 c 81.422 459.203 84.355 470.176 83.328
 481.145 c 82.301 492.113 77.383 502.348 69.457 510 c 59.328 519.84 l 24.816
 553.199 57.887 610.465 104.016 597.266 c 117.648 593.426 l 128.234 590.395
 139.555 591.258 149.562 595.855 c 159.566 600.453 167.594 608.48 172.191
 618.488 c 176.789 628.492 177.652 639.812 174.625 650.398 c 170.738 663.984
 l 157.539 710.062 214.801 743.184 248.164 708.672 c 258.004 698.543 l 258
 698.543 l 265.652 690.617 275.887 685.699 286.855 684.672 c 297.824 683.645
 308.797 686.578 317.785 692.945 c 326.773 699.312 333.184 708.688 335.855
 719.375 c 339.262 733.102 l 350.926 779.66 417.023 779.66 428.734 733.102
 c 432.141 719.375 l 432.145 719.375 l 434.816 708.688 441.227 699.312 450.215
 692.945 c 459.203 686.578 470.176 683.645 481.145 684.672 c 492.113 685.699
 502.348 690.617 510 698.543 c 519.84 708.672 l 553.199 743.184 610.465 
710.113 597.266 663.984 c 593.426 650.352 l 590.395 639.766 591.258 628.445
 595.855 618.438 c 600.453 608.434 608.48 600.406 618.488 595.809 c 628.492
 591.211 639.812 590.348 650.398 593.375 c 663.984 597.262 l 710.062 610.461
 743.184 553.199 708.672 519.836 c 698.543 509.996 l 698.543 510 l 690.617
 502.348 685.699 492.113 684.672 481.145 c 683.645 470.176 686.578 459.203
 692.945 450.215 c 699.312 441.227 708.688 434.816 719.375 432.145 c 733.102
 428.738 l 779.66 417.074 779.66 350.977 733.102 339.266 c 719.375 335.859
 l 719.375 335.855 l 708.688 333.184 699.312 326.773 692.945 317.785 c 686.578
 308.797 683.645 297.824 684.672 286.855 c 685.699 275.887 690.617 265.652
 698.543 258 c 708.672 248.16 l 743.184 214.801 710.113 157.535 663.984 
170.734 c 650.352 174.574 l 639.773 177.598 628.461 176.734 618.461 172.145
 c 608.461 167.551 600.438 159.531 595.836 149.535 c 591.234 139.543 590.363
 128.23 593.375 117.648 c 597.262 104.016 l 610.461 57.938 553.199 24.816
 519.836 59.328 c 509.996 69.457 l 510 69.457 l 502.348 77.383 492.113 82.301
 481.145 83.328 c 470.176 84.355 459.203 81.422 450.215 75.055 c 441.227
 68.688 434.816 59.312 432.145 48.625 c h
384 623.855 m 341.508 624.457 299.621 613.762 262.621 592.859 c 225.617
 571.961 194.832 541.609 173.41 504.906 c 151.992 468.203 140.703 426.473
 140.703 383.977 c 140.703 341.48 151.992 299.746 173.41 263.047 c 194.832
 226.344 225.617 195.992 262.621 175.09 c 299.621 154.191 341.508 143.496
 384 144.098 c 447.625 144.098 508.648 169.371 553.637 214.363 c 598.629
 259.352 623.902 320.375 623.902 384 c 623.902 447.625 598.629 508.648 553.637
 553.637 c 508.648 598.629 447.625 623.902 384 623.902 c h
384 623.855 m f
Q Q
showpage
%%Trailer
%%EOF
