%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
857.473 69.793 m 834.145 -23.328 701.953 -23.328 678.527 69.793 c 671.711
 97.25 l 671.711 97.246 l 666.371 118.621 653.547 137.375 635.57 150.109
 c 617.59 162.84 595.645 168.715 573.711 166.66 c 551.777 164.605 531.301
 154.762 516 138.91 c 496.32 118.652 l 429.602 49.629 315.074 115.773 341.473
 208.027 c 349.152 235.293 l 349.152 235.297 l 355.195 256.457 353.473 279.078
 344.285 299.078 c 335.102 319.074 319.062 335.125 299.074 344.328 c 279.082
 353.531 256.461 355.273 235.297 349.246 c 208.031 341.469 l 115.871 315.07
 49.633 429.598 118.656 496.316 c 138.914 515.996 l 138.91 516 l 154.762
 531.301 164.605 551.777 166.66 573.711 c 168.715 595.645 162.84 617.59 
150.109 635.57 c 137.375 653.547 118.621 666.371 97.246 671.711 c 69.789
 678.527 l -23.332 701.855 -23.332 834.047 69.789 857.473 c 97.246 864.289
 l 118.621 869.629 137.375 882.453 150.109 900.43 c 162.84 918.41 168.715
 940.355 166.66 962.289 c 164.605 984.223 154.762 1004.699 138.91 1020 c
 118.652 1039.68 l 49.629 1106.398 115.773 1220.926 208.027 1194.527 c 235.293
 1186.848 l 235.297 1186.848 l 256.469 1180.793 279.109 1182.516 299.121
 1191.711 c 319.133 1200.906 335.188 1216.965 344.383 1236.973 c 353.578
 1256.984 355.305 1279.629 349.246 1300.801 c 341.469 1327.969 l 315.07 
1420.129 429.598 1486.367 496.316 1417.344 c 515.996 1397.086 l 516 1397.09
 l 531.301 1381.238 551.777 1371.395 573.711 1369.34 c 595.645 1367.285 
617.59 1373.16 635.57 1385.891 c 653.547 1398.625 666.371 1417.379 671.711
 1438.754 c 678.527 1466.211 l 701.855 1559.332 834.047 1559.332 857.473
 1466.211 c 864.289 1438.754 l 869.629 1417.379 882.453 1398.625 900.43 
1385.891 c 918.41 1373.16 940.355 1367.285 962.289 1369.34 c 984.223 1371.395
 1004.699 1381.238 1020 1397.09 c 1039.68 1417.348 l 1106.398 1486.371 1220.926
 1420.227 1194.527 1327.973 c 1186.848 1300.707 l 1186.848 1300.703 l 1180.793
 1279.531 1182.516 1256.891 1191.711 1236.879 c 1200.906 1216.867 1216.965
 1200.812 1236.973 1191.617 c 1256.984 1182.422 1279.629 1180.695 1300.801
 1186.754 c 1327.969 1194.531 l 1420.129 1220.93 1486.367 1106.402 1417.344
 1039.684 c 1397.086 1020.004 l 1397.09 1020 l 1381.238 1004.699 1371.395
 984.223 1369.34 962.289 c 1367.285 940.355 1373.16 918.41 1385.891 900.43
 c 1398.625 882.453 1417.379 869.629 1438.754 864.289 c 1466.211 857.473
 l 1559.332 834.145 1559.332 701.953 1466.211 678.527 c 1438.754 671.711
 l 1417.379 666.371 1398.625 653.547 1385.891 635.57 c 1373.16 617.59 1367.285
 595.645 1369.34 573.711 c 1371.395 551.777 1381.238 531.301 1397.09 516
 c 1417.348 496.32 l 1486.371 429.602 1420.227 315.074 1327.973 341.473 
c 1300.707 349.152 l 1300.703 349.152 l 1279.543 355.195 1256.922 353.473
 1236.922 344.285 c 1216.926 335.102 1200.875 319.062 1191.672 299.074 c
 1182.469 279.082 1180.727 256.461 1186.754 235.297 c 1194.531 208.031 l
 1220.93 115.871 1106.402 49.633 1039.684 118.656 c 1020.004 138.914 l 1020
 138.91 l 1004.699 154.762 984.223 164.605 962.289 166.66 c 940.355 168.715
 918.41 162.84 900.43 150.109 c 882.453 137.375 869.629 118.621 864.289 
97.246 c h
768 1247.711 m 683.016 1248.914 599.242 1227.52 525.238 1185.723 c 451.238
 1143.922 389.664 1083.215 346.824 1009.812 c 303.98 936.41 281.406 852.941
 281.406 767.953 c 281.406 682.961 303.98 599.496 346.824 526.09 c 389.664
 452.688 451.238 391.98 525.238 350.184 c 599.242 308.383 683.016 286.988
 768 288.191 c 895.254 288.191 1017.293 338.742 1107.277 428.723 c 1197.258
 518.707 1247.809 640.746 1247.809 768 c 1247.809 895.254 1197.258 1017.293
 1107.277 1107.277 c 1017.293 1197.258 895.254 1247.809 768 1247.809 c h
768 1247.711 m f
Q Q
showpage
%%Trailer
%%EOF
