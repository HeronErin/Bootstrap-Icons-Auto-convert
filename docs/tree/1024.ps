%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
403.969 10.703 m 399.516 4.027 392.023 0.02 384 0.02 c 375.977 0.02 368.484
 4.027 364.031 10.703 c 220.031 226.703 l 216.809 231.547 215.457 237.395
 216.223 243.16 c 216.988 248.926 219.82 254.215 224.191 258.047 c 228.566
 261.883 234.184 263.996 240 264 c 244.703 264 l 147.648 419.281 l 144.605
 424.145 143.41 429.941 144.273 435.613 c 145.137 441.289 148.008 446.465
 152.359 450.203 c 156.711 453.945 162.262 456 168 456 c 177.168 456 l 98.543
 613.246 l 94.816 620.688 95.207 629.527 99.578 636.609 c 103.949 643.688
 111.68 648 120 648 c 336 648 l 336 768 l 432 768 l 432 648 l 648 648 l 
656.32 648 664.051 643.688 668.422 636.609 c 672.793 629.527 673.184 620.688
 669.457 613.246 c 590.879 456 l 600.047 456 l 605.785 456 611.336 453.945
 615.688 450.203 c 620.043 446.465 622.91 441.289 623.773 435.613 c 624.637
 429.941 623.441 424.145 620.398 419.281 c 523.297 264 l 528 264 l 533.816
 263.996 539.434 261.883 543.809 258.047 c 548.18 254.215 551.012 248.926
 551.777 243.16 c 552.543 237.395 551.191 231.547 547.969 226.703 c h
308.977 228.383 m 306.902 224.637 303.863 221.512 300.176 219.332 c 296.488
 217.156 292.285 216.004 288 216 c 284.832 216 l 384 67.246 l 483.168 216
 l 480 216 l 474.262 216 468.711 218.055 464.359 221.797 c 460.008 225.535
 457.137 230.711 456.273 236.387 c 455.41 242.059 456.605 247.855 459.648
 252.719 c 556.703 408 l 552 408 l 543.68 408 535.949 412.312 531.578 419.391
 c 527.207 426.473 526.816 435.312 530.543 442.754 c 609.121 600 l 158.832
 600 l 237.457 442.754 l 241.184 435.312 240.793 426.473 236.422 419.391
 c 232.051 412.312 224.32 408 216 408 c 211.297 408 l 308.352 252.719 l 
310.617 249.086 311.867 244.914 311.98 240.637 c 312.09 236.359 311.051 
232.129 308.977 228.383 c f
Q Q
showpage
%%Trailer
%%EOF
