%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 36 48 rectclip
1 0 0 -1 0 48 cm q
0 g
25.246 0.668 m 24.969 0.25 24.5 0 24 0 c 23.5 0 23.031 0.25 22.754 0.668
 c 13.754 14.168 l 13.445 14.629 13.418 15.219 13.68 15.707 c 13.938 16.195
 14.445 16.5 15 16.5 c 15.293 16.5 l 9.227 26.203 l 8.938 26.668 8.922 27.25
 9.188 27.727 c 9.453 28.203 9.953 28.5 10.5 28.5 c 11.074 28.5 l 6.16 38.328
 l 5.926 38.793 5.949 39.344 6.223 39.789 c 6.496 40.23 6.98 40.5 7.5 40.5
 c 21 40.5 l 21 48 l 27 48 l 27 40.5 l 40.5 40.5 l 41.02 40.5 41.504 40.23
 41.777 39.789 c 42.051 39.344 42.074 38.793 41.84 38.328 c 36.93 28.5 l
 37.504 28.5 l 38.047 28.5 38.551 28.203 38.816 27.727 c 39.078 27.25 39.062
 26.668 38.773 26.203 c 32.707 16.5 l 33 16.5 l 33.555 16.5 34.062 16.195
 34.32 15.707 c 34.582 15.219 34.555 14.629 34.246 14.168 c h
19.312 14.273 m 19.047 13.797 18.547 13.5 18 13.5 c 17.801 13.5 l 24 4.203
 l 30.199 13.5 l 30 13.5 l 29.453 13.5 28.953 13.797 28.688 14.273 c 28.422
 14.75 28.438 15.332 28.727 15.797 c 34.793 25.5 l 34.5 25.5 l 33.98 25.5
 33.496 25.77 33.223 26.211 c 32.949 26.656 32.926 27.207 33.16 27.672 c
 38.07 37.5 l 9.926 37.5 l 14.84 27.672 l 15.074 27.207 15.051 26.656 14.777
 26.211 c 14.504 25.77 14.02 25.5 13.5 25.5 c 13.207 25.5 l 19.273 15.797
 l 19.559 15.332 19.574 14.75 19.312 14.273 c f
Q Q
showpage
%%Trailer
%%EOF
