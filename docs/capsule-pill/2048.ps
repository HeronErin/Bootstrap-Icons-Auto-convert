%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 23 0 1536 1512
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 23 0 1536 1512
1536 1536 cairo_set_page_size
%%EndPageSetup
q 23 0 1513 1512 rectclip
1 0 0 -1 0 1536 cm q
0 g
1057.922 514.945 m 1111.211 460.793 1140.945 387.773 1140.645 311.801 c
 1140.344 235.824 1110.031 163.043 1056.316 109.316 c 1002.598 55.586 929.828
 25.258 853.852 24.941 c 777.875 24.621 704.852 54.34 650.688 107.617 c 
107.617 650.688 l 53.602 704.703 23.254 777.965 23.254 854.352 c 23.254 
930.742 53.602 1004 107.617 1058.016 c 161.633 1112.031 234.891 1142.375
 311.281 1142.375 c 387.668 1142.375 460.93 1112.031 514.945 1058.016 c 
1058.016 514.945 l h
442.273 451.875 m 718.562 175.492 l 718.559 175.488 l 754.574 139.473 803.422
 119.242 854.352 119.242 c 905.285 119.242 954.129 139.473 990.145 175.488
 c 1026.16 211.504 1046.391 260.348 1046.391 311.281 c 1046.391 362.211 
1026.16 411.059 990.145 447.07 c 713.762 723.457 l h
1152 768 m 1253.844 768 1351.516 808.457 1423.527 880.473 c 1495.543 952.484
 1536 1050.156 1536 1152 c 1536 1253.844 1495.543 1351.516 1423.527 1423.527
 c 1351.516 1495.543 1253.844 1536 1152 1536 c 1050.156 1536 952.484 1495.543
 880.473 1423.527 c 808.457 1351.516 768 1253.844 768 1152 c 768 1050.156
 808.457 952.484 880.473 880.473 c 952.484 808.457 1050.156 768 1152 768
 c 1104 868.031 m 1036.836 879.32 975.848 914.047 931.859 966.043 c 887.875
 1018.039 863.738 1083.941 863.738 1152.047 c 863.738 1220.152 887.875 1286.055
 931.859 1338.051 c 975.848 1390.051 1036.836 1424.773 1104 1436.062 c h
1200 1436.062 m 1267.164 1424.773 1328.152 1390.051 1372.141 1338.051 c
 1416.125 1286.055 1440.262 1220.152 1440.262 1152.047 c 1440.262 1083.941
 1416.125 1018.039 1372.141 966.043 c 1328.152 914.047 1267.164 879.32 1200
 868.031 c h
1200 1436.062 m f
Q Q
showpage
%%Trailer
%%EOF
