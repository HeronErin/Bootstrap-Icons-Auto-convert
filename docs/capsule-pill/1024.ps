%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 11 0 768 756
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 11 0 768 756
768 768 cairo_set_page_size
%%EndPageSetup
q 11 0 757 756 rectclip
1 0 0 -1 0 768 cm q
0 g
528.961 257.473 m 564.848 221.004 578.691 168.227 565.32 118.84 c 551.949
 69.449 513.371 30.863 463.988 17.48 c 414.602 4.098 361.82 17.926 325.344
 53.809 c 53.809 325.344 l 17.426 361.727 3.219 414.75 16.535 464.449 c 
29.852 514.148 68.668 552.965 118.367 566.281 c 168.062 579.598 221.09 565.391
 257.473 529.008 c 529.008 257.473 l h
221.137 225.938 m 359.281 87.746 l 359.281 87.742 l 383.535 63.488 418.891
 54.016 452.027 62.891 c 485.164 71.77 511.047 97.652 519.922 130.789 c 
528.801 163.926 519.328 199.277 495.07 223.535 c 356.879 361.727 l h
576 384 m 626.922 384 675.758 404.227 711.766 440.234 c 747.773 476.242
 768 525.078 768 576 c 768 626.922 747.773 675.758 711.766 711.766 c 675.758
 747.773 626.922 768 576 768 c 525.078 768 476.242 747.773 440.234 711.766
 c 404.227 675.758 384 626.922 384 576 c 384 525.078 404.227 476.242 440.234
 440.234 c 476.242 404.227 525.078 384 576 384 c 552 434.016 m 506.859 441.605
 468.012 470.203 447.359 511.055 c 426.707 551.906 426.707 600.145 447.359
 640.996 c 468.012 681.848 506.859 710.445 552 718.031 c h
600 718.031 m 645.141 710.445 683.988 681.848 704.641 640.996 c 725.293
 600.145 725.293 551.906 704.641 511.055 c 683.988 470.203 645.141 441.605
 600 434.016 c h
600 718.031 m f
Q Q
showpage
%%Trailer
%%EOF
