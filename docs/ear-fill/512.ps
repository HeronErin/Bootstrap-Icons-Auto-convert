%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 72 0 264 384 rectclip
1 0 0 -1 0 384 cm q
0 g
204 0 m 168.992 0 135.418 13.906 110.66 38.66 c 85.906 63.418 72 96.992
 72 132 c 72 301.129 l 71.984 327.234 84.273 351.82 105.16 367.48 c 126.051
 383.141 153.094 388.039 178.148 380.707 c 203.203 373.375 223.34 354.668
 232.488 330.215 c 244.727 297.504 l 248.621 287.18 254.043 277.496 260.809
 268.777 c 309 206.832 l 328.734 181.453 338.211 149.582 335.547 117.543
 c 332.883 85.504 318.277 55.633 294.621 33.863 c 270.965 12.09 239.988 
0.004 207.84 0 c h
168 132 m 168 196.68 l 170.688 195.238 173.344 193.703 175.969 192.07 c
 183.816 187.078 189.816 181.512 193.25 174.621 c 193.246 174.625 l 196.219
 168.691 203.434 166.289 209.363 169.262 c 215.297 172.23 217.695 179.445
 214.727 185.375 c 208.582 197.688 198.574 206.137 188.832 212.328 c 182.098
 216.434 175.145 220.168 168 223.512 c 168 276 l 168 282.629 162.629 288
 156 288 c 149.371 288 144 282.629 144 276 c 144 132 l 144 110.562 155.438
 90.758 174 80.039 c 192.562 69.32 215.438 69.32 234 80.039 c 252.562 90.758
 264 110.562 264 132 c 264 144 l 264 150.629 258.629 156 252 156 c 245.371
 156 240 150.629 240 144 c 240 132 l 240 119.137 233.137 107.254 222 100.824
 c 210.863 94.391 197.137 94.391 186 100.824 c 174.863 107.254 168 119.137
 168 132 c f
Q Q
showpage
%%Trailer
%%EOF
