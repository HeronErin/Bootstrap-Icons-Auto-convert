%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 1056 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
816 0 m 675.965 0 541.668 55.629 442.648 154.648 c 343.629 253.668 288 
387.965 288 528 c 288 1204.512 l 287.957 1282.203 315.207 1357.445 364.988
 1417.094 c 414.77 1476.742 483.922 1517.008 560.371 1530.863 c 636.816 
1544.719 715.703 1531.285 783.254 1492.902 c 850.801 1454.52 902.723 1393.629
 929.953 1320.863 c 978.914 1190.016 l 978.91 1190.016 l 994.488 1148.711
 1016.168 1109.977 1043.23 1075.105 c 1236 827.328 l 1314.941 725.809 1352.844
 598.328 1342.191 470.168 c 1331.535 342.012 1273.102 222.539 1178.48 135.449
 c 1083.859 48.355 959.961 0.012 831.359 0 c h
672 528 m 672 786.719 l 682.754 780.957 693.375 774.816 703.871 768.285
 c 735.262 748.316 759.262 726.047 772.992 698.492 c 772.992 698.496 l 780.676
 683.148 795.961 673.062 813.094 672.043 c 830.227 671.023 846.605 679.219
 856.055 693.547 c 865.504 707.875 866.594 726.156 858.91 741.504 c 834.336
 790.75 794.301 824.543 755.324 849.312 c 755.328 849.312 l 728.391 865.734
 700.57 880.668 672 894.047 c 672 1104 l 672 1121.148 662.852 1136.996 648
 1145.57 c 633.148 1154.145 614.852 1154.145 600 1145.57 c 585.148 1136.996
 576 1121.148 576 1104 c 576 528 l 576 464.348 601.285 403.305 646.293 358.293
 c 691.305 313.285 752.348 288 816 288 c 879.652 288 940.695 313.285 985.707
 358.293 c 1030.715 403.305 1056 464.348 1056 528 c 1056 576 l 1056 593.148
 1046.852 608.996 1032 617.57 c 1017.148 626.145 998.852 626.145 984 617.57
 c 969.148 608.996 960 593.148 960 576 c 960 528 l 960 476.555 932.555 429.016
 888 403.293 c 843.445 377.57 788.555 377.57 744 403.293 c 699.445 429.016
 672 476.555 672 528 c f
Q Q
showpage
%%Trailer
%%EOF
