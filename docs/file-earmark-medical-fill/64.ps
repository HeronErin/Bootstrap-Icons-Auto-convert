%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 36 48 rectclip
1 0 0 -1 0 48 cm q
0 g
27.879 0 m 12 0 l 8.688 0 6 2.688 6 6 c 6 42 l 6 43.59 6.633 45.117 7.758
 46.242 c 8.883 47.367 10.41 48 12 48 c 36 48 l 37.59 48 39.117 47.367 40.242
 46.242 c 41.367 45.117 42 43.59 42 42 c 42 14.121 l 42 13.324 41.684 12.562
 41.121 12 c 30 0.879 l 29.438 0.316 28.676 0 27.879 0 c 28.5 10.5 m 28.5
 4.5 l 37.5 13.5 l 31.5 13.5 l 29.844 13.5 28.5 12.156 28.5 10.5 c 19.5 
16.5 m 19.5 18.402 l 21.148 17.453 l 21.148 17.449 l 21.492 17.25 21.902
 17.191 22.289 17.293 c 22.676 17.398 23.004 17.648 23.203 17.996 c 23.406
 18.34 23.457 18.754 23.352 19.137 c 23.25 19.523 22.996 19.852 22.648 20.051
 c 21 21 l 22.648 21.949 l 22.996 22.148 23.25 22.477 23.352 22.863 c 23.457
 23.246 23.406 23.66 23.203 24.004 c 23.004 24.352 22.676 24.602 22.289 
24.707 c 21.902 24.809 21.492 24.75 21.148 24.551 c 19.5 23.598 l 19.5 25.5
 l 19.5 26.328 18.828 27 18 27 c 17.172 27 16.5 26.328 16.5 25.5 c 16.5 
23.598 l 14.852 24.547 l 14.852 24.551 l 14.508 24.75 14.098 24.809 13.711
 24.707 c 13.324 24.602 12.996 24.352 12.797 24.004 c 12.594 23.66 12.543
 23.246 12.648 22.863 c 12.75 22.477 13.004 22.148 13.352 21.949 c 15 21
 l 13.352 20.051 l 12.641 19.633 12.398 18.719 12.812 18.004 c 13.227 17.289
 14.137 17.043 14.852 17.449 c 16.5 18.398 l 16.5 16.5 l 16.5 15.672 17.172
 15 18 15 c 18.828 15 19.5 15.672 19.5 16.5 c 13.5 30 m 28.5 30 l 29.328
 30 30 30.672 30 31.5 c 30 32.328 29.328 33 28.5 33 c 13.5 33 l 12.672 33
 12 32.328 12 31.5 c 12 30.672 12.672 30 13.5 30 c 13.5 36 m 28.5 36 l 29.328
 36 30 36.672 30 37.5 c 30 38.328 29.328 39 28.5 39 c 13.5 39 l 12.672 39
 12 38.328 12 37.5 c 12 36.672 12.672 36 13.5 36 c f
Q Q
showpage
%%Trailer
%%EOF
