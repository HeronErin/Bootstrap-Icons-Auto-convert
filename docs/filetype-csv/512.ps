%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 264 384 l 264 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
84.406 356.184 m 84.688 363.832 88.18 371.004 94.031 375.938 c 97.152 378.531
 100.977 380.547 105.504 381.984 c 110.047 383.441 115.367 384.168 121.465
 384.168 c 129.578 384.168 136.449 382.902 142.082 380.375 c 147.746 377.848
 152.059 374.328 155.02 369.816 c 158.012 365.273 159.508 360.023 159.508
 354.074 c 159.508 348.699 158.438 344.219 156.293 340.633 c 156.289 340.633
 l 154.094 337.035 150.988 334.082 147.289 332.062 c 143.043 329.707 138.461
 328.008 133.703 327.023 c 118.801 323.566 l 115.293 322.898 111.98 321.457
 109.105 319.344 c 106.883 317.633 105.602 314.973 105.648 312.168 c 105.648
 308.426 107.129 305.352 110.09 302.953 c 113.098 300.52 117.195 299.305
 122.379 299.305 c 125.805 299.305 128.762 299.848 131.258 300.938 c 133.566
 301.852 135.602 303.348 137.16 305.281 c 138.637 307.062 139.629 309.195
 140.039 311.473 c 158.039 311.473 l 157.73 306.586 156.07 301.883 153.238
 297.887 c 150.215 293.57 146.066 290.168 141.238 288.047 c 135.352 285.453
 128.953 284.207 122.52 284.398 c 115.496 284.398 109.289 285.598 103.895
 288 c 98.504 290.383 94.285 293.754 91.246 298.105 c 88.207 302.473 86.688
 307.586 86.688 313.441 c 86.688 318.273 87.664 322.465 89.617 326.016 c
 91.602 329.582 94.418 332.52 98.066 334.824 c 101.715 337.113 106.027 338.816
 111.004 339.938 c 125.836 343.395 l 130.797 344.562 134.5 346.105 136.949
 348.027 c 136.945 348.023 l 139.363 349.883 140.723 352.801 140.594 355.848
 c 140.645 358.324 139.934 360.754 138.551 362.809 c 137.004 364.914 134.879
 366.523 132.434 367.441 c 129.762 368.562 126.457 369.121 122.523 369.121
 c 119.723 369.121 117.164 368.801 114.844 368.16 c 114.84 368.16 l 112.711
 367.59 110.699 366.656 108.887 365.398 c 105.664 363.305 103.445 359.969
 102.77 356.184 c h
19.344 328.633 m 19.344 322.664 20.16 317.602 21.793 313.441 c 23.219 309.605
 25.738 306.277 29.039 303.863 c 32.398 301.594 36.387 300.441 40.441 300.574
 c 44.043 300.574 47.227 301.352 49.992 302.902 c 52.695 304.348 54.953 
306.508 56.52 309.145 c 58.191 311.922 59.18 315.055 59.398 318.289 c 77.758
 318.289 l 77.758 316.562 l 77.762 316.559 l 77.438 307.621 73.379 299.227
 66.574 293.426 c 63.145 290.48 59.152 288.262 54.84 286.895 c 50.16 285.293
 45.242 284.504 40.297 284.566 c 31.754 284.566 24.465 286.352 18.434 289.918
 c 12.434 293.469 7.859 298.527 4.707 305.086 c 1.586 311.645 0.02 319.477
 0.004 328.582 c 0.004 340.535 l 0.004 349.625 1.547 357.43 4.637 363.961
 c 7.789 370.473 12.363 375.48 18.363 378.984 c 24.363 382.457 31.676 384.191
 40.301 384.191 c 47.324 384.191 53.605 382.879 59.141 380.254 c 64.676 
377.629 69.078 373.996 72.34 369.359 c 72.336 369.359 l 75.648 364.594 77.527
 358.98 77.762 353.184 c 77.762 351.359 l 59.426 351.359 l 59.195 354.449
 58.227 357.438 56.594 360.07 c 54.992 362.621 52.738 364.691 50.062 366.07
 c 47.059 367.5 43.766 368.215 40.441 368.16 c 36.387 368.27 32.391 367.164
 28.969 364.992 c 25.68 362.656 23.176 359.375 21.793 355.586 c 20.039 350.766
 19.207 345.66 19.344 340.535 c h
217.078 382.344 m 194.207 382.344 l 162.094 286.367 l 184.102 286.367 l
 205.605 361.68 l 206.516 361.68 l 227.828 286.367 l 248.926 286.367 l h
217.078 382.344 m f*
Q Q
showpage
%%Trailer
%%EOF
