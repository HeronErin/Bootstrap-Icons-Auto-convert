%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 528 768 l 528 720 l 576 720 l 588.73 720 
600.938 714.941 609.941 705.941 c 618.941 696.938 624 684.73 624 672 c 624
 216 l 528 216 l 508.906 216 490.59 208.414 477.09 194.91 c 463.586 181.41
 456 163.094 456 144 c 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059
 62.059 c 149.059 71.062 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96
 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c
 456 0 l h
168.816 712.367 m 169.371 727.66 176.363 742.008 188.062 751.871 c 194.301
 757.055 201.949 761.086 211.008 763.969 c 220.098 766.879 230.734 768.336
 242.93 768.336 c 259.152 768.336 272.898 765.809 284.16 760.75 c 295.488
 755.695 304.113 748.652 310.031 739.629 c 316.016 730.539 319.008 720.043
 319.008 708.141 c 319.008 697.387 316.863 688.43 312.574 681.262 c 312.574
 681.266 l 308.184 674.07 301.977 668.16 294.574 664.129 c 286.082 659.414
 276.922 656.016 267.406 654.047 c 237.598 647.137 l 237.602 647.137 l 230.59
 645.797 223.965 642.91 218.207 638.688 c 213.766 635.262 211.203 629.941
 211.297 624.336 c 211.297 616.848 214.258 610.703 220.176 605.902 c 226.191
 601.039 234.383 598.605 244.75 598.605 c 251.598 598.605 257.52 599.695
 262.512 601.871 c 267.133 603.699 271.199 606.695 274.32 610.559 c 277.273
 614.125 279.258 618.391 280.078 622.945 c 316.078 622.945 l 315.461 613.172
 312.137 603.766 306.48 595.777 c 300.43 587.145 292.129 580.336 282.48 
576.098 c 270.699 570.906 257.906 568.414 245.039 568.801 c 230.992 568.801
 218.574 571.199 207.793 576 c 197.008 580.77 188.578 587.504 182.496 596.207
 c 176.418 604.941 173.375 615.168 173.375 626.879 c 173.375 636.543 175.328
 644.926 179.23 652.031 c 183.199 659.168 188.832 665.039 196.125 669.648
 c 203.422 674.223 212.047 677.633 221.996 679.871 c 251.66 686.781 l 261.582
 689.117 268.988 692.207 273.883 696.047 c 273.887 696.047 l 278.723 699.766
 281.445 705.602 281.184 711.695 c 281.293 716.645 279.867 721.508 277.105
 725.617 c 274.012 729.828 269.758 733.047 264.863 734.879 c 259.52 737.117
 252.91 738.238 245.039 738.238 c 239.438 738.238 234.32 737.598 229.68 
736.316 c 229.68 736.32 l 225.426 735.176 221.398 733.309 217.777 730.801
 c 211.324 726.609 206.895 719.938 205.535 712.367 c h
38.688 657.266 m 38.688 645.328 40.32 635.203 43.582 626.883 c 43.586 626.879
 l 46.438 619.215 51.477 612.555 58.078 607.727 c 64.797 603.184 72.777 
600.883 80.879 601.152 c 88.078 601.152 94.445 602.703 99.984 605.809 c 
105.395 608.699 109.91 613.016 113.039 618.289 c 116.387 623.84 118.359 
630.109 118.801 636.574 c 155.52 636.574 l 155.52 633.117 l 155.52 633.121
 l 154.875 615.242 146.762 598.457 133.152 586.848 c 126.285 580.961 118.305
 576.52 109.68 573.793 c 100.32 570.586 90.484 569.012 80.594 569.137 c 
63.504 569.137 48.93 572.703 36.867 579.84 c 24.867 586.945 15.715 597.055
 9.41 610.176 c 3.172 623.297 0.035 638.961 0.004 657.168 c 0.004 681.07
 l 0.004 699.246 3.094 714.863 9.27 727.918 c 15.574 740.941 24.727 750.957
 36.727 757.965 c 48.727 764.91 63.352 768.379 80.598 768.379 c 94.645 768.379
 107.207 765.754 118.277 760.508 c 129.348 755.262 138.148 747.996 144.676
 738.715 c 144.672 738.719 l 151.293 729.188 155.059 717.965 155.52 706.367
 c 155.52 702.719 l 118.848 702.719 l 118.395 708.898 116.449 714.879 113.184
 720.145 c 109.984 725.242 105.477 729.387 100.129 732.145 c 94.121 735 
87.531 736.43 80.879 736.32 c 72.773 736.535 64.785 734.328 57.938 729.984
 c 51.355 725.309 46.352 718.75 43.586 711.168 c 40.074 701.531 38.414 691.324
 38.688 681.07 c h
434.16 764.691 m 388.418 764.691 l 324.195 572.738 l 368.211 572.738 l 
411.219 723.363 l 413.043 723.363 l 455.668 572.738 l 497.859 572.738 l 
h
434.16 764.691 m f*
Q Q
showpage
%%Trailer
%%EOF
