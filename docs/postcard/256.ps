%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
24 24 m 17.637 24 11.531 26.527 7.031 31.031 c 2.527 35.531 0 41.637 0 
48 c 0 144 l 0 150.363 2.527 156.469 7.031 160.969 c 11.531 165.473 17.637
 168 24 168 c 168 168 l 174.363 168 180.469 165.473 184.969 160.969 c 189.473
 156.469 192 150.363 192 144 c 192 48 l 192 41.637 189.473 35.531 184.969
 31.031 c 180.469 26.527 174.363 24 168 24 c h
12 48 m 12 41.371 17.371 36 24 36 c 168 36 l 171.184 36 174.234 37.266 
176.484 39.516 c 178.734 41.766 180 44.816 180 48 c 180 144 l 180 147.184
 178.734 150.234 176.484 152.484 c 174.234 154.734 171.184 156 168 156 c
 24 156 l 17.371 156 12 150.629 12 144 c h
102 54 m 102 50.688 99.312 48 96 48 c 92.688 48 90 50.688 90 54 c 90 138
 l 90 141.312 92.688 144 96 144 c 99.312 144 102 141.312 102 138 c h
24 66 m 24 62.688 26.688 60 30 60 c 72 60 l 75.312 60 78 62.688 78 66 c
 78 69.312 75.312 72 72 72 c 30 72 l 26.688 72 24 69.312 24 66 c 24 90 m
 24 86.688 26.688 84 30 84 c 72 84 l 75.312 84 78 86.688 78 90 c 78 93.312
 75.312 96 72 96 c 30 96 l 26.688 96 24 93.312 24 90 c 24 114 m 24 110.688
 26.688 108 30 108 c 72 108 l 75.312 108 78 110.688 78 114 c 78 117.312 
75.312 120 72 120 c 30 120 l 26.688 120 24 117.312 24 114 c 126 60 m 122.688
 60 120 62.688 120 66 c 120 102 l 120 103.59 120.633 105.117 121.758 106.242
 c 122.883 107.367 124.41 108 126 108 c 162 108 l 163.59 108 165.117 107.367
 166.242 106.242 c 167.367 105.117 168 103.59 168 102 c 168 66 l 168 64.41
 167.367 62.883 166.242 61.758 c 165.117 60.633 163.59 60 162 60 c h
156 96 m 132 96 l 132 72 l 156 72 l h
156 96 m f*
Q Q
showpage
%%Trailer
%%EOF
