%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 18 0 78 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 18 0 78 96
96 96 cairo_set_page_size
%%EndPageSetup
q 18 0 60 96 rectclip
1 0 0 -1 0 96 cm q
0 g
24.875 0.875 m 25.441 0.312 26.203 0 27 0 c 69 0 l 69.797 0 70.559 0.316
 71.121 0.879 c 71.684 1.441 72 2.203 72 3 c 72 7.078 69.949 10.043 68.125
 11.875 c 67.367 12.625 66.625 13.219 66 13.664 c 66 40.25 l 66.469 40.539
 l 67.688 41.301 69.324 42.422 70.977 43.867 c 74.16 46.648 78 51.16 78 
57 c 78 57.797 77.684 58.559 77.121 59.121 c 76.559 59.684 75.797 60 75 
60 c 51 60 l 51 87 l 51 88.656 49.656 96 48 96 c 46.344 96 45 88.656 45 
87 c 45 60 l 21 60 l 19.344 60 18 58.656 18 57 c 18 51.16 21.84 46.648 25.02
 43.867 c 26.574 42.52 28.238 41.309 30 40.246 c 30 13.66 l 29.246 13.121
 28.535 12.523 27.875 11.875 c 26.051 10.043 24 7.074 24 3 c 24 2.203 24.312
 1.441 24.875 0.875 c 34.355 9.324 m 34.344 9.316 l h
34.344 9.316 m 34.355 9.324 l 35.363 9.836 36 10.871 36 12 c 36 42 l 36
 43.137 35.359 44.172 34.344 44.684 c 34.332 44.684 l 34.262 44.727 l 33.938
 44.906 l 33.938 44.902 l 32.168 45.895 30.508 47.059 28.973 48.383 c 27.066
 50.051 25.461 51.957 24.621 54 c 71.375 54 l 70.535 51.961 68.934 50.051
 67.023 48.383 c 67.027 48.383 l 65.398 46.977 63.629 45.75 61.738 44.723
 c 61.668 44.688 l 61.656 44.688 l 60.641 44.18 59.996 43.137 60 42 c 60
 12 l 59.996 10.816 60.688 9.738 61.77 9.254 c 62.535 8.801 63.242 8.254
 63.875 7.625 c 64.355 7.145 64.805 6.605 65.16 6 c 30.84 6 l 31.203 6.602
 31.633 7.141 32.125 7.625 c 32.789 8.285 33.535 8.852 34.344 9.316 c f
Q Q
showpage
%%Trailer
%%EOF
