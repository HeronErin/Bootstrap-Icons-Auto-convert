%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1248 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1248 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 960 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
398.016 14.016 m 407.035 5.02 419.262 -0.023 432 0 c 1104 0 l 1116.73 0
 1128.938 5.059 1137.941 14.059 c 1146.941 23.062 1152 35.27 1152 48 c 1152
 113.281 1119.168 160.703 1089.984 189.984 c 1077.887 201.984 1065.984 211.488
 1056 218.594 c 1056 643.969 l 1063.488 648.578 l 1082.977 660.77 1109.184
 678.723 1135.586 701.859 c 1186.559 746.398 1248 818.594 1248 912 c 1248
 924.73 1242.941 936.938 1233.941 945.941 c 1224.938 954.941 1212.73 960
 1200 960 c 816 960 l 816 1392 l 816 1418.496 794.496 1536 768 1536 c 741.504
 1536 720 1418.496 720 1392 c 720 960 l 336 960 l 323.27 960 311.062 954.941
 302.059 945.941 c 293.059 936.938 288 924.73 288 912 c 288 818.594 349.441
 746.398 400.32 701.855 c 425.18 680.32 451.836 660.953 480 643.969 c 480
 218.594 l 467.953 209.945 456.59 200.379 446.016 189.984 c 416.832 160.703
 384 113.184 384 48 c 383.977 35.262 389.02 23.035 398.016 14.016 c 549.695
 149.184 m 549.504 149.086 l h
549.504 149.086 m 549.695 149.184 l 557.609 153.195 564.254 159.316 568.898
 166.875 c 573.543 174.434 576 183.129 576 192 c 576 672 l 576 680.906 573.52
 689.637 568.844 697.215 c 564.164 704.793 557.469 710.922 549.504 714.91
 c 549.312 714.91 l 548.16 715.582 l 542.977 718.461 l 542.977 718.465 l
 514.699 734.297 488.102 752.953 463.586 774.145 c 433.059 800.832 407.426
 831.359 393.984 864 c 1142.016 864 l 1128.574 831.359 1102.945 800.832 
1072.414 774.145 c 1046.402 751.652 1018.047 732.02 987.84 715.586 c 986.688
 715.012 l 986.496 715.012 l 986.496 715.008 l 978.52 711.012 971.812 704.867
 967.133 697.27 c 962.453 689.676 959.984 680.922 960 672 c 960 192 l 959.965
 182.719 962.621 173.625 967.645 165.82 c 972.672 158.016 979.855 151.836
 988.32 148.031 c 1000.582 140.781 1011.898 132.043 1022.016 122.016 c 1029.695
 114.336 1036.895 105.695 1042.559 96 c 493.441 96 l 499.266 105.602 506.113
 114.273 513.984 122.016 c 524.602 132.539 536.543 141.637 549.504 149.09
 c f
Q Q
showpage
%%Trailer
%%EOF
