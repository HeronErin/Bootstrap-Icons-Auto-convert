%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 9 0 39 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 9 0 39 48
48 48 cairo_set_page_size
%%EndPageSetup
q 9 0 30 48 rectclip
1 0 0 -1 0 48 cm q
0 g
12.438 0.438 m 12.719 0.156 13.102 0 13.5 0 c 34.5 0 l 34.898 0 35.281 
0.156 35.562 0.438 c 35.844 0.719 36 1.102 36 1.5 c 36 3.539 34.973 5.023
 34.062 5.938 c 33.684 6.312 33.312 6.609 33 6.832 c 33 20.125 l 33.234 
20.27 l 33.844 20.652 34.664 21.211 35.488 21.934 c 37.078 23.324 39 25.582
 39 28.5 c 39 28.898 38.844 29.281 38.562 29.562 c 38.281 29.844 37.898 
30 37.5 30 c 25.5 30 l 25.5 43.5 l 25.5 44.328 24.828 48 24 48 c 23.172 
48 22.5 44.328 22.5 43.5 c 22.5 30 l 10.5 30 l 9.672 30 9 29.328 9 28.5 
c 9 25.582 10.922 23.324 12.512 21.934 c 13.285 21.262 14.121 20.656 15 
20.125 c 15 6.832 l 14.625 6.562 14.27 6.262 13.938 5.938 c 13.027 5.023
 12 3.535 12 1.5 c 12 1.102 12.156 0.719 12.438 0.438 c 17.176 4.66 m 17.168
 4.656 l h
17.168 4.656 m 17.176 4.66 l 17.18 4.66 l 17.684 4.918 18 5.434 18 6 c 
18 21 l 18 21.566 17.68 22.086 17.172 22.34 c 17.164 22.34 l 17.129 22.359
 l 16.969 22.449 l 16.969 22.453 l 16.086 22.945 15.254 23.531 14.488 24.191
 c 13.535 25.027 12.734 25.98 12.312 27 c 35.688 27 l 35.266 25.98 34.465
 25.027 33.512 24.191 c 32.699 23.488 31.812 22.875 30.871 22.363 c 30.836
 22.344 l 30.828 22.344 l 30.32 22.09 30 21.57 30 21 c 30 6 l 29.996 5.406
 30.344 4.867 30.887 4.625 c 31.27 4.398 31.621 4.125 31.938 3.812 c 32.176
 3.574 32.402 3.301 32.578 3 c 15.422 3 l 15.605 3.301 15.816 3.57 16.062
 3.812 c 16.395 4.141 16.766 4.426 17.172 4.66 c f
Q Q
showpage
%%Trailer
%%EOF
