%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 0 624 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 0 624 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 0 480 768 rectclip
1 0 0 -1 0 768 cm q
0 g
199.008 7.008 m 203.52 2.508 209.629 -0.012 216 0 c 552 0 l 558.363 0 564.469
 2.527 568.969 7.031 c 573.473 11.531 576 17.637 576 24 c 576 56.641 559.586
 80.352 544.992 94.992 c 538.945 100.992 532.992 105.746 528 109.297 c 528
 321.984 l 531.742 324.289 l 541.484 330.387 554.59 339.359 567.789 350.93
 c 593.281 373.199 624 409.297 624 456 c 624 462.363 621.473 468.469 616.969
 472.969 c 612.469 477.473 606.363 480 600 480 c 408 480 l 408 696 l 408
 709.246 397.246 768 384 768 c 370.754 768 360 709.246 360 696 c 360 480
 l 168 480 l 161.637 480 155.531 477.473 151.031 472.969 c 146.527 468.469
 144 462.363 144 456 c 144 409.297 174.719 373.199 200.16 350.93 c 212.59
 340.16 225.918 330.477 240 321.984 c 240 109.297 l 233.977 104.973 228.297
 100.191 223.008 94.992 c 208.414 80.352 192 56.594 192 24 c 191.988 17.629
 194.508 11.52 199.008 7.008 c 274.848 74.594 m 274.75 74.547 l h
274.75 74.547 m 274.848 74.594 l 278.805 76.598 282.129 79.66 284.449 83.438
 c 286.77 87.215 288 91.566 288 96 c 288 336 l 288 340.453 286.762 344.82
 284.422 348.609 c 282.082 352.398 278.734 355.461 274.754 357.457 c 274.656
 357.457 l 274.082 357.793 l 271.488 359.234 l 271.488 359.23 l 257.352 
367.148 244.051 376.477 231.793 387.07 c 216.527 400.414 203.715 415.68 
196.992 432 c 571.008 432 l 564.289 415.68 551.473 400.414 536.207 387.07
 c 523.203 375.824 509.023 366.008 493.922 357.793 c 493.348 357.504 l 493.246
 357.504 l 489.258 355.504 485.906 352.434 483.566 348.637 c 481.227 344.836
 479.992 340.461 480 336 c 480 96 l 479.98 91.359 481.309 86.812 483.824
 82.91 c 486.336 79.008 489.926 75.918 494.16 74.016 c 500.289 70.391 505.949
 66.023 511.008 61.008 c 514.848 57.168 518.449 52.848 521.281 48 c 246.719
 48 l 249.629 52.801 253.055 57.137 256.992 61.008 c 262.301 66.27 268.27
 70.82 274.754 74.543 c f
Q Q
showpage
%%Trailer
%%EOF
