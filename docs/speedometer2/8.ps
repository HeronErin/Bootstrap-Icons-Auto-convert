%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 1.5 m 3.105 1.5 3.188 1.582 3.188 1.688 c 3.188 2.25 l 3.188 2.5 2.812
 2.5 2.812 2.25 c 2.812 1.688 l 2.812 1.582 2.895 1.5 3 1.5 c 1.398 2.148
 m 1.473 2.078 1.59 2.078 1.664 2.148 c 2.008 2.492 l 2.184 2.668 1.918 
2.934 1.742 2.758 c 1.398 2.414 l 1.328 2.34 1.328 2.223 1.398 2.148 c 0.75
 3.75 m 0.75 3.645 0.832 3.562 0.938 3.562 c 1.531 3.562 l 1.781 3.562 1.781
 3.938 1.531 3.938 c 0.938 3.938 l 0.832 3.938 0.75 3.855 0.75 3.75 c 4.312
 3.75 m 4.312 3.645 4.395 3.562 4.5 3.562 c 5.062 3.562 l 5.312 3.562 5.312
 3.938 5.062 3.938 c 4.5 3.938 l 4.395 3.938 4.312 3.855 4.312 3.75 c 4.594
 2.156 m 4.543 2.105 4.457 2.102 4.398 2.148 c 2.832 3.492 l 2.758 3.555
 2.711 3.645 2.707 3.742 c 2.707 3.836 2.742 3.93 2.812 3.996 c 2.883 4.066
 2.977 4.098 3.074 4.094 c 3.168 4.086 3.258 4.039 3.32 3.965 c 4.609 2.352
 l 4.605 2.352 l 4.652 2.293 4.648 2.211 4.594 2.156 c h
4.594 2.156 m f
0 3.75 m 0 2.867 0.391 2.027 1.066 1.457 c 1.742 0.891 2.637 0.648 3.508
 0.797 c 4.379 0.945 5.137 1.469 5.586 2.23 c 6.035 2.992 6.125 3.914 5.832
 4.746 c 5.668 5.215 5.141 5.348 4.734 5.215 c 4.242 5.059 3.555 4.875 3
 4.875 c 2.445 4.875 1.758 5.059 1.27 5.215 c 0.863 5.348 0.336 5.215 0.172
 4.746 c 0.168 4.746 l 0.059 4.426 0 4.09 0 3.75 c 3 1.125 m 2.148 1.125
 1.348 1.539 0.855 2.234 c 0.363 2.93 0.242 3.82 0.523 4.625 c 0.598 4.84
 0.871 4.953 1.152 4.859 c 1.648 4.699 2.383 4.5 3 4.5 c 3.617 4.5 4.352
 4.699 4.848 4.859 c 5.133 4.953 5.402 4.84 5.477 4.621 c 5.477 4.625 l 
5.758 3.82 5.637 2.93 5.145 2.234 c 4.652 1.539 3.852 1.125 3 1.125 c f*
Q Q
showpage
%%Trailer
%%EOF
