%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 11 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 11 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 11 96 73 rectclip
1 0 0 -1 0 96 cm q
0 g
48 24 m 48.797 24 49.559 24.316 50.121 24.879 c 50.684 25.441 51 26.203
 51 27 c 51 36 l 51 37.656 49.656 39 48 39 c 46.344 39 45 37.656 45 36 c
 45 27 l 45 25.344 46.344 24 48 24 c 22.391 34.391 m 23.562 33.223 25.461
 33.223 26.633 34.391 c 32.121 39.875 l 32.125 39.875 l 33.297 41.051 33.297
 42.949 32.125 44.125 c 30.949 45.297 29.051 45.297 27.875 44.125 c 22.391
 38.637 l 22.391 38.633 l 21.223 37.461 21.223 35.562 22.391 34.391 c 12
 60 m 12 58.344 13.344 57 15 57 c 24.516 57 l 26.172 57 27.516 58.344 27.516
 60 c 27.516 61.656 26.172 63 24.516 63 c 15 63 l 13.344 63 12 61.656 12
 60 c 69 60 m 69 58.344 70.344 57 72 57 c 81 57 l 82.656 57 84 58.344 84
 60 c 84 61.656 82.656 63 81 63 c 72 63 l 70.344 63 69 61.656 69 60 c 73.523
 34.523 m 72.66 33.668 71.289 33.617 70.363 34.402 c 45.281 55.859 l 44.102
 56.855 43.395 58.305 43.344 59.852 c 43.289 61.395 43.895 62.887 45.008
 63.961 c 46.117 65.035 47.633 65.59 49.172 65.484 c 50.715 65.379 52.141
 64.625 53.094 63.406 c 73.699 37.625 l 74.438 36.695 74.363 35.359 73.523
 34.52 c h
73.523 34.523 m f
0 60 m 0.012 45.859 6.258 32.445 17.07 23.336 c 27.883 14.227 42.16 10.348
 56.098 12.73 c 70.035 15.117 82.211 23.523 89.375 35.711 c 96.543 47.898
 97.973 62.629 93.281 75.965 c 90.629 83.484 82.211 85.578 75.688 83.465
 c 67.855 80.93 56.852 78 48 78 c 39.156 78 28.141 80.93 20.309 83.465 c
 13.785 85.578 5.367 83.484 2.715 75.965 c 2.719 75.965 l 0.914 70.836 -0.004
 65.438 0 60 c 48 18 m 34.367 17.996 21.582 24.609 13.707 35.734 c 5.832
 46.863 3.848 61.117 8.383 73.973 c 9.602 77.422 13.922 79.23 18.461 77.754
 c 26.383 75.199 38.148 72 48 72 c 57.852 72 69.625 75.191 77.539 77.762
 c 82.082 79.23 86.402 77.426 87.617 73.977 c 87.617 73.973 l 92.152 61.117
 90.168 46.863 82.293 35.734 c 74.418 24.609 61.633 17.996 48 18 c f*
Q Q
showpage
%%Trailer
%%EOF
