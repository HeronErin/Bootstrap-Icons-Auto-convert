%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 47 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 47 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 47 384 289 rectclip
1 0 0 -1 0 384 cm q
0 g
192 96 m 195.184 96 198.234 97.266 200.484 99.516 c 202.734 101.766 204
 104.816 204 108 c 204 144 l 204 150.629 198.629 156 192 156 c 185.371 156
 180 150.629 180 144 c 180 108 l 180 101.371 185.371 96 192 96 c 89.566 
137.566 m 94.254 132.883 101.852 132.883 106.535 137.566 c 128.496 159.504
 l 133.188 164.195 133.188 171.805 128.496 176.496 c 123.805 181.188 116.195
 181.188 111.504 176.496 c 89.566 154.535 l 84.883 149.852 84.883 142.254
 89.566 137.566 c 48 240 m 48 233.371 53.371 228 60 228 c 98.062 228 l 104.691
 228 110.062 233.371 110.062 240 c 110.062 246.629 104.691 252 98.062 252
 c 60 252 l 53.371 252 48 246.629 48 240 c 276 240 m 276 233.371 281.371
 228 288 228 c 324 228 l 330.629 228 336 233.371 336 240 c 336 246.629 330.629
 252 324 252 c 288 252 l 281.371 252 276 246.629 276 240 c 294.098 138.098
 m 290.645 134.676 285.148 134.469 281.449 137.617 c 181.129 223.441 l 176.402
 227.422 173.582 233.223 173.371 239.398 c 173.164 245.578 175.578 251.555
 180.023 255.848 c 184.469 260.145 190.527 262.352 196.691 261.93 c 202.859
 261.508 208.559 258.492 212.375 253.633 c 294.789 150.504 l 294.793 150.504
 l 297.75 146.785 297.449 141.438 294.098 138.07 c h
294.098 138.098 m f
0 240 m 0.035 202.629 10.973 166.082 31.473 134.84 c 51.973 103.594 81.148
 79.012 115.418 64.105 c 149.684 49.203 187.559 44.621 224.391 50.926 c 
261.227 57.23 295.418 74.145 322.777 99.598 c 350.141 125.055 369.477 157.938
 378.422 194.223 c 387.363 230.504 385.523 268.609 373.129 303.863 c 362.52
 333.934 328.848 342.312 302.762 333.863 c 271.414 323.711 227.398 312 192
 312 c 156.625 312 112.559 323.711 81.238 333.863 c 55.148 342.312 21.477
 333.934 10.871 303.863 c 3.656 283.344 -0.02 261.75 0 240 c 192 72 m 156.039
 71.992 121.023 83.52 92.102 104.895 c 63.18 126.27 41.883 156.363 31.34
 190.742 c 20.797 225.125 21.562 261.984 33.527 295.895 c 38.398 309.695
 55.68 316.918 73.848 311.016 c 105.527 300.793 152.594 288 192 288 c 231.406
 288 278.496 300.77 310.152 311.039 c 328.32 316.918 345.602 309.695 350.473
 295.895 c 362.438 261.984 363.203 225.125 352.66 190.742 c 342.117 156.363
 320.82 126.27 291.898 104.895 c 262.977 83.52 227.961 71.992 192 72 c f*
Q Q
showpage
%%Trailer
%%EOF
