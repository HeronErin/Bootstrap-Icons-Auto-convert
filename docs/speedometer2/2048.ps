%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 188 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 188 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 188 1536 1156 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 384 m 780.73 384 792.938 389.059 801.941 398.059 c 810.941 407.062 
816 419.27 816 432 c 816 576 l 816 593.148 806.852 608.996 792 617.57 c 
777.148 626.145 758.852 626.145 744 617.57 c 729.148 608.996 720 593.148
 720 576 c 720 432 l 720 419.27 725.059 407.062 734.059 398.059 c 743.062
 389.059 755.27 384 768 384 c 358.273 550.273 m 367.273 541.273 379.48 536.219
 392.207 536.219 c 404.938 536.219 417.145 541.273 426.145 550.273 c 513.984
 638.016 l 526.125 650.156 530.867 667.855 526.422 684.438 c 521.98 701.023
 509.023 713.98 492.438 718.422 c 475.855 722.867 458.156 718.125 446.016
 705.984 c 358.273 618.145 l 349.273 609.145 344.219 596.938 344.219 584.207
 c 344.219 571.48 349.273 559.273 358.273 550.273 c 192 960 m 192 947.27
 197.059 935.062 206.059 926.059 c 215.062 917.059 227.27 912 240 912 c 
392.258 912 l 409.406 912 425.25 921.148 433.824 936 c 442.398 950.852 442.398
 969.148 433.824 984 c 425.25 998.852 409.406 1008 392.258 1008 c 240 1008
 l 227.27 1008 215.062 1002.941 206.059 993.941 c 197.059 984.938 192 972.73
 192 960 c 1104 960 m 1104 947.27 1109.059 935.062 1118.059 926.059 c 1127.062
 917.059 1139.27 912 1152 912 c 1296 912 l 1313.148 912 1328.996 921.148
 1337.57 936 c 1346.145 950.852 1346.145 969.148 1337.57 984 c 1328.996 
998.852 1313.148 1008 1296 1008 c 1152 1008 l 1139.27 1008 1127.062 1002.941
 1118.059 993.941 c 1109.059 984.938 1104 972.73 1104 960 c 1176.383 552.383
 m 1169.723 545.789 1160.828 541.934 1151.461 541.578 c 1142.094 541.223
 1132.934 544.391 1125.793 550.465 c 724.512 893.762 l 705.605 909.691 694.332
 932.887 693.492 957.598 c 692.652 982.305 702.32 1006.215 720.098 1023.395
 c 737.879 1040.574 762.105 1049.414 786.773 1047.723 c 811.438 1046.035
 834.234 1033.973 849.504 1014.527 c 1179.168 602.016 l 1184.883 594.828
 1187.758 585.789 1187.242 576.621 c 1186.73 567.453 1182.867 558.793 1176.383
 552.289 c h
1176.383 552.383 m f
0 960 m 0.133 810.523 43.887 664.332 125.891 539.355 c 207.898 414.379 
324.59 316.051 461.664 256.43 c 598.738 196.805 750.23 178.48 897.566 203.699
 c 1044.902 228.914 1181.676 296.582 1291.117 398.398 c 1400.559 500.215
 1477.906 631.754 1513.68 776.887 c 1549.457 922.023 1542.098 1074.441 1492.512
 1215.457 c 1450.078 1335.746 1315.391 1369.25 1211.039 1335.457 c 1085.664
 1294.848 909.602 1248 768 1248 c 626.496 1248 450.238 1294.848 324.961 
1335.457 c 220.609 1369.25 85.922 1335.746 43.488 1215.457 c 14.629 1133.383
 -0.078 1047 0 960 c 768 288 m 624.152 287.961 484.09 334.086 368.406 419.586
 c 252.727 505.086 167.535 625.449 125.359 762.973 c 83.184 900.5 86.25 
1047.93 134.113 1183.586 c 153.602 1238.785 222.723 1267.684 295.395 1244.066
 c 422.113 1203.168 610.367 1152 768 1152 c 925.633 1152 1113.984 1203.07
 1240.609 1244.16 c 1313.281 1267.68 1382.402 1238.785 1401.891 1183.586
 c 1401.887 1183.586 l 1449.75 1047.93 1452.816 900.5 1410.641 762.973 c
 1368.465 625.449 1283.273 505.086 1167.594 419.586 c 1051.91 334.086 911.848
 287.961 768 288 c f*
Q Q
showpage
%%Trailer
%%EOF
