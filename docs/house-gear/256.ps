%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 5 0 192 178
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 5 0 192 178
192 192 cairo_set_page_size
%%EndPageSetup
q 5 0 187 178 rectclip
1 0 0 -1 0 192 cm q
0 g
87.516 18 m 92.203 13.316 99.797 13.316 104.484 18 c 132 45.516 l 132 30
 l 132 26.688 134.688 24 138 24 c 150 24 l 151.59 24 153.117 24.633 154.242
 25.758 c 155.367 26.883 156 28.41 156 30 c 156 69.516 l 184.246 97.75 l
 184.246 97.754 l 186.594 100.098 186.594 103.902 184.246 106.246 c 181.902
 108.594 178.098 108.594 175.754 106.246 c 96 26.484 l 36 86.484 l 36 162
 l 36 163.59 36.633 165.117 37.758 166.242 c 38.883 167.367 40.41 168 42
 168 c 90 168 l 93.312 168 96 170.688 96 174 c 96 177.312 93.312 180 90 
180 c 42 180 l 37.227 180 32.648 178.105 29.273 174.727 c 25.895 171.352
 24 166.773 24 162 c 24 98.484 l 16.246 106.25 l 16.246 106.246 l 13.902
 108.594 10.098 108.594 7.754 106.246 c 5.406 103.902 5.406 100.098 7.754
 97.754 c h
87.516 18 m f
142.633 113.52 m 144.793 106.164 155.207 106.164 157.379 113.52 c 157.895
 115.297 l 158.547 117.527 160.176 119.344 162.324 120.234 c 164.473 121.125
 166.906 120.996 168.949 119.879 c 170.582 118.992 l 177.312 115.32 184.684
 122.688 181.023 129.422 c 180.125 131.055 l 180.121 131.051 l 179.012 133.09
 178.883 135.523 179.773 137.668 c 180.664 139.812 182.477 141.438 184.703
 142.094 c 186.492 142.633 l 193.836 144.793 193.836 155.207 186.492 157.379
 c 184.691 157.895 l 182.465 158.555 180.656 160.184 179.77 162.332 c 178.883
 164.48 179.016 166.91 180.133 168.949 c 181.02 170.582 l 184.68 177.312
 177.312 184.684 170.578 181.023 c 168.945 180.125 l 168.949 180.121 l 166.91
 179.012 164.477 178.883 162.332 179.773 c 160.188 180.664 158.562 182.477
 157.906 184.703 c 157.367 186.492 l 155.207 193.836 144.793 193.836 142.621
 186.492 c 142.105 184.691 l 141.445 182.465 139.816 180.656 137.668 179.77
 c 135.52 178.883 133.09 179.016 131.051 180.133 c 129.418 181.02 l 122.688
 184.68 115.316 177.312 118.977 170.578 c 119.875 168.945 l 119.879 168.949
 l 120.988 166.91 121.117 164.477 120.227 162.332 c 119.336 160.188 117.523
 158.562 115.297 157.906 c 113.52 157.379 l 106.164 155.207 106.164 144.789
 113.52 142.617 c 115.297 142.102 l 115.297 142.105 l 117.527 141.453 119.344
 139.824 120.234 137.676 c 121.125 135.527 120.996 133.094 119.879 131.051
 c 118.992 129.418 l 115.32 122.688 122.688 115.316 129.422 118.977 c 131.055
 119.875 l 131.051 119.879 l 133.09 120.988 135.523 121.117 137.668 120.227
 c 139.812 119.336 141.438 117.523 142.094 115.297 c h
168 150 m 168 143.57 164.57 137.625 159 134.41 c 153.43 131.195 146.57 
131.195 141 134.41 c 135.43 137.625 132 143.57 132 150 c 132 156.43 135.43
 162.375 141 165.59 c 146.57 168.805 153.43 168.805 159 165.59 c 164.57 
162.375 168 156.43 168 150 c f
Q Q
showpage
%%Trailer
%%EOF
