%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 1 0 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 1 0 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 1 0 47 45 rectclip
1 0 0 -1 0 48 cm q
0 g
21.879 4.5 m 23.051 3.328 24.949 3.328 26.121 4.5 c 33 11.379 l 33 7.5 
l 33 6.672 33.672 6 34.5 6 c 37.5 6 l 37.898 6 38.281 6.156 38.562 6.438
 c 38.844 6.719 39 7.102 39 7.5 c 39 17.379 l 46.062 24.438 l 46.648 25.023
 46.648 25.977 46.062 26.562 c 45.477 27.148 44.523 27.148 43.938 26.562
 c 24 6.621 l 9 21.621 l 9 40.5 l 9 40.898 9.156 41.281 9.438 41.562 c 9.719
 41.844 10.102 42 10.5 42 c 22.5 42 l 23.328 42 24 42.672 24 43.5 c 24 44.328
 23.328 45 22.5 45 c 10.5 45 l 8.016 45 6 42.984 6 40.5 c 6 24.621 l 4.062
 26.562 l 3.477 27.148 2.523 27.148 1.938 26.562 c 1.352 25.977 1.352 25.023
 1.938 24.438 c h
21.879 4.5 m f
35.656 28.379 m 36.195 26.539 38.801 26.539 39.344 28.379 c 39.473 28.824
 l 39.637 29.383 40.043 29.836 40.582 30.059 c 41.117 30.281 41.727 30.25
 42.238 29.969 c 42.645 29.746 l 44.328 28.828 46.168 30.672 45.254 32.352
 c 45.027 32.758 l 45.031 32.762 l 44.754 33.273 44.723 33.879 44.941 34.418
 c 45.164 34.953 45.617 35.359 46.176 35.523 c 46.621 35.66 l 48.457 36.199
 48.457 38.805 46.621 39.348 c 46.172 39.477 l 46.172 39.473 l 45.617 39.637
 45.164 40.047 44.941 40.582 c 44.723 41.121 44.754 41.727 45.031 42.238
 c 45.254 42.645 l 46.168 44.328 44.328 46.168 42.645 45.254 c 42.238 45.027
 l 42.238 45.031 l 41.727 44.754 41.121 44.723 40.582 44.941 c 40.047 45.164
 39.641 45.617 39.477 46.176 c 39.34 46.621 l 38.801 48.457 36.195 48.457
 35.652 46.621 c 35.523 46.172 l 35.527 46.172 l 35.363 45.617 34.953 45.164
 34.418 44.941 c 33.879 44.723 33.273 44.754 32.762 45.031 c 32.355 45.254
 l 30.672 46.168 28.832 44.328 29.746 42.645 c 29.973 42.238 l 29.969 42.238
 l 30.246 41.727 30.277 41.121 30.059 40.582 c 29.836 40.047 29.383 39.641
 28.824 39.477 c 28.379 39.344 l 26.539 38.801 26.539 36.195 28.379 35.652
 c 28.824 35.523 l 28.824 35.527 l 29.383 35.363 29.836 34.957 30.059 34.418
 c 30.281 33.883 30.25 33.273 29.969 32.762 c 29.746 32.355 l 28.828 30.672
 30.672 28.832 32.352 29.746 c 32.758 29.973 l 32.762 29.969 l 33.273 30.246
 33.879 30.277 34.418 30.059 c 34.953 29.836 35.359 29.383 35.523 28.824
 c h
42 37.5 m 42 35.016 39.984 33 37.5 33 c 35.016 33 33 35.016 33 37.5 c 33
 39.984 35.016 42 37.5 42 c 39.984 42 42 39.984 42 37.5 c f
Q Q
showpage
%%Trailer
%%EOF
