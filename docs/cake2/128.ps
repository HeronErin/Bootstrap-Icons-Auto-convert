%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
20.965 0.078 m 17.395 4.816 l 15.977 6.688 16.242 9.332 18 10.883 c 18 
26.98 l 17.105 27.184 16.238 27.398 15.406 27.621 c 11.195 28.742 7.578 
30.129 4.938 31.797 c 2.449 33.359 0 35.723 0 39 c 0 81 l 0 84.277 2.449
 86.641 4.938 88.207 c 7.578 89.875 11.195 91.266 15.406 92.383 c 23.867
 94.637 35.387 96 48 96 c 60.613 96 72.133 94.637 80.594 92.383 c 84.801
 91.262 88.422 89.875 91.062 88.207 c 93.551 86.641 96 84.277 96 81 c 96
 39 l 96 35.723 93.551 33.359 91.062 31.793 c 88.422 30.125 84.805 28.734
 80.594 27.617 c 79.73 27.387 78.867 27.176 78 26.977 c 78 10.836 l 79.715
 9.273 79.957 6.66 78.551 4.812 c 74.961 0.074 l 71.391 4.828 l 71.395 4.824
 l 69.984 6.691 70.25 9.328 72 10.879 c 72 25.801 l 68.023 25.156 64.02 
24.695 60 24.422 c 60 10.836 l 61.715 9.273 61.957 6.66 60.551 4.812 c 56.961
 0.074 l 53.391 4.828 l 53.395 4.824 l 51.984 6.691 52.25 9.328 54 10.879
 c 54 24.102 l 50 23.965 46 23.965 42 24.102 c 42 10.836 l 43.715 9.273 
43.957 6.66 42.551 4.812 c 38.961 0.074 l 35.391 4.828 l 35.395 4.824 l 
33.984 6.691 34.25 9.328 36 10.879 c 36 24.422 l 31.738 24.723 27.703 25.195
 24 25.801 c 24 10.836 l 25.715 9.273 25.957 6.66 24.551 4.812 c h
16.957 33.414 m 18 33.145 l 18 38.945 l 19.871 39.391 21.871 39.793 24 
40.152 c 24 31.891 l 27.973 31.215 31.98 30.73 36 30.438 c 36 41.566 l 37.953
 41.711 39.953 41.82 42 41.891 c 42 30.109 l 46 29.965 50 29.965 54 30.109
 c 54 41.895 l 56.047 41.824 58.047 41.715 60 41.57 c 60 30.438 l 64.32 
30.762 68.359 31.258 72 31.891 c 72 40.152 l 74.129 39.793 76.129 39.391
 78 38.945 c 78 33.145 l 79.051 33.414 l 82.98 34.465 85.949 35.656 87.863
 36.863 c 89.926 38.164 90 38.965 90 39 c 90 39.035 89.93 39.836 87.863 
41.137 c 85.949 42.336 82.98 43.535 79.043 44.586 c 71.219 46.68 60.246 
48 48 48 c 35.762 48 24.781 46.676 16.957 44.586 c 13.02 43.535 10.051 42.344
 8.137 41.137 c 6.07 39.836 6 39.035 6 39 c 6 38.965 6.07 38.164 8.137 36.863
 c 10.051 35.664 13.02 34.465 16.957 33.414 c 90 46.836 m 90 52.996 l 85.922
 58.438 l 85.922 58.441 l 84.285 60.613 81.332 61.309 78.898 60.098 c 74.426
 57.863 69.023 58.742 65.484 62.273 c 63.395 64.363 l 61.285 66.473 57.941
 66.707 55.555 64.914 c 55.195 64.648 l 50.93 61.453 45.066 61.453 40.801
 64.648 c 40.441 64.914 l 38.055 66.703 34.715 66.469 32.605 64.363 c 30.504
 62.262 l 26.969 58.73 21.574 57.855 17.105 60.09 c 14.676 61.305 11.723
 60.605 10.098 58.43 c 6 52.922 l 6 46.836 l 8.52 48.227 11.734 49.402 15.406
 50.383 c 23.867 52.637 35.387 54 48 54 c 60.613 54 72.133 52.637 80.594
 50.383 c 84.266 49.406 87.488 48.223 90 46.836 c 90 62.91 m 90 81 l 90 
81.035 89.93 81.836 87.863 83.129 c 85.949 84.34 82.98 85.535 79.043 86.586
 c 71.219 88.68 60.246 90 48 90 c 35.762 90 24.781 88.676 16.957 86.586 
c 13.02 85.535 10.051 84.344 8.137 83.137 c 6.074 81.836 6 81.035 6 81 c
 6 62.879 l 9.5 66.734 15.133 67.789 19.789 65.461 c 21.949 64.379 24.559
 64.801 26.27 66.512 c 28.359 68.605 l 28.355 68.605 l 32.582 72.828 39.27
 73.301 44.047 69.715 c 44.402 69.449 l 44.398 69.449 l 46.535 67.852 49.465
 67.852 51.602 69.449 c 51.961 69.715 l 56.734 73.293 63.414 72.82 67.637
 68.605 c 69.727 66.516 l 71.441 64.809 74.055 64.387 76.219 65.465 c 80.906
 67.805 86.527 66.711 90 62.91 c f
Q Q
showpage
%%Trailer
%%EOF
