%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
10.48 0.039 m 8.695 2.41 l 7.988 3.344 8.121 4.664 9 5.441 c 9 13.492 l
 8.551 13.594 8.121 13.703 7.703 13.812 c 5.598 14.375 3.789 15.066 2.469
 15.902 c 1.223 16.68 0 17.863 0 19.5 c 0 40.5 l 0 42.137 1.223 43.32 2.469
 44.102 c 3.789 44.938 5.598 45.633 7.703 46.191 c 11.934 47.32 17.695 48
 24 48 c 30.305 48 36.066 47.32 40.297 46.191 c 42.398 45.629 44.211 44.938
 45.531 44.102 c 46.777 43.32 48 42.137 48 40.5 c 48 19.5 l 48 17.863 46.777
 16.68 45.531 15.898 c 44.211 15.062 42.402 14.367 40.297 13.809 c 39.867
 13.695 39.434 13.586 39 13.488 c 39 5.418 l 39.859 4.637 39.977 3.328 39.277
 2.406 c 37.484 0.035 l 35.699 2.41 l 35.695 2.41 l 34.992 3.344 35.125 
4.664 36 5.438 c 36 12.898 l 34.012 12.578 32.008 12.348 30 12.211 c 30 
5.418 l 30.859 4.637 30.977 3.328 30.277 2.406 c 28.484 0.035 l 26.699 2.41
 l 26.695 2.41 l 25.992 3.344 26.125 4.664 27 5.438 c 27 12.051 l 25 11.98
 23 11.98 21 12.051 c 21 5.418 l 21.859 4.637 21.977 3.328 21.277 2.406 
c 19.484 0.035 l 17.699 2.41 l 17.695 2.41 l 16.992 3.344 17.125 4.664 18
 5.438 c 18 12.211 l 15.871 12.359 13.852 12.598 12 12.902 c 12 5.418 l 
12.859 4.637 12.977 3.328 12.277 2.406 c h
8.477 16.707 m 9 16.57 l 9 19.473 l 9.938 19.695 10.938 19.895 12 20.074
 c 12 15.945 l 13.988 15.605 15.988 15.363 18 15.219 c 18 20.785 l 18.977
 20.855 19.977 20.91 21 20.945 c 21 15.055 l 23 14.984 25 14.984 27 15.055
 c 27 20.945 l 28.023 20.91 29.023 20.855 30 20.785 c 30 15.219 l 32.16 
15.379 34.18 15.629 36 15.945 c 36 20.078 l 37.062 19.898 38.062 19.695 
39 19.477 c 39 16.574 l 39.523 16.711 l 41.488 17.234 42.973 17.832 43.93
 18.438 c 44.961 19.09 44.996 19.488 44.996 19.504 c 44.996 19.523 44.961
 19.922 43.93 20.57 c 42.973 21.172 41.488 21.77 39.52 22.297 c 35.609 23.34
 30.121 24 24 24 c 17.879 24 12.391 23.336 8.477 22.293 c 6.508 21.77 5.023
 21.172 4.066 20.566 c 3.035 19.918 3 19.52 3 19.5 c 3 19.48 3.035 19.082
 4.066 18.434 c 5.023 17.832 6.508 17.234 8.477 16.707 c 45 23.418 m 45 
26.5 l 42.961 29.223 l 42.961 29.219 l 42.141 30.305 40.668 30.652 39.449
 30.047 c 37.211 28.934 34.512 29.371 32.742 31.137 c 31.699 32.18 l 30.641
 33.234 28.969 33.352 27.777 32.457 c 27.598 32.324 l 25.465 30.727 22.531
 30.727 20.398 32.324 c 20.219 32.457 l 19.027 33.352 17.359 33.234 16.301
 32.18 c 15.25 31.129 l 15.254 31.133 l 13.484 29.367 10.785 28.93 8.555
 30.047 c 7.34 30.652 5.863 30.305 5.051 29.215 c 3 26.461 l 3 23.418 l 
4.262 24.113 5.867 24.703 7.703 25.191 c 11.934 26.32 17.695 27 24 27 c 
30.305 27 36.066 26.32 40.297 25.191 c 42.133 24.703 43.742 24.113 45 23.418
 c 45 31.453 m 45 40.5 l 45 40.52 44.965 40.918 43.934 41.566 c 42.977 42.172
 41.492 42.77 39.523 43.293 c 35.609 44.34 30.121 45 24 45 c 17.879 45 12.391
 44.336 8.477 43.293 c 6.508 42.77 5.023 42.172 4.066 41.566 c 3.035 40.914
 3 40.516 3 40.5 c 3 31.441 l 4.75 33.367 7.566 33.895 9.895 32.73 c 10.973
 32.188 12.281 32.402 13.133 33.254 c 14.176 34.301 l 14.18 34.301 l 16.289
 36.414 19.633 36.652 22.023 34.855 c 22.199 34.723 l 22.199 34.727 l 23.266
 33.926 24.734 33.926 25.801 34.727 c 25.98 34.859 l 25.98 34.855 l 28.367
 36.648 31.707 36.41 33.82 34.301 c 34.863 33.258 l 35.719 32.406 37.027
 32.195 38.109 32.734 c 40.453 33.906 43.262 33.359 45 31.457 c f
Q Q
showpage
%%Trailer
%%EOF
