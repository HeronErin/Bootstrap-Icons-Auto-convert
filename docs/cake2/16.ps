%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
2.621 0.008 m 2.176 0.602 l 1.996 0.836 2.031 1.168 2.25 1.359 c 2.25 3.371
 l 2.137 3.398 2.031 3.422 1.926 3.453 c 1.398 3.594 0.945 3.766 0.617 3.977
 c 0.305 4.172 0 4.465 0 4.875 c 0 10.125 l 0 10.535 0.305 10.828 0.617 
11.027 c 0.945 11.234 1.398 11.41 1.926 11.551 c 2.984 11.828 4.422 12 6
 12 c 7.578 12 9.016 11.828 10.074 11.547 c 10.602 11.406 11.055 11.234 
11.383 11.023 c 11.695 10.828 12 10.531 12 10.121 c 12 4.871 l 12 4.461 
11.695 4.168 11.383 3.969 c 11.055 3.762 10.602 3.586 10.074 3.445 c 10.074
 3.453 l 9.965 3.422 9.859 3.398 9.75 3.371 c 9.75 1.355 l 9.965 1.16 9.996
 0.832 9.82 0.602 c 9.371 0.008 l 8.926 0.602 l 8.75 0.836 8.781 1.164 9
 1.359 c 9 3.227 l 8.504 3.145 8.004 3.086 7.5 3.051 c 7.5 1.355 l 7.715
 1.16 7.746 0.832 7.57 0.602 c 7.121 0.008 l 6.676 0.602 l 6.5 0.836 6.531
 1.164 6.75 1.359 c 6.75 3.012 l 6.25 2.996 5.75 2.996 5.25 3.012 c 5.25
 1.355 l 5.465 1.16 5.496 0.832 5.32 0.602 c 4.871 0.008 l 4.426 0.602 l
 4.25 0.836 4.281 1.164 4.5 1.359 c 4.5 3.051 l 3.969 3.09 3.461 3.148 3
 3.223 c 3 1.355 l 3.215 1.16 3.246 0.832 3.07 0.602 c h
2.121 4.176 m 2.25 4.145 l 2.25 4.871 l 2.484 4.926 2.734 4.977 3 5.023
 c 3 3.984 l 3.496 3.902 3.996 3.84 4.5 3.805 c 4.5 5.195 l 4.742 5.215 
4.992 5.227 5.25 5.234 c 5.25 3.762 l 5.75 3.746 6.25 3.746 6.75 3.762 c
 6.75 5.234 l 7.008 5.227 7.258 5.211 7.5 5.195 c 7.5 3.805 l 8.039 3.844
 8.543 3.906 9 3.984 c 9 5.016 l 9.266 4.969 9.516 4.922 9.75 4.863 c 9.75
 4.137 l 9.883 4.172 l 10.375 4.305 10.746 4.453 10.984 4.602 c 11.242 4.766
 11.25 4.863 11.25 4.867 c 11.25 4.871 11.242 4.973 10.984 5.133 c 10.746
 5.281 10.375 5.434 9.883 5.562 c 8.902 5.836 7.531 6 6 6 c 4.469 6 3.098
 5.836 2.121 5.574 c 1.629 5.441 1.258 5.293 1.02 5.145 c 0.758 4.98 0.75
 4.879 0.75 4.875 c 0.75 4.871 0.758 4.77 1.016 4.609 c 1.254 4.461 1.625
 4.309 2.117 4.18 c 11.25 5.855 m 11.25 6.625 l 10.738 7.305 l 10.535 7.578
 10.168 7.664 9.863 7.512 c 9.305 7.234 8.629 7.344 8.184 7.785 c 7.922 
8.047 l 7.926 8.047 l 7.66 8.309 7.242 8.34 6.945 8.113 c 6.898 8.082 l 
6.367 7.68 5.633 7.68 5.102 8.082 c 5.055 8.113 l 4.758 8.336 4.34 8.309
 4.074 8.047 c 3.812 7.785 l 3.812 7.781 l 3.371 7.34 2.695 7.23 2.137 7.512
 c 1.836 7.664 1.465 7.574 1.262 7.305 c 0.75 6.613 l 0.75 5.855 l 1.066
 6.031 1.469 6.176 1.926 6.297 c 2.984 6.578 4.422 6.75 6 6.75 c 7.578 6.75
 9.016 6.578 10.074 6.297 c 10.535 6.176 10.938 6.027 11.25 5.855 c 11.25
 7.863 m 11.25 10.125 l 11.25 10.129 11.242 10.23 10.984 10.391 c 10.746
 10.543 10.375 10.691 9.883 10.824 c 8.902 11.086 7.531 11.25 6 11.25 c 
4.469 11.25 3.098 11.086 2.121 10.824 c 1.629 10.691 1.258 10.543 1.02 10.395
 c 0.762 10.23 0.754 10.133 0.754 10.129 c 0.754 7.863 l 0.75 7.859 l 1.188
 8.34 1.891 8.473 2.473 8.184 c 2.742 8.047 3.07 8.102 3.285 8.312 c 3.547
 8.574 l 3.543 8.574 l 4.074 9.102 4.91 9.164 5.504 8.715 c 5.547 8.684 
l 5.551 8.68 l 5.816 8.48 6.184 8.48 6.449 8.68 c 6.496 8.711 l 6.496 8.715
 l 7.094 9.16 7.926 9.102 8.453 8.574 c 8.715 8.312 l 8.715 8.316 l 8.93
 8.102 9.258 8.047 9.527 8.184 c 10.113 8.477 10.816 8.34 11.25 7.863 c f
Q Q
showpage
%%Trailer
%%EOF
