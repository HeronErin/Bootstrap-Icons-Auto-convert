%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
83.855 0.312 m 69.574 19.273 l 66.844 22.875 65.578 27.379 66.027 31.879
 c 66.477 36.379 68.609 40.543 72 43.535 c 72 107.926 l 68.414 108.742 64.961
 109.598 61.633 110.492 c 44.785 114.98 30.312 120.523 19.754 127.195 c 
9.793 133.441 0 142.895 0 156 c 0 324 l 0 337.105 9.793 346.559 19.754 352.824
 c 30.312 359.496 44.785 365.062 61.633 369.527 c 95.473 378.551 141.551
 384 192 384 c 242.449 384 288.527 378.551 322.367 369.527 c 339.191 365.039
 353.688 359.496 364.246 352.824 c 374.207 346.559 384 337.105 384 324 c
 384 156 l 384 142.895 374.207 133.441 364.246 127.176 c 353.688 120.504
 339.215 114.938 322.367 110.473 c 318.93 109.551 315.473 108.695 312 107.902
 c 312 43.344 l 315.312 40.328 317.375 36.184 317.781 31.727 c 318.191 27.266
 316.914 22.816 314.207 19.246 c 299.855 0.285 l 285.574 19.293 l 285.574
 19.297 l 282.859 22.898 281.602 27.391 282.051 31.879 c 282.5 36.367 284.625
 40.52 288 43.512 c 288 103.199 l 272.094 100.629 256.074 98.785 240 97.68
 c 240 43.344 l 243.312 40.328 245.375 36.184 245.781 31.727 c 246.191 27.266
 244.914 22.816 242.207 19.246 c 227.855 0.285 l 213.574 19.293 l 213.574
 19.297 l 210.859 22.898 209.602 27.391 210.051 31.879 c 210.5 36.367 212.625
 40.52 216 43.512 c 216 96.406 l 200.004 95.855 183.996 95.855 168 96.406
 c 168 43.344 l 171.312 40.328 173.375 36.184 173.781 31.727 c 174.191 27.266
 172.914 22.816 170.207 19.246 c 155.855 0.285 l 141.574 19.293 l 141.574
 19.297 l 138.859 22.898 137.602 27.391 138.051 31.879 c 138.5 36.367 140.625
 40.52 144 43.512 c 144 97.68 l 126.961 98.879 110.809 100.777 96 103.199
 c 96 43.344 l 99.312 40.328 101.375 36.184 101.781 31.727 c 102.191 27.266
 100.914 22.816 98.207 19.246 c h
67.824 133.656 m 72 132.574 l 72 155.781 l 79.488 157.559 87.488 159.164
 96 160.605 c 96 127.559 l 111.898 124.855 127.918 122.918 144 121.754 c
 144 166.273 l 151.809 166.848 159.809 167.281 168 167.57 c 168 120.434 
l 183.996 119.859 200.004 119.859 216 120.434 c 216 167.57 l 224.191 167.281
 232.191 166.852 240 166.273 c 240 121.754 l 257.281 123.051 273.434 125.043
 288 127.562 c 288 160.609 l 296.512 159.168 304.512 157.562 312 155.785
 c 312 132.578 l 316.199 133.656 l 331.918 137.855 343.801 142.633 351.457
 147.457 c 359.715 152.664 360 155.855 360 156 c 360 156.145 359.711 159.336
 351.457 164.543 c 343.801 169.344 331.922 174.145 316.176 178.344 c 284.879
 186.719 240.984 192 192 192 c 143.039 192 99.121 186.695 67.824 178.344
 c 52.082 174.145 40.199 169.367 32.543 164.543 c 24.289 159.336 24 156.145
 24 156 c 24 155.855 24.289 152.664 32.543 147.457 c 40.199 142.656 52.078
 137.855 67.824 133.656 c 360 187.344 m 360 211.992 l 343.68 233.762 l 340.512
 237.969 335.965 240.938 330.836 242.148 c 325.707 243.355 320.316 242.734
 315.602 240.383 c 306.871 236.031 296.992 234.531 287.363 236.094 c 277.734
 237.656 268.84 242.207 261.938 249.098 c 253.586 257.449 l 249.496 261.527
 244.074 264 238.312 264.406 c 232.551 264.809 226.836 263.125 222.215 259.656
 c 220.773 258.602 l 220.777 258.602 l 212.469 252.375 202.367 249.008 191.988
 249.008 c 181.605 249.008 171.508 252.375 163.199 258.602 c 161.758 259.656
 l 161.762 259.656 l 157.145 263.117 151.434 264.801 145.676 264.395 c 139.918
 263.988 134.504 261.523 130.414 257.449 c 122.016 249.051 l 122.016 249.047
 l 115.125 242.16 106.238 237.617 96.621 236.059 c 87.004 234.496 77.141
 236.004 68.426 240.359 c 63.715 242.719 58.324 243.344 53.199 242.129 c
 48.074 240.914 43.543 237.934 40.391 233.711 c 24 211.68 l 24 187.344 l
 34.078 192.91 46.945 197.617 61.633 201.527 c 95.473 210.551 141.551 216
 192 216 c 242.449 216 288.527 210.551 322.367 201.527 c 337.055 197.617
 349.941 192.887 360 187.344 c 360 251.641 m 360 324 l 360 324.145 359.711
 327.336 351.457 332.52 c 343.801 337.367 331.922 342.145 316.176 346.344
 c 284.879 354.719 240.984 360 192 360 c 143.039 360 99.121 354.695 67.824
 346.344 c 52.082 342.145 40.199 337.367 32.543 332.543 c 24.285 327.336
 24 324.145 24 324 c 24 251.52 l 30.809 259.02 39.883 264.086 49.84 265.949
 c 59.797 267.812 70.09 266.371 79.152 261.84 c 83.367 259.73 88.137 259
 92.789 259.754 c 97.441 260.508 101.738 262.707 105.07 266.039 c 113.422
 274.414 l 113.426 274.414 l 121.598 282.59 132.445 287.535 143.977 288.352
 c 155.504 289.168 166.941 285.797 176.184 278.855 c 177.598 277.801 l 177.602
 277.801 l 181.754 274.684 186.809 273 192 273 c 197.191 273 202.246 274.684
 206.398 277.801 c 207.84 278.855 l 217.078 285.781 228.504 289.148 240.023
 288.332 c 251.543 287.516 262.383 282.574 270.551 274.414 c 278.902 266.062
 l 282.25 262.734 286.555 260.539 291.211 259.789 c 295.871 259.035 300.648
 259.762 304.871 261.863 c 323.613 271.223 346.102 266.855 360 251.641 c
 f
Q Q
showpage
%%Trailer
%%EOF
