%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
48 21 m 48 21.797 47.684 22.559 47.121 23.121 c 46.559 23.684 45.797 24
 45 24 c 45 34.5 l 45 36.953 43.82 39.133 42 40.5 c 42 46.5 l 42 46.898 
41.844 47.281 41.562 47.562 c 41.281 47.844 40.898 48 40.5 48 c 34.5 48 
l 33.672 48 33 47.328 33 46.5 c 33 42 l 15 42 l 15 46.5 l 15 46.898 14.844
 47.281 14.562 47.562 c 14.281 47.844 13.898 48 13.5 48 c 7.5 48 l 6.672
 48 6 47.328 6 46.5 c 6 40.5 l 4.113 39.082 3 36.859 3 34.5 c 3 24 l 1.344
 24 0 22.656 0 21 c 0 15 l 0 13.344 1.344 12 3 12 c 3 7.922 l 3 4.355 5.535
 1.223 9.191 0.805 c 14.109 0.258 19.055 -0.008 24 0 c 30.301 0 35.375 0.406
 38.809 0.805 c 42.465 1.223 45 4.355 45 7.922 c 45 12 l 45.797 12 46.559
 12.316 47.121 12.879 c 47.684 13.441 48 14.203 48 15 c h
10.656 9.66 m 15.09 9.211 19.543 8.988 24 9 c 29.512 9 34.059 9.32 37.344
 9.66 c 38.152 9.719 38.855 9.125 38.941 8.32 c 39.027 7.516 38.457 6.789
 37.656 6.68 c 33.117 6.215 28.562 5.988 24 6 c 18.371 6 13.723 6.328 10.344
 6.68 c 9.938 6.707 9.562 6.898 9.301 7.211 c 9.039 7.523 8.914 7.926 8.957
 8.332 c 9 8.734 9.203 9.105 9.523 9.355 c 9.844 9.605 10.254 9.715 10.656
 9.66 c 24 12 m 18.371 12 13.723 12.328 10.344 12.68 c 9.582 12.758 9 13.402
 9 14.168 c 9 24.832 l 9 25.598 9.582 26.242 10.344 26.32 c 13.723 26.672
 18.371 27 24 27 c 29.629 27 34.277 26.672 37.656 26.32 c 38.418 26.242 
39 25.598 39 24.832 c 39 14.168 l 39 13.402 38.418 12.758 37.656 12.68 c
 33.117 12.215 28.562 11.988 24 12 c 15 33 m 15 31.344 13.656 30 12 30 c
 10.344 30 9 31.344 9 33 c 9 34.656 10.344 36 12 36 c 13.656 36 15 34.656
 15 33 c 39 33 m 39 31.344 37.656 30 36 30 c 34.344 30 33 31.344 33 33 c
 33 34.656 34.344 36 36 36 c 37.656 36 39 34.656 39 33 c 18 33 m 18 33.797
 18.316 34.559 18.879 35.121 c 19.441 35.684 20.203 36 21 36 c 27 36 l 28.656
 36 30 34.656 30 33 c 30 31.344 28.656 30 27 30 c 21 30 l 19.344 30 18 31.344
 18 33 c f
Q Q
showpage
%%Trailer
%%EOF
