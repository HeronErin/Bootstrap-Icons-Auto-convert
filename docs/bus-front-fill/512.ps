%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
384 168 m 384 174.363 381.473 180.469 376.969 184.969 c 372.469 189.473
 366.363 192 360 192 c 360 276 l 360 295.633 350.566 313.055 336 324 c 336
 372 l 336 375.184 334.734 378.234 332.484 380.484 c 330.234 382.734 327.184
 384 324 384 c 276 384 l 269.371 384 264 378.629 264 372 c 264 336 l 120
 336 l 120 372 l 120 375.184 118.734 378.234 116.484 380.484 c 114.234 382.734
 111.184 384 108 384 c 60 384 l 53.371 384 48 378.629 48 372 c 48 324 l 
32.891 312.668 24 294.887 24 276 c 24 192 l 17.637 192 11.531 189.473 7.031
 184.969 c 2.527 180.469 0 174.363 0 168 c 0 120 l 0 113.637 2.527 107.531
 7.031 103.031 c 11.531 98.527 17.637 96 24 96 c 24 63.359 l 24 34.848 44.281
 9.793 73.535 6.434 c 112.871 2.07 152.422 -0.078 192 0 c 242.398 0 283.008
 3.266 310.465 6.434 c 339.719 9.793 360 34.848 360 63.359 c 360 96 l 366.363
 96 372.469 98.527 376.969 103.031 c 381.473 107.531 384 113.637 384 120
 c h
85.246 77.281 m 120.719 73.676 156.348 71.914 192 72 c 236.09 72 272.473
 74.566 298.754 77.281 c 305.207 77.734 310.855 72.992 311.531 66.559 c 
312.203 60.125 307.656 54.316 301.246 53.426 c 264.949 49.73 228.484 47.918
 192 48 c 146.977 48 109.777 50.617 82.754 53.426 c 79.508 53.652 76.492
 55.188 74.402 57.68 c 72.312 60.172 71.32 63.406 71.66 66.645 c 72 69.879
 73.637 72.836 76.199 74.844 c 78.762 76.848 82.027 77.727 85.246 77.281
 c 192 96 m 146.977 96 109.777 98.617 82.754 101.426 c 76.645 102.062 72.004
 107.211 72 113.352 c 72 198.648 l 72.004 204.789 76.645 209.938 82.754 
210.574 c 109.777 213.383 146.977 216 192 216 c 237.023 216 274.223 213.383
 301.246 210.574 c 307.355 209.938 311.996 204.789 312 198.648 c 312 113.352
 l 311.996 107.211 307.355 102.062 301.246 101.426 c 264.949 97.73 228.484
 95.918 192 96 c 120 264 m 120 255.426 115.426 247.504 108 243.215 c 100.574
 238.93 91.426 238.93 84 243.215 c 76.574 247.504 72 255.426 72 264 c 72
 272.574 76.574 280.496 84 284.785 c 91.426 289.07 100.574 289.07 108 284.785
 c 115.426 280.496 120 272.574 120 264 c 312 264 m 312 255.426 307.426 247.504
 300 243.215 c 292.574 238.93 283.426 238.93 276 243.215 c 268.574 247.504
 264 255.426 264 264 c 264 272.574 268.574 280.496 276 284.785 c 283.426
 289.07 292.574 289.07 300 284.785 c 307.426 280.496 312 272.574 312 264
 c 144 264 m 144 270.363 146.527 276.469 151.031 280.969 c 155.531 285.473
 161.637 288 168 288 c 216 288 l 224.574 288 232.496 283.426 236.785 276
 c 241.07 268.574 241.07 259.426 236.785 252 c 232.496 244.574 224.574 240
 216 240 c 168 240 l 161.637 240 155.531 242.527 151.031 247.031 c 146.527
 251.531 144 257.637 144 264 c f
Q Q
showpage
%%Trailer
%%EOF
