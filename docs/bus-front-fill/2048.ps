%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 672 m 1536 697.461 1525.887 721.879 1507.883 739.883 c 1489.879 757.887
 1465.461 768 1440 768 c 1440 1104 l 1440 1182.527 1402.273 1252.223 1344
 1296 c 1344 1488 l 1344 1500.73 1338.941 1512.938 1329.941 1521.941 c 1320.938
 1530.941 1308.73 1536 1296 1536 c 1104 1536 l 1091.27 1536 1079.062 1530.941
 1070.059 1521.941 c 1061.059 1512.938 1056 1500.73 1056 1488 c 1056 1344
 l 480 1344 l 480 1488 l 480 1500.73 474.941 1512.938 465.941 1521.941 c
 456.938 1530.941 444.73 1536 432 1536 c 240 1536 l 227.27 1536 215.062 
1530.941 206.059 1521.941 c 197.059 1512.938 192 1500.73 192 1488 c 192 
1296 l 162.191 1273.645 138 1244.656 121.336 1211.332 c 104.676 1178.008
 96 1141.258 96 1104 c 96 768 l 70.539 768 46.121 757.887 28.117 739.883
 c 10.113 721.879 0 697.461 0 672 c 0 480 l 0 454.539 10.113 430.121 28.117
 412.117 c 46.121 394.113 70.539 384 96 384 c 96 253.441 l 96 139.391 177.121
 39.168 294.145 25.727 c 451.488 8.277 609.691 -0.309 768 0 c 969.602 0 
1132.031 13.055 1241.855 25.727 c 1358.879 39.168 1440 139.391 1440 253.441
 c 1440 384 l 1465.461 384 1489.879 394.113 1507.883 412.117 c 1525.887 
430.121 1536 454.539 1536 480 c h
340.992 309.121 m 482.867 294.711 625.395 287.66 768 288 c 944.352 288 
1089.887 298.273 1195.008 309.121 c 1211.727 310.297 1227.852 302.668 1237.543
 288.992 c 1247.238 275.316 1249.094 257.578 1242.441 242.191 c 1235.789
 226.805 1221.594 216.004 1204.992 213.695 c 1059.801 198.918 913.941 191.68
 768 192 c 587.902 192 439.105 202.465 331.008 213.695 c 318.027 214.609
 305.977 220.758 297.609 230.727 c 289.246 240.691 285.289 253.629 286.645
 266.57 c 287.996 279.516 294.547 291.352 304.793 299.371 c 315.039 307.395
 328.102 310.91 340.992 309.121 c 768 384 m 587.902 384 439.105 394.465 
331.008 405.695 c 319.211 406.93 308.289 412.488 300.348 421.297 c 292.406
 430.109 288.008 441.547 288 453.406 c 288 794.594 l 288.008 806.453 292.406
 817.891 300.348 826.703 c 308.289 835.512 319.211 841.07 331.008 842.305
 c 439.105 853.535 587.902 864 768 864 c 948.098 864 1096.895 853.535 1204.992
 842.305 c 1216.789 841.07 1227.711 835.512 1235.652 826.703 c 1243.594 
817.891 1247.992 806.453 1248 794.594 c 1248 453.406 l 1247.992 441.547 
1243.594 430.109 1235.652 421.297 c 1227.711 412.488 1216.789 406.93 1204.992
 405.695 c 1059.801 390.918 913.941 383.68 768 384 c 480 1056 m 480 1021.703
 461.703 990.012 432 972.863 c 402.297 955.711 365.703 955.711 336 972.863
 c 306.297 990.012 288 1021.703 288 1056 c 288 1090.297 306.297 1121.988
 336 1139.137 c 365.703 1156.289 402.297 1156.289 432 1139.137 c 461.703
 1121.988 480 1090.297 480 1056 c 1248 1056 m 1248 1021.703 1229.703 990.012
 1200 972.863 c 1170.297 955.711 1133.703 955.711 1104 972.863 c 1074.297
 990.012 1056 1021.703 1056 1056 c 1056 1090.297 1074.297 1121.988 1104 
1139.137 c 1133.703 1156.289 1170.297 1156.289 1200 1139.137 c 1229.703 
1121.988 1248 1090.297 1248 1056 c 576 1056 m 576 1081.461 586.113 1105.879
 604.117 1123.883 c 622.121 1141.887 646.539 1152 672 1152 c 864 1152 l 
898.297 1152 929.988 1133.703 947.137 1104 c 964.289 1074.297 964.289 1037.703
 947.137 1008 c 929.988 978.297 898.297 960 864 960 c 672 960 l 646.539 
960 622.121 970.113 604.117 988.117 c 586.113 1006.121 576 1030.539 576 
1056 c f
Q Q
showpage
%%Trailer
%%EOF
