%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
794.594 8.062 m 786.715 2.82 777.461 0.023 768 0.023 c 758.539 0.023 749.285
 2.82 741.406 8.062 c 21.406 488.062 l 9.906 495.734 2.27 507.988 0.453 
521.691 c -1.363 535.395 2.816 549.219 11.922 559.617 c 21.027 570.02 34.176
 575.988 48 576 c 228 576 l 228 1248 l 144 1248 l 126.852 1248 111.004 1257.148
 102.43 1272 c 93.855 1286.852 93.855 1305.148 102.43 1320 c 111.004 1334.852
 126.852 1344 144 1344 c 1392 1344 l 1409.148 1344 1424.996 1334.852 1433.57
 1320 c 1442.145 1305.148 1442.145 1286.852 1433.57 1272 c 1424.996 1257.148
 1409.148 1248 1392 1248 c 1308 1248 l 1308 576 l 1488 576 l 1501.824 575.988
 1514.973 570.02 1524.078 559.617 c 1533.184 549.219 1537.363 535.395 1535.547
 521.691 c 1533.73 507.988 1526.094 495.734 1514.594 488.062 c h
1188 576 m 1188 1248 l 1068 1248 l 1068 576 l h
948 576 m 948 1248 l 828 1248 l 828 576 l h
708 576 m 708 1248 l 588 1248 l 588 576 l h
468 576 m 468 1248 l 348 1248 l 348 576 l h
768 384 m 733.703 384 702.012 365.703 684.863 336 c 667.711 306.297 667.711
 269.703 684.863 240 c 702.012 210.297 733.703 192 768 192 c 802.297 192
 833.988 210.297 851.137 240 c 868.289 269.703 868.289 306.297 851.137 336
 c 833.988 365.703 802.297 384 768 384 c 48 1440 m 30.852 1440 15.004 1449.148
 6.43 1464 c -2.145 1478.852 -2.145 1497.148 6.43 1512 c 15.004 1526.852
 30.852 1536 48 1536 c 1488 1536 l 1505.148 1536 1520.996 1526.852 1529.57
 1512 c 1538.145 1497.148 1538.145 1478.852 1529.57 1464 c 1520.996 1449.148
 1505.148 1440 1488 1440 c h
48 1440 m f
Q Q
showpage
%%Trailer
%%EOF
