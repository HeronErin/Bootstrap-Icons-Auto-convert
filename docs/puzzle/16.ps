%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
2.336 2.734 m 2.305 2.418 2.406 2.105 2.621 1.867 c 2.832 1.633 3.137 1.5
 3.453 1.5 c 5.25 1.5 l 5.348 1.5 5.445 1.539 5.516 1.609 c 5.586 1.68 5.625
 1.777 5.625 1.875 c 5.625 2.16 l 5.625 2.684 5.254 3.047 4.973 3.262 c 
4.938 3.289 4.91 3.316 4.883 3.352 c 4.875 3.371 l 4.875 3.379 l 4.879 3.387
 l 4.883 3.395 4.891 3.406 4.906 3.426 c 4.902 3.426 l 4.961 3.484 5.031
 3.535 5.105 3.57 c 5.316 3.676 5.633 3.75 6 3.75 c 6.367 3.75 6.684 3.676
 6.891 3.57 c 6.969 3.535 7.039 3.484 7.098 3.426 c 7.109 3.41 7.117 3.395
 7.125 3.379 c 7.125 3.371 l 7.117 3.352 l 7.094 3.316 7.062 3.289 7.031
 3.262 c 6.75 3.047 6.379 2.684 6.379 2.16 c 6.375 1.875 l 6.375 1.668 6.543
 1.5 6.75 1.5 c 8.547 1.5 l 8.863 1.5 9.168 1.633 9.379 1.867 c 9.594 2.105
 9.695 2.418 9.664 2.734 c 9.484 4.875 l 9.664 4.875 l 9.809 4.875 9.98 
4.766 10.172 4.516 c 10.328 4.309 10.566 4.125 10.879 4.125 c 11.305 4.125
 11.59 4.461 11.746 4.773 c 11.906 5.105 12 5.539 12 6 c 12 6.461 11.906
 6.895 11.742 7.227 c 11.586 7.539 11.301 7.875 10.875 7.875 c 10.562 7.875
 10.324 7.691 10.168 7.484 c 9.977 7.234 9.809 7.125 9.66 7.125 c 9.48 7.125
 l 9.664 9.266 l 9.695 9.582 9.594 9.895 9.379 10.133 c 9.168 10.367 8.863
 10.5 8.547 10.5 c 6.75 10.5 l 6.543 10.5 6.375 10.332 6.375 10.125 c 6.375
 9.84 l 6.375 9.316 6.746 8.953 7.027 8.738 c 7.062 8.711 7.09 8.684 7.117
 8.648 c 7.125 8.629 l 7.125 8.621 l 7.117 8.605 7.109 8.59 7.098 8.574 
c 7.039 8.516 6.969 8.465 6.895 8.43 c 6.684 8.324 6.367 8.25 6 8.25 c 5.633
 8.25 5.316 8.324 5.109 8.43 c 5.031 8.465 4.961 8.516 4.902 8.574 c 4.891
 8.59 4.883 8.605 4.875 8.621 c 4.875 8.629 l 4.883 8.648 l 4.895 8.668 
4.922 8.699 4.969 8.738 c 5.25 8.953 5.621 9.316 5.621 9.84 c 5.621 10.125
 l 5.625 10.125 l 5.625 10.223 5.586 10.32 5.516 10.391 c 5.445 10.461 5.348
 10.5 5.25 10.5 c 3.453 10.5 l 3.137 10.5 2.832 10.367 2.621 10.133 c 2.406
 9.895 2.305 9.582 2.336 9.266 c 2.516 7.125 l 2.336 7.125 l 2.191 7.125
 2.02 7.234 1.828 7.484 c 1.672 7.691 1.434 7.875 1.121 7.875 c 0.695 7.875
 0.41 7.539 0.254 7.227 c 0.094 6.895 0 6.461 0 6 c 0 5.539 0.094 5.105 
0.258 4.773 c 0.414 4.461 0.699 4.125 1.125 4.125 c 1.438 4.125 1.676 4.309
 1.832 4.516 c 2.023 4.766 2.191 4.875 2.34 4.875 c 2.52 4.875 l h
3.453 2.25 m 3.348 2.25 3.246 2.293 3.176 2.375 c 3.105 2.453 3.07 2.559
 3.082 2.664 c 3.082 2.668 l 3.301 5.219 l 3.297 5.219 l 3.309 5.324 3.273
 5.426 3.203 5.504 c 3.129 5.582 3.031 5.625 2.926 5.625 c 2.34 5.625 l 
1.816 5.625 1.453 5.254 1.238 4.973 c 1.211 4.938 1.184 4.91 1.148 4.883
 c 1.129 4.875 l 1.121 4.875 l 1.105 4.883 1.09 4.891 1.074 4.902 c 1.016
 4.961 0.965 5.031 0.93 5.105 c 0.824 5.316 0.75 5.633 0.75 6 c 0.75 6.367
 0.824 6.684 0.93 6.891 c 0.98 6.996 1.035 7.059 1.074 7.094 c 1.074 7.098
 l 1.09 7.109 1.105 7.117 1.121 7.125 c 1.129 7.125 l 1.148 7.117 l 1.184
 7.09 1.211 7.062 1.238 7.027 c 1.453 6.746 1.816 6.375 2.34 6.375 c 2.926
 6.375 l 3.031 6.375 3.129 6.418 3.199 6.496 c 3.273 6.574 3.309 6.676 3.297
 6.781 c 3.078 9.336 l 3.082 9.336 l 3.07 9.441 3.105 9.547 3.176 9.625 
c 3.246 9.703 3.348 9.75 3.453 9.75 c 4.863 9.75 l 4.828 9.625 4.719 9.484
 4.516 9.332 c 4.309 9.176 4.125 8.938 4.125 8.625 c 4.125 8.199 4.461 7.914
 4.773 7.758 c 5.105 7.594 5.539 7.5 6 7.5 c 6.461 7.5 6.895 7.594 7.227
 7.758 c 7.539 7.914 7.875 8.199 7.875 8.625 c 7.875 8.938 7.691 9.176 7.484
 9.332 c 7.285 9.484 7.172 9.625 7.137 9.75 c 8.547 9.75 l 8.652 9.75 8.754
 9.707 8.824 9.625 c 8.895 9.547 8.93 9.441 8.918 9.336 c 8.918 9.332 l 
8.699 6.781 l 8.703 6.781 l 8.691 6.676 8.727 6.574 8.797 6.496 c 8.871 
6.418 8.969 6.375 9.074 6.375 c 9.66 6.375 l 10.184 6.375 10.547 6.746 10.762
 7.027 c 10.801 7.074 10.828 7.102 10.852 7.113 c 10.871 7.121 l 10.879 
7.121 l 10.879 7.125 l 10.895 7.117 10.91 7.109 10.926 7.098 c 10.984 7.039
 11.035 6.969 11.07 6.895 c 11.176 6.684 11.25 6.371 11.25 6 c 11.25 5.633
 11.176 5.316 11.07 5.109 c 11.035 5.031 10.984 4.961 10.926 4.902 c 10.91
 4.891 10.895 4.883 10.879 4.875 c 10.871 4.875 l 10.852 4.883 l 10.816 
4.91 10.789 4.938 10.762 4.973 c 10.547 5.254 10.184 5.625 9.66 5.625 c 
9.074 5.625 l 8.969 5.625 8.871 5.582 8.797 5.504 c 8.727 5.426 8.691 5.324
 8.703 5.219 c 8.922 2.664 l 8.918 2.664 l 8.93 2.559 8.895 2.453 8.824 
2.375 c 8.754 2.297 8.652 2.25 8.547 2.25 c 7.137 2.25 l 7.172 2.375 7.281
 2.516 7.484 2.668 c 7.691 2.824 7.875 3.062 7.875 3.375 c 7.875 3.801 7.539
 4.086 7.227 4.242 c 6.895 4.406 6.461 4.5 6 4.5 c 5.539 4.5 5.105 4.406
 4.773 4.242 c 4.461 4.086 4.125 3.801 4.125 3.375 c 4.125 3.062 4.309 2.824
 4.516 2.668 c 4.715 2.516 4.828 2.375 4.863 2.25 c h
3.453 2.25 m f
Q Q
showpage
%%Trailer
%%EOF
