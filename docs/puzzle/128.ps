%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
18.672 21.871 m 18.426 19.344 19.258 16.832 20.965 14.953 c 22.672 13.07
 25.09 12 27.629 12 c 42 12 l 42.797 12 43.559 12.316 44.121 12.879 c 44.684
 13.441 45 14.203 45 15 c 45 17.293 l 45 21.469 42.02 24.387 39.77 26.105
 c 39.5 26.301 39.266 26.543 39.078 26.812 c 39.008 26.961 l 39 27 l 39 
27.02 l 39.02 27.078 l 39.039 27.137 39.113 27.242 39.234 27.395 c 39.695
 27.883 40.246 28.277 40.855 28.559 c 42.539 29.398 45.059 30 48 30 c 50.953
 30 53.473 29.398 55.141 28.559 c 55.75 28.277 56.301 27.883 56.766 27.395
 c 56.867 27.285 56.945 27.156 57 27.02 c 57 26.965 l 56.93 26.816 l 56.93
 26.812 l 56.738 26.543 56.504 26.301 56.238 26.105 c 53.988 24.383 51.008
 21.469 51.008 17.293 c 51.008 15 l 51.008 13.344 52.344 12.004 54 12 c 
68.371 12 l 70.91 12 73.328 13.07 75.035 14.953 c 76.742 16.832 77.574 19.344
 77.328 21.871 c 75.871 39 l 77.293 39 l 78.465 39 79.812 38.117 81.344 
36.121 c 82.605 34.477 84.512 33 87 33 c 90.406 33 92.684 35.684 93.926 
38.172 c 95.262 40.844 96 44.32 96 48 c 96 51.68 95.262 55.156 93.926 57.828
 c 92.684 60.316 90.41 63 87 63 c 84.512 63 82.602 61.523 81.344 59.879 
c 79.812 57.883 78.465 57 77.293 57 c 75.871 57 l 77.328 74.129 l 77.574
 76.656 76.742 79.168 75.035 81.047 c 73.328 82.93 70.91 84 68.371 84 c 
54 84 l 52.344 84 51 82.656 51 81 c 51 78.707 l 51 74.531 53.98 71.613 56.23
 69.895 c 56.5 69.699 56.734 69.457 56.922 69.188 c 56.992 69.039 l 57 69.004
 l 57 68.98 l 56.945 68.84 56.867 68.711 56.766 68.598 c 56.301 68.113 55.754
 67.723 55.145 67.441 c 53.461 66.602 50.941 66 48 66 c 45.059 66 42.527
 66.602 40.859 67.441 c 40.25 67.723 39.699 68.117 39.234 68.605 c 39.133
 68.715 39.055 68.844 39 68.98 c 39 69 l 39.008 69.035 l 39.078 69.184 l
 39.176 69.344 39.379 69.59 39.77 69.891 c 42.02 71.613 45 74.527 45 78.703
 c 45 81 l 45 81.797 44.684 82.559 44.121 83.121 c 43.559 83.684 42.797 
84 42 84 c 27.629 84 l 25.09 84 22.672 82.93 20.965 81.047 c 19.258 79.168
 18.426 76.656 18.672 74.129 c 20.137 57 l 18.707 57 l 17.535 57 16.188 
57.883 14.656 59.879 c 13.395 61.523 11.488 63 9 63 c 5.594 63 3.316 60.316
 2.074 57.828 c 0.738 55.156 0 51.68 0 48 c 0 44.32 0.738 40.844 2.074 38.172
 c 3.316 35.684 5.594 33 9 33 c 11.488 33 13.398 34.477 14.656 36.121 c 
16.188 38.117 17.535 39 18.707 39 c 20.137 39 l h
27.629 18 m 26.781 18 25.973 18.359 25.402 18.988 c 24.832 19.617 24.559
 20.457 24.641 21.301 c 24.648 21.344 l 26.387 41.742 l 26.461 42.578 26.18
 43.41 25.609 44.027 c 25.043 44.648 24.242 45 23.398 45 c 18.707 45 l 14.531
 45 11.613 42.02 9.895 39.77 c 9.699 39.5 9.457 39.266 9.188 39.078 c 9.039
 39.008 l 9 39 l 8.98 39 l 8.84 39.055 8.711 39.133 8.598 39.234 c 8.113
 39.699 7.723 40.246 7.441 40.855 c 6.602 42.539 6 45.059 6 48 c 6 50.941
 6.602 53.473 7.441 55.141 c 7.863 55.98 8.281 56.492 8.605 56.766 c 8.715
 56.867 8.844 56.945 8.98 57 c 9 57 l 9.035 56.992 l 9.184 56.922 l 9.188
 56.922 l 9.457 56.734 9.699 56.5 9.895 56.23 c 11.617 53.98 14.531 51 18.707
 51 c 23.398 51 l 24.238 51 25.039 51.352 25.609 51.969 c 26.176 52.59 26.457
 53.414 26.387 54.254 c 24.648 74.703 l 24.648 74.699 l 24.562 75.543 24.84
 76.383 25.406 77.012 c 25.977 77.641 26.781 78 27.629 78 c 38.898 78 l 
38.609 77.004 37.727 75.887 36.121 74.656 c 34.477 73.395 33 71.488 33 69
 c 33 65.594 35.684 63.316 38.172 62.074 c 40.844 60.738 44.32 60 48 60 
c 51.68 60 55.156 60.738 57.828 62.074 c 60.316 63.316 63 65.59 63 69 c 
63 71.488 61.523 73.398 59.879 74.656 c 58.27 75.887 57.391 76.996 57.102
 78 c 68.371 78 l 69.219 78 70.027 77.641 70.598 77.012 c 71.168 76.383 
71.441 75.543 71.359 74.699 c 71.352 74.656 l 69.613 54.258 l 69.539 53.422
 69.82 52.59 70.391 51.973 c 70.957 51.352 71.758 51 72.602 51 c 77.293 
51 l 81.469 51 84.387 53.98 86.105 56.23 c 86.406 56.621 86.652 56.824 86.812
 56.922 c 86.961 56.992 l 86.996 57 l 87.02 57 l 87.16 56.945 87.289 56.867
 87.402 56.766 c 87.887 56.301 88.277 55.754 88.559 55.145 c 89.398 53.465
 90 50.945 90 48 c 90 45.055 89.398 42.527 88.559 40.859 c 88.277 40.25 
87.883 39.699 87.395 39.234 c 87.285 39.133 87.156 39.055 87.02 39 c 87 
39 l 86.965 39.008 l 86.816 39.078 l 86.812 39.078 l 86.543 39.266 86.301
 39.5 86.105 39.77 c 84.383 42.02 81.469 45 77.293 45 c 72.602 45 l 71.758
 45 70.957 44.648 70.391 44.027 c 69.82 43.41 69.539 42.578 69.613 41.742
 c 71.352 21.301 l 71.438 20.457 71.16 19.617 70.594 18.988 c 70.023 18.359
 69.219 18 68.371 18 c 57.102 18 l 57.391 18.996 58.273 20.113 59.879 21.344
 c 61.523 22.605 63 24.512 63 27 c 63 30.406 60.316 32.684 57.828 33.926
 c 55.156 35.262 51.68 36 48 36 c 44.32 36 40.844 35.262 38.172 33.926 c
 35.684 32.684 33 30.406 33 27 c 33 24.512 34.477 22.602 36.121 21.344 c
 37.73 20.113 38.609 19.004 38.898 18 c h
27.629 18 m f
Q Q
showpage
%%Trailer
%%EOF
