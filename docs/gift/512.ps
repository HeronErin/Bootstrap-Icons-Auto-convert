%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
72 60 m 72 38.562 83.438 18.758 102 8.039 c 120.562 -2.68 143.438 -2.68
 162 8.039 c 180.562 18.758 192 38.562 192 60 c 192 38.562 203.438 18.758
 222 8.039 c 240.562 -2.68 263.438 -2.68 282 8.039 c 300.562 18.758 312 
38.562 312 60 c 312 60.145 l 312 61.824 312 66.625 311.09 72 c 360 72 l 
366.363 72 372.469 74.527 376.969 79.031 c 381.473 83.531 384 89.637 384
 96 c 384 144 l 384 150.363 381.473 156.469 376.969 160.969 c 372.469 165.473
 366.363 168 360 168 c 360 348 l 360 357.547 356.207 366.703 349.457 373.457
 c 342.703 380.207 333.547 384 324 384 c 60 384 l 50.453 384 41.297 380.207
 34.543 373.457 c 27.793 366.703 24 357.547 24 348 c 24 168 l 17.637 168
 11.531 165.473 7.031 160.969 c 2.527 156.469 0 150.363 0 144 c 0 96 l 0
 89.637 2.527 83.531 7.031 79.031 c 11.531 74.527 17.637 72 24 72 c 72.91
 72 l 72.281 68.078 71.977 64.113 72 60.145 c h
97.633 72 m 168 72 l 168 60 l 168 47.137 161.137 35.254 150 28.824 c 138.863
 22.391 125.137 22.391 114 28.824 c 102.863 35.254 96 47.137 96 60 c 96 
62.039 96.047 66.574 97.078 70.32 c h
216 72 m 286.367 72 l 286.918 70.32 l 287.949 66.578 287.996 62.039 287.996
 60 c 288 60 l 288 47.137 281.137 35.254 270 28.824 c 258.863 22.391 245.137
 22.391 234 28.824 c 222.863 35.254 216 47.137 216 60 c h
24 96 m 24 144 l 168 144 l 168 96 l h
216 96 m 216 144 l 360 144 l 360 96 l h
336 168 m 216 168 l 216 360 l 324 360 l 327.184 360 330.234 358.734 332.484
 356.484 c 334.734 354.234 336 351.184 336 348 c h
168 360 m 168 168 l 48 168 l 48 348 l 48 351.184 49.266 354.234 51.516 
356.484 c 53.766 358.734 56.816 360 60 360 c h
168 360 m f
Q Q
showpage
%%Trailer
%%EOF
