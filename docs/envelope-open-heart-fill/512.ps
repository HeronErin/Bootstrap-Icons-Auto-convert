%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 380
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 380
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 380 rectclip
1 0 0 -1 0 384 cm q
0 g
214.586 10.441 m 200.469 2.914 183.531 2.914 169.414 10.441 c 25.414 87.242
 l 25.414 87.238 l 17.738 91.332 11.316 97.438 6.84 104.898 c 2.363 112.359
 0 120.898 0 129.602 c 0 137.113 l 101.328 196.512 l 101.887 195.121 102.527
 193.758 103.25 192.434 c 119.211 161.234 159.938 146.426 192.004 162.434
 c 224.066 146.426 264.797 161.234 280.781 192.434 c 280.777 192.434 l 281.457
 193.773 282.098 195.133 282.695 196.512 c 384 137.113 l 384 129.602 l 384
 120.898 381.637 112.359 377.16 104.898 c 372.684 97.438 366.262 91.332 
358.586 87.238 c h
0 164.953 m 96 221.211 l 95.711 234.219 98.977 248.02 105.984 261.867 c
 106.082 262.012 l 0 320.93 l 0 164.93 l h
1.414 347.617 m 119.016 282.266 l 132.527 299.785 152.207 317.473 178.777
 335.02 c 192 343.781 l 205.223 335.02 l 231.789 317.5 251.469 299.812 264.984
 282.266 c 382.586 347.617 l 379.992 358.008 374 367.234 365.559 373.828
 c 357.117 380.422 346.711 384.004 336 384 c 48 384 l 37.289 384.004 26.883
 380.422 18.441 373.828 c 10 367.234 4.008 358.008 1.414 347.617 c 384 320.93
 m 277.922 262.008 l 278.02 261.863 l 285.027 248.016 288.293 234.215 287.98
 221.207 c 384 164.953 l 384 320.953 l h
384 320.93 m f
192 191.832 m 231.938 150.77 331.801 222.625 192 315 c 52.199 222.602 152.062
 150.77 192 191.832 c f
Q Q
showpage
%%Trailer
%%EOF
