%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 725
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 725
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 629 rectclip
1 0 0 -1 0 768 cm q
0 g
408 128.977 m 439.391 95.906 493.535 86.449 557.375 92.879 c 616.605 98.832
 677.52 117.984 720 135.742 c 720 612.047 l 675.938 595.246 618.863 578.832
 562.223 573.168 c 509.711 567.84 452.879 571.297 408 596.785 c h
384 85.586 m 336.719 44.93 268.176 38.879 205.777 45.121 c 133.105 52.465
 59.762 77.379 14.066 98.16 c 14.062 98.16 l 9.871 100.066 6.316 103.141
 3.82 107.012 c 1.328 110.887 0 115.395 0 120 c 0 648 l 0.004 656.16 4.148
 663.758 11.012 668.176 c 17.875 672.59 26.508 673.219 33.938 669.84 c 76.273
 650.641 144.48 627.551 210.578 620.879 c 278.211 614.062 334.898 625.055
 365.281 662.977 c 369.836 668.652 376.723 671.957 384 671.957 c 391.277
 671.957 398.164 668.652 402.719 662.977 c 433.102 625.055 489.789 614.066
 557.375 620.879 c 623.52 627.551 691.773 650.641 734.062 669.84 c 741.492
 673.219 750.125 672.59 756.988 668.176 c 763.852 663.758 767.996 656.16
 768 648 c 768 120 l 768 115.395 766.672 110.887 764.18 107.012 c 761.684
 103.141 758.129 100.066 753.938 98.16 c 708.242 77.375 634.898 52.465 562.227
 45.121 c 499.824 38.832 431.281 44.93 384 85.586 c f
Q Q
showpage
%%Trailer
%%EOF
