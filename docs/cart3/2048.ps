%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1440 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 144 m 0 131.27 5.059 119.062 14.059 110.059 c 23.062 101.059 35.27 96
 48 96 c 192 96 l 202.707 96.004 213.105 99.586 221.543 106.18 c 229.98 
112.77 235.969 121.996 238.559 132.383 c 277.441 288 l 1392 288 l 1406.375
 288.008 1419.988 294.461 1429.098 305.578 c 1438.211 316.695 1441.855 331.312
 1439.039 345.406 c 1343.039 825.406 l 1340.941 835.875 1335.41 845.344 
1327.324 852.316 c 1319.242 859.289 1309.062 863.367 1298.398 863.902 c 
396.285 909.215 l 423.84 1056 l 1248 1056 l 1265.148 1056 1280.996 1065.148
 1289.57 1080 c 1298.145 1094.852 1298.145 1113.148 1289.57 1128 c 1280.996
 1142.852 1265.148 1152 1248 1152 c 384 1152 l 372.809 1151.988 361.973 
1148.07 353.367 1140.918 c 344.762 1133.766 338.922 1123.832 336.863 1112.832
 c 192.961 346.273 l 154.559 192 l 48 192 l 35.27 192 23.062 186.941 14.059
 177.941 c 5.059 168.938 0 156.73 0 144 c 297.793 384 m 378.434 813.984 
l 1256.258 769.922 l 1333.441 384 l h
480 1152 m 429.078 1152 380.242 1172.227 344.234 1208.234 c 308.227 1244.242
 288 1293.078 288 1344 c 288 1394.922 308.227 1443.758 344.234 1479.766 
c 380.242 1515.773 429.078 1536 480 1536 c 530.922 1536 579.758 1515.773
 615.766 1479.766 c 651.773 1443.758 672 1394.922 672 1344 c 672 1293.078
 651.773 1244.242 615.766 1208.234 c 579.758 1172.227 530.922 1152 480 1152
 c 1152 1152 m 1101.078 1152 1052.242 1172.227 1016.234 1208.234 c 980.227
 1244.242 960 1293.078 960 1344 c 960 1394.922 980.227 1443.758 1016.234
 1479.766 c 1052.242 1515.773 1101.078 1536 1152 1536 c 1202.922 1536 1251.758
 1515.773 1287.766 1479.766 c 1323.773 1443.758 1344 1394.922 1344 1344 
c 1344 1293.078 1323.773 1244.242 1287.766 1208.234 c 1251.758 1172.227 
1202.922 1152 1152 1152 c 480 1248 m 514.297 1248 545.988 1266.297 563.137
 1296 c 580.289 1325.703 580.289 1362.297 563.137 1392 c 545.988 1421.703
 514.297 1440 480 1440 c 445.703 1440 414.012 1421.703 396.863 1392 c 379.711
 1362.297 379.711 1325.703 396.863 1296 c 414.012 1266.297 445.703 1248 
480 1248 c 1152 1248 m 1186.297 1248 1217.988 1266.297 1235.137 1296 c 1252.289
 1325.703 1252.289 1362.297 1235.137 1392 c 1217.988 1421.703 1186.297 1440
 1152 1440 c 1117.703 1440 1086.012 1421.703 1068.863 1392 c 1051.711 1362.297
 1051.711 1325.703 1068.863 1296 c 1086.012 1266.297 1117.703 1248 1152 
1248 c f
Q Q
showpage
%%Trailer
%%EOF
