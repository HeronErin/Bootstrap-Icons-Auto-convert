%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
28.215 3.148 m 26.977 -1.051 21.023 -1.051 19.785 3.148 c 19.484 4.168 
l 19.484 4.172 l 19.109 5.445 18.18 6.48 16.953 6.988 c 15.727 7.496 14.336
 7.422 13.172 6.785 c 12.242 6.273 l 8.395 4.18 4.184 8.387 6.281 12.234
 c 6.789 13.168 l 8.129 15.629 6.859 18.691 4.172 19.484 c 3.152 19.785 
l -1.047 21.023 -1.047 26.977 3.152 28.215 c 4.172 28.516 l 5.445 28.891
 6.48 29.82 6.988 31.047 c 7.496 32.273 7.422 33.664 6.785 34.828 c 6.273
 35.758 l 4.18 39.605 8.387 43.816 12.234 41.719 c 13.168 41.211 l 13.172
 41.215 l 14.336 40.578 15.727 40.504 16.953 41.012 c 18.18 41.52 19.109
 42.555 19.484 43.828 c 19.785 44.848 l 21.023 49.047 26.977 49.047 28.215
 44.848 c 28.516 43.828 l 28.891 42.555 29.82 41.52 31.047 41.012 c 32.273
 40.504 33.664 40.578 34.828 41.215 c 35.758 41.727 l 39.605 43.82 43.816
 39.613 41.719 35.766 c 41.211 34.832 l 41.215 34.828 l 40.578 33.664 40.504
 32.273 41.012 31.047 c 41.52 29.82 42.555 28.891 43.828 28.516 c 44.848
 28.215 l 49.047 26.977 49.047 21.023 44.848 19.785 c 43.828 19.484 l 42.555
 19.109 41.52 18.18 41.012 16.953 c 40.504 15.727 40.578 14.336 41.215 13.172
 c 41.727 12.242 l 43.82 8.395 39.613 4.184 35.766 6.281 c 34.832 6.789 
l 34.828 6.785 l 33.664 7.422 32.273 7.496 31.047 6.988 c 29.82 6.48 28.891
 5.445 28.516 4.172 c h
24 32.789 m 19.145 32.789 15.211 28.855 15.211 24 c 15.211 19.145 19.145
 15.211 24 15.211 c 28.852 15.211 32.785 19.145 32.785 23.996 c 32.785 28.852
 28.852 32.785 24 32.785 c h
24 32.789 m f
Q Q
showpage
%%Trailer
%%EOF
