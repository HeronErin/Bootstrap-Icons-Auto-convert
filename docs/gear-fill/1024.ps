%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
451.441 50.398 m 431.617 -16.801 336.387 -16.801 316.562 50.398 c 311.762
 66.719 l 305.762 87.098 290.867 103.664 271.242 111.797 c 251.617 119.926
 229.371 118.742 210.719 108.574 c 195.84 100.414 l 134.254 66.91 66.91 
134.254 100.465 195.789 c 108.578 210.719 l 129.984 250.078 109.684 299.086
 66.723 311.758 c 50.402 316.559 l -16.797 336.383 -16.797 431.613 50.402
 451.438 c 66.723 456.238 l 66.719 456.238 l 87.098 462.238 103.664 477.133
 111.797 496.758 c 119.926 516.383 118.742 538.629 108.574 557.281 c 100.414
 572.16 l 66.91 633.746 134.254 701.09 195.789 667.535 c 210.719 659.422
 l 210.719 659.426 l 229.371 649.258 251.617 648.074 271.242 656.203 c 290.867
 664.336 305.762 680.902 311.762 701.281 c 316.562 717.602 l 336.387 784.801
 431.617 784.801 451.441 717.602 c 456.242 701.281 l 456.238 701.281 l 462.238
 680.902 477.133 664.336 496.758 656.203 c 516.383 648.074 538.629 649.258
 557.281 659.426 c 572.16 667.586 l 633.746 701.09 701.09 633.746 667.535
 572.211 c 659.422 557.281 l 659.426 557.281 l 649.258 538.629 648.074 516.383
 656.203 496.758 c 664.336 477.133 680.902 462.238 701.281 456.238 c 717.602
 451.438 l 784.801 431.613 784.801 336.383 717.602 316.559 c 701.281 311.758
 l 701.281 311.762 l 680.902 305.762 664.336 290.867 656.203 271.242 c 648.074
 251.617 649.258 229.371 659.426 210.719 c 667.586 195.84 l 701.09 134.254
 633.746 66.91 572.211 100.465 c 557.281 108.578 l 557.281 108.574 l 538.629
 118.742 516.383 119.926 496.758 111.797 c 477.133 103.664 462.238 87.098
 456.238 66.719 c h
384 524.641 m 333.754 524.641 287.324 497.836 262.203 454.32 c 237.078 
410.805 237.078 357.195 262.203 313.68 c 287.324 270.164 333.754 243.359
 384 243.359 c 434.23 243.359 480.641 270.156 505.758 313.656 c 530.871 
357.156 530.871 410.75 505.758 454.246 c 480.641 497.746 434.23 524.543 
384 524.543 c h
384 524.641 m f
Q Q
showpage
%%Trailer
%%EOF
