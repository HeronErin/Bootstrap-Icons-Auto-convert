%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
902.879 100.801 m 863.23 -33.598 672.766 -33.598 633.117 100.801 c 623.516
 133.441 l 623.52 133.441 l 611.523 174.191 581.734 207.332 542.484 223.59
 c 503.238 239.848 458.742 237.48 421.441 217.152 c 391.68 200.832 l 268.512
 133.824 133.824 268.512 200.926 391.586 c 217.148 421.441 l 259.965 500.16
 219.355 598.176 133.438 623.52 c 100.797 633.121 l -33.602 672.77 -33.602
 863.234 100.797 902.883 c 133.438 912.484 l 133.441 912.48 l 174.191 924.477
 207.332 954.266 223.59 993.516 c 239.848 1032.762 237.48 1077.258 217.152
 1114.559 c 200.832 1144.32 l 133.824 1267.488 268.512 1402.176 391.586 
1335.074 c 421.441 1318.852 l 421.441 1318.848 l 458.742 1298.52 503.238
 1296.152 542.484 1312.41 c 581.734 1328.668 611.523 1361.809 623.52 1402.559
 c 633.121 1435.199 l 672.77 1569.598 863.234 1569.598 902.883 1435.199 
c 912.484 1402.559 l 912.48 1402.559 l 924.477 1361.809 954.266 1328.668
 993.516 1312.41 c 1032.762 1296.152 1077.258 1298.52 1114.559 1318.848 
c 1144.32 1335.168 l 1267.488 1402.176 1402.176 1267.488 1335.074 1144.414
 c 1318.852 1114.559 l 1318.848 1114.559 l 1298.52 1077.258 1296.152 1032.762
 1312.41 993.516 c 1328.668 954.266 1361.809 924.477 1402.559 912.48 c 1435.199
 902.879 l 1569.598 863.23 1569.598 672.766 1435.199 633.117 c 1402.559 
623.516 l 1402.559 623.52 l 1361.809 611.523 1328.668 581.734 1312.41 542.484
 c 1296.152 503.238 1298.52 458.742 1318.848 421.441 c 1335.168 391.68 l
 1402.176 268.512 1267.488 133.824 1144.414 200.926 c 1114.559 217.148 l
 1114.559 217.152 l 1077.258 237.48 1032.762 239.848 993.516 223.59 c 954.266
 207.332 924.477 174.191 912.48 133.441 c h
768 1049.281 m 693.398 1049.281 621.855 1019.645 569.105 966.895 c 516.355
 914.145 486.719 842.602 486.719 768 c 486.719 693.398 516.355 621.855 569.105
 569.105 c 621.855 516.355 693.398 486.719 768 486.719 c 842.574 486.719
 914.094 516.344 966.828 569.078 c 1019.559 621.809 1049.184 693.328 1049.184
 767.902 c 1049.184 842.48 1019.559 914 966.828 966.73 c 914.094 1019.465
 842.574 1049.09 768 1049.09 c h
768 1049.281 m f
Q Q
showpage
%%Trailer
%%EOF
