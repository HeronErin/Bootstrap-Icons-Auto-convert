%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
225.719 25.199 m 215.809 -8.402 168.191 -8.402 158.277 25.199 c 155.879
 33.359 l 152.879 43.547 145.434 51.832 135.621 55.898 c 125.809 59.961 
114.684 59.371 105.359 54.289 c 97.918 50.211 l 67.125 33.457 33.453 67.133
 50.23 97.898 c 54.285 105.363 l 64.988 125.043 54.836 149.547 33.355 155.883
 c 25.195 158.281 l -8.406 168.191 -8.406 215.809 25.195 225.723 c 33.355
 228.121 l 33.359 228.121 l 43.547 231.121 51.832 238.566 55.898 248.379
 c 59.961 258.191 59.371 269.316 54.289 278.641 c 50.211 286.082 l 33.457
 316.875 67.133 350.547 97.898 333.77 c 105.363 329.715 l 105.359 329.711
 l 114.684 324.629 125.809 324.039 135.621 328.102 c 145.434 332.168 152.879
 340.453 155.879 350.641 c 158.277 358.801 l 168.188 392.402 215.805 392.402
 225.719 358.801 c 228.117 350.641 l 228.121 350.641 l 231.121 340.453 238.566
 332.168 248.379 328.102 c 258.191 324.039 269.316 324.629 278.641 329.711
 c 286.082 333.789 l 316.875 350.543 350.547 316.867 333.77 286.102 c 329.715
 278.637 l 329.711 278.641 l 324.629 269.316 324.039 258.191 328.102 248.379
 c 332.168 238.566 340.453 231.121 350.641 228.121 c 358.801 225.723 l 392.402
 215.812 392.402 168.195 358.801 158.281 c 350.641 155.883 l 350.641 155.879
 l 340.453 152.879 332.168 145.434 328.102 135.621 c 324.039 125.809 324.629
 114.684 329.711 105.359 c 333.789 97.918 l 350.543 67.125 316.867 33.453
 286.102 50.23 c 278.637 54.285 l 278.641 54.289 l 269.316 59.371 258.191
 59.961 248.379 55.898 c 238.566 51.832 231.121 43.547 228.121 33.359 c 
h
192 262.32 m 166.879 262.32 143.664 248.918 131.102 227.16 c 118.539 205.402
 118.539 178.598 131.102 156.84 c 143.664 135.082 166.879 121.68 192 121.68
 c 217.113 121.68 240.32 135.078 252.879 156.828 c 265.434 178.578 265.434
 205.375 252.879 227.125 c 240.32 248.875 217.113 262.273 192 262.273 c 
h
192 262.32 m f
Q Q
showpage
%%Trailer
%%EOF
