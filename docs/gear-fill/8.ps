%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.527 0.395 m 3.371 -0.129 2.629 -0.129 2.473 0.395 c 2.434 0.523 l 2.438
 0.52 l 2.391 0.68 2.273 0.809 2.117 0.875 c 1.965 0.938 1.793 0.926 1.645
 0.848 c 1.527 0.785 l 1.047 0.523 0.52 1.051 0.781 1.531 c 0.844 1.648 
l 1.012 1.957 0.852 2.34 0.516 2.438 c 0.387 2.477 l -0.137 2.633 -0.137
 3.375 0.387 3.531 c 0.516 3.57 l 0.52 3.562 l 0.68 3.609 0.809 3.727 0.875
 3.883 c 0.938 4.035 0.926 4.207 0.848 4.355 c 0.785 4.473 l 0.523 4.953
 1.051 5.48 1.531 5.219 c 1.648 5.156 l 1.645 5.152 l 1.793 5.074 1.965 
5.062 2.117 5.125 c 2.273 5.191 2.391 5.32 2.438 5.48 c 2.477 5.609 l 2.633
 6.133 3.375 6.133 3.531 5.609 c 3.57 5.48 l 3.562 5.48 l 3.609 5.32 3.727
 5.191 3.883 5.125 c 4.035 5.062 4.207 5.074 4.355 5.152 c 4.473 5.215 l
 4.953 5.477 5.48 4.949 5.219 4.469 c 5.156 4.352 l 5.152 4.355 l 5.074 
4.207 5.062 4.035 5.125 3.883 c 5.191 3.727 5.32 3.609 5.48 3.562 c 5.609
 3.523 l 6.133 3.367 6.133 2.625 5.609 2.469 c 5.48 2.43 l 5.48 2.438 l 
5.32 2.391 5.191 2.273 5.125 2.117 c 5.062 1.965 5.074 1.793 5.152 1.645
 c 5.215 1.527 l 5.477 1.047 4.949 0.52 4.469 0.781 c 4.352 0.844 l 4.355
 0.848 l 4.207 0.926 4.035 0.938 3.883 0.875 c 3.727 0.809 3.609 0.68 3.562
 0.52 c h
3 4.098 m 2.395 4.098 1.902 3.605 1.902 3 c 1.902 2.395 2.395 1.902 3 1.902
 c 3.605 1.902 4.098 2.395 4.098 3 c 4.098 3.605 3.605 4.098 3 4.098 c h
3 4.098 m f
Q Q
showpage
%%Trailer
%%EOF
