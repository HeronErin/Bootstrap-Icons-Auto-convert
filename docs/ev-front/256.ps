%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
112.246 50.914 m 112.551 49.914 112.129 48.836 111.227 48.301 c 110.324
 47.773 109.18 47.941 108.469 48.707 c 72.613 86.953 l 72.004 87.605 71.84
 88.559 72.191 89.379 c 72.547 90.199 73.352 90.734 74.242 90.742 c 89.133
 90.742 l 81.059 117.082 l 81.059 117.086 l 80.758 118.086 81.18 119.164
 82.078 119.699 c 82.977 120.215 84.117 120.059 84.84 119.293 c 119.398 
81.051 l 119.398 81.047 l 120.012 80.391 120.176 79.438 119.816 78.613 c
 119.461 77.793 118.652 77.258 117.758 77.258 c 102.863 77.258 l h
112.246 50.914 m f
57.828 24 m 51.953 23.996 46.211 25.719 41.305 28.949 c 36.402 32.184 32.555
 36.781 30.238 42.18 c 20.734 64.355 l 19.844 66.465 18.227 68.184 16.176
 69.203 c 10.176 72.203 5.914 77.781 4.598 84.348 c 0.602 104.496 l 0.211
 106.434 0.016 108.402 0.012 110.375 c 0.012 115.332 l 0.012 125.102 4.691
 133.848 12.012 139.297 c 12.012 162 l 12.012 163.59 12.645 165.117 13.77
 166.242 c 14.895 167.367 16.422 168 18.012 168 c 42.012 168 l 43.602 168
 45.129 167.367 46.254 166.242 c 47.379 165.117 48.012 163.59 48.012 162
 c 48.012 145.945 l 63.516 146.52 80.953 147 96.012 147 c 111.07 147 128.508
 146.52 144.012 145.945 c 144.012 162 l 144.012 163.59 144.645 165.117 145.77
 166.242 c 146.895 167.367 148.422 168 150.012 168 c 174.012 168 l 175.602
 168 177.129 167.367 178.254 166.242 c 179.379 165.117 180.012 163.59 180.012
 162 c 180.012 139.297 l 187.332 133.848 192.012 125.102 192.012 115.332
 c 192.012 110.375 l 192.012 108.391 191.816 106.43 191.422 104.496 c 187.402
 84.336 l 186.102 77.773 181.828 72.184 175.836 69.203 c 173.781 68.188 
172.16 66.465 171.266 64.355 c 161.762 42.18 l 159.445 36.781 155.598 32.184
 150.695 28.949 c 145.789 25.719 140.047 23.996 134.172 24 c h
41.281 46.922 m 42.668 43.68 44.977 40.914 47.922 38.973 c 50.863 37.031
 54.312 35.996 57.84 36 c 134.184 36 l 137.707 36 141.156 37.035 144.098
 38.977 c 147.039 40.918 149.348 43.68 150.73 46.922 c 160.234 69.086 l 
162.25 73.801 165.879 77.645 170.473 79.934 c 173.137 81.277 175.043 83.773
 175.633 86.703 c 179.664 106.852 l 179.902 108.02 180.02 109.195 180.012
 110.379 c 180.012 115.336 l 180.012 115.332 l 180.031 119.906 178.281 124.309
 175.137 127.625 c 171.988 130.941 167.684 132.918 163.117 133.141 c 144.457
 133.98 117.684 135 96.012 135 c 74.34 135 47.566 133.992 28.906 133.141
 c 24.34 132.922 20.031 130.945 16.879 127.629 c 13.73 124.312 11.98 119.906
 12 115.332 c 12 110.375 l 12 109.191 12.121 108.016 12.359 106.848 c 16.379
 86.688 l 16.953 83.754 18.863 81.258 21.539 79.934 c 26.137 77.652 29.758
 73.801 31.773 69.086 c h
41.281 46.922 m f
Q Q
showpage
%%Trailer
%%EOF
