%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
56.125 25.457 m 56.273 24.957 56.062 24.418 55.613 24.148 c 55.164 23.887
 54.59 23.973 54.234 24.355 c 36.305 43.477 l 36 43.805 35.918 44.281 36.098
 44.691 c 36.273 45.102 36.676 45.367 37.121 45.371 c 44.566 45.371 l 40.527
 58.543 l 40.531 58.543 l 40.379 59.043 40.59 59.582 41.039 59.852 c 41.488
 60.109 42.059 60.031 42.418 59.648 c 59.699 40.527 l 59.699 40.523 l 60.004
 40.195 60.086 39.719 59.91 39.309 c 59.73 38.895 59.324 38.629 58.879 38.629
 c 51.434 38.629 l h
56.125 25.457 m f
28.914 12 m 25.977 12 23.105 12.859 20.652 14.477 c 18.199 16.09 16.277
 18.391 15.121 21.09 c 10.367 32.18 l 9.922 33.23 9.113 34.09 8.09 34.602
 c 5.09 36.102 2.961 38.891 2.301 42.172 c 0.301 52.246 l 0.105 53.215 0.008
 54.199 0.008 55.188 c 0.008 57.664 l 0.008 62.547 2.348 66.922 6.008 69.645
 c 6.008 81 l 6.008 81.797 6.32 82.559 6.883 83.121 c 7.449 83.684 8.211
 84 9.008 84 c 21.008 84 l 21.801 84 22.566 83.684 23.129 83.121 c 23.691
 82.559 24.008 81.797 24.008 81 c 24.008 72.973 l 31.762 73.262 40.477 73.5
 48.008 73.5 c 55.539 73.5 64.254 73.262 72.008 72.973 c 72.008 81 l 72.008
 81.797 72.32 82.559 72.883 83.121 c 73.449 83.684 74.211 84 75.008 84 c
 87.008 84 l 87.801 84 88.566 83.684 89.129 83.121 c 89.691 82.559 90.008
 81.797 90.008 81 c 90.008 69.648 l 93.668 66.926 96.008 62.551 96.008 57.668
 c 96.008 55.191 l 96.008 54.199 95.91 53.219 95.715 52.25 c 93.703 42.172
 l 93.703 42.168 l 93.051 38.887 90.914 36.094 87.918 34.602 c 86.891 34.094
 86.082 33.234 85.633 32.18 c 80.879 21.09 l 79.723 18.391 77.801 16.09 
75.348 14.477 c 72.895 12.859 70.023 12 67.086 12 c h
20.641 23.461 m 22.059 20.145 25.316 17.996 28.922 18 c 67.094 18 l 70.695
 18 73.949 20.148 75.367 23.461 c 80.121 34.543 l 80.117 34.543 l 81.125
 36.898 82.941 38.824 85.234 39.965 c 86.566 40.637 87.52 41.887 87.812 
43.348 c 89.828 53.422 l 89.949 54.008 90.008 54.594 90.004 55.188 c 90.004
 57.664 l 90.008 57.664 l 90.023 62.414 86.301 66.34 81.559 66.57 c 72.23
 66.992 58.844 67.5 48.008 67.5 c 37.172 67.5 23.785 66.996 14.457 66.57
 c 14.453 66.57 l 9.707 66.344 5.98 62.418 6 57.664 c 6 55.188 l 6 54.594
 6.059 54.008 6.18 53.422 c 8.191 43.344 l 8.477 41.879 9.43 40.629 10.77
 39.965 c 13.066 38.824 14.879 36.898 15.887 34.539 c h
20.641 23.461 m f
Q Q
showpage
%%Trailer
%%EOF
