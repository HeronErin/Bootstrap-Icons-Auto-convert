%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.508 1.59 m 3.516 1.559 3.504 1.527 3.477 1.508 c 3.449 1.492 3.41 1.5
 3.391 1.523 c 2.27 2.719 l 2.227 2.762 2.258 2.836 2.32 2.836 c 2.785 2.836
 l 2.531 3.66 l 2.523 3.691 2.535 3.723 2.566 3.742 c 2.594 3.758 2.629 
3.754 2.652 3.73 c 3.73 2.535 l 3.73 2.531 l 3.773 2.488 3.742 2.414 3.68
 2.414 c 3.215 2.414 l h
3.508 1.59 m f
1.809 0.75 m 1.434 0.75 1.094 0.973 0.945 1.316 c 0.648 2.008 l 0.648 2.012
 l 0.621 2.078 0.57 2.129 0.504 2.164 c 0.316 2.258 0.184 2.434 0.141 2.637
 c 0.02 3.266 l 0.008 3.324 0 3.387 0 3.449 c 0 3.605 l 0 3.91 0.145 4.184
 0.375 4.355 c 0.375 5.062 l 0.375 5.168 0.461 5.25 0.562 5.25 c 1.312 5.25
 l 1.418 5.25 1.5 5.168 1.5 5.062 c 1.5 4.562 l 1.984 4.582 2.531 4.594 
3 4.594 c 3.469 4.594 4.016 4.578 4.5 4.562 c 4.5 5.062 l 4.5 5.168 4.586
 5.25 4.688 5.25 c 5.438 5.25 l 5.543 5.25 5.625 5.168 5.625 5.062 c 5.625
 4.352 l 5.855 4.18 6 3.906 6 3.602 c 6 3.445 l 6 3.383 5.992 3.32 5.98 
3.262 c 5.855 2.633 l 5.855 2.637 l 5.816 2.43 5.684 2.254 5.496 2.164 c
 5.43 2.129 5.379 2.078 5.352 2.012 c 5.055 1.32 l 5.055 1.316 l 4.906 0.973
 4.566 0.75 4.191 0.75 c h
1.289 1.465 m 1.379 1.258 1.582 1.125 1.809 1.125 c 4.195 1.125 l 4.191
 1.125 l 4.418 1.125 4.621 1.258 4.711 1.465 c 5.008 2.156 l 5.008 2.16 
l 5.07 2.305 5.184 2.426 5.328 2.496 c 5.41 2.539 5.473 2.617 5.488 2.707
 c 5.613 3.336 l 5.621 3.371 5.625 3.41 5.625 3.445 c 5.625 3.605 l 5.625
 3.902 5.395 4.145 5.098 4.16 c 4.516 4.188 3.68 4.219 3 4.219 c 2.324 4.219
 1.484 4.188 0.902 4.16 c 0.605 4.145 0.375 3.902 0.375 3.605 c 0.375 3.449
 l 0.375 3.414 0.379 3.375 0.387 3.34 c 0.512 2.711 l 0.531 2.617 0.59 2.539
 0.672 2.496 c 0.816 2.426 0.93 2.305 0.992 2.156 c h
1.289 1.465 m f
Q Q
showpage
%%Trailer
%%EOF
