%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.875 4.688 m 1.875 4.898 1.758 5.09 1.57 5.188 c 1.383 5.285 1.16 5.27
 0.988 5.145 c 0.816 5.023 0.727 4.816 0.754 4.609 c 0.785 4.402 0.926 4.227
 1.125 4.156 c 1.125 3.562 l 1.125 3.312 1.5 3.312 1.5 3.562 c 1.5 4.156
 l 1.727 4.238 1.875 4.449 1.875 4.688 c f
0.375 0.938 m 0.375 0.418 0.793 0 1.312 0 c 1.832 0 2.25 0.418 2.25 0.938
 c 2.25 3.77 l 2.621 4.145 2.727 4.707 2.523 5.195 c 2.316 5.684 1.84 6 
1.312 6 c 0.785 6 0.309 5.684 0.102 5.195 c -0.102 4.707 0.004 4.145 0.375
 3.77 c h
1.312 0.375 m 1 0.375 0.75 0.625 0.75 0.938 c 0.75 3.934 l 0.688 3.988 
l 0.398 4.246 0.297 4.66 0.438 5.023 c 0.574 5.387 0.922 5.625 1.312 5.625
 c 1.699 5.625 2.051 5.387 2.188 5.023 c 2.328 4.66 2.227 4.246 1.938 3.988
 c 1.875 3.934 l 1.875 0.938 l 1.875 0.625 1.625 0.375 1.312 0.375 c 3.188
 0.75 m 3.293 0.75 3.375 0.832 3.375 0.938 c 3.375 1.422 l 3.617 1.18 l 
3.793 1.004 4.059 1.27 3.883 1.445 c 3.375 1.953 l 3.375 2.676 l 4 2.316
 l 4.188 1.621 l 4.25 1.379 4.613 1.477 4.547 1.719 c 4.457 2.051 l 4.879
 1.809 l 4.879 1.805 l 5.098 1.684 5.281 2.004 5.066 2.133 c 4.645 2.375
 l 4.977 2.465 l 4.98 2.461 l 5.219 2.527 5.121 2.891 4.883 2.824 c 4.191
 2.637 l 3.562 3 l 4.188 3.359 l 4.883 3.172 l 4.883 3.176 l 4.984 3.148
 5.086 3.207 5.113 3.309 c 5.141 3.41 5.082 3.512 4.977 3.539 c 4.645 3.629
 l 5.066 3.871 l 5.066 3.867 l 5.281 3.996 5.098 4.316 4.879 4.195 c 4.457
 3.953 l 4.547 4.285 l 4.547 4.281 l 4.578 4.383 4.52 4.488 4.418 4.516 
c 4.316 4.543 4.211 4.48 4.188 4.379 c 4 3.688 l 3.375 3.324 l 3.375 4.047
 l 3.883 4.555 l 4.059 4.73 3.793 4.996 3.617 4.82 c 3.375 4.578 l 3.375
 5.062 l 3.375 5.312 3 5.312 3 5.062 c 3 0.938 l 3 0.832 3.082 0.75 3.188
 0.75 c f
Q Q
showpage
%%Trailer
%%EOF
