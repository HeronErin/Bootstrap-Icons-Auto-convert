%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 331 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 331 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 331 384 rectclip
1 0 0 -1 0 384 cm q
0 g
120 300 m 119.996 308.844 116.738 317.375 110.844 323.969 c 104.953 330.559
 96.844 334.754 88.059 335.75 c 79.27 336.75 70.426 334.477 63.207 329.371
 c 55.988 324.262 50.902 316.68 48.918 308.062 c 46.934 299.445 48.191 290.398
 52.445 282.648 c 56.703 274.898 63.664 268.988 72 266.039 c 72 228 l 72
 221.371 77.371 216 84 216 c 90.629 216 96 221.371 96 228 c 96 266.039 l
 103.023 268.523 109.102 273.121 113.398 279.203 c 117.699 285.285 120.004
 292.551 120 300 c f
24 60 m 24 38.562 35.438 18.758 54 8.039 c 72.562 -2.68 95.438 -2.68 114
 8.039 c 132.562 18.758 144 38.562 144 60 c 144 241.199 l 159.523 257.043
 168.148 278.379 168 300.559 c 167.848 322.738 158.93 343.957 143.195 359.586
 c 127.457 375.215 106.18 383.988 84 383.988 c 61.82 383.988 40.543 375.215
 24.805 359.586 c 9.07 343.957 0.152 322.738 0 300.559 c -0.148 278.379 
8.477 257.043 24 241.199 c h
84 24 m 74.453 24 65.297 27.793 58.543 34.543 c 51.793 41.297 48 50.453
 48 60 c 48 251.688 l 43.992 255.289 l 31.844 266.152 24.637 281.496 24.031
 297.781 c 23.422 314.07 29.473 329.906 40.781 341.645 c 52.09 353.383 67.688
 360.012 83.988 360.012 c 100.289 360.012 115.887 353.383 127.195 341.645
 c 138.504 329.906 144.551 314.07 143.945 297.781 c 143.34 281.496 136.133
 266.152 123.984 255.289 c 120 251.664 l 120 60 l 120 50.453 116.207 41.297
 109.457 34.543 c 102.703 27.793 93.547 24 84 24 c 204 48 m 207.184 48 210.234
 49.266 212.484 51.516 c 214.734 53.766 216 56.816 216 60 c 216 91.031 l
 231.504 75.504 l 236.195 70.812 243.805 70.812 248.496 75.504 c 253.188
 80.195 253.188 87.805 248.496 92.496 c 216 124.969 l 216 171.215 l 256.055
 148.102 l 267.934 103.703 l 267.938 103.703 l 269.66 97.301 276.246 93.508
 282.648 95.23 c 289.051 96.957 292.844 103.543 291.121 109.945 c 285.434
 131.113 l 312.312 115.609 l 318.047 112.348 325.336 114.328 328.637 120.039
 c 331.934 125.754 330.004 133.055 324.312 136.391 c 297.434 151.895 l 318.648
 157.582 l 318.648 157.586 l 325.051 159.309 328.844 165.895 327.121 172.297
 c 325.398 178.699 318.809 182.492 312.406 180.77 c 268.055 168.891 l 228
 192 l 268.055 215.113 l 312.43 203.234 l 312.434 203.23 l 315.527 202.352
 318.844 202.746 321.645 204.336 c 324.441 205.922 326.484 208.566 327.316
 211.676 c 328.145 214.785 327.691 218.098 326.059 220.867 c 324.426 223.641
 321.746 225.637 318.625 226.414 c 297.434 232.102 l 324.312 247.605 l 324.312
 247.609 l 330.004 250.945 331.934 258.246 328.637 263.961 c 325.336 269.672
 318.047 271.652 312.312 268.391 c 285.434 252.887 l 291.121 274.078 l 292.004
 277.176 291.605 280.492 290.016 283.293 c 288.43 286.09 285.785 288.133
 282.676 288.965 c 279.566 289.793 276.258 289.34 273.484 287.707 c 270.715
 286.074 268.715 283.395 267.938 280.273 c 256.078 235.922 l 216 212.785
 l 216 259.031 l 248.496 291.504 l 253.188 296.195 253.188 303.805 248.496
 308.496 c 243.805 313.188 236.195 313.188 231.504 308.496 c 216 292.969
 l 216 324 l 216 330.629 210.629 336 204 336 c 197.371 336 192 330.629 192
 324 c 192 60 l 192 53.371 197.371 48 204 48 c f
Q Q
showpage
%%Trailer
%%EOF
