%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
15 37.5 m 15 39.18 14.062 40.723 12.566 41.496 c 11.074 42.266 9.273 42.141
 7.902 41.172 c 6.527 40.199 5.812 38.543 6.043 36.879 c 6.273 35.215 7.414
 33.816 9 33.254 c 9 28.5 l 9 27.672 9.672 27 10.5 27 c 11.328 27 12 27.672
 12 28.5 c 12 33.254 l 13.797 33.891 15 35.594 15 37.5 c f
3 7.5 m 3 3.359 6.359 0 10.5 0 c 14.641 0 18 3.359 18 7.5 c 18 30.148 l
 20.957 33.168 21.816 37.668 20.18 41.566 c 18.543 45.465 14.727 48 10.5
 48 c 6.273 48 2.457 45.465 0.82 41.566 c -0.816 37.668 0.043 33.168 3 30.148
 c h
10.5 3 m 8.016 3 6 5.016 6 7.5 c 6 31.461 l 5.5 31.91 l 3.18 33.984 2.383
 37.273 3.492 40.176 c 4.602 43.082 7.391 45 10.5 45 c 13.609 45 16.395 
43.082 17.504 40.176 c 18.613 37.273 17.816 33.984 15.496 31.91 c 15 31.457
 l 15 7.5 l 15 5.016 12.984 3 10.5 3 c 25.5 6 m 25.898 6 26.281 6.156 26.562
 6.438 c 26.844 6.719 27 7.102 27 7.5 c 27 11.379 l 28.938 9.438 l 29.523
 8.852 30.477 8.852 31.062 9.438 c 31.648 10.023 31.648 10.977 31.062 11.562
 c 27 15.621 l 27 21.402 l 32.008 18.512 l 33.492 12.961 l 33.492 12.965
 l 33.707 12.164 34.531 11.688 35.332 11.902 c 36.133 12.121 36.605 12.941
 36.391 13.742 c 35.68 16.387 l 39.039 14.449 l 39.754 14.043 40.668 14.289
 41.078 15.004 c 41.492 15.719 41.25 16.633 40.539 17.051 c 37.18 18.988
 l 39.832 19.699 l 40.633 19.914 41.105 20.738 40.891 21.535 c 40.676 22.336
 39.852 22.812 39.051 22.598 c 33.508 21.113 l 28.5 24 l 33.508 26.891 l
 39.055 25.406 l 39.055 25.402 l 39.441 25.293 39.855 25.344 40.207 25.543
 c 40.555 25.742 40.812 26.07 40.914 26.461 c 41.02 26.848 40.961 27.262
 40.758 27.609 c 40.555 27.953 40.219 28.203 39.828 28.301 c 37.18 29.012
 l 40.539 30.949 l 41.25 31.367 41.492 32.281 41.078 32.996 c 40.668 33.711
 39.754 33.957 39.039 33.551 c 35.68 31.613 l 36.391 34.262 l 36.5 34.648
 36.449 35.062 36.254 35.41 c 36.055 35.762 35.723 36.016 35.336 36.121 
c 34.945 36.223 34.531 36.168 34.188 35.965 c 33.84 35.758 33.59 35.426 
33.492 35.035 c 32.012 29.488 l 27 26.598 l 27 32.379 l 31.062 36.438 l 
31.648 37.023 31.648 37.977 31.062 38.562 c 30.477 39.148 29.523 39.148 
28.938 38.562 c 27 36.621 l 27 40.5 l 27 41.328 26.328 42 25.5 42 c 24.672
 42 24 41.328 24 40.5 c 24 7.5 l 24 6.672 24.672 6 25.5 6 c f
Q Q
showpage
%%Trailer
%%EOF
