%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1321 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1321 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1321 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 1200 m 479.98 1235.367 466.945 1269.492 443.383 1295.867 c 419.816 
1322.242 387.371 1339.023 352.227 1343.008 c 317.086 1346.992 281.703 1337.906
 252.832 1317.477 c 223.957 1297.051 203.613 1266.711 195.676 1232.246 c
 187.734 1197.781 192.758 1161.598 209.785 1130.598 c 226.812 1099.598 254.656
 1075.949 288 1064.16 c 288 912 l 288 894.852 297.148 879.004 312 870.43
 c 326.852 861.855 345.148 861.855 360 870.43 c 374.852 879.004 384 894.852
 384 912 c 384 1064.16 l 412.086 1074.09 436.402 1092.488 453.598 1116.816
 c 470.789 1141.145 480.016 1170.207 480 1200 c f
96 240 m 96 176.348 121.285 115.305 166.293 70.293 c 211.305 25.285 272.348
 0 336 0 c 399.652 0 460.695 25.285 505.707 70.293 c 550.715 115.305 576
 176.348 576 240 c 576 964.801 l 638.09 1028.168 672.598 1113.523 671.992
 1202.238 c 671.387 1290.953 635.723 1375.828 572.777 1438.344 c 509.832
 1500.863 424.715 1535.949 336 1535.949 c 247.285 1535.949 162.168 1500.863
 99.223 1438.344 c 36.277 1375.828 0.613 1290.953 0.008 1202.238 c -0.598
 1113.523 33.91 1028.168 96 964.801 c h
336 96 m 297.809 96 261.184 111.172 234.176 138.176 c 207.172 165.184 192
 201.809 192 240 c 192 1006.754 l 175.969 1021.152 l 139.734 1053.555 114.195
 1096.195 102.727 1143.43 c 91.258 1190.664 94.406 1240.27 111.746 1285.68
 c 129.09 1331.09 159.812 1370.16 199.848 1397.727 c 239.883 1425.293 287.344
 1440.051 335.953 1440.051 c 384.559 1440.051 432.023 1425.293 472.059 1397.727
 c 512.094 1370.16 542.816 1331.09 560.156 1285.68 c 577.5 1240.27 580.645
 1190.664 569.176 1143.43 c 557.711 1096.195 532.168 1053.555 495.938 1021.152
 c 480 1006.656 l 480 240 l 480 201.809 464.828 165.184 437.824 138.176 
c 410.816 111.172 374.191 96 336 96 c 816 192 m 828.73 192 840.938 197.059
 849.941 206.059 c 858.941 215.062 864 227.27 864 240 c 864 364.129 l 926.016
 302.016 l 938.156 289.875 955.855 285.133 972.438 289.578 c 989.023 294.02
 1001.98 306.977 1006.422 323.562 c 1010.867 340.145 1006.125 357.844 993.984
 369.984 c 864 499.871 l 864 684.863 l 1024.223 592.414 l 1071.742 414.812
 l 1071.742 414.816 l 1076.203 398.25 1089.16 385.32 1105.734 380.898 c 
1122.312 376.48 1139.988 381.234 1152.105 393.379 c 1164.223 405.523 1168.938
 423.211 1164.48 439.777 c 1141.727 524.449 l 1249.246 462.434 l 1264.09
 453.992 1282.297 454.074 1297.062 462.645 c 1311.832 471.211 1320.934 486.98
 1320.973 504.051 c 1321.012 521.125 1311.977 536.934 1297.246 545.566 c
 1189.727 607.582 l 1274.59 630.336 l 1274.594 630.336 l 1291.156 634.793
 1304.086 647.754 1308.508 664.328 c 1312.93 680.902 1308.172 698.578 1296.027
 710.695 c 1283.883 722.812 1266.199 727.531 1249.633 723.07 c 1072.227 
675.551 l 912 768 l 1072.223 860.449 l 1249.727 812.93 l 1262.105 809.398
 1275.379 810.988 1286.574 817.34 c 1297.766 823.691 1305.941 834.27 1309.262
 846.703 c 1312.582 859.137 1310.773 872.383 1304.234 883.469 c 1297.699
 894.555 1286.984 902.551 1274.496 905.664 c 1189.727 928.418 l 1297.246
 990.434 l 1311.977 999.066 1321.012 1014.875 1320.973 1031.949 c 1320.934
 1049.02 1311.832 1064.789 1297.062 1073.355 c 1282.297 1081.926 1264.09
 1082.008 1249.246 1073.566 c 1141.727 1011.551 l 1164.48 1096.32 l 1168.008
 1108.695 1166.418 1121.973 1160.07 1133.164 c 1153.719 1144.359 1143.141
 1152.535 1130.703 1155.855 c 1118.27 1159.176 1105.023 1157.363 1093.938
 1150.828 c 1082.852 1144.289 1074.855 1133.574 1071.742 1121.09 c 1024.32
 943.68 l 864 851.137 l 864 1036.129 l 993.984 1166.016 l 1006.125 1178.156
 1010.867 1195.855 1006.422 1212.438 c 1001.98 1229.023 989.023 1241.98 
972.438 1246.422 c 955.855 1250.867 938.156 1246.125 926.016 1233.984 c 
864 1171.871 l 864 1296 l 864 1313.148 854.852 1328.996 840 1337.57 c 825.148
 1346.145 806.852 1346.145 792 1337.57 c 777.148 1328.996 768 1313.148 768
 1296 c 768 240 l 768 227.27 773.059 215.062 782.059 206.059 c 791.062 197.059
 803.27 192 816 192 c f
Q Q
showpage
%%Trailer
%%EOF
