%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 661 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 661 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 661 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 600 m 239.992 617.684 233.473 634.746 221.691 647.934 c 209.91 661.121
 193.684 669.512 176.113 671.504 c 158.543 673.496 140.852 668.953 126.414
 658.738 c 111.98 648.523 101.805 633.355 97.836 616.121 c 93.867 598.891
 96.379 580.801 104.895 565.301 c 113.406 549.801 127.328 537.977 144 532.078
 c 144 456 l 144 447.426 148.574 439.504 156 435.215 c 163.426 430.93 172.574
 430.93 180 435.215 c 187.426 439.504 192 447.426 192 456 c 192 532.078 
l 206.043 537.047 218.203 546.242 226.797 558.41 c 235.395 570.574 240.008
 585.105 240 600 c f
48 120 m 48 77.129 70.871 37.512 108 16.078 c 145.129 -5.359 190.871 -5.359
 228 16.078 c 265.129 37.512 288 77.129 288 120 c 288 482.398 l 319.043 
514.086 336.297 556.762 335.996 601.117 c 335.695 645.477 317.863 687.914
 286.391 719.172 c 254.918 750.434 212.359 767.977 168 767.977 c 123.641
 767.977 81.082 750.434 49.609 719.172 c 18.137 687.914 0.305 645.477 0.004
 601.117 c -0.297 556.762 16.957 514.086 48 482.398 c h
168 48 m 148.906 48 130.59 55.586 117.09 69.09 c 103.586 82.59 96 100.906
 96 120 c 96 503.375 l 87.984 510.574 l 63.684 532.309 49.27 562.988 48.059
 595.566 c 46.848 628.145 58.941 659.812 81.562 683.285 c 104.18 706.762
 135.375 720.027 167.977 720.027 c 200.574 720.027 231.773 706.762 254.391
 683.285 c 277.012 659.812 289.105 628.145 287.895 595.566 c 286.68 562.988
 272.27 532.309 247.969 510.574 c 240 503.328 l 240 120 l 240 100.906 232.414
 82.59 218.91 69.09 c 205.41 55.586 187.094 48 168 48 c 408 96 m 414.363
 96 420.469 98.527 424.969 103.031 c 429.473 107.531 432 113.637 432 120
 c 432 182.062 l 463.008 151.008 l 469.078 144.938 477.926 142.566 486.219
 144.789 c 494.512 147.012 500.988 153.488 503.211 161.781 c 505.434 170.074
 503.062 178.922 496.992 184.992 c 432 249.938 l 432 342.434 l 512.113 296.211
 l 535.875 207.41 l 535.871 207.406 l 538.102 199.125 544.582 192.66 552.867
 190.449 c 561.156 188.238 569.992 190.617 576.051 196.691 c 582.109 202.762
 584.469 211.605 582.238 219.887 c 570.863 262.223 l 624.625 231.215 l 632.043
 226.996 641.148 227.035 648.531 231.32 c 655.914 235.605 660.469 243.488
 660.484 252.027 c 660.504 260.562 655.988 268.465 648.625 272.785 c 594.863
 303.793 l 637.297 315.168 l 645.578 317.398 652.043 323.875 654.254 332.164
 c 656.465 340.453 654.086 349.289 648.016 355.348 c 641.941 361.406 633.098
 363.766 624.816 361.535 c 536.113 337.773 l 456 384 l 536.113 430.223 l
 624.867 406.461 l 624.863 406.465 l 631.051 404.699 637.691 405.496 643.285
 408.668 c 648.883 411.844 652.973 417.133 654.633 423.352 c 656.293 429.57
 655.387 436.191 652.117 441.734 c 648.848 447.277 643.492 451.277 637.246
 452.832 c 594.863 464.207 l 648.625 495.215 l 655.988 499.535 660.504 507.438
 660.484 515.973 c 660.469 524.512 655.914 532.395 648.531 536.68 c 641.148
 540.965 632.043 541.004 624.625 536.785 c 570.863 505.777 l 582.238 548.16
 l 584.004 554.348 583.211 560.984 580.035 566.582 c 576.859 572.18 571.57
 576.266 565.352 577.926 c 559.137 579.586 552.512 578.684 546.969 575.414
 c 541.426 572.145 537.43 566.789 535.871 560.543 c 512.16 471.84 l 432 
425.566 l 432 518.062 l 496.992 583.008 l 503.062 589.078 505.434 597.926
 503.211 606.219 c 500.988 614.512 494.512 620.988 486.219 623.211 c 477.926
 625.434 469.078 623.062 463.008 616.992 c 432 585.938 l 432 648 l 432 656.574
 427.426 664.496 420 668.785 c 412.574 673.07 403.426 673.07 396 668.785
 c 388.574 664.496 384 656.574 384 648 c 384 120 l 384 113.637 386.527 107.531
 391.031 103.031 c 395.531 98.527 401.637 96 408 96 c f
Q Q
showpage
%%Trailer
%%EOF
