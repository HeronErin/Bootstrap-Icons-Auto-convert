%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
45 33 m 45 31.344 43.656 30 42 30 c 40.344 30 39 31.344 39 33 c 39 36.805
 l 35.707 34.902 l 35.016 34.496 34.195 34.387 33.422 34.59 c 32.648 34.793
 31.992 35.297 31.59 35.988 c 31.191 36.684 31.086 37.504 31.293 38.277 
c 31.504 39.047 32.012 39.703 32.707 40.098 c 36 42 l 32.707 43.902 l 32.012
 44.297 31.504 44.953 31.293 45.723 c 31.086 46.496 31.191 47.316 31.59 
48.012 c 31.992 48.703 32.648 49.207 33.422 49.41 c 34.195 49.613 35.016
 49.504 35.707 49.098 c 39 47.195 l 39 51 l 39 52.656 40.344 54 42 54 c 
43.656 54 45 52.656 45 51 c 45 47.195 l 48.293 49.098 l 48.984 49.504 49.805
 49.613 50.578 49.41 c 51.352 49.207 52.008 48.703 52.41 48.012 c 52.809
 47.316 52.914 46.496 52.707 45.723 c 52.496 44.953 51.988 44.297 51.293
 43.902 c 48 42 l 51.293 40.098 l 51.988 39.703 52.496 39.047 52.707 38.277
 c 52.914 37.504 52.809 36.684 52.41 35.988 c 52.008 35.297 51.352 34.793
 50.578 34.59 c 49.805 34.387 48.984 34.496 48.293 34.902 c 45 36.805 l 
h
33 60 m 31.344 60 30 61.344 30 63 c 30 64.656 31.344 66 33 66 c 63 66 l
 64.656 66 66 64.656 66 63 c 66 61.344 64.656 60 63 60 c h
33 72 m 31.344 72 30 73.344 30 75 c 30 76.656 31.344 78 33 78 c 63 78 l
 64.656 78 66 76.656 66 75 c 66 73.344 64.656 72 63 72 c h
33 72 m f
84 84 m 84 27 l 57 0 l 24 0 l 17.371 0 12 5.371 12 12 c 12 84 l 12 87.184
 13.266 90.234 15.516 92.484 c 17.766 94.734 20.816 96 24 96 c 72 96 l 75.184
 96 78.234 94.734 80.484 92.484 c 82.734 90.234 84 87.184 84 84 c 57 18 
m 57 22.969 61.031 27 66 27 c 78 27 l 78 84 l 78 85.59 77.367 87.117 76.242
 88.242 c 75.117 89.367 73.59 90 72 90 c 24 90 l 20.688 90 18 87.312 18 
84 c 18 12 l 18 8.688 20.688 6 24 6 c 57 6 l h
57 18 m f
Q Q
showpage
%%Trailer
%%EOF
