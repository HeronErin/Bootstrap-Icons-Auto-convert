%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
180 132 m 180 125.371 174.629 120 168 120 c 161.371 120 156 125.371 156
 132 c 156 147.215 l 142.824 139.605 l 142.824 139.609 l 140.066 137.992
 136.777 137.543 133.688 138.359 c 130.598 139.176 127.961 141.191 126.363
 143.961 c 124.766 146.727 124.336 150.02 125.176 153.105 c 126.012 156.188
 128.047 158.812 130.824 160.391 c 144 168 l 130.824 175.609 l 128.047 177.188
 126.012 179.812 125.176 182.895 c 124.336 185.98 124.766 189.273 126.363
 192.039 c 127.961 194.809 130.598 196.824 133.688 197.641 c 136.777 198.457
 140.066 198.008 142.824 196.391 c 156 188.781 l 156 204 l 156 210.629 161.371
 216 168 216 c 174.629 216 180 210.629 180 204 c 180 188.785 l 193.176 196.395
 l 193.176 196.391 l 195.934 198.008 199.223 198.457 202.312 197.641 c 205.402
 196.824 208.039 194.809 209.637 192.039 c 211.234 189.273 211.664 185.98
 210.824 182.895 c 209.988 179.812 207.953 177.188 205.176 175.609 c 192
 168 l 205.176 160.391 l 207.953 158.812 209.988 156.188 210.824 153.105
 c 211.664 150.02 211.234 146.727 209.637 143.961 c 208.039 141.191 205.402
 139.176 202.312 138.359 c 199.223 137.543 195.934 137.992 193.176 139.609
 c 180 147.219 l h
132 240 m 125.371 240 120 245.371 120 252 c 120 258.629 125.371 264 132
 264 c 252 264 l 258.629 264 264 258.629 264 252 c 264 245.371 258.629 240
 252 240 c h
132 288 m 125.371 288 120 293.371 120 300 c 120 306.629 125.371 312 132
 312 c 252 312 l 258.629 312 264 306.629 264 300 c 264 293.371 258.629 288
 252 288 c h
132 288 m f
336 336 m 336 108 l 228 0 l 96 0 l 83.27 0 71.062 5.059 62.059 14.059 c
 53.059 23.062 48 35.27 48 48 c 48 336 l 48 348.73 53.059 360.938 62.059
 369.941 c 71.062 378.941 83.27 384 96 384 c 288 384 l 300.73 384 312.938
 378.941 321.941 369.941 c 330.941 360.938 336 348.73 336 336 c 228 72 m
 228 81.547 231.793 90.703 238.543 97.457 c 245.297 104.207 254.453 108 
264 108 c 312 108 l 312 336 l 312 342.363 309.473 348.469 304.969 352.969
 c 300.469 357.473 294.363 360 288 360 c 96 360 l 89.637 360 83.531 357.473
 79.031 352.969 c 74.527 348.469 72 342.363 72 336 c 72 48 l 72 41.637 74.527
 35.531 79.031 31.031 c 83.531 26.527 89.637 24 96 24 c 228 24 l h
228 72 m f
Q Q
showpage
%%Trailer
%%EOF
