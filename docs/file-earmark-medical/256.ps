%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
90 66 m 90 62.688 87.312 60 84 60 c 80.688 60 78 62.688 78 66 c 78 73.609
 l 71.41 69.805 l 70.035 68.996 68.391 68.77 66.844 69.18 c 65.297 69.59
 63.98 70.598 63.18 71.98 c 62.383 73.363 62.168 75.012 62.586 76.551 c 
63.008 78.094 64.023 79.406 65.41 80.195 c 72 84 l 65.41 87.805 l 64.023
 88.594 63.008 89.906 62.586 91.449 c 62.168 92.988 62.383 94.637 63.18 
96.02 c 63.98 97.402 65.297 98.41 66.844 98.82 c 68.391 99.23 70.035 99.004
 71.41 98.195 c 78 94.391 l 78 102 l 78 105.312 80.688 108 84 108 c 87.312
 108 90 105.312 90 102 c 90 94.391 l 96.59 98.195 l 97.965 99.004 99.609
 99.23 101.156 98.82 c 102.703 98.41 104.02 97.402 104.82 96.02 c 105.617
 94.637 105.832 92.988 105.414 91.449 c 104.992 89.906 103.977 88.594 102.59
 87.805 c 96 84 l 102.59 80.195 l 103.977 79.406 104.992 78.094 105.414 
76.551 c 105.832 75.012 105.617 73.363 104.82 71.98 c 104.02 70.598 102.703
 69.59 101.156 69.18 c 99.609 68.77 97.965 68.996 96.59 69.805 c 90 73.609
 l h
66 120 m 62.688 120 60 122.688 60 126 c 60 129.312 62.688 132 66 132 c 
126 132 l 129.312 132 132 129.312 132 126 c 132 122.688 129.312 120 126 
120 c h
66 144 m 62.688 144 60 146.688 60 150 c 60 153.312 62.688 156 66 156 c 
126 156 l 129.312 156 132 153.312 132 150 c 132 146.688 129.312 144 126 
144 c h
66 144 m f
168 168 m 168 54 l 114 0 l 48 0 l 41.637 0 35.531 2.527 31.031 7.031 c 
26.527 11.531 24 17.637 24 24 c 24 168 l 24 174.363 26.527 180.469 31.031
 184.969 c 35.531 189.473 41.637 192 48 192 c 144 192 l 150.363 192 156.469
 189.473 160.969 184.969 c 165.473 180.469 168 174.363 168 168 c 114 36 
m 114 40.773 115.895 45.352 119.273 48.727 c 122.648 52.105 127.227 54 132
 54 c 156 54 l 156 168 l 156 171.184 154.734 174.234 152.484 176.484 c 150.234
 178.734 147.184 180 144 180 c 48 180 l 41.371 180 36 174.629 36 168 c 36
 24 l 36 17.371 41.371 12 48 12 c 114 12 l h
114 36 m f
Q Q
showpage
%%Trailer
%%EOF
