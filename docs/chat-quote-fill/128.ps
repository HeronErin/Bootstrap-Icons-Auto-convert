%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
96 48 m 96 71.195 74.508 90 48 90 c 43.246 90.012 38.512 89.395 33.918 
88.164 c 30.414 89.941 22.367 93.348 8.832 95.566 c 7.633 95.758 6.719 94.512
 7.195 93.395 c 9.32 88.379 11.238 81.695 11.816 75.598 c 4.465 68.219 0
 58.559 0 48 c 0 24.805 21.492 6 48 6 c 74.508 6 96 24.805 96 48 c 43.164
 40.598 m 42.77 40.008 42.312 39.461 41.801 38.965 c 40.996 38.141 40.043
 37.48 38.988 37.02 c 38.941 36.996 l 37.52 36.34 35.969 36 34.402 36 c 
28.656 36 24 40.477 24 46.004 c 24 51.523 28.656 56 34.402 56 c 36.461 56
 38.375 55.43 39.988 54.441 c 39.168 56.777 37.648 59.266 35.129 61.762 
c 35.129 61.758 l 34.648 62.227 34.387 62.871 34.398 63.543 c 34.41 64.211
 34.699 64.848 35.195 65.297 c 36.234 66.258 37.879 66.227 38.879 65.238
 c 46.883 57.266 47.098 48.691 44.523 43.004 c 44.527 43.004 l 44.148 42.16
 43.691 41.359 43.164 40.602 c h
66 54.438 m 65.184 56.773 63.66 59.262 61.141 61.758 c 60.66 62.227 60.398
 62.875 60.41 63.543 c 60.426 64.215 60.715 64.848 61.211 65.297 c 62.242
 66.258 63.887 66.227 64.891 65.238 c 72.895 57.266 73.109 48.691 70.543
 43.004 c 70.16 42.16 69.703 41.359 69.176 40.602 c 68.777 40.012 68.32 
39.461 67.812 38.965 c 67.008 38.141 66.051 37.48 64.996 37.02 c 64.949 
36.996 l 63.531 36.34 61.984 36 60.422 36 c 54.68 36 50.02 40.477 50.02 
46.004 c 50.02 51.523 54.68 56 60.422 56 c 62.48 56 64.395 55.43 66.008 
54.441 c h
66 54.438 m f
Q Q
showpage
%%Trailer
%%EOF
