%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 1 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 1 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 1 384 359 rectclip
1 0 0 -1 0 384 cm q
0 g
384 192 m 384 284.785 298.031 360 192 360 c 172.984 360.043 154.043 357.574
 135.672 352.656 c 121.656 359.762 89.473 373.391 35.328 382.273 c 30.527
 383.043 26.879 378.051 28.777 373.586 c 37.273 353.523 44.953 326.785 47.258
 302.402 c 17.855 272.879 0 234.238 0 192 c 0 99.215 85.969 24 192 24 c 
298.031 24 384 99.215 384 192 c 172.656 162.383 m 171.074 160.023 169.246
 157.836 167.207 155.855 c 163.988 152.566 160.168 149.93 155.953 148.078
 c 155.762 147.98 l 155.762 147.984 l 150.074 145.355 143.883 143.996 137.617
 144 c 114.625 144 96 161.902 96 184.008 c 96 206.086 114.625 223.992 137.617
 223.992 c 145.848 223.992 153.504 221.711 159.961 217.754 c 156.672 227.09
 150.602 237.051 140.52 247.035 c 140.52 247.031 l 138.602 248.906 137.539
 251.488 137.59 254.168 c 137.641 256.852 138.797 259.391 140.785 261.191
 c 144.938 265.031 151.512 264.91 155.52 260.953 c 187.535 229.059 188.398
 194.762 178.105 172.008 c 176.586 168.648 174.762 165.434 172.656 162.406
 c h
264 217.754 m 260.734 227.09 254.641 237.051 244.559 247.035 c 244.559 
247.031 l 242.645 248.91 241.59 251.492 241.645 254.176 c 241.699 256.855
 242.855 259.395 244.848 261.191 c 248.977 265.031 255.551 264.91 259.559
 260.953 c 291.574 229.059 292.438 194.762 282.168 172.008 c 280.645 168.648
 278.812 165.434 276.695 162.406 c 275.113 160.039 273.289 157.844 271.246
 155.855 c 268.027 152.566 264.207 149.93 259.992 148.078 c 259.801 147.98
 l 259.801 147.984 l 254.121 145.359 247.938 144 241.68 144 c 218.711 144
 200.062 161.902 200.062 184.008 c 200.062 206.086 218.711 223.992 241.68
 223.992 c 249.91 223.992 257.566 221.711 264.023 217.754 c h
264 217.754 m f
Q Q
showpage
%%Trailer
%%EOF
