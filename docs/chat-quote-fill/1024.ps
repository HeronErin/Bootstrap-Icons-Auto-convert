%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 3 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 3 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 3 768 717 rectclip
1 0 0 -1 0 768 cm q
0 g
768 384 m 768 569.566 596.062 720 384 720 c 345.965 720.086 308.086 715.145
 271.344 705.312 c 243.312 719.52 178.945 746.785 70.656 764.543 c 61.055
 766.078 53.762 756.094 57.551 747.168 c 74.543 707.039 89.902 653.566 94.512
 604.801 c 35.711 545.762 0 468.48 0 384 c 0 198.434 171.938 48 384 48 c
 596.062 48 768 198.434 768 384 c 345.312 324.77 m 342.145 320.047 338.492
 315.672 334.414 311.711 c 327.977 305.137 320.332 299.855 311.902 296.16
 c 311.52 295.969 l 300.145 290.711 287.762 287.992 275.23 288 c 229.246
 288 192 323.809 192 368.016 c 192 412.176 229.246 447.984 275.23 447.984
 c 291.695 447.984 307.008 443.426 319.918 435.504 c 313.344 454.176 301.199
 474.098 281.039 494.062 c 277.203 497.809 275.082 502.977 275.184 508.34
 c 275.281 513.699 277.594 518.785 281.566 522.383 c 289.871 530.062 303.023
 529.824 311.039 521.902 c 375.07 458.109 376.801 389.52 356.207 344.016
 c 353.172 337.293 349.527 330.867 345.312 324.816 c h
528 435.504 m 521.473 454.176 509.281 474.098 489.121 494.062 c 485.289
 497.816 483.176 502.984 483.285 508.348 c 483.395 513.711 485.715 518.789
 489.695 522.383 c 497.953 530.062 511.102 529.824 519.121 521.902 c 583.152
 458.109 584.883 389.52 564.336 344.016 c 561.285 337.293 557.621 330.867
 553.391 324.816 c 550.227 320.078 546.574 315.688 542.496 311.711 c 536.055
 305.137 528.414 299.855 519.984 296.16 c 519.602 295.969 l 508.238 290.719
 495.875 288 483.359 288 c 437.422 288 400.129 323.809 400.129 368.016 c
 400.129 412.176 437.426 447.984 483.359 447.984 c 499.824 447.984 515.137
 443.426 528.047 435.504 c h
528 435.504 m f
Q Q
showpage
%%Trailer
%%EOF
