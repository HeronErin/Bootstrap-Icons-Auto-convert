%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
12 6 m 12 8.898 9.312 11.25 6 11.25 c 5.406 11.25 4.812 11.176 4.238 11.02
 c 3.801 11.242 2.793 11.668 1.102 11.945 c 0.953 11.969 0.836 11.812 0.898
 11.672 c 1.164 11.043 1.402 10.211 1.477 9.449 c 0.559 8.527 0 7.32 0 6
 c 0 3.102 2.688 0.75 6 0.75 c 9.312 0.75 12 3.102 12 6 c 5.395 5.074 m 
5.348 5 5.289 4.934 5.227 4.871 c 5.125 4.77 5.004 4.684 4.875 4.629 c 4.867
 4.625 l 4.691 4.543 4.496 4.5 4.301 4.5 c 3.582 4.5 3 5.059 3 5.75 c 3 
6.441 3.582 7 4.301 7 c 4.559 7 4.797 6.93 5 6.805 c 4.898 7.098 4.707 7.406
 4.391 7.719 c 4.332 7.777 4.297 7.859 4.301 7.941 c 4.301 8.027 4.336 8.105
 4.398 8.164 c 4.527 8.285 4.734 8.281 4.859 8.156 c 5.859 7.16 5.887 6.086
 5.566 5.375 c 5.52 5.27 5.461 5.168 5.395 5.074 c h
8.25 6.805 m 8.148 7.098 7.957 7.406 7.641 7.719 c 7.582 7.777 7.551 7.859
 7.551 7.941 c 7.555 8.027 7.59 8.105 7.652 8.164 c 7.781 8.285 7.988 8.281
 8.113 8.156 c 9.113 7.16 9.141 6.086 8.82 5.375 c 8.816 5.375 l 8.77 5.27
 8.711 5.168 8.648 5.074 c 8.598 5 8.539 4.934 8.477 4.871 c 8.375 4.77 
8.258 4.684 8.125 4.629 c 8.117 4.625 l 7.941 4.543 7.746 4.5 7.551 4.5 
c 6.832 4.5 6.25 5.059 6.25 5.75 c 6.25 6.441 6.832 7 7.551 7 c 7.809 7 
8.047 6.93 8.25 6.805 c h
8.25 6.805 m f
Q Q
showpage
%%Trailer
%%EOF
