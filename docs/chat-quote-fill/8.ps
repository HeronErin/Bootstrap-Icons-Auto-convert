%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
6 3 m 6 4.449 4.656 5.625 3 5.625 c 2.703 5.625 2.406 5.586 2.121 5.512
 c 1.902 5.621 1.398 5.836 0.555 5.973 c 0.48 5.984 0.422 5.906 0.453 5.836
 c 0.586 5.523 0.707 5.105 0.742 4.723 c 0.277 4.266 0 3.66 0 3 c 0 1.551
 1.344 0.375 3 0.375 c 4.656 0.375 6 1.551 6 3 c 2.699 2.539 m 2.672 2.5
 2.645 2.465 2.613 2.434 c 2.562 2.383 2.504 2.344 2.438 2.312 c 2.434 2.312
 l 2.344 2.27 2.25 2.25 2.148 2.25 c 1.789 2.25 1.5 2.531 1.5 2.875 c 1.5
 3.219 1.789 3.5 2.148 3.5 c 2.277 3.5 2.398 3.465 2.496 3.402 c 2.445 3.547
 2.352 3.703 2.191 3.859 c 2.195 3.859 l 2.133 3.922 2.137 4.023 2.199 4.082
 c 2.266 4.141 2.367 4.141 2.43 4.078 c 2.93 3.578 2.945 3.043 2.781 2.688
 c 2.758 2.637 2.73 2.586 2.699 2.539 c h
4.125 3.402 m 4.074 3.547 3.98 3.703 3.82 3.859 c 3.758 3.922 3.762 4.023
 3.824 4.082 c 3.891 4.141 3.992 4.141 4.055 4.078 c 4.555 3.578 4.57 3.043
 4.406 2.688 c 4.41 2.688 l 4.387 2.637 4.355 2.586 4.324 2.539 c 4.297 
2.5 4.27 2.465 4.238 2.434 c 4.188 2.383 4.129 2.344 4.062 2.312 c 4.059
 2.312 l 3.969 2.27 3.875 2.25 3.777 2.25 c 3.418 2.25 3.129 2.531 3.129
 2.875 c 3.129 3.219 3.422 3.5 3.777 3.5 c 3.906 3.5 4.027 3.465 4.125 3.402
 c h
4.125 3.402 m f
Q Q
showpage
%%Trailer
%%EOF
