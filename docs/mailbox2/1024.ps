%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 528 rectclip
1 0 0 -1 0 768 cm q
0 g
432 408 m 566.062 408 l 607.008 448.992 l 611.52 453.492 617.629 456.012
 624 456 c 672 456 l 678.363 456 684.469 453.473 688.969 448.969 c 693.473
 444.469 696 438.363 696 432 c 696 384 l 696 377.637 693.473 371.531 688.969
 367.031 c 684.469 362.527 678.363 360 672 360 c 432 360 l h
432 408 m f
576 144 m 192 144 l 141.078 144 92.242 164.227 56.234 200.234 c 20.227 
236.242 0 285.078 0 336 c 0 624 l 0 636.73 5.059 648.938 14.059 657.941 
c 23.062 666.941 35.27 672 48 672 c 720 672 l 732.73 672 744.938 666.941
 753.941 657.941 c 762.941 648.938 768 636.73 768 624 c 768 336 l 768 302.297
 759.129 269.188 742.277 240 c 725.426 210.812 701.188 186.574 672 169.723
 c 642.812 152.871 609.703 144 576 144 c 384 336 m 384 308.762 378.207 281.832
 367 257.004 c 355.797 232.18 339.438 210.02 319.008 192 c 576 192 l 614.191
 192 650.816 207.172 677.824 234.176 c 704.828 261.184 720 297.809 720 336
 c 720 624 l 384 624 l h
220.078 343.535 m 212.16 340.176 202.465 336 192 336 c 181.535 336 171.84
 340.129 163.922 343.535 c 151.871 348.672 144 352.031 144 336 c 144 318.852
 153.148 303.004 168 294.43 c 182.852 285.855 201.148 285.855 216 294.43
 c 230.852 303.004 240 318.852 240 336 c 240 352.031 232.129 348.672 220.078
 343.535 c f
Q Q
showpage
%%Trailer
%%EOF
