%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1056 rectclip
1 0 0 -1 0 1536 cm q
0 g
864 816 m 1132.129 816 l 1214.016 897.984 l 1223.035 906.98 1235.262 912.023
 1248 912 c 1344 912 l 1356.73 912 1368.938 906.941 1377.941 897.941 c 1386.941
 888.938 1392 876.73 1392 864 c 1392 768 l 1392 755.27 1386.941 743.062 
1377.941 734.059 c 1368.938 725.059 1356.73 720 1344 720 c 864 720 l h
864 816 m f
1152 288 m 384 288 l 282.156 288 184.484 328.457 112.473 400.473 c 40.457
 472.484 0 570.156 0 672 c 0 1248 l 0 1273.461 10.113 1297.879 28.117 1315.883
 c 46.121 1333.887 70.539 1344 96 1344 c 1440 1344 l 1465.461 1344 1489.879
 1333.887 1507.883 1315.883 c 1525.887 1297.879 1536 1273.461 1536 1248 
c 1536 672 l 1536 604.594 1518.258 538.375 1484.555 480 c 1450.852 421.625
 1402.375 373.148 1344 339.445 c 1285.625 305.742 1219.406 288 1152 288 
c 768 672 m 768.004 617.523 756.414 563.668 734.004 514.012 c 711.594 464.355
 678.871 420.039 638.016 384 c 1152 384 l 1228.383 384 1301.637 414.344 
1355.648 468.352 c 1409.656 522.363 1440 595.617 1440 672 c 1440 1248 l 
768 1248 l h
440.16 687.07 m 424.32 680.352 404.93 672 384 672 c 363.07 672 343.68 680.258
 327.84 687.07 c 303.742 697.344 288 704.062 288 672 c 288 637.703 306.297
 606.012 336 588.863 c 365.703 571.711 402.297 571.711 432 588.863 c 461.703
 606.012 480 637.703 480 672 c 480 704.062 464.258 697.344 440.16 687.07
 c f
Q Q
showpage
%%Trailer
%%EOF
