%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 10 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 10 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
5.742 4.684 m 5.824 4.438 6.176 4.438 6.258 4.684 c 6.742 6.137 l 6.957
 6.785 7.465 7.293 8.113 7.508 c 9.566 7.992 l 9.812 8.074 9.812 8.426 9.566
 8.508 c 8.113 8.992 l 7.465 9.207 6.957 9.715 6.742 10.363 c 6.258 11.816
 l 6.223 11.926 6.117 12 6 12 c 5.883 12 5.777 11.926 5.742 11.816 c 5.258
 10.363 l 5.043 9.715 4.535 9.207 3.887 8.992 c 2.434 8.508 l 2.324 8.473
 2.25 8.367 2.25 8.25 c 2.25 8.133 2.324 8.027 2.434 7.992 c 3.887 7.508
 l 4.535 7.293 5.043 6.785 5.258 6.137 c h
2.844 0.859 m 2.895 0.711 3.105 0.711 3.156 0.859 c 3.445 1.73 l 3.574 
2.117 3.879 2.422 4.27 2.555 c 5.141 2.844 l 5.289 2.895 5.289 3.105 5.141
 3.156 c 4.27 3.445 l 4.266 3.445 l 3.879 3.574 3.574 3.879 3.445 4.266 
c 3.156 5.137 l 3.156 5.141 l 3.105 5.289 2.895 5.289 2.844 5.141 c 2.555
 4.266 l 2.426 3.879 2.121 3.574 1.734 3.445 c 0.863 3.156 l 0.859 3.156
 l 0.711 3.105 0.711 2.895 0.859 2.844 c 1.73 2.555 l 1.734 2.555 l 2.121
 2.426 2.426 2.121 2.555 1.734 c h
8.148 0.074 m 8.18 -0.023 8.32 -0.023 8.352 0.074 c 8.547 0.656 l 8.633
 0.914 8.836 1.117 9.098 1.207 c 9.68 1.402 l 9.676 1.398 l 9.773 1.43 9.773
 1.57 9.676 1.602 c 9.094 1.797 l 8.836 1.883 8.633 2.086 8.547 2.344 c 
8.352 2.926 l 8.32 3.023 8.18 3.023 8.148 2.926 c 7.953 2.344 l 7.867 2.086
 7.664 1.883 7.406 1.797 c 6.824 1.602 l 6.727 1.57 6.727 1.43 6.824 1.398
 c 7.406 1.203 l 7.664 1.117 7.867 0.914 7.957 0.652 c h
8.148 0.074 m f
Q Q
showpage
%%Trailer
%%EOF
