%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 11 0 157 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 11 0 157 192
192 192 cairo_set_page_size
%%EndPageSetup
q 11 0 146 192 rectclip
1 0 0 -1 0 192 cm q
0 g
91.883 74.965 m 93.203 71.004 98.793 71.004 100.113 74.965 c 107.852 98.207
 l 107.855 98.207 l 111.309 108.566 119.441 116.695 129.805 120.145 c 153.035
 127.883 l 156.996 129.203 156.996 134.793 153.035 136.113 c 129.793 143.852
 l 129.793 143.855 l 119.434 147.309 111.305 155.441 107.855 165.805 c 100.117
 189.035 l 99.531 190.816 97.871 192.016 96 192.016 c 94.129 192.016 92.469
 190.816 91.883 189.035 c 84.145 165.793 l 80.691 155.434 72.566 147.309
 62.207 143.855 c 38.965 136.117 l 37.184 135.531 35.984 133.871 35.984 
132 c 35.984 130.129 37.184 128.469 38.965 127.883 c 62.207 120.145 l 72.566
 116.691 80.691 108.566 84.145 98.207 c h
45.527 13.777 m 45.883 12.711 46.879 11.992 48 11.992 c 49.121 11.992 50.117
 12.711 50.473 13.777 c 55.117 27.723 l 57.191 33.938 62.066 38.812 68.281
 40.887 c 82.227 45.531 l 82.223 45.527 l 83.289 45.883 84.008 46.879 84.008
 48 c 84.008 49.121 83.289 50.117 82.223 50.473 c 68.277 55.117 l 68.281
 55.117 l 62.059 57.18 57.18 62.059 55.117 68.281 c 50.473 82.227 l 50.473
 82.223 l 50.117 83.289 49.121 84.008 48 84.008 c 46.879 84.008 45.883 83.289
 45.527 82.223 c 40.883 68.281 l 38.82 62.059 33.941 57.18 27.719 55.117
 c 13.773 50.473 l 13.777 50.473 l 12.711 50.117 11.992 49.121 11.992 48
 c 11.992 46.879 12.711 45.883 13.777 45.527 c 27.723 40.883 l 27.719 40.883
 l 33.941 38.82 38.82 33.941 40.883 27.719 c h
130.355 1.188 m 130.598 0.488 131.258 0.02 132 0.02 c 132.742 0.02 133.402
 0.488 133.645 1.188 c 136.742 10.477 l 138.121 14.629 141.375 17.879 145.527
 19.262 c 154.816 22.359 l 154.812 22.355 l 155.512 22.598 155.98 23.258
 155.98 24 c 155.98 24.742 155.512 25.402 154.812 25.645 c 145.523 28.742
 l 145.523 28.738 l 141.379 30.125 138.125 33.379 136.738 37.523 c 133.641
 46.812 l 133.645 46.812 l 133.402 47.512 132.742 47.98 132 47.98 c 131.258
 47.98 130.598 47.512 130.355 46.812 c 127.258 37.523 l 127.262 37.523 l
 125.875 33.379 122.621 30.125 118.477 28.738 c 109.199 25.645 l 108.5 25.402
 108.031 24.742 108.031 24 c 108.031 23.258 108.5 22.598 109.199 22.355 
c 118.488 19.258 l 122.641 17.879 125.891 14.625 127.273 10.473 c h
130.355 1.188 m f
Q Q
showpage
%%Trailer
%%EOF
