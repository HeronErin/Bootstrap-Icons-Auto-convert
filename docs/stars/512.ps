%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 23 0 313 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 23 0 313 384
384 384 cairo_set_page_size
%%EndPageSetup
q 23 0 290 384 rectclip
1 0 0 -1 0 384 cm q
0 g
183.77 149.93 m 186.41 142.008 197.594 142.008 200.234 149.93 c 215.715
 196.418 l 215.711 196.414 l 222.621 217.137 238.883 233.391 259.609 240.289
 c 306.074 255.77 l 313.996 258.41 313.996 269.594 306.074 272.234 c 259.586
 287.715 l 259.586 287.711 l 238.863 294.621 222.609 310.883 215.711 331.609
 c 200.23 378.074 l 200.23 378.07 l 199.066 381.629 195.742 384.035 192 
384.035 c 188.258 384.035 184.934 381.629 183.77 378.07 c 168.289 331.582
 l 168.289 331.586 l 161.383 310.871 145.129 294.617 124.414 287.711 c 77.926
 272.23 l 77.93 272.23 l 74.371 271.066 71.965 267.742 71.965 264 c 71.965
 260.258 74.371 256.934 77.93 255.77 c 124.418 240.289 l 124.414 240.289
 l 145.129 233.383 161.383 217.129 168.289 196.414 c h
91.055 27.551 m 91.762 25.422 93.754 23.98 96 23.98 c 98.246 23.98 100.238
 25.422 100.945 27.551 c 110.234 55.438 l 114.387 67.871 124.129 77.613 
136.562 81.766 c 164.449 91.055 l 166.578 91.762 168.02 93.754 168.02 96
 c 168.02 98.246 166.578 100.238 164.449 100.945 c 136.562 110.234 l 136.559
 110.23 l 124.121 114.359 114.359 124.121 110.23 136.559 c 100.941 164.445
 l 100.945 164.449 l 100.238 166.578 98.246 168.02 96 168.02 c 93.754 168.02
 91.762 166.578 91.055 164.449 c 81.77 136.559 l 77.641 124.121 67.879 114.359
 55.441 110.23 c 27.555 100.941 l 27.551 100.945 l 25.422 100.238 23.98 
98.246 23.98 96 c 23.98 93.754 25.422 91.762 27.551 91.055 c 55.438 81.766
 l 55.441 81.77 l 67.879 77.641 77.641 67.879 81.77 55.441 c h
260.711 2.375 m 261.199 0.977 262.516 0.035 264 0.035 c 265.484 0.035 266.801
 0.977 267.289 2.375 c 273.48 20.949 l 276.242 29.254 282.746 35.758 291.047
 38.516 c 309.621 44.707 l 309.625 44.711 l 311.023 45.199 311.965 46.516
 311.965 48 c 311.965 49.484 311.023 50.801 309.625 51.289 c 291.051 57.48
 l 291.047 57.48 l 282.758 60.254 276.254 66.758 273.48 75.047 c 267.289
 93.621 l 267.289 93.625 l 266.801 95.023 265.484 95.965 264 95.965 c 262.516
 95.965 261.199 95.023 260.711 93.625 c 254.52 75.051 l 254.52 75.047 l 
251.746 66.758 245.242 60.254 236.953 57.48 c 218.398 51.289 l 217 50.801
 216.059 49.484 216.059 48 c 216.059 46.516 217 45.199 218.398 44.711 c 
236.973 38.52 l 245.277 35.758 251.781 29.254 254.539 20.953 c h
260.711 2.375 m f
Q Q
showpage
%%Trailer
%%EOF
