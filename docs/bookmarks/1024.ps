%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
96 192 m 96 166.539 106.113 142.121 124.117 124.117 c 142.121 106.113 166.539
 96 192 96 c 480 96 l 505.461 96 529.879 106.113 547.883 124.117 c 565.887
 142.121 576 166.539 576 192 c 576 744 l 575.996 749.816 573.883 755.434
 570.047 759.809 c 566.215 764.18 560.926 767.012 555.16 767.777 c 549.395
 768.543 543.547 767.191 538.703 763.969 c 336 628.848 l 133.297 763.969
 l 128.453 767.191 122.605 768.543 116.84 767.777 c 111.074 767.012 105.785
 764.18 101.953 759.809 c 98.117 755.434 96.004 749.816 96 744 c h
192 144 m 179.27 144 167.062 149.059 158.059 158.059 c 149.059 167.062 
144 179.27 144 192 c 144 699.168 l 322.703 580.031 l 326.645 577.41 331.27
 576.012 336 576.012 c 340.73 576.012 345.355 577.41 349.297 580.031 c 528
 699.168 l 528 192 l 528 179.27 522.941 167.062 513.941 158.059 c 504.938
 149.059 492.73 144 480 144 c h
192 144 m f
204.863 48 m 576 48 l 588.73 48 600.938 53.059 609.941 62.059 c 618.941
 71.062 624 83.27 624 96 c 624 660.863 l 634.703 667.969 l 639.547 671.191
 645.395 672.543 651.16 671.777 c 656.926 671.012 662.215 668.18 666.047
 663.809 c 669.883 659.434 671.996 653.816 672 648 c 672 96 l 672 70.539
 661.887 46.121 643.883 28.117 c 625.879 10.113 601.461 0 576 0 c 288 0 
l 253.703 0 222.012 18.297 204.863 48 c f
Q Q
showpage
%%Trailer
%%EOF
