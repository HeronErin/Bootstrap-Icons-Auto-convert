%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
248.902 198.648 m 248.902 185.375 l 248.902 165.527 238.773 155.758 225.215
 155.758 c 211.488 155.758 201.453 165.527 201.453 185.375 c 201.453 198.648
 l 201.453 218.57 211.484 228.336 225.215 228.336 c 238.773 228.336 248.902
 218.543 248.902 198.648 c 310.965 192.887 m 322.078 192.887 328.605 186.359
 328.605 175.031 c 328.605 163.703 322.078 157.246 310.965 157.246 c 292.391
 157.246 l 292.391 192.887 l h
310.965 192.887 m f
117.434 0 m 114.254 0 111.207 1.262 108.961 3.504 c 3.504 108.961 l 1.262
 111.207 0 114.254 0 117.434 c 0 266.57 l 0 266.566 l 0 269.746 1.262 272.793
 3.504 275.039 c 108.961 380.496 l 111.207 382.738 114.254 384 117.434 384
 c 266.57 384 l 266.566 384 l 269.746 384 272.793 382.738 275.039 380.496
 c 380.496 275.039 l 382.738 272.793 384 269.746 384 266.566 c 384 117.434
 l 384 114.254 382.738 111.207 380.496 108.961 c 275.039 3.504 l 272.793
 1.262 269.746 0 266.566 0 c h
75.84 241.922 m 53.496 241.922 41.113 230.09 39.984 214.754 c 55.656 214.754
 l 57.215 223.059 65.16 228.746 77.039 228.746 c 89.613 228.746 96.961 222.844
 96.961 213.867 c 96.961 206.594 92.09 202.66 81.672 200.141 c 65.93 196.203
 l 51.289 192.676 42.457 183.965 42.457 170.332 c 42.457 153.387 56.785 
141.918 77.113 141.918 c 97.586 141.918 110.379 153.316 111.578 168.008 
c 96.098 168.008 l 94.562 160.328 87.648 155 76.969 155 c 65.641 155 58.488
 160.902 58.488 169.398 c 58.488 175.664 63.191 179.887 71.762 181.926 c
 87.457 185.789 l 103.609 189.727 112.898 197.477 112.898 212.43 c 112.898
 230.094 99.121 241.902 75.844 241.902 c h
158.086 157.684 m 158.09 240 l 142.129 240 l 142.129 157.68 l 114.07 157.68
 l 114.07 144 l 186.215 144 l 186.215 157.633 l 158.09 157.633 l h
265.078 185.523 m 265.078 198.578 l 265.078 225.723 249.812 241.898 225.215
 241.898 c 200.59 241.898 185.277 225.723 185.277 198.578 c 185.281 185.52
 l 185.281 158.254 200.594 142.152 225.219 142.152 c 249.844 142.152 265.059
 158.328 265.059 185.52 c h
276.48 144 m 313.32 144 l 333 144 344.906 157.199 344.906 175.008 c 344.906
 192.938 332.883 205.945 313.203 205.945 c 292.441 205.945 l 292.441 240
 l 276.48 240 l h
276.48 144 m f
Q Q
showpage
%%Trailer
%%EOF
