%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 1056 rectclip
1 0 0 -1 0 1536 cm q
0 g
734.016 494.016 m 743.02 484.988 755.25 479.914 768 479.914 c 780.75 479.914
 792.98 484.988 801.984 494.016 c 993.984 686.016 l 1006.125 698.156 1010.867
 715.855 1006.422 732.438 c 1001.98 749.023 989.023 761.98 972.438 766.422
 c 955.855 770.867 938.156 766.125 926.016 753.984 c 816 643.871 l 816 1008
 l 816 1025.148 806.852 1040.996 792 1049.57 c 777.148 1058.145 758.852 
1058.145 744 1049.57 c 729.148 1040.996 720 1025.148 720 1008 c 720 643.871
 l 609.984 753.984 l 597.844 766.125 580.145 770.867 563.562 766.422 c 546.977
 761.98 534.02 749.023 529.578 732.438 c 525.133 715.855 529.875 698.156
 542.016 686.016 c h
734.016 494.016 m f*
422.977 320.832 m 518.926 238.094 641.305 192.398 768 192 c 1026.238 192
 1240.609 384 1263.938 631.586 c 1416.77 653.184 1536 781.152 1536 938.207
 c 1536 1110.625 1392.191 1248 1217.953 1248 c 362.977 1248 l 163.969 1248
 0 1091.137 0 894.527 c 0 725.281 121.535 585.121 282.434 549.598 c 296.16
 466.75 349.441 384.191 422.977 320.828 c 485.664 393.5 m 412.992 456.188
 374.977 531.738 374.977 590.875 c 374.977 633.883 l 332.258 638.586 l 198.145
 653.281 96 763.391 96 894.527 c 96 1035.359 214.078 1152 362.977 1152 c
 1217.953 1152 l 1342.078 1152 1440 1054.848 1440 938.207 c 1440 821.473
 1342.078 724.32 1217.953 724.32 c 1169.953 724.32 l 1169.953 676.32 l 1170.047
 463.199 991.488 288 768 288 c 664.309 288.414 564.176 325.867 485.664 393.602
 c h
485.664 393.5 m f
Q Q
showpage
%%Trailer
%%EOF
