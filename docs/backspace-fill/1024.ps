%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 753 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 753 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 753 672 rectclip
1 0 0 -1 0 768 cm q
0 g
752.785 144 m 752.785 118.539 742.668 94.121 724.668 76.117 c 706.664 58.113
 682.246 48 656.785 48 c 316.945 48 l 288.914 47.988 262.281 60.227 244.031
 81.504 c 11.566 352.801 l 4.105 361.5 0.004 372.586 0.004 384.047 c 0.004
 395.512 4.105 406.594 11.566 415.297 c 244.031 686.496 l 262.281 707.773
 288.914 720.012 316.945 720 c 656.785 720 l 682.246 720 706.664 709.887
 724.668 691.883 c 742.668 673.879 752.785 649.461 752.785 624 c h
279.793 280.992 m 275.285 276.492 272.75 270.387 272.746 264.016 c 272.742
 257.648 275.27 251.539 279.77 247.031 c 284.27 242.527 290.375 239.992 
296.742 239.988 c 303.113 239.98 309.223 242.508 313.727 247.008 c 416.781
 350.062 l 519.789 247.008 l 519.793 247.008 l 525.863 240.945 534.707 238.582
 542.992 240.809 c 551.277 243.035 557.746 249.512 559.961 257.801 c 562.176
 266.09 559.797 274.93 553.727 280.992 c 450.719 384 l 553.727 487.008 l
 559.797 493.07 562.176 501.91 559.961 510.199 c 557.746 518.488 551.277
 524.965 542.992 527.191 c 534.707 529.418 525.863 527.055 519.793 520.992
 c 416.785 417.938 l 313.73 520.992 l 313.727 520.992 l 307.656 527.055 
298.812 529.418 290.527 527.191 c 282.242 524.965 275.773 518.488 273.559
 510.199 c 271.348 501.91 273.723 493.07 279.793 487.008 c 382.848 384 l
 h
279.793 280.992 m f
Q Q
showpage
%%Trailer
%%EOF
