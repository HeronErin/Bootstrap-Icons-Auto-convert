%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 24 m 0 17.637 2.527 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c
 744 0 l 750.363 0 756.469 2.527 760.969 7.031 c 765.473 11.531 768 17.637
 768 24 c 768 168 l 768 174.363 765.473 180.469 760.969 184.969 c 756.469
 189.473 750.363 192 744 192 c 672 192 l 672 288 l 744 288 l 750.363 288
 756.469 290.527 760.969 295.031 c 765.473 299.531 768 305.637 768 312 c
 768 456 l 768 462.363 765.473 468.469 760.969 472.969 c 756.469 477.473
 750.363 480 744 480 c 672 480 l 672 576 l 744 576 l 750.363 576 756.469
 578.527 760.969 583.031 c 765.473 587.531 768 593.637 768 600 c 768 744
 l 768 750.363 765.473 756.469 760.969 760.969 c 756.469 765.473 750.363
 768 744 768 c 24 768 l 17.637 768 11.531 765.473 7.031 760.969 c 2.527 
756.469 0 750.363 0 744 c 0 600 l 0 593.637 2.527 587.531 7.031 583.031 
c 11.531 578.527 17.637 576 24 576 c 96 576 l 96 480 l 24 480 l 17.637 480
 11.531 477.473 7.031 472.969 c 2.527 468.469 0 462.363 0 456 c 0 312 l 
0 305.637 2.527 299.531 7.031 295.031 c 11.531 290.527 17.637 288 24 288
 c 96 288 l 96 192 l 24 192 l 17.637 192 11.531 189.473 7.031 184.969 c 
2.527 180.469 0 174.363 0 168 c h
144 192 m 144 288 l 360 288 l 360 192 l h
408 192 m 408 288 l 624 288 l 624 192 l h
144 480 m 144 576 l 360 576 l 360 480 l h
408 480 m 408 576 l 624 576 l 624 480 l h
48 48 m 48 144 l 216 144 l 216 48 l h
264 48 m 264 144 l 504 144 l 504 48 l h
552 48 m 552 144 l 720 144 l 720 48 l h
48 336 m 48 432 l 216 432 l 216 336 l h
264 336 m 264 432 l 504 432 l 504 336 l h
552 336 m 552 432 l 720 432 l 720 336 l h
48 624 m 48 720 l 216 720 l 216 624 l h
264 624 m 264 720 l 504 720 l 504 624 l h
552 624 m 552 720 l 720 720 l 720 624 l h
552 624 m f
Q Q
showpage
%%Trailer
%%EOF
