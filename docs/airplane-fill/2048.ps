%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
617.09 110.496 m 643.969 56.734 692.449 0 768 0 c 843.551 0 892.031 56.832
 918.91 110.496 c 946.656 166.078 960 233.375 960 288 c 960 642.336 l 1456.32
 890.496 l 1480.258 902.449 1500.395 920.832 1514.469 943.59 c 1528.543 
966.344 1536 992.57 1536 1019.328 c 1536 1152 l 1535.992 1166.102 1529.785
 1179.488 1519.023 1188.605 c 1508.266 1197.719 1494.039 1201.641 1480.129
 1199.328 c 951.457 1111.199 l 915.457 1327.488 l 1041.984 1454.016 l 1051.008
 1463.02 1056.082 1475.242 1056.086 1487.988 c 1056.09 1500.734 1051.023
 1512.961 1042 1521.969 c 1032.98 1530.973 1020.746 1536.023 1008 1536 c
 528 1536 l 515.254 1536.023 503.02 1530.973 494 1521.969 c 484.977 1512.961
 479.91 1500.734 479.914 1487.988 c 479.918 1475.242 484.992 1463.02 494.016
 1454.016 c 620.641 1327.488 l 584.543 1111.199 l 55.871 1199.328 l 41.961
 1201.641 27.734 1197.719 16.977 1188.605 c 6.215 1179.488 0.008 1166.102
 0 1152 c 0 1019.328 l 0 992.57 7.457 966.344 21.531 943.59 c 35.605 920.832
 55.742 902.449 79.68 890.496 c 576 642.336 l 576 288 l 576 233.473 589.441
 165.984 617.09 110.496 c f
Q Q
showpage
%%Trailer
%%EOF
