%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
56.207 138.277 m 56.207 110.676 l 83.34 110.676 l 83.34 103.355 l 56.207
 103.355 l 56.207 81.613 l 85.773 81.613 l 85.773 74.293 l 48 74.293 l 48
 138.277 l h
95.758 138.277 m 103.871 138.277 l 103.871 107.762 l 103.871 101.113 106.594
 95.676 115.309 95.676 c 116.809 95.676 118.406 95.723 119.258 95.855 c 
119.258 88.5 l 118.246 88.355 117.227 88.273 116.207 88.262 c 109.223 88.262
 105.516 92.102 104.062 95.066 c 103.824 95.066 l 103.824 89.02 l 95.762
 89.016 l h
129.418 77.16 m 129.418 80.016 131.723 82.262 134.578 82.262 c 135.984 
82.328 137.355 81.816 138.371 80.848 c 139.387 79.879 139.965 78.535 139.965
 77.129 c 139.965 75.727 139.387 74.383 138.371 73.41 c 137.355 72.441 135.984
 71.934 134.578 72 c 133.207 71.988 131.887 72.527 130.918 73.496 c 129.945
 74.469 129.406 75.789 129.422 77.16 c 130.551 138.277 m 138.613 138.277
 l 138.613 89.016 l 130.551 89.016 l h
130.551 138.277 m f
42 0 m 43.59 0 45.117 0.633 46.242 1.758 c 47.367 2.883 48 4.41 48 6 c 
48 12 l 144 12 l 144 6 l 144 2.688 146.688 0 150 0 c 153.312 0 156 2.688
 156 6 c 156 12 l 168 12 l 174.363 12 180.469 14.527 184.969 19.031 c 189.473
 23.531 192 29.637 192 36 c 192 168 l 192 174.363 189.473 180.469 184.969
 184.969 c 180.469 189.473 174.363 192 168 192 c 24 192 l 17.637 192 11.531
 189.473 7.031 184.969 c 2.527 180.469 0 174.363 0 168 c 0 36 l 0 29.637
 2.527 23.531 7.031 19.031 c 11.531 14.527 17.637 12 24 12 c 36 12 l 36 
6 l 36 2.688 38.688 0 42 0 c 12 48 m 12 168 l 12 171.184 13.266 174.234 
15.516 176.484 c 17.766 178.734 20.816 180 24 180 c 168 180 l 171.184 180
 174.234 178.734 176.484 176.484 c 178.734 174.234 180 171.184 180 168 c
 180 48 l h
12 48 m f
Q Q
showpage
%%Trailer
%%EOF
