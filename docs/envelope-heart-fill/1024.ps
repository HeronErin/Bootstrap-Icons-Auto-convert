%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
2.398 170.641 m 7.238 149.438 19.137 130.504 36.141 116.941 c 53.145 103.383
 74.25 96 96 96 c 672 96 l 693.75 96 714.855 103.383 731.859 116.941 c 748.863
 130.504 760.762 149.438 765.602 170.641 c 564 293.906 l 561.551 288.867
 l 529.582 226.469 448.125 196.852 384 228.867 c 319.871 196.852 238.414
 226.469 206.449 288.867 c 204.051 293.906 l h
556.031 427.68 m 552.527 434.352 l 768 566.398 l 768 225.457 l 575.855 
342.914 l 577.152 369.891 570.719 398.738 556.031 427.73 c h
357.551 574.078 m 307.246 540.812 269.23 507.359 242.445 474.141 c 9.121
 617.09 l 16.91 633.535 29.211 647.43 44.594 657.148 c 59.973 666.871 77.805
 672.023 96 672 c 672 672 l 690.18 672.004 707.988 666.844 723.352 657.125
 c 738.715 647.402 751.004 633.52 758.785 617.09 c 525.602 474.145 l 498.77
 507.359 460.801 540.816 410.496 574.031 c 384 591.551 l 357.551 574.031
 l h
211.969 427.68 m 197.281 398.734 190.848 369.887 192.145 342.91 c 0 225.457
 l 0 566.449 l 215.52 434.352 l h
211.969 427.68 m f
384 287.664 m 463.871 205.535 663.602 349.25 384 534 c 104.398 349.199 
304.129 205.535 384 287.664 c f
Q Q
showpage
%%Trailer
%%EOF
