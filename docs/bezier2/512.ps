%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 24 360 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 24 360 360
384 384 cairo_set_page_size
%%EndPageSetup
q 24 24 336 336 rectclip
1 0 0 -1 0 384 cm q
0 g
24 60 m 24 50.453 27.793 41.297 34.543 34.543 c 41.297 27.793 50.453 24
 60 24 c 84 24 l 93.547 24 102.703 27.793 109.457 34.543 c 116.207 41.297
 120 50.453 120 60 c 219.215 60 l 222.762 53.855 228.848 49.598 235.832 
48.363 c 242.82 47.133 249.992 49.055 255.426 53.613 c 260.863 58.176 264
 64.906 264 72 c 264 79.094 260.863 85.824 255.426 90.387 c 249.992 94.945
 242.82 96.867 235.832 95.637 c 228.848 94.402 222.762 90.145 219.215 84
 c 170.977 84 l 175.281 88.32 179.152 93.16 182.594 98.52 c 197.902 122.328
 204 155.016 204 192 c 204 239.832 210.168 266.207 221.113 280.801 c 229.656
 292.227 242.594 298.105 264 299.617 c 264.102 290.137 267.938 281.078 274.68
 274.406 c 281.418 267.738 290.52 264 300 264 c 324 264 l 333.547 264 342.703
 267.793 349.457 274.543 c 356.207 281.297 360 290.453 360 300 c 360 324
 l 360 333.547 356.207 342.703 349.457 349.457 c 342.703 356.207 333.547
 360 324 360 c 300 360 l 290.453 360 281.297 356.207 274.543 349.457 c 267.793
 342.703 264 333.547 264 324 c 164.785 324 l 161.238 330.145 155.152 334.402
 148.168 335.637 c 141.18 336.867 134.008 334.945 128.574 330.387 c 123.137
 325.824 120 319.094 120 312 c 120 304.906 123.137 298.176 128.574 293.613
 c 134.008 289.055 141.18 287.133 148.168 288.363 c 155.152 289.598 161.238
 293.855 164.785 300 c 205.848 300 l 204.461 298.457 203.137 296.855 201.887
 295.199 c 185.832 273.77 180 240.168 180 192 c 180 156.961 174.098 129.672
 162.406 111.48 c 153.047 96.961 139.559 87.48 120 84.793 c 119.793 94.203
 115.91 103.156 109.18 109.738 c 102.449 116.316 93.414 120.004 84 120 c
 60 120 l 50.453 120 41.297 116.207 34.543 109.457 c 27.793 102.703 24 93.547
 24 84 c h
60 48 m 53.371 48 48 53.371 48 60 c 48 84 l 48 87.184 49.266 90.234 51.516
 92.484 c 53.766 94.734 56.816 96 60 96 c 84 96 l 87.184 96 90.234 94.734
 92.484 92.484 c 94.734 90.234 96 87.184 96 84 c 96 60 l 96 56.816 94.734
 53.766 92.484 51.516 c 90.234 49.266 87.184 48 84 48 c h
300 288 m 293.371 288 288 293.371 288 300 c 288 324 l 288 327.184 289.266
 330.234 291.516 332.484 c 293.766 334.734 296.816 336 300 336 c 324 336
 l 327.184 336 330.234 334.734 332.484 332.484 c 334.734 330.234 336 327.184
 336 324 c 336 300 l 336 296.816 334.734 293.766 332.484 291.516 c 330.234
 289.266 327.184 288 324 288 c h
300 288 m f*
Q Q
showpage
%%Trailer
%%EOF
