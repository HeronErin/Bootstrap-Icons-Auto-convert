%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
394.129 98.258 m 387.707 95.266 380.293 95.266 373.871 98.258 c 13.871 
266.258 l 8.188 268.91 3.77 273.68 1.559 279.551 c -0.648 285.422 -0.473
 291.926 2.055 297.668 c 4.578 303.406 9.254 307.934 15.07 310.273 c 375.07
 454.273 l 380.801 456.57 387.199 456.57 392.93 454.273 c 672 342.719 l 
672 624 l 659.27 624 647.062 629.059 638.059 638.059 c 629.059 647.062 624
 659.27 624 672 c 624 768 l 768 768 l 768 672 l 768 659.27 762.941 647.062
 753.941 638.059 c 744.938 629.059 732.73 624 720 624 c 720 323.473 l 752.93
 310.273 l 758.746 307.934 763.422 303.406 765.945 297.668 c 768.473 291.926
 768.648 285.422 766.441 279.551 c 764.23 273.68 759.812 268.91 754.129 
266.258 c h
394.129 98.258 m f
200.449 433.535 m 194.199 431.184 187.254 431.539 181.281 434.516 c 175.305
 437.496 170.84 442.828 168.961 449.23 c 144.961 530.832 l 143.277 536.562
 143.793 542.711 146.402 548.078 c 149.012 553.449 153.527 557.652 159.07
 559.871 c 375.07 646.27 l 375.07 646.273 l 380.801 648.57 387.199 648.57
 392.93 646.273 c 608.93 559.875 l 608.93 559.871 l 614.473 557.652 618.988
 553.449 621.598 548.078 c 624.207 542.711 624.723 536.562 623.039 530.832
 c 599.039 449.23 l 597.16 442.828 592.695 437.496 586.719 434.516 c 580.746
 431.539 573.801 431.184 567.551 433.535 c 384 502.367 l h
200.449 433.535 m f
Q Q
showpage
%%Trailer
%%EOF
