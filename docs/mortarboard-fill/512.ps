%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
197.062 49.129 m 193.852 47.633 190.148 47.633 186.938 49.129 c 6.938 133.129
 l 2.605 135.148 -0.113 139.551 0.016 144.328 c 0.145 149.109 3.102 153.352
 7.535 155.137 c 187.535 227.137 l 190.402 228.285 193.598 228.285 196.465
 227.137 c 336 171.359 l 336 312 l 329.637 312 323.531 314.527 319.031 319.031
 c 314.527 323.531 312 329.637 312 336 c 312 384 l 384 384 l 384 336 l 384
 329.637 381.473 323.531 376.969 319.031 c 372.469 314.527 366.363 312 360
 312 c 360 161.734 l 376.465 155.133 l 376.465 155.137 l 380.898 153.352
 383.855 149.109 383.984 144.328 c 384.113 139.551 381.395 135.148 377.062
 133.129 c h
197.062 49.129 m f
100.223 216.77 m 97.102 215.59 93.629 215.77 90.641 217.258 c 87.652 218.746
 85.422 221.414 84.48 224.617 c 72.48 265.418 l 72.48 265.414 l 70.738 271.352
 73.793 277.637 79.535 279.938 c 187.535 323.137 l 190.402 324.285 193.598
 324.285 196.465 323.137 c 304.465 279.938 l 310.207 277.637 313.262 271.352
 311.52 265.414 c 299.52 224.613 l 299.52 224.617 l 298.578 221.414 296.348
 218.746 293.359 217.258 c 290.371 215.77 286.898 215.59 283.777 216.77 
c 192 251.184 l h
100.223 216.77 m f
Q Q
showpage
%%Trailer
%%EOF
