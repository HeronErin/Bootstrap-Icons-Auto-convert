%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 144
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 144
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 120 rectclip
1 0 0 -1 0 192 cm q
0 g
97.176 60.156 m 97.715 59.918 98.336 59.973 98.828 60.297 c 99.316 60.621
 99.609 61.176 99.602 61.766 c 99.602 75.602 l 99.602 77.191 100.23 78.719
 101.355 79.844 c 102.484 80.969 104.008 81.602 105.602 81.602 c 113.605
 81.602 129.758 81.66 145.203 91.465 c 157.012 98.953 169.082 112.586 176.344
 137.977 c 164.105 126.18 150.125 119.785 137.883 116.387 c 137.879 116.387
 l 130.359 114.305 122.625 113.074 114.828 112.715 c 111.637 112.566 108.441
 112.598 105.254 112.812 c 105.098 112.812 l 105.039 112.824 l 105.027 112.824
 l 105.602 118.801 l 105 112.824 l 101.934 113.133 99.598 115.715 99.602
 118.801 c 99.602 132.637 l 99.602 133.934 98.281 134.75 97.176 134.246 
c 49.367 99.047 l 48.863 98.711 l 48.332 98.395 48.008 97.82 48.008 97.199
 c 48.008 96.582 48.332 96.008 48.863 95.688 c 49.367 95.352 l h
111.602 124.633 m 112.418 124.633 113.309 124.656 114.277 124.703 c 119.484
 124.941 126.684 125.734 134.676 127.957 c 150.586 132.371 169.43 142.383
 181.957 164.918 c 181.957 164.914 l 183.352 167.426 186.332 168.594 189.062
 167.699 c 191.793 166.809 193.508 164.105 193.152 161.258 c 187.586 116.738
 170.52 93.312 151.633 81.336 c 136.691 71.855 121.309 70.031 111.602 69.684
 c 111.602 61.762 l 111.602 61.766 l 111.602 56.73 108.848 52.098 104.426
 49.695 c 100.004 47.293 94.617 47.504 90.395 50.242 c 42.465 85.523 l 42.469
 85.523 l 38.441 88.039 35.992 92.453 35.992 97.199 c 35.992 101.949 38.441
 106.363 42.469 108.875 c 90.398 144.156 l 90.395 144.156 l 94.617 146.898
 100.004 147.109 104.426 144.703 c 108.848 142.301 111.602 137.672 111.602
 132.637 c h
111.602 124.633 m f
62.785 51.516 m 61.84 50.23 60.422 49.375 58.848 49.137 c 57.273 48.898
 55.664 49.297 54.383 50.242 c 6.48 85.523 l 2.453 88.039 0.004 92.453 0.004
 97.199 c 0.004 101.949 2.453 106.363 6.48 108.875 c 54.41 144.156 l 54.406
 144.156 l 55.688 145.133 57.305 145.559 58.898 145.332 c 60.492 145.102
 61.93 144.246 62.883 142.949 c 63.84 141.652 64.234 140.027 63.977 138.438
 c 63.723 136.848 62.836 135.426 61.523 134.496 c 13.367 99.047 l 12.863
 98.711 l 12.332 98.395 12.008 97.82 12.008 97.199 c 12.008 96.582 12.332
 96.008 12.863 95.688 c 13.367 95.352 l 61.512 59.902 l 64.18 57.938 64.75
 54.184 62.785 51.516 c f
Q Q
showpage
%%Trailer
%%EOF
