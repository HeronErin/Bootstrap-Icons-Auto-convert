%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 5 rectclip
1 0 0 -1 0 6 cm q
0 g
3.035 1.879 m 3.074 1.863 3.113 1.891 3.113 1.93 c 3.113 2.363 l 3.113 
2.465 3.195 2.551 3.301 2.551 c 3.551 2.551 4.055 2.551 4.539 2.859 c 4.906
 3.094 5.285 3.52 5.512 4.312 c 5.129 3.945 4.691 3.742 4.309 3.637 c 4.074
 3.57 3.832 3.535 3.59 3.523 c 3.488 3.52 3.391 3.52 3.289 3.523 c 3.285
 3.523 l 3.301 3.711 l 3.281 3.523 l 3.281 3.527 l 3.184 3.535 3.113 3.617
 3.113 3.711 c 3.113 4.145 l 3.113 4.184 3.07 4.211 3.039 4.195 c 1.543 
3.094 l 1.527 3.082 l 1.527 3.086 l 1.492 3.062 1.492 3.012 1.527 2.992 
c 1.543 2.98 l h
3.488 3.895 m 3.516 3.895 3.543 3.895 3.57 3.898 c 3.734 3.906 3.957 3.93
 4.207 4 c 4.703 4.137 5.293 4.449 5.684 5.156 c 5.688 5.152 l 5.785 5.332
 6.062 5.242 6.035 5.039 c 5.859 3.648 5.328 2.914 4.738 2.543 c 4.27 2.246
 3.789 2.191 3.488 2.18 c 3.488 1.93 l 3.488 1.773 3.402 1.629 3.262 1.555
 c 3.125 1.477 2.957 1.484 2.824 1.57 c 1.328 2.672 l 1.203 2.75 1.125 2.891
 1.125 3.039 c 1.125 3.188 1.203 3.324 1.328 3.402 c 2.824 4.504 l 2.957
 4.59 3.125 4.598 3.262 4.523 c 3.402 4.445 3.488 4.301 3.488 4.145 c h
3.488 3.895 m f
1.961 1.609 m 1.902 1.527 1.781 1.508 1.699 1.57 c 0.203 2.672 l 0.078 
2.75 0 2.891 0 3.039 c 0 3.188 0.078 3.324 0.203 3.402 c 1.699 4.504 l 1.785
 4.57 1.902 4.551 1.965 4.469 c 2.027 4.383 2.008 4.262 1.922 4.203 c 0.418
 3.094 l 0.402 3.082 l 0.402 3.086 l 0.367 3.062 0.367 3.012 0.402 2.992
 c 0.418 2.98 l 1.922 1.871 l 2.004 1.812 2.023 1.691 1.961 1.609 c f
Q Q
showpage
%%Trailer
%%EOF
