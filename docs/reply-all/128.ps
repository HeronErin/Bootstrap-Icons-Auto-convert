%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 72
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 72
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 60 rectclip
1 0 0 -1 0 96 cm q
0 g
48.59 30.078 m 48.855 29.961 49.168 29.984 49.414 30.148 c 49.66 30.312
 49.805 30.586 49.801 30.883 c 49.801 37.801 l 49.801 38.594 50.117 39.359
 50.68 39.922 c 51.242 40.484 52.004 40.801 52.801 40.801 c 56.805 40.801
 64.879 40.832 72.602 45.734 c 78.504 49.477 84.543 56.293 88.172 68.992
 c 82.051 63.094 75.062 59.895 68.941 58.199 c 68.941 58.195 l 65.18 57.152
 61.312 56.539 57.414 56.359 c 55.82 56.281 54.219 56.301 52.625 56.406 
c 52.547 56.406 l 52.516 56.414 l 52.508 56.414 l 52.801 59.398 l 52.5 56.41
 l 50.965 56.566 49.797 57.859 49.801 59.398 c 49.801 66.316 l 49.801 66.965
 49.141 67.371 48.59 67.121 c 24.684 49.523 l 24.43 49.355 l 24.434 49.355
 l 24.168 49.195 24.004 48.91 24.004 48.602 c 24.004 48.289 24.168 48.004
 24.434 47.844 c 24.688 47.676 l h
55.801 62.316 m 56.207 62.316 56.656 62.328 57.141 62.352 c 59.746 62.473
 63.344 62.867 67.34 63.977 c 75.297 66.184 84.715 71.188 90.98 82.457 c
 90.977 82.457 l 91.676 83.711 93.168 84.297 94.531 83.852 c 95.895 83.402
 96.754 82.055 96.574 80.629 c 93.789 58.367 85.258 46.656 75.812 40.668
 c 68.344 35.93 60.652 35.016 55.797 34.844 c 55.797 30.883 l 55.801 30.883
 l 55.801 28.363 54.426 26.051 52.211 24.848 c 50 23.645 47.309 23.75 45.199
 25.121 c 21.234 42.762 l 19.219 44.02 17.996 46.227 17.996 48.602 c 17.996
 50.973 19.219 53.18 21.234 54.438 c 45.199 72.078 l 47.309 73.449 50 73.555
 52.211 72.352 c 54.426 71.152 55.801 68.836 55.801 66.316 c h
55.801 62.316 m f
31.391 25.758 m 30.922 25.117 30.211 24.688 29.426 24.57 c 28.637 24.449
 27.832 24.648 27.191 25.121 c 3.238 42.762 l 1.227 44.02 0.004 46.227 0.004
 48.602 c 0.004 50.973 1.227 53.18 3.238 54.438 c 27.203 72.078 l 27.844
 72.566 28.652 72.777 29.449 72.664 c 30.246 72.551 30.965 72.121 31.441
 71.473 c 31.918 70.828 32.117 70.012 31.988 69.219 c 31.859 68.422 31.418
 67.715 30.762 67.246 c 6.684 49.523 l 6.43 49.355 l 6.434 49.355 l 6.168
 49.195 6.004 48.91 6.004 48.602 c 6.004 48.289 6.168 48.004 6.434 47.844
 c 6.688 47.676 l 30.758 29.953 l 32.09 28.969 32.375 27.094 31.391 25.758
 c f
Q Q
showpage
%%Trailer
%%EOF
