%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 9
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 9
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 8 rectclip
1 0 0 -1 0 12 cm q
0 g
6.074 3.758 m 6.145 3.727 6.227 3.781 6.227 3.859 c 6.227 4.727 l 6.227
 4.824 6.266 4.918 6.336 4.988 c 6.406 5.059 6.5 5.102 6.602 5.102 c 7.102
 5.102 8.109 5.105 9.078 5.719 c 9.816 6.188 10.57 7.039 11.023 8.625 c 
10.258 7.887 9.383 7.488 8.621 7.277 c 8.617 7.273 l 8.148 7.145 7.664 7.066
 7.176 7.043 c 6.977 7.035 6.777 7.039 6.578 7.051 c 6.566 7.051 l 6.602
 7.426 l 6.562 7.051 l 6.371 7.07 6.227 7.23 6.227 7.426 c 6.227 8.289 l
 6.227 8.371 6.145 8.422 6.074 8.391 c 3.086 6.191 l 3.055 6.172 l 3.055
 6.168 l 2.984 6.125 2.984 6.023 3.055 5.98 c 3.086 5.961 l h
6.977 7.789 m 7.027 7.789 7.082 7.789 7.145 7.793 c 7.469 7.809 7.922 7.859
 8.418 7.996 c 9.414 8.273 10.59 8.898 11.371 10.305 c 11.371 10.309 l 11.461
 10.465 11.645 10.535 11.816 10.48 c 11.988 10.426 12.094 10.258 12.07 10.078
 c 11.723 7.297 10.656 5.832 9.477 5.082 c 8.543 4.488 7.582 4.375 6.973
 4.355 c 6.973 3.859 l 6.977 3.859 l 6.977 3.547 6.805 3.258 6.527 3.105
 c 6.25 2.957 5.914 2.969 5.648 3.141 c 2.652 5.344 l 2.402 5.504 2.25 5.777
 2.25 6.074 c 2.25 6.371 2.402 6.648 2.652 6.805 c 5.648 9.008 l 5.914 9.18
 6.25 9.195 6.527 9.043 c 6.805 8.895 6.977 8.605 6.977 8.289 c h
6.977 7.789 m f
3.926 3.219 m 3.863 3.141 3.777 3.086 3.68 3.07 c 3.578 3.055 3.48 3.082
 3.398 3.141 c 0.406 5.344 l 0.152 5.504 0 5.777 0 6.074 c 0 6.371 0.152
 6.648 0.406 6.805 c 3.402 9.008 l 3.48 9.07 3.582 9.098 3.68 9.082 c 3.781
 9.07 3.871 9.016 3.93 8.934 c 3.988 8.852 4.016 8.75 4 8.652 c 3.984 8.555
 3.926 8.465 3.844 8.406 c 0.836 6.191 l 0.805 6.172 l 0.805 6.168 l 0.734
 6.125 0.734 6.023 0.805 5.98 c 0.836 5.961 l 3.844 3.746 l 3.844 3.742 
l 4.012 3.621 4.047 3.387 3.926 3.219 c f
Q Q
showpage
%%Trailer
%%EOF
