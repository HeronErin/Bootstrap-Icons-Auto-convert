%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 721 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 721 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 721 768 rectclip
1 0 0 -1 0 768 cm q
0 g
288 13.344 m 292.672 19.043 295.535 26.012 296.219 33.348 c 296.906 40.688
 295.379 48.062 291.84 54.527 c 264.074 105.473 249.582 162.59 249.695 220.609
 c 249.695 413.617 407.039 569.906 600.961 569.906 c 626.305 569.875 650.832
 567.312 674.547 562.227 c 674.543 562.223 l 681.797 560.672 689.348 561.281
 696.258 563.977 c 703.168 566.676 709.137 571.34 713.426 577.391 c 717.961
 583.691 720.273 591.32 720.004 599.078 c 719.734 606.836 716.898 614.285
 711.938 620.258 c 674.285 666.5 626.793 703.758 572.918 729.316 c 519.043
 754.875 460.145 768.09 400.512 768 c 179.23 768 0 589.727 0 370.078 c 0
 204.77 101.473 62.977 245.953 2.879 c 253.145 -0.176 261.141 -0.809 268.727
 1.078 c 276.312 2.965 283.078 7.27 288 13.344 c 233.184 62.93 m 177.633
 92.73 131.191 137.027 98.797 191.109 c 66.402 245.191 49.262 307.039 49.199
 370.078 c 49.199 563.039 206.59 719.324 400.512 719.324 c 400.512 719.328
 l 446.949 719.398 492.938 710.262 535.82 692.449 c 578.703 674.637 617.633
 648.5 650.352 615.551 c 634.16 617.566 617.695 618.574 600.961 618.574 
c 379.68 618.574 200.496 440.301 200.496 220.652 c 200.496 164.637 212.113
 111.309 233.184 62.926 c f
Q Q
showpage
%%Trailer
%%EOF
