%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 735
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 735
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 687 rectclip
1 0 0 -1 0 768 cm q
0 g
278.062 48 m 287.066 39 299.273 33.945 312 33.945 c 324.727 33.945 336.934
 39 345.938 48 c 376.992 79.008 l 383.062 85.078 385.434 93.926 383.211 
102.219 c 380.988 110.512 374.512 116.988 366.219 119.211 c 357.926 121.434
 349.078 119.062 343.008 112.992 c 312 81.938 l 96 297.938 l 96 600 l 96
 606.363 98.527 612.469 103.031 616.969 c 107.531 621.473 113.637 624 120
 624 c 128.574 624 136.496 628.574 140.785 636 c 145.07 643.426 145.07 652.574
 140.785 660 c 136.496 667.426 128.574 672 120 672 c 100.906 672 82.59 664.414
 69.09 650.91 c 55.586 637.41 48 619.094 48 600 c 48 345.938 l 40.992 352.992
 l 34.922 359.062 26.074 361.434 17.781 359.211 c 9.488 356.988 3.012 350.512
 0.789 342.219 c -1.434 333.926 0.938 325.078 7.008 319.008 c h
422.062 96 m 431.066 87 443.273 81.945 456 81.945 c 468.727 81.945 480.934
 87 489.938 96 c 576 182.062 l 576 120 l 576 113.637 578.527 107.531 583.031
 103.031 c 587.531 98.527 593.637 96 600 96 c 648 96 l 654.363 96 660.469
 98.527 664.969 103.031 c 669.473 107.531 672 113.637 672 120 c 672 278.062
 l 760.992 367.008 l 767.062 373.078 769.434 381.926 767.211 390.219 c 764.988
 398.512 758.512 404.988 750.219 407.211 c 741.926 409.434 733.078 407.062
 727.008 400.992 c 720 393.938 l 720 648 l 720 667.094 712.414 685.41 698.91
 698.91 c 685.41 712.414 667.094 720 648 720 c 264 720 l 244.906 720 226.59
 712.414 213.09 698.91 c 199.586 685.41 192 667.094 192 648 c 192 393.938
 l 184.992 400.992 l 178.922 407.062 170.074 409.434 161.781 407.211 c 153.488
 404.988 147.012 398.512 144.789 390.219 c 142.566 381.926 144.938 373.078
 151.008 367.008 c h
456 129.938 m 240 345.938 l 240 648 l 240 654.363 242.527 660.469 247.031
 664.969 c 251.531 669.473 257.637 672 264 672 c 648 672 l 654.363 672 660.469
 669.473 664.969 664.969 c 669.473 660.469 672 654.363 672 648 c 672 345.938
 l h
456 129.938 m f
Q Q
showpage
%%Trailer
%%EOF
