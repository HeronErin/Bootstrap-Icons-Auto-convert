%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
624 430.273 m 783.742 269.664 1183.199 550.656 624 912 c 64.801 550.656
 464.258 269.762 624 430.273 c f
1248 624 m 1248.215 756.754 1205.891 886.082 1127.23 993.023 c 1131.07 
995.84 1134.75 998.977 1138.27 1002.43 c 1507.871 1372.031 l 1532.137 1396.281
 1541.625 1431.633 1532.758 1464.77 c 1523.891 1497.91 1498.016 1523.801
 1464.883 1532.691 c 1431.754 1541.582 1396.395 1532.121 1372.129 1507.871
 c 1002.527 1138.27 l 1002.527 1138.273 l 999.051 1134.84 995.844 1131.152
 992.93 1127.23 c 993.121 1127.23 l 880.016 1210.215 742.246 1252.664 602.051
 1247.73 c 461.855 1242.797 327.414 1190.766 220.422 1100.035 c 113.43 1009.309
 40.133 885.176 12.355 747.672 c -15.422 610.168 3.945 467.316 67.328 342.168
 c 130.715 217.023 234.418 116.887 361.703 57.922 c 488.988 -1.047 632.434
 -15.402 768.879 17.168 c 905.328 49.738 1026.82 127.336 1113.75 237.438
 c 1200.68 347.539 1247.973 483.719 1248 624 c 624 1152 m 764.035 1152 898.332
 1096.371 997.352 997.352 c 1096.371 898.332 1152 764.035 1152 624 c 1152
 483.965 1096.371 349.668 997.352 250.648 c 898.332 151.629 764.035 96 624
 96 c 483.965 96 349.668 151.629 250.648 250.648 c 151.629 349.668 96 483.965
 96 624 c 96 764.035 151.629 898.332 250.648 997.352 c 349.668 1096.371 
483.965 1152 624 1152 c f
Q Q
showpage
%%Trailer
%%EOF
