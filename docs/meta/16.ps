%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 10
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 10
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 9 rectclip
1 0 0 -1 0 12 cm q
0 g
6.164 3.934 m 6.859 2.992 7.629 2.25 8.613 2.25 c 10.469 2.25 12 4.613 
12 7.43 c 12 9.148 11.262 10.223 9.934 10.223 c 8.777 10.223 8.137 9.574
 6.992 7.656 c 6.492 6.812 l 6.402 6.664 l 6.27 6.445 6.137 6.227 6.004 
6.008 c 5.121 7.566 l 3.867 9.762 3.16 10.223 2.18 10.223 c 0.816 10.223
 0 9.164 0 7.48 c 0 4.789 1.496 2.25 3.449 2.25 c 3.688 2.25 3.918 2.281
 4.141 2.34 c 4.375 2.406 4.598 2.504 4.824 2.645 c 5.258 2.914 5.691 3.332
 6.16 3.93 c 7.297 5.598 m 7.109 5.289 6.926 5.008 6.75 4.746 c 7.383 3.766
 7.906 3.281 8.527 3.281 c 9.82 3.281 10.855 5.184 10.855 7.52 c 10.855 
8.41 10.562 8.926 9.961 8.926 c 9.383 8.926 9.105 8.543 8.004 6.773 c h
3.633 3.566 m 4.176 3.641 4.672 4.043 5.387 5.066 c 5.391 5.066 l 4.977
 5.699 4.566 6.336 4.164 6.977 c 3.145 8.57 2.793 8.93 2.227 8.93 c 1.645
 8.93 1.297 8.418 1.297 7.504 c 1.297 5.551 2.27 3.555 3.43 3.555 c 3.496
 3.555 3.566 3.559 3.633 3.566 c h
3.633 3.566 m f*
Q Q
showpage
%%Trailer
%%EOF
