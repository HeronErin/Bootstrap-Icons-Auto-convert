%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 113 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 113 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 113 768 511 rectclip
1 0 0 -1 0 768 cm q
0 g
394.414 251.664 m 438.961 191.426 488.207 144 551.184 144 c 670.078 144
 768 295.344 768.047 475.535 c 768.047 585.457 720.719 654.336 635.711 654.336
 c 561.648 654.336 520.75 612.77 447.359 489.984 c 415.344 436.082 l 409.68
 426.625 l 401.332 412.512 392.852 398.48 384.238 384.527 c 327.695 484.367
 l 247.391 624.766 202.176 654.336 139.391 654.336 c 52.129 654.336 0 586.414
 0 478.703 c 0 306.625 95.762 144 220.703 144 c 235.969 143.969 250.75 145.922
 265.055 149.855 c 279.934 153.984 294.383 160.414 308.879 169.391 c 336.574
 186.621 364.27 213.312 394.414 251.664 c 467.184 358.418 m 455.086 338.77
 443.457 320.641 432.289 304.035 c 432 303.648 l 472.559 241.008 506.062
 209.855 545.855 209.855 c 628.559 209.855 694.75 331.633 694.75 481.199
 c 694.75 538.223 676.031 571.297 637.391 571.297 c 600.285 571.297 582.574
 546.816 512.109 433.535 c h
232.609 228.289 m 267.41 233.09 299.09 258.723 344.93 324.336 c 318.477
 364.836 292.316 405.527 266.449 446.398 c 201.312 548.445 178.801 571.344
 142.562 571.344 c 105.266 571.344 83.043 538.609 83.043 480.145 c 83.043
 355.25 145.348 227.473 219.652 227.473 c 224.004 227.473 228.324 227.762
 232.613 228.336 c h
232.609 228.289 m f*
Q Q
showpage
%%Trailer
%%EOF
