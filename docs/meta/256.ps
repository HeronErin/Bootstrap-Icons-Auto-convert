%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 28 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 28 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 28 192 128 rectclip
1 0 0 -1 0 192 cm q
0 g
98.605 62.914 m 109.738 47.855 122.051 36 137.797 36 c 167.52 36 192 73.836
 192.012 118.883 c 192.012 146.363 180.18 163.582 158.926 163.582 c 140.41
 163.582 130.188 153.191 111.836 122.492 c 103.832 109.016 l 102.418 106.652
 l 102.422 106.656 l 100.332 103.129 98.211 99.621 96.059 96.133 c 81.922
 121.094 l 61.848 156.195 50.543 163.586 34.848 163.586 c 13.031 163.586
 0 146.605 0 119.676 c 0 76.656 23.941 36 55.176 36 c 58.992 35.992 62.688
 36.48 66.266 37.465 c 69.984 38.496 73.598 40.105 77.223 42.348 c 84.148
 46.656 91.07 53.328 98.605 62.914 c 116.797 89.602 m 113.773 84.691 110.863
 80.156 108.074 76.004 c 108 75.91 l 118.141 60.25 126.516 52.461 136.465
 52.461 c 157.141 52.461 173.688 82.906 173.688 120.297 c 173.688 134.555
 169.008 142.82 159.348 142.82 c 150.07 142.82 145.645 136.699 128.027 108.379
 c h
58.152 57.07 m 66.852 58.27 74.773 64.68 86.23 81.082 c 86.23 81.086 l 
79.621 91.211 73.078 101.383 66.613 111.602 c 50.328 137.113 44.703 142.836
 35.641 142.836 c 26.316 142.836 20.762 134.652 20.762 120.035 c 20.762 
88.812 36.336 56.867 54.914 56.867 c 56.004 56.867 57.082 56.938 58.152 
57.082 c h
58.152 57.07 m f*
Q Q
showpage
%%Trailer
%%EOF
