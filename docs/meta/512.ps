%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 56 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 56 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 56 384 256 rectclip
1 0 0 -1 0 384 cm q
0 g
197.207 125.832 m 219.48 95.711 244.105 72 275.594 72 c 335.039 72 384 
147.672 384.023 237.77 c 384.023 292.73 360.359 327.168 317.855 327.168 
c 280.824 327.168 260.375 306.383 223.68 244.992 c 207.672 218.039 l 204.84
 213.312 l 200.664 206.258 196.426 199.242 192.121 192.266 c 163.848 242.188
 l 123.695 312.387 101.086 327.172 69.695 327.172 c 26.062 327.168 0 293.207
 0 239.352 c 0 153.312 47.879 72 110.352 72 c 117.984 71.984 125.375 72.961
 132.527 74.93 c 139.969 76.992 147.191 80.211 154.438 84.699 c 168.285 
93.316 182.133 106.66 197.207 125.836 c 233.59 179.211 m 227.543 169.387
 221.727 160.324 216.141 152.02 c 216 151.824 l 236.281 120.504 253.031 
104.93 272.93 104.93 c 314.281 104.93 347.379 165.816 347.379 240.602 c 
347.379 269.113 338.02 285.648 318.699 285.648 c 300.148 285.648 291.293
 273.41 256.059 216.77 c h
116.305 114.145 m 133.703 116.543 149.543 129.359 172.465 162.168 c 159.238
 182.418 146.16 202.762 133.223 223.199 c 100.656 274.223 89.398 285.672
 71.277 285.672 c 52.629 285.672 41.516 269.305 41.516 240.07 c 41.516 177.621
 72.668 113.734 109.82 113.734 c 111.996 113.734 114.156 113.879 116.301
 114.168 c h
116.305 114.145 m f*
Q Q
showpage
%%Trailer
%%EOF
