%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
491.137 602.879 m 521.855 602.879 l 559.777 602.879 577.727 625.918 577.727
 672.191 c 577.727 718.27 559.871 741.121 521.949 741.121 c 491.133 741.121
 l h
840.191 609.215 m 865.918 690.336 l 812.926 690.336 l 838.848 609.215 l
 h
967.582 602.879 m 998.301 602.879 l 1036.125 602.879 1054.172 625.918 1054.172
 672.191 c 1054.172 718.27 1036.316 741.121 998.301 741.121 c 967.582 741.121
 l h
891.551 890.879 m 922.27 890.879 l 960.191 890.879 978.141 913.918 978.141
 960.191 c 978.141 1006.27 960.285 1029.121 922.363 1029.121 c 891.645 1029.121
 l h
891.551 890.879 m f
868.801 41.762 m 813.121 -13.918 722.879 -13.918 667.199 41.762 c 41.855
 667.199 l -13.824 722.879 -13.824 813.023 41.855 868.605 c 667.391 1494.141
 l 723.07 1549.82 813.215 1549.82 868.797 1494.141 c 1494.332 868.605 l 
1550.012 812.926 1550.012 722.781 1494.332 667.199 c h
459.07 576 m 525.309 576 l 582.523 576 610.363 610.078 610.363 671.809 
c 610.367 733.535 582.336 768 525.406 768 c 459.168 768 l h
750.719 741.121 m 750.719 768 l 630.816 768 l 630.816 576 l 750.719 576
 l 750.719 602.879 l 662.688 602.879 l 662.688 657.598 l 745.535 657.598
 l 745.535 683.324 l 662.688 683.324 l 662.688 741.117 l h
788.832 768 m 756.191 768 l 822.238 576 l 857.855 576 l 924 768 l 890.207
 768 l 873.215 714.816 l 805.824 714.816 l 788.734 768 l h
935.711 576 m 1001.949 576 l 1059.164 576 1087.004 610.078 1087.004 671.809
 c 1087.008 733.535 1058.879 768 1001.855 768 c 935.617 768 l h
655.102 1029.121 m 655.105 1056 l 535.199 1056 l 535.199 864 l 655.008 
864 l 655.008 890.879 l 566.977 890.879 l 566.977 945.598 l 649.824 945.598
 l 649.824 971.324 l 566.977 971.324 l 566.977 1029.117 l h
710.012 1056 m 679.293 1056 l 679.297 864 l 707.52 864 l 797.086 1001.855
 l 798.43 1001.855 l 798.434 864 l 829.152 864 l 829.152 1056 l 801.121 
1056 l 711.266 917.762 l 710.02 917.762 l h
859.773 864 m 926.012 864 l 983.227 864 1011.066 898.078 1011.066 959.809
 c 1011.07 1021.535 982.848 1056 925.922 1056 c 859.684 1056 l h
859.773 864 m f
Q Q
showpage
%%Trailer
%%EOF
