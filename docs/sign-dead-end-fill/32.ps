%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
7.676 9.422 m 8.156 9.422 l 8.75 9.422 9.027 9.781 9.027 10.504 c 9.027
 11.223 8.75 11.582 8.156 11.582 c 7.676 11.582 l h
13.129 9.52 m 13.531 10.785 l 12.703 10.785 l 13.109 9.52 l h
15.121 9.422 m 15.602 9.422 l 16.191 9.422 16.473 9.781 16.473 10.504 c
 16.473 11.223 16.195 11.582 15.602 11.582 c 15.121 11.582 l h
13.934 13.922 m 14.414 13.922 l 15.008 13.922 15.285 14.281 15.285 15.004
 c 15.285 15.723 15.008 16.082 14.414 16.082 c 13.934 16.082 l h
13.934 13.922 m f
13.574 0.652 m 12.703 -0.219 11.293 -0.219 10.426 0.652 c 0.652 10.426 
l -0.219 11.297 -0.219 12.703 0.652 13.574 c 10.426 23.348 l 11.297 24.219
 12.703 24.219 13.574 23.348 c 23.348 13.574 l 24.219 12.703 24.219 11.297
 23.348 10.426 c h
7.172 9 m 8.207 9 l 9.102 9 9.535 9.531 9.535 10.496 c 9.535 11.461 9.098
 12 8.211 12 c 7.176 12 l h
11.73 11.578 m 11.73 12 l 9.855 12 l 9.855 9 l 11.73 9 l 11.73 9.422 l 
10.355 9.422 l 10.355 10.277 l 11.648 10.277 l 11.648 10.68 l 10.355 10.68
 l 10.355 11.582 l h
12.324 12 m 11.812 12 l 12.844 9 l 13.398 9 l 14.434 12 l 13.906 12 l 13.641
 11.168 l 12.586 11.168 l h
14.621 9 m 15.656 9 l 16.551 9 16.984 9.531 16.984 10.496 c 16.984 11.461
 16.547 12 15.652 12 c 14.617 12 l h
10.238 16.078 m 10.234 16.5 l 8.363 16.5 l 8.363 13.5 l 10.234 13.5 l 10.234
 13.922 l 8.859 13.922 l 8.859 14.777 l 10.152 14.777 l 10.152 15.18 l 8.859
 15.18 l 8.859 16.082 l h
11.098 16.5 m 10.617 16.5 l 10.613 13.5 l 11.055 13.5 l 12.453 15.652 l
 12.473 15.652 l 12.477 13.5 l 12.957 13.5 l 12.957 16.5 l 12.52 16.5 l 
11.117 14.34 l 11.098 14.34 l h
13.438 13.5 m 14.473 13.5 l 15.367 13.5 15.801 14.031 15.801 14.996 c 15.797
 15.961 15.355 16.5 14.469 16.5 c 13.434 16.5 l h
13.438 13.5 m f
Q Q
showpage
%%Trailer
%%EOF
