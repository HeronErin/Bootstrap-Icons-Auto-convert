%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.918 2.355 m 2.039 2.355 l 2.188 2.355 2.258 2.445 2.258 2.625 c 2.258
 2.805 2.188 2.895 2.039 2.895 c 1.918 2.895 l h
3.281 2.379 m 3.383 2.695 l 3.176 2.695 l 3.277 2.379 l h
3.777 2.355 m 3.898 2.355 l 4.047 2.355 4.117 2.445 4.117 2.625 c 4.117
 2.805 4.047 2.895 3.898 2.895 c 3.777 2.895 l h
3.48 3.48 m 3.602 3.48 l 3.75 3.48 3.82 3.57 3.82 3.75 c 3.82 3.93 3.75
 4.02 3.602 4.02 c 3.48 4.02 l h
3.48 3.48 m f
3.395 0.164 m 3.176 -0.055 2.824 -0.055 2.605 0.164 c 0.164 2.605 l -0.055
 2.824 -0.055 3.176 0.164 3.391 c 2.609 5.836 l 2.828 6.055 3.18 6.055 3.395
 5.836 c 5.84 3.391 l 6.059 3.172 6.059 2.82 5.84 2.605 c h
1.793 2.25 m 2.051 2.25 l 2.273 2.25 2.383 2.383 2.383 2.625 c 2.383 2.867
 2.273 3 2.051 3 c 1.793 3 l h
2.934 2.895 m 2.934 3 l 2.465 3 l 2.465 2.25 l 2.934 2.25 l 2.934 2.355
 l 2.59 2.355 l 2.59 2.57 l 2.914 2.57 l 2.914 2.672 l 2.59 2.672 l 2.59
 2.898 l h
3.082 3 m 2.953 3 l 3.211 2.25 l 3.352 2.25 l 3.609 3 l 3.477 3 l 3.41 
2.793 l 3.148 2.793 l h
3.656 2.25 m 3.914 2.25 l 4.137 2.25 4.246 2.383 4.246 2.625 c 4.246 2.867
 4.137 3 3.914 3 c 3.656 3 l h
2.559 4.02 m 2.559 4.125 l 2.09 4.125 l 2.09 3.375 l 2.559 3.375 l 2.559
 3.48 l 2.215 3.48 l 2.215 3.695 l 2.539 3.695 l 2.539 3.797 l 2.215 3.797
 l 2.215 4.023 l h
2.773 4.125 m 2.652 4.125 l 2.652 3.375 l 2.762 3.375 l 3.113 3.914 l 3.117
 3.914 l 3.117 3.375 l 3.238 3.375 l 3.238 4.125 l 3.129 4.125 l 2.777 3.586
 l 2.773 3.586 l h
3.359 3.375 m 3.617 3.375 l 3.84 3.375 3.949 3.508 3.949 3.75 c 3.949 3.992
 3.84 4.125 3.617 4.125 c 3.359 4.125 l h
3.359 3.375 m f
Q Q
showpage
%%Trailer
%%EOF
