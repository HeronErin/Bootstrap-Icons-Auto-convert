%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 288 m 234.152 288 228.504 290.141 224.121 294.012 c 219.738 297.883
 216.918 303.219 216.191 309.023 c 192.191 501.023 l 191.34 507.852 193.457
 514.723 198.012 519.883 c 202.566 525.043 209.117 528 216 528 c 360 528
 l 360 624.77 l 318.574 627.41 288 636.816 288 648 c 288 661.246 330.961
 672 384 672 c 437.039 672 480 661.246 480 648 c 480 636.816 449.426 627.406
 408 624.77 c 408 528 l 552 528 l 558.883 528 565.434 525.043 569.988 519.883
 c 574.543 514.723 576.66 507.852 575.809 501.023 c 551.809 309.023 l 551.082
 303.219 548.262 297.883 543.879 294.012 c 539.496 290.141 533.848 288 528
 288 c h
336 469.441 m 336 346.559 l 336 341.949 341.09 339.07 345.121 341.469 c
 447.359 402.859 l 447.359 402.863 l 449.16 403.949 450.258 405.898 450.258
 408 c 450.258 410.102 449.16 412.051 447.359 413.137 c 345.121 474.578 
l 345.121 474.574 l 343.25 475.715 340.91 475.746 339.012 474.656 c 337.117
 473.566 335.961 471.531 336 469.344 c h
336 469.441 m f
672 672 m 672 216 l 456 0 l 192 0 l 166.539 0 142.121 10.113 124.117 28.117
 c 106.113 46.121 96 70.539 96 96 c 96 672 l 96 697.461 106.113 721.879 
124.117 739.883 c 142.121 757.887 166.539 768 192 768 c 576 768 l 601.461
 768 625.879 757.887 643.883 739.883 c 661.887 721.879 672 697.461 672 672
 c 456 144 m 456 163.094 463.586 181.41 477.09 194.91 c 490.59 208.414 508.906
 216 528 216 c 624 216 l 624 672 l 624 684.73 618.941 696.938 609.941 705.941
 c 600.938 714.941 588.73 720 576 720 c 192 720 l 179.27 720 167.062 714.941
 158.059 705.941 c 149.059 696.938 144 684.73 144 672 c 144 96 l 144 83.27
 149.059 71.062 158.059 62.059 c 167.062 53.059 179.27 48 192 48 c 456 48
 l h
456 144 m f
Q Q
showpage
%%Trailer
%%EOF
