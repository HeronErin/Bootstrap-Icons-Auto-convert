%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
156 0 m 146.453 0 137.297 3.793 130.543 10.543 c 123.793 17.297 120 26.453
 120 36 c 120 108 l 120 111.184 118.734 114.234 116.484 116.484 c 114.234
 118.734 111.184 120 108 120 c 36 120 l 26.453 120 17.297 123.793 10.543
 130.543 c 3.793 137.297 0 146.453 0 156 c 0 228 l 0 237.547 3.793 246.703
 10.543 253.457 c 17.297 260.207 26.453 264 36 264 c 108 264 l 111.184 264
 114.234 265.266 116.484 267.516 c 118.734 269.766 120 272.816 120 276 c
 120 348 l 120 357.547 123.793 366.703 130.543 373.457 c 137.297 380.207
 146.453 384 156 384 c 228 384 l 237.547 384 246.703 380.207 253.457 373.457
 c 260.207 366.703 264 357.547 264 348 c 264 276 l 264 269.371 269.371 264
 276 264 c 348 264 l 357.547 264 366.703 260.207 373.457 253.457 c 380.207
 246.703 384 237.547 384 228 c 384 156 l 384 146.453 380.207 137.297 373.457
 130.543 c 366.703 123.793 357.547 120 348 120 c 276 120 l 269.371 120 264
 114.629 264 108 c 264 36 l 264 26.453 260.207 17.297 253.457 10.543 c 246.703
 3.793 237.547 0 228 0 c h
186.91 56.16 m 188.008 54.406 189.93 53.34 192 53.34 c 194.07 53.34 195.992
 54.406 197.09 56.16 c 216.266 86.832 l 217.414 88.68 217.473 91.008 216.414
 92.91 c 215.359 94.816 213.352 95.996 211.176 96 c 172.824 96 l 170.648
 95.996 168.641 94.816 167.586 92.91 c 166.527 91.008 166.586 88.68 167.734
 86.832 c h
186.91 327.84 m 167.734 297.191 l 166.574 295.344 166.508 293.008 167.566
 291.094 c 168.625 289.184 170.641 287.996 172.824 288 c 211.199 288 l 213.387
 287.996 215.398 289.184 216.457 291.094 c 217.516 293.008 217.449 295.344
 216.289 297.191 c 197.113 327.863 l 196.016 329.617 194.094 330.684 192.023
 330.684 c 189.957 330.684 188.031 329.617 186.938 327.863 c h
86.832 216.238 m 56.137 197.086 l 56.137 197.09 l 54.383 195.992 53.316
 194.07 53.316 192 c 53.316 189.93 54.383 188.008 56.137 186.91 c 86.832
 167.734 l 88.68 166.586 91.008 166.527 92.91 167.586 c 94.816 168.641 95.996
 170.648 96 172.824 c 96 211.199 l 95.996 213.379 94.816 215.383 92.91 216.438
 c 91.008 217.496 88.68 217.438 86.832 216.289 c h
327.863 197.086 m 297.191 216.262 l 297.191 216.266 l 295.344 217.426 293.008
 217.492 291.094 216.434 c 289.184 215.375 287.996 213.359 288 211.176 c
 288 172.801 l 287.996 170.613 289.184 168.602 291.094 167.543 c 293.008
 166.484 295.344 166.551 297.191 167.711 c 327.863 186.887 l 329.617 187.984
 330.684 189.906 330.684 191.977 c 330.684 194.043 329.617 195.969 327.863
 197.062 c h
327.863 197.086 m f
Q Q
showpage
%%Trailer
%%EOF
