%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
78 0 m 73.227 0 68.648 1.895 65.273 5.273 c 61.895 8.648 60 13.227 60 18
 c 60 54 l 60 55.59 59.367 57.117 58.242 58.242 c 57.117 59.367 55.59 60
 54 60 c 18 60 l 13.227 60 8.648 61.895 5.273 65.273 c 1.895 68.648 0 73.227
 0 78 c 0 114 l 0 118.773 1.895 123.352 5.273 126.727 c 8.648 130.105 13.227
 132 18 132 c 54 132 l 55.59 132 57.117 132.633 58.242 133.758 c 59.367 
134.883 60 136.41 60 138 c 60 174 l 60 178.773 61.895 183.352 65.273 186.727
 c 68.648 190.105 73.227 192 78 192 c 114 192 l 118.773 192 123.352 190.105
 126.727 186.727 c 130.105 183.352 132 178.773 132 174 c 132 138 l 132 134.688
 134.688 132 138 132 c 174 132 l 178.773 132 183.352 130.105 186.727 126.727
 c 190.105 123.352 192 118.773 192 114 c 192 78 l 192 73.227 190.105 68.648
 186.727 65.273 c 183.352 61.895 178.773 60 174 60 c 138 60 l 134.688 60
 132 57.312 132 54 c 132 18 l 132 13.227 130.105 8.648 126.727 5.273 c 123.352
 1.895 118.773 0 114 0 c h
93.457 28.078 m 94.004 27.203 94.965 26.672 96 26.672 c 97.035 26.672 97.996
 27.203 98.543 28.078 c 108.133 43.414 l 108.707 44.34 108.734 45.504 108.207
 46.457 c 107.68 47.406 106.676 48 105.59 48 c 86.41 48 l 85.324 48 84.32
 47.406 83.793 46.457 c 83.266 45.504 83.293 44.34 83.867 43.414 c h
93.457 163.918 m 83.867 148.594 l 83.867 148.598 l 83.285 147.672 83.254
 146.504 83.785 145.547 c 84.312 144.59 85.32 144 86.41 144 c 105.602 144
 l 106.691 144 107.699 144.59 108.227 145.547 c 108.758 146.504 108.727 
147.672 108.145 148.598 c 98.555 163.934 l 98.008 164.809 97.047 165.344
 96.012 165.344 c 94.977 165.344 94.016 164.809 93.469 163.934 c h
43.418 108.117 m 28.07 98.543 l 28.066 98.543 l 27.191 97.996 26.656 97.035
 26.656 96 c 26.656 94.965 27.191 94.004 28.066 93.457 c 43.414 83.867 l
 44.34 83.293 45.504 83.266 46.457 83.793 c 47.406 84.32 48 85.324 48 86.41
 c 48 105.602 l 48 106.688 47.406 107.691 46.457 108.219 c 45.504 108.746
 44.34 108.719 43.414 108.145 c h
163.934 98.543 m 148.598 108.133 l 147.672 108.715 146.504 108.746 145.547
 108.215 c 144.59 107.688 144 106.68 144 105.59 c 144 86.398 l 144 85.309
 144.59 84.301 145.547 83.773 c 146.504 83.242 147.672 83.273 148.598 83.855
 c 163.934 93.445 l 164.809 93.992 165.344 94.953 165.344 95.988 c 165.344
 97.023 164.809 97.984 163.934 98.531 c h
163.934 98.543 m f
Q Q
showpage
%%Trailer
%%EOF
