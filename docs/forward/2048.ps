%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 317 1402 1104
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 317 1402 1104
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 317 1258 787 rectclip
1 0 0 -1 0 1536 cm q
0 g
912.191 529.246 m 907.883 527.352 902.902 527.777 898.98 530.379 c 895.059
 532.984 892.727 537.402 892.801 542.113 c 892.801 638.398 l 892.801 651.129
 887.742 663.34 878.742 672.34 c 869.738 681.344 857.531 686.398 844.801
 686.398 c 240 686.398 l 240 964.797 l 844.801 964.797 l 844.801 964.801
 l 857.531 964.801 869.738 969.855 878.742 978.859 c 887.742 987.859 892.801
 1000.07 892.801 1012.801 c 892.801 1109.09 l 892.801 1119.457 903.359 1125.984
 912.191 1121.953 c 1294.656 840.387 l 1298.688 837.699 l 1298.688 837.695
 l 1302.934 835.145 1305.531 830.555 1305.531 825.602 c 1305.531 820.645
 1302.934 816.055 1298.688 813.504 c 1294.656 810.816 l h
796.801 542.113 m 796.789 515.629 806.348 490.031 823.715 470.039 c 841.082
 450.043 865.094 437 891.316 433.309 c 917.543 429.617 944.219 435.531 966.434
 449.953 c 1349.859 732.191 l 1349.855 732.191 l 1382.082 752.309 1401.66
 787.613 1401.66 825.602 c 1401.66 863.586 1382.082 898.895 1349.855 919.008
 c 966.43 1201.246 l 966.434 1201.246 l 944.219 1215.672 917.543 1221.582
 891.316 1217.891 c 865.094 1214.199 841.082 1201.156 823.715 1181.16 c 
806.348 1161.168 796.789 1135.57 796.801 1109.09 c 796.801 1060.801 l 192
 1060.801 l 179.27 1060.801 167.062 1055.742 158.059 1046.742 c 149.059 
1037.738 144 1025.531 144 1012.801 c 144 638.398 l 144 625.668 149.059 613.461
 158.059 604.457 c 167.062 595.457 179.27 590.398 192 590.398 c 796.801 
590.398 l h
796.801 542.113 m f
Q Q
showpage
%%Trailer
%%EOF
