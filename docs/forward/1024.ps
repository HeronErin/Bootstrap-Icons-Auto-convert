%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 158 701 552
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 158 701 552
768 768 cairo_set_page_size
%%EndPageSetup
q 72 158 629 394 rectclip
1 0 0 -1 0 768 cm q
0 g
456.098 264.625 m 453.941 263.676 451.453 263.891 449.492 265.191 c 447.527
 266.492 446.363 268.703 446.398 271.055 c 446.398 319.199 l 446.398 325.566
 443.871 331.668 439.371 336.172 c 434.871 340.672 428.766 343.199 422.398
 343.199 c 120 343.199 l 120 482.398 l 422.398 482.398 l 428.766 482.398
 434.871 484.93 439.371 489.43 c 443.871 493.93 446.398 500.035 446.398 
506.398 c 446.398 554.543 l 446.398 559.727 451.68 562.992 456.094 560.977
 c 647.324 420.191 l 649.34 418.848 l 649.344 418.848 l 651.469 417.57 652.766
 415.277 652.766 412.801 c 652.766 410.324 651.469 408.027 649.344 406.754
 c 647.328 405.41 l h
398.398 271.055 m 398.395 257.812 403.172 245.016 411.859 235.02 c 420.543
 225.023 432.547 218.5 445.66 216.656 c 458.773 214.809 472.109 217.766 
483.215 224.977 c 674.926 366.098 l 674.93 366.098 l 691.039 376.152 700.832
 393.805 700.832 412.801 c 700.832 431.793 691.039 449.445 674.93 459.504
 c 483.219 600.625 l 483.215 600.625 l 472.109 607.836 458.773 610.789 445.66
 608.945 c 432.547 607.098 420.543 600.578 411.859 590.582 c 403.172 580.586
 398.395 567.785 398.398 554.543 c 398.398 530.398 l 96 530.398 l 89.637
 530.398 83.531 527.871 79.031 523.371 c 74.527 518.871 72 512.766 72 506.398
 c 72 319.199 l 72 312.836 74.527 306.73 79.031 302.23 c 83.531 297.73 89.637
 295.199 96 295.199 c 398.398 295.199 l h
398.398 271.055 m f
Q Q
showpage
%%Trailer
%%EOF
