%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 36 79 351 276
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 36 79 351 276
384 384 cairo_set_page_size
%%EndPageSetup
q 36 79 315 197 rectclip
1 0 0 -1 0 384 cm q
0 g
228.047 132.312 m 226.969 131.836 225.727 131.945 224.746 132.594 c 223.766
 133.246 223.184 134.352 223.199 135.527 c 223.199 159.602 l 223.199 162.781
 221.938 165.836 219.684 168.086 c 217.434 170.336 214.383 171.602 211.199
 171.602 c 60 171.602 l 60 241.203 l 211.199 241.203 l 211.199 241.199 l
 214.383 241.199 217.434 242.465 219.684 244.715 c 221.938 246.965 223.199
 250.016 223.199 253.199 c 223.199 277.27 l 223.199 279.863 225.84 281.492
 228.047 280.484 c 323.664 210.094 l 324.672 209.422 l 324.672 209.426 l
 325.734 208.785 326.383 207.637 326.383 206.398 c 326.383 205.16 325.734
 204.016 324.672 203.375 c 323.664 202.703 l h
199.199 135.527 m 199.195 128.906 201.586 122.508 205.93 117.508 c 210.27
 112.512 216.273 109.25 222.828 108.328 c 229.387 107.406 236.055 108.883
 241.609 112.488 c 337.465 183.047 l 345.52 188.078 350.414 196.902 350.414
 206.398 c 350.414 215.898 345.52 224.723 337.465 229.754 c 241.609 300.312
 l 236.055 303.918 229.387 305.395 222.828 304.473 c 216.273 303.551 210.27
 300.289 205.93 295.289 c 201.586 290.293 199.195 283.895 199.199 277.273
 c 199.199 265.203 l 48 265.199 l 41.371 265.199 36 259.828 36 253.199 c
 36 159.598 l 36 159.602 l 36 152.973 41.371 147.602 48 147.602 c 199.199
 147.602 l h
199.199 135.527 m f
Q Q
showpage
%%Trailer
%%EOF
