%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.078 0.41 m 4.633 0.289 5.211 0.477 5.59 0.898 c 5.973 1.32 6.098 1.914
 5.922 2.453 c 5.883 2.574 5.754 2.641 5.633 2.602 c 5.512 2.562 5.445 2.43
 5.484 2.312 c 5.609 1.926 5.52 1.504 5.25 1.207 c 4.98 0.906 4.57 0.773
 4.176 0.859 c 4.051 0.887 3.93 0.805 3.902 0.684 c 3.875 0.559 3.957 0.438
 4.078 0.41 c 1.406 3.551 m 1.613 3.133 2.145 2.898 2.617 3.023 c 3.105 
3.148 3.355 3.613 3.156 4.059 c 2.953 4.516 2.371 4.762 1.875 4.602 c 1.398
 4.449 1.195 3.977 1.406 3.551 c 2.402 3.762 m 2.461 3.785 2.539 3.758 2.574
 3.699 c 2.605 3.641 2.586 3.57 2.527 3.551 c 2.469 3.527 2.395 3.555 2.359
 3.613 c 2.324 3.672 2.344 3.738 2.402 3.762 c 1.801 4.254 m 1.957 4.324
 2.16 4.258 2.258 4.105 c 2.352 3.949 2.305 3.773 2.148 3.707 c 1.996 3.641
 1.797 3.707 1.699 3.859 c 1.602 4.008 1.648 4.188 1.801 4.258 c f
4.504 2.715 m 4.848 2.82 5.23 3.082 5.23 3.535 c 5.23 4.289 4.145 5.234
 2.512 5.234 c 1.273 5.234 0 4.633 0 3.641 c 0 3.121 0.328 2.52 0.895 1.957
 c 1.648 1.199 2.531 0.855 2.863 1.188 c 3.008 1.336 3.023 1.586 2.93 1.891
 c 2.879 2.043 3.07 1.957 3.07 1.957 c 3.68 1.703 4.215 1.688 4.41 1.965
 c 4.516 2.113 4.504 2.32 4.41 2.562 c 4.367 2.672 4.422 2.691 4.508 2.715
 c 0.609 3.879 m 0.676 4.531 1.531 4.98 2.523 4.883 c 3.516 4.785 4.27 4.176
 4.203 3.523 c 4.141 2.871 3.281 2.422 2.289 2.52 c 1.297 2.617 0.543 3.227
 0.609 3.879 c 4.988 1.449 m 4.984 1.445 l 4.801 1.242 4.52 1.148 4.25 1.207
 c 3.992 1.262 4.074 1.648 4.332 1.594 c 4.465 1.566 4.602 1.609 4.691 1.711
 c 4.781 1.812 4.812 1.953 4.77 2.082 c 4.691 2.332 5.066 2.453 5.148 2.203
 c 5.234 1.938 5.172 1.652 4.984 1.445 c f
Q Q
showpage
%%Trailer
%%EOF
