%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 181
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 181
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 157 rectclip
1 0 0 -1 0 192 cm q
0 g
130.535 13.117 m 139.266 11.242 148.332 11.703 156.824 14.453 c 165.316
 17.203 172.934 22.145 178.906 28.777 c 184.898 35.387 189.039 43.461 190.906
 52.188 c 192.773 60.91 192.301 69.973 189.539 78.457 c 189.539 78.469 l
 188.289 82.332 184.145 84.453 180.281 83.203 c 176.418 81.953 174.297 77.809
 175.547 73.945 c 178.176 65.859 177.867 57.105 174.676 49.227 c 171.484
 41.348 165.617 34.844 158.105 30.863 c 150.594 26.887 141.918 25.684 133.609
 27.469 c 129.645 28.316 125.746 25.793 124.895 21.828 c 124.047 17.863 
126.574 13.965 130.535 13.117 c 45.035 113.578 m 51.609 100.258 68.699 92.699
 83.832 96.645 c 99.48 100.699 107.484 115.461 101.074 129.812 c 94.582 
144.465 75.934 152.312 60.082 147.199 c 44.828 142.266 38.34 127.16 45.035
 113.574 c 76.93 120.379 m 78.852 121.172 81.309 120.27 82.426 118.363 c
 83.48 116.441 82.785 114.285 80.879 113.598 c 79.008 112.855 76.645 113.754
 75.527 115.613 c 74.449 117.461 75.035 119.609 76.93 120.379 c 57.645 136.148
 m 62.602 138.406 69.199 136.258 72.273 131.348 c 75.297 126.391 73.715 
120.75 68.723 118.605 c 63.801 116.543 57.441 118.664 54.395 123.43 c 51.324
 128.23 52.773 133.918 57.648 136.148 c f
144.168 86.855 m 144.227 86.867 l 155.254 90.289 167.52 98.555 167.496 
113.125 c 167.496 137.211 132.758 167.547 80.543 167.547 c 40.715 167.543
 0 148.223 0 116.496 c 0 99.875 10.512 80.676 28.609 62.582 c 52.801 38.387
 81.012 27.359 91.609 37.98 c 96.289 42.684 96.734 50.762 93.734 60.422 
c 92.148 65.281 98.293 62.605 98.293 62.605 c 117.852 54.422 134.906 53.941
 141.133 62.844 c 144.469 67.609 144.156 74.254 141.086 81.973 c 139.695
 85.488 141.508 86.051 144.172 86.855 c 19.371 124.066 m 21.434 144.922 
48.891 159.297 80.68 156.156 c 112.445 153.035 136.551 133.559 134.465 112.68
 c 132.426 91.824 104.969 77.438 73.18 80.59 c 41.414 83.746 17.309 103.188
 19.371 124.066 c 159.543 46.258 m 159.539 46.262 l 156.629 43.035 152.922
 40.633 148.789 39.297 c 144.656 37.961 140.242 37.738 135.996 38.652 c 
132.578 39.379 130.398 42.734 131.125 46.152 c 131.852 49.57 135.207 51.75
 138.625 51.023 c 142.852 50.121 147.238 51.539 150.133 54.746 c 153.031
 57.953 153.996 62.465 152.664 66.574 c 151.586 69.906 153.414 73.48 156.742
 74.555 c 160.074 75.633 163.648 73.805 164.723 70.477 c 166.066 66.34 166.293
 61.922 165.383 57.672 c 164.473 53.422 162.457 49.484 159.539 46.262 c f
Q Q
showpage
%%Trailer
%%EOF
