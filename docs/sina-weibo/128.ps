%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 91
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 91
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 79 rectclip
1 0 0 -1 0 96 cm q
0 g
65.27 6.559 m 69.633 5.621 74.164 5.852 78.41 7.227 c 82.66 8.602 86.469
 11.07 89.453 14.387 c 92.449 17.691 94.52 21.73 95.453 26.094 c 96.387 
30.457 96.152 34.984 94.77 39.227 c 94.77 39.234 l 94.145 41.164 92.074 
42.227 90.141 41.602 c 88.211 40.977 87.148 38.902 87.773 36.973 c 89.086
 32.93 88.934 28.555 87.34 24.613 c 85.742 20.672 82.809 17.422 79.055 15.434
 c 75.297 13.441 70.961 12.84 66.805 13.734 c 64.824 14.156 62.871 12.895
 62.449 10.914 c 62.023 8.934 63.285 6.98 65.27 6.559 c 22.52 56.789 m 25.809
 50.129 34.352 46.348 41.918 48.324 c 49.742 50.352 53.742 57.73 50.539 
64.91 c 47.293 72.234 37.969 76.16 30.043 73.605 c 22.418 71.141 19.172 
63.586 22.52 56.793 c 38.469 60.195 m 39.43 60.59 40.66 60.141 41.215 59.188
 c 41.742 58.227 41.395 57.148 40.441 56.805 c 39.504 56.434 38.324 56.883
 37.766 57.812 c 37.227 58.738 37.52 59.809 38.469 60.195 c 28.828 68.078
 m 31.305 69.207 34.605 68.133 36.141 65.68 c 37.652 63.203 36.859 60.383
 34.363 59.309 c 31.902 58.277 28.723 59.34 27.199 61.719 c 25.664 64.117
 26.391 66.961 28.824 68.078 c f
72.086 43.43 m 72.117 43.438 l 77.633 45.148 83.762 49.281 83.75 56.566
 c 83.75 68.609 66.379 83.777 40.273 83.777 c 20.359 83.773 0 74.113 0 58.246
 c 0 49.938 5.258 40.336 14.305 31.289 c 26.398 19.195 40.508 13.68 45.805
 18.988 c 48.145 21.34 48.367 25.379 46.867 30.207 c 46.074 32.637 49.148
 31.301 49.148 31.301 c 58.93 27.207 67.453 26.969 70.57 31.422 c 72.238
 33.805 72.082 37.129 70.547 40.984 c 69.852 42.742 70.758 43.023 72.09 
43.426 c 9.691 62.031 m 10.723 72.461 24.453 79.648 40.344 78.074 c 56.227
 76.516 68.281 66.777 67.234 56.336 c 66.215 45.906 52.488 38.715 36.594
 40.293 c 20.711 41.871 8.656 51.59 9.691 62.031 c 79.777 23.129 m 79.77
 23.129 l 76.809 19.848 72.32 18.398 67.996 19.324 c 66.289 19.688 65.199
 21.367 65.562 23.074 c 65.926 24.785 67.605 25.875 69.312 25.512 c 71.426
 25.059 73.617 25.77 75.066 27.375 c 76.516 28.977 76.996 31.23 76.332 33.289
 c 75.793 34.953 76.707 36.738 78.371 37.277 c 80.039 37.816 81.824 36.902
 82.363 35.238 c 83.727 31.027 82.738 26.41 79.77 23.129 c f
Q Q
showpage
%%Trailer
%%EOF
