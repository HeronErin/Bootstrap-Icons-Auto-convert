%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 361
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 361
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 313 rectclip
1 0 0 -1 0 384 cm q
0 g
261.07 26.23 m 278.527 22.484 296.664 23.406 313.648 28.906 c 330.633 34.406
 345.867 44.285 357.816 57.551 c 369.797 70.773 378.074 86.926 381.809 104.371
 c 385.543 121.82 384.602 139.945 379.078 156.91 c 379.078 156.938 l 377.465
 161.934 373.305 165.691 368.168 166.793 c 363.027 167.891 357.695 166.168
 354.176 162.266 c 350.652 158.367 349.48 152.887 351.098 147.887 c 356.352
 131.719 355.734 114.215 349.352 98.453 c 342.973 82.695 331.238 69.691 
316.211 61.73 c 301.188 53.77 283.84 51.363 267.215 54.938 c 262.09 56.035
 256.766 54.312 253.25 50.422 c 249.738 46.527 248.566 41.059 250.18 36.07
 c 251.793 31.078 255.945 27.328 261.07 26.23 c 90.07 227.16 m 103.223 200.52
 137.398 185.398 167.664 193.297 c 198.961 201.41 214.969 230.93 202.152
 259.633 c 189.168 288.938 151.871 304.633 120.168 294.41 c 89.664 284.547
 76.68 254.332 90.07 227.164 c 153.863 240.773 m 157.703 242.359 162.625
 240.559 164.855 236.742 c 166.969 232.902 165.574 228.582 161.758 227.215
 c 158.016 225.727 153.285 227.527 151.055 231.246 c 148.895 234.941 150.07
 239.238 153.863 240.773 c 115.297 272.309 m 125.207 276.82 138.41 272.523
 144.555 262.707 c 150.602 252.797 147.434 241.516 137.449 237.219 c 127.609
 233.09 114.891 237.34 108.793 246.867 c 102.648 256.469 105.555 267.844
 115.297 272.309 c f
288.336 173.711 m 288.457 173.734 l 310.512 180.574 335.043 197.109 334.992
 226.246 c 334.992 274.414 265.512 335.086 161.09 335.086 c 81.434 335.09
 0 296.449 0 232.992 c 0 199.754 21.023 161.352 57.215 125.16 c 105.602 
76.777 162.023 54.719 183.215 75.961 c 192.574 85.367 193.461 101.52 187.461
 120.84 c 184.293 130.559 196.582 125.207 196.582 125.207 c 235.703 108.84
 269.805 107.879 282.262 125.688 c 288.934 135.215 288.309 148.512 282.164
 163.945 c 279.379 170.977 283.004 172.105 288.332 173.715 c 38.73 248.141
 m 42.859 289.852 97.77 318.605 161.348 312.316 c 224.875 306.078 273.09
 267.125 268.914 225.363 c 264.836 183.652 209.922 154.875 146.348 161.188
 c 82.82 167.5 34.605 206.379 38.73 248.141 c 319.074 92.523 m 319.078 92.52
 l 313.262 86.07 305.844 81.27 297.578 78.598 c 289.309 75.926 280.484 75.48
 271.992 77.305 c 265.16 78.754 260.797 85.473 262.246 92.305 c 263.699 
99.137 270.414 103.5 277.246 102.047 c 282.809 100.859 288.613 101.664 293.641
 104.328 c 298.664 106.992 302.594 111.344 304.73 116.613 c 306.867 121.883
 307.078 127.738 305.328 133.152 c 303.176 139.812 306.828 146.957 313.488
 149.113 c 320.148 151.266 327.293 147.613 329.449 140.953 c 332.133 132.68
 332.586 123.848 330.766 115.344 c 328.945 106.84 324.914 98.969 319.078
 92.52 c f
Q Q
showpage
%%Trailer
%%EOF
