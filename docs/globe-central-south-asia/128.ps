%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 30.852 0 15.004 9.148 6.43 24 c -2.145 38.852 -2.145 57.148 6.43
 72 c 15.004 86.852 30.852 96 48 96 c 65.148 96 80.996 86.852 89.57 72 c
 98.145 57.148 98.145 38.852 89.57 24 c 80.996 9.148 65.148 0 48 0 c 29.293
 10.387 m 29.363 11.047 29.66 11.664 30.133 12.133 c 30.797 12.797 31.102
 13.738 30.953 14.664 c 30.801 15.594 30.215 16.391 29.375 16.812 c 27.629
 17.688 l 27.211 17.895 26.832 18.168 26.504 18.496 c 23.621 21.379 l 22.016
 22.984 19.641 23.547 17.484 22.828 c 17.363 22.785 l 17.363 22.789 l 16.473
 22.492 15.523 22.41 14.594 22.547 c 18.496 17.422 23.523 13.258 29.293 
10.387 c 11.293 68.43 m 16.453 67.133 l 19.125 66.469 21 64.066 21 61.312
 c 21 60.207 l 21 60.211 l 21 58.203 22 56.332 23.672 55.219 c 23.91 55.062
 l 25.406 54.066 26.379 52.449 26.555 50.656 c 26.73 48.867 26.094 47.094
 24.82 45.82 c 18.727 39.727 l 17.785 38.805 17.727 37.316 18.59 36.324 
c 19.449 35.332 20.938 35.18 21.977 35.98 c 28.516 40.887 l 28.52 40.891
 l 29.426 41.57 30.641 41.68 31.656 41.172 c 32.586 40.707 33.691 40.754
 34.574 41.301 c 35.461 41.848 36 42.812 36 43.855 c 36 46.586 l 36.008 
47.508 36.281 48.41 36.785 49.184 c 41.555 56.336 l 41.852 56.777 42.086
 57.258 42.254 57.762 c 46.633 70.902 l 47.449 73.352 49.742 75 52.324 75
 c 52.676 75 l 55.258 75 57.551 73.348 58.367 70.895 c 62.746 57.762 l 62.914
 57.258 63.148 56.777 63.445 56.336 c 68.191 49.215 l 68.191 49.211 l 68.691
 48.449 69.547 47.996 70.457 48 c 71.418 48 72.293 48.504 72.809 49.309 
c 76.152 54.559 82.59 63 87 63 c 87.238 62.992 l 83.41 73 75.902 81.168 
66.25 85.82 c 56.598 90.477 45.531 91.266 35.316 88.035 c 25.102 84.801 
16.508 77.785 11.293 68.426 c h
11.293 68.43 m f
Q Q
showpage
%%Trailer
%%EOF
