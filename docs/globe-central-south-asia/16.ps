%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 0 m 2.688 0 0 2.688 0 6 c 0 9.312 2.688 12 6 12 c 9.312 12 12 9.312 12
 6 c 12 2.688 9.312 0 6 0 c 3.66 1.297 m 3.672 1.383 3.707 1.457 3.766 1.516
 c 3.848 1.598 3.887 1.719 3.867 1.832 c 3.852 1.949 3.777 2.051 3.672 2.102
 c 3.453 2.211 l 3.402 2.238 3.355 2.27 3.312 2.312 c 2.953 2.672 l 2.754
 2.875 2.453 2.945 2.184 2.855 c 2.168 2.852 l 2.172 2.848 l 2.059 2.812
 1.941 2.801 1.824 2.82 c 2.312 2.176 2.941 1.656 3.66 1.297 c 1.41 8.551
 m 2.055 8.391 l 2.391 8.309 2.625 8.008 2.625 7.664 c 2.625 7.527 l 2.625
 7.277 2.75 7.043 2.957 6.902 c 2.988 6.883 l 3.176 6.758 3.297 6.555 3.32
 6.332 c 3.34 6.109 3.262 5.887 3.102 5.727 c 2.34 4.965 l 2.223 4.852 2.215
 4.664 2.324 4.539 c 2.43 4.418 2.617 4.398 2.746 4.496 c 3.562 5.109 l 
3.566 5.109 l 3.68 5.195 3.832 5.211 3.957 5.148 c 4.074 5.09 4.211 5.094
 4.32 5.164 c 4.434 5.23 4.5 5.352 4.5 5.48 c 4.5 5.824 l 4.5 5.938 4.535
 6.051 4.598 6.148 c 5.195 7.043 l 5.23 7.098 5.262 7.156 5.281 7.219 c 
5.828 8.859 l 5.828 8.863 l 5.93 9.168 6.219 9.375 6.539 9.375 c 6.586 9.375
 l 6.906 9.375 7.195 9.168 7.297 8.863 c 7.844 7.223 l 7.844 7.219 l 7.863
 7.156 7.895 7.098 7.93 7.043 c 8.523 6.152 l 8.586 6.055 8.691 6 8.809 
6 c 8.93 6 9.039 6.062 9.102 6.164 c 9.52 6.82 10.324 7.875 10.875 7.875
 c 10.906 7.875 l 10.176 9.781 8.41 11.09 6.375 11.234 c 4.34 11.383 2.406
 10.336 1.41 8.555 c h
1.41 8.551 m f
Q Q
showpage
%%Trailer
%%EOF
