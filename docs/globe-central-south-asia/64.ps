%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 0 m 15.426 0 7.504 4.574 3.215 12 c -1.07 19.426 -1.07 28.574 3.215 
36 c 7.504 43.426 15.426 48 24 48 c 32.574 48 40.496 43.426 44.785 36 c 
49.07 28.574 49.07 19.426 44.785 12 c 40.496 4.574 32.574 0 24 0 c 14.645
 5.191 m 14.68 5.523 14.828 5.832 15.066 6.066 c 15.398 6.398 15.551 6.871
 15.477 7.332 c 15.402 7.797 15.109 8.195 14.688 8.406 c 13.816 8.844 l 
13.605 8.945 13.414 9.082 13.25 9.25 c 11.809 10.691 l 11.812 10.688 l 11.008
 11.492 9.82 11.773 8.742 11.414 c 8.684 11.395 l 8.234 11.246 7.762 11.203
 7.297 11.273 c 9.246 8.711 11.762 6.629 14.645 5.191 c 5.645 34.215 m 8.223
 33.566 l 8.227 33.566 l 9.562 33.234 10.5 32.035 10.5 30.656 c 10.5 30.105
 l 10.5 29.102 11 28.164 11.836 27.609 c 11.957 27.531 l 11.953 27.531 l
 12.703 27.031 13.188 26.223 13.277 25.328 c 13.367 24.434 13.047 23.547
 12.41 22.91 c 9.363 19.863 l 8.895 19.402 8.863 18.656 9.293 18.16 c 9.727
 17.664 10.469 17.59 10.988 17.992 c 14.258 20.445 l 14.715 20.785 15.32
 20.84 15.828 20.586 c 16.293 20.352 16.844 20.379 17.289 20.652 c 17.73
 20.926 18 21.406 18 21.926 c 18 23.293 l 18.004 23.754 18.141 24.203 18.395
 24.59 c 20.781 28.164 l 20.777 28.168 l 20.926 28.387 21.043 28.629 21.125
 28.883 c 23.316 35.453 l 23.316 35.449 l 23.727 36.676 24.871 37.5 26.164
 37.5 c 26.34 37.5 l 26.336 37.5 l 27.629 37.5 28.777 36.672 29.184 35.449
 c 31.375 28.883 l 31.457 28.629 31.574 28.387 31.723 28.168 c 34.094 24.605
 l 34.348 24.227 34.773 23.996 35.23 24 c 35.711 24 36.148 24.254 36.406
 24.652 c 38.078 27.277 41.297 31.5 43.5 31.5 c 43.621 31.496 l 41.703 36.5
 37.949 40.582 33.125 42.91 c 28.297 45.238 22.766 45.633 17.66 44.016 c
 12.551 42.398 8.254 38.891 5.645 34.211 c h
5.645 34.215 m f
Q Q
showpage
%%Trailer
%%EOF
