%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
12 0 m 5.371 0 0 5.371 0 12 c 0 18.629 5.371 24 12 24 c 18.629 24 24 18.629
 24 12 c 24 5.371 18.629 0 12 0 c 7.324 2.598 m 7.34 2.762 7.414 2.918 7.531
 3.031 c 7.699 3.199 7.773 3.434 7.738 3.668 c 7.699 3.898 7.555 4.098 7.344
 4.203 c 6.906 4.422 l 6.805 4.473 6.707 4.543 6.625 4.625 c 5.906 5.344
 l 5.504 5.746 4.91 5.887 4.371 5.707 c 4.34 5.695 l 4.117 5.621 3.879 5.602
 3.648 5.637 c 4.625 4.355 5.883 3.316 7.324 2.598 c 2.824 17.109 m 4.113
 16.785 l 4.781 16.617 5.25 16.016 5.25 15.328 c 5.25 15.051 l 5.25 14.551
 5.5 14.082 5.918 13.805 c 5.977 13.766 l 6.352 13.516 6.594 13.113 6.637
 12.664 c 6.684 12.219 6.523 11.773 6.207 11.457 c 4.68 9.93 l 4.445 9.703
 4.434 9.328 4.648 9.082 c 4.863 8.832 5.234 8.797 5.496 8.996 c 7.133 10.223
 l 7.129 10.223 l 7.355 10.391 7.66 10.418 7.914 10.293 c 8.148 10.176 8.422
 10.188 8.645 10.324 c 8.867 10.461 9 10.703 9 10.965 c 9 11.648 l 9 11.645
 l 9 11.875 9.07 12.102 9.195 12.297 c 10.387 14.086 l 10.391 14.082 l 10.461
 14.195 10.52 14.312 10.562 14.441 c 11.656 17.727 l 11.863 18.336 12.438
 18.75 13.082 18.75 c 13.168 18.75 l 13.812 18.75 14.387 18.336 14.594 17.723
 c 15.688 14.438 l 15.688 14.441 l 15.73 14.312 15.789 14.195 15.859 14.082
 c 17.047 12.301 l 17.047 12.305 l 17.172 12.113 17.387 12 17.613 12 c 17.852
 12 18.074 12.125 18.203 12.328 c 19.039 13.641 20.648 15.75 21.75 15.75
 c 21.809 15.75 l 20.352 19.559 16.82 22.18 12.75 22.473 c 8.68 22.762 4.809
 20.672 2.824 17.105 c h
2.824 17.109 m f
Q Q
showpage
%%Trailer
%%EOF
