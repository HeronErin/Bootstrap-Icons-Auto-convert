%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 141.078 0 92.242 20.227 56.234 56.234 c 20.227 92.242 0 141.078
 0 192 c 0 242.922 20.227 291.758 56.234 327.766 c 92.242 363.773 141.078
 384 192 384 c 242.922 384 291.758 363.773 327.766 327.766 c 363.773 291.758
 384 242.922 384 192 c 384 141.078 363.773 92.242 327.766 56.234 c 291.758
 20.227 242.922 0 192 0 c 117.168 41.543 m 117.449 44.191 118.637 46.656
 120.527 48.527 c 123.188 51.184 124.406 54.953 123.809 58.66 c 123.207 
62.371 120.863 65.566 117.504 67.246 c 110.52 70.75 l 110.52 70.754 l 108.848
 71.574 107.32 72.668 106.008 73.992 c 94.488 85.512 l 91.34 88.664 87.375
 90.875 83.035 91.902 c 78.699 92.93 74.164 92.727 69.938 91.32 c 69.457
 91.152 l 65.887 89.969 62.09 89.641 58.367 90.191 c 73.977 69.68 94.094
 53.035 117.168 41.543 c 45.168 273.719 m 65.809 268.535 l 71.004 267.242
 75.613 264.246 78.91 260.027 c 82.207 255.809 84 250.609 84 245.258 c 84
 240.84 l 84 232.816 88.008 225.324 94.68 220.871 c 95.641 220.246 l 101.629
 216.258 105.512 209.793 106.219 202.633 c 106.926 195.473 104.379 188.371
 99.289 183.289 c 74.902 158.902 l 71.148 155.227 70.906 149.258 74.355 
145.289 c 77.801 141.32 83.746 140.723 87.91 143.93 c 114.07 163.562 l 114.07
 163.559 l 117.707 166.281 122.562 166.715 126.625 164.688 c 130.344 162.824
 134.766 163.02 138.305 165.207 c 141.844 167.391 144 171.254 144 175.414
 c 144 186.336 l 144.027 190.031 145.117 193.637 147.145 196.727 c 166.223
 225.336 l 167.402 227.109 168.336 229.027 169.008 231.047 c 186.527 283.605
 l 186.527 283.609 l 188.125 288.383 191.184 292.539 195.27 295.48 c 199.359
 298.422 204.27 300.004 209.305 300 c 210.695 300 l 215.734 300 220.648 
298.418 224.734 295.469 c 228.824 292.523 231.879 288.363 233.473 283.586
 c 250.992 231.051 l 250.992 231.047 l 251.664 229.027 252.598 227.109 253.777
 225.336 c 272.762 196.848 l 274.77 193.805 278.184 191.98 281.832 192 c
 285.672 192 289.176 194.016 291.238 197.23 c 304.605 218.23 330.359 252
 348 252 c 348.961 251.977 l 333.641 292.004 303.605 324.668 264.996 343.285
 c 226.391 361.906 182.129 365.07 141.266 352.133 c 100.406 339.199 66.027
 311.141 45.168 273.695 c h
45.168 273.719 m f
Q Q
showpage
%%Trailer
%%EOF
