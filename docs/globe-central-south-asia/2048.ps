%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 564.312 0 368.969 80.914 224.941 224.941 c 80.914 368.969 0 564.312
 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 368.969 1455.086 564.312
 1536 768 1536 c 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086
 1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059
 224.941 c 1167.031 80.914 971.688 0 768 0 c 468.672 166.176 m 469.793 176.762
 474.539 186.633 482.113 194.113 c 492.746 204.73 497.625 219.812 495.23
 234.648 c 492.832 249.484 483.453 262.262 470.016 268.992 c 442.078 283.008
 l 435.387 286.297 429.289 290.676 424.031 295.969 c 377.953 342.047 l 365.352
 354.656 349.492 363.508 332.148 367.609 c 314.801 371.715 296.656 370.906
 279.742 365.281 c 277.82 364.609 l 277.824 364.609 l 263.547 359.871 248.352
 358.555 233.473 360.77 c 295.906 278.719 376.383 212.137 468.672 166.176
 c 180.672 1094.879 m 263.23 1074.145 l 284.008 1068.961 302.457 1056.98
 315.645 1040.109 c 328.828 1023.234 335.992 1002.438 336 981.023 c 336 
963.359 l 335.996 931.27 352.023 901.297 378.719 883.488 c 382.559 880.992
 l 406.512 865.035 422.043 839.172 424.871 810.527 c 427.695 781.887 417.523
 753.484 397.152 733.152 c 299.617 635.617 l 289.875 626.074 285.703 612.207
 288.566 598.875 c 291.426 585.547 300.926 574.613 313.723 569.91 c 326.523
 565.211 340.84 567.402 351.648 575.711 c 456.289 654.238 l 463.414 659.574
 471.887 662.82 480.754 663.617 c 489.617 664.414 498.531 662.73 506.496
 658.754 c 521.375 651.297 539.055 652.078 553.215 660.824 c 567.379 669.566
 576 685.02 576 701.664 c 576 745.344 l 576.105 760.121 580.473 774.555 
588.574 786.91 c 664.895 901.344 l 669.605 908.434 673.348 916.117 676.031
 924.191 c 746.109 1134.43 l 746.113 1134.434 l 752.496 1153.539 764.73 
1170.152 781.082 1181.918 c 797.434 1193.688 817.07 1200.012 837.215 1200
 c 842.785 1200 l 862.941 1200.004 882.586 1193.664 898.938 1181.879 c 915.293
 1170.094 927.52 1153.461 933.887 1134.336 c 1003.965 924.191 l 1003.969
 924.191 l 1006.652 916.117 1010.395 908.434 1015.105 901.344 c 1091.043
 787.391 l 1091.039 787.391 l 1099.082 775.215 1112.734 767.918 1127.328
 768 c 1142.688 768 1156.703 776.062 1164.961 788.93 c 1218.434 872.93 1321.441
 1008 1392 1008 c 1395.84 1007.902 l 1334.559 1168.023 1214.414 1298.676
 1059.988 1373.148 c 905.562 1447.617 728.52 1460.277 565.066 1408.531 c
 401.617 1356.789 264.109 1244.555 180.672 1094.785 c h
180.672 1094.879 m f
Q Q
showpage
%%Trailer
%%EOF
