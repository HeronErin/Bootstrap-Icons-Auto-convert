%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 0 m 61.703 0 30.012 18.297 12.863 48 c -4.289 77.703 -4.289 114.297 
12.863 144 c 30.012 173.703 61.703 192 96 192 c 130.297 192 161.988 173.703
 179.137 144 c 196.289 114.297 196.289 77.703 179.137 48 c 161.988 18.297
 130.297 0 96 0 c 58.586 20.773 m 58.723 22.094 59.316 23.328 60.266 24.266
 c 61.594 25.59 62.203 27.477 61.902 29.332 c 61.605 31.184 60.43 32.781
 58.754 33.625 c 55.262 35.379 l 55.262 35.375 l 54.422 35.785 53.66 36.336
 53.004 36.996 c 47.242 42.758 l 44.031 45.969 39.281 47.094 34.969 45.66
 c 34.73 45.574 l 34.727 45.574 l 32.941 44.984 31.043 44.82 29.184 45.098
 c 36.988 34.84 47.047 26.516 58.586 20.773 c 22.586 136.863 m 32.906 134.27
 l 32.902 134.27 l 38.246 132.934 42 128.137 42 122.629 c 42 120.422 l 42
 116.41 44.004 112.664 47.34 110.438 c 47.82 110.125 l 50.812 108.129 52.754
 104.895 53.109 101.316 c 53.461 97.734 52.191 94.188 49.645 91.645 c 37.453
 79.453 l 35.574 77.613 35.453 74.629 37.176 72.645 c 38.902 70.66 41.871
 70.363 43.957 71.965 c 57.035 81.781 l 58.852 83.141 61.281 83.359 63.312
 82.344 c 65.172 81.41 67.383 81.512 69.152 82.602 c 70.922 83.695 72 85.629
 72 87.707 c 72 93.168 l 72.012 95.016 72.559 96.82 73.57 98.363 c 83.109
 112.668 l 83.113 112.668 l 83.699 113.555 84.168 114.516 84.504 115.523
 c 93.266 141.805 l 94.902 146.703 99.488 150.004 104.652 150 c 105.348 
150 l 110.516 150 115.102 146.695 116.734 141.793 c 125.496 115.523 l 125.832
 114.516 126.301 113.555 126.887 112.668 c 136.379 98.426 l 137.387 96.902
 139.09 95.988 140.914 96 c 142.836 96 144.586 97.008 145.617 98.617 c 152.301
 109.117 165.176 126 173.996 126 c 174.477 125.988 l 174.48 125.988 l 166.82
 146.004 151.801 162.336 132.5 171.645 c 113.195 180.953 91.066 182.535 
70.633 176.066 c 50.203 169.598 33.016 155.57 22.586 136.848 c h
22.586 136.863 m f
Q Q
showpage
%%Trailer
%%EOF
