%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 1.344 0 0 1.344 0 3 c 0 4.656 1.344 6 3 6 c 4.656 6 6 4.656 6 3 c
 6 1.344 4.656 0 3 0 c 1.832 0.648 m 1.836 0.691 1.855 0.73 1.883 0.758 
c 1.973 0.848 1.949 0.996 1.836 1.051 c 1.727 1.105 l 1.699 1.117 1.676 
1.137 1.656 1.156 c 1.477 1.336 l 1.375 1.438 1.227 1.473 1.094 1.426 c 
1.086 1.422 l 1.086 1.426 l 1.031 1.406 0.969 1.402 0.91 1.41 c 1.156 1.09
 1.469 0.828 1.832 0.648 c 0.707 4.277 m 1.031 4.195 l 1.027 4.195 l 1.195
 4.152 1.312 4.004 1.312 3.832 c 1.312 3.762 l 1.312 3.637 1.375 3.52 1.48
 3.449 c 1.496 3.441 l 1.59 3.379 1.648 3.277 1.66 3.168 c 1.672 3.055 1.633
 2.941 1.551 2.863 c 1.172 2.484 l 1.031 2.348 1.219 2.129 1.375 2.25 c 
1.785 2.559 l 1.781 2.555 l 1.84 2.598 1.914 2.605 1.977 2.574 c 2.102 2.512
 2.25 2.602 2.25 2.742 c 2.25 2.914 l 2.25 2.91 l 2.25 2.969 2.266 3.027
 2.301 3.074 c 2.598 3.52 l 2.617 3.547 2.629 3.578 2.641 3.609 c 2.914 
4.43 l 2.965 4.586 3.109 4.688 3.27 4.688 c 3.293 4.688 l 3.453 4.688 3.598
 4.586 3.648 4.43 c 3.922 3.609 l 3.934 3.578 3.945 3.547 3.965 3.52 c 4.262
 3.074 l 4.293 3.027 4.348 3 4.402 3 c 4.461 3 4.516 3.031 4.551 3.082 c
 4.758 3.41 5.16 3.938 5.438 3.938 c 5.453 3.938 l 5.086 4.891 4.203 5.547
 3.188 5.617 c 2.168 5.691 1.203 5.168 0.707 4.277 c h
0.707 4.277 m f
Q Q
showpage
%%Trailer
%%EOF
