%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 282.156 0 184.484 40.457 112.473 112.473 c 40.457 184.484 0 282.156
 0 384 c 0 485.844 40.457 583.516 112.473 655.527 c 184.484 727.543 282.156
 768 384 768 c 485.844 768 583.516 727.543 655.527 655.527 c 727.543 583.516
 768 485.844 768 384 c 768 282.156 727.543 184.484 655.527 112.473 c 583.516
 40.457 485.844 0 384 0 c 234.336 83.09 m 234.895 88.379 237.27 93.316 241.055
 97.055 c 246.371 102.367 248.812 109.906 247.613 117.324 c 246.418 124.742
 241.727 131.129 235.008 134.496 c 221.039 141.504 l 217.691 143.148 214.645
 145.34 212.016 147.984 c 188.977 171.023 l 182.676 177.328 174.746 181.754
 166.074 183.805 c 157.402 185.855 148.328 185.453 139.871 182.641 c 138.91
 182.305 l 131.773 179.934 124.176 179.277 116.734 180.383 c 147.953 139.359
 188.191 106.07 234.336 83.09 c 90.336 547.441 m 131.617 537.074 l 131.617
 537.07 l 142.004 534.48 151.23 528.492 157.82 520.055 c 164.414 511.617
 167.996 501.219 168 490.512 c 168 481.68 l 167.996 465.633 176.012 450.648
 189.359 441.742 c 191.281 440.496 l 203.258 432.516 211.02 419.586 212.434
 405.266 c 213.848 390.941 208.762 376.742 198.574 366.574 c 149.809 317.809
 l 144.938 313.039 142.852 306.105 144.281 299.438 c 145.715 292.773 150.461
 287.305 156.863 284.957 c 163.262 282.605 170.418 283.699 175.824 287.855
 c 228.145 327.121 l 231.707 329.785 235.941 331.41 240.375 331.809 c 244.809
 332.207 249.266 331.363 253.246 329.375 c 260.688 325.648 269.527 326.039
 276.609 330.41 c 283.688 334.781 288 342.512 288 350.832 c 288 372.672 
l 288.055 380.062 290.234 387.277 294.289 393.457 c 332.449 450.672 l 334.801
 454.215 336.676 458.059 338.016 462.098 c 373.055 567.219 l 373.055 567.215
 l 376.25 576.77 382.367 585.074 390.543 590.961 c 398.715 596.844 408.535
 600.004 418.609 600 c 421.395 600 l 421.391 600 l 431.469 600.004 441.293
 596.832 449.469 590.941 c 457.645 585.047 463.758 576.73 466.945 567.168
 c 501.984 462.098 l 503.324 458.059 505.199 454.215 507.551 450.672 c 545.52
 393.695 l 549.543 387.605 556.367 383.961 563.664 384 c 571.344 384 578.352
 388.031 582.48 394.465 c 609.215 436.465 660.719 504 696 504 c 697.922 
503.953 l 667.277 584.012 607.207 649.34 529.996 686.574 c 452.781 723.809
 364.258 730.137 282.535 704.266 c 200.809 678.395 132.055 622.277 90.336
 547.391 c h
90.336 547.441 m f
Q Q
showpage
%%Trailer
%%EOF
