%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 192 m 141.078 192 92.242 212.227 56.234 248.234 c 20.227 284.242 0 
333.078 0 384 c 0 1152.961 l 0.254 1203.715 20.594 1252.305 56.574 1288.105
 c 92.555 1323.902 141.246 1344 192 1344 c 720 1344 l 737.148 1344 752.996
 1334.852 761.57 1320 c 770.145 1305.148 770.145 1286.852 761.57 1272 c 
752.996 1257.148 737.148 1248 720 1248 c 192 1248 l 170.867 1248.004 150.324
 1241.031 133.559 1228.172 c 116.793 1215.309 104.738 1197.273 99.266 1176.863
 c 640.707 843.648 l 768 919.969 l 1440 516.77 l 1440 816 l 1440 833.148
 1449.148 848.996 1464 857.57 c 1478.852 866.145 1497.148 866.145 1512 857.57
 c 1526.852 848.996 1536 833.148 1536 816 c 1536 384 l 1536 350.297 1527.129
 317.188 1510.277 288 c 1493.426 258.812 1469.188 234.574 1440 217.723 c
 1410.812 200.871 1377.703 192 1344 192 c h
547.969 787.969 m 96 1066.078 l 96 516.77 l h
96 404.832 m 96 384 l 96 358.539 106.113 334.121 124.117 316.117 c 142.121
 298.113 166.539 288 192 288 c 1344 288 l 1369.461 288 1393.879 298.113 
1411.883 316.117 c 1429.887 334.121 1440 358.539 1440 384 c 1440 404.832
 l 768 808.031 l h
96 404.832 m f
1367.711 1369.824 m 1464.672 1369.824 1520.062 1287.551 1520.062 1175.426
 c 1520.062 1155.266 l 1520.062 1001.281 1405.441 864 1201.922 864 c 1198.562
 864 l 1000.32 864 864 994.559 864 1193.473 c 864 1214.016 l 864 1422.719
 1002.047 1536 1186.367 1536 c 1190.59 1536 l 1247.613 1536 1288.316 1528.895
 1309.344 1519.199 c 1309.344 1449.121 l 1285.824 1459.68 1244.734 1466.402
 1196.062 1466.402 c 1191.84 1466.402 l 1063.777 1466.402 945.023 1390.754
 945.023 1211.523 c 945.023 1196.453 l 945.023 1037.383 1046.59 934.949 
1198.465 934.949 c 1202.305 934.949 l 1349.664 934.949 1440.77 1035.75 1440.77
 1158.246 c 1440.77 1169.574 l 1440.77 1263.176 1409.664 1303.016 1379.426
 1303.016 c 1357.152 1303.016 1340.066 1288.809 1340.066 1262.695 c 1340.066
 1052.457 l 1253.09 1052.457 l 1253.09 1107.082 l 1250.211 1107.082 l 1242.148
 1078.473 1214.883 1046.602 1158.625 1046.602 c 1083.938 1046.602 1037.762
 1099.883 1037.762 1181 c 1037.762 1231.688 l 1037.762 1317.32 1084.801 
1369.352 1158.723 1369.352 c 1203.938 1369.352 1244.738 1347.559 1256.066
 1307.625 c 1260.195 1307.625 l 1271.523 1347.945 1319.426 1369.832 1367.715
 1369.832 c 1132.227 1217.383 m 1132.227 1195.59 l 1132.227 1143.176 1154.02
 1119.652 1187.234 1119.652 c 1215.746 1119.652 1242.145 1138.086 1242.145
 1187.621 c 1242.145 1222.852 l 1242.145 1277.859 1217.855 1294.277 1188
 1294.277 c 1154.016 1294.277 1132.223 1273.637 1132.223 1217.477 c h
1132.227 1217.383 m f
Q Q
showpage
%%Trailer
%%EOF
