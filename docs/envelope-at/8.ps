%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.75 0.75 m 0.336 0.75 0 1.086 0 1.5 c 0 4.504 l 0.004 4.918 0.336 5.25
 0.75 5.25 c 2.812 5.25 l 3.062 5.25 3.062 4.875 2.812 4.875 c 0.75 4.875
 l 0.582 4.875 0.434 4.762 0.387 4.598 c 2.5 3.297 l 3 3.594 l 5.625 2.02
 l 5.625 3.188 l 5.625 3.438 6 3.438 6 3.188 c 6 1.5 l 6 1.301 5.922 1.109
 5.781 0.969 c 5.641 0.828 5.449 0.75 5.25 0.75 c h
2.141 3.078 m 0.375 4.164 l 0.375 2.02 l h
0.375 1.582 m 0.375 1.5 l 0.375 1.293 0.543 1.125 0.75 1.125 c 5.25 1.125
 l 5.348 1.125 5.445 1.164 5.516 1.234 c 5.586 1.305 5.625 1.402 5.625 1.5
 c 5.625 1.582 l 3 3.156 l h
0.375 1.582 m f
5.344 5.352 m 5.723 5.352 5.938 5.031 5.938 4.594 c 5.938 4.516 l 5.938
 3.91 5.488 3.375 4.695 3.375 c 4.684 3.375 l 3.906 3.375 3.375 3.887 3.375
 4.66 c 3.375 4.742 l 3.375 5.559 3.914 6 4.633 6 c 4.648 6 l 4.871 6 5.031
 5.973 5.113 5.934 c 5.113 5.66 l 5.02 5.703 4.859 5.727 4.672 5.727 c 4.656
 5.727 l 4.156 5.727 3.691 5.43 3.691 4.73 c 3.691 4.672 l 3.691 4.051 4.09
 3.648 4.68 3.648 c 4.695 3.648 l 5.27 3.648 5.625 4.043 5.625 4.52 c 5.625
 4.562 l 5.625 4.93 5.504 5.082 5.387 5.082 c 5.301 5.082 5.234 5.027 5.234
 4.926 c 5.234 4.105 l 4.895 4.105 l 4.895 4.32 l 4.883 4.32 l 4.852 4.207
 4.746 4.086 4.523 4.086 c 4.23 4.086 4.051 4.293 4.051 4.609 c 4.051 4.809
 l 4.051 5.145 4.234 5.348 4.523 5.348 c 4.699 5.348 4.859 5.262 4.902 5.105
 c 4.918 5.105 l 4.961 5.262 5.148 5.348 5.34 5.348 c 4.422 4.754 m 4.422
 4.668 l 4.422 4.465 4.508 4.371 4.637 4.371 c 4.75 4.371 4.852 4.441 4.852
 4.637 c 4.852 4.773 l 4.852 4.988 4.758 5.051 4.641 5.051 c 4.508 5.051
 4.422 4.969 4.422 4.75 c h
4.422 4.754 m f
Q Q
showpage
%%Trailer
%%EOF
