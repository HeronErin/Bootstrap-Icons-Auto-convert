%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
288.098 264 m 288.098 289.723 274.371 313.492 252.098 326.355 c 229.82 
339.215 202.371 339.215 180.098 326.355 c 157.82 313.492 144.098 289.723
 144.098 264 c 144.098 238.277 157.82 214.508 180.098 201.645 c 202.371 
188.785 229.82 188.785 252.098 201.645 c 274.371 214.508 288.098 238.277
 288.098 264 c f
72 96 m 52.906 96 34.59 103.586 21.09 117.09 c 7.586 130.59 0 148.906 0
 168 c 0 600 l 0 619.094 7.586 637.41 21.09 650.91 c 34.59 664.414 52.906
 672 72 672 c 696 672 l 715.094 672 733.41 664.414 746.91 650.91 c 760.414
 637.41 768 619.094 768 600 c 768 168 l 768 148.906 760.414 130.59 746.91
 117.09 c 733.41 103.586 715.094 96 696 96 c h
696 144 m 702.363 144 708.469 146.527 712.969 151.031 c 717.473 155.531
 720 161.637 720 168 c 720 456 l 538.801 362.543 l 534.297 360.289 529.203
 359.508 524.23 360.309 c 519.262 361.109 514.668 363.453 511.105 367.008
 c 333.027 545.086 l 205.348 460.031 l 205.344 460.031 l 200.734 456.961
 195.203 455.582 189.691 456.125 c 184.18 456.668 179.027 459.098 175.105
 463.008 c 48.098 576 l 48.098 601.922 l 48 600 l 48 168 l 48 161.637 50.527
 155.531 55.031 151.031 c 59.531 146.527 65.637 144 72 144 c h
696 144 m f
Q Q
showpage
%%Trailer
%%EOF
