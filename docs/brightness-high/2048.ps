%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1056 m 691.617 1056 618.363 1025.656 564.352 971.648 c 510.344 917.637
 480 844.383 480 768 c 480 691.617 510.344 618.363 564.352 564.352 c 618.363
 510.344 691.617 480 768 480 c 844.383 480 917.637 510.344 971.648 564.352
 c 1025.656 618.363 1056 691.617 1056 768 c 1056 844.383 1025.656 917.637
 971.648 971.648 c 917.637 1025.656 844.383 1056 768 1056 c 768 1152 m 869.844
 1152 967.516 1111.543 1039.527 1039.527 c 1111.543 967.516 1152 869.844
 1152 768 c 1152 666.156 1111.543 568.484 1039.527 496.473 c 967.516 424.457
 869.844 384 768 384 c 666.156 384 568.484 424.457 496.473 496.473 c 424.457
 568.484 384 666.156 384 768 c 384 869.844 424.457 967.516 496.473 1039.527
 c 568.484 1111.543 666.156 1152 768 1152 c 768 0 m 780.73 0 792.938 5.059
 801.941 14.059 c 810.941 23.062 816 35.27 816 48 c 816 240 l 816 257.148
 806.852 272.996 792 281.57 c 777.148 290.145 758.852 290.145 744 281.57
 c 729.148 272.996 720 257.148 720 240 c 720 48 l 720 35.27 725.059 23.062
 734.059 14.059 c 743.062 5.059 755.27 0 768 0 c 768 1248 m 780.73 1248 
792.938 1253.059 801.941 1262.059 c 810.941 1271.062 816 1283.27 816 1296
 c 816 1488 l 816 1505.148 806.852 1520.996 792 1529.57 c 777.148 1538.145
 758.852 1538.145 744 1529.57 c 729.148 1520.996 720 1505.148 720 1488 c
 720 1296 l 720 1283.27 725.059 1271.062 734.059 1262.059 c 743.062 1253.059
 755.27 1248 768 1248 c 1536 768 m 1536 780.73 1530.941 792.938 1521.941
 801.941 c 1512.938 810.941 1500.73 816 1488 816 c 1296 816 l 1278.852 816
 1263.004 806.852 1254.43 792 c 1245.855 777.148 1245.855 758.852 1254.43
 744 c 1263.004 729.148 1278.852 720 1296 720 c 1488 720 l 1500.73 720 1512.938
 725.059 1521.941 734.059 c 1530.941 743.062 1536 755.27 1536 768 c 288 
768 m 288 780.73 282.941 792.938 273.941 801.941 c 264.938 810.941 252.73
 816 240 816 c 48 816 l 30.852 816 15.004 806.852 6.43 792 c -2.145 777.148
 -2.145 758.852 6.43 744 c 15.004 729.148 30.852 720 48 720 c 240 720 l 
252.73 720 264.938 725.059 273.941 734.059 c 282.941 743.062 288 755.27 
288 768 c 1311.07 224.93 m 1320.07 233.93 1325.125 246.137 1325.125 258.863
 c 1325.125 271.594 1320.07 283.797 1311.07 292.801 c 1175.328 428.641 l
 1163.188 440.766 1145.5 445.488 1128.93 441.039 c 1112.359 436.586 1099.422
 423.629 1094.992 407.055 c 1090.562 390.477 1095.316 372.797 1107.457 360.672
 c 1243.199 224.93 l 1252.203 215.93 1264.406 210.875 1277.137 210.875 c
 1289.863 210.875 1302.07 215.93 1311.07 224.93 c 428.543 1107.457 m 437.543
 1116.457 442.598 1128.664 442.598 1141.391 c 442.598 1154.121 437.543 1166.328
 428.543 1175.328 c 292.801 1311.07 l 280.609 1322.848 263.109 1327.32 246.762
 1322.836 c 230.414 1318.355 217.645 1305.586 213.164 1289.238 c 208.68 
1272.891 213.152 1255.391 224.93 1243.199 c 360.672 1107.457 l 369.672 1098.457
 381.879 1093.402 394.609 1093.402 c 407.336 1093.402 419.543 1098.457 428.543
 1107.457 c 1311.07 1311.074 m 1311.07 1311.07 l 1302.07 1320.07 1289.863
 1325.125 1277.137 1325.125 c 1264.406 1325.125 1252.203 1320.07 1243.199
 1311.07 c 1107.457 1175.328 l 1095.68 1163.137 1091.207 1145.637 1095.691
 1129.289 c 1100.172 1112.941 1112.941 1100.172 1129.289 1095.691 c 1145.637
 1091.207 1163.137 1095.68 1175.328 1107.457 c 1311.07 1243.199 l 1320.07
 1252.203 1325.125 1264.406 1325.125 1277.137 c 1325.125 1289.863 1320.07
 1302.07 1311.07 1311.07 c 428.543 428.641 m 419.543 437.637 407.336 442.695
 394.609 442.695 c 381.879 442.695 369.672 437.637 360.672 428.641 c 224.93
 292.801 l 215.668 283.855 210.387 271.566 210.277 258.691 c 210.164 245.816
 215.23 233.438 224.332 224.332 c 233.438 215.23 245.816 210.164 258.691
 210.277 c 271.566 210.387 283.855 215.668 292.801 224.93 c 428.543 360.672
 l 437.57 369.676 442.645 381.906 442.645 394.656 c 442.645 407.406 437.57
 419.637 428.543 428.641 c f
Q Q
showpage
%%Trailer
%%EOF
