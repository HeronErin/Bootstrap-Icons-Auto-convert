%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
21.926 7.969 m 21.207 7.047 20.129 6.477 18.965 6.406 c 17.801 6.332 16.66
 6.766 15.836 7.59 c 9.629 13.801 l 6.73 16.703 5.664 20.816 6.93 24.422
 c 12.191 39.344 20.738 52.891 31.938 64.066 c 43.113 75.27 56.664 83.816
 71.586 89.074 c 75.191 90.34 79.301 89.273 82.207 86.375 c 88.41 80.172
 l 89.234 79.348 89.668 78.207 89.594 77.043 c 89.523 75.875 88.953 74.797
 88.031 74.082 c 74.188 63.316 l 74.191 63.316 l 73.203 62.555 71.922 62.285
 70.711 62.586 c 57.57 65.867 l 54.004 66.754 50.23 65.707 47.629 63.113
 c 32.891 48.371 l 30.293 45.77 29.246 42 30.133 38.43 c 33.422 25.289 l
 33.723 24.078 33.453 22.797 32.688 21.809 c h
11.305 3.066 m 13.43 0.941 16.363 -0.168 19.359 0.02 c 22.359 0.207 25.133
 1.672 26.977 4.043 c 37.738 17.879 l 39.711 20.418 40.41 23.723 39.629 
26.844 c 36.348 39.984 l 36.004 41.367 36.41 42.832 37.414 43.844 c 52.156
 58.586 l 53.172 59.594 54.637 59.996 56.023 59.652 c 69.156 56.371 l 72.277
 55.594 75.578 56.289 78.121 58.262 c 91.957 69.027 l 96.93 72.898 97.387
 80.246 92.934 84.691 c 86.73 90.895 l 82.289 95.336 75.656 97.285 69.469
 95.105 c 53.633 89.543 39.254 80.477 27.406 68.586 c 15.52 56.742 6.453
 42.367 0.887 26.531 c -1.285 20.352 0.664 13.711 5.105 9.27 c h
11.305 3.066 m f
66.875 9.875 m 67.438 9.312 68.203 8.996 69 8.996 c 69.797 8.996 70.562
 9.312 71.125 9.875 c 78 16.758 l 84.875 9.875 l 86.051 8.703 87.949 8.703
 89.125 9.875 c 90.297 11.051 90.297 12.949 89.125 14.125 c 82.242 21 l 
89.125 27.875 l 90.297 29.051 90.297 30.949 89.125 32.125 c 87.949 33.297
 86.051 33.297 84.875 32.125 c 78 25.242 l 71.125 32.125 l 69.949 33.297
 68.051 33.297 66.875 32.125 c 65.703 30.949 65.703 29.051 66.875 27.875
 c 73.758 21 l 66.875 14.125 l 66.312 13.562 65.996 12.797 65.996 12 c 65.996
 11.203 66.312 10.438 66.875 9.875 c f*
Q Q
showpage
%%Trailer
%%EOF
