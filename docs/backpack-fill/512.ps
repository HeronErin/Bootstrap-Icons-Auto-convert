%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
120 312 m 120 240 l 216 240 l 216 252 l 216 258.629 221.371 264 228 264
 c 234.629 264 240 258.629 240 252 c 240 240 l 264 240 l 264 312 l h
120 312 m f
144 48 m 144 56.184 l 88.078 75.961 48 129.312 48 192 c 48 324 l 48 339.914
 54.32 355.176 65.574 366.426 c 76.824 377.68 92.086 384 108 384 c 276 384
 l 291.914 384 307.176 377.68 318.426 366.426 c 329.68 355.176 336 339.914
 336 324 c 336 192 l 336.012 162.211 326.785 133.156 309.59 108.832 c 292.398
 84.508 268.082 66.113 240 56.184 c 240 48 l 240 30.852 230.852 15.004 216
 6.43 c 201.148 -2.145 182.852 -2.145 168 6.43 c 153.148 15.004 144 30.852
 144 48 c 192 24 m 198.363 24 204.469 26.527 208.969 31.031 c 213.473 35.531
 216 41.637 216 48 c 216 49.992 l 200.113 47.305 183.887 47.305 168 49.992
 c 168 48 l 168 41.637 170.527 35.531 175.031 31.031 c 179.531 26.527 185.637
 24 192 24 c 192 96 m 215.094 95.996 237.414 104.316 254.871 119.438 c 272.328
 134.555 283.75 155.461 287.039 178.32 c 287.547 181.5 286.754 184.746 284.84
 187.336 c 282.93 189.926 280.055 191.637 276.871 192.086 c 273.684 192.539
 270.449 191.691 267.895 189.734 c 265.336 187.777 263.676 184.875 263.281
 181.68 c 259.992 158.602 245.734 138.543 225.02 127.855 c 204.305 117.164
 179.695 117.164 158.98 127.855 c 138.266 138.543 124.008 158.602 120.719
 181.68 c 120.324 184.875 118.664 187.777 116.105 189.734 c 113.551 191.691
 110.316 192.539 107.129 192.086 c 103.945 191.637 101.07 189.926 99.16 
187.336 c 97.246 184.746 96.453 181.5 96.961 178.32 c 100.25 155.461 111.672
 134.555 129.129 119.438 c 146.586 104.316 168.906 95.996 192 96 c 108 216
 m 276 216 l 279.184 216 282.234 217.266 284.484 219.516 c 286.734 221.766
 288 224.816 288 228 c 288 324 l 288 327.184 286.734 330.234 284.484 332.484
 c 282.234 334.734 279.184 336 276 336 c 108 336 l 101.371 336 96 330.629
 96 324 c 96 228 l 96 221.371 101.371 216 108 216 c f
Q Q
showpage
%%Trailer
%%EOF
