%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 36 48 rectclip
1 0 0 -1 0 48 cm q
0 g
15 39 m 15 30 l 27 30 l 27 31.5 l 27 32.328 27.672 33 28.5 33 c 29.328 
33 30 32.328 30 31.5 c 30 30 l 33 30 l 33 39 l h
15 39 m f
18 6 m 18 7.023 l 11.012 9.496 6 16.164 6 24 c 6 40.5 l 6 42.488 6.789 
44.398 8.195 45.805 c 9.602 47.211 11.512 48 13.5 48 c 34.5 48 l 36.488 
48 38.398 47.211 39.805 45.805 c 41.211 44.398 42 42.488 42 40.5 c 42 24
 l 42 20.277 40.848 16.645 38.699 13.605 c 36.551 10.562 33.512 8.266 30
 7.023 c 30 6 l 30 2.688 27.312 0 24 0 c 20.688 0 18 2.688 18 6 c 24 3 m
 24.797 3 25.559 3.316 26.121 3.879 c 26.684 4.441 27 5.203 27 6 c 27 6.25
 l 25.016 5.914 22.984 5.914 21 6.25 c 21 6 l 21 4.344 22.344 3 24 3 c 24
 12 m 29.969 12 35.031 16.383 35.879 22.289 c 35.941 22.688 35.844 23.094
 35.605 23.418 c 35.367 23.742 35.008 23.953 34.609 24.012 c 34.211 24.066
 33.805 23.961 33.488 23.715 c 33.168 23.473 32.961 23.109 32.91 22.711 
c 32.277 18.273 28.48 14.98 24 14.98 c 19.52 14.98 15.723 18.273 15.09 22.711
 c 15.039 23.109 14.832 23.473 14.512 23.715 c 14.195 23.961 13.789 24.066
 13.391 24.012 c 12.992 23.953 12.633 23.742 12.395 23.418 c 12.156 23.094
 12.059 22.688 12.121 22.289 c 12.969 16.383 18.031 12 24 12 c 13.5 27 m
 34.5 27 l 34.898 27 35.281 27.156 35.562 27.438 c 35.844 27.719 36 28.102
 36 28.5 c 36 40.5 l 36 40.898 35.844 41.281 35.562 41.562 c 35.281 41.844
 34.898 42 34.5 42 c 13.5 42 l 12.672 42 12 41.328 12 40.5 c 12 28.5 l 12
 27.672 12.672 27 13.5 27 c f
Q Q
showpage
%%Trailer
%%EOF
