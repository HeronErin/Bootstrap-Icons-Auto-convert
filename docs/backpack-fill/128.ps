%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
30 78 m 30 60 l 54 60 l 54 63 l 54 64.656 55.344 66 57 66 c 58.656 66 60
 64.656 60 63 c 60 60 l 66 60 l 66 78 l h
30 78 m f
36 12 m 36 14.047 l 22.02 18.988 12 32.328 12 48 c 12 81 l 12 84.977 13.582
 88.793 16.395 91.605 c 19.207 94.418 23.023 96 27 96 c 69 96 l 72.977 96
 76.793 94.418 79.605 91.605 c 82.418 88.793 84 84.977 84 81 c 84 48 l 84.004
 40.555 81.695 33.289 77.398 27.207 c 73.098 21.125 67.02 16.527 60 14.047
 c 60 12 l 60 5.371 54.629 0 48 0 c 41.371 0 36 5.371 36 12 c 48 6 m 49.59
 6 51.117 6.633 52.242 7.758 c 53.367 8.883 54 10.41 54 12 c 54 12.496 l
 50.027 11.828 45.973 11.828 42 12.496 c 42 12 l 42 8.688 44.688 6 48 6 
c 48 24 m 53.773 24 59.355 26.078 63.719 29.859 c 68.082 33.641 70.938 38.867
 71.762 44.578 c 71.887 45.375 71.688 46.188 71.211 46.836 c 70.73 47.48
 70.016 47.91 69.219 48.023 c 68.422 48.133 67.613 47.922 66.973 47.434 
c 66.336 46.945 65.918 46.219 65.82 45.422 c 64.996 39.652 61.434 34.637
 56.254 31.965 c 51.074 29.293 44.926 29.293 39.746 31.965 c 34.566 34.637
 31.004 39.652 30.18 45.422 c 30.082 46.219 29.664 46.945 29.027 47.434 
c 28.387 47.922 27.578 48.133 26.781 48.023 c 25.984 47.91 25.27 47.48 24.789
 46.836 c 24.312 46.188 24.113 45.375 24.238 44.578 c 25.062 38.867 27.918
 33.641 32.281 29.859 c 36.645 26.078 42.227 24 48 24 c 27 54 m 69 54 l 
69.797 54 70.559 54.316 71.121 54.879 c 71.684 55.441 72 56.203 72 57 c 
72 81 l 72 81.797 71.684 82.559 71.121 83.121 c 70.559 83.684 69.797 84 
69 84 c 27 84 l 25.344 84 24 82.656 24 81 c 24 57 l 24 55.344 25.344 54 
27 54 c f
Q Q
showpage
%%Trailer
%%EOF
