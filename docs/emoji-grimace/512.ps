%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
168 150 m 168 166.559 157.246 180 144 180 c 130.754 180 120 166.559 120
 150 c 120 133.441 130.754 120 144 120 c 157.246 120 168 133.441 168 150
 c 240 180 m 253.246 180 264 166.559 264 150 c 264 133.441 253.246 120 240
 120 c 226.754 120 216 133.441 216 150 c 216 166.559 226.754 180 240 180
 c 311.52 258 m 310.102 266.391 305.754 274.012 299.254 279.504 c 292.75
 284.996 284.512 288.004 276 288 c 108 288 l 97.414 288.004 87.363 283.348
 80.52 275.27 c 73.676 267.191 70.738 256.512 72.48 246.07 c 72.48 246 l
 73.898 237.609 78.246 229.988 84.746 224.496 c 91.25 219.004 99.488 215.996
 108 216 c 276 216 l 286.586 215.996 296.637 220.652 303.48 228.73 c 310.324
 236.809 313.262 247.488 311.52 257.93 c h
108 276 m 114 276 l 114 258 l 84.742 258 l 86.074 263.156 89.082 267.719
 93.293 270.98 c 97.504 274.238 102.676 276.004 108 276 c 276 276 m 281.324
 276.004 286.496 274.238 290.707 270.98 c 294.918 267.719 297.926 263.156
 299.258 258 c 270 258 l 270 276 l h
299.258 246 m 297.926 240.844 294.918 236.281 290.707 233.02 c 286.496 
229.762 281.324 227.996 276 228 c 270 228 l 270 246 l h
108 228 m 102.676 227.996 97.504 229.762 93.293 233.02 c 89.082 236.281
 86.074 240.844 84.742 246 c 114 246 l 114 228 l h
150 276 m 150 258 l 126 258 l 126 276 l h
162 276 m 186 276 l 186 258 l 162 258 l h
198 276 m 222 276 l 222 258 l 198 258 l h
234 276 m 258 276 l 258 258 l 234 258 l h
258 228 m 234 228 l 234 246 l 258 246 l h
222 228 m 198 228 l 198 246 l 222 246 l h
186 228 m 162 228 l 162 246 l 186 246 l h
150 228 m 126 228 l 126 246 l 150 246 l h
150 228 m f
192 384 m 242.922 384 291.758 363.773 327.766 327.766 c 363.773 291.758
 384 242.922 384 192 c 384 141.078 363.773 92.242 327.766 56.234 c 291.758
 20.227 242.922 0 192 0 c 141.078 0 92.242 20.227 56.234 56.234 c 20.227
 92.242 0 141.078 0 192 c 0 242.922 20.227 291.758 56.234 327.766 c 92.242
 363.773 141.078 384 192 384 c 192 360 m 147.445 360 104.711 342.301 73.207
 310.793 c 41.699 279.289 24 236.555 24 192 c 24 147.445 41.699 104.711 
73.207 73.207 c 104.711 41.699 147.445 24 192 24 c 236.555 24 279.289 41.699
 310.793 73.207 c 342.301 104.711 360 147.445 360 192 c 360 236.555 342.301
 279.289 310.793 310.793 c 279.289 342.301 236.555 360 192 360 c f
Q Q
showpage
%%Trailer
%%EOF
