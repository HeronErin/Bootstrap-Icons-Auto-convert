%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
51 30 m 51 28.344 49.656 27 48 27 c 46.344 27 45 28.344 45 30 c 33 30 l
 28.031 30 24 34.031 24 39 c 24 51 l 24 55.969 28.031 60 33 60 c 35.84 60
 l 33.156 68.051 l 32.867 68.816 32.906 69.664 33.254 70.398 c 33.605 71.133
 34.242 71.695 35.016 71.953 c 35.789 72.211 36.633 72.145 37.355 71.766
 c 38.078 71.387 38.617 70.73 38.844 69.949 c 42.16 60 l 45 60 l 45 66 l
 45 67.656 46.344 69 48 69 c 49.656 69 51 67.656 51 66 c 51 60 l 53.84 60
 l 57.156 69.949 l 57.383 70.73 57.922 71.387 58.645 71.766 c 59.367 72.145
 60.211 72.211 60.984 71.953 c 61.758 71.695 62.395 71.133 62.746 70.398
 c 63.094 69.664 63.133 68.816 62.844 68.051 c 60.16 60 l 63 60 l 67.969
 60 72 55.969 72 51 c 72 39 l 72 34.031 67.969 30 63 30 c h
30 39 m 30 37.344 31.344 36 33 36 c 63 36 l 63.797 36 64.559 36.316 65.121
 36.879 c 65.684 37.441 66 38.203 66 39 c 66 51 l 66 51.797 65.684 52.559
 65.121 53.121 c 64.559 53.684 63.797 54 63 54 c 33 54 l 31.344 54 30 52.656
 30 51 c h
30 39 m f
12 12 m 12 5.371 17.371 0 24 0 c 72 0 l 75.184 0 78.234 1.266 80.484 3.516
 c 82.734 5.766 84 8.816 84 12 c 84 84 l 84 87.184 82.734 90.234 80.484 
92.484 c 78.234 94.734 75.184 96 72 96 c 24 96 l 17.371 96 12 90.629 12 
84 c h
72 6 m 24 6 l 20.688 6 18 8.688 18 12 c 18 84 l 18 85.59 18.633 87.117 
19.758 88.242 c 20.883 89.367 22.41 90 24 90 c 72 90 l 73.59 90 75.117 89.367
 76.242 88.242 c 77.367 87.117 78 85.59 78 84 c 78 12 l 78 10.41 77.367 
8.883 76.242 7.758 c 75.117 6.633 73.59 6 72 6 c f
Q Q
showpage
%%Trailer
%%EOF
