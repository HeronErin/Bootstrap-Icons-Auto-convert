%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
102 60 m 102 56.688 99.312 54 96 54 c 92.688 54 90 56.688 90 60 c 66 60
 l 61.227 60 56.648 61.895 53.273 65.273 c 49.895 68.648 48 73.227 48 78
 c 48 102 l 48 106.773 49.895 111.352 53.273 114.727 c 56.648 118.105 61.227
 120 66 120 c 71.676 120 l 66.312 136.105 l 65.738 137.629 65.809 139.324
 66.512 140.797 c 67.215 142.27 68.484 143.391 70.031 143.906 c 71.578 144.422
 73.27 144.289 74.711 143.531 c 76.156 142.773 77.23 141.461 77.688 139.895
 c 84.324 120 l 90 120 l 90 132 l 90 135.312 92.688 138 96 138 c 99.312 
138 102 135.312 102 132 c 102 120 l 107.676 120 l 114.312 139.895 l 114.77
 141.461 115.844 142.773 117.289 143.531 c 118.73 144.289 120.422 144.422
 121.969 143.906 c 123.516 143.391 124.785 142.27 125.488 140.797 c 126.191
 139.324 126.262 137.629 125.688 136.105 c 120.324 120 l 126 120 l 130.773
 120 135.352 118.105 138.727 114.727 c 142.105 111.352 144 106.773 144 102
 c 144 78 l 144 73.227 142.105 68.648 138.727 65.273 c 135.352 61.895 130.773
 60 126 60 c h
60 78 m 60 74.688 62.688 72 66 72 c 126 72 l 127.59 72 129.117 72.633 130.242
 73.758 c 131.367 74.883 132 76.41 132 78 c 132 102 l 132 103.59 131.367
 105.117 130.242 106.242 c 129.117 107.367 127.59 108 126 108 c 66 108 l
 62.688 108 60 105.312 60 102 c h
60 78 m f
24 24 m 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48
 0 c 144 0 l 150.363 0 156.469 2.527 160.969 7.031 c 165.473 11.531 168 
17.637 168 24 c 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 
156.469 189.473 150.363 192 144 192 c 48 192 l 41.637 192 35.531 189.473
 31.031 184.969 c 26.527 180.469 24 174.363 24 168 c h
144 12 m 48 12 l 41.371 12 36 17.371 36 24 c 36 168 l 36 171.184 37.266
 174.234 39.516 176.484 c 41.766 178.734 44.816 180 48 180 c 144 180 l 147.184
 180 150.234 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168
 c 156 24 l 156 20.816 154.734 17.766 152.484 15.516 c 150.234 13.266 147.184
 12 144 12 c f
Q Q
showpage
%%Trailer
%%EOF
