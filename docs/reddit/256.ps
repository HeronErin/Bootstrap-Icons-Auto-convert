%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
74.004 96 m 68.504 96 64.043 100.461 64.043 105.961 c 64.043 111.469 68.508
 116.039 74.004 115.934 c 79.375 115.746 83.629 111.34 83.629 105.965 c 
83.629 100.594 79.375 96.188 74.004 96 c 96.121 139.766 m 99.902 139.766
 112.957 139.309 119.832 132.434 c 120.766 131.387 120.766 129.805 119.832
 128.762 c 119.352 128.262 118.688 127.98 117.996 127.98 c 117.305 127.98
 116.641 128.262 116.16 128.762 c 111.926 133.117 102.648 134.605 96.121
 134.605 c 89.582 134.605 80.426 133.117 76.07 128.762 c 76.066 128.762 
l 75.586 128.262 74.926 127.98 74.23 127.98 c 73.539 127.98 72.879 128.262
 72.395 128.762 c 71.898 129.242 71.617 129.902 71.617 130.598 c 71.617 
131.289 71.898 131.949 72.395 132.434 c 79.164 139.191 92.219 139.754 96.117
 139.754 c h
108.023 106.082 m 108.023 111.578 112.5 116.043 117.996 116.043 c 123.492
 116.043 127.957 111.473 127.957 106.082 c 127.957 106.078 l 127.695 100.77
 123.312 96.598 117.996 96.598 c 112.68 96.598 108.297 100.77 108.035 106.078
 c h
108.023 106.082 m f
192 96 m 192 130.297 173.703 161.988 144 179.137 c 114.297 196.289 77.703
 196.289 48 179.137 c 18.297 161.988 0 130.297 0 96 c 0 61.703 18.297 30.012
 48 12.863 c 77.703 -4.289 114.297 -4.289 144 12.863 c 173.703 30.012 192
 61.703 192 96 c 146.062 82.02 m 142.281 82.02 138.84 83.508 136.32 85.918
 c 126.707 79.043 113.52 74.578 98.867 74.004 c 105.273 43.992 l 126.129
 48.457 l 126.133 48.457 l 126.32 52.438 128.859 55.922 132.594 57.316 c
 136.328 58.711 140.531 57.75 143.285 54.867 c 146.035 51.984 146.805 47.742
 145.242 44.078 c 143.676 40.41 140.078 38.031 136.094 38.027 c 132.289 
38.043 128.824 40.219 127.164 43.645 c 103.906 38.723 l 103.277 38.582 102.613
 38.703 102.07 39.059 c 101.52 39.43 101.148 40.012 101.039 40.668 c 93.934
 74.125 l 79.055 74.582 65.637 79.047 55.895 86.027 c 53.375 83.629 49.941
 82.141 46.176 82.141 c 39.59 82.129 33.895 86.727 32.512 93.164 c 31.129
 99.602 34.434 106.133 40.441 108.828 c 40.203 110.188 40.086 111.602 40.094
 113.062 c 40.094 134.602 65.188 152.133 96.121 152.133 c 127.059 152.133
 152.137 134.723 152.137 113.062 c 152.137 111.695 152.016 110.207 151.789
 108.828 c 156.602 106.656 160.047 101.723 160.047 96 c 160.047 88.199 153.746
 82.02 146.066 82.02 c f
Q Q
showpage
%%Trailer
%%EOF
