%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
592.031 768 m 570.898 768 550.633 776.395 535.691 791.336 c 520.746 806.281
 512.352 826.547 512.352 847.68 c 512.352 891.742 548.062 928.32 592.031
 927.457 c 619.859 926.492 645.168 911.086 658.809 886.812 c 672.453 862.543
 672.453 832.914 658.809 808.641 c 645.168 784.371 619.859 768.965 592.031
 768 c 768.961 1118.113 m 799.199 1118.113 903.648 1114.465 958.656 1059.457
 c 962.258 1055.41 964.25 1050.184 964.25 1044.77 c 964.25 1039.352 962.258
 1034.125 958.656 1030.078 c 954.805 1026.102 949.504 1023.859 943.969 1023.859
 c 938.43 1023.859 933.133 1026.102 929.281 1030.078 c 895.395 1064.926 
821.184 1076.832 768.961 1076.832 c 716.641 1076.832 643.395 1064.93 608.547
 1030.078 c 608.543 1030.078 l 604.691 1026.102 599.391 1023.859 593.855
 1023.859 c 588.32 1023.859 583.02 1026.102 579.168 1030.078 c 575.191 1033.934
 572.945 1039.23 572.945 1044.77 c 572.945 1050.305 575.191 1055.605 579.168
 1059.457 c 633.312 1113.504 737.762 1118.016 768.961 1118.016 c h
864.191 848.641 m 864.191 892.609 900 928.32 943.969 928.32 c 987.938 928.32
 1023.648 891.746 1023.648 848.641 c 1022.297 821.102 1006.82 796.215 982.723
 782.82 c 958.621 769.43 929.316 769.43 905.215 782.82 c 881.117 796.215
 865.641 821.102 864.289 848.641 c h
864.191 848.641 m f
1536 768 m 1536 971.688 1455.086 1167.031 1311.059 1311.059 c 1167.031 
1455.086 971.688 1536 768 1536 c 564.312 1536 368.969 1455.086 224.941 1311.059
 c 80.914 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969 224.941 224.941
 c 368.969 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914 1311.059 224.941
 c 1455.086 368.969 1536 564.312 1536 768 c 1168.512 656.16 m 1138.273 656.16
 1110.719 668.062 1090.559 687.359 c 1013.664 632.352 908.16 596.641 790.941
 592.031 c 842.207 351.934 l 1009.055 387.645 l 1009.055 387.648 l 1010.039
 408.535 1019.191 428.199 1034.543 442.398 c 1049.895 456.598 1070.215 464.191
 1091.113 463.547 c 1112.016 462.898 1131.824 454.059 1146.27 438.938 c 
1160.711 423.816 1168.633 403.621 1168.32 382.715 c 1168.008 361.805 1159.488
 341.855 1144.598 327.172 c 1129.711 312.488 1109.648 304.246 1088.734 304.223
 c 1073.82 304.277 1059.215 308.516 1046.59 316.457 c 1033.961 324.398 1023.816
 335.727 1017.312 349.152 c 831.266 309.793 l 826.207 308.668 820.91 309.641
 816.574 312.48 c 812.164 315.441 809.172 320.098 808.32 325.344 c 751.488
 592.992 l 632.449 596.641 525.121 632.352 447.168 688.223 c 427.008 669.023
 399.551 657.117 369.406 657.117 c 369.406 657.121 l 335.062 657.07 302.602
 672.832 281.402 699.855 c 260.199 726.879 252.617 762.156 260.844 795.504
 c 269.07 828.852 292.184 856.559 323.52 870.625 c 321.598 881.504 320.672
 892.801 320.734 904.512 c 320.734 1076.832 521.469 1217.086 768.957 1217.086
 c 1016.445 1217.086 1217.086 1077.789 1217.086 904.512 c 1217.086 893.566
 1216.125 881.664 1214.301 870.625 c 1252.797 853.25 1280.348 813.793 1280.348
 768 c 1280.348 705.602 1229.949 656.16 1168.508 656.16 c f
Q Q
showpage
%%Trailer
%%EOF
