%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.312 3 m 2.141 3 2 3.141 2 3.312 c 2 3.484 2.141 3.629 2.312 3.625 c 2.312
 3.621 l 2.48 3.617 2.613 3.48 2.613 3.312 c 2.613 3.145 2.48 3.004 2.312
 3 c 3.004 4.367 m 3.121 4.367 3.531 4.352 3.746 4.137 c 3.773 4.105 3.773
 4.055 3.746 4.023 c 3.715 3.992 3.66 3.992 3.629 4.023 c 3.496 4.16 3.207
 4.207 3.004 4.207 c 2.801 4.207 2.512 4.16 2.379 4.023 c 2.348 3.992 2.293
 3.992 2.262 4.023 c 2.23 4.055 2.23 4.105 2.262 4.137 c 2.473 4.348 2.883
 4.367 3.004 4.367 c h
3.375 3.316 m 3.375 3.488 3.516 3.629 3.688 3.629 c 3.859 3.629 4 3.484
 4 3.316 c 3.992 3.148 3.855 3.02 3.688 3.02 c 3.52 3.02 3.383 3.148 3.375
 3.316 c h
3.375 3.316 m f
6 3 m 6 4.656 4.656 6 3 6 c 1.344 6 0 4.656 0 3 c 0 1.344 1.344 0 3 0 c
 4.656 0 6 1.344 6 3 c 4.566 2.562 m 4.449 2.562 4.34 2.609 4.262 2.684 
c 3.961 2.469 3.551 2.328 3.09 2.312 c 3.289 1.375 l 3.941 1.516 l 3.949
 1.637 4.027 1.746 4.145 1.793 c 4.262 1.836 4.391 1.805 4.477 1.715 c 4.562
 1.625 4.586 1.492 4.539 1.379 c 4.488 1.262 4.379 1.188 4.254 1.188 c 4.133
 1.188 4.027 1.258 3.973 1.363 c 3.246 1.211 l 3.227 1.207 3.207 1.211 3.191
 1.219 c 3.172 1.23 3.16 1.25 3.156 1.27 c 2.934 2.316 l 2.469 2.332 2.051
 2.469 1.746 2.688 c 1.668 2.613 1.559 2.566 1.441 2.566 c 1.238 2.566 1.059
 2.711 1.016 2.91 c 0.973 3.113 1.074 3.316 1.266 3.402 c 1.258 3.445 1.254
 3.488 1.254 3.535 c 1.254 4.207 2.039 4.758 3.004 4.758 c 3.969 4.758 4.754
 4.215 4.754 3.535 c 4.754 3.492 4.75 3.445 4.742 3.402 c 4.891 3.336 5 
3.18 5 3 c 5 2.758 4.805 2.562 4.562 2.562 c f
Q Q
showpage
%%Trailer
%%EOF
