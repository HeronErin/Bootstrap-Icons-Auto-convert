%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
9.371 6 m 9.371 7.031 8.902 8.004 8.094 8.645 c 7.121 6.375 l 9.34 5.543
 l 9.359 5.691 9.371 5.844 9.371 6 c f
12 6 m 12 9.312 9.312 12 6 12 c 2.688 12 0 9.312 0 6 c 0 2.688 2.688 0 
6 0 c 9.312 0 12 2.688 12 6 c 11.25 6 m 11.25 4.387 10.508 2.863 9.238 1.871
 c 7.969 0.875 6.312 0.52 4.746 0.906 c 3.18 1.289 1.879 2.375 1.215 3.844
 c 0.551 5.312 0.602 7.008 1.348 8.438 c 2.84 7.195 l 2.266 5.68 2.848 3.969
 4.23 3.121 c 5.613 2.273 7.402 2.527 8.492 3.727 c 5.621 4.875 l 6.371 
6.75 l 7.371 9.082 l 6.949 9.27 6.484 9.375 5.996 9.375 c 5.59 9.375 5.184
 9.301 4.805 9.156 c 3.559 10.648 l 5.188 11.504 7.145 11.445 8.715 10.492
 c 10.289 9.543 11.25 7.84 11.25 6 c 5.027 6.105 m 5.129 5.957 4.984 5.766
 4.812 5.82 c 3.688 6.195 l 3.809 6.551 l 4.414 6.348 l 3.969 7.02 l 3.965
 7.02 l 3.867 7.168 4.012 7.359 4.184 7.305 c 4.789 7.102 l 4.344 7.773 
l 4.34 7.77 l 4.242 7.918 4.387 8.109 4.559 8.055 c 5.684 7.68 l 5.562 7.324
 l 4.957 7.527 l 5.402 6.855 l 5.504 6.707 5.359 6.516 5.188 6.57 c 4.582
 6.773 l h
5.027 6.105 m f
Q Q
showpage
%%Trailer
%%EOF
