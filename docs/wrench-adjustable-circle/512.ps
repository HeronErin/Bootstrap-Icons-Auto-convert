%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
299.902 192 m 299.91 224.969 284.859 256.133 259.031 276.625 c 227.93 204
 l 298.945 177.359 l 299.586 182.16 299.906 187.039 299.906 192 c f
384 192 m 384 242.922 363.773 291.758 327.766 327.766 c 291.758 363.773
 242.922 384 192 384 c 141.078 384 92.242 363.773 56.234 327.766 c 20.227
 291.758 0 242.922 0 192 c 0 141.078 20.227 92.242 56.234 56.234 c 92.242
 20.227 141.078 0 192 0 c 242.922 0 291.758 20.227 327.766 56.234 c 363.773
 92.242 384 141.078 384 192 c 360 192 m 359.984 157.922 349.605 124.656 
330.242 96.617 c 310.879 68.574 283.449 47.086 251.586 35 c 219.727 22.914
 184.941 20.801 151.852 28.945 c 118.766 37.086 88.934 55.102 66.32 80.594
 c 43.707 106.086 29.383 137.852 25.242 171.676 c 21.105 205.5 27.352 239.785
 43.152 269.977 c 90.863 230.207 l 78.883 198.609 82.379 163.223 100.32 
134.586 c 118.258 105.945 148.57 87.352 182.23 84.344 c 215.887 81.332 249.016
 94.254 271.754 119.258 c 179.93 156 l 203.93 216 l 235.922 290.641 l 222.48
 296.664 207.602 300 191.93 300 c 178.875 300.008 165.93 297.648 153.719
 293.039 c 113.93 340.801 l 148.219 358.797 187.676 364.395 225.621 356.645
 c 263.562 348.895 297.664 328.273 322.152 298.27 c 346.641 268.27 360.012
 230.727 360 192 c 160.922 195.336 m 162.352 193.199 162.266 190.387 160.699
 188.344 c 159.137 186.301 156.445 185.484 154.008 186.312 c 118.008 198.312
 l 121.824 209.688 l 141.215 203.207 l 126.934 224.664 l 126.938 224.664
 l 125.512 226.797 125.602 229.598 127.156 231.637 c 128.711 233.676 131.391
 234.5 133.824 233.688 c 153.215 227.207 l 138.934 248.664 l 138.938 248.664
 l 137.512 250.797 137.602 253.598 139.156 255.637 c 140.711 257.676 143.391
 258.5 145.824 257.688 c 181.824 245.688 l 178.008 234.312 l 158.617 240.793
 l 172.922 219.336 l 174.352 217.199 174.266 214.387 172.699 212.344 c 171.137
 210.301 168.445 209.484 166.008 210.312 c 146.617 216.793 l h
160.922 195.336 m f
Q Q
showpage
%%Trailer
%%EOF
