%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.688 3 m 4.688 3.516 4.449 4.004 4.047 4.32 c 3.562 3.188 l 4.672 2.77
 l 4.684 2.844 4.688 2.922 4.688 3 c f
6 3 m 6 4.656 4.656 6 3 6 c 1.344 6 0 4.656 0 3 c 0 1.344 1.344 0 3 0 c
 4.656 0 6 1.344 6 3 c 5.625 3 m 5.625 2.195 5.254 1.434 4.617 0.934 c 3.984
 0.438 3.156 0.258 2.371 0.453 c 1.59 0.645 0.938 1.188 0.605 1.922 c 0.277
 2.656 0.301 3.504 0.676 4.219 c 1.422 3.598 l 1.418 3.598 l 1.133 2.84 
1.426 1.984 2.117 1.559 c 2.805 1.137 3.699 1.266 4.246 1.863 c 2.812 2.438
 l 3.188 3.375 l 3.688 4.543 l 3.477 4.637 3.246 4.688 3 4.688 c 2.797 4.688
 2.594 4.652 2.402 4.578 c 1.781 5.324 l 2.594 5.754 3.57 5.723 4.359 5.246
 c 5.145 4.77 5.625 3.918 5.625 3 c 2.516 3.051 m 2.562 2.977 2.492 2.883
 2.406 2.91 c 1.844 3.098 l 1.902 3.277 l 2.207 3.176 l 1.984 3.512 l 1.934
 3.586 2.008 3.68 2.09 3.652 c 2.395 3.551 l 2.172 3.887 l 2.121 3.961 2.195
 4.055 2.277 4.027 c 2.84 3.84 l 2.781 3.66 l 2.477 3.762 l 2.699 3.426 
l 2.703 3.426 l 2.75 3.352 2.68 3.258 2.594 3.285 c 2.289 3.387 l h
2.516 3.051 m f
Q Q
showpage
%%Trailer
%%EOF
