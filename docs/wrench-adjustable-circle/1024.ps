%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
599.809 384 m 599.812 416.547 592.465 448.676 578.309 477.98 c 564.156 
507.289 543.559 533.02 518.062 553.246 c 455.855 408 l 597.887 354.719 l
 599.168 364.32 599.809 374.078 599.809 384 c f
768 384 m 768 485.844 727.543 583.516 655.527 655.527 c 583.516 727.543
 485.844 768 384 768 c 282.156 768 184.484 727.543 112.473 655.527 c 40.457
 583.516 0 485.844 0 384 c 0 282.156 40.457 184.484 112.473 112.473 c 184.484
 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527 112.473 c 727.543
 184.484 768 282.156 768 384 c 720 384 m 719.969 315.848 699.215 249.312
 660.488 193.234 c 621.762 137.152 566.895 94.172 503.176 70 c 439.453 45.824
 369.887 41.602 303.707 57.891 c 237.527 74.176 177.867 110.203 132.641 
161.188 c 87.414 212.172 58.762 275.703 50.488 343.352 c 42.211 411.004 
54.703 479.566 86.305 539.953 c 181.73 460.418 l 181.727 460.414 l 163.895
 413.391 163.031 361.617 179.285 314.023 c 195.535 266.43 227.887 226 270.758
 199.703 c 313.629 173.41 364.328 162.898 414.121 169.98 c 463.91 177.066
 509.668 201.305 543.504 238.512 c 359.855 312 l 407.855 432 l 471.84 581.281
 l 444.961 593.328 415.199 600 383.855 600 c 357.754 600.016 331.863 595.301
 307.441 586.078 c 227.855 681.602 l 296.438 717.594 375.352 728.789 451.238
 713.289 c 527.125 697.789 595.328 656.547 644.305 596.543 c 693.277 536.535
 720.02 461.453 720 384 c 321.84 390.672 m 324.707 386.398 324.531 380.773
 321.402 376.691 c 318.273 372.605 312.887 370.969 308.016 372.625 c 236.016
 396.625 l 243.648 419.379 l 282.434 406.418 l 253.875 449.328 l 253.871
 449.328 l 251.023 453.594 251.199 459.195 254.312 463.273 c 257.426 467.352
 262.781 469 267.648 467.375 c 306.434 454.414 l 277.875 497.324 l 277.871
 497.328 l 275.023 501.594 275.199 507.195 278.312 511.273 c 281.426 515.352
 286.781 517 291.648 515.375 c 363.648 491.375 l 356.016 468.621 l 317.23
 481.582 l 345.84 438.672 l 348.707 434.398 348.531 428.773 345.402 424.691
 c 342.273 420.605 336.887 418.969 332.016 420.625 c 293.23 433.586 l h
321.84 390.672 m f
Q Q
showpage
%%Trailer
%%EOF
