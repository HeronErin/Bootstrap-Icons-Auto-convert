%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 9 11.25 l 9.199 11.25 9.391 11.172 9.531 11.031 
c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
6.145 9.789 m 6.09 9.941 6.062 10.105 6.066 10.266 c 6.066 10.637 l 6.066
 10.82 6.094 10.977 6.145 11.105 c 6.188 11.227 6.266 11.328 6.367 11.402
 c 6.477 11.469 6.602 11.504 6.727 11.5 c 6.832 11.5 6.934 11.48 7.027 11.434
 c 7.109 11.391 7.18 11.328 7.23 11.246 c 7.281 11.164 7.312 11.07 7.32 
10.977 c 7.895 10.977 l 7.895 11.035 l 7.895 11.031 l 7.887 11.215 7.828
 11.387 7.723 11.539 c 7.621 11.684 7.484 11.797 7.309 11.879 c 7.312 11.879
 l 7.125 11.961 6.926 12.004 6.723 12 c 6.453 12 6.223 11.945 6.035 11.84
 c 5.848 11.73 5.699 11.566 5.609 11.367 c 5.512 11.164 5.465 10.918 5.465
 10.637 c 5.465 10.262 l 5.465 9.977 5.516 9.734 5.613 9.527 c 5.711 9.32
 5.855 9.164 6.043 9.051 c 6.23 8.938 6.461 8.883 6.727 8.883 c 6.891 8.883
 7.043 8.906 7.18 8.957 c 7.32 9.004 7.441 9.07 7.547 9.16 c 7.543 9.164
 l 7.758 9.348 7.883 9.609 7.895 9.887 c 7.895 9.941 l 7.32 9.941 l 7.312
 9.84 7.281 9.742 7.23 9.656 c 7.18 9.574 7.109 9.508 7.023 9.461 c 6.934
 9.41 6.832 9.387 6.727 9.387 c 6.598 9.383 6.477 9.422 6.371 9.492 c 6.266
 9.566 6.188 9.672 6.145 9.789 c 0.602 11.945 m 0.836 11.176 l 1.836 11.172
 l 2.07 11.941 l 2.699 11.941 l 1.699 8.941 l 1.004 8.941 l -0.004 11.941
 l h
1.352 9.52 m 1.719 10.73 l 0.957 10.73 l 1.324 9.52 l h
3.324 11.945 m 3.559 11.176 l 4.559 11.172 l 4.793 11.941 l 5.422 11.941
 l 4.426 8.945 l 3.73 8.945 l 2.727 11.945 l h
4.074 9.52 m 4.441 10.73 l 3.684 10.73 l 4.051 9.52 l h
4.074 9.52 m f*
Q Q
showpage
%%Trailer
%%EOF
