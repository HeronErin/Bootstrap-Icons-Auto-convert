%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 144 180 l 147.184 180 150.234 178.734 152.484
 176.484 c 154.734 174.234 156 171.184 156 168 c 156 54 l 132 54 l 127.227
 54 122.648 52.105 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114
 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637
 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
98.305 156.648 m 97.414 159.078 96.996 161.656 97.066 164.242 c 97.066 
170.184 l 97.066 173.137 97.477 175.645 98.301 177.707 c 98.305 177.707 
l 98.992 179.609 100.246 181.254 101.891 182.426 c 103.602 183.504 105.594
 184.051 107.617 183.996 c 109.285 184.02 110.934 183.66 112.441 182.941
 c 113.773 182.258 114.902 181.23 115.703 179.965 c 116.52 178.645 117 177.145
 117.109 175.598 c 126.289 175.598 l 126.289 176.508 l 126.172 179.406 125.23
 182.215 123.574 184.598 c 121.941 186.918 119.742 188.734 116.973 190.047
 c 116.977 190.043 l 114.023 191.398 110.805 192.074 107.555 192.012 c 103.234
 192.012 99.574 191.148 96.574 189.418 c 96.574 189.422 l 93.574 187.68 
91.184 185.051 89.734 181.895 c 88.176 178.629 87.398 174.727 87.406 170.184
 c 87.406 164.207 l 87.406 159.664 88.191 155.75 89.758 152.473 c 91.316
 149.184 93.602 146.652 96.609 144.875 c 99.633 143.09 103.281 142.199 107.555
 142.199 c 110.172 142.199 112.594 142.586 114.828 143.363 c 117.066 144.105
 119.027 145.195 120.707 146.629 c 124.105 149.531 126.129 153.73 126.289
 158.195 c 126.289 159.07 l 117.109 159.07 l 116.996 157.461 116.504 155.895
 115.668 154.512 c 114.887 153.188 113.758 152.105 112.402 151.379 c 110.938
 150.582 109.285 150.18 107.617 150.215 c 105.594 150.156 103.602 150.734
 101.93 151.871 c 100.277 153.074 99.02 154.734 98.305 156.648 c 9.602 191.102
 m 13.359 178.766 l 29.398 178.766 l 33.168 191.102 l 43.246 191.102 l 27.227
 143.113 l 16.113 143.113 l 0.008 191.113 l h
21.625 152.293 m 27.492 171.695 l 15.324 171.695 l 21.203 152.293 l h
53.184 191.102 m 56.941 178.766 l 72.961 178.766 l 76.719 191.102 l 86.812
 191.102 l 70.801 143.113 l 59.688 143.113 l 43.594 191.113 l h
65.195 152.293 m 71.074 171.695 l 58.906 171.695 l 64.785 152.293 l h
65.195 152.293 m f*
Q Q
showpage
%%Trailer
%%EOF
