%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766 5.516 c 4.836
 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 l 3.812 1.688 
3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125 0.543
 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086 0 
1.5 0 c 3.562 0 l h
3.07 4.895 m 3.043 4.973 3.031 5.051 3.035 5.133 c 3.035 5.32 l 3.035 5.414
 3.047 5.492 3.074 5.555 c 3.07 5.555 l 3.094 5.613 3.133 5.664 3.184 5.699
 c 3.238 5.734 3.301 5.75 3.363 5.75 c 3.414 5.75 3.465 5.738 3.516 5.719
 c 3.555 5.695 3.59 5.664 3.617 5.625 c 3.641 5.582 3.656 5.535 3.66 5.488
 c 3.945 5.488 l 3.945 5.516 l 3.941 5.605 3.914 5.695 3.863 5.77 c 3.812
 5.844 3.742 5.898 3.656 5.941 c 3.656 5.938 l 3.562 5.98 3.461 6.004 3.359
 6 c 3.223 6 3.109 5.973 3.016 5.918 c 3.02 5.918 l 2.926 5.863 2.848 5.781
 2.805 5.684 c 2.758 5.582 2.73 5.461 2.73 5.316 c 2.73 5.129 l 2.73 4.988
 2.754 4.863 2.805 4.762 c 2.852 4.66 2.926 4.578 3.02 4.523 c 3.113 4.469
 3.227 4.441 3.363 4.441 c 3.445 4.441 3.52 4.453 3.59 4.477 c 3.66 4.5 
3.723 4.535 3.773 4.578 c 3.773 4.582 l 3.879 4.672 3.941 4.805 3.945 4.945
 c 3.945 4.973 l 3.66 4.973 l 3.656 4.922 3.641 4.871 3.613 4.828 c 3.59
 4.789 3.555 4.754 3.512 4.73 c 3.465 4.707 3.414 4.691 3.363 4.695 c 3.301
 4.691 3.238 4.711 3.184 4.746 c 3.133 4.785 3.094 4.836 3.07 4.895 c 0.301
 5.973 m 0.418 5.586 l 0.918 5.586 l 1.035 5.973 l 1.352 5.973 l 0.852 4.473
 l 0.504 4.473 l 0 5.973 l h
0.676 4.762 m 0.859 5.367 l 0.48 5.367 l 0.664 4.762 l h
1.66 5.973 m 1.777 5.586 l 2.281 5.586 l 2.398 5.973 l 2.715 5.973 l 2.211
 4.473 l 1.863 4.473 l 1.359 5.973 l h
2.035 4.762 m 2.219 5.367 l 1.84 5.367 l 2.023 4.762 l h
2.035 4.762 m f*
Q Q
showpage
%%Trailer
%%EOF
