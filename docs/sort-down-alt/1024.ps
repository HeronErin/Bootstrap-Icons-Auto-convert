%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 23 95 720 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 23 95 720 624
768 768 cairo_set_page_size
%%EndPageSetup
q 23 95 697 529 rectclip
1 0 0 -1 0 768 cm q
0 g
168 168 m 168 159.426 163.426 151.504 156 147.215 c 148.574 142.93 139.426
 142.93 132 147.215 c 124.574 151.504 120 159.426 120 168 c 120 590.062 
l 64.992 535.008 l 58.922 528.938 50.074 526.566 41.781 528.789 c 33.488
 531.012 27.012 537.488 24.789 545.781 c 22.566 554.074 24.938 562.922 31.008
 568.992 c 127.008 664.945 l 127.344 665.281 l 131.852 669.676 137.91 672.109
 144.203 672.055 c 150.496 672 156.516 669.461 160.945 664.992 c 256.945
 568.992 l 263.016 562.93 265.391 554.09 263.176 545.801 c 260.961 537.512
 254.492 531.035 246.207 528.809 c 237.922 526.582 229.078 528.945 223.008
 535.008 c 168 590.062 l h
360 192 m 351.426 192 343.504 187.426 339.215 180 c 334.93 172.574 334.93
 163.426 339.215 156 c 343.504 148.574 351.426 144 360 144 c 408 144 l 416.574
 144 424.496 148.574 428.785 156 c 433.07 163.426 433.07 172.574 428.785
 180 c 424.496 187.426 416.574 192 408 192 c h
360 336 m 351.426 336 343.504 331.426 339.215 324 c 334.93 316.574 334.93
 307.426 339.215 300 c 343.504 292.574 351.426 288 360 288 c 504 288 l 512.574
 288 520.496 292.574 524.785 300 c 529.07 307.426 529.07 316.574 524.785
 324 c 520.496 331.426 512.574 336 504 336 c h
360 480 m 351.426 480 343.504 475.426 339.215 468 c 334.93 460.574 334.93
 451.426 339.215 444 c 343.504 436.574 351.426 432 360 432 c 600 432 l 608.574
 432 616.496 436.574 620.785 444 c 625.07 451.426 625.07 460.574 620.785
 468 c 616.496 475.426 608.574 480 600 480 c h
336 600 m 336 606.363 338.527 612.469 343.031 616.969 c 347.531 621.473
 353.637 624 360 624 c 696 624 l 704.574 624 712.496 619.426 716.785 612
 c 721.07 604.574 721.07 595.426 716.785 588 c 712.496 580.574 704.574 576
 696 576 c 360 576 l 353.637 576 347.531 578.527 343.031 583.031 c 338.527
 587.531 336 593.637 336 600 c f
Q Q
showpage
%%Trailer
%%EOF
