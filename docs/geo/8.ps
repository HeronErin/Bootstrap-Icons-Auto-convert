%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 1 0 5 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 1 0 5 6
6 6 cairo_set_page_size
%%EndPageSetup
q 1 0 4 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0.375 m 2.379 0.375 1.875 0.879 1.875 1.5 c 1.875 2.121 2.379 2.625 3
 2.625 c 3.621 2.625 4.125 2.121 4.125 1.5 c 4.125 0.879 3.621 0.375 3 0.375
 c 1.5 1.5 m 1.5 0.91 1.844 0.375 2.383 0.133 c 2.922 -0.109 3.551 -0.016
 3.992 0.375 c 4.434 0.766 4.605 1.379 4.434 1.941 c 4.262 2.504 3.773 2.914
 3.188 2.988 c 3.188 5.062 l 3.188 5.312 2.812 5.312 2.812 5.062 c 2.812
 2.988 l 2.062 2.895 1.5 2.258 1.5 1.5 c h
2.434 4.715 m 2.453 4.816 2.383 4.914 2.281 4.93 c 2.016 4.973 1.801 5.039
 1.66 5.113 c 1.66 5.117 l 1.609 5.141 1.562 5.176 1.52 5.215 c 1.512 5.227
 1.504 5.238 1.5 5.25 c 1.5 5.254 l 1.508 5.266 l 1.52 5.289 1.539 5.305
 1.562 5.32 c 1.625 5.367 1.727 5.422 1.867 5.469 c 2.148 5.562 2.551 5.625
 3 5.625 c 3.453 5.625 3.852 5.562 4.133 5.469 c 4.273 5.422 4.375 5.371
 4.438 5.32 c 4.461 5.305 4.48 5.289 4.492 5.266 c 4.496 5.254 l 4.5 5.25
 l 4.496 5.234 4.488 5.227 4.48 5.215 c 4.438 5.176 4.391 5.141 4.34 5.117
 c 4.199 5.043 3.984 4.977 3.719 4.934 c 3.719 4.93 l 3.613 4.918 3.543 
4.82 3.559 4.715 c 3.578 4.609 3.676 4.539 3.781 4.562 c 4.07 4.609 4.324
 4.684 4.516 4.785 c 4.688 4.875 4.875 5.023 4.875 5.25 c 4.875 5.41 4.777
 5.531 4.672 5.617 c 4.562 5.703 4.418 5.773 4.254 5.828 c 3.926 5.938 3.48
 6.004 3 6.004 c 2.52 6.004 2.078 5.938 1.746 5.828 c 1.582 5.773 1.438 
5.703 1.328 5.617 c 1.223 5.531 1.125 5.41 1.125 5.25 c 1.125 5.023 1.312
 4.875 1.484 4.785 c 1.672 4.684 1.93 4.609 2.219 4.562 c 2.32 4.543 2.418
 4.613 2.434 4.715 c f*
Q Q
showpage
%%Trailer
%%EOF
