%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 3 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 3 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 3 0 9 12 rectclip
1 0 0 -1 0 12 cm q
0 g
8.625 0.75 m 8.418 0.75 8.25 0.582 8.25 0.375 c 8.25 0.168 8.418 0 8.625
 0 c 11.625 0 l 11.723 0 11.82 0.039 11.891 0.109 c 11.961 0.18 12 0.277
 12 0.375 c 12 3.375 l 12 3.582 11.832 3.75 11.625 3.75 c 11.418 3.75 11.25
 3.582 11.25 3.375 c 11.25 1.281 l 8.664 3.867 l 9.113 4.738 9.113 5.777
 8.656 6.645 c 8.199 7.516 7.348 8.105 6.375 8.227 c 6.375 9.75 l 7.5 9.75
 l 7.707 9.75 7.875 9.918 7.875 10.125 c 7.875 10.332 7.707 10.5 7.5 10.5
 c 6.375 10.5 l 6.375 11.625 l 6.375 11.832 6.207 12 6 12 c 5.793 12 5.625
 11.832 5.625 11.625 c 5.625 10.5 l 4.5 10.5 l 4.293 10.5 4.125 10.332 4.125
 10.125 c 4.125 9.918 4.293 9.75 4.5 9.75 c 5.625 9.75 l 5.625 8.227 l 4.652
 8.105 3.797 7.512 3.344 6.641 c 2.887 5.77 2.887 4.734 3.34 3.863 c 3.797
 2.992 4.648 2.398 5.621 2.273 c 6.598 2.152 7.57 2.512 8.227 3.242 c 10.719
 0.75 l h
7.879 4.008 m 7.191 2.973 5.797 2.688 4.758 3.375 c 3.723 4.059 3.438 5.453
 4.121 6.492 c 4.809 7.527 6.203 7.812 7.242 7.129 c 8.277 6.441 8.562 5.047
 7.879 4.008 c h
7.879 4.008 m f*
Q Q
showpage
%%Trailer
%%EOF
