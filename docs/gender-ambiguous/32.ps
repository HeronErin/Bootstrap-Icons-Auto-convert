%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 6 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 6 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 6 0 18 24 rectclip
1 0 0 -1 0 24 cm q
0 g
17.25 1.5 m 16.836 1.5 16.5 1.164 16.5 0.75 c 16.5 0.336 16.836 0 17.25
 0 c 23.25 0 l 23.449 0 23.641 0.078 23.781 0.219 c 23.922 0.359 24 0.551
 24 0.75 c 24 6.75 l 24 7.164 23.664 7.5 23.25 7.5 c 22.836 7.5 22.5 7.164
 22.5 6.75 c 22.5 2.559 l 17.324 7.734 l 18.23 9.477 18.227 11.551 17.312
 13.289 c 16.402 15.027 14.699 16.211 12.75 16.453 c 12.75 19.5 l 15 19.5
 l 15.414 19.5 15.75 19.836 15.75 20.25 c 15.75 20.664 15.414 21 15 21 c
 12.75 21 l 12.75 23.25 l 12.75 23.664 12.414 24 12 24 c 11.586 24 11.25
 23.664 11.25 23.25 c 11.25 21 l 9 21 l 8.586 21 8.25 20.664 8.25 20.25 
c 8.25 19.836 8.586 19.5 9 19.5 c 11.25 19.5 l 11.25 16.453 l 9.301 16.207
 7.598 15.023 6.684 13.285 c 5.773 11.543 5.773 9.465 6.684 7.727 c 7.594
 5.984 9.297 4.797 11.246 4.551 c 13.195 4.301 15.141 5.023 16.457 6.484
 c 21.441 1.5 l h
15.754 8.02 m 14.383 5.945 11.594 5.375 9.52 6.746 c 7.445 8.117 6.875 
10.91 8.246 12.984 c 9.617 15.055 12.41 15.625 14.484 14.254 c 16.555 12.883
 17.125 10.09 15.754 8.016 c h
15.754 8.02 m f*
Q Q
showpage
%%Trailer
%%EOF
