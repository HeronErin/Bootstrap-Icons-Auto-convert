%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 48 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 48 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 48 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
138 12 m 134.688 12 132 9.312 132 6 c 132 2.688 134.688 0 138 0 c 186 0
 l 187.59 0 189.117 0.633 190.242 1.758 c 191.367 2.883 192 4.41 192 6 c
 192 54 l 192 57.312 189.312 60 186 60 c 182.688 60 180 57.312 180 54 c 
180 20.484 l 138.602 61.883 l 145.84 75.816 145.809 92.414 138.512 106.316
 c 131.215 120.223 117.578 129.68 102 131.641 c 102 156 l 120 156 l 123.312
 156 126 158.688 126 162 c 126 165.312 123.312 168 120 168 c 102 168 l 102
 186 l 102 189.312 99.312 192 96 192 c 92.688 192 90 189.312 90 186 c 90
 168 l 72 168 l 68.688 168 66 165.312 66 162 c 66 158.688 68.688 156 72 
156 c 90 156 l 90 131.641 l 74.406 129.672 60.766 120.195 53.48 106.27 c
 46.195 92.344 46.191 75.734 53.465 61.801 c 60.738 47.871 74.371 38.383
 89.961 36.402 c 105.551 34.418 121.125 40.195 131.652 51.863 c 171.516 
12 l h
126.035 64.152 m 118.941 53.422 106.664 47.289 93.824 48.066 c 80.984 48.844
 69.535 56.414 63.789 67.922 c 58.043 79.43 58.871 93.129 65.965 103.859
 c 73.059 114.59 85.34 120.723 98.18 119.941 c 111.023 119.164 122.473 111.594
 128.219 100.082 c 133.961 88.57 133.133 74.871 126.035 64.141 c h
126.035 64.152 m f*
Q Q
showpage
%%Trailer
%%EOF
