%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 384 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 384 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 384 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1104 96 m 1086.852 96 1071.004 86.852 1062.43 72 c 1053.855 57.148 1053.855
 38.852 1062.43 24 c 1071.004 9.148 1086.852 0 1104 0 c 1488 0 l 1500.73
 0 1512.938 5.059 1521.941 14.059 c 1530.941 23.062 1536 35.27 1536 48 c
 1536 432 l 1536 449.148 1526.852 464.996 1512 473.57 c 1497.148 482.145
 1478.852 482.145 1464 473.57 c 1449.148 464.996 1440 449.148 1440 432 c
 1440 163.871 l 1108.801 495.07 l 1146.996 568.578 1160.395 652.465 1147
 734.211 c 1133.605 815.961 1094.137 891.184 1034.484 948.66 c 974.828 1006.133
 898.188 1042.777 816 1053.121 c 816 1248 l 960 1248 l 977.148 1248 992.996
 1257.148 1001.57 1272 c 1010.145 1286.852 1010.145 1305.148 1001.57 1320
 c 992.996 1334.852 977.148 1344 960 1344 c 816 1344 l 816 1488 l 816 1505.148
 806.852 1520.996 792 1529.57 c 777.148 1538.145 758.852 1538.145 744 1529.57
 c 729.148 1520.996 720 1505.148 720 1488 c 720 1344 l 576 1344 l 558.852
 1344 543.004 1334.852 534.43 1320 c 525.855 1305.148 525.855 1286.852 534.43
 1272 c 543.004 1257.148 558.852 1248 576 1248 c 720 1248 l 720 1053.121
 l 637.75 1042.734 561.066 1006.008 501.418 948.43 c 441.77 890.852 402.355
 815.516 389.07 733.68 c 375.785 651.848 389.34 567.91 427.711 494.422 c
 466.082 420.93 527.207 361.828 601.949 325.957 c 676.688 290.082 761.035
 279.363 842.375 295.395 c 923.715 311.43 997.68 353.355 1053.215 414.91
 c 1372.129 96 l h
1008.289 513.215 m 966.164 449.488 900.449 405.102 825.598 389.828 c 750.75
 374.551 672.895 389.637 609.168 431.762 c 545.441 473.887 501.055 539.602
 485.781 614.449 c 470.504 689.301 485.586 767.152 527.711 830.879 c 569.848
 894.609 635.578 938.988 710.438 954.254 c 785.293 969.52 863.152 954.426
 926.879 912.289 c 990.609 870.152 1034.988 804.422 1050.254 729.562 c 1065.52
 654.707 1050.426 576.848 1008.289 513.121 c h
1008.289 513.215 m f*
Q Q
showpage
%%Trailer
%%EOF
