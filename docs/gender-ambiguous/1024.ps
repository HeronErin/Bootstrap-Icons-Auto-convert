%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 192 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 192 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 192 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
552 48 m 543.426 48 535.504 43.426 531.215 36 c 526.93 28.574 526.93 19.426
 531.215 12 c 535.504 4.574 543.426 0 552 0 c 744 0 l 750.363 0 756.469 
2.527 760.969 7.031 c 765.473 11.531 768 17.637 768 24 c 768 216 l 768 224.574
 763.426 232.496 756 236.785 c 748.574 241.07 739.426 241.07 732 236.785
 c 724.574 232.496 720 224.574 720 216 c 720 81.938 l 554.398 247.539 l 
554.398 247.535 l 573.496 284.289 580.195 326.234 573.5 367.105 c 566.805
 407.98 547.07 445.594 517.242 474.328 c 487.414 503.066 449.094 521.387
 408 526.559 c 408 624 l 480 624 l 488.574 624 496.496 628.574 500.785 636
 c 505.07 643.426 505.07 652.574 500.785 660 c 496.496 667.426 488.574 672
 480 672 c 408 672 l 408 744 l 408 752.574 403.426 760.496 396 764.785 c
 388.574 769.07 379.426 769.07 372 764.785 c 364.574 760.496 360 752.574
 360 744 c 360 672 l 288 672 l 279.426 672 271.504 667.426 267.215 660 c
 262.93 652.574 262.93 643.426 267.215 636 c 271.504 628.574 279.426 624
 288 624 c 360 624 l 360 526.559 l 318.875 521.367 280.535 503.004 250.707
 474.215 c 220.883 445.426 201.176 407.758 194.535 366.84 c 187.891 325.922
 194.672 283.957 213.855 247.211 c 233.039 210.465 263.602 180.914 300.973
 162.977 c 338.344 145.043 380.516 139.68 421.188 147.699 c 461.855 155.715
 498.84 176.68 526.609 207.457 c 686.062 48 l h
504.145 256.609 m 475.77 213.684 426.656 189.16 375.297 192.27 c 323.938
 195.379 278.137 225.652 255.152 271.684 c 232.164 317.719 235.484 372.516
 263.855 415.441 c 292.238 458.363 341.363 482.887 392.727 479.77 c 444.09
 476.652 489.887 446.367 512.867 400.328 c 535.852 354.289 532.523 299.484
 504.145 256.559 c h
504.145 256.609 m f*
Q Q
showpage
%%Trailer
%%EOF
