%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
0 576 m 0 192 l 0 166.539 10.113 142.121 28.117 124.117 c 46.121 106.113
 70.539 96 96 96 c 672 96 l 697.461 96 721.879 106.113 739.883 124.117 c
 757.887 142.121 768 166.539 768 192 c 768 576 l 768 601.461 757.887 625.879
 739.883 643.883 c 721.879 661.887 697.461 672 672 672 c 96 672 l 70.539
 672 46.121 661.887 28.117 643.883 c 10.113 625.879 0 601.461 0 576 c 538.078
 244.465 m 408 337.344 l 408 264 l 407.996 258.098 405.816 252.402 401.879
 248.004 c 397.941 243.609 392.523 240.816 386.656 240.164 c 380.789 239.508
 374.887 241.039 370.078 244.465 c 240 337.344 l 240 264 l 240 255.426 235.426
 247.504 228 243.215 c 220.574 238.93 211.426 238.93 204 243.215 c 196.574
 247.504 192 255.426 192 264 c 192 504 l 192 512.574 196.574 520.496 204
 524.785 c 211.426 529.07 220.574 529.07 228 524.785 c 235.426 520.496 240
 512.574 240 504 c 240 430.656 l 370.078 523.535 l 374.887 526.961 380.789
 528.492 386.656 527.836 c 392.523 527.184 397.941 524.391 401.879 519.996
 c 405.816 515.598 407.996 509.902 408 504 c 408 430.656 l 538.078 523.535
 l 542.887 526.961 548.789 528.492 554.656 527.836 c 560.523 527.184 565.941
 524.391 569.879 519.996 c 573.816 515.598 575.996 509.902 576 504 c 576
 264 l 575.996 258.098 573.816 252.402 569.879 248.004 c 565.941 243.609
 560.523 240.816 554.656 240.164 c 548.789 239.508 542.887 241.039 538.078
 244.465 c f
Q Q
showpage
%%Trailer
%%EOF
