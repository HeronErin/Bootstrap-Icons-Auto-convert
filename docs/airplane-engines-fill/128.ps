%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 43.277 0 40.246 3.551 38.566 6.906 c 36.906 10.371 36.027 14.156
 36 18 c 36 40.145 l 24 46.145 l 24 45 l 24 44.203 23.684 43.441 23.121 
42.879 c 22.559 42.316 21.797 42 21 42 c 15 42 l 13.344 42 12 43.344 12 
45 c 12 52.145 l 4.98 55.656 l 1.93 57.18 0 60.297 0 63.707 c 0 72 l 0 72.883
 0.387 73.719 1.062 74.289 c 1.734 74.859 2.621 75.102 3.492 74.957 c 13.277
 73.324 l 15.156 78.945 l 15.156 78.949 l 15.566 80.168 16.711 80.992 18
 80.992 c 19.289 80.992 20.434 80.168 20.844 78.949 c 23.273 71.664 l 36.535
 69.449 l 38.785 82.969 l 30.879 90.875 l 30.875 90.875 l 30.016 91.734 
29.758 93.027 30.223 94.148 c 30.688 95.27 31.785 96.004 33 96 c 63 96 l
 64.215 96.004 65.312 95.27 65.777 94.148 c 66.242 93.027 65.984 91.734 
65.125 90.875 c 57.219 82.969 l 59.469 69.449 l 72.73 71.664 l 75.16 78.949
 l 75.156 78.949 l 75.566 80.168 76.711 80.992 78 80.992 c 79.289 80.992
 80.434 80.168 80.844 78.949 c 82.723 73.328 l 92.504 74.961 l 92.504 74.957
 l 93.371 75.105 94.262 74.859 94.938 74.289 c 95.609 73.719 96 72.883 96
 72 c 96 63.707 l 96 60.297 94.07 57.18 91.02 55.656 c 84 52.145 l 84 45
 l 84 44.203 83.684 43.441 83.121 42.879 c 82.559 42.316 81.797 42 81 42
 c 75 42 l 73.344 42 72 43.344 72 45 c 72 46.145 l 60 40.145 l 60 18 l 60
 14.594 59.16 10.375 57.434 6.906 c 55.754 3.547 52.723 0 48 0 c f
Q Q
showpage
%%Trailer
%%EOF
