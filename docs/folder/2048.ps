%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 18 192 1518 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 18 192 1518 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 18 192 1500 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
51.84 371.52 m 48 288 l 48 237.078 68.227 188.242 104.234 152.234 c 140.242
 116.227 189.078 96 240 96 c 592.512 96 l 643.43 96.012 692.258 116.246 
728.258 152.258 c 807.746 231.746 l 807.742 231.742 l 843.742 267.754 892.57
 287.988 943.488 288 c 1325.762 288 l 1361.434 287.996 1396.402 297.93 1426.746
 316.691 c 1457.09 335.453 1481.605 362.293 1497.547 394.207 c 1513.488 
426.125 1520.219 461.848 1516.992 497.375 c 1455.84 1169.375 l 1451.504 
1217.078 1429.496 1261.441 1394.133 1293.75 c 1358.77 1326.059 1312.605 
1343.98 1264.703 1344 c 271.297 1344 l 223.395 1343.98 177.23 1326.059 141.867
 1293.75 c 106.504 1261.441 84.496 1217.078 80.16 1169.375 c 19.008 497.375
 l 15 452.914 26.609 408.445 51.84 371.617 c h
210.238 384 m 183.277 384 157.555 395.336 139.363 415.242 c 121.176 435.148
 112.195 461.785 114.625 488.641 c 175.777 1160.641 l 177.93 1184.492 188.926
 1206.676 206.598 1222.84 c 224.27 1239.004 247.348 1247.977 271.297 1248
 c 1264.703 1248 l 1288.652 1247.977 1311.73 1239.004 1329.402 1222.84 c
 1347.074 1206.676 1358.07 1184.492 1360.223 1160.641 c 1421.375 488.641
 l 1423.805 461.785 1414.824 435.148 1396.637 415.242 c 1378.445 395.336
 1352.723 384 1325.762 384 c h
660.477 220.129 m 660.48 220.129 l 642.457 202.102 618.004 191.98 592.512
 192 c 240 192 l 214.852 191.996 190.707 201.859 172.754 219.469 c 154.801
 237.082 144.477 261.031 144 286.176 c 144.574 299.52 l 165.246 291.902 
187.133 288.062 210.238 288 c 728.254 288 l h
660.477 220.129 m f
Q Q
showpage
%%Trailer
%%EOF
