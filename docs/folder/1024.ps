%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 9 96 759 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 9 96 759 720
768 768 cairo_set_page_size
%%EndPageSetup
q 9 96 750 624 rectclip
1 0 0 -1 0 768 cm q
0 g
25.922 185.762 m 24 144 l 24 118.539 34.113 94.121 52.117 76.117 c 70.121
 58.113 94.539 48 120 48 c 296.258 48 l 321.715 48.004 346.129 58.125 364.129
 76.129 c 403.871 115.871 l 421.871 133.875 446.285 143.996 471.742 144 
c 662.879 144 l 689.852 143.996 715.582 155.344 733.773 175.258 c 751.965
 195.176 760.938 221.824 758.496 248.688 c 727.922 584.688 l 725.754 608.539
 714.746 630.719 697.066 646.875 c 679.383 663.027 656.301 671.992 632.352
 672 c 135.648 672 l 111.699 671.992 88.617 663.027 70.934 646.875 c 53.254
 630.719 42.246 608.539 40.078 584.688 c 9.504 248.688 l 7.5 226.457 13.305
 204.223 25.922 185.809 c h
105.121 192 m 91.637 192 78.777 197.668 69.684 207.621 c 60.59 217.574 
56.098 230.895 57.312 244.32 c 87.887 580.32 l 88.965 592.246 94.461 603.34
 103.297 611.422 c 112.137 619.5 123.672 623.988 135.648 624 c 632.352 624
 l 644.328 623.988 655.863 619.5 664.703 611.422 c 673.539 603.34 679.035
 592.246 680.113 580.32 c 710.688 244.32 l 711.902 230.895 707.41 217.574
 698.316 207.621 c 689.223 197.668 676.363 192 662.879 192 c h
330.242 110.062 m 330.238 110.062 l 321.23 101.051 309.004 95.988 296.258
 96 c 120 96 l 107.426 95.996 95.352 100.93 86.379 109.734 c 77.402 118.539
 72.238 130.516 72 143.09 c 72.289 149.762 l 82.625 145.953 93.57 144.035
 105.121 144 c 364.129 144 l h
330.242 110.062 m f
Q Q
showpage
%%Trailer
%%EOF
