%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
223.031 0 m 96 0 l 83.27 0 71.062 5.059 62.059 14.059 c 53.059 23.062 48
 35.27 48 48 c 48 336 l 48 348.73 53.059 360.938 62.059 369.941 c 71.062
 378.941 83.27 384 96 384 c 288 384 l 300.73 384 312.938 378.941 321.941
 369.941 c 330.941 360.938 336 348.73 336 336 c 336 112.969 l 336 106.602
 333.469 100.5 328.969 96 c 240 7.031 l 235.5 2.531 229.398 0 223.031 0 
c 228 84 m 228 36 l 300 108 l 252 108 l 245.637 108 239.531 105.473 235.031
 100.969 c 230.527 96.469 228 90.363 228 84 c 131.641 165.098 m 156.504 
264.555 l 180.434 176.836 l 180.434 176.832 l 181.867 171.629 186.602 168.023
 192 168.023 c 197.398 168.023 202.133 171.629 203.566 176.832 c 227.496
 264.551 l 252.359 165.094 l 252.359 165.098 l 254.086 158.809 260.512 155.047
 266.836 156.625 c 273.164 158.203 277.07 164.543 275.641 170.902 c 239.641
 314.902 l 238.309 320.188 233.578 323.914 228.129 323.969 c 222.68 324.023
 217.875 320.402 216.434 315.145 c 192 225.648 l 167.566 315.168 l 166.125
 320.426 161.32 324.051 155.871 323.992 c 150.422 323.938 145.691 320.215
 144.359 314.93 c 108.359 170.93 l 107.504 167.812 107.945 164.484 109.574
 161.695 c 111.207 158.906 113.895 156.895 117.027 156.109 c 120.164 155.328
 123.48 155.844 126.23 157.539 c 128.98 159.234 130.93 161.969 131.641 165.121
 c h
131.641 165.098 m f
Q Q
showpage
%%Trailer
%%EOF
