%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 33 48 l 33 45 l 36 45 l 36.797 45 37.559 44.684 38.121 
44.121 c 38.684 43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5
 28.5 11.484 28.5 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33
 l 6 6 l 6 2.688 8.688 0 12 0 c 28.5 0 l h
9.516 44.523 m 9.551 45.48 9.988 46.375 10.719 46.992 c 11.105 47.316 11.582
 47.566 12.152 47.75 c 12.719 47.934 13.383 48.023 14.148 48.023 c 15.164
 48.023 16.02 47.867 16.723 47.551 c 17.43 47.234 17.969 46.793 18.344 46.23
 c 18.344 46.227 l 18.719 45.641 18.914 44.957 18.902 44.258 c 18.902 43.586
 18.766 43.027 18.496 42.578 c 18.223 42.129 17.836 41.762 17.371 41.508
 c 16.844 41.215 16.27 41 15.676 40.879 c 13.816 40.445 l 13.375 40.363 
12.961 40.184 12.602 39.918 c 12.324 39.703 12.164 39.371 12.168 39.02 c
 12.168 38.551 12.352 38.168 12.723 37.867 c 13.098 37.562 13.613 37.41 
14.262 37.41 c 14.688 37.41 15.059 37.477 15.367 37.613 c 15.367 37.617 
l 15.656 37.73 15.91 37.918 16.105 38.16 c 16.293 38.383 16.414 38.648 16.469
 38.934 c 18.719 38.934 l 18.68 38.324 18.469 37.734 18.117 37.234 c 17.738
 36.695 17.219 36.27 16.617 36.008 c 15.879 35.68 15.082 35.527 14.277 35.551
 c 13.402 35.551 12.625 35.699 11.949 36 c 11.277 36.297 10.75 36.719 10.367
 37.262 c 9.988 37.809 9.797 38.445 9.797 39.18 c 9.797 39.785 9.918 40.309
 10.164 40.75 c 10.41 41.195 10.766 41.562 11.219 41.852 c 11.676 42.137
 12.215 42.352 12.84 42.492 c 14.691 42.926 l 15.312 43.07 15.777 43.266
 16.082 43.504 c 16.078 43.504 l 16.383 43.734 16.551 44.102 16.535 44.48
 c 16.543 44.789 16.457 45.094 16.285 45.352 c 16.09 45.613 15.824 45.816
 15.52 45.93 c 15.125 46.078 14.703 46.148 14.281 46.141 c 13.926 46.141
 13.605 46.102 13.32 46.02 c 13.055 45.949 12.801 45.832 12.574 45.676 c
 12.168 45.414 11.895 44.996 11.809 44.523 c h
5.785 47.793 m 5.785 37.781 l 9.191 37.781 l 9.191 35.797 l 0 35.797 l 
0 37.781 l 3.402 37.781 l 3.402 47.793 l h
27.012 35.797 m 29.691 35.797 l 25.871 41.816 l 29.633 47.793 l 26.906 
47.793 l 24.355 43.547 l 24.254 43.547 l 21.695 47.793 l 19.109 47.793 l
 22.828 41.746 l 19.145 35.797 l 21.941 35.797 l 24.438 40.109 l 24.543 
40.109 l h
27.012 35.797 m f*
Q Q
showpage
%%Trailer
%%EOF
