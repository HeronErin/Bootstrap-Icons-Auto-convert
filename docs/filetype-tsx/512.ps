%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 264 384 l 264 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
76.129 356.184 m 76.406 363.832 79.902 371.004 85.754 375.938 c 88.844 
378.531 92.664 380.547 97.227 381.984 c 101.754 383.441 107.074 384.168 
113.188 384.168 c 121.301 384.168 128.164 382.902 133.781 380.375 c 139.445
 377.848 143.766 374.328 146.742 369.816 c 146.734 369.816 l 149.762 365.129
 151.324 359.648 151.223 354.07 c 151.223 348.695 150.145 344.215 147.984
 340.629 c 147.984 340.633 l 145.789 337.035 142.684 334.082 138.984 332.062
 c 134.738 329.707 130.156 328.008 125.398 327.023 c 110.52 323.566 l 107.004
 322.902 103.684 321.457 100.801 319.344 c 98.578 317.633 97.297 314.973
 97.344 312.168 c 97.344 308.426 98.824 305.352 101.785 302.953 c 104.793
 300.52 108.898 299.305 114.098 299.305 c 117.504 299.305 120.457 299.848
 122.953 300.938 c 125.262 301.852 127.297 303.348 128.855 305.281 c 130.332
 307.062 131.324 309.195 131.734 311.473 c 149.734 311.473 l 149.426 306.586
 147.766 301.883 144.938 297.887 c 141.91 293.57 137.762 290.168 132.938
 288.047 c 127.047 285.453 120.648 284.207 114.215 284.398 c 107.207 284.398
 101 285.598 95.59 288 c 90.215 290.383 85.996 293.754 82.941 298.105 c 
79.902 302.473 78.383 307.586 78.383 313.441 c 78.383 318.273 79.359 322.465
 81.312 326.016 c 83.297 329.582 86.113 332.52 89.762 334.824 c 93.41 337.113
 97.73 338.816 102.723 339.938 c 117.531 343.395 l 122.508 344.562 126.211
 346.105 128.645 348.027 c 128.641 348.023 l 131.059 349.883 132.418 352.801
 132.289 355.848 c 132.348 358.32 131.645 360.75 130.273 362.809 c 128.727
 364.914 126.598 366.523 124.152 367.441 c 120.984 368.629 117.621 369.199
 114.238 369.121 c 111.406 369.121 108.848 368.801 106.559 368.16 c 104.426
 367.59 102.402 366.656 100.586 365.398 c 97.359 363.305 95.145 359.969 
94.465 356.184 c h
46.273 382.344 m 46.273 302.254 l 73.539 302.254 l 73.539 286.367 l 0 286.367
 l 0 302.254 l 27.215 302.254 l 27.215 382.344 l h
216.098 286.367 m 237.531 286.367 l 206.957 334.535 l 237.055 382.344 l
 215.238 382.344 l 194.84 348.383 l 194.023 348.383 l 173.551 382.344 l 
152.879 382.344 l 182.613 333.961 l 153.141 286.367 l 175.508 286.367 l 
195.477 320.879 l 196.316 320.879 l h
216.098 286.367 m f*
Q Q
showpage
%%Trailer
%%EOF
