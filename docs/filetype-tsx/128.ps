%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 66 96 l 66 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
19.031 89.047 m 19.102 90.957 19.977 92.75 21.438 93.984 c 22.211 94.633
 23.164 95.137 24.305 95.496 c 25.438 95.859 26.766 96.043 28.293 96.043
 c 30.32 96.043 32.035 95.727 33.441 95.094 c 34.855 94.461 35.938 93.582
 36.68 92.453 c 36.684 92.453 l 37.441 91.281 37.832 89.914 37.805 88.52
 c 37.805 87.176 37.535 86.055 36.996 85.16 c 36.996 85.156 l 36.445 84.258
 35.672 83.52 34.746 83.016 c 33.684 82.426 32.539 82 31.352 81.758 c 27.633
 80.895 l 27.629 80.891 l 26.75 80.727 25.922 80.363 25.199 79.836 c 24.645
 79.406 24.324 78.742 24.336 78.043 c 24.336 77.105 24.707 76.34 25.445 
75.738 c 26.199 75.129 27.223 74.828 28.523 74.828 c 29.375 74.828 30.113
 74.965 30.738 75.234 c 31.316 75.461 31.824 75.836 32.215 76.32 c 32.582
 76.766 32.832 77.297 32.934 77.867 c 37.434 77.867 l 37.355 76.648 36.941
 75.473 36.234 74.473 c 35.477 73.395 34.441 72.543 33.234 72.012 c 31.762
 71.363 30.164 71.051 28.555 71.102 c 26.801 71.102 25.25 71.402 23.898 
72 c 22.555 72.598 21.5 73.438 20.738 74.527 c 19.977 75.621 19.598 76.898
 19.598 78.363 c 19.598 79.57 19.84 80.621 20.328 81.508 c 20.824 82.398
 21.527 83.133 22.441 83.711 c 23.352 84.281 24.434 84.707 25.68 84.988 
c 29.383 85.852 l 30.625 86.145 31.555 86.531 32.16 87.008 c 32.766 87.469
 33.105 88.199 33.07 88.961 c 33.086 89.578 32.91 90.188 32.566 90.703 c
 32.18 91.227 31.648 91.633 31.039 91.859 c 30.246 92.156 29.406 92.301 
28.559 92.281 c 27.852 92.281 27.211 92.203 26.637 92.043 c 26.641 92.039
 l 26.105 91.898 25.602 91.664 25.145 91.352 c 24.34 90.828 23.785 89.992
 23.617 89.047 c h
11.566 95.586 m 11.566 75.562 l 18.383 75.562 l 18.383 71.59 l 0 71.594
 l 0 75.566 l 6.805 75.566 l 6.805 95.59 l h
54.023 71.594 m 59.383 71.594 l 51.738 83.637 l 59.262 95.59 l 53.809 95.59
 l 48.707 87.102 l 48.504 87.102 l 43.387 95.59 l 38.219 95.586 l 45.652
 83.488 l 38.285 71.59 l 43.879 71.59 l 48.871 80.219 l 49.082 80.219 l 
h
54.023 71.594 m f*
Q Q
showpage
%%Trailer
%%EOF
