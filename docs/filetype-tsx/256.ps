%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 132 192 l 132 180 l 144 180 l 147.184 180
 150.234 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168 c
 156 54 l 132 54 l 127.227 54 122.648 52.105 119.273 48.727 c 115.895 45.352
 114 40.773 114 36 c 114 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132
 l 24 132 l 24 24 l 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 
41.637 0 48 0 c 114 0 l h
38.062 178.094 m 38.203 181.914 39.949 185.504 42.875 187.969 c 44.418 
189.266 46.332 190.273 48.609 190.992 c 50.875 191.719 53.535 192.086 56.59
 192.086 c 60.645 192.086 64.078 191.453 66.887 190.191 c 69.719 188.926
 71.879 187.168 73.367 184.91 c 73.367 184.906 l 74.883 182.566 75.664 179.824
 75.613 177.035 c 75.613 174.348 75.074 172.105 73.992 170.316 c 72.895 
168.52 71.344 167.039 69.492 166.031 c 67.367 164.852 65.078 164.004 62.699
 163.512 c 55.258 161.785 l 55.262 161.785 l 53.504 161.449 51.844 160.73
 50.398 159.672 c 49.289 158.816 48.648 157.484 48.672 156.086 c 48.672 
154.215 49.41 152.68 50.891 151.477 c 52.395 150.262 54.445 149.652 57.047
 149.652 c 58.75 149.652 60.227 149.926 61.477 150.469 c 62.633 150.926 
63.648 151.672 64.43 152.641 c 65.168 153.531 65.664 154.598 65.867 155.734
 c 74.867 155.734 l 74.715 153.293 73.883 150.941 72.469 148.945 c 70.957
 146.785 68.879 145.086 66.469 144.023 c 63.523 142.727 60.324 142.102 57.109
 142.199 c 53.605 142.199 50.5 142.801 47.797 144 c 45.109 145.191 43 146.875
 41.473 149.051 c 39.953 151.234 39.191 153.789 39.191 156.719 c 39.191 
159.133 39.68 161.23 40.656 163.008 c 41.648 164.793 43.055 166.262 44.879
 167.41 c 46.703 168.555 48.863 169.406 51.359 169.965 c 58.762 171.691 
l 61.25 172.277 63.102 173.047 64.316 174.008 c 64.32 174.012 l 65.527 174.941
 66.211 176.402 66.145 177.926 c 66.176 179.16 65.824 180.375 65.137 181.402
 c 64.363 182.457 63.301 183.262 62.074 183.719 c 60.492 184.316 58.812 
184.602 57.121 184.559 c 55.707 184.559 54.426 184.398 53.281 184.078 c 
52.211 183.797 51.199 183.328 50.293 182.699 c 48.68 181.652 47.57 179.984
 47.23 178.094 c h
23.133 191.172 m 23.133 151.129 l 36.766 151.129 l 36.766 143.184 l 0 143.184
 l 0 151.129 l 13.609 151.129 l 13.609 191.172 l h
108.043 143.184 m 118.758 143.184 l 103.469 167.27 l 118.516 191.172 l 
107.609 191.172 l 97.41 174.191 l 97.004 174.191 l 86.77 191.172 l 76.441
 191.172 l 91.309 166.98 l 76.574 143.184 l 87.758 143.184 l 97.742 160.441
 l 98.164 160.441 l h
108.043 143.184 m f*
Q Q
showpage
%%Trailer
%%EOF
