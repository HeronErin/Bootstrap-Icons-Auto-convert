%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
144 120 m 144 77.129 166.871 37.512 204 16.078 c 241.129 -5.359 286.871
 -5.359 324 16.078 c 361.129 37.512 384 77.129 384 120 c 384 77.129 406.871
 37.512 444 16.078 c 481.129 -5.359 526.871 -5.359 564 16.078 c 601.129 
37.512 624 77.129 624 120 c 624 120.289 l 624 123.648 624 133.25 622.176
 144 c 720 144 l 732.73 144 744.938 149.059 753.941 158.059 c 762.941 167.062
 768 179.27 768 192 c 768 240 l 768 252.73 762.941 264.938 753.941 273.941
 c 744.938 282.941 732.73 288 720 288 c 48 288 l 35.27 288 23.062 282.941
 14.059 273.941 c 5.059 264.938 0 252.73 0 240 c 0 192 l 0 179.27 5.059 
167.062 14.059 158.059 c 23.062 149.059 35.27 144 48 144 c 145.824 144 l
 144.562 136.16 143.953 128.23 144 120.289 c h
195.266 144 m 336 144 l 336 120 l 336 94.277 322.277 70.508 300 57.645 
c 277.723 44.785 250.277 44.785 228 57.645 c 205.723 70.508 192 94.277 192
 120 c 192 124.078 192.098 133.152 194.16 140.641 c h
432 144 m 572.734 144 l 573.84 140.641 l 575.902 133.152 576 124.082 576
 120 c 576 94.277 562.277 70.508 540 57.645 c 517.723 44.785 490.277 44.785
 468 57.645 c 445.723 70.508 432 94.277 432 120 c h
720 336 m 720 696 l 720 715.094 712.414 733.41 698.91 746.91 c 685.41 760.414
 667.094 768 648 768 c 432 768 l 432 336 l h
120 768 m 100.906 768 82.59 760.414 69.09 746.91 c 55.586 733.41 48 715.094
 48 696 c 48 336 l 336 336 l 336 768 l h
120 768 m f
Q Q
showpage
%%Trailer
%%EOF
