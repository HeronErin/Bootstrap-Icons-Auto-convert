%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 240 m 288 176.348 313.285 115.305 358.293 70.293 c 403.305 25.285 464.348
 0 528 0 c 591.652 0 652.695 25.285 697.707 70.293 c 742.715 115.305 768
 176.348 768 240 c 768 176.348 793.285 115.305 838.293 70.293 c 883.305 
25.285 944.348 0 1008 0 c 1071.652 0 1132.695 25.285 1177.707 70.293 c 1222.715
 115.305 1248 176.348 1248 240 c 1248 240.574 l 1248 247.293 1248 266.496
 1244.352 288 c 1440 288 l 1465.461 288 1489.879 298.113 1507.883 316.117
 c 1525.887 334.121 1536 358.539 1536 384 c 1536 480 l 1536 505.461 1525.887
 529.879 1507.883 547.883 c 1489.879 565.887 1465.461 576 1440 576 c 96 
576 l 70.539 576 46.121 565.887 28.117 547.883 c 10.113 529.879 0 505.461
 0 480 c 0 384 l 0 358.539 10.113 334.121 28.117 316.117 c 46.121 298.113
 70.539 288 96 288 c 291.648 288 l 289.125 272.32 287.906 256.457 288 240.574
 c h
390.527 288 m 672 288 l 672 240 l 672 188.555 644.555 141.016 600 115.293
 c 555.445 89.57 500.555 89.57 456 115.293 c 411.445 141.016 384 188.555
 384 240 c 384 248.16 384.191 266.305 388.32 281.281 c h
864 288 m 1145.473 288 l 1147.68 281.281 l 1151.809 266.305 1152 248.16
 1152 240 c 1152 188.555 1124.555 141.016 1080 115.293 c 1035.445 89.57 
980.555 89.57 936 115.293 c 891.445 141.016 864 188.555 864 240 c h
1440 672 m 1440 1392 l 1440 1430.191 1424.828 1466.816 1397.824 1493.824
 c 1370.816 1520.828 1334.191 1536 1296 1536 c 864 1536 l 864 672 l h
240 1536 m 201.809 1536 165.184 1520.828 138.176 1493.824 c 111.172 1466.816
 96 1430.191 96 1392 c 96 672 l 672 672 l 672 1536 l h
240 1536 m f
Q Q
showpage
%%Trailer
%%EOF
