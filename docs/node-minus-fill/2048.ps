%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 287 1536 1249
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 287 1536 1249
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 287 1536 962 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536.016 891.152 1488.695 1009.602 1403.824 1098.844 c 1318.953
 1188.086 1203.031 1241.293 1080.031 1247.457 c 957.031 1253.625 836.367
 1212.277 742.996 1131.969 c 649.629 1051.66 590.699 938.539 578.398 816
 c 384 816 l 384 854.191 368.828 890.816 341.824 917.824 c 314.816 944.828
 278.191 960 240 960 c 144 960 l 105.809 960 69.184 944.828 42.176 917.824
 c 15.172 890.816 0 854.191 0 816 c 0 720 l 0 681.809 15.172 645.184 42.176
 618.176 c 69.184 591.172 105.809 576 144 576 c 240 576 l 278.191 576 314.816
 591.172 341.824 618.176 c 368.828 645.184 384 681.809 384 720 c 578.398
 720 l 590.699 597.461 649.629 484.34 742.996 404.031 c 836.367 323.723 
957.031 282.375 1080.031 288.543 c 1203.031 294.707 1318.953 347.914 1403.824
 437.156 c 1488.695 526.398 1536.016 644.848 1536 768 c 1344 768 m 1344 
755.27 1338.941 743.062 1329.941 734.059 c 1320.938 725.059 1308.73 720 
1296 720 c 816 720 l 798.852 720 783.004 729.148 774.43 744 c 765.855 758.852
 765.855 777.148 774.43 792 c 783.004 806.852 798.852 816 816 816 c 1296
 816 l 1308.73 816 1320.938 810.941 1329.941 801.941 c 1338.941 792.938 
1344 780.73 1344 768 c f*
Q Q
showpage
%%Trailer
%%EOF
