%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
120.961 168.719 m 130.219 147.121 145.617 128.715 165.242 115.785 c 184.871
 102.859 207.859 95.98 231.359 96 c 536.734 96 l 584.734 96 628.125 124.609
 647.039 168.719 c 685.055 257.422 l 688.656 265.82 695.133 272.734 703.293
 276.812 c 727.293 288.812 744.332 311.133 749.613 337.387 c 765.691 417.98
 l 767.293 425.723 768.074 433.566 768.043 441.5 c 768.043 461.324 l 768.043
 500.395 749.324 535.387 720.043 557.18 c 720.047 648 l 720.047 654.363 
717.52 660.469 713.02 664.969 c 708.52 669.473 702.414 672 696.047 672 c
 600.047 672 l 593.684 672 587.578 669.473 583.078 664.969 c 578.578 660.469
 576.047 654.363 576.047 648 c 576.047 583.777 l 514.031 586.082 444.285
 588 384.047 588 c 323.809 588 254.062 586.078 192.047 583.777 c 192.047
 648 l 192.047 654.363 189.52 660.469 185.02 664.969 c 180.52 669.473 174.414
 672 168.047 672 c 72.047 672 l 65.684 672 59.578 669.473 55.078 664.969
 c 50.578 660.469 48.047 654.363 48.047 648 c 48.047 557.184 l 18.766 535.391
 0.047 500.398 0.047 461.328 c 0.047 441.504 l 0.055 433.605 0.844 425.727
 2.398 417.984 c 18.477 337.344 l 23.758 311.137 40.797 288.77 64.75 276.816
 c 64.754 276.816 l 72.969 272.742 79.453 265.863 83.039 257.426 c 121.055
 168.723 l h
444.961 193.199 m 441.352 191.094 436.766 191.773 433.922 194.832 c 290.398
 347.809 l 287.961 350.434 287.305 354.254 288.73 357.543 c 290.156 360.828
 293.391 362.961 296.977 362.977 c 356.543 362.977 l 324.238 468.336 l 323.035
 472.348 324.719 476.664 328.32 478.801 c 331.922 480.863 336.48 480.242
 339.359 477.168 c 477.598 324.191 l 477.602 324.191 l 480.039 321.566 480.695
 317.746 479.27 314.457 c 477.844 311.172 474.609 309.039 471.023 309.023
 c 411.457 309.023 l 448.992 203.664 l 450.195 199.652 448.512 195.336 444.91
 193.199 c h
444.961 193.199 m f
Q Q
showpage
%%Trailer
%%EOF
