%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
15.121 21.09 m 16.277 18.391 18.203 16.09 20.656 14.473 c 23.109 12.855
 25.98 11.996 28.922 12 c 67.094 12 l 73.094 12 78.52 15.574 80.883 21.09
 c 85.637 32.18 l 86.086 33.23 86.898 34.094 87.918 34.605 c 90.918 36.105
 93.047 38.895 93.707 42.176 c 95.719 52.25 l 95.918 53.219 96.016 54.199
 96.012 55.191 c 96.012 57.668 l 96.012 62.551 93.672 66.926 90.012 69.648
 c 90.008 81 l 90.008 81.797 89.691 82.559 89.129 83.121 c 88.566 83.684
 87.801 84 87.008 84 c 75.008 84 l 73.348 84 72.008 82.656 72.008 81 c 72.008
 72.973 l 64.254 73.262 55.539 73.5 48.008 73.5 c 40.477 73.5 31.762 73.262
 24.008 72.973 c 24.008 81 l 24.008 81.797 23.691 82.559 23.129 83.121 c
 22.566 83.684 21.801 84 21.008 84 c 9.008 84 l 7.348 84 6.008 82.656 6.008
 81 c 6.008 69.648 l 2.348 66.926 0.008 62.551 0.008 57.668 c 0.008 55.188
 l 0.008 54.199 0.105 53.215 0.301 52.246 c 2.312 42.168 l 2.973 38.891 
5.102 36.098 8.098 34.602 c 8.094 34.602 l 9.121 34.094 9.934 33.234 10.379
 32.18 c 15.133 21.09 l h
55.621 24.148 m 55.168 23.887 54.594 23.973 54.238 24.355 c 36.301 43.477
 l 35.996 43.805 35.914 44.281 36.09 44.691 c 36.27 45.105 36.676 45.371
 37.121 45.371 c 44.566 45.371 l 40.527 58.543 l 40.531 58.543 l 40.379 
59.043 40.59 59.582 41.039 59.852 c 41.488 60.109 42.059 60.031 42.418 59.648
 c 59.699 40.527 l 59.699 40.523 l 60.004 40.195 60.086 39.719 59.91 39.309
 c 59.73 38.895 59.324 38.629 58.879 38.629 c 51.434 38.629 l 56.125 25.457
 l 56.273 24.957 56.062 24.418 55.613 24.148 c h
55.621 24.148 m f
Q Q
showpage
%%Trailer
%%EOF
