%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
528 0 m 540.73 0 552.938 5.059 561.941 14.059 c 570.941 23.062 576 35.27
 576 48 c 576 432 l 576 470.191 560.828 506.816 533.824 533.824 c 506.816
 560.828 470.191 576 432 576 c 48 576 l 30.852 576 15.004 566.852 6.43 552
 c -2.145 537.148 -2.145 518.852 6.43 504 c 15.004 489.148 30.852 480 48
 480 c 432 480 l 444.73 480 456.938 474.941 465.941 465.941 c 474.941 456.938
 480 444.73 480 432 c 480 48 l 480 35.27 485.059 23.062 494.059 14.059 c
 503.062 5.059 515.27 0 528 0 c 1008 0 m 1020.73 0 1032.938 5.059 1041.941
 14.059 c 1050.941 23.062 1056 35.27 1056 48 c 1056 432 l 1056 444.73 1061.059
 456.938 1070.059 465.941 c 1079.062 474.941 1091.27 480 1104 480 c 1488
 480 l 1505.148 480 1520.996 489.148 1529.57 504 c 1538.145 518.852 1538.145
 537.148 1529.57 552 c 1520.996 566.852 1505.148 576 1488 576 c 1104 576
 l 1065.809 576 1029.184 560.828 1002.176 533.824 c 975.172 506.816 960 
470.191 960 432 c 960 48 l 960 35.27 965.059 23.062 974.059 14.059 c 983.062
 5.059 995.27 0 1008 0 c 0 1008 m 0 995.27 5.059 983.062 14.059 974.059 
c 23.062 965.059 35.27 960 48 960 c 432 960 l 470.191 960 506.816 975.172
 533.824 1002.176 c 560.828 1029.184 576 1065.809 576 1104 c 576 1488 l 
576 1505.148 566.852 1520.996 552 1529.57 c 537.148 1538.145 518.852 1538.145
 504 1529.57 c 489.148 1520.996 480 1505.148 480 1488 c 480 1104 l 480 1091.27
 474.941 1079.062 465.941 1070.059 c 456.938 1061.059 444.73 1056 432 1056
 c 48 1056 l 35.27 1056 23.062 1050.941 14.059 1041.941 c 5.059 1032.938
 0 1020.73 0 1008 c 960 1104 m 960 1065.809 975.172 1029.184 1002.176 1002.176
 c 1029.184 975.172 1065.809 960 1104 960 c 1488 960 l 1505.148 960 1520.996
 969.148 1529.57 984 c 1538.145 998.852 1538.145 1017.148 1529.57 1032 c
 1520.996 1046.852 1505.148 1056 1488 1056 c 1104 1056 l 1091.27 1056 1079.062
 1061.059 1070.059 1070.059 c 1061.059 1079.062 1056 1091.27 1056 1104 c
 1056 1488 l 1056 1505.148 1046.852 1520.996 1032 1529.57 c 1017.148 1538.145
 998.852 1538.145 984 1529.57 c 969.148 1520.996 960 1505.148 960 1488 c
 h
960 1104 m f
Q Q
showpage
%%Trailer
%%EOF
