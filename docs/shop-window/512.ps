%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
71.281 32.398 m 75.84 27.07 82.504 24 89.52 24 c 294.48 24 l 301.496 24
 308.16 27.07 312.719 32.398 c 375.336 105.453 l 375.336 105.457 l 380.926
 111.98 384 120.289 384 128.879 c 384 135 l 384 150.941 377.328 166.152 
365.602 176.945 c 353.871 187.742 338.16 193.133 322.273 191.809 c 306.391
 190.488 291.785 182.574 282 169.992 c 271.211 183.895 254.598 192.02 237
 192 c 219.402 192.02 202.789 183.895 192 169.992 c 181.211 183.895 164.598
 192.02 147 192 c 129.402 192.02 112.789 183.895 102 169.992 c 92.215 182.574
 77.609 190.488 61.727 191.809 c 45.84 193.133 30.129 187.742 18.398 176.945
 c 6.672 166.152 0 150.941 0 135 c 0 128.879 l 0 120.289 3.074 111.98 8.664
 105.457 c h
114 135 m 114 146.789 120.289 157.684 130.5 163.578 c 140.711 169.473 153.289
 169.473 163.5 163.578 c 173.711 157.684 180 146.789 180 135 c 180 128.371
 185.371 123 192 123 c 198.629 123 204 128.371 204 135 c 204 146.789 210.289
 157.684 220.5 163.578 c 230.711 169.473 243.289 169.473 253.5 163.578 c
 263.711 157.684 270 146.789 270 135 c 270 128.371 275.371 123 282 123 c
 288.629 123 294 128.371 294 135 c 294 146.789 300.289 157.684 310.5 163.578
 c 320.711 169.473 333.289 169.473 343.5 163.578 c 353.711 157.684 360 146.789
 360 135 c 360 128.879 l 360 126.02 358.98 123.254 357.121 121.078 c 294.48
 48 l 89.52 48 l 26.879 121.078 l 25.02 123.254 24 126.02 24 128.879 c 24
 135 l 24 146.789 30.289 157.684 40.5 163.578 c 50.711 169.473 63.289 169.473
 73.5 163.578 c 83.711 157.684 90 146.789 90 135 c 90 128.371 95.371 123
 102 123 c 108.629 123 114 128.371 114 135 c 36 204 m 39.184 204 42.234 
205.266 44.484 207.516 c 46.734 209.766 48 212.816 48 216 c 48 360 l 336
 360 l 336 216 l 336 209.371 341.371 204 348 204 c 354.629 204 360 209.371
 360 216 c 360 360 l 372 360 l 378.629 360 384 365.371 384 372 c 384 378.629
 378.629 384 372 384 c 12 384 l 5.371 384 0 378.629 0 372 c 0 365.371 5.371
 360 12 360 c 24 360 l 24 216 l 24 209.371 29.371 204 36 204 c 84 216 m 
87.184 216 90.234 217.266 92.484 219.516 c 94.734 221.766 96 224.816 96 
228 c 96 312 l 288 312 l 288 228 l 288 221.371 293.371 216 300 216 c 306.629
 216 312 221.371 312 228 c 312 312 l 312 318.363 309.473 324.469 304.969
 328.969 c 300.469 333.473 294.363 336 288 336 c 96 336 l 89.637 336 83.531
 333.473 79.031 328.969 c 74.527 324.469 72 318.363 72 312 c 72 228 l 72
 221.371 77.371 216 84 216 c f
Q Q
showpage
%%Trailer
%%EOF
