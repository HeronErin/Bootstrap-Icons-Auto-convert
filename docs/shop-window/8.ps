%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.113 0.508 m 1.184 0.422 1.289 0.375 1.398 0.375 c 4.602 0.375 l 4.711
 0.375 4.816 0.422 4.887 0.508 c 5.863 1.648 l 5.953 1.75 6 1.879 6 2.016
 c 6 2.109 l 6 2.488 5.758 2.828 5.398 2.953 c 5.039 3.074 4.641 2.957 4.406
 2.656 c 4.238 2.875 3.977 3 3.703 3 c 3.43 3 3.168 2.875 3 2.656 c 2.832
 2.875 2.57 3 2.297 3 c 2.023 3 1.762 2.875 1.594 2.656 c 1.359 2.957 0.961
 3.074 0.602 2.953 c 0.242 2.828 0 2.488 0 2.109 c 0 2.016 l 0 1.879 0.047
 1.75 0.137 1.648 c h
1.781 2.109 m 1.781 2.395 2.012 2.625 2.297 2.625 c 2.582 2.625 2.812 2.395
 2.812 2.109 c 2.812 1.859 3.188 1.859 3.188 2.109 c 3.188 2.395 3.418 2.625
 3.703 2.625 c 3.988 2.625 4.219 2.395 4.219 2.109 c 4.219 1.859 4.594 1.859
 4.594 2.109 c 4.594 2.395 4.824 2.625 5.109 2.625 c 5.395 2.625 5.625 2.395
 5.625 2.109 c 5.625 2.016 l 5.625 1.969 5.609 1.926 5.578 1.891 c 4.602
 0.75 l 1.398 0.75 l 0.422 1.891 l 0.391 1.926 0.375 1.969 0.375 2.016 c
 0.375 2.109 l 0.375 2.395 0.605 2.625 0.891 2.625 c 1.176 2.625 1.406 2.395
 1.406 2.109 c 1.406 1.859 1.781 1.859 1.781 2.109 c 0.562 3.188 m 0.668
 3.188 0.75 3.27 0.75 3.375 c 0.75 5.625 l 5.25 5.625 l 5.25 3.375 l 5.25
 3.125 5.625 3.125 5.625 3.375 c 5.625 5.625 l 5.812 5.625 l 6.062 5.625
 6.062 6 5.812 6 c 0.188 6 l -0.062 6 -0.062 5.625 0.188 5.625 c 0.375 5.625
 l 0.375 3.375 l 0.375 3.27 0.457 3.188 0.562 3.188 c 1.312 3.375 m 1.418
 3.375 1.5 3.457 1.5 3.562 c 1.5 4.875 l 4.5 4.875 l 4.5 3.562 l 4.5 3.312
 4.875 3.312 4.875 3.562 c 4.875 4.875 l 4.875 4.973 4.836 5.07 4.766 5.141
 c 4.695 5.211 4.598 5.25 4.5 5.25 c 1.5 5.25 l 1.293 5.25 1.125 5.082 1.125
 4.875 c 1.125 3.562 l 1.125 3.457 1.207 3.375 1.312 3.375 c f
Q Q
showpage
%%Trailer
%%EOF
