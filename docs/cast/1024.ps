%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
367.008 448.992 m 184.992 631.008 l 180.484 635.504 177.945 641.609 177.941
 647.977 c 177.934 654.348 180.461 660.457 184.961 664.961 c 189.461 669.465
 195.566 672 201.938 672 c 566.066 672 l 566.062 672 l 572.438 672.012 578.555
 669.488 583.062 664.984 c 587.574 660.48 590.109 654.367 590.105 647.992
 c 590.105 641.621 587.57 635.508 583.055 631.008 c 400.992 448.992 l 396.488
 444.477 390.375 441.941 384 441.941 c 377.625 441.941 371.512 444.477 367.008
 448.992 c f
547.871 528 m 696 528 l 702.363 528 708.469 525.473 712.969 520.969 c 717.473
 516.469 720 510.363 720 504 c 720 168 l 720 161.637 717.473 155.531 712.969
 151.031 c 708.469 146.527 702.363 144 696 144 c 72 144 l 65.637 144 59.531
 146.527 55.031 151.031 c 50.527 155.531 48 161.637 48 168 c 48 504 l 48
 510.363 50.527 516.469 55.031 520.969 c 59.531 525.473 65.637 528 72 528
 c 220.129 528 l 172.129 576 l 72 576 l 52.906 576 34.59 568.414 21.09 554.91
 c 7.586 541.41 0 523.094 0 504 c 0 168 l 0 148.906 7.586 130.59 21.09 117.09
 c 34.59 103.586 52.906 96 72 96 c 696 96 l 715.094 96 733.41 103.586 746.91
 117.09 c 760.414 130.59 768 148.906 768 168 c 768 504 l 768 523.094 760.414
 541.41 746.91 554.91 c 733.41 568.414 715.094 576 696 576 c 595.871 576
 l h
547.871 528 m f
Q Q
showpage
%%Trailer
%%EOF
