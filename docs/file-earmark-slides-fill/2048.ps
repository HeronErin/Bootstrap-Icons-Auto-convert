%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
672 938.879 m 672 693.121 l 672 683.906 682.176 678.145 690.238 682.945
 c 894.719 805.73 l 894.719 805.727 l 898.316 807.902 900.516 811.797 900.516
 816 c 900.516 820.203 898.316 824.098 894.719 826.273 c 690.238 949.152
 l 686.504 951.43 681.824 951.488 678.027 949.312 c 674.23 947.133 671.922
 943.062 672 938.688 c h
672 938.879 m f
892.129 0 m 384 0 l 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242
 192 141.078 192 192 c 192 1344 l 192 1377.703 200.871 1410.812 217.723 
1440 c 234.574 1469.188 258.812 1493.426 288 1510.277 c 317.188 1527.129
 350.297 1536 384 1536 c 1152 1536 l 1185.703 1536 1218.812 1527.129 1248
 1510.277 c 1277.188 1493.426 1301.426 1469.188 1318.277 1440 c 1335.129
 1410.812 1344 1377.703 1344 1344 c 1344 451.871 l 1343.996 426.414 1333.875
 402 1315.871 384 c 960 28.129 l 942 10.125 917.586 0.004 892.129 0 c 912
 336 m 912 144 l 1200 432 l 1008 432 l 982.539 432 958.121 421.887 940.117
 403.883 c 922.113 385.879 912 361.461 912 336 c 480 576 m 1056 576 l 1067.695
 576.004 1078.992 580.277 1087.758 588.02 c 1096.527 595.762 1102.164 606.441
 1103.617 618.047 c 1151.617 1002.047 l 1153.324 1015.707 1149.082 1029.441
 1139.977 1039.762 c 1130.867 1050.082 1117.766 1055.996 1104 1056 c 816
 1056 l 816 1249.535 l 898.848 1254.816 960 1273.633 960 1296 c 960 1322.496
 874.078 1344 768 1344 c 661.922 1344 576 1322.496 576 1296 c 576 1273.633
 637.152 1254.816 720 1249.535 c 720 1056 l 432 1056 l 418.234 1055.996 
405.133 1050.082 396.023 1039.762 c 386.918 1029.441 382.676 1015.707 384.383
 1002.047 c 432.383 618.047 l 433.836 606.441 439.473 595.762 448.242 588.02
 c 457.008 580.277 468.305 576.004 480 576 c f
Q Q
showpage
%%Trailer
%%EOF
