%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
156 0 m 149.371 0 144 5.371 144 12 c 144 18.629 149.371 24 156 24 c 168
 24 l 168 49.68 l 125.961 55.754 87.785 77.527 61.152 110.613 c 34.516 143.699
 21.402 185.641 24.441 228.008 c 27.484 270.371 46.457 310.012 77.543 338.953
 c 108.633 367.898 149.527 383.992 192 384 c 235.172 384 276.688 367.379
 307.93 337.586 c 339.172 307.793 357.75 267.113 359.805 223.992 c 361.855
 180.871 347.23 138.609 318.961 105.984 c 319.273 105.695 l 327.77 97.199
 l 336.242 105.695 l 336.238 105.695 l 338.477 108.012 341.547 109.332 344.766
 109.359 c 347.984 109.387 351.082 108.121 353.355 105.844 c 355.633 103.57
 356.898 100.473 356.871 97.254 c 356.844 94.035 355.523 90.965 353.207 
88.727 c 319.27 54.766 l 319.273 54.77 l 317.035 52.453 313.965 51.133 310.746
 51.105 c 307.527 51.078 304.43 52.344 302.156 54.621 c 299.879 56.895 298.613
 59.988 298.641 63.207 c 298.668 66.426 299.988 69.5 302.305 71.734 c 310.801
 80.23 l 302.016 89.016 l 277.723 67.91 247.855 54.262 216 49.703 c 216 
24 l 228 24 l 234.629 24 240 18.629 240 12 c 240 5.371 234.629 0 228 0 c
 h
204 134.398 m 204 216 l 204 219.184 202.734 222.234 200.484 224.484 c 198.234
 226.734 195.184 228 192 228 c 108 228 l 101.371 228 96 222.629 96 216 c
 96 209.371 101.371 204 108 204 c 180 204 l 180 134.398 l 180 127.773 185.371
 122.398 192 122.398 c 198.629 122.398 204 127.773 204 134.398 c f
Q Q
showpage
%%Trailer
%%EOF
