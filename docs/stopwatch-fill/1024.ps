%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
312 0 m 303.426 0 295.504 4.574 291.215 12 c 286.93 19.426 286.93 28.574
 291.215 36 c 295.504 43.426 303.426 48 312 48 c 336 48 l 336 99.359 l 251.926
 111.512 175.574 155.055 122.305 221.223 c 69.035 287.395 42.805 371.285
 48.887 456.016 c 54.969 540.742 92.914 620.027 155.09 677.91 c 217.262 
735.793 299.051 767.98 384 768 c 470.344 767.996 553.371 734.754 615.859
 675.168 c 678.348 615.582 715.5 534.23 719.605 447.984 c 723.715 361.738
 694.461 277.223 637.922 211.969 c 638.547 211.395 l 655.539 194.402 l 672.484
 211.395 l 672.48 211.391 l 676.953 216.023 683.098 218.66 689.535 218.719
 c 695.973 218.773 702.16 216.242 706.715 211.691 c 711.266 207.137 713.797
 200.949 713.742 194.512 c 713.688 188.074 711.047 181.93 706.414 177.457
 c 638.543 109.535 l 634.07 104.906 627.926 102.266 621.488 102.211 c 615.051
 102.152 608.863 104.688 604.309 109.238 c 599.758 113.789 597.227 119.98
 597.281 126.418 c 597.34 132.855 599.977 139 604.609 143.473 c 621.602 
160.465 l 604.035 178.031 l 604.031 178.031 l 555.445 135.82 495.715 108.523
 432 99.406 c 432 48 l 456 48 l 464.574 48 472.496 43.426 476.785 36 c 481.07
 28.574 481.07 19.426 476.785 12 c 472.496 4.574 464.574 0 456 0 c h
408 268.801 m 408 432 l 408 438.363 405.473 444.469 400.969 448.969 c 396.469
 453.473 390.363 456 384 456 c 216 456 l 207.426 456 199.504 451.426 195.215
 444 c 190.93 436.574 190.93 427.426 195.215 420 c 199.504 412.574 207.426
 408 216 408 c 360 408 l 360 268.801 l 360 260.227 364.574 252.301 372 248.016
 c 379.426 243.727 388.574 243.727 396 248.016 c 403.426 252.301 408 260.227
 408 268.801 c f
Q Q
showpage
%%Trailer
%%EOF
