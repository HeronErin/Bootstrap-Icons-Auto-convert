%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
624 0 m 606.852 0 591.004 9.148 582.43 24 c 573.855 38.852 573.855 57.148
 582.43 72 c 591.004 86.852 606.852 96 624 96 c 672 96 l 672 198.719 l 503.852
 223.023 351.145 310.105 244.609 442.449 c 138.07 574.789 85.605 742.57 
97.77 912.027 c 109.938 1081.488 185.828 1240.055 310.176 1355.82 c 434.527
 1471.586 598.105 1535.965 768 1536 c 940.688 1535.992 1106.742 1469.508
 1231.719 1350.34 c 1356.695 1231.168 1431 1068.461 1439.215 895.969 c 1447.43
 723.477 1388.926 554.445 1275.84 423.938 c 1277.086 422.785 l 1311.07 388.801
 l 1344.957 422.785 l 1344.961 422.785 l 1353.906 432.043 1366.195 437.324
 1379.07 437.438 c 1391.941 437.547 1404.324 432.484 1413.426 423.379 c 
1422.531 414.273 1427.598 401.895 1427.484 389.02 c 1427.371 376.145 1422.094
 363.855 1412.832 354.91 c 1277.09 219.07 l 1268.145 209.812 1255.855 204.531
 1242.98 204.422 c 1230.105 204.309 1217.727 209.375 1208.621 218.477 c 
1199.516 227.582 1194.453 239.961 1194.562 252.836 c 1194.676 265.711 1199.957
 278 1209.215 286.945 c 1243.199 320.93 l 1208.062 356.066 l 1208.062 356.062
 l 1110.891 271.645 991.426 217.047 864 198.816 c 864 96 l 912 96 l 929.148
 96 944.996 86.852 953.57 72 c 962.145 57.148 962.145 38.852 953.57 24 c
 944.996 9.148 929.148 0 912 0 c h
816 537.602 m 816 864 l 816 876.73 810.941 888.938 801.941 897.941 c 792.938
 906.941 780.73 912 768 912 c 432 912 l 414.852 912 399.004 902.852 390.43
 888 c 381.855 873.148 381.855 854.852 390.43 840 c 399.004 825.148 414.852
 816 432 816 c 720 816 l 720 537.602 l 720 520.453 729.148 504.605 744 496.031
 c 758.852 487.457 777.148 487.457 792 496.031 c 806.852 504.605 816 520.453
 816 537.602 c f
Q Q
showpage
%%Trailer
%%EOF
