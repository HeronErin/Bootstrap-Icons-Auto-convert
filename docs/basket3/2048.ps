%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1441
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1441
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1441 rectclip
1 0 0 -1 0 1536 cm q
0 g
552.672 102.816 m 563.598 109.359 571.473 119.973 574.57 132.324 c 577.668
 144.676 575.73 157.75 569.184 168.672 c 324.77 576 l 1211.234 576 l 966.719
 168.672 l 957.906 153.957 957.609 135.66 965.945 120.668 c 974.281 105.68
 989.98 96.273 1007.129 95.996 c 1024.277 95.723 1040.273 104.613 1049.09
 119.328 c 1323.168 576 l 1488 576 l 1500.73 576 1512.938 581.059 1521.941
 590.059 c 1530.941 599.062 1536 611.27 1536 624 c 1536 720 l 1536 732.73
 1530.941 744.938 1521.941 753.941 c 1512.938 762.941 1500.73 768 1488 768
 c 48 768 l 35.27 768 23.062 762.941 14.059 753.941 c 5.059 744.938 0 732.73
 0 720 c 0 624 l 0 611.27 5.059 599.062 14.059 590.059 c 23.062 581.059 
35.27 576 48 576 c 212.832 576 l 486.719 119.328 l 493.262 108.402 503.875
 100.527 516.227 97.43 c 528.578 94.332 541.652 96.27 552.574 102.816 c 
h
325.824 1440 m 183.746 864 l 90.625 864 l 237.023 1480.895 l 240.816 1496.602
 249.777 1510.574 262.473 1520.57 c 275.164 1530.562 290.852 1536 307.008
 1536 c 1229.184 1536 l 1245.355 1536.02 1261.066 1530.594 1273.777 1520.598
 c 1286.492 1510.602 1295.469 1496.617 1299.266 1480.895 c 1445.375 864 
l 1352.062 864 l 1210.078 1440 l h
325.824 1440 m f
Q Q
showpage
%%Trailer
%%EOF
