%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
0 192 m 0 166.539 10.113 142.121 28.117 124.117 c 46.121 106.113 70.539
 96 96 96 c 672 96 l 697.461 96 721.879 106.113 739.883 124.117 c 757.887
 142.121 768 166.539 768 192 c 768 576 l 768 601.461 757.887 625.879 739.883
 643.883 c 721.879 661.887 697.461 672 672 672 c 96 672 l 70.539 672 46.121
 661.887 28.117 643.883 c 10.113 625.879 0 601.461 0 576 c h
432 264 m 432 270.363 434.527 276.469 439.031 280.969 c 443.531 285.473
 449.637 288 456 288 c 648 288 l 656.574 288 664.496 283.426 668.785 276
 c 673.07 268.574 673.07 259.426 668.785 252 c 664.496 244.574 656.574 240
 648 240 c 456 240 l 449.637 240 443.531 242.527 439.031 247.031 c 434.527
 251.531 432 257.637 432 264 c 432 384 m 432 390.363 434.527 396.469 439.031
 400.969 c 443.531 405.473 449.637 408 456 408 c 648 408 l 656.574 408 664.496
 403.426 668.785 396 c 673.07 388.574 673.07 379.426 668.785 372 c 664.496
 364.574 656.574 360 648 360 c 456 360 l 449.637 360 443.531 362.527 439.031
 367.031 c 434.527 371.531 432 377.637 432 384 c 480 504 m 480 510.363 482.527
 516.469 487.031 520.969 c 491.531 525.473 497.637 528 504 528 c 648 528
 l 656.574 528 664.496 523.426 668.785 516 c 673.07 508.574 673.07 499.426
 668.785 492 c 664.496 484.574 656.574 480 648 480 c 504 480 l 497.637 480
 491.531 482.527 487.031 487.031 c 482.527 491.531 480 497.637 480 504 c
 432 600 m 432 507.215 346.078 432 240 432 c 139.871 432 57.602 499.105 
48.77 584.688 c 50.801 595.73 56.641 605.711 65.27 612.895 c 73.898 620.074
 84.773 624.004 96 624 c 430.078 624 l 431.359 616.16 432 608.16 432 600
 c 336 288 m 336 253.703 317.703 222.012 288 204.863 c 258.297 187.711 221.703
 187.711 192 204.863 c 162.297 222.012 144 253.703 144 288 c 144 322.297
 162.297 353.988 192 371.137 c 221.703 388.289 258.297 388.289 288 371.137
 c 317.703 353.988 336 322.297 336 288 c f
Q Q
showpage
%%Trailer
%%EOF
