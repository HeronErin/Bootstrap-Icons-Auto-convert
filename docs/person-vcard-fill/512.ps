%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
0 96 m 0 83.27 5.059 71.062 14.059 62.059 c 23.062 53.059 35.27 48 48 48
 c 336 48 l 348.73 48 360.938 53.059 369.941 62.059 c 378.941 71.062 384
 83.27 384 96 c 384 288 l 384 300.73 378.941 312.938 369.941 321.941 c 360.938
 330.941 348.73 336 336 336 c 48 336 l 35.27 336 23.062 330.941 14.059 321.941
 c 5.059 312.938 0 300.73 0 288 c h
216 132 m 216 135.184 217.266 138.234 219.516 140.484 c 221.766 142.734
 224.816 144 228 144 c 324 144 l 330.629 144 336 138.629 336 132 c 336 125.371
 330.629 120 324 120 c 228 120 l 221.371 120 216 125.371 216 132 c 216 192
 m 216 195.184 217.266 198.234 219.516 200.484 c 221.766 202.734 224.816
 204 228 204 c 324 204 l 330.629 204 336 198.629 336 192 c 336 185.371 330.629
 180 324 180 c 228 180 l 221.371 180 216 185.371 216 192 c 240 252 m 240
 255.184 241.266 258.234 243.516 260.484 c 245.766 262.734 248.816 264 252
 264 c 324 264 l 330.629 264 336 258.629 336 252 c 336 245.371 330.629 240
 324 240 c 252 240 l 245.371 240 240 245.371 240 252 c 216 300 m 216 253.609
 173.039 216 120 216 c 69.938 216 28.801 249.551 24.383 292.344 c 25.398
 297.863 28.32 302.855 32.633 306.445 c 36.949 310.039 42.387 312.004 48
 312 c 215.039 312 l 215.68 308.078 216 304.078 216 300 c 168 144 m 168 
126.852 158.852 111.004 144 102.43 c 129.148 93.855 110.852 93.855 96 102.43
 c 81.148 111.004 72 126.852 72 144 c 72 161.148 81.148 176.996 96 185.57
 c 110.852 194.145 129.148 194.145 144 185.57 c 158.852 176.996 168 161.148
 168 144 c f
Q Q
showpage
%%Trailer
%%EOF
