%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
72 60 m 72 53.371 77.371 48 84 48 c 204 48 l 207.184 48 210.234 49.266 
212.484 51.516 c 214.734 53.766 216 56.816 216 60 c 216 180 l 216 183.184
 214.734 186.234 212.484 188.484 c 210.234 190.734 207.184 192 204 192 c
 84 192 l 77.371 192 72 186.629 72 180 c h
72 60 m f
24 48 m 24 35.27 29.059 23.062 38.059 14.059 c 47.062 5.059 59.27 0 72 
0 c 216 0 l 228.73 0 240.938 5.059 249.941 14.059 c 258.941 23.062 264 35.27
 264 48 c 264 240 l 276.73 240 288.938 245.059 297.941 254.059 c 306.941
 263.062 312 275.27 312 288 c 312 300 l 312 306.629 317.371 312 324 312 
c 330.629 312 336 306.629 336 300 c 336 192 l 324 192 l 317.371 192 312 
186.629 312 180 c 312 105 l 312 98.371 317.371 93 324 93 c 359.879 93 l 
359.613 81.574 358.605 71.543 355.055 63.672 c 353.156 59.094 349.84 55.242
 345.602 52.68 c 341.188 50.039 334.465 48 324 48 c 317.371 48 312 42.629
 312 36 c 312 29.371 317.371 24 324 24 c 337.535 23.969 348.832 26.656 357.887
 32.062 c 367.078 37.535 373.102 45.285 376.941 53.832 c 384.02 69.551 383.996
 88.992 383.996 103.777 c 383.996 179.977 l 384 179.977 l 384.008 183.164
 382.746 186.223 380.492 188.477 c 378.242 190.734 375.188 192 372 192 c
 360 192 l 360 300 l 360 312.863 353.137 324.746 342 331.176 c 330.863 337.609
 317.137 337.609 306 331.176 c 294.863 324.746 288 312.863 288 300 c 288
 288 l 288 281.637 285.473 275.531 280.969 271.031 c 276.469 266.527 270.363
 264 264 264 c 264 360 l 276 360 l 282.629 360 288 365.371 288 372 c 288
 378.629 282.629 384 276 384 c 12 384 l 5.371 384 0 378.629 0 372 c 0 365.371
 5.371 360 12 360 c 24 360 l h
240 48 m 240 41.637 237.473 35.531 232.969 31.031 c 228.469 26.527 222.363
 24 216 24 c 72 24 l 65.637 24 59.531 26.527 55.031 31.031 c 50.527 35.531
 48 41.637 48 48 c 48 360 l 240 360 l h
240 48 m f
Q Q
showpage
%%Trailer
%%EOF
