%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 5 0 192 178
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 5 0 192 178
192 192 cairo_set_page_size
%%EndPageSetup
q 5 0 187 178 rectclip
1 0 0 -1 0 192 cm q
0 g
150 192 m 165.004 192 178.871 183.996 186.375 171 c 193.875 158.004 193.875
 141.996 186.375 129 c 178.871 116.004 165.004 108 150 108 c 134.996 108
 121.129 116.004 113.625 129 c 106.125 141.996 106.125 158.004 113.625 171
 c 121.129 183.996 134.996 192 150 192 c 154.246 121.754 m 172.246 139.754
 l 174.594 142.098 174.594 145.902 172.246 148.246 c 169.902 150.594 166.098
 150.594 163.754 148.246 c 156 140.484 l 156 174 l 156 177.312 153.312 180
 150 180 c 146.688 180 144 177.312 144 174 c 144 140.484 l 136.246 148.25
 l 136.246 148.246 l 133.906 150.594 130.105 150.598 127.758 148.254 c 125.41
 145.91 125.41 142.109 127.754 139.766 c 145.754 121.766 l 146.879 120.637
 148.406 120 150 120 c 151.594 120 153.121 120.637 154.246 121.766 c h
154.246 121.754 m f
104.484 18 m 99.797 13.316 92.203 13.316 87.516 18 c 7.754 97.754 l 5.406
 100.098 5.406 103.902 7.754 106.246 c 10.098 108.594 13.902 108.594 16.246
 106.246 c 96 26.484 l 175.754 106.25 l 175.754 106.246 l 178.098 108.594
 181.902 108.594 184.246 106.246 c 186.594 103.902 186.594 100.098 184.246
 97.754 c 156 69.516 l 156 30 l 156 28.41 155.367 26.883 154.242 25.758 
c 153.117 24.633 151.59 24 150 24 c 138 24 l 134.688 24 132 26.688 132 30
 c 132 45.516 l h
104.484 18 m f
96 39.516 m 152.543 96.059 l 139.164 95.43 126.027 99.789 115.688 108.301
 c 105.344 116.809 98.531 128.859 96.574 142.109 c 94.617 155.359 97.656
 168.863 105.098 180 c 42 180 l 37.227 180 32.648 178.105 29.273 174.727
 c 25.895 171.352 24 166.773 24 162 c 24 111.516 l h
96 39.516 m f
Q Q
showpage
%%Trailer
%%EOF
