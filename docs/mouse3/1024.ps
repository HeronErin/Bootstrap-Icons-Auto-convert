%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
336 0 m 307.488 0.062 283.055 7.473 262.703 22.223 c 242.641 36.719 228.289
 57.07 218.062 80.207 c 197.902 125.711 192 186.191 192 248.977 c 192 273.168
 l 162.336 288 l 142.402 297.965 125.641 313.285 113.922 332.242 c 102.207
 351.199 96 373.043 96 395.328 c 96 518.977 l 96 655.633 202.559 768 336
 768 c 432 768 l 565.441 768 672 655.586 672 518.977 c 672 248.93 l 672 
194.691 658.945 150.816 636.098 115.875 c 613.344 81.027 581.859 56.594 
547.344 39.555 c 479.09 5.902 396.48 0 336 0 c 456 292.754 m 456 59.137 
l 480.48 64.418 504.383 71.953 526.078 82.656 c 554.688 96.719 578.832 115.969
 595.918 142.176 c 612.957 168.238 623.996 202.75 623.996 248.977 c 623.996
 330.098 l h
408 51.555 m 408 282.098 l 240 244.754 l 240.289 185.137 246.434 134.691
 261.938 99.602 c 269.715 82.035 279.363 69.363 290.832 61.152 c 302.016
 53.039 316.465 48 336 48 c 358.465 48 383.039 48.863 408 51.551 c 240 293.953
 m 624 379.199 l 624 518.977 l 624 630.961 537.121 720 432 720 c 336 720
 l 230.879 720 144 630.961 144 518.977 c 144 395.328 l 144 381.949 147.727
 368.836 154.766 357.457 c 161.801 346.078 171.871 336.887 183.84 330.91
 c 192.816 326.445 l 193.297 339.164 193.969 354.285 195.074 370.605 c 198.051
 415.629 204.195 472.367 217.25 511.582 c 217.246 511.586 l 219.074 517.848
 223.371 523.094 229.148 526.121 c 234.926 529.148 241.688 529.695 247.879
 527.633 c 254.066 525.57 259.148 521.078 261.953 515.188 c 264.762 509.301
 265.047 502.523 262.754 496.414 c 251.859 463.629 245.953 412.414 242.93
 367.391 c 241.324 342.973 240.363 318.516 240.047 294.047 c 240.047 293.949
 l h
240 293.953 m f
Q Q
showpage
%%Trailer
%%EOF
