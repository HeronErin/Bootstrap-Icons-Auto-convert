%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
84 0 m 76.871 0.016 70.766 1.867 65.676 5.555 c 60.66 9.18 57.07 14.266
 54.516 20.051 c 49.477 31.43 48 46.547 48 62.242 c 48 68.289 l 40.586 72
 l 35.602 74.492 31.41 78.32 28.48 83.059 c 25.551 87.801 24 93.262 24 98.832
 c 24 129.742 l 24 163.906 50.641 192 84 192 c 108 192 l 141.359 192 168
 163.895 168 129.742 c 168 62.23 l 168 48.672 164.734 37.703 159.023 28.965
 c 153.336 20.254 145.465 14.145 136.836 9.887 c 119.773 1.477 99.121 0 
84 0 c 114 73.188 m 114 14.785 l 120.121 16.105 126.098 17.988 131.52 20.664
 c 138.672 24.18 144.707 28.992 148.98 35.543 c 153.242 42.059 156 50.688
 156 62.242 c 156 82.523 l h
102 12.887 m 102 70.523 l 60 61.188 l 60.07 46.285 61.609 33.672 65.484
 24.898 c 67.43 20.508 69.84 17.34 72.707 15.285 c 75.504 13.262 79.117 
12 84 12 c 89.617 12 95.762 12.215 102 12.887 c 60 73.488 m 156 94.801 l
 156 129.746 l 156 157.738 134.281 180 108 180 c 84 180 l 57.719 180 36 
157.738 36 129.742 c 36 98.832 l 36 95.488 36.934 92.211 38.691 89.363 c
 40.449 86.52 42.969 84.223 45.961 82.727 c 48.203 81.609 l 48.324 84.789
 48.492 88.57 48.766 92.648 c 49.508 103.906 51.047 118.09 54.309 127.891
 c 54.312 127.895 l 54.77 129.461 55.844 130.773 57.289 131.531 c 58.73 
132.289 60.422 132.422 61.969 131.906 c 63.516 131.391 64.785 130.27 65.488
 128.797 c 66.191 127.324 66.262 125.629 65.688 124.105 c 62.965 115.91 
61.488 103.105 60.73 91.848 c 60.332 85.742 60.09 79.629 60.012 73.512 c
 60.012 73.488 l h
60 73.488 m f
Q Q
showpage
%%Trailer
%%EOF
