%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
42 0 m 38.438 0.008 35.383 0.934 32.84 2.777 c 30.332 4.59 28.539 7.133
 27.262 10.023 c 24.738 15.715 24 23.273 24 31.121 c 24 34.145 l 20.293 
36 l 17.801 37.246 15.703 39.16 14.242 41.531 c 12.777 43.898 12 46.629 
12 49.414 c 12 64.871 l 12 81.953 25.32 96 42 96 c 54 96 l 70.68 96 84 81.949
 84 64.871 c 84 31.117 l 84 24.336 82.367 18.852 79.512 14.484 c 76.668 
10.129 72.73 7.074 68.418 4.945 c 59.887 0.738 49.559 0 42 0 c 57 36.594
 m 57 7.391 l 60.059 8.051 63.047 8.992 65.762 10.332 c 69.336 12.09 72.355
 14.496 74.492 17.773 c 76.621 21.031 78.004 25.344 78.004 31.125 c 78.004
 41.266 l h
51 6.445 m 51 35.262 l 30 30.594 l 30.035 23.141 30.805 16.836 32.742 12.449
 c 33.715 10.254 34.922 8.668 36.355 7.645 c 37.754 6.629 39.559 6 42 6 
c 44.809 6 47.879 6.109 51 6.445 c 30 36.742 m 78 47.398 l 78 64.871 l 78
 78.871 67.141 90 54 90 c 42 90 l 28.859 90 18 78.871 18 64.871 c 18 49.414
 l 18 46.004 19.93 42.887 22.98 41.363 c 24.102 40.805 l 24.16 42.395 24.246
 44.285 24.383 46.324 c 24.754 51.953 25.523 59.043 27.156 63.945 c 27.156
 63.949 l 27.383 64.73 27.922 65.387 28.645 65.766 c 29.367 66.145 30.211
 66.211 30.984 65.953 c 31.758 65.695 32.395 65.133 32.746 64.398 c 33.094
 63.664 33.133 62.816 32.844 62.051 c 31.48 57.953 30.742 51.551 30.367 
45.922 c 30.367 45.926 l 30.164 42.871 30.047 39.816 30.008 36.758 c 30.008
 36.746 l h
30 36.742 m f
Q Q
showpage
%%Trailer
%%EOF
