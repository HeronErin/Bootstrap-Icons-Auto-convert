%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
168 0 m 153.742 0.031 141.527 3.734 131.352 11.113 c 121.32 18.359 114.145
 28.539 109.031 40.105 c 98.953 62.855 96 93.098 96 124.488 c 96 136.586
 l 81.168 144 l 71.203 148.984 62.82 156.645 56.961 166.121 c 51.105 175.598
 48 186.52 48 197.664 c 48 259.488 l 48 327.816 101.281 384 168 384 c 216
 384 l 282.719 384 336 327.793 336 259.488 c 336 124.465 l 336 97.344 329.473
 75.41 318.047 57.938 c 306.672 40.512 290.926 28.297 273.672 19.777 c 239.543
 2.953 198.238 0 168 0 c 228 146.375 m 228 29.566 l 240.238 32.207 252.191
 35.973 263.039 41.328 c 277.344 48.359 289.414 57.984 297.961 71.09 c 306.48
 84.121 312 101.379 312 124.488 c 312 165.047 l h
204 25.773 m 204 141.047 l 120 122.375 l 120.145 92.566 123.215 67.344 
130.969 49.801 c 134.855 41.016 139.68 34.68 145.418 30.578 c 151.008 26.52
 158.23 24 168 24 c 179.23 24 191.52 24.434 204 25.777 c 120 146.977 m 312
 189.602 l 312 259.488 l 312 315.48 268.559 360 216 360 c 168 360 l 115.441
 360 72 315.48 72 259.488 c 72 197.664 l 72 190.977 73.863 184.418 77.383
 178.73 c 80.902 173.039 85.934 168.445 91.922 165.457 c 96.41 163.227 l
 96.648 169.586 96.984 177.148 97.539 185.305 c 99.027 207.816 102.098 236.184
 108.629 255.793 c 108.625 255.793 l 109.539 258.922 111.688 261.547 114.574
 263.062 c 117.465 264.574 120.844 264.848 123.938 263.816 c 127.031 262.785
 129.574 260.539 130.977 257.594 c 132.379 254.648 132.523 251.262 131.375
 248.207 c 125.926 231.816 122.977 206.207 121.465 183.695 c 120.66 171.488
 120.18 159.258 120.023 147.023 c 120.023 146.977 l h
120 146.977 m f
Q Q
showpage
%%Trailer
%%EOF
