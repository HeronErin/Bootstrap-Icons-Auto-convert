%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 47 96 1489 1421
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 47 96 1489 1421
1536 1536 cairo_set_page_size
%%EndPageSetup
q 47 96 1442 1325 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 670.273 m 927.742 509.664 1327.199 790.656 768 1152 c 208.801 790.656
 608.258 509.664 768 670.273 c f
835.871 144 m 817.871 126.004 793.457 115.891 768 115.891 c 742.543 115.891
 718.129 126.004 700.129 144 c 62.016 782.016 l 49.891 794.156 45.164 811.844
 49.617 828.414 c 54.07 844.984 67.027 857.922 83.602 862.352 c 100.18 866.781
 117.859 862.031 129.984 849.887 c 192 787.871 l 192 1296 l 192 1334.191
 207.172 1370.816 234.176 1397.824 c 261.184 1424.828 297.809 1440 336 1440
 c 1200 1440 l 1238.191 1440 1274.816 1424.828 1301.824 1397.824 c 1328.828
 1370.816 1344 1334.191 1344 1296 c 1344 787.871 l 1406.016 849.887 l 1418.141
 862.031 1435.82 866.781 1452.398 862.352 c 1468.973 857.922 1481.93 844.984
 1486.383 828.414 c 1490.836 811.844 1486.109 794.156 1473.984 782.016 c
 1248 556.129 l 1248 240 l 1248 227.27 1242.941 215.062 1233.941 206.059
 c 1224.938 197.059 1212.73 192 1200 192 c 1104 192 l 1091.27 192 1079.062
 197.059 1070.059 206.059 c 1061.059 215.062 1056 227.27 1056 240 c 1056
 364.129 l h
1248 691.871 m 1248 1296 l 1248 1308.73 1242.941 1320.938 1233.941 1329.941
 c 1224.938 1338.941 1212.73 1344 1200 1344 c 336 1344 l 323.27 1344 311.062
 1338.941 302.059 1329.941 c 293.059 1320.938 288 1308.73 288 1296 c 288
 691.871 l 768 211.871 l h
1248 691.871 m f
Q Q
showpage
%%Trailer
%%EOF
