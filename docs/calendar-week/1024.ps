%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
528 312 m 528 305.637 530.527 299.531 535.031 295.031 c 539.531 290.527
 545.637 288 552 288 c 600 288 l 606.363 288 612.469 290.527 616.969 295.031
 c 621.473 299.531 624 305.637 624 312 c 624 360 l 624 366.363 621.473 372.469
 616.969 376.969 c 612.469 381.473 606.363 384 600 384 c 552 384 l 545.637
 384 539.531 381.473 535.031 376.969 c 530.527 372.469 528 366.363 528 360
 c h
384 312 m 384 305.637 386.527 299.531 391.031 295.031 c 395.531 290.527
 401.637 288 408 288 c 456 288 l 462.363 288 468.469 290.527 472.969 295.031
 c 477.473 299.531 480 305.637 480 312 c 480 360 l 480 366.363 477.473 372.469
 472.969 376.969 c 468.469 381.473 462.363 384 456 384 c 408 384 l 401.637
 384 395.531 381.473 391.031 376.969 c 386.527 372.469 384 366.363 384 360
 c h
144 456 m 144 449.637 146.527 443.531 151.031 439.031 c 155.531 434.527
 161.637 432 168 432 c 216 432 l 222.363 432 228.469 434.527 232.969 439.031
 c 237.473 443.531 240 449.637 240 456 c 240 504 l 240 510.363 237.473 516.469
 232.969 520.969 c 228.469 525.473 222.363 528 216 528 c 168 528 l 161.637
 528 155.531 525.473 151.031 520.969 c 146.527 516.469 144 510.363 144 504
 c h
288 456 m 288 449.637 290.527 443.531 295.031 439.031 c 299.531 434.527
 305.637 432 312 432 c 360 432 l 366.363 432 372.469 434.527 376.969 439.031
 c 381.473 443.531 384 449.637 384 456 c 384 504 l 384 510.363 381.473 516.469
 376.969 520.969 c 372.469 525.473 366.363 528 360 528 c 312 528 l 305.637
 528 299.531 525.473 295.031 520.969 c 290.527 516.469 288 510.363 288 504
 c h
288 456 m f
168 0 m 174.363 0 180.469 2.527 184.969 7.031 c 189.473 11.531 192 17.637
 192 24 c 192 48 l 576 48 l 576 24 l 576 15.426 580.574 7.504 588 3.215 
c 595.426 -1.07 604.574 -1.07 612 3.215 c 619.426 7.504 624 15.426 624 24
 c 624 48 l 672 48 l 697.461 48 721.879 58.113 739.883 76.117 c 757.887 
94.121 768 118.539 768 144 c 768 672 l 768 697.461 757.887 721.879 739.883
 739.883 c 721.879 757.887 697.461 768 672 768 c 96 768 l 70.539 768 46.121
 757.887 28.117 739.883 c 10.113 721.879 0 697.461 0 672 c 0 144 l 0 118.539
 10.113 94.121 28.117 76.117 c 46.121 58.113 70.539 48 96 48 c 144 48 l 
144 24 l 144 17.637 146.527 11.531 151.031 7.031 c 155.531 2.527 161.637
 0 168 0 c 48 192 m 48 672 l 48 684.73 53.059 696.938 62.059 705.941 c 71.062
 714.941 83.27 720 96 720 c 672 720 l 684.73 720 696.938 714.941 705.941
 705.941 c 714.941 696.938 720 684.73 720 672 c 720 192 l h
48 192 m f
Q Q
showpage
%%Trailer
%%EOF
