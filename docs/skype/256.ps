%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 191 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 191 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 191 192 rectclip
1 0 0 -1 0 192 cm q
0 g
56.051 0 m 66.609 0 76.848 2.965 85.668 8.426 c 112.348 5.578 138.887 14.918
 157.906 33.84 c 174.543 50.418 183.898 72.934 183.91 96.422 c 183.91 100.559
 183.621 104.66 183.047 108.734 c 183.047 108.73 l 187.754 117.086 190.234
 126.512 190.246 136.105 c 190.254 150.945 184.336 165.172 173.809 175.633
 c 163.285 186.129 149.023 192.02 134.16 192 c 124.082 192 114.266 189.289
 105.719 184.273 c 78.684 187.504 51.656 178.191 32.352 158.988 c 15.723
 142.41 6.367 119.902 6.348 96.422 c 6.348 92.062 6.668 87.738 7.309 83.449
 c 1.254 72.816 -1.133 60.488 0.516 48.363 c 2.164 36.242 7.754 24.996 16.43
 16.367 c 26.949 5.891 41.191 0.004 56.039 0 c h
61.414 84.121 m 63.574 87.828 66.574 90.984 70.16 93.348 c 70.164 93.348
 l 74.914 96.465 79.969 99.09 85.246 101.184 c 91.141 103.648 95.723 105.738
 98.984 107.461 c 101.73 108.805 104.227 110.629 106.363 112.836 c 107.984
 114.539 108.883 116.809 108.883 119.172 c 108.887 119.172 l 109.027 122.543
 107.531 125.777 104.867 127.848 c 101.375 130.199 97.188 131.316 92.988
 131.016 c 88.672 131.07 84.387 130.23 80.41 128.543 c 78.258 127.59 76.129
 126.578 74.027 125.508 c 71.855 124.363 69.441 123.746 66.984 123.707 c
 64.785 123.621 62.633 124.375 60.973 125.82 c 59.367 127.348 58.512 129.5
 58.633 131.711 c 58.586 133.781 59.207 135.809 60.406 137.496 c 61.859 
139.336 63.738 140.793 65.879 141.742 c 74.242 145.375 83.312 147.094 92.426
 146.773 c 99.059 146.891 105.66 145.816 111.91 143.594 c 117.094 141.75
 121.605 138.402 124.871 133.98 c 128.074 129.301 129.695 123.719 129.504
 118.055 c 129.621 113.43 128.465 108.855 126.156 104.844 c 123.816 101.023
 120.652 97.777 116.891 95.34 c 112.145 92.258 107.102 89.668 101.832 87.602
 c 101.27 87.324 100.688 87.09 100.094 86.902 c 95.984 85.242 91.934 83.453
 87.938 81.539 c 85.508 80.406 83.309 78.832 81.457 76.895 c 79.898 75.25
 79.039 73.066 79.055 70.801 c 78.887 67.277 80.66 63.949 83.676 62.125 
c 87.18 60.035 91.215 59.004 95.293 59.16 c 98.414 59.125 101.531 59.52 
104.559 60.312 c 107.855 61.266 111.062 62.438 114.184 63.828 c 115.445 
64.418 116.824 64.727 118.215 64.738 c 118.211 64.738 l 120.266 64.789 122.246
 63.961 123.648 62.461 c 125.117 60.832 125.891 58.699 125.809 56.508 c 
125.84 54.422 125.117 52.391 123.77 50.797 c 121.914 48.871 119.625 47.414
 117.098 46.547 c 114.344 45.539 111.496 44.801 108.602 44.352 c 104.547
 43.691 100.441 43.379 96.336 43.414 c 90.059 43.367 83.82 44.418 77.902
 46.512 c 72.457 48.344 67.594 51.59 63.816 55.922 c 60.168 60.223 58.242
 65.727 58.414 71.363 c 58.293 75.805 59.324 80.195 61.414 84.121 c f
Q Q
showpage
%%Trailer
%%EOF
