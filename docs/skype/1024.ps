%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 761 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 761 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 761 768 rectclip
1 0 0 -1 0 768 cm q
0 g
224.207 0 m 266.445 0 307.391 11.855 342.672 33.695 c 395.367 28.078 448.652
 34.289 498.641 51.875 c 548.629 69.465 594.062 97.984 631.633 135.359 c
 664.574 168.199 690.719 207.207 708.566 250.16 c 726.414 293.113 735.617
 339.168 735.648 385.68 c 735.648 402.223 734.496 418.641 732.191 434.926
 c 732.191 434.93 l 751.023 468.352 760.941 506.055 760.992 544.414 c 761.004
 573.805 755.203 602.906 743.914 630.043 c 732.629 657.18 716.082 681.816
 695.23 702.527 c 674.391 723.32 649.66 739.805 622.449 751.039 c 595.238
 762.273 566.078 768.035 536.641 768 c 496.32 768 457.055 757.152 422.879
 737.09 c 369.5 743.473 315.371 737.688 264.547 720.172 c 213.723 702.66
 167.52 673.863 129.406 635.953 c 96.473 603.121 70.332 564.117 52.48 521.172
 c 34.633 478.227 25.43 432.188 25.391 385.68 c 25.391 368.238 26.672 350.945
 29.23 333.793 c 5.016 291.266 -4.531 241.949 2.059 193.457 c 8.652 144.965
 31.02 99.988 65.711 65.473 c 107.797 23.559 164.766 0.02 224.16 0 c h
245.664 336.48 m 254.305 351.312 266.305 363.938 280.656 373.391 c 299.656
 385.852 319.871 396.355 340.992 404.734 c 364.578 414.59 382.895 422.957
 395.953 429.84 c 406.945 435.215 416.93 442.512 425.473 451.344 c 431.953
 458.16 435.551 467.23 435.551 476.688 c 436.117 490.176 430.125 503.102
 419.473 511.391 c 405.504 520.797 388.754 525.262 371.953 524.062 c 354.68
 524.285 337.551 520.918 321.648 514.176 c 313.027 510.355 304.516 506.309
 296.113 502.031 c 287.418 497.445 277.766 494.98 267.938 494.832 c 259.137
 494.48 250.535 497.504 243.887 503.281 c 237.465 509.387 234.043 518 234.527
 526.848 c 234.34 535.125 236.832 543.238 241.633 549.984 c 247.438 557.344
 254.949 563.176 263.52 566.977 c 296.973 581.504 333.246 588.375 369.695
 587.09 c 396.234 587.566 422.641 583.258 447.648 574.367 c 468.371 567.004
 486.422 553.613 499.488 535.922 c 512.305 517.203 518.785 494.883 518.016
 472.227 c 518.016 472.223 l 518.492 453.711 513.859 435.426 504.625 419.375
 c 495.266 404.098 482.602 391.105 467.566 381.359 c 448.582 369.039 428.398
 358.664 407.328 350.398 c 405.086 349.293 402.758 348.359 400.367 347.617
 c 383.945 340.965 367.727 333.809 351.742 326.16 c 342.027 321.629 333.238
 315.332 325.824 307.586 c 319.59 301.004 316.148 292.266 316.223 283.199
 c 315.891 276.285 317.434 269.414 320.684 263.305 c 323.938 257.195 328.781
 252.078 334.703 248.496 c 348.723 240.141 364.859 236.02 381.168 236.641
 c 393.648 236.496 406.129 238.082 418.223 241.25 c 431.406 245.059 444.238
 249.746 456.719 255.312 c 461.758 257.664 467.277 258.914 472.848 258.961
 c 481.066 259.164 488.977 255.844 494.594 249.84 c 500.469 243.336 503.566
 234.793 503.23 226.031 c 503.363 217.68 500.465 209.562 495.07 203.184 
c 487.656 195.477 478.504 189.652 468.383 186.191 c 457.375 182.148 445.992
 179.207 434.398 177.406 c 418.184 174.762 401.773 173.512 385.344 173.664
 c 360.234 173.477 335.285 177.664 311.617 186.047 c 289.828 193.371 270.379
 206.359 255.266 223.68 c 240.668 240.891 232.973 262.902 233.664 285.457
 c 233.184 303.219 237.312 320.785 245.664 336.48 c f
Q Q
showpage
%%Trailer
%%EOF
