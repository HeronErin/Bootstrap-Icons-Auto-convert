%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1522 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1522 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1522 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
448.414 0 m 532.895 0 614.781 23.711 685.344 67.391 c 790.734 56.152 897.301
 68.574 997.281 103.75 c 1097.258 138.926 1188.129 195.969 1263.266 270.719
 c 1329.148 336.395 1381.438 414.418 1417.133 500.324 c 1452.832 586.23 
1471.234 678.332 1471.297 771.359 c 1471.297 804.449 1468.992 837.281 1464.387
 869.855 c 1464.383 869.855 l 1502.043 936.699 1521.879 1012.109 1521.984
 1088.832 c 1522.012 1147.613 1510.402 1205.816 1487.832 1260.09 c 1465.258
 1314.363 1432.168 1363.633 1390.465 1405.055 c 1348.781 1446.641 1299.32
 1479.609 1244.895 1502.074 c 1190.473 1524.543 1132.156 1536.07 1073.281
 1536 c 992.641 1536 914.113 1514.305 845.762 1474.176 c 739.004 1486.941
 630.742 1475.379 529.094 1440.348 c 427.441 1405.316 335.043 1347.73 258.816
 1271.902 c 192.941 1206.242 140.66 1128.234 104.965 1042.344 c 69.27 956.457
 50.855 864.371 50.785 771.359 c 50.785 736.48 53.344 701.887 58.465 667.582
 c 58.465 667.586 l 10.031 582.531 -9.066 483.902 4.121 386.914 c 17.305
 289.93 62.043 199.98 131.426 130.945 c 215.59 47.117 329.531 0.039 448.32
 0 c h
491.324 672.961 m 508.605 702.625 532.605 727.871 561.309 746.785 c 561.312
 746.785 l 599.312 771.707 639.742 792.711 681.984 809.473 c 729.152 829.184
 765.793 845.922 791.906 859.68 c 813.891 870.434 833.859 885.023 850.945
 902.688 c 863.906 916.32 871.105 934.465 871.105 953.375 c 872.23 980.352
 860.25 1006.207 838.945 1022.785 c 811.008 1041.602 777.504 1050.527 743.906
 1048.129 c 743.902 1048.129 l 709.359 1048.57 675.102 1041.836 643.297 
1028.352 c 626.059 1020.715 609.027 1012.613 592.223 1004.062 c 574.836 
994.895 555.527 989.957 535.871 989.664 c 518.273 988.961 501.07 995.004
 487.777 1006.559 c 474.93 1018.77 468.09 1036 469.055 1053.695 c 468.68
 1070.25 473.664 1086.48 483.266 1099.969 c 494.875 1114.688 509.898 1126.355
 527.039 1133.953 c 593.945 1163.012 666.496 1176.754 739.391 1174.176 c
 792.465 1175.137 845.281 1166.516 895.297 1148.734 c 936.746 1134.004 972.848
 1107.227 998.977 1071.84 c 1024.609 1034.398 1037.57 989.762 1036.031 944.449
 c 1036.98 907.426 1027.715 870.855 1009.246 838.754 c 990.531 808.191 965.207
 782.215 935.137 762.719 c 897.164 738.074 856.801 717.328 814.656 700.801
 c 810.168 698.582 805.516 696.723 800.734 695.23 c 767.887 681.93 735.457
 667.617 703.488 652.32 c 684.051 643.262 666.473 630.66 651.648 615.168
 c 639.18 602.008 632.301 584.527 632.449 566.398 c 631.781 552.574 634.863
 538.824 641.371 526.605 c 647.879 514.391 657.562 504.156 669.406 496.992
 c 697.445 480.277 729.719 472.043 762.336 473.281 c 787.297 472.992 812.258
 476.16 836.449 482.496 c 862.816 490.113 888.48 499.488 913.441 510.625
 c 923.52 515.328 934.562 517.824 945.699 517.922 c 945.695 517.922 l 962.129
 518.324 977.957 511.688 989.184 499.68 c 1000.934 486.668 1007.137 469.582
 1006.465 452.062 c 1006.727 435.359 1000.926 419.129 990.145 406.367 c 
975.309 390.953 957.012 379.301 936.77 372.383 c 914.746 364.297 891.98 
358.414 868.801 354.816 c 836.371 349.527 803.547 347.02 770.688 347.328
 c 720.469 346.949 670.57 355.332 623.23 372.098 c 579.652 386.746 540.758
 412.723 510.527 447.359 c 481.34 481.781 465.945 525.801 467.328 570.91
 c 466.367 606.43 474.625 641.566 491.328 672.957 c f
Q Q
showpage
%%Trailer
%%EOF
