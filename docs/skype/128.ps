%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
28.027 0 m 33.309 0 38.426 1.48 42.836 4.211 c 56.172 2.789 69.445 7.457
 78.953 16.922 c 87.27 25.211 91.949 36.469 91.957 48.211 c 91.957 50.277
 91.812 52.332 91.523 54.367 c 93.879 58.543 95.117 63.258 95.125 68.051
 c 95.129 75.473 92.168 82.586 86.902 87.816 c 81.645 93.066 74.512 96.008
 67.078 96 c 62.039 96 57.129 94.645 52.859 92.137 c 39.344 93.754 25.828
 89.094 16.176 79.492 c 7.859 71.207 3.184 59.949 3.176 48.211 c 3.176 46.031
 3.336 43.867 3.656 41.727 c 3.652 41.723 l 0.629 36.406 -0.566 30.242 0.258
 24.184 c 1.082 18.121 3.879 12.5 8.215 8.184 c 13.473 2.945 20.594 0.004
 28.02 0 c h
30.711 42.059 m 31.789 43.914 33.289 45.492 35.086 46.672 c 35.082 46.676
 l 37.457 48.23 39.984 49.543 42.625 50.594 c 45.574 51.824 47.863 52.871
 49.496 53.73 c 50.871 54.402 52.117 55.316 53.188 56.418 c 53.996 57.27
 54.449 58.402 54.449 59.586 c 54.445 59.586 l 54.516 61.273 53.766 62.887
 52.434 63.926 c 50.688 65.102 48.594 65.66 46.492 65.512 c 46.492 65.508
 l 44.336 65.535 42.195 65.113 40.207 64.273 c 39.129 63.793 38.062 63.289
 37.016 62.754 c 35.926 62.18 34.719 61.871 33.492 61.855 c 32.391 61.809
 31.316 62.188 30.484 62.91 c 29.684 63.672 29.254 64.75 29.316 65.855 c
 29.293 66.891 29.605 67.906 30.203 68.746 c 30.93 69.668 31.867 70.398 
32.941 70.871 c 37.121 72.688 41.656 73.547 46.211 73.387 c 49.527 73.445
 52.828 72.906 55.957 71.797 c 58.547 70.875 60.805 69.203 62.438 66.988
 c 64.039 64.648 64.848 61.859 64.754 59.027 c 64.812 56.715 64.23 54.43
 63.078 52.422 c 61.906 50.512 60.324 48.887 58.445 47.672 c 56.074 46.129
 53.551 44.832 50.914 43.801 c 50.637 43.66 50.344 43.547 50.047 43.453 
c 47.992 42.621 45.965 41.727 43.969 40.77 c 42.754 40.203 41.656 39.418
 40.727 38.449 c 39.949 37.625 39.52 36.531 39.527 35.398 c 39.441 33.641
 40.328 31.973 41.84 31.062 c 43.59 30.016 45.609 29.504 47.645 29.578 c
 49.203 29.559 50.766 29.758 52.277 30.152 c 53.926 30.629 55.531 31.215
 57.09 31.91 c 57.719 32.203 58.41 32.359 59.105 32.367 c 59.105 32.371 
l 60.133 32.395 61.121 31.98 61.824 31.23 c 62.559 30.418 62.945 29.348 
62.902 28.254 c 62.922 27.211 62.559 26.195 61.883 25.398 c 60.957 24.434
 59.812 23.707 58.547 23.273 c 57.172 22.77 55.75 22.402 54.301 22.176 c
 52.273 21.844 50.223 21.688 48.168 21.707 c 45.031 21.684 41.91 22.207 
38.953 23.258 c 36.227 24.172 33.797 25.797 31.906 27.961 c 30.082 30.109
 29.121 32.863 29.207 35.684 c 29.148 37.902 29.664 40.098 30.707 42.062
 c f
Q Q
showpage
%%Trailer
%%EOF
