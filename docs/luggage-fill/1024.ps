%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
96 72 m 96 65.637 98.527 59.531 103.031 55.031 c 107.531 50.527 113.637
 48 120 48 c 264 48 l 270.363 48 276.469 50.527 280.969 55.031 c 285.473
 59.531 288 65.637 288 72 c 288 240 l 312 240 l 331.094 240 349.41 247.586
 362.91 261.09 c 376.414 274.59 384 292.906 384 312 c 384 336 l 336 336 
l 336 312 l 336 305.637 333.473 299.531 328.969 295.031 c 324.469 290.527
 318.363 288 312 288 c 72 288 l 65.637 288 59.531 290.527 55.031 295.031
 c 50.527 299.531 48 305.637 48 312 c 48 648 l 48 654.363 50.527 660.469
 55.031 664.969 c 59.531 669.473 65.637 672 72 672 c 192 672 l 192 720 l
 120 720 l 120 732 l 120 744.863 113.137 756.746 102 763.176 c 90.863 769.609
 77.137 769.609 66 763.176 c 54.863 756.746 48 744.863 48 732 c 48 715.922
 l 33.957 710.953 21.797 701.758 13.203 689.59 c 4.605 677.426 -0.008 662.895
 0 648 c 0 312 l 0 292.906 7.586 274.59 21.09 261.09 c 34.59 247.586 52.906
 240 72 240 c 96 240 l h
144 240 m 240 240 l 240 96 l 144 96 l h
144 240 m f
120 336 m 126.363 336 132.469 338.527 136.969 343.031 c 141.473 347.531
 144 353.637 144 360 c 144 600 l 144 608.574 139.426 616.496 132 620.785
 c 124.574 625.07 115.426 625.07 108 620.785 c 100.574 616.496 96 608.574
 96 600 c 96 360 l 96 353.637 98.527 347.531 103.031 343.031 c 107.531 338.527
 113.637 336 120 336 c 600 384 m 600 360 l 600 340.906 592.414 322.59 578.91
 309.09 c 565.41 295.586 547.094 288 528 288 c 480 288 l 460.906 288 442.59
 295.586 429.09 309.09 c 415.586 322.59 408 340.906 408 360 c 408 384 l 
384 384 l 384 768 l 624 768 l 624 384 l h
480 336 m 528 336 l 534.363 336 540.469 338.527 544.969 343.031 c 549.473
 347.531 552 353.637 552 360 c 552 384 l 456 384 l 456 360 l 456 353.637
 458.527 347.531 463.031 343.031 c 467.531 338.527 473.637 336 480 336 c
 240 456 m 240 436.906 247.586 418.59 261.09 405.09 c 274.59 391.586 292.906
 384 312 384 c 336 384 l 336 768 l 312 768 l 292.906 768 274.59 760.414 
261.09 746.91 c 247.586 733.41 240 715.094 240 696 c h
672 768 m 672 384 l 696 384 l 715.094 384 733.41 391.586 746.91 405.09 
c 760.414 418.59 768 436.906 768 456 c 768 696 l 768 715.094 760.414 733.41
 746.91 746.91 c 733.41 760.414 715.094 768 696 768 c h
672 768 m f
Q Q
showpage
%%Trailer
%%EOF
