%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
119.52 96 m 115.875 96.004 112.434 97.664 110.16 100.512 c 36.961 192 l
 144 192 l 147.184 192 150.234 193.266 152.484 195.516 c 154.734 197.766
 156 200.816 156 204 c 156 216.863 162.863 228.746 174 235.176 c 185.137
 241.609 198.863 241.609 210 235.176 c 221.137 228.746 228 216.863 228 204
 c 228 197.371 233.371 192 240 192 c 347.039 192 l 273.84 100.512 l 271.566
 97.664 268.125 96.004 264.48 96 c h
358.414 216 m 250.801 216 l 247.098 234.227 235.156 249.703 218.465 257.906
 c 201.777 266.109 182.223 266.109 165.535 257.906 c 148.844 249.703 136.902
 234.227 133.199 216 c 25.586 216 l 33.266 277.488 l 34.016 283.5 39.133
 288.012 45.191 288 c 338.809 288 l 344.859 288 349.961 283.492 350.711 
277.488 c h
91.414 85.512 m 98.25 76.969 108.602 71.996 119.543 72 c 264.457 72 l 275.398
 71.996 285.75 76.969 292.586 85.512 c 381.387 196.512 l 381.383 196.512
 l 383.398 199.043 384.309 202.277 383.902 205.488 c 374.543 280.465 l 373.457
 289.172 369.223 297.184 362.641 302.992 c 356.062 308.801 347.586 312.004
 338.809 312 c 45.191 312 l 36.414 312.004 27.938 308.801 21.359 302.992
 c 14.777 297.184 10.543 289.172 9.457 280.465 c 0.098 205.488 l -0.301 
202.273 0.617 199.039 2.641 196.512 c h
91.414 85.512 m f
Q Q
showpage
%%Trailer
%%EOF
