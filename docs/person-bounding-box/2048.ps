%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
144 96 m 131.27 96 119.062 101.059 110.059 110.059 c 101.059 119.062 96
 131.27 96 144 c 96 432 l 96 449.148 86.852 464.996 72 473.57 c 57.148 482.145
 38.852 482.145 24 473.57 c 9.148 464.996 0 449.148 0 432 c 0 144 l 0 105.809
 15.172 69.184 42.176 42.176 c 69.184 15.172 105.809 0 144 0 c 432 0 l 449.148
 0 464.996 9.148 473.57 24 c 482.145 38.852 482.145 57.148 473.57 72 c 464.996
 86.852 449.148 96 432 96 c h
1056 48 m 1056 35.27 1061.059 23.062 1070.059 14.059 c 1079.062 5.059 1091.27
 0 1104 0 c 1392 0 l 1430.191 0 1466.816 15.172 1493.824 42.176 c 1520.828
 69.184 1536 105.809 1536 144 c 1536 432 l 1536 449.148 1526.852 464.996
 1512 473.57 c 1497.148 482.145 1478.852 482.145 1464 473.57 c 1449.148 
464.996 1440 449.148 1440 432 c 1440 144 l 1440 131.27 1434.941 119.062 
1425.941 110.059 c 1416.938 101.059 1404.73 96 1392 96 c 1104 96 l 1091.27
 96 1079.062 90.941 1070.059 81.941 c 1061.059 72.938 1056 60.73 1056 48
 c 48 1056 m 60.73 1056 72.938 1061.059 81.941 1070.059 c 90.941 1079.062
 96 1091.27 96 1104 c 96 1392 l 96 1404.73 101.059 1416.938 110.059 1425.941
 c 119.062 1434.941 131.27 1440 144 1440 c 432 1440 l 449.148 1440 464.996
 1449.148 473.57 1464 c 482.145 1478.852 482.145 1497.148 473.57 1512 c 
464.996 1526.852 449.148 1536 432 1536 c 144 1536 l 105.809 1536 69.184 
1520.828 42.176 1493.824 c 15.172 1466.816 0 1430.191 0 1392 c 0 1104 l 
0 1091.27 5.059 1079.062 14.059 1070.059 c 23.062 1061.059 35.27 1056 48
 1056 c 1488 1056 m 1500.73 1056 1512.938 1061.059 1521.941 1070.059 c 1530.941
 1079.062 1536 1091.27 1536 1104 c 1536 1392 l 1536 1430.191 1520.828 1466.816
 1493.824 1493.824 c 1466.816 1520.828 1430.191 1536 1392 1536 c 1104 1536
 l 1086.852 1536 1071.004 1526.852 1062.43 1512 c 1053.855 1497.148 1053.855
 1478.852 1062.43 1464 c 1071.004 1449.148 1086.852 1440 1104 1440 c 1392
 1440 l 1404.73 1440 1416.938 1434.941 1425.941 1425.941 c 1434.941 1416.938
 1440 1404.73 1440 1392 c 1440 1104 l 1440 1091.27 1445.059 1079.062 1454.059
 1070.059 c 1463.062 1061.059 1475.27 1056 1488 1056 c f
288 1344 m 288 1344 192 1344 192 1248 c 192 1152 288 864 768 864 c 1248
 864 1344 1152 1344 1248 c 1344 1344 1248 1344 1248 1344 c h
1056 480 m 1056 556.383 1025.656 629.637 971.648 683.648 c 917.637 737.656
 844.383 768 768 768 c 691.617 768 618.363 737.656 564.352 683.648 c 510.344
 629.637 480 556.383 480 480 c 480 403.617 510.344 330.363 564.352 276.352
 c 618.363 222.344 691.617 192 768 192 c 844.383 192 917.637 222.344 971.648
 276.352 c 1025.656 330.363 1056 403.617 1056 480 c f
Q Q
showpage
%%Trailer
%%EOF
