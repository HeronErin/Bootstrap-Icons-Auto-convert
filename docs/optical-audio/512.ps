%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 312 rectclip
1 0 0 -1 0 384 cm q
0 g
192 240 m 200.574 240 208.496 235.426 212.785 228 c 217.07 220.574 217.07
 211.426 212.785 204 c 208.496 196.574 200.574 192 192 192 c 183.426 192
 175.504 196.574 171.215 204 c 166.93 211.426 166.93 220.574 171.215 228
 c 175.504 235.426 183.426 240 192 240 c f
108 216 m 108 185.988 124.012 158.258 150 143.254 c 175.988 128.25 208.012
 128.25 234 143.254 c 259.988 158.258 276 185.988 276 216 c 276 246.012 
259.988 273.742 234 288.746 c 208.012 303.75 175.988 303.75 150 288.746 
c 124.012 273.742 108 246.012 108 216 c 192 156 m 170.562 156 150.758 167.438
 140.039 186 c 129.32 204.562 129.32 227.438 140.039 246 c 150.758 264.562
 170.562 276 192 276 c 213.438 276 233.242 264.562 243.961 246 c 254.68 
227.438 254.68 204.562 243.961 186 c 233.242 167.438 213.438 156 192 156
 c f
48 348 m 48 351.184 49.266 354.234 51.516 356.484 c 53.766 358.734 56.816
 360 60 360 c 324 360 l 327.184 360 330.234 358.734 332.484 356.484 c 334.734
 354.234 336 351.184 336 348 c 336 274.801 l 354.227 271.098 369.703 259.156
 377.906 242.465 c 386.109 225.777 386.109 206.223 377.906 189.535 c 369.703
 172.844 354.227 160.902 336 157.199 c 336 108 l 336.004 104.816 334.746
 101.758 332.496 99.504 c 284.496 51.504 l 282.242 49.254 279.184 47.996
 276 48 c 108 48 l 104.816 47.996 101.758 49.254 99.504 51.504 c 51.504 
99.504 l 49.254 101.758 47.996 104.816 48 108 c 48 157.199 l 29.773 160.902
 14.297 172.844 6.094 189.535 c -2.109 206.223 -2.109 225.777 6.094 242.465
 c 14.297 259.156 29.773 271.098 48 274.801 c h
72 336 m 72 264 l 72 260.816 70.734 257.766 68.484 255.516 c 66.234 253.266
 63.184 252 60 252 c 47.137 252 35.254 245.137 28.824 234 c 22.391 222.863
 22.391 209.137 28.824 198 c 35.254 186.863 47.137 180 60 180 c 63.184 180
 66.234 178.734 68.484 176.484 c 70.734 174.234 72 171.184 72 168 c 72 112.969
 l 112.969 72 l 271.031 72 l 312 112.969 l 312 168 l 312 171.184 313.266
 174.234 315.516 176.484 c 317.766 178.734 320.816 180 324 180 c 336.863
 180 348.746 186.863 355.176 198 c 361.609 209.137 361.609 222.863 355.176
 234 c 348.746 245.137 336.863 252 324 252 c 317.371 252 312 257.371 312
 264 c 312 336 l h
72 336 m f
Q Q
showpage
%%Trailer
%%EOF
