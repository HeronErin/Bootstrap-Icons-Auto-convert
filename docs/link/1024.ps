%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 216 720 504
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 216 720 504
768 768 cairo_set_page_size
%%EndPageSetup
q 48 216 672 288 rectclip
1 0 0 -1 0 768 cm q
0 g
304.992 264 m 192 264 l 140.555 264 93.016 291.445 67.293 336 c 41.57 380.555
 41.57 435.445 67.293 480 c 93.016 524.555 140.555 552 192 552 c 336 552
 l 382.762 552.023 426.621 529.344 453.629 491.168 c 480.637 452.996 487.426
 404.086 471.84 360 c 432 360 l 427.84 360 423.84 360.496 420 361.488 c 
436.473 391.227 435.984 427.461 418.723 456.746 c 401.461 486.035 369.996
 504.008 336 504 c 192 504 l 157.703 504 126.012 485.703 108.863 456 c 91.711
 426.297 91.711 389.703 108.863 360 c 126.012 330.297 157.703 312 192 312
 c 265.68 312 l 276.145 293.953 289.441 277.727 305.039 264 c h
304.992 264 m f
432 264 m 385.238 263.977 341.379 286.656 314.371 324.832 c 287.363 363.004
 280.574 411.914 296.16 456 c 348.863 456 l 331.715 426.297 331.715 389.703
 348.863 360 c 366.012 330.297 397.703 312 432 312 c 576 312 l 610.297 312
 641.988 330.297 659.137 360 c 676.289 389.703 676.289 426.297 659.137 456
 c 641.988 485.703 610.297 504 576 504 c 502.32 504 l 491.891 522.027 478.598
 538.242 462.961 552 c 576 552 l 627.445 552 674.984 524.555 700.707 480
 c 726.43 435.445 726.43 380.555 700.707 336 c 674.984 291.445 627.445 264
 576 264 c h
432 264 m f
Q Q
showpage
%%Trailer
%%EOF
