%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 432 1440 1008
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 432 1440 1008
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 432 1344 576 rectclip
1 0 0 -1 0 1536 cm q
0 g
609.984 528 m 384 528 l 307.617 528 234.363 558.344 180.352 612.352 c 126.344
 666.363 96 739.617 96 816 c 96 892.383 126.344 965.637 180.352 1019.648
 c 234.363 1073.656 307.617 1104 384 1104 c 672 1104 l 733.68 1104.031 793.738
 1084.262 843.34 1047.598 c 892.941 1010.938 929.461 959.32 947.523 900.344
 c 965.586 841.367 964.238 778.152 943.68 720 c 864 720 l 855.68 720 847.68
 720.992 840 722.977 c 861.684 762.125 869.008 807.617 860.711 851.598 c
 852.414 895.574 829.016 935.27 794.559 963.828 c 760.102 992.387 716.754
 1008.008 672 1008 c 384 1008 l 333.078 1008 284.242 987.773 248.234 951.766
 c 212.227 915.758 192 866.922 192 816 c 192 765.078 212.227 716.242 248.234
 680.234 c 284.242 644.227 333.078 624 384 624 c 531.359 624 l 552.289 587.902
 578.879 555.457 610.078 528 c h
609.984 528 m f
864 528 m 802.32 527.969 742.262 547.738 692.66 584.402 c 643.059 621.062
 606.539 672.68 588.477 731.656 c 570.414 790.633 571.762 853.848 592.32
 912 c 697.727 912 l 675.16 872.91 667.082 827.113 674.922 782.66 c 682.758
 738.207 706.008 697.938 740.586 668.922 c 775.164 639.906 818.859 624 864
 624 c 1152 624 l 1202.922 624 1251.758 644.227 1287.766 680.234 c 1323.773
 716.242 1344 765.078 1344 816 c 1344 866.922 1323.773 915.758 1287.766 
951.766 c 1251.758 987.773 1202.922 1008 1152 1008 c 1004.641 1008 l 983.781
 1044.059 957.195 1076.48 925.922 1104 c 1152 1104 l 1228.383 1104 1301.637
 1073.656 1355.648 1019.648 c 1409.656 965.637 1440 892.383 1440 816 c 1440
 739.617 1409.656 666.363 1355.648 612.352 c 1301.637 558.344 1228.383 528
 1152 528 c h
864 528 m f
Q Q
showpage
%%Trailer
%%EOF
