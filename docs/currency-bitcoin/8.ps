%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 1 0 5 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 1 0 5 6
6 6 cairo_set_page_size
%%EndPageSetup
q 1 0 4 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.062 4.875 m 2.062 5.344 l 2.062 5.395 2.105 5.438 2.156 5.438 c 2.531
 5.438 l 2.582 5.438 2.625 5.395 2.625 5.344 c 2.625 4.875 l 2.812 4.875
 l 2.812 5.344 l 2.812 5.395 2.855 5.438 2.906 5.438 c 3.281 5.438 l 3.332
 5.438 3.375 5.395 3.375 5.344 c 3.375 4.875 l 3.406 4.875 l 4.152 4.875
 4.688 4.488 4.688 3.816 c 4.688 3.254 4.309 2.945 3.867 2.902 c 3.867 2.871
 l 4.23 2.781 4.5 2.504 4.5 2.051 c 4.5 1.473 4.066 1.125 3.41 1.125 c 3.375
 1.125 l 3.375 0.656 l 3.375 0.605 3.332 0.562 3.281 0.562 c 2.906 0.562
 l 2.855 0.562 2.812 0.605 2.812 0.656 c 2.812 1.125 l 2.598 1.125 l 2.598
 0.656 l 2.598 0.605 2.555 0.562 2.504 0.562 c 2.156 0.562 l 2.105 0.562
 2.062 0.605 2.062 0.656 c 2.062 1.125 l 1.312 1.129 l 1.262 1.129 1.219
 1.172 1.219 1.223 c 1.219 1.594 l 1.219 1.645 1.262 1.688 1.312 1.688 c
 1.594 1.688 l 1.75 1.688 1.875 1.812 1.875 1.969 c 1.875 4.031 l 1.875 
4.188 1.75 4.312 1.594 4.312 c 1.312 4.316 l 1.262 4.316 1.219 4.359 1.219
 4.41 c 1.219 4.785 l 1.219 4.836 1.262 4.879 1.312 4.879 c h
2.598 1.684 m 3.242 1.684 l 3.582 1.684 3.781 1.871 3.781 2.176 c 3.781
 2.504 3.566 2.688 3.078 2.688 c 2.598 2.688 l h
2.598 3.203 m 3.289 3.203 l 3.715 3.203 3.949 3.422 3.949 3.773 c 3.949
 4.129 3.715 4.316 3.141 4.316 c 2.598 4.316 l h
2.598 3.203 m f
Q Q
showpage
%%Trailer
%%EOF
