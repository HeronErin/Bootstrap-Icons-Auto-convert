%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 312 144 1200 1392
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 312 144 1200 1392
1536 1536 cairo_set_page_size
%%EndPageSetup
q 312 144 888 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
528 1248 m 528 1368 l 528 1381.246 538.754 1392 552 1392 c 648 1392 l 654.363
 1392 660.469 1389.473 664.969 1384.969 c 669.473 1380.469 672 1374.363 
672 1368 c 672 1248 l 720 1248 l 720 1368 l 720 1381.246 730.754 1392 744
 1392 c 840 1392 l 846.363 1392 852.469 1389.473 856.969 1384.969 c 861.473
 1380.469 864 1374.363 864 1368 c 864 1248 l 872.062 1248 l 1063.293 1248
 1200 1148.832 1200 977.281 c 1200 833.09 1103.328 754.273 990.145 743.043
 c 990.145 734.594 l 1083.266 711.363 1151.711 641.09 1151.711 524.355 c
 1151.711 377.281 1041.312 288 872.832 288 c 864 288 l 864 168 l 864 161.637
 861.473 155.531 856.969 151.031 c 852.469 146.527 846.363 144 840 144 c
 744 144 l 737.637 144 731.531 146.527 727.031 151.031 c 722.527 155.531
 720 161.637 720 168 c 720 288 l 664.992 288 l 664.992 168 l 664.992 161.637
 662.465 155.531 657.961 151.031 c 653.461 146.527 647.355 144 640.992 144
 c 552 144 l 545.637 144 539.531 146.527 535.031 151.031 c 530.527 155.531
 528 161.637 528 168 c 528 288 l 336.191 289.055 l 329.828 289.055 323.723
 291.586 319.223 296.086 c 314.719 300.586 312.191 306.691 312.191 313.055
 c 312.191 408 l 312.191 421.152 322.75 432 336 432 c 408.48 431.52 l 427.492
 431.648 445.684 439.289 459.082 452.777 c 472.48 466.266 480 484.508 480
 503.52 c 480 1032 l 480 1051.094 472.414 1069.41 458.91 1082.91 c 445.41
 1096.414 427.094 1104 408 1104 c 336.191 1105.055 l 329.828 1105.055 323.723
 1107.586 319.223 1112.086 c 314.719 1116.586 312.191 1122.691 312.191 1129.055
 c 312.191 1225.055 l 312.191 1238.301 322.945 1249.055 336.191 1249.055
 c h
664.992 430.754 m 830.016 430.754 l 916.992 430.754 968.062 478.562 968.062
 556.707 c 968.062 640.324 912.863 687.461 787.871 687.461 c 664.992 687.461
 l h
664.992 819.648 m 841.633 819.648 l 950.785 819.648 1010.207 875.328 1010.207
 965.953 c 1010.207 1057.441 950.109 1105.152 803.039 1105.152 c 664.992
 1105.152 l h
664.992 819.648 m f
Q Q
showpage
%%Trailer
%%EOF
