%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 156 72 600 696
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 156 72 600 696
768 768 cairo_set_page_size
%%EndPageSetup
q 156 72 444 624 rectclip
1 0 0 -1 0 768 cm q
0 g
264 624 m 264 684 l 264 690.625 269.375 696 276 696 c 324 696 l 327.184
 696 330.234 694.734 332.484 692.484 c 334.734 690.234 336 687.184 336 684
 c 336 624 l 360 624 l 360 684 l 360 690.625 365.375 696 372 696 c 420 696
 l 423.184 696 426.234 694.734 428.484 692.484 c 430.734 690.234 432 687.184
 432 684 c 432 624 l 436.031 624 l 531.648 624 600 574.414 600 488.641 c
 600 416.543 551.664 377.137 495.07 371.52 c 495.07 367.297 l 541.629 355.68
 575.855 320.543 575.855 262.176 c 575.855 188.641 520.656 144 436.414 144
 c 432 144 l 432 84 l 432 80.816 430.734 77.766 428.484 75.516 c 426.234
 73.266 423.184 72 420 72 c 372 72 l 365.371 72 360 77.371 360 84 c 360 
144 l 332.496 144 l 332.496 84 l 332.496 80.816 331.23 77.766 328.98 75.516
 c 326.73 73.266 323.68 72 320.496 72 c 276 72 l 269.371 72 264 77.371 264
 84 c 264 144 l 168.098 144.527 l 161.469 144.527 156.098 149.902 156.098
 156.527 c 156.098 204 l 156.098 210.574 161.379 216 168 216 c 204.238 215.762
 l 213.746 215.824 222.84 219.645 229.539 226.387 c 236.242 233.133 240 
242.254 240 251.762 c 240 516 l 240 525.547 236.207 534.703 229.457 541.457
 c 222.703 548.207 213.547 552 204 552 c 168.098 552.527 l 161.469 552.527
 156.098 557.902 156.098 564.527 c 156.098 612.527 l 156.098 619.152 161.473
 624.527 168.098 624.527 c h
332.496 215.375 m 415.008 215.375 l 458.496 215.375 484.031 239.277 484.031
 278.352 c 484.031 320.16 456.43 343.727 393.934 343.727 c 332.492 343.727
 l h
332.496 409.824 m 420.816 409.824 l 475.391 409.824 505.105 437.664 505.105
 482.977 c 505.105 528.719 475.059 552.578 401.52 552.578 c 332.496 552.574
 l h
332.496 409.824 m f
Q Q
showpage
%%Trailer
%%EOF
