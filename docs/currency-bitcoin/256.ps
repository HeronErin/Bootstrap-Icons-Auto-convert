%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 39 18 150 174
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 39 18 150 174
192 192 cairo_set_page_size
%%EndPageSetup
q 39 18 111 156 rectclip
1 0 0 -1 0 192 cm q
0 g
66 156 m 66 171 l 66 172.656 67.344 174 69 174 c 81 174 l 81.797 174 82.559
 173.684 83.121 173.121 c 83.684 172.559 84 171.797 84 171 c 84 156 l 90
 156 l 90 171 l 90 172.656 91.344 174 93 174 c 105 174 l 105.797 174 106.559
 173.684 107.121 173.121 c 107.684 172.559 108 171.797 108 171 c 108 156
 l 109.008 156 l 132.91 156 150 143.605 150 122.16 c 150 104.137 137.914
 94.285 123.77 92.879 c 123.77 91.824 l 135.41 88.922 143.965 80.137 143.965
 65.543 c 143.965 47.16 130.164 36 109.105 36 c 108 36 l 108 21 l 108 20.203
 107.684 19.441 107.121 18.879 c 106.559 18.316 105.797 18 105 18 c 93 18
 l 91.344 18 90 19.344 90 21 c 90 36 l 83.125 36 l 83.125 21 l 83.125 20.203
 82.809 19.441 82.246 18.879 c 81.684 18.316 80.918 18 80.125 18 c 69 18
 l 67.344 18 66 19.344 66 21 c 66 36 l 42.023 36.133 l 40.367 36.133 39.023
 37.477 39.023 39.133 c 39.023 51 l 39.023 52.645 40.344 54 42 54 c 51.059
 53.941 l 56.008 53.973 60 57.992 60 62.941 c 60 129 l 60 133.969 55.969
 138 51 138 c 42.023 138.133 l 40.367 138.133 39.023 139.477 39.023 141.133
 c 39.023 153.133 l 39.023 154.789 40.367 156.133 42.023 156.133 c h
83.125 53.844 m 103.754 53.844 l 114.625 53.844 121.012 59.82 121.012 69.586
 c 121.012 80.039 114.113 85.93 98.488 85.93 c 83.129 85.93 l h
83.125 102.457 m 105.203 102.457 l 118.848 102.457 126.273 109.418 126.273
 120.746 c 126.273 132.184 118.762 138.145 100.379 138.145 c 83.125 138.145
 l h
83.125 102.457 m f
Q Q
showpage
%%Trailer
%%EOF
