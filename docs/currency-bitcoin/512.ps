%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 78 36 300 348
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 78 36 300 348
384 384 cairo_set_page_size
%%EndPageSetup
q 78 36 222 312 rectclip
1 0 0 -1 0 384 cm q
0 g
132 312 m 132 342 l 132 345.312 134.688 348 138 348 c 162 348 l 163.59 
348 165.117 347.367 166.242 346.242 c 167.367 345.117 168 343.59 168 342
 c 168 312 l 180 312 l 180 342 l 180 345.312 182.688 348 186 348 c 210 348
 l 211.59 348 213.117 347.367 214.242 346.242 c 215.367 345.117 216 343.59
 216 342 c 216 312 l 218.016 312 l 265.824 312 300 287.207 300 244.32 c 
300 208.273 275.832 188.566 247.535 185.762 c 247.535 183.648 l 270.816 
177.84 287.926 160.273 287.926 131.09 c 287.93 94.32 260.328 72 218.207 
72 c 216 72 l 216 42 l 216 40.41 215.367 38.883 214.242 37.758 c 213.117
 36.633 211.59 36 210 36 c 186 36 l 182.688 36 180 38.688 180 42 c 180 72
 l 166.246 72 l 166.246 42 l 166.246 40.41 165.617 38.883 164.492 37.758
 c 163.367 36.633 161.84 36 160.246 36 c 138 36 l 134.688 36 132 38.688 
132 42 c 132 72 l 84.047 72.266 l 80.734 72.266 78.047 74.949 78.047 78.266
 c 78.047 102 l 78.047 105.289 80.688 108 84 108 c 102.121 107.879 l 106.875
 107.91 111.422 109.82 114.77 113.195 c 118.121 116.566 120 121.125 120 
125.879 c 120 258 l 120 262.773 118.105 267.352 114.727 270.727 c 111.352
 274.105 106.773 276 102 276 c 84.047 276.266 l 80.734 276.266 78.047 278.949
 78.047 282.266 c 78.047 306.266 l 78.047 309.578 80.734 312.266 84.047 
312.266 c h
166.246 107.688 m 207.504 107.688 l 229.246 107.688 242.016 119.641 242.016
 139.176 c 242.016 160.078 228.215 171.863 196.969 171.863 c 166.25 171.863
 l h
166.246 204.91 m 210.406 204.91 l 237.695 204.91 252.551 218.832 252.551
 241.484 c 252.551 264.355 237.527 276.285 200.758 276.285 c 166.246 276.289
 l h
166.246 204.91 m f
Q Q
showpage
%%Trailer
%%EOF
