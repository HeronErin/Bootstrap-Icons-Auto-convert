%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 36 0 348 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 36 0 348 384
384 384 cairo_set_page_size
%%EndPageSetup
q 36 0 312 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 179.27 0 167.062 5.059 158.059 14.059 c 149.059 23.062 144 35.27
 144 48 c 84 48 l 71.27 48 59.062 53.059 50.059 62.059 c 41.059 71.062 36
 83.27 36 96 c 36 120 l 36 132.73 41.059 144.938 50.059 153.941 c 59.062
 162.941 71.27 168 84 168 c 180 168 l 180 180 l 180 186.629 185.371 192 
192 192 c 198.629 192 204 186.629 204 180 c 204 168 l 300 168 l 312.73 168
 324.938 162.941 333.941 153.941 c 342.941 144.938 348 132.73 348 120 c 
348 96 l 348 83.27 342.941 71.062 333.941 62.059 c 324.938 53.059 312.73
 48 300 48 c 240 48 l 240 35.27 234.941 23.062 225.941 14.059 c 216.938 
5.059 204.73 0 192 0 c 216 48 m 216 39.426 211.426 31.504 204 27.215 c 196.574
 22.93 187.426 22.93 180 27.215 c 172.574 31.504 168 39.426 168 48 c h
120 264 m 120 312 l 264 312 l 264 264 l 240 264 l 240 276 l 240 282.629
 234.629 288 228 288 c 221.371 288 216 282.629 216 276 c 216 264 l h
120 264 m f
336 182.375 m 325.051 188.688 312.637 192.008 300 192 c 225.961 192 l 222.641
 201.434 215.547 209.062 206.379 213.059 c 197.207 217.051 186.793 217.051
 177.621 213.059 c 168.453 209.062 161.359 201.434 158.039 192 c 84 192 
l 71.363 192.008 58.949 188.688 48 182.375 c 48 336 l 48 348.73 53.059 360.938
 62.059 369.941 c 71.062 378.941 83.27 384 96 384 c 288 384 l 300.73 384
 312.938 378.941 321.941 369.941 c 330.941 360.938 336 348.73 336 336 c 
h
96 252 m 96 245.371 101.371 240 108 240 c 276 240 l 279.184 240 282.234
 241.266 284.484 243.516 c 286.734 245.766 288 248.816 288 252 c 288 324
 l 288 327.184 286.734 330.234 284.484 332.484 c 282.234 334.734 279.184
 336 276 336 c 108 336 l 101.371 336 96 330.629 96 324 c h
96 252 m f
Q Q
showpage
%%Trailer
%%EOF
