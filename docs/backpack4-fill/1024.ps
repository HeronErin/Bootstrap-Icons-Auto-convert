%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 0 696 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 0 696 768
768 768 cairo_set_page_size
%%EndPageSetup
q 72 0 624 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 358.539 0 334.121 10.113 316.117 28.117 c 298.113 46.121 288 70.539
 288 96 c 168 96 l 142.539 96 118.121 106.113 100.117 124.117 c 82.113 142.121
 72 166.539 72 192 c 72 240 l 72 265.461 82.113 289.879 100.117 307.883 
c 118.121 325.887 142.539 336 168 336 c 360 336 l 360 360 l 360 368.574 
364.574 376.496 372 380.785 c 379.426 385.07 388.574 385.07 396 380.785 
c 403.426 376.496 408 368.574 408 360 c 408 336 l 600 336 l 625.461 336 
649.879 325.887 667.883 307.883 c 685.887 289.879 696 265.461 696 240 c 
696 192 l 696 166.539 685.887 142.121 667.883 124.117 c 649.879 106.113 
625.461 96 600 96 c 480 96 l 480 70.539 469.887 46.121 451.883 28.117 c 
433.879 10.113 409.461 0 384 0 c 432 96 m 432 78.852 422.852 63.004 408 
54.43 c 393.148 45.855 374.852 45.855 360 54.43 c 345.148 63.004 336 78.852
 336 96 c h
240 528 m 240 624 l 528 624 l 528 528 l 480 528 l 480 552 l 480 560.574
 475.426 568.496 468 572.785 c 460.574 577.07 451.426 577.07 444 572.785
 c 436.574 568.496 432 560.574 432 552 c 432 528 l h
240 528 m f
672 364.754 m 650.105 377.375 625.273 384.012 600 384 c 451.922 384 l 445.281
 402.871 431.094 418.125 412.754 426.117 c 394.418 434.105 373.582 434.105
 355.246 426.117 c 336.906 418.125 322.719 402.871 316.078 384 c 168 384
 l 142.727 384.012 117.895 377.375 96 364.754 c 96 672 l 96 697.461 106.113
 721.879 124.117 739.883 c 142.121 757.887 166.539 768 192 768 c 576 768
 l 601.461 768 625.879 757.887 643.883 739.883 c 661.887 721.879 672 697.461
 672 672 c h
192 504 m 192 497.637 194.527 491.531 199.031 487.031 c 203.531 482.527
 209.637 480 216 480 c 552 480 l 558.363 480 564.469 482.527 568.969 487.031
 c 573.473 491.531 576 497.637 576 504 c 576 648 l 576 654.363 573.473 660.469
 568.969 664.969 c 564.469 669.473 558.363 672 552 672 c 216 672 l 209.637
 672 203.531 669.473 199.031 664.969 c 194.527 660.469 192 654.363 192 648
 c h
192 504 m f
Q Q
showpage
%%Trailer
%%EOF
