%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 144 1536 1488
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 144 1536 1488
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 144 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
240 336 m 222.852 336 207.004 326.852 198.43 312 c 189.855 297.148 189.855
 278.852 198.43 264 c 207.004 249.148 222.852 240 240 240 c 1296 240 l 1313.148
 240 1328.996 249.148 1337.57 264 c 1346.145 278.852 1346.145 297.148 1337.57
 312 c 1328.996 326.852 1313.148 336 1296 336 c h
432 144 m 414.852 144 399.004 134.852 390.43 120 c 381.855 105.148 381.855
 86.852 390.43 72 c 399.004 57.148 414.852 48 432 48 c 1104 48 l 1121.148
 48 1136.996 57.148 1145.57 72 c 1154.145 86.852 1154.145 105.148 1145.57
 120 c 1136.996 134.852 1121.148 144 1104 144 c h
0 1248 m 0 1286.191 15.172 1322.816 42.176 1349.824 c 69.184 1376.828 105.809
 1392 144 1392 c 1392 1392 l 1430.191 1392 1466.816 1376.828 1493.824 1349.824
 c 1520.828 1322.816 1536 1286.191 1536 1248 c 1536 576 l 1536 537.809 1520.828
 501.184 1493.824 474.176 c 1466.816 447.172 1430.191 432 1392 432 c 144
 432 l 105.809 432 69.184 447.172 42.176 474.176 c 15.172 501.184 0 537.809
 0 576 c h
600.77 630.047 m 608.254 625.898 616.715 623.824 625.273 624.043 c 633.832
 624.262 642.176 626.766 649.441 631.297 c 1033.441 871.297 l 1047.473 880.066
 1056 895.449 1056 912 c 1056 928.551 1047.473 943.934 1033.441 952.703 
c 649.441 1192.703 l 639.707 1198.785 628.117 1201.18 616.77 1199.453 c 
605.422 1197.723 595.07 1191.988 587.594 1183.281 c 580.113 1174.574 576
 1163.477 576 1152 c 576 672 l 576.008 663.434 578.312 655.023 582.668 647.648
 c 587.02 640.27 593.273 634.195 600.77 630.047 c f
Q Q
showpage
%%Trailer
%%EOF
