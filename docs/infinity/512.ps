%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 108 384 288
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 108 384 288
384 384 cairo_set_page_size
%%EndPageSetup
q 0 108 384 180 rectclip
1 0 0 -1 0 384 cm q
0 g
136.32 139.008 m 176.281 186 l 136.344 232.992 l 123.918 245.246 107.145
 252.082 89.695 252 c 72.242 251.918 55.535 244.93 43.223 232.562 c 30.91
 220.191 24 203.453 24 186 c 24 168.547 30.91 151.809 43.223 139.438 c 55.535
 127.07 72.242 120.082 89.695 120 c 107.145 119.918 123.918 126.754 136.344
 139.008 c h
192 167.473 m 153.984 122.711 l 153.648 122.352 l 136.77 105.477 113.879
 95.996 90.008 96 c 66.141 96.004 43.25 105.484 26.375 122.363 c 9.496 139.242
 0.016 162.133 0.016 186 c 0.016 209.867 9.496 232.758 26.375 249.637 c 
43.25 266.516 66.141 275.996 90.008 276 c 113.879 276.004 136.77 266.523
 153.648 249.648 c 153.984 249.289 l 192 204.527 l 230.016 249.289 l 230.352
 249.648 l 247.23 266.523 270.121 276.004 293.992 276 c 317.859 275.996 
340.75 266.516 357.625 249.637 c 374.504 232.758 383.984 209.867 383.984
 186 c 383.984 162.133 374.504 139.242 357.625 122.363 c 340.75 105.484 
317.859 96.004 293.992 96 c 270.121 95.996 247.23 105.477 230.352 122.352
 c 230.016 122.711 l h
207.742 186 m 247.652 139.008 l 247.656 139.008 l 260.082 126.754 276.855
 119.918 294.305 120 c 311.758 120.082 328.465 127.07 340.777 139.438 c 
353.09 151.809 360 168.547 360 186 c 360 203.453 353.09 220.191 340.777 
232.562 c 328.465 244.93 311.758 251.918 294.305 252 c 276.855 252.082 260.082
 245.246 247.656 232.992 c h
207.742 186 m f
Q Q
showpage
%%Trailer
%%EOF
