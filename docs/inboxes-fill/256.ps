%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
59.762 12 m 57.938 12.004 56.215 12.832 55.078 14.258 c 18.48 60 l 72 60
 l 73.59 60 75.117 60.633 76.242 61.758 c 77.367 62.883 78 64.41 78 66 c
 78 72.43 81.43 78.375 87 81.59 c 92.57 84.805 99.43 84.805 105 81.59 c 
110.57 78.375 114 72.43 114 66 c 114 62.688 116.688 60 120 60 c 173.52 60
 l 136.918 14.258 l 136.922 14.258 l 135.785 12.832 134.062 12.004 132.238
 12 c h
45.719 6.758 m 49.133 2.488 54.297 0.004 59.762 0 c 132.242 0 l 132.238
 0 l 137.703 0.004 142.867 2.488 146.281 6.758 c 190.68 62.258 l 191.691
 63.52 192.152 65.137 191.953 66.742 c 187.273 104.23 l 186.727 108.586 
184.613 112.594 181.32 115.496 c 178.031 118.398 173.793 120 169.402 120
 c 22.598 120 l 18.207 120 13.969 118.398 10.68 115.496 c 7.387 112.594 
5.273 108.586 4.727 104.23 c 0.047 66.742 l -0.152 65.137 0.309 63.52 1.32
 62.258 c h
1.5 134.039 m 2.637 132.746 4.277 132.004 6 132 c 72 132 l 73.59 132 75.117
 132.633 76.242 133.758 c 77.367 134.883 78 136.41 78 138 c 78 144.43 81.43
 150.375 87 153.59 c 92.57 156.805 99.43 156.805 105 153.59 c 110.57 150.375
 114 144.43 114 138 c 114 134.688 116.688 132 120 132 c 186 132 l 187.719
 132 189.359 132.738 190.496 134.031 c 191.637 135.32 192.164 137.035 191.953
 138.742 c 187.273 176.23 l 186.727 180.586 184.613 184.594 181.32 187.496
 c 178.031 190.398 173.793 192 169.402 192 c 22.598 192 l 18.207 192 13.969
 190.398 10.68 187.496 c 7.387 184.594 5.273 180.586 4.727 176.23 c 0.047
 138.742 l -0.168 137.035 0.363 135.32 1.5 134.027 c h
1.5 134.039 m f
Q Q
showpage
%%Trailer
%%EOF
