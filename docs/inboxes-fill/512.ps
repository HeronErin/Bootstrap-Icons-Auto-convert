%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
119.52 24 m 115.875 24.004 112.434 25.664 110.16 28.512 c 36.961 120 l 
144 120 l 147.184 120 150.234 121.266 152.484 123.516 c 154.734 125.766 
156 128.816 156 132 c 156 144.863 162.863 156.746 174 163.176 c 185.137 
169.609 198.863 169.609 210 163.176 c 221.137 156.746 228 144.863 228 132
 c 228 125.371 233.371 120 240 120 c 347.039 120 l 273.84 28.512 l 271.566
 25.664 268.125 24.004 264.48 24 c h
91.441 13.512 m 98.266 4.98 108.594 0.008 119.52 0 c 264.48 0 l 275.406
 0.008 285.734 4.98 292.559 13.512 c 381.359 124.512 l 383.383 127.039 384.301
 130.273 383.902 133.488 c 374.543 208.465 l 373.457 217.172 369.223 225.184
 362.641 230.992 c 356.062 236.801 347.586 240.004 338.809 240 c 45.191 
240 l 36.414 240.004 27.938 236.801 21.359 230.992 c 14.777 225.184 10.543
 217.172 9.457 208.465 c 0.098 133.488 l -0.301 130.273 0.617 127.039 2.641
 124.512 c h
3 268.078 m 5.273 265.492 8.555 264.004 12 264 c 144 264 l 147.184 264 
150.234 265.266 152.484 267.516 c 154.734 269.766 156 272.816 156 276 c 
156 288.863 162.863 300.746 174 307.176 c 185.137 313.609 198.863 313.609
 210 307.176 c 221.137 300.746 228 288.863 228 276 c 228 269.371 233.371
 264 240 264 c 372 264 l 375.441 264 378.715 265.48 380.992 268.059 c 383.27
 270.641 384.332 274.074 383.902 277.488 c 374.543 352.465 l 373.457 361.172
 369.223 369.184 362.641 374.992 c 356.062 380.801 347.586 384.004 338.809
 384 c 45.191 384 l 36.414 384.004 27.938 380.801 21.359 374.992 c 14.777
 369.184 10.543 361.172 9.457 352.465 c 0.098 277.488 l -0.332 274.074 0.723
 270.637 3 268.055 c h
3 268.078 m f
Q Q
showpage
%%Trailer
%%EOF
