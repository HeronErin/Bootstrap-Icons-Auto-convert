%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
478.078 96 m 463.508 96.02 449.734 102.66 440.641 114.047 c 147.84 480 
l 576 480 l 588.73 480 600.938 485.059 609.941 494.059 c 618.941 503.062
 624 515.27 624 528 c 624 579.445 651.445 626.984 696 652.707 c 740.555 
678.43 795.445 678.43 840 652.707 c 884.555 626.984 912 579.445 912 528 
c 912 515.27 917.059 503.062 926.059 494.059 c 935.062 485.059 947.27 480
 960 480 c 1388.16 480 l 1095.359 114.047 l 1086.266 102.66 1072.492 96.02
 1057.922 96 c h
365.762 54.047 m 393.059 19.922 434.379 0.039 478.078 0 c 1057.922 0 l 
1101.621 0.039 1142.941 19.922 1170.238 54.047 c 1525.438 498.047 l 1525.441
 498.047 l 1533.535 508.152 1537.207 521.102 1535.617 533.953 c 1498.176
 833.855 l 1493.824 868.691 1476.891 900.738 1450.566 923.969 c 1424.242
 947.199 1390.34 960.012 1355.23 960 c 180.77 960 l 145.66 960.012 111.758
 947.199 85.434 923.969 c 59.109 900.738 42.176 868.691 37.824 833.855 c
 0.383 533.953 l -1.207 521.102 2.465 508.152 10.559 498.047 c h
12 1072.32 m 21.098 1061.961 34.215 1056.016 48 1056 c 576 1056 l 588.73
 1056 600.938 1061.059 609.941 1070.059 c 618.941 1079.062 624 1091.27 624
 1104 c 624 1155.445 651.445 1202.984 696 1228.707 c 740.555 1254.43 795.445
 1254.43 840 1228.707 c 884.555 1202.984 912 1155.445 912 1104 c 912 1091.27
 917.059 1079.062 926.059 1070.059 c 935.062 1061.059 947.27 1056 960 1056
 c 1488 1056 l 1501.766 1056.004 1514.867 1061.918 1523.977 1072.238 c 1533.082
 1082.559 1537.324 1096.293 1535.617 1109.953 c 1498.176 1409.855 l 1493.824
 1444.691 1476.891 1476.738 1450.566 1499.969 c 1424.242 1523.199 1390.34
 1536.012 1355.23 1536 c 180.77 1536 l 145.66 1536.012 111.758 1523.199 
85.434 1499.969 c 59.109 1476.738 42.176 1444.691 37.824 1409.855 c 0.383
 1109.953 l -1.332 1096.293 2.898 1082.551 12 1072.223 c h
12 1072.32 m f
Q Q
showpage
%%Trailer
%%EOF
