%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
139.152 38.594 m 167.711 0.578 l 196.414 38.5 l 196.414 38.496 l 201.832
 45.629 204.383 54.531 203.562 63.449 c 202.746 72.367 198.621 80.656 192
 86.688 c 192 321.215 l 174.977 318.336 158.977 315.117 144 311.566 c 144
 87.023 l 137.242 81.031 132.992 72.711 132.102 63.723 c 131.211 54.738 
133.746 45.742 139.199 38.543 c h
624 86.688 m 624 311.566 l 608.113 315.328 592.105 318.547 576 321.215 
c 576 86.977 l 569.281 80.992 565.059 72.699 564.168 63.746 c 563.277 54.789
 565.789 45.828 571.199 38.641 c 599.758 0.625 l 628.461 38.547 l 628.465
 38.543 l 633.871 45.676 636.41 54.574 635.586 63.484 c 634.758 72.395 630.625
 80.672 624 86.688 c 480 86.688 m 486.633 80.664 490.766 72.371 491.582 
63.449 c 492.398 54.527 489.844 45.625 484.414 38.496 c 455.711 0.574 l 
427.152 38.59 l 427.152 38.594 l 421.719 45.793 419.199 54.781 420.098 63.758
 c 420.996 72.734 425.246 81.043 432 87.023 c 432 335.184 l 448.383 334.543
 464.383 333.664 480 332.543 c h
336 86.688 m 336 335.137 l 319.617 334.562 303.617 333.695 288 332.543 
c 288 87.023 l 281.242 81.031 276.992 72.711 276.102 63.723 c 275.211 54.738
 277.746 45.742 283.199 38.543 c 311.758 0.621 l 340.461 38.492 l 340.465
 38.496 l 345.875 45.637 348.414 54.539 347.59 63.457 c 346.762 72.379 342.629
 80.664 336 86.688 c f
216 335.426 m 216 202.848 l 231.957 200.676 247.961 198.852 264 197.375
 c 264 343.68 l 264 349.969 268.848 355.199 275.137 355.68 c 286.227 356.496
 l 302.164 357.68 318.484 358.559 335.188 359.137 c 347.57 359.617 l 347.566
 359.617 l 350.832 359.746 354.012 358.539 356.367 356.277 c 358.719 354.012
 360.051 350.883 360.047 347.617 c 360.047 192.145 l 376.047 191.867 392.051
 191.867 408.047 192.145 c 408.047 347.52 l 408.047 350.77 409.363 353.883
 411.699 356.145 c 414.031 358.406 417.184 359.625 420.434 359.52 c 432.867
 359.086 l 449.508 358.512 465.812 357.629 481.777 356.445 c 492.867 355.629
 l 492.863 355.633 l 499.152 355.18 504.016 349.938 504 343.633 c 504 197.375
 l 520.574 198.879 536.574 200.703 552 202.848 c 552 335.426 l 552.008 338.957
 553.566 342.305 556.27 344.578 c 558.969 346.855 562.535 347.824 566.016
 347.23 c 579.984 344.879 l 597.488 341.969 614.016 338.641 629.57 334.895
 c 638.785 332.688 l 644.184 331.398 647.996 326.574 648 321.023 c 648 221.809
 l 680.258 230.641 708.047 241.441 728.496 254.352 c 748.418 266.879 768
 285.793 768 311.953 c 768 648 l 768 674.207 748.414 693.121 728.496 705.648
 c 707.375 718.992 678.434 730.129 644.734 739.055 c 577.055 757.102 484.895
 768 384 768 c 283.105 768 190.945 757.105 123.266 739.055 c 89.57 730.078
 60.625 718.992 39.504 705.648 c 19.586 693.121 0 674.207 0 648 c 0 312 
l 0 285.793 19.586 266.879 39.504 254.352 c 59.953 241.441 87.742 230.641
 120 221.809 c 120 321.023 l 120 326.59 123.84 331.391 129.215 332.688 c
 138.43 334.895 l 153.98 338.605 170.508 341.934 188.016 344.879 c 202.031
 347.277 l 202.031 347.281 l 205.516 347.859 209.074 346.875 211.766 344.59
 c 214.457 342.309 216.004 338.953 216 335.426 c 48 423.359 m 48 502.992
 l 61.617 517.992 79.77 528.129 99.684 531.855 c 119.598 535.578 140.184
 532.691 158.305 523.633 c 166.73 519.41 176.277 517.949 185.582 519.457
 c 194.887 520.965 203.48 525.363 210.145 532.031 c 226.848 548.785 l 243.195
 565.129 264.891 575.027 287.949 576.656 c 311.008 578.289 333.883 571.543
 352.367 557.664 c 355.199 555.551 l 363.508 549.32 373.613 545.953 384 
545.953 c 394.387 545.953 404.492 549.32 412.801 555.551 c 415.68 557.664
 l 434.156 571.52 457.012 578.246 480.047 576.617 c 503.086 574.984 524.762
 565.102 541.105 548.785 c 557.809 532.082 l 557.809 532.078 l 564.5 525.426
 573.109 521.035 582.426 519.527 c 591.742 518.02 601.297 519.473 609.742
 523.68 c 647.23 542.398 692.207 533.664 720 503.23 c 720 423.984 l 687.359
 467.52 l 681.02 475.941 671.934 481.875 661.676 484.293 c 651.418 486.715
 640.633 485.469 631.199 480.77 c 613.738 472.062 593.988 469.062 574.73
 472.188 c 555.473 475.312 537.68 484.41 523.871 498.191 c 507.168 514.895
 l 498.992 523.059 488.148 528 476.625 528.809 c 465.102 529.621 453.672
 526.25 444.434 519.312 c 441.555 517.199 l 441.551 517.199 l 424.938 504.75
 404.738 498.02 383.977 498.02 c 363.215 498.02 343.012 504.75 326.398 517.199
 c 323.52 519.312 l 314.285 526.234 302.867 529.602 291.352 528.789 c 279.84
 527.977 269.004 523.047 260.832 514.895 c 244.031 498.094 l 244.031 498.098
 l 230.246 484.32 212.48 475.23 193.242 472.113 c 174.008 468.996 154.277
 472.008 136.848 480.719 c 127.43 485.438 116.648 486.688 106.402 484.258
 c 96.152 481.824 87.082 475.867 80.785 467.426 c h
48 423.359 m f
Q Q
showpage
%%Trailer
%%EOF
