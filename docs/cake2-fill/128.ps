%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
17.395 4.824 m 20.965 0.07 l 24.555 4.809 l 24.551 4.812 l 25.957 6.66 
25.715 9.273 24 10.836 c 24 40.152 l 21.871 39.793 19.871 39.391 18 38.945
 c 18 10.879 l 16.246 9.324 15.988 6.684 17.398 4.816 c h
78 10.836 m 78 38.945 l 76.016 39.414 74.012 39.816 72 40.152 c 72 10.871
 l 70.258 9.32 69.996 6.695 71.398 4.828 c 74.969 0.074 l 78.559 4.812 l
 78.559 4.816 l 79.957 6.664 79.715 9.277 78 10.836 c 60 10.836 m 61.719
 9.273 61.957 6.66 60.551 4.812 c 56.961 0.074 l 53.391 4.828 l 53.395 4.824
 l 51.984 6.691 52.25 9.328 54 10.879 c 54 41.898 l 56.047 41.82 58.047 
41.707 60 41.57 c h
42 10.836 m 42 41.891 l 39.953 41.82 37.953 41.711 36 41.566 c 36 10.879
 l 34.246 9.324 33.988 6.684 35.398 4.816 c 38.969 0.078 l 42.559 4.812 
l 43.961 6.66 43.719 9.273 42 10.836 c f
27 41.93 m 27 25.355 l 28.996 25.086 30.996 24.855 33 24.672 c 33 42.961
 l 33 43.746 33.605 44.402 34.391 44.461 c 35.777 44.562 l 37.77 44.711 
39.809 44.82 41.898 44.891 c 43.445 44.949 l 43.445 44.953 l 43.855 44.969
 44.25 44.816 44.547 44.535 c 44.84 44.25 45.008 43.859 45.008 43.453 c 
45.008 24.02 l 47.004 23.984 49.008 23.984 51.008 24.02 c 51.008 43.441 
l 51.004 43.848 51.172 44.234 51.461 44.52 c 51.754 44.801 52.148 44.953
 52.555 44.941 c 54.109 44.887 l 56.188 44.816 58.227 44.703 60.223 44.559
 c 61.609 44.457 l 61.609 44.453 l 62.395 44.398 63.004 43.742 63 42.953
 c 63 24.672 l 65.07 24.859 67.07 25.086 69 25.355 c 69 41.93 l 69 42.371
 69.195 42.789 69.535 43.074 c 69.871 43.355 70.316 43.477 70.754 43.402
 c 72.5 43.109 l 74.688 42.746 76.754 42.328 78.699 41.863 c 79.852 41.586
 l 79.848 41.586 l 80.523 41.426 81 40.82 81 40.129 c 81 27.727 l 85.031
 28.832 88.508 30.18 91.062 31.793 c 93.551 33.359 96 35.723 96 38.992 c
 96 81 l 96 84.277 93.551 86.641 91.062 88.207 c 88.422 89.875 84.805 91.266
 80.594 92.383 c 72.133 94.641 60.613 96 48 96 c 35.387 96 23.867 94.637
 15.406 92.383 c 11.195 91.262 7.578 89.875 4.938 88.207 c 2.449 86.641 
0 84.277 0 81 c 0 39 l 0 35.723 2.449 33.359 4.938 31.793 c 7.492 30.18 
10.969 28.828 15 27.727 c 15 40.129 l 15 40.824 15.48 41.426 16.152 41.586
 c 17.305 41.863 l 19.25 42.328 21.316 42.742 23.504 43.109 c 25.258 43.41
 l 25.254 43.41 l 25.688 43.48 26.133 43.359 26.469 43.074 c 26.809 42.789
 27 42.371 27 41.93 c 6 52.922 m 6 62.875 l 9.5 66.727 15.133 67.781 19.789
 65.453 c 21.949 64.371 24.559 64.793 26.27 66.504 c 28.359 68.598 l 28.355
 68.598 l 32.582 72.82 39.27 73.297 44.047 69.707 c 44.402 69.441 l 44.398
 69.445 l 46.535 67.844 49.465 67.844 51.602 69.445 c 51.961 69.711 l 51.961
 69.707 l 56.734 73.289 63.414 72.816 67.637 68.598 c 69.727 66.508 l 69.727
 66.512 l 71.441 64.805 74.055 64.383 76.219 65.461 c 80.906 67.801 86.527
 66.707 90 62.906 c 90 52.996 l 85.922 58.438 l 85.922 58.441 l 84.285 60.613
 81.332 61.309 78.898 60.098 c 74.426 57.863 69.023 58.742 65.484 62.273
 c 63.395 64.363 l 61.285 66.473 57.941 66.707 55.555 64.914 c 55.195 64.648
 l 50.93 61.453 45.066 61.453 40.801 64.648 c 40.441 64.914 l 38.055 66.703
 34.715 66.469 32.605 64.363 c 30.504 62.262 l 26.969 58.73 21.574 57.855
 17.105 60.09 c 14.676 61.305 11.723 60.605 10.098 58.43 c h
6 52.922 m f
Q Q
showpage
%%Trailer
%%EOF
