%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1440 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 384 m 780.73 384 792.938 389.059 801.941 398.059 c 810.941 407.062 
816 419.27 816 432 c 816 492.863 l 868.703 462.43 l 868.703 462.434 l 879.734
 455.965 892.887 454.168 905.25 457.434 c 917.609 460.703 928.156 468.77
 934.547 479.84 c 940.941 490.914 942.652 504.078 939.305 516.418 c 935.953
 528.758 927.82 539.25 916.703 545.566 c 864 576 l 916.703 606.434 l 927.82
 612.75 935.953 623.242 939.305 635.582 c 942.652 647.922 940.941 661.086
 934.547 672.16 c 928.156 683.23 917.609 691.297 905.25 694.566 c 892.887
 697.832 879.734 696.035 868.703 689.566 c 816 659.137 l 816 720 l 816 737.148
 806.852 752.996 792 761.57 c 777.148 770.145 758.852 770.145 744 761.57
 c 729.148 752.996 720 737.148 720 720 c 720 659.137 l 667.297 689.57 l 
667.297 689.566 l 656.266 696.035 643.113 697.832 630.75 694.566 c 618.391
 691.297 607.844 683.23 601.453 672.16 c 595.059 661.086 593.348 647.922
 596.695 635.582 c 600.047 623.242 608.18 612.75 619.297 606.434 c 672 576
 l 619.297 545.566 l 604.566 536.934 595.535 521.125 595.57 504.051 c 595.609
 486.98 604.715 471.211 619.48 462.645 c 634.246 454.074 652.453 453.992
 667.297 462.434 c 720 492.867 l 720 432 l 720 419.27 725.059 407.062 734.059
 398.059 c 743.062 389.059 755.27 384 768 384 c 480 912 m 480 899.27 485.059
 887.062 494.059 878.059 c 503.062 869.059 515.27 864 528 864 c 1008 864
 l 1025.148 864 1040.996 873.148 1049.57 888 c 1058.145 902.852 1058.145
 921.148 1049.57 936 c 1040.996 950.852 1025.148 960 1008 960 c 528 960 
l 515.27 960 503.062 954.941 494.059 945.941 c 485.059 936.938 480 924.73
 480 912 c 480 1104 m 480 1091.27 485.059 1079.062 494.059 1070.059 c 503.062
 1061.059 515.27 1056 528 1056 c 1008 1056 l 1025.148 1056 1040.996 1065.148
 1049.57 1080 c 1058.145 1094.852 1058.145 1113.148 1049.57 1128 c 1040.996
 1142.852 1025.148 1152 1008 1152 c 528 1152 l 515.27 1152 503.062 1146.941
 494.059 1137.941 c 485.059 1128.938 480 1116.73 480 1104 c f*
288 0 m 1248 0 l 1281.703 0 1314.812 8.871 1344 25.723 c 1373.188 42.574
 1397.426 66.812 1414.277 96 c 1431.129 125.188 1440 158.297 1440 192 c 
1440 1344 l 1440 1377.703 1431.129 1410.812 1414.277 1440 c 1397.426 1469.188
 1373.188 1493.426 1344 1510.277 c 1314.812 1527.129 1281.703 1536 1248 
1536 c 288 1536 l 237.078 1536 188.242 1515.773 152.234 1479.766 c 116.227
 1443.758 96 1394.922 96 1344 c 96 1248 l 192 1248 l 192 1344 l 192 1369.461
 202.113 1393.879 220.117 1411.883 c 238.121 1429.887 262.539 1440 288 1440
 c 1248 1440 l 1273.461 1440 1297.879 1429.887 1315.883 1411.883 c 1333.887
 1393.879 1344 1369.461 1344 1344 c 1344 192 l 1344 166.539 1333.887 142.121
 1315.883 124.117 c 1297.879 106.113 1273.461 96 1248 96 c 288 96 l 262.539
 96 238.121 106.113 220.117 124.117 c 202.113 142.121 192 166.539 192 192
 c 192 288 l 96 288 l 96 192 l 96 141.078 116.227 92.242 152.234 56.234 
c 188.242 20.227 237.078 0 288 0 c f
96 480 m 96 432 l 96 414.852 105.148 399.004 120 390.43 c 134.852 381.855
 153.148 381.855 168 390.43 c 182.852 399.004 192 414.852 192 432 c 192 
480 l 240 480 l 257.148 480 272.996 489.148 281.57 504 c 290.145 518.852
 290.145 537.148 281.57 552 c 272.996 566.852 257.148 576 240 576 c 48 576
 l 30.852 576 15.004 566.852 6.43 552 c -2.145 537.148 -2.145 518.852 6.43
 504 c 15.004 489.148 30.852 480 48 480 c h
96 768 m 96 720 l 96 702.852 105.148 687.004 120 678.43 c 134.852 669.855
 153.148 669.855 168 678.43 c 182.852 687.004 192 702.852 192 720 c 192 
768 l 240 768 l 257.148 768 272.996 777.148 281.57 792 c 290.145 806.852
 290.145 825.148 281.57 840 c 272.996 854.852 257.148 864 240 864 c 48 864
 l 30.852 864 15.004 854.852 6.43 840 c -2.145 825.148 -2.145 806.852 6.43
 792 c 15.004 777.148 30.852 768 48 768 c h
96 1056 m 96 1008 l 96 990.852 105.148 975.004 120 966.43 c 134.852 957.855
 153.148 957.855 168 966.43 c 182.852 975.004 192 990.852 192 1008 c 192
 1056 l 240 1056 l 257.148 1056 272.996 1065.148 281.57 1080 c 290.145 1094.852
 290.145 1113.148 281.57 1128 c 272.996 1142.852 257.148 1152 240 1152 c
 48 1152 l 30.852 1152 15.004 1142.852 6.43 1128 c -2.145 1113.148 -2.145
 1094.852 6.43 1080 c 15.004 1065.148 30.852 1056 48 1056 c h
96 1056 m f
Q Q
showpage
%%Trailer
%%EOF
