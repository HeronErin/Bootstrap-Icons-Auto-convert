%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 46
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 46
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 46 rectclip
1 0 0 -1 0 48 cm q
0 g
12.473 36.074 m 12.852 36.199 13.164 36.473 13.34 36.828 c 13.52 37.184
 13.547 37.598 13.422 37.973 c 11.922 42.473 l 11.809 42.867 11.539 43.195
 11.18 43.383 c 10.816 43.57 10.395 43.605 10.008 43.477 c 9.621 43.348 
9.305 43.066 9.129 42.699 c 8.953 42.332 8.934 41.906 9.078 41.527 c 10.578
 37.027 l 10.84 36.238 11.688 35.812 12.473 36.074 c 21.473 36.074 m 21.852
 36.199 22.164 36.473 22.34 36.828 c 22.52 37.184 22.547 37.598 22.422 37.973
 c 19.422 46.973 l 19.309 47.367 19.039 47.695 18.68 47.883 c 18.316 48.07
 17.895 48.105 17.508 47.977 c 17.121 47.848 16.805 47.566 16.629 47.199
 c 16.453 46.832 16.434 46.406 16.578 46.027 c 19.578 37.027 l 19.84 36.238
 20.688 35.812 21.473 36.074 c 30.473 36.074 m 30.852 36.199 31.164 36.473
 31.34 36.828 c 31.52 37.184 31.547 37.598 31.422 37.973 c 29.922 42.473
 l 29.809 42.867 29.539 43.195 29.18 43.383 c 28.816 43.57 28.395 43.605
 28.008 43.477 c 27.621 43.348 27.305 43.066 27.129 42.699 c 26.953 42.332
 26.934 41.906 27.078 41.527 c 28.578 37.027 l 28.84 36.238 29.688 35.812
 30.473 36.074 c 39.473 36.074 m 39.852 36.199 40.164 36.473 40.34 36.828
 c 40.52 37.184 40.547 37.598 40.422 37.973 c 37.422 46.973 l 37.309 47.367
 37.039 47.695 36.68 47.883 c 36.316 48.07 35.895 48.105 35.508 47.977 c
 35.121 47.848 34.805 47.566 34.629 47.199 c 34.453 46.832 34.434 46.406
 34.578 46.027 c 37.578 37.027 l 37.84 36.238 38.688 35.812 39.473 36.074
 c 40.215 15.082 m 39.379 10.867 36.773 7.211 33.062 5.043 c 29.352 2.879
 24.891 2.406 20.809 3.75 c 16.727 5.094 13.418 8.121 11.719 12.07 c 8.848
 11.738 5.973 12.605 3.762 14.461 c 1.551 16.32 0.203 19.008 0.035 21.891
 c -0.133 24.773 0.895 27.598 2.875 29.699 c 4.855 31.801 7.613 32.996 10.5
 33 c 39 33 l 43.738 33.004 47.668 29.336 47.988 24.609 c 48.309 19.883 
44.91 15.715 40.215 15.082 c f
Q Q
showpage
%%Trailer
%%EOF
