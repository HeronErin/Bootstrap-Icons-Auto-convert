%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
25.055 66.191 m 26.605 66.773 27.387 68.5 26.809 70.051 c 17.809 94.051
 l 17.188 95.539 15.5 96.27 13.988 95.703 c 12.477 95.141 11.684 93.48 12.191
 91.949 c 21.191 67.949 l 21.473 67.203 22.035 66.602 22.758 66.27 c 23.484
 65.941 24.309 65.914 25.055 66.191 c 43.055 66.191 m 44.605 66.773 45.387
 68.5 44.809 70.051 c 35.809 94.051 l 35.188 95.539 33.5 96.27 31.988 95.703
 c 30.477 95.141 29.684 93.48 30.191 91.949 c 39.191 67.949 l 39.473 67.203
 40.035 66.602 40.758 66.27 c 41.484 65.941 42.309 65.914 43.055 66.191 
c 61.055 66.191 m 62.605 66.773 63.387 68.5 62.809 70.051 c 53.809 94.051
 l 53.188 95.539 51.5 96.27 49.988 95.703 c 48.477 95.141 47.684 93.48 48.191
 91.949 c 57.191 67.949 l 57.473 67.203 58.035 66.602 58.758 66.27 c 59.484
 65.941 60.309 65.914 61.055 66.191 c 79.055 66.191 m 80.605 66.773 81.387
 68.5 80.809 70.051 c 71.809 94.051 l 71.188 95.539 69.5 96.27 67.988 95.703
 c 66.477 95.141 65.684 93.48 66.191 91.949 c 75.191 67.949 l 75.473 67.203
 76.035 66.602 76.758 66.27 c 77.484 65.941 78.309 65.914 79.055 66.191 
c 80.43 24.16 m 78.758 15.73 73.551 8.422 66.129 4.09 c 58.707 -0.246 49.781
 -1.188 41.617 1.5 c 33.453 4.184 26.832 10.242 23.438 18.137 c 17.699 17.477
 11.941 19.207 7.52 22.926 c 3.098 26.641 0.402 32.016 0.066 37.781 c -0.266
 43.547 1.785 49.195 5.746 53.398 c 9.707 57.605 15.223 59.992 21 60 c 78
 60 l 84.145 60.008 89.871 56.879 93.184 51.699 c 96.496 46.523 96.938 40.012
 94.355 34.438 c 91.77 28.859 86.52 24.984 80.43 24.16 c f
Q Q
showpage
%%Trailer
%%EOF
