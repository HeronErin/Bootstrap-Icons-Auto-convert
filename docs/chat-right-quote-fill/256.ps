%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 8 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 8 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 8 192 184 rectclip
1 0 0 -1 0 192 cm q
0 g
192 24 m 192 17.637 189.473 11.531 184.969 7.031 c 180.469 2.527 174.363
 0 168 0 c 24 0 l 17.637 0 11.531 2.527 7.031 7.031 c 2.527 11.531 0 17.637
 0 24 c 0 120 l 0 126.363 2.527 132.469 7.031 136.969 c 11.531 141.473 17.637
 144 24 144 c 139.031 144 l 142.215 144 145.266 145.266 147.516 147.516 
c 181.754 181.754 l 183.465 183.473 186.047 183.988 188.293 183.059 c 190.535
 182.133 192 179.945 192 177.516 c h
86.328 57.191 m 87.367 58.695 88.277 60.301 89.051 62.004 c 94.188 73.379
 93.766 90.527 77.746 106.477 c 75.719 108.453 72.496 108.508 70.402 106.598
 c 69.41 105.695 68.832 104.426 68.809 103.086 c 68.781 101.742 69.312 100.453
 70.273 99.516 c 75.301 94.523 78.336 89.543 79.98 84.875 c 76.754 86.855
 72.926 87.996 68.82 87.996 c 57.301 87.996 48 79.043 48 68.004 c 48 56.965
 57.312 48 68.809 48 c 72.062 48 75.145 48.719 77.879 49.992 c 77.977 50.039
 l 80.004 50.879 81.902 52.223 83.605 53.926 c 84.629 54.926 85.539 56.016
 86.328 57.191 c 132 84.875 m 128.773 86.855 124.945 87.996 120.84 87.996
 c 109.344 87.996 100.02 79.043 100.02 68.004 c 100.02 56.965 109.344 48
 120.828 48 c 124.082 48 127.164 48.719 129.898 49.992 c 129.996 50.039 
l 132.035 50.879 133.922 52.223 135.625 53.926 c 136.648 54.926 137.559 
56.016 138.348 57.191 c 139.395 58.695 140.309 60.301 141.082 62.004 c 146.219
 73.379 145.785 90.527 129.777 106.477 c 129.781 106.477 l 127.75 108.461
 124.52 108.516 122.426 106.598 c 121.43 105.695 120.852 104.426 120.828
 103.086 c 120.801 101.742 121.332 100.453 122.293 99.516 c 127.332 94.523
 130.355 89.543 132.012 84.875 c h
132 84.875 m f
Q Q
showpage
%%Trailer
%%EOF
