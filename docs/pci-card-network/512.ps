%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
156 228 m 156 180 l 161.137 180 l 164.32 180 167.371 178.734 169.621 176.484
 c 171.871 174.234 173.137 171.184 173.137 168 c 173.137 156 l 234.863 156
 l 234.863 168 l 234.863 171.184 236.129 174.234 238.379 176.484 c 240.629
 178.734 243.68 180 246.863 180 c 252 180 l 252 228 l h
156 228 m f
0 36 m 0 29.371 5.371 24 12 24 c 36 24 l 39.184 24 42.234 25.266 44.484
 27.516 c 46.734 29.766 48 32.816 48 36 c 48 96 l 372 96 l 375.184 96 378.234
 97.266 380.484 99.516 c 382.734 101.766 384 104.816 384 108 c 384 276 l
 384 279.184 382.734 282.234 380.484 284.484 c 378.234 286.734 375.184 288
 372 288 c 48 288 l 48 348 l 48 354.629 42.629 360 36 360 c 29.371 360 24
 354.629 24 348 c 24 48 l 12 48 l 5.371 48 0 42.629 0 36 c 161.137 132 m
 154.508 132 149.137 137.371 149.137 144 c 149.137 156 l 144 156 l 137.371
 156 132 161.371 132 168 c 132 240 l 132 243.184 133.266 246.234 135.516
 248.484 c 137.766 250.734 140.816 252 144 252 c 264 252 l 267.184 252 270.234
 250.734 272.484 248.484 c 274.734 246.234 276 243.184 276 240 c 276 168
 l 276 164.816 274.734 161.766 272.484 159.516 c 270.234 157.266 267.184
 156 264 156 c 258.863 156 l 258.863 144 l 258.863 140.816 257.602 137.766
 255.348 135.516 c 253.098 133.266 250.047 132 246.863 132 c h
161.137 132 m f
72 300 m 156 300 l 156 324 l 156 327.184 154.734 330.234 152.484 332.484
 c 150.234 334.734 147.184 336 144 336 c 84 336 l 77.371 336 72 330.629 
72 324 c h
264 300 m 168 300 l 168 324 l 168 327.184 169.266 330.234 171.516 332.484
 c 173.766 334.734 176.816 336 180 336 c 252 336 l 255.184 336 258.234 334.734
 260.484 332.484 c 262.734 330.234 264 327.184 264 324 c h
264 300 m f
Q Q
showpage
%%Trailer
%%EOF
