%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.188 0.375 m -0.062 0.375 -0.062 0.75 0.188 0.75 c 0.605 0.75 l 0.754 
1.352 l 1.316 4.348 l 1.332 4.438 1.41 4.5 1.5 4.5 c 1.875 4.5 l 1.461 4.5
 1.125 4.836 1.125 5.25 c 1.125 5.664 1.461 6 1.875 6 c 2.289 6 2.625 5.664
 2.625 5.25 c 2.625 4.836 2.289 4.5 1.875 4.5 c 4.5 4.5 l 4.086 4.5 3.75
 4.836 3.75 5.25 c 3.75 5.664 4.086 6 4.5 6 c 4.914 6 5.25 5.664 5.25 5.25
 c 5.25 4.836 4.914 4.5 4.5 4.5 c 4.875 4.5 l 4.965 4.5 5.043 4.438 5.059
 4.348 c 5.621 1.348 l 5.645 1.23 5.555 1.125 5.438 1.125 c 1.082 1.125 
l 0.93 0.516 l 0.934 0.516 l 0.91 0.434 0.836 0.375 0.75 0.375 c h
2.25 5.25 m 2.25 5.457 2.082 5.625 1.875 5.625 c 1.668 5.625 1.5 5.457 
1.5 5.25 c 1.5 5.043 1.668 4.875 1.875 4.875 c 2.082 4.875 2.25 5.043 2.25
 5.25 c 4.875 5.25 m 4.875 5.457 4.707 5.625 4.5 5.625 c 4.293 5.625 4.125
 5.457 4.125 5.25 c 4.125 5.043 4.293 4.875 4.5 4.875 c 4.707 4.875 4.875
 5.043 4.875 5.25 c 3.375 2.062 m 3.375 2.625 l 3.938 2.625 l 4.188 2.625
 4.188 3 3.938 3 c 3.375 3 l 3.375 3.562 l 3.375 3.812 3 3.812 3 3.562 c
 3 3 l 2.438 3 l 2.188 3 2.188 2.625 2.438 2.625 c 3 2.625 l 3 2.062 l 3
 1.812 3.375 1.812 3.375 2.062 c f
Q Q
showpage
%%Trailer
%%EOF
