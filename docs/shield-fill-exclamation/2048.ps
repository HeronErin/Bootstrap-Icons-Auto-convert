%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 701.762 0 591.07 25.441 486.91 53.762 c 380.352 82.562 272.926 
116.641 209.758 137.281 c 209.762 137.281 l 183.348 146 159.934 161.996 
142.207 183.426 c 124.477 204.859 113.152 230.855 109.535 258.434 c 52.32
 688.227 185.086 1006.754 346.176 1217.473 c 414.512 1307.59 495.961 1386.965
 587.809 1452.961 c 624.863 1479.168 659.234 1499.234 688.418 1512.961 c
 715.297 1525.633 744.195 1536 768.004 1536 c 791.812 1536 820.613 1525.633
 847.59 1512.961 c 847.586 1512.961 l 882.801 1495.926 916.465 1475.852 
948.191 1452.961 c 1040.039 1386.965 1121.488 1307.59 1189.824 1217.473 
c 1350.914 1006.754 1483.68 688.227 1426.465 258.434 c 1422.863 230.836 
1411.547 204.82 1393.816 183.371 c 1376.086 161.922 1352.664 145.914 1326.238
 137.184 c 1234.535 107.137 1142.125 79.289 1049.09 53.664 c 944.93 25.535
 834.238 0 768 0 c 715.199 816.191 m 681.602 479.52 l 679.016 455.027 686.945
 430.586 703.422 412.281 c 719.898 393.973 743.371 383.52 768 383.52 c 792.629
 383.52 816.102 393.973 832.578 412.281 c 849.055 430.586 856.984 455.027
 854.398 479.52 c 820.797 816.191 l 820.801 816.191 l 819.281 833.988 808.898
 849.824 793.184 858.312 c 777.469 866.801 758.531 866.801 742.816 858.312
 c 727.102 849.824 716.719 833.988 715.199 816.191 c 768.191 1152 m 733.895
 1152 702.203 1133.703 685.055 1104 c 667.906 1074.297 667.906 1037.703 
685.055 1008 c 702.203 978.297 733.895 960 768.191 960 c 802.488 960 834.184
 978.297 851.332 1008 c 868.48 1037.703 868.48 1074.297 851.332 1104 c 834.184
 1133.703 802.488 1152 768.191 1152 c f*
Q Q
showpage
%%Trailer
%%EOF
