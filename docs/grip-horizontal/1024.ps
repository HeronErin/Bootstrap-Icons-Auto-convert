%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 288 720 528
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 288 720 528
768 768 cairo_set_page_size
%%EndPageSetup
q 48 288 672 240 rectclip
1 0 0 -1 0 768 cm q
0 g
96 384 m 113.148 384 128.996 393.148 137.57 408 c 146.145 422.852 146.145
 441.148 137.57 456 c 128.996 470.852 113.148 480 96 480 c 78.852 480 63.004
 470.852 54.43 456 c 45.855 441.148 45.855 422.852 54.43 408 c 63.004 393.148
 78.852 384 96 384 c 96 240 m 113.148 240 128.996 249.148 137.57 264 c 146.145
 278.852 146.145 297.148 137.57 312 c 128.996 326.852 113.148 336 96 336
 c 78.852 336 63.004 326.852 54.43 312 c 45.855 297.148 45.855 278.852 54.43
 264 c 63.004 249.148 78.852 240 96 240 c 240 384 m 257.148 384 272.996 
393.148 281.57 408 c 290.145 422.852 290.145 441.148 281.57 456 c 272.996
 470.852 257.148 480 240 480 c 222.852 480 207.004 470.852 198.43 456 c 
189.855 441.148 189.855 422.852 198.43 408 c 207.004 393.148 222.852 384
 240 384 c 240 240 m 257.148 240 272.996 249.148 281.57 264 c 290.145 278.852
 290.145 297.148 281.57 312 c 272.996 326.852 257.148 336 240 336 c 222.852
 336 207.004 326.852 198.43 312 c 189.855 297.148 189.855 278.852 198.43
 264 c 207.004 249.148 222.852 240 240 240 c 384 384 m 401.148 384 416.996
 393.148 425.57 408 c 434.145 422.852 434.145 441.148 425.57 456 c 416.996
 470.852 401.148 480 384 480 c 366.852 480 351.004 470.852 342.43 456 c 
333.855 441.148 333.855 422.852 342.43 408 c 351.004 393.148 366.852 384
 384 384 c 384 240 m 401.148 240 416.996 249.148 425.57 264 c 434.145 278.852
 434.145 297.148 425.57 312 c 416.996 326.852 401.148 336 384 336 c 366.852
 336 351.004 326.852 342.43 312 c 333.855 297.148 333.855 278.852 342.43
 264 c 351.004 249.148 366.852 240 384 240 c 528 384 m 545.148 384 560.996
 393.148 569.57 408 c 578.145 422.852 578.145 441.148 569.57 456 c 560.996
 470.852 545.148 480 528 480 c 510.852 480 495.004 470.852 486.43 456 c 
477.855 441.148 477.855 422.852 486.43 408 c 495.004 393.148 510.852 384
 528 384 c 528 240 m 545.148 240 560.996 249.148 569.57 264 c 578.145 278.852
 578.145 297.148 569.57 312 c 560.996 326.852 545.148 336 528 336 c 510.852
 336 495.004 326.852 486.43 312 c 477.855 297.148 477.855 278.852 486.43
 264 c 495.004 249.148 510.852 240 528 240 c 672 384 m 689.148 384 704.996
 393.148 713.57 408 c 722.145 422.852 722.145 441.148 713.57 456 c 704.996
 470.852 689.148 480 672 480 c 654.852 480 639.004 470.852 630.43 456 c 
621.855 441.148 621.855 422.852 630.43 408 c 639.004 393.148 654.852 384
 672 384 c 672 240 m 689.148 240 704.996 249.148 713.57 264 c 722.145 278.852
 722.145 297.148 713.57 312 c 704.996 326.852 689.148 336 672 336 c 654.852
 336 639.004 326.852 630.43 312 c 621.855 297.148 621.855 278.852 630.43
 264 c 639.004 249.148 654.852 240 672 240 c f
Q Q
showpage
%%Trailer
%%EOF
