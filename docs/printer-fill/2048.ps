%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 96 m 429.078 96 380.242 116.227 344.234 152.234 c 308.227 188.242 288
 237.078 288 288 c 288 384 l 1248 384 l 1248 288 l 1248 254.297 1239.129
 221.188 1222.277 192 c 1205.426 162.812 1181.188 138.574 1152 121.723 c
 1122.812 104.871 1089.703 96 1056 96 c h
1056 864 m 480 864 l 454.539 864 430.121 874.113 412.117 892.117 c 394.113
 910.121 384 934.539 384 960 c 384 1248 l 384 1273.461 394.113 1297.879 
412.117 1315.883 c 430.121 1333.887 454.539 1344 480 1344 c 1056 1344 l 
1081.461 1344 1105.879 1333.887 1123.883 1315.883 c 1141.887 1297.879 1152
 1273.461 1152 1248 c 1152 960 l 1152 934.539 1141.887 910.121 1123.883 
892.117 c 1105.879 874.113 1081.461 864 1056 864 c f
0 672 m 0 621.078 20.227 572.242 56.234 536.234 c 92.242 500.227 141.078
 480 192 480 c 1344 480 l 1377.703 480 1410.812 488.871 1440 505.723 c 1469.188
 522.574 1493.426 546.812 1510.277 576 c 1527.129 605.188 1536 638.297 1536
 672 c 1536 960 l 1536 993.703 1527.129 1026.812 1510.277 1056 c 1493.426
 1085.188 1469.188 1109.426 1440 1126.277 c 1410.812 1143.129 1377.703 1152
 1344 1152 c 1248 1152 l 1248 960 l 1248 926.297 1239.129 893.188 1222.277
 864 c 1205.426 834.812 1181.188 810.574 1152 793.723 c 1122.812 776.871
 1089.703 768 1056 768 c 480 768 l 429.078 768 380.242 788.227 344.234 824.234
 c 308.227 860.242 288 909.078 288 960 c 288 1152 l 192 1152 l 141.078 1152
 92.242 1131.773 56.234 1095.766 c 20.227 1059.758 0 1010.922 0 960 c h
240 768 m 257.148 768 272.996 758.852 281.57 744 c 290.145 729.148 290.145
 710.852 281.57 696 c 272.996 681.148 257.148 672 240 672 c 222.852 672 
207.004 681.148 198.43 696 c 189.855 710.852 189.855 729.148 198.43 744 
c 207.004 758.852 222.852 768 240 768 c f
Q Q
showpage
%%Trailer
%%EOF
