%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 180 rectclip
1 0 0 -1 0 192 cm q
0 g
168 0 m 169.59 0 171.117 0.633 172.242 1.758 c 173.367 2.883 174 4.41 174
 6 c 174 24 l 180 24 l 183.184 24 186.234 25.266 188.484 27.516 c 190.734
 29.766 192 32.816 192 36 c 192 60 l 0 60 l 0 36 l 0 29.371 5.371 24 12 
24 c 162 24 l 162 6 l 162 2.688 164.688 0 168 0 c 24 42 m 24 45.312 26.688
 48 30 48 c 33.312 48 36 45.312 36 42 c 36 38.688 33.312 36 30 36 c 26.688
 36 24 38.688 24 42 c 48 42 m 48 45.312 50.688 48 54 48 c 57.312 48 60 45.312
 60 42 c 60 38.688 57.312 36 54 36 c 50.688 36 48 38.688 48 42 c 138 48 
m 141.312 48 144 45.312 144 42 c 144 38.688 141.312 36 138 36 c 134.688 
36 132 38.688 132 42 c 132 45.312 134.688 48 138 48 c 156 42 m 156 45.312
 158.688 48 162 48 c 165.312 48 168 45.312 168 42 c 168 38.688 165.312 36
 162 36 c 158.688 36 156 38.688 156 42 c 114 36 m 78 36 l 74.688 36 72 38.688
 72 42 c 72 45.312 74.688 48 78 48 c 114 48 l 117.312 48 120 45.312 120 
42 c 120 38.688 117.312 36 114 36 c 72 126 m 72 132.43 68.57 138.375 63 
141.59 c 57.43 144.805 50.57 144.805 45 141.59 c 39.43 138.375 36 132.43
 36 126 c 36 119.57 39.43 113.625 45 110.41 c 50.57 107.195 57.43 107.195
 63 110.41 c 68.57 113.625 72 119.57 72 126 c 54 132 m 57.312 132 60 129.312
 60 126 c 60 122.688 57.312 120 54 120 c 50.688 120 48 122.688 48 126 c 
48 129.312 50.688 132 54 132 c 138 144 m 144.43 144 150.375 140.57 153.59
 135 c 156.805 129.43 156.805 122.57 153.59 117 c 150.375 111.43 144.43 
108 138 108 c 131.57 108 125.625 111.43 122.41 117 c 119.195 122.57 119.195
 129.43 122.41 135 c 125.625 140.57 131.57 144 138 144 c 144 126 m 144 129.312
 141.312 132 138 132 c 134.688 132 132 129.312 132 126 c 132 122.688 134.688
 120 138 120 c 141.312 120 144 122.688 144 126 c f
0 72 m 192 72 l 192 168 l 192 171.184 190.734 174.234 188.484 176.484 c
 186.234 178.734 183.184 180 180 180 c 12 180 l 5.371 180 0 174.629 0 168
 c h
24 126 m 24 136.719 29.719 146.621 39 151.98 c 48.281 157.34 59.719 157.34
 69 151.98 c 78.281 146.621 84 136.719 84 126 c 84 115.281 78.281 105.379
 69 100.02 c 59.719 94.66 48.281 94.66 39 100.02 c 29.719 105.379 24 115.281
 24 126 c 108 126 m 108 136.719 113.719 146.621 123 151.98 c 132.281 157.34
 143.719 157.34 153 151.98 c 162.281 146.621 168 136.719 168 126 c 168 115.281
 162.281 105.379 153 100.02 c 143.719 94.66 132.281 94.66 123 100.02 c 113.719
 105.379 108 115.281 108 126 c f
Q Q
showpage
%%Trailer
%%EOF
