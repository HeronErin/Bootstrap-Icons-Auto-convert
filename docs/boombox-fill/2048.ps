%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 0 m 1356.73 0 1368.938 5.059 1377.941 14.059 c 1386.941 23.062 1392
 35.27 1392 48 c 1392 192 l 1440 192 l 1465.461 192 1489.879 202.113 1507.883
 220.117 c 1525.887 238.121 1536 262.539 1536 288 c 1536 480 l 0 480 l 0
 288 l 0 262.539 10.113 238.121 28.117 220.117 c 46.121 202.113 70.539 192
 96 192 c 1296 192 l 1296 48 l 1296 35.27 1301.059 23.062 1310.059 14.059
 c 1319.062 5.059 1331.27 0 1344 0 c 192 336 m 192 353.148 201.148 368.996
 216 377.57 c 230.852 386.145 249.148 386.145 264 377.57 c 278.852 368.996
 288 353.148 288 336 c 288 318.852 278.852 303.004 264 294.43 c 249.148 
285.855 230.852 285.855 216 294.43 c 201.148 303.004 192 318.852 192 336
 c 384 336 m 384 353.148 393.148 368.996 408 377.57 c 422.852 386.145 441.148
 386.145 456 377.57 c 470.852 368.996 480 353.148 480 336 c 480 318.852 
470.852 303.004 456 294.43 c 441.148 285.855 422.852 285.855 408 294.43 
c 393.148 303.004 384 318.852 384 336 c 1104 384 m 1121.148 384 1136.996
 374.852 1145.57 360 c 1154.145 345.148 1154.145 326.852 1145.57 312 c 1136.996
 297.148 1121.148 288 1104 288 c 1086.852 288 1071.004 297.148 1062.43 312
 c 1053.855 326.852 1053.855 345.148 1062.43 360 c 1071.004 374.852 1086.852
 384 1104 384 c 1248 336 m 1248 353.148 1257.148 368.996 1272 377.57 c 1286.852
 386.145 1305.148 386.145 1320 377.57 c 1334.852 368.996 1344 353.148 1344
 336 c 1344 318.852 1334.852 303.004 1320 294.43 c 1305.148 285.855 1286.852
 285.855 1272 294.43 c 1257.148 303.004 1248 318.852 1248 336 c 912 288 
m 624 288 l 606.852 288 591.004 297.148 582.43 312 c 573.855 326.852 573.855
 345.148 582.43 360 c 591.004 374.852 606.852 384 624 384 c 912 384 l 929.148
 384 944.996 374.852 953.57 360 c 962.145 345.148 962.145 326.852 953.57
 312 c 944.996 297.148 929.148 288 912 288 c 576 1008 m 576 1059.445 548.555
 1106.984 504 1132.707 c 459.445 1158.43 404.555 1158.43 360 1132.707 c 
315.445 1106.984 288 1059.445 288 1008 c 288 956.555 315.445 909.016 360
 883.293 c 404.555 857.57 459.445 857.57 504 883.293 c 548.555 909.016 576
 956.555 576 1008 c 432 1056 m 449.148 1056 464.996 1046.852 473.57 1032
 c 482.145 1017.148 482.145 998.852 473.57 984 c 464.996 969.148 449.148
 960 432 960 c 414.852 960 399.004 969.148 390.43 984 c 381.855 998.852 
381.855 1017.148 390.43 1032 c 399.004 1046.852 414.852 1056 432 1056 c 
1104 1152 m 1155.445 1152 1202.984 1124.555 1228.707 1080 c 1254.43 1035.445
 1254.43 980.555 1228.707 936 c 1202.984 891.445 1155.445 864 1104 864 c
 1052.555 864 1005.016 891.445 979.293 936 c 953.57 980.555 953.57 1035.445
 979.293 1080 c 1005.016 1124.555 1052.555 1152 1104 1152 c 1152 1008 m 
1152 1025.148 1142.852 1040.996 1128 1049.57 c 1113.148 1058.145 1094.852
 1058.145 1080 1049.57 c 1065.148 1040.996 1056 1025.148 1056 1008 c 1056
 990.852 1065.148 975.004 1080 966.43 c 1094.852 957.855 1113.148 957.855
 1128 966.43 c 1142.852 975.004 1152 990.852 1152 1008 c f
0 576 m 1536 576 l 1536 1344 l 1536 1369.461 1525.887 1393.879 1507.883
 1411.883 c 1489.879 1429.887 1465.461 1440 1440 1440 c 96 1440 l 70.539
 1440 46.121 1429.887 28.117 1411.883 c 10.113 1393.879 0 1369.461 0 1344
 c h
192 1008 m 192 1071.652 217.285 1132.695 262.293 1177.707 c 307.305 1222.715
 368.348 1248 432 1248 c 495.652 1248 556.695 1222.715 601.707 1177.707 
c 646.715 1132.695 672 1071.652 672 1008 c 672 944.348 646.715 883.305 601.707
 838.293 c 556.695 793.285 495.652 768 432 768 c 368.348 768 307.305 793.285
 262.293 838.293 c 217.285 883.305 192 944.348 192 1008 c 864 1008 m 864
 1071.652 889.285 1132.695 934.293 1177.707 c 979.305 1222.715 1040.348 
1248 1104 1248 c 1167.652 1248 1228.695 1222.715 1273.707 1177.707 c 1318.715
 1132.695 1344 1071.652 1344 1008 c 1344 944.348 1318.715 883.305 1273.707
 838.293 c 1228.695 793.285 1167.652 768 1104 768 c 1040.348 768 979.305
 793.285 934.293 838.293 c 889.285 883.305 864 944.348 864 1008 c f
Q Q
showpage
%%Trailer
%%EOF
