%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
672 0 m 678.363 0 684.469 2.527 688.969 7.031 c 693.473 11.531 696 17.637
 696 24 c 696 96 l 720 96 l 732.73 96 744.938 101.059 753.941 110.059 c 
762.941 119.062 768 131.27 768 144 c 768 240 l 0 240 l 0 144 l 0 131.27 
5.059 119.062 14.059 110.059 c 23.062 101.059 35.27 96 48 96 c 648 96 l 
648 24 l 648 17.637 650.527 11.531 655.031 7.031 c 659.531 2.527 665.637
 0 672 0 c 96 168 m 96 176.574 100.574 184.496 108 188.785 c 115.426 193.07
 124.574 193.07 132 188.785 c 139.426 184.496 144 176.574 144 168 c 144 
159.426 139.426 151.504 132 147.215 c 124.574 142.93 115.426 142.93 108 
147.215 c 100.574 151.504 96 159.426 96 168 c 192 168 m 192 176.574 196.574
 184.496 204 188.785 c 211.426 193.07 220.574 193.07 228 188.785 c 235.426
 184.496 240 176.574 240 168 c 240 159.426 235.426 151.504 228 147.215 c
 220.574 142.93 211.426 142.93 204 147.215 c 196.574 151.504 192 159.426
 192 168 c 552 192 m 560.574 192 568.496 187.426 572.785 180 c 577.07 172.574
 577.07 163.426 572.785 156 c 568.496 148.574 560.574 144 552 144 c 543.426
 144 535.504 148.574 531.215 156 c 526.93 163.426 526.93 172.574 531.215
 180 c 535.504 187.426 543.426 192 552 192 c 624 168 m 624 176.574 628.574
 184.496 636 188.785 c 643.426 193.07 652.574 193.07 660 188.785 c 667.426
 184.496 672 176.574 672 168 c 672 159.426 667.426 151.504 660 147.215 c
 652.574 142.93 643.426 142.93 636 147.215 c 628.574 151.504 624 159.426
 624 168 c 456 144 m 312 144 l 303.426 144 295.504 148.574 291.215 156 c
 286.93 163.426 286.93 172.574 291.215 180 c 295.504 187.426 303.426 192
 312 192 c 456 192 l 464.574 192 472.496 187.426 476.785 180 c 481.07 172.574
 481.07 163.426 476.785 156 c 472.496 148.574 464.574 144 456 144 c 288 
504 m 288 529.723 274.277 553.492 252 566.355 c 229.723 579.215 202.277 
579.215 180 566.355 c 157.723 553.492 144 529.723 144 504 c 144 478.277 
157.723 454.508 180 441.645 c 202.277 428.785 229.723 428.785 252 441.645
 c 274.277 454.508 288 478.277 288 504 c 216 528 m 224.574 528 232.496 523.426
 236.785 516 c 241.07 508.574 241.07 499.426 236.785 492 c 232.496 484.574
 224.574 480 216 480 c 207.426 480 199.504 484.574 195.215 492 c 190.93 
499.426 190.93 508.574 195.215 516 c 199.504 523.426 207.426 528 216 528
 c 552 576 m 577.723 576 601.492 562.277 614.355 540 c 627.215 517.723 627.215
 490.277 614.355 468 c 601.492 445.723 577.723 432 552 432 c 526.277 432
 502.508 445.723 489.645 468 c 476.785 490.277 476.785 517.723 489.645 540
 c 502.508 562.277 526.277 576 552 576 c 576 504 m 576 512.574 571.426 520.496
 564 524.785 c 556.574 529.07 547.426 529.07 540 524.785 c 532.574 520.496
 528 512.574 528 504 c 528 495.426 532.574 487.504 540 483.215 c 547.426
 478.93 556.574 478.93 564 483.215 c 571.426 487.504 576 495.426 576 504
 c f
0 288 m 768 288 l 768 672 l 768 684.73 762.941 696.938 753.941 705.941 
c 744.938 714.941 732.73 720 720 720 c 48 720 l 35.27 720 23.062 714.941
 14.059 705.941 c 5.059 696.938 0 684.73 0 672 c h
96 504 m 96 546.871 118.871 586.488 156 607.922 c 193.129 629.359 238.871
 629.359 276 607.922 c 313.129 586.488 336 546.871 336 504 c 336 461.129
 313.129 421.512 276 400.078 c 238.871 378.641 193.129 378.641 156 400.078
 c 118.871 421.512 96 461.129 96 504 c 432 504 m 432 546.871 454.871 586.488
 492 607.922 c 529.129 629.359 574.871 629.359 612 607.922 c 649.129 586.488
 672 546.871 672 504 c 672 461.129 649.129 421.512 612 400.078 c 574.871
 378.641 529.129 378.641 492 400.078 c 454.871 421.512 432 461.129 432 504
 c f
Q Q
showpage
%%Trailer
%%EOF
