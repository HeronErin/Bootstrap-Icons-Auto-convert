%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 47 720 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 47 720 721
768 768 cairo_set_page_size
%%EndPageSetup
q 48 47 672 674 rectclip
1 0 0 -1 0 768 cm q
0 g
175.008 487.008 m 179.512 482.492 185.625 479.957 192 479.957 c 198.375
 479.957 204.488 482.492 208.992 487.008 c 384 662.062 l 559.008 487.008
 l 565.078 480.938 573.926 478.566 582.219 480.789 c 590.512 483.012 596.988
 489.488 599.211 497.781 c 601.434 506.074 599.062 514.922 592.992 520.992
 c 400.992 712.992 l 396.488 717.508 390.375 720.043 384 720.043 c 377.625
 720.043 371.512 717.508 367.008 712.992 c 175.008 520.992 l 170.492 516.488
 167.957 510.375 167.957 504 c 167.957 497.625 170.492 491.512 175.008 487.008
 c 175.008 280.992 m 179.512 285.508 185.625 288.043 192 288.043 c 198.375
 288.043 204.488 285.508 208.992 280.992 c 384 105.938 l 559.008 280.992
 l 565.078 287.062 573.926 289.434 582.219 287.211 c 590.512 284.988 596.988
 278.512 599.211 270.219 c 601.434 261.926 599.062 253.078 592.992 247.008
 c 400.992 55.008 l 396.488 50.492 390.375 47.957 384 47.957 c 377.625 47.957
 371.512 50.492 367.008 55.008 c 175.008 247.008 l 170.492 251.512 167.957
 257.625 167.957 264 c 167.957 270.375 170.492 276.488 175.008 280.992 c
 48 384 m 48 377.637 50.527 371.531 55.031 367.031 c 59.531 362.527 65.637
 360 72 360 c 696 360 l 704.574 360 712.496 364.574 716.785 372 c 721.07
 379.426 721.07 388.574 716.785 396 c 712.496 403.426 704.574 408 696 408
 c 72 408 l 65.637 408 59.531 405.473 55.031 400.969 c 50.527 396.469 48
 390.363 48 384 c f*
Q Q
showpage
%%Trailer
%%EOF
