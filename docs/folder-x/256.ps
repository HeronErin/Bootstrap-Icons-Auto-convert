%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 2 23 190 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 2 23 190 180
192 192 cairo_set_page_size
%%EndPageSetup
q 2 23 188 157 rectclip
1 0 0 -1 0 192 cm q
0 g
6.48 46.441 m 6 36 l 6 29.637 8.527 23.531 13.031 19.031 c 17.531 14.527
 23.637 12 30 12 c 74.062 12 l 80.43 12 86.531 14.531 91.031 19.031 c 100.969
 28.969 l 105.469 33.469 111.57 36 117.938 36 c 165.723 36 l 165.719 36 
l 172.465 36 178.895 38.836 183.445 43.816 c 187.992 48.793 190.234 55.457
 189.625 62.172 c 186.551 96 l 174.48 96 l 177.66 61.078 l 177.965 57.727
 176.844 54.398 174.57 51.91 c 172.301 49.422 169.09 48.004 165.719 48 c
 26.281 48 l 22.91 48 19.695 49.418 17.422 51.906 c 15.148 54.395 14.023
 57.723 14.328 61.078 c 21.973 145.078 l 22.531 151.258 27.707 155.996 33.91
 156 c 108 156 l 108 168 l 33.91 168 l 27.926 167.996 22.152 165.758 17.734
 161.719 c 13.312 157.68 10.562 152.137 10.02 146.172 c 2.375 62.172 l 1.875
 56.613 3.324 51.055 6.48 46.453 c h
82.547 27.516 m 80.297 25.266 77.246 24 74.062 24 c 30 24 l 23.461 24 18.125
 29.234 18 35.773 c 18.07 37.441 l 20.656 36.488 23.391 36.008 26.277 36
 c 91.031 36 l h
82.547 27.516 m f
142.246 121.754 m 139.902 119.41 136.102 119.41 133.758 121.758 c 131.414
 124.105 131.418 127.906 133.766 130.246 c 147.516 144 l 133.762 157.754
 l 133.766 157.754 l 132.637 158.879 132.004 160.402 132.004 161.996 c 132
 163.59 132.633 165.117 133.758 166.242 c 136.102 168.59 139.902 168.59 
142.246 166.246 c 156 152.484 l 169.754 166.25 l 169.754 166.246 l 172.098
 168.594 175.902 168.594 178.246 166.246 c 180.594 163.902 180.594 160.098
 178.246 157.754 c 164.484 144 l 178.25 130.246 l 178.246 130.246 l 180.594
 127.906 180.598 124.105 178.254 121.758 c 175.91 119.41 172.109 119.41 
169.766 121.754 c 156 135.516 l h
142.246 121.754 m f
Q Q
showpage
%%Trailer
%%EOF
