%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 4 47 380 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 4 47 380 360
384 384 cairo_set_page_size
%%EndPageSetup
q 4 47 376 313 rectclip
1 0 0 -1 0 384 cm q
0 g
12.961 92.879 m 12 72 l 12 59.27 17.059 47.062 26.059 38.059 c 35.062 29.059
 47.27 24 60 24 c 148.129 24 l 160.855 24.004 173.062 29.062 182.062 38.062
 c 201.938 57.938 l 210.938 66.938 223.145 71.996 235.871 72 c 331.441 72
 l 344.926 72 357.793 77.672 366.887 87.629 c 375.98 97.586 380.469 110.914
 379.246 124.344 c 373.105 192 l 348.961 192 l 355.32 122.16 l 355.926 115.449
 353.684 108.797 349.145 103.82 c 344.602 98.844 338.176 96.008 331.441 
96 c 52.559 96 l 45.82 96 39.387 98.836 34.84 103.812 c 30.293 108.785 28.051
 115.445 28.656 122.16 c 43.945 290.16 l 44.484 296.125 47.23 301.668 51.648
 305.711 c 56.066 309.75 61.836 311.996 67.824 312 c 216 312 l 216 336 l
 67.824 336 l 55.848 335.996 44.309 331.516 35.469 323.438 c 26.625 315.359
 21.125 304.27 20.039 292.344 c 4.75 124.344 l 4.754 124.344 l 3.75 113.227
 6.652 102.109 12.961 92.902 c h
165.098 55.031 m 160.598 50.531 154.492 48 148.129 48 c 60 48 l 53.715 
48 47.676 50.465 43.188 54.867 c 38.699 59.27 36.121 65.258 36 71.543 c 
36.145 74.879 l 41.312 72.977 46.785 72.016 52.559 72 c 182.062 72 l h
165.098 55.031 m f
284.496 243.504 m 279.805 238.82 272.203 238.824 267.516 243.516 c 262.832
 248.207 262.836 255.809 267.527 260.496 c 295.031 288 l 267.527 315.504
 l 265.273 317.754 264.008 320.809 264.004 323.992 c 264.004 327.176 265.266
 330.23 267.516 332.484 c 272.203 337.176 279.805 337.18 284.496 332.496
 c 312 304.969 l 339.504 332.496 l 344.195 337.188 351.805 337.188 356.496
 332.496 c 361.188 327.805 361.188 320.195 356.496 315.504 c 328.969 288
 l 356.496 260.496 l 361.188 255.809 361.195 248.207 356.508 243.516 c 351.824
 238.824 344.219 238.82 339.527 243.504 c 312 271.031 l h
284.496 243.504 m f
Q Q
showpage
%%Trailer
%%EOF
