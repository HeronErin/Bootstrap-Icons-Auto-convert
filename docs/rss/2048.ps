%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 96 m 1369.461 96 1393.879 106.113 1411.883 124.117 c 1429.887 142.121
 1440 166.539 1440 192 c 1440 1344 l 1440 1369.461 1429.887 1393.879 1411.883
 1411.883 c 1393.879 1429.887 1369.461 1440 1344 1440 c 192 1440 l 166.539
 1440 142.121 1429.887 124.117 1411.883 c 106.113 1393.879 96 1369.461 96
 1344 c 96 192 l 96 166.539 106.113 142.121 124.117 124.117 c 142.121 106.113
 166.539 96 192 96 c h
192 0 m 141.078 0 92.242 20.227 56.234 56.234 c 20.227 92.242 0 141.078
 0 192 c 0 1344 l 0 1377.703 8.871 1410.812 25.723 1440 c 42.574 1469.188
 66.812 1493.426 96 1510.277 c 125.188 1527.129 158.297 1536 192 1536 c 
1344 1536 l 1377.703 1536 1410.812 1527.129 1440 1510.277 c 1469.188 1493.426
 1493.426 1469.188 1510.277 1440 c 1527.129 1410.812 1536 1377.703 1536 
1344 c 1536 192 l 1536 158.297 1527.129 125.188 1510.277 96 c 1493.426 66.812
 1469.188 42.574 1440 25.723 c 1410.812 8.871 1377.703 0 1344 0 c h
192 0 m f
528 1152 m 528 1203.445 500.555 1250.984 456 1276.707 c 411.445 1302.43
 356.555 1302.43 312 1276.707 c 267.445 1250.984 240 1203.445 240 1152 c
 240 1100.555 267.445 1053.016 312 1027.293 c 356.555 1001.57 411.445 1001.57
 456 1027.293 c 500.555 1053.016 528 1100.555 528 1152 c 240 336 m 240 310.539
 250.113 286.121 268.117 268.117 c 286.121 250.113 310.539 240 336 240 c
 866.207 240 1296 669.793 1296 1200 c 1296 1234.297 1277.703 1265.988 1248
 1283.137 c 1218.297 1300.289 1181.703 1300.289 1152 1283.137 c 1122.297
 1265.988 1104 1234.297 1104 1200 c 1104 1065.188 1068.512 932.75 1001.109
 816 c 933.703 699.25 836.75 602.297 720 534.891 c 603.25 467.488 470.812
 432 336 432 c 310.539 432 286.121 421.887 268.117 403.883 c 250.113 385.879
 240 361.461 240 336 c 240 720 m 240 694.539 250.113 670.121 268.117 652.117
 c 286.121 634.113 310.539 624 336 624 c 488.766 624 635.273 684.684 743.293
 792.707 c 851.316 900.727 912 1047.234 912 1200 c 912 1234.297 893.703 
1265.988 864 1283.137 c 834.297 1300.289 797.703 1300.289 768 1283.137 c
 738.297 1265.988 720 1234.297 720 1200 c 720 1132.594 702.258 1066.375 
668.555 1008 c 634.852 949.625 586.375 901.148 528 867.445 c 469.625 833.742
 403.406 816 336 816 c 310.539 816 286.121 805.887 268.117 787.883 c 250.113
 769.879 240 745.461 240 720 c f
Q Q
showpage
%%Trailer
%%EOF
