%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1536 m 801.703 1536 834.812 1527.129 864 1510.277 c 893.188 1493.426
 917.426 1469.188 934.277 1440 c 951.129 1410.812 960 1377.703 960 1344 
c 576 1344 l 576 1377.703 584.871 1410.812 601.723 1440 c 618.574 1469.188
 642.812 1493.426 672 1510.277 c 701.188 1527.129 734.297 1536 768 1536 
c 768 184.129 m 691.488 199.586 l 604.684 217.234 526.652 264.352 470.609
 332.953 c 414.57 401.555 383.973 487.418 384 576 c 384 636.289 371.137 
786.91 339.938 935.23 c 324.578 1008.863 303.84 1085.566 276.289 1152 c 
1259.715 1152 l 1232.164 1085.566 1211.523 1008.961 1196.066 935.23 c 1164.863
 786.91 1152 636.289 1152 576 c 1152.004 487.438 1121.395 401.594 1065.359
 333.012 c 1009.32 264.43 931.301 217.328 844.512 199.68 c h
1365.121 1152 m 1386.527 1194.91 1411.297 1228.895 1440 1248 c 96 1248 
l 124.703 1228.895 149.473 1194.91 170.879 1152 c 257.281 979.199 288 660.48
 288 576 c 288 343.68 453.121 149.762 672.48 105.504 c 669.77 78.512 678.609
 51.633 696.809 31.512 c 715.008 11.395 740.871 -0.086 768 -0.086 c 795.129
 -0.086 820.992 11.395 839.191 31.512 c 857.391 51.633 866.23 78.512 863.52
 105.504 c 972.043 127.539 1069.609 186.422 1139.684 272.172 c 1209.754 
357.922 1248.023 465.262 1248 576 c 1248 660.48 1278.719 979.199 1365.121
 1152 c f
Q Q
showpage
%%Trailer
%%EOF
