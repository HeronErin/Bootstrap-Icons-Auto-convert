%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 144 m 200.574 144 208.496 139.426 212.785 132 c 217.07 124.574 217.07
 115.426 212.785 108 c 208.496 100.574 200.574 96 192 96 c 183.426 96 175.504
 100.574 171.215 108 c 166.93 115.426 166.93 124.574 171.215 132 c 175.504
 139.426 183.426 144 192 144 c 192 216 m 200.574 216 208.496 211.426 212.785
 204 c 217.07 196.574 217.07 187.426 212.785 180 c 208.496 172.574 200.574
 168 192 168 c 183.426 168 175.504 172.574 171.215 180 c 166.93 187.426 
166.93 196.574 171.215 204 c 175.504 211.426 183.426 216 192 216 c 216 264
 m 216 272.574 211.426 280.496 204 284.785 c 196.574 289.07 187.426 289.07
 180 284.785 c 172.574 280.496 168 272.574 168 264 c 168 255.426 172.574
 247.504 180 243.215 c 187.426 238.93 196.574 238.93 204 243.215 c 211.426
 247.504 216 255.426 216 264 c f
217.199 10.441 m 203.277 -3.48 180.719 -3.48 166.801 10.441 c 10.465 166.801
 l -3.457 180.723 -3.457 203.258 10.465 217.152 c 166.848 373.535 l 180.77
 387.457 203.305 387.457 217.199 373.535 c 373.582 217.152 l 387.504 203.23
 387.504 180.695 373.582 166.801 c h
144 96 m 144 89.637 146.527 83.531 151.031 79.031 c 155.531 74.527 161.637
 72 168 72 c 216 72 l 222.363 72 228.469 74.527 232.969 79.031 c 237.473
 83.531 240 89.637 240 96 c 240 288 l 240 294.363 237.473 300.469 232.969
 304.969 c 228.469 309.473 222.363 312 216 312 c 168 312 l 161.637 312 155.531
 309.473 151.031 304.969 c 146.527 300.469 144 294.363 144 288 c h
144 96 m f
Q Q
showpage
%%Trailer
%%EOF
