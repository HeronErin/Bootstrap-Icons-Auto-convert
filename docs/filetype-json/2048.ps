%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 92 0 1410 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 92 0 1410 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 92 0 1318 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1056 l 1248 1056 l 1248 432 l 1056 432 l 1017.809 432 981.184
 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288 c 912 96 
l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113 142.121 
288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078 212.227
 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 l h
398.496 1467.84 m 392.184 1454.301 388.562 1439.66 387.84 1424.734 c 461.184
 1424.734 l 463.902 1439.879 472.762 1453.223 485.664 1461.602 c 492.383
 1466.273 500.383 1469.922 509.664 1472.547 c 518.754 1475.172 528.961 1476.484
 540.289 1476.484 c 555.969 1476.484 569.184 1474.246 579.938 1469.766 c
 579.938 1469.762 l 589.723 1466.094 598.23 1459.656 604.414 1451.23 c 609.91
 1443.004 612.727 1433.281 612.48 1423.391 c 613.004 1411.207 607.559 1399.527
 597.887 1392.098 c 588.16 1384.418 573.344 1378.242 553.438 1373.57 c 494.109
 1359.844 l 494.113 1359.84 l 475.816 1356.008 458.312 1349.059 442.367 
1339.297 c 428.258 1330.66 416.617 1318.523 408.574 1304.062 c 400.535 1288.531
 396.477 1271.246 396.77 1253.762 c 396.77 1230.336 402.848 1209.891 415.008
 1192.418 c 427.297 1175.012 444.191 1161.508 465.695 1151.906 c 487.262
 1142.305 512.129 1137.539 540.289 1137.602 c 569.473 1137.602 594.402 1142.465
 615.074 1152.195 c 635.938 1161.988 651.938 1175.105 663.074 1191.555 c
 674.594 1207.875 680.996 1225.988 682.273 1245.891 c 610.273 1245.891 l
 610.273 1245.887 l 608.629 1236.777 604.66 1228.246 598.754 1221.121 c 
592.512 1213.387 584.375 1207.402 575.137 1203.742 c 563.887 1199.09 551.785
 1196.867 539.617 1197.215 c 518.883 1197.215 502.496 1202.078 490.465 1211.809
 c 478.992 1220.551 472.391 1234.25 472.703 1248.672 c 472.703 1260.191 
477.312 1269.793 486.527 1277.473 c 498.047 1285.883 511.297 1291.621 525.312
 1294.273 c 584.93 1308 l 605.793 1312.801 623.906 1319.551 639.266 1328.258
 c 654.078 1336.348 666.492 1348.203 675.266 1362.625 c 683.906 1376.832
 688.227 1394.754 688.227 1416.387 c 688.227 1440.066 682.211 1461.059 670.18
 1479.363 c 670.176 1479.359 l 657.465 1498.207 639.461 1512.867 618.434
 1521.504 c 595.969 1531.617 568.512 1536.672 536.066 1536.672 c 511.684
 1536.672 490.402 1533.793 472.227 1528.031 c 472.223 1528.031 l 455.504
 1523.023 439.914 1514.809 426.336 1503.84 c 414.551 1494.008 405.051 1481.723
 398.496 1467.84 c 100.512 1464.672 m 95.172 1450.367 92.504 1435.203 92.641
 1419.938 c 165.984 1419.938 l 166.273 1429.016 168.711 1437.898 173.09 
1445.855 c 177.516 1453.387 183.914 1459.562 191.594 1463.727 c 199.277 
1467.887 207.945 1469.875 216.672 1469.473 c 234.91 1469.473 248.414 1464.227
 257.184 1453.73 c 265.953 1443.172 270.336 1428.258 270.336 1408.996 c 
270.336 1145.477 l 346.273 1145.477 l 346.273 1407.078 l 346.273 1449.316
 334.848 1481.477 312 1503.559 c 289.281 1525.637 257.762 1536.68 217.441
 1536.68 c 217.441 1536.672 l 198.867 1536.984 180.395 1533.93 162.91 1527.648
 c 148.219 1522.02 134.895 1513.312 123.84 1502.113 c 113.516 1491.414 105.566
 1478.656 100.512 1464.672 c 973.246 1312.512 m 973.246 1362.625 l 973.246
 1387.199 969.504 1407.715 962.016 1424.16 c 955.648 1439.352 944.883 1452.289
 931.105 1461.312 c 917.461 1469.41 901.848 1473.594 885.984 1473.406 c 
870.117 1473.594 854.508 1469.41 840.863 1461.312 c 827.195 1452.215 816.508
 1439.293 810.145 1424.16 c 802.082 1404.676 798.254 1383.699 798.91 1362.625
 c 798.91 1312.512 l 798.91 1287.809 802.652 1267.297 810.141 1250.977 c
 810.145 1250.977 l 816.508 1235.84 827.195 1222.918 840.863 1213.824 c 
854.418 1205.48 870.07 1201.184 885.984 1201.441 c 902.945 1201.441 917.984
 1205.57 931.105 1213.824 c 944.883 1222.848 955.648 1235.785 962.016 1250.977
 c 969.504 1267.297 973.246 1287.809 973.246 1312.512 c 1050.336 1362.336
 m 1050.336 1313.09 l 1050.336 1276.93 1043.777 1245.793 1030.656 1219.684
 c 1030.656 1219.68 l 1018.305 1194.273 998.559 1173.191 974.016 1159.199
 c 949.695 1145.121 920.383 1138.078 886.078 1138.078 c 851.902 1138.078
 822.461 1145.117 797.758 1159.199 c 797.762 1159.199 l 773.203 1173.059
 753.473 1194.098 741.215 1219.488 c 728.094 1245.535 721.535 1276.734 721.535
 1313.09 c 721.535 1362.336 l 721.535 1398.305 728.094 1429.441 741.215 
1455.742 c 754.336 1481.789 773.184 1501.82 797.758 1515.84 c 822.461 1529.727
 851.902 1536.672 886.078 1536.672 c 920.383 1536.672 949.727 1529.727 974.109
 1515.84 c 998.684 1501.762 1017.535 1481.727 1030.652 1455.742 c 1043.707
 1429.504 1050.27 1398.367 1050.332 1362.336 c 1174.172 1272.574 m 1174.172
 1529.375 l 1102.555 1529.375 l 1102.555 1145.473 l 1166.105 1145.473 l 
1334.297 1400.832 l 1337.367 1400.832 l 1337.367 1145.473 l 1409.367 1145.473
 l 1409.367 1529.473 l 1346.391 1529.473 l 1177.336 1272.578 l h
1174.172 1272.574 m f*
Q Q
showpage
%%Trailer
%%EOF
