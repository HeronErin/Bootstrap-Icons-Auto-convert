%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
1.555 5.734 m 1.531 5.68 1.52 5.625 1.516 5.566 c 1.801 5.566 l 1.812 5.625
 1.848 5.676 1.898 5.711 c 1.926 5.73 1.957 5.742 1.992 5.754 c 2.027 5.766
 2.066 5.77 2.113 5.77 c 2.176 5.77 2.227 5.762 2.27 5.742 c 2.266 5.742
 l 2.305 5.727 2.336 5.703 2.359 5.668 c 2.383 5.637 2.395 5.598 2.391 5.559
 c 2.395 5.512 2.375 5.469 2.336 5.438 c 2.297 5.406 2.238 5.383 2.164 5.363
 c 1.934 5.309 l 1.93 5.312 l 1.859 5.297 1.789 5.27 1.727 5.23 c 1.672 
5.199 1.629 5.152 1.598 5.094 c 1.566 5.035 1.547 4.965 1.551 4.898 c 1.551
 4.809 1.574 4.727 1.621 4.66 c 1.668 4.594 1.734 4.539 1.82 4.5 c 1.906
 4.461 2 4.445 2.113 4.445 c 2.227 4.445 2.324 4.465 2.406 4.504 c 2.488
 4.543 2.551 4.594 2.594 4.656 c 2.641 4.719 2.664 4.789 2.668 4.867 c 2.383
 4.867 l 2.379 4.832 2.363 4.797 2.34 4.77 c 2.316 4.738 2.281 4.715 2.246
 4.703 c 2.203 4.684 2.156 4.676 2.109 4.676 c 2.027 4.676 1.965 4.695 1.918
 4.734 c 1.914 4.734 l 1.871 4.77 1.844 4.82 1.848 4.879 c 1.848 4.926 1.867
 4.961 1.902 4.992 c 1.902 4.988 l 1.945 5.023 1.996 5.047 2.051 5.055 c
 2.285 5.109 l 2.367 5.129 2.438 5.156 2.496 5.188 c 2.555 5.219 2.602 5.266
 2.637 5.324 c 2.672 5.379 2.688 5.449 2.688 5.535 c 2.688 5.629 2.664 5.711
 2.617 5.781 c 2.617 5.777 l 2.566 5.852 2.496 5.91 2.414 5.945 c 2.328 
5.984 2.219 6.004 2.094 6.004 c 2 6.004 1.914 5.992 1.844 5.969 c 1.781 
5.949 1.719 5.918 1.664 5.875 c 1.621 5.836 1.582 5.789 1.555 5.734 c 0.391
 5.723 m 0.395 5.723 l 0.371 5.664 0.363 5.605 0.363 5.547 c 0.648 5.547
 l 0.648 5.582 0.66 5.617 0.676 5.648 c 0.711 5.707 0.777 5.742 0.848 5.738
 c 0.918 5.738 0.973 5.719 1.008 5.676 c 1.043 5.633 1.059 5.578 1.059 5.5
 c 1.059 4.469 l 1.355 4.469 l 1.355 5.492 l 1.355 5.656 1.312 5.781 1.223
 5.867 c 1.133 5.953 1.012 5.996 0.852 5.996 c 0.848 6.004 l 0.777 6.004
 0.703 5.992 0.637 5.969 c 0.578 5.945 0.527 5.91 0.484 5.867 c 0.445 5.824
 0.414 5.777 0.395 5.723 c 3.805 5.129 m 3.805 5.324 l 3.805 5.422 3.789
 5.5 3.762 5.566 c 3.758 5.562 l 3.734 5.621 3.691 5.672 3.637 5.707 c 3.582
 5.738 3.523 5.758 3.461 5.754 c 3.398 5.758 3.34 5.738 3.285 5.707 c 3.23
 5.672 3.191 5.621 3.164 5.562 c 3.133 5.488 3.117 5.406 3.121 5.324 c 3.121
 5.129 l 3.121 5.031 3.137 4.953 3.164 4.887 c 3.191 4.828 3.23 4.777 3.285
 4.742 c 3.336 4.707 3.398 4.691 3.461 4.691 c 3.527 4.691 3.586 4.707 3.637
 4.738 c 3.637 4.742 l 3.691 4.777 3.734 4.828 3.758 4.887 c 3.785 4.949
 3.801 5.031 3.801 5.129 c 4.102 5.324 m 4.102 5.133 l 4.102 4.992 4.074
 4.871 4.023 4.77 c 4.027 4.766 l 3.977 4.664 3.902 4.582 3.805 4.527 c 
3.711 4.473 3.594 4.445 3.461 4.445 c 3.328 4.445 3.211 4.473 3.117 4.527
 c 3.02 4.582 2.941 4.664 2.895 4.762 c 2.844 4.863 2.816 4.984 2.816 5.129
 c 2.816 5.32 l 2.816 5.461 2.844 5.582 2.895 5.684 c 2.945 5.785 3.02 5.863
 3.117 5.918 c 3.215 5.973 3.328 6 3.461 6 c 3.594 6 3.711 5.973 3.805 5.918
 c 3.902 5.863 3.973 5.785 4.027 5.684 c 4.078 5.582 4.105 5.461 4.105 5.32
 c 4.59 4.969 m 4.59 5.973 l 4.309 5.973 l 4.309 4.473 l 4.559 4.473 l 5.215
 5.469 l 5.227 5.469 l 5.227 4.473 l 5.508 4.473 l 5.508 5.973 l 5.262 5.973
 l 4.602 4.969 l h
4.59 4.969 m f*
Q Q
showpage
%%Trailer
%%EOF
