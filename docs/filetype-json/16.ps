%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 8.25 l 9.75 8.25 l 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
3.113 11.469 m 3.062 11.363 3.035 11.246 3.031 11.129 c 3.605 11.129 l 
3.602 11.129 l 3.625 11.25 3.695 11.352 3.793 11.418 c 3.844 11.453 3.906
 11.484 3.98 11.504 c 4.051 11.523 4.133 11.535 4.219 11.535 c 4.34 11.535
 4.445 11.52 4.527 11.484 c 4.531 11.484 l 4.605 11.453 4.672 11.402 4.723
 11.336 c 4.766 11.273 4.785 11.199 4.785 11.121 c 4.789 11.023 4.746 10.934
 4.672 10.875 c 4.598 10.816 4.48 10.766 4.324 10.73 c 3.859 10.625 l 3.719
 10.594 3.582 10.539 3.457 10.465 c 3.348 10.395 3.254 10.301 3.191 10.188
 c 3.129 10.066 3.098 9.93 3.102 9.797 c 3.102 9.613 3.148 9.453 3.242 9.316
 c 3.34 9.18 3.469 9.074 3.637 9 c 3.805 8.926 4 8.887 4.219 8.887 c 4.445
 8.887 4.641 8.926 4.805 9 c 4.969 9.078 5.094 9.18 5.18 9.309 c 5.27 9.438
 5.32 9.578 5.328 9.734 c 4.766 9.734 l 4.77 9.734 l 4.754 9.664 4.723 9.594
 4.68 9.539 c 4.629 9.48 4.566 9.434 4.492 9.402 c 4.406 9.367 4.312 9.352
 4.215 9.352 c 4.055 9.352 3.926 9.391 3.832 9.465 c 3.832 9.469 l 3.742
 9.535 3.691 9.645 3.691 9.754 c 3.691 9.844 3.727 9.918 3.801 9.98 c 3.891
 10.047 3.996 10.09 4.105 10.113 c 4.57 10.219 l 4.734 10.258 4.875 10.309
 4.996 10.379 c 5.109 10.441 5.207 10.531 5.277 10.645 c 5.344 10.754 5.379
 10.895 5.379 11.066 c 5.379 11.25 5.332 11.414 5.238 11.559 c 5.234 11.559
 l 5.137 11.703 4.996 11.82 4.832 11.887 c 4.656 11.965 4.441 12.004 4.188
 12.004 c 3.996 12.004 3.832 11.98 3.688 11.938 c 3.559 11.898 3.438 11.836
 3.332 11.75 c 3.238 11.672 3.164 11.574 3.113 11.469 c 0.785 11.445 m 0.785
 11.441 l 0.742 11.332 0.723 11.211 0.723 11.094 c 1.297 11.094 l 1.301 
11.164 1.316 11.234 1.352 11.297 c 1.422 11.414 1.555 11.488 1.691 11.48
 c 1.832 11.48 1.938 11.441 2.008 11.359 c 2.078 11.277 2.109 11.16 2.109
 11.012 c 2.109 8.953 l 2.703 8.953 l 2.703 10.996 l 2.703 11.324 2.613 
11.578 2.434 11.75 c 2.258 11.922 2.012 12.008 1.695 12.008 c 1.699 12.004
 l 1.555 12.008 1.41 11.984 1.273 11.934 c 1.156 11.891 1.055 11.824 0.969
 11.734 c 0.887 11.652 0.824 11.551 0.785 11.441 c 7.602 10.254 m 7.602 
10.645 l 7.602 10.836 7.574 10.996 7.516 11.125 c 7.465 11.246 7.383 11.348
 7.273 11.418 c 7.168 11.48 7.047 11.512 6.922 11.512 c 6.797 11.512 6.676
 11.48 6.57 11.418 c 6.461 11.344 6.379 11.246 6.328 11.125 c 6.266 10.973
 6.238 10.809 6.242 10.645 c 6.242 10.254 l 6.242 10.062 6.27 9.902 6.328
 9.773 c 6.379 9.656 6.461 9.555 6.57 9.484 c 6.676 9.418 6.797 9.383 6.922
 9.387 c 7.055 9.387 7.172 9.418 7.273 9.484 c 7.383 9.555 7.465 9.656 7.516
 9.773 c 7.574 9.902 7.602 10.062 7.602 10.254 c 8.203 10.645 m 8.203 10.262
 l 8.203 9.98 8.152 9.734 8.051 9.531 c 8.051 9.527 l 7.957 9.332 7.801 
9.164 7.609 9.055 c 7.418 8.945 7.191 8.891 6.922 8.891 c 6.656 8.891 6.426
 8.945 6.23 9.055 c 6.234 9.055 l 6.039 9.164 5.887 9.328 5.789 9.527 c 
5.688 9.73 5.637 9.973 5.637 10.258 c 5.637 10.641 l 5.637 10.922 5.688 
11.164 5.789 11.371 c 5.891 11.574 6.039 11.73 6.23 11.84 c 6.422 11.949
 6.652 12.004 6.922 12.004 c 7.191 12.004 7.418 11.949 7.609 11.84 c 7.801
 11.73 7.949 11.574 8.051 11.371 c 8.152 11.168 8.203 10.922 8.203 10.641
 c 9.172 9.938 m 9.172 11.945 l 8.613 11.945 l 8.613 8.945 l 9.109 8.945
 l 10.422 10.941 l 10.445 10.941 l 10.445 8.945 l 11.008 8.945 l 11.008 
11.945 l 10.516 11.945 l 9.195 9.938 l h
9.172 9.938 m f*
Q Q
showpage
%%Trailer
%%EOF
