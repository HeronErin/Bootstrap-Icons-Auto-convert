%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0 g
21 6.75 m 21 16.5 l 19.5 16.5 l 19.5 6.75 l 16.5 6.75 l 15.258 6.75 14.25
 5.742 14.25 4.5 c 14.25 1.5 l 6 1.5 l 5.172 1.5 4.5 2.172 4.5 3 c 4.5 16.5
 l 3 16.5 l 3 3 l 3 1.344 4.344 0 6 0 c 14.25 0 l h
6.227 22.934 m 6.129 22.723 6.07 22.496 6.059 22.262 c 7.207 22.262 l 7.25
 22.5 7.387 22.707 7.59 22.836 c 7.695 22.91 7.82 22.965 7.965 23.008 c 
8.105 23.047 8.266 23.07 8.441 23.07 c 8.688 23.07 8.895 23.035 9.062 22.965
 c 9.215 22.906 9.348 22.809 9.445 22.676 c 9.531 22.547 9.574 22.395 9.57
 22.242 c 9.578 22.051 9.492 21.867 9.344 21.75 c 9.191 21.629 8.961 21.535
 8.648 21.461 c 7.723 21.246 l 7.719 21.246 l 7.434 21.188 7.16 21.078 6.91
 20.926 c 6.691 20.793 6.508 20.602 6.383 20.375 c 6.258 20.133 6.195 19.863
 6.199 19.59 c 6.199 19.223 6.293 18.906 6.484 18.633 c 6.676 18.359 6.941
 18.148 7.277 18 c 7.613 17.852 8.004 17.777 8.441 17.777 c 8.898 17.777
 9.285 17.852 9.609 18.004 c 9.934 18.156 10.184 18.363 10.359 18.617 c 
10.539 18.871 10.641 19.156 10.66 19.465 c 9.535 19.465 l 9.535 19.469 l
 9.512 19.324 9.449 19.191 9.355 19.078 c 9.258 18.961 9.133 18.867 8.988
 18.809 c 8.812 18.734 8.621 18.699 8.43 18.707 c 8.105 18.707 7.852 18.781
 7.66 18.934 c 7.664 18.934 l 7.484 19.07 7.383 19.285 7.387 19.512 c 7.387
 19.691 7.457 19.84 7.602 19.961 c 7.781 20.094 7.988 20.18 8.207 20.223
 c 9.137 20.438 l 9.461 20.512 9.746 20.617 9.984 20.754 c 9.988 20.754 
l 10.219 20.879 10.414 21.066 10.551 21.289 c 10.688 21.512 10.754 21.793
 10.754 22.129 c 10.754 22.5 10.66 22.828 10.473 23.113 c 10.273 23.41 9.992
 23.637 9.664 23.773 c 9.312 23.93 8.883 24.012 8.379 24.012 c 7.996 24.012
 7.664 23.965 7.383 23.875 c 7.379 23.875 l 7.117 23.797 6.875 23.668 6.66
 23.496 c 6.477 23.344 6.328 23.152 6.227 22.934 c 1.57 22.883 m 1.57 22.887
 l 1.488 22.66 1.445 22.426 1.449 22.188 c 2.594 22.188 l 2.598 22.328 2.637
 22.469 2.703 22.59 c 2.844 22.832 3.109 22.973 3.387 22.961 c 3.672 22.961
 3.883 22.879 4.02 22.715 c 4.156 22.551 4.227 22.316 4.227 22.016 c 4.227
 17.898 l 5.414 17.898 l 5.414 21.984 l 5.414 22.645 5.234 23.148 4.879 
23.492 c 4.523 23.836 4.031 24.008 3.402 24.008 c 3.398 24.012 l 3.105 24.016
 2.82 23.969 2.547 23.871 c 2.316 23.781 2.109 23.645 1.934 23.469 c 1.773
 23.305 1.648 23.105 1.57 22.887 c 15.207 20.508 m 15.207 21.289 l 15.207
 21.672 15.148 21.992 15.031 22.25 c 15.031 22.254 l 14.934 22.488 14.766
 22.691 14.547 22.832 c 14.336 22.961 14.09 23.023 13.844 23.023 c 13.594
 23.023 13.352 22.961 13.137 22.832 c 12.926 22.691 12.758 22.488 12.66 
22.254 c 12.531 21.949 12.473 21.621 12.484 21.289 c 12.484 20.508 l 12.484
 20.121 12.543 19.801 12.66 19.547 c 12.758 19.309 12.926 19.109 13.137 
18.965 c 13.352 18.836 13.594 18.77 13.844 18.773 c 14.109 18.773 14.344
 18.84 14.547 18.969 c 14.547 18.965 l 14.766 19.105 14.934 19.309 15.031
 19.547 c 15.148 19.801 15.207 20.121 15.207 20.508 c 16.41 21.285 m 16.41
 20.516 l 16.41 19.949 16.309 19.465 16.102 19.055 c 16.105 19.059 l 15.91
 18.66 15.602 18.332 15.219 18.113 c 14.84 17.895 14.379 17.785 13.844 17.785
 c 13.309 17.785 12.852 17.895 12.465 18.113 c 12.082 18.328 11.773 18.656
 11.582 19.055 c 11.379 19.461 11.273 19.949 11.273 20.516 c 11.273 21.285
 l 11.273 21.848 11.375 22.332 11.582 22.746 c 11.785 23.152 12.082 23.465
 12.465 23.684 c 12.852 23.902 13.312 24.008 13.844 24.008 c 14.379 24.008
 14.84 23.898 15.219 23.684 c 15.602 23.465 15.898 23.152 16.102 22.746 
c 16.305 22.336 16.406 21.848 16.41 21.285 c 18.344 19.883 m 18.344 23.895
 l 17.227 23.895 l 17.227 17.895 l 18.219 17.895 l 20.848 21.883 l 20.895
 21.883 l 20.895 17.895 l 22.02 17.895 l 22.02 23.895 l 21.035 23.895 l 
18.395 19.879 l h
18.344 19.883 m f*
Q Q
showpage
%%Trailer
%%EOF
