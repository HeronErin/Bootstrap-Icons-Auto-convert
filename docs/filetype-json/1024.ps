%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 46 0 705 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 46 0 705 768
768 768 cairo_set_page_size
%%EndPageSetup
q 46 0 659 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 528 l 624 528 l 624 216 l 528 216 l 508.906 216 490.59 208.414
 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c 456 48 l 192 48 l 
179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062 144 83.27 144 96
 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 124.117 28.117 c 
142.121 10.113 166.539 0 192 0 c 456 0 l h
199.246 733.922 m 196.09 727.148 194.281 719.828 193.922 712.367 c 230.594
 712.367 l 231.949 719.938 236.383 726.609 242.832 730.801 c 246.191 733.137
 250.191 734.961 254.832 736.273 c 259.375 737.586 264.48 738.242 270.145
 738.242 c 277.984 738.242 284.594 737.121 289.969 734.883 c 289.969 734.879
 l 294.863 733.047 299.113 729.828 302.207 725.617 c 304.953 721.504 306.363
 716.641 306.238 711.695 c 306.504 705.602 303.781 699.766 298.945 696.047
 c 294.082 692.207 286.672 689.117 276.723 686.781 c 247.059 679.918 l 247.055
 679.922 l 237.906 678.004 229.156 674.527 221.184 669.648 c 214.129 665.328
 208.309 659.262 204.289 652.031 c 200.266 644.266 198.238 635.625 198.383
 626.879 c 198.383 615.168 201.422 604.941 207.504 596.207 c 213.648 587.504
 222.098 580.75 232.848 575.949 c 243.633 571.148 256.062 568.766 270.145
 568.797 c 284.738 568.797 297.199 571.23 307.535 576.094 c 317.969 580.988
 325.969 587.551 331.535 595.773 c 337.297 603.934 340.496 612.988 341.137
 622.941 c 305.137 622.941 l 305.137 622.945 l 304.312 618.391 302.332 614.125
 299.375 610.559 c 296.254 606.695 292.188 603.699 287.566 601.871 c 281.945
 599.547 275.891 598.434 269.809 598.609 c 259.441 598.609 251.25 601.043
 245.234 605.906 c 245.23 605.902 l 239.496 610.277 236.195 617.125 236.352
 624.336 c 236.352 630.098 238.656 634.895 243.262 638.734 c 243.266 638.734
 l 249.023 642.941 255.648 645.812 262.656 647.137 c 292.465 654 l 302.898
 656.398 311.953 659.777 319.633 664.129 c 327.039 668.176 333.246 674.102
 337.633 681.312 c 341.953 688.418 344.113 697.375 344.113 708.191 c 344.113
 720.031 341.105 730.527 335.09 739.68 c 328.73 749.102 319.73 756.434 309.215
 760.754 c 297.984 765.809 284.254 768.34 268.031 768.34 c 255.84 768.34
 245.199 766.898 236.109 764.02 c 236.113 764.016 l 227.75 761.512 219.957
 757.402 213.168 751.922 c 207.273 747.004 202.523 740.859 199.246 733.922
 c 50.254 732.336 m 50.258 732.336 l 47.586 725.184 46.254 717.602 46.32
 709.969 c 82.992 709.969 l 83.137 714.508 84.355 718.949 86.543 722.93 
c 88.758 726.691 91.957 729.781 95.797 731.863 c 99.637 733.945 103.973 
734.938 108.336 734.734 c 117.457 734.734 124.207 732.109 128.594 726.863
 c 132.977 721.582 135.168 714.129 135.168 704.496 c 135.168 572.734 l 173.137
 572.734 l 173.137 703.535 l 173.137 724.656 167.426 740.734 156 751.773
 c 144.641 762.812 128.879 768.332 108.719 768.332 c 108.719 768.336 l 99.434
 768.492 90.195 766.965 81.457 763.824 c 74.109 761.008 67.449 756.656 61.922
 751.055 c 56.758 745.707 52.781 739.328 50.258 732.336 c 486.625 656.258
 m 486.625 681.312 l 486.625 693.602 484.754 703.855 481.008 712.082 c 481.008
 712.078 l 477.824 719.676 472.441 726.145 465.551 730.656 c 458.73 734.707
 450.926 736.797 442.992 736.703 c 435.059 736.797 427.254 734.707 420.434
 730.656 c 413.598 726.109 408.254 719.648 405.07 712.078 c 401.043 702.336
 399.125 691.852 399.457 681.312 c 399.457 656.258 l 399.457 643.906 401.328
 633.648 405.074 625.488 c 405.07 625.488 l 408.254 617.922 413.598 611.461
 420.434 606.91 c 427.207 602.742 435.035 600.594 442.992 600.719 c 451.473
 600.719 458.992 602.781 465.551 606.91 c 472.441 611.422 477.824 617.895
 481.008 625.488 c 484.75 633.648 486.625 643.902 486.625 656.258 c 525.168
 681.168 m 525.168 656.543 l 525.168 638.465 521.887 622.895 515.328 609.84
 c 509.152 597.137 499.281 586.594 487.008 579.602 c 474.848 572.562 460.191
 569.043 443.039 569.043 c 425.949 569.043 411.23 572.562 398.879 579.602
 c 386.602 586.531 376.738 597.047 370.609 609.742 c 364.051 622.766 360.77
 638.367 360.77 656.543 c 360.77 681.168 l 360.77 699.152 364.051 714.719
 370.609 727.871 c 377.168 740.895 386.594 750.91 398.883 757.918 c 411.234
 764.863 425.953 768.332 443.043 768.332 c 460.195 768.332 474.867 764.859
 487.059 757.918 c 499.348 750.879 508.77 740.863 515.332 727.871 c 521.859
 714.75 525.141 699.184 525.172 681.168 c 587.094 636.289 m 587.094 764.688
 l 551.285 764.688 l 551.285 572.734 l 583.062 572.734 l 667.16 700.414 
l 668.695 700.414 l 668.695 572.734 l 704.695 572.734 l 704.695 764.734 
l 673.207 764.734 l 588.68 636.285 l h
587.094 636.289 m f*
Q Q
showpage
%%Trailer
%%EOF
