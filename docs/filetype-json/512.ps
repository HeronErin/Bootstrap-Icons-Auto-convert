%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 23 0 353 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 23 0 353 384
384 384 cairo_set_page_size
%%EndPageSetup
q 23 0 330 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 264 l 312 264 l 312 108 l 264 108 l 254.453 108 245.297 104.207
 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637
 24 83.531 26.527 79.031 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264
 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059 14.059 c 71.062 5.059 
83.27 0 96 0 c 228 0 l h
99.625 366.961 m 98.047 363.574 97.141 359.914 96.961 356.184 c 115.297
 356.184 l 115.977 359.969 118.191 363.305 121.414 365.398 c 123.094 366.566
 125.094 367.477 127.414 368.133 c 129.688 368.789 132.238 369.117 135.07
 369.117 c 138.992 369.117 142.293 368.559 144.98 367.438 c 144.984 367.441
 l 147.43 366.523 149.559 364.914 151.105 362.809 c 152.477 360.75 153.18
 358.32 153.121 355.848 c 153.25 352.801 151.891 349.883 149.473 348.023
 c 147.039 346.102 143.336 344.559 138.359 343.391 c 123.527 339.957 l 123.527
 339.961 l 118.953 339 114.578 337.266 110.594 334.824 c 107.062 332.664
 104.152 329.633 102.145 326.016 c 100.133 322.133 99.121 317.812 99.191
 313.441 c 99.191 307.586 100.711 302.473 103.75 298.105 c 106.82 293.754
 111.047 290.379 116.422 287.977 c 121.812 285.578 128.031 284.383 135.07
 284.402 c 142.367 284.402 148.598 285.617 153.766 288.051 c 158.98 290.5
 162.98 293.777 165.766 297.891 c 168.645 301.969 170.246 306.5 170.566 
311.477 c 152.566 311.477 l 152.566 311.473 l 152.156 309.195 151.164 307.062
 149.688 305.281 c 148.129 303.348 146.094 301.852 143.785 300.938 c 140.973
 299.773 137.945 299.215 134.902 299.305 c 129.719 299.305 125.621 300.52
 122.613 302.953 c 122.617 302.953 l 119.746 305.137 118.098 308.562 118.176
 312.168 c 118.176 315.047 119.328 317.449 121.633 319.367 c 124.512 321.473
 127.824 322.906 131.328 323.566 c 146.23 327 l 151.445 328.199 155.973 
329.887 159.816 332.062 c 163.52 334.086 166.625 337.051 168.816 340.656
 c 170.977 344.207 172.055 348.688 172.055 354.098 c 172.055 360.02 170.551
 365.266 167.543 369.84 c 164.367 374.551 159.863 378.219 154.609 380.375
 c 148.992 382.902 142.129 384.168 134.016 384.168 c 127.918 384.168 122.602
 383.449 118.055 382.008 c 113.875 380.758 109.98 378.703 106.586 375.961
 c 103.637 373.5 101.262 370.43 99.625 366.961 c 25.129 366.168 m 23.793
 362.59 23.125 358.801 23.16 354.984 c 41.496 354.984 l 41.57 357.254 42.176
 359.473 43.273 361.465 c 45.527 365.301 49.723 367.574 54.168 367.367 c
 58.727 367.367 62.105 366.055 64.297 363.43 c 66.488 360.789 67.586 357.062
 67.586 352.246 c 67.586 286.367 l 86.57 286.367 l 86.57 351.766 l 86.57
 362.324 83.715 370.367 78.004 375.887 c 72.324 381.406 64.445 384.168 54.363
 384.168 c 54.359 384.168 l 49.719 384.246 45.098 383.48 40.727 381.91 c
 37.055 380.504 33.723 378.328 30.961 375.527 c 28.379 372.852 26.391 369.664
 25.129 366.168 c 243.312 328.129 m 243.312 340.656 l 243.312 346.801 242.375
 351.93 240.504 356.039 c 238.914 359.836 236.223 363.07 232.777 365.328
 c 229.363 367.352 225.461 368.398 221.496 368.352 c 217.531 368.398 213.629
 367.352 210.215 365.328 c 206.797 363.055 204.129 359.824 202.535 356.039
 c 200.52 351.168 199.562 345.926 199.727 340.656 c 199.727 328.129 l 199.727
 321.953 200.664 316.824 202.535 312.746 c 202.535 312.742 l 204.129 308.961
 206.797 305.73 210.215 303.457 c 213.605 301.371 217.52 300.297 221.496
 300.359 c 225.734 300.359 229.496 301.391 232.777 303.457 c 236.223 305.711
 238.914 308.945 240.504 312.742 c 242.375 316.82 243.312 321.949 243.312
 328.125 c 262.586 340.582 m 262.586 328.27 l 262.586 319.23 260.945 311.445
 257.664 304.918 c 257.664 304.922 l 254.574 298.566 249.641 293.297 243.504
 289.801 c 237.426 286.281 230.098 284.52 221.52 284.52 c 212.977 284.52
 205.617 286.281 199.441 289.801 c 193.301 293.266 188.367 298.523 185.305
 304.871 c 182.023 311.383 180.383 319.184 180.383 328.27 c 180.383 340.582
 l 180.383 349.574 182.023 357.359 185.305 363.934 c 188.586 370.445 193.297
 375.453 199.441 378.957 c 205.617 382.43 212.977 384.164 221.52 384.164
 c 230.094 384.164 237.43 382.43 243.527 378.957 c 249.672 375.438 254.383
 370.43 257.664 363.934 c 260.93 357.375 262.566 349.59 262.586 340.582 
c 293.547 318.141 m 293.547 382.34 l 275.645 382.34 l 275.645 286.363 l 
291.531 286.363 l 333.578 350.203 l 334.348 350.203 l 334.348 286.363 l 
352.348 286.363 l 352.348 382.363 l 336.605 382.363 l 294.34 318.141 l h
293.547 318.141 m f*
Q Q
showpage
%%Trailer
%%EOF
