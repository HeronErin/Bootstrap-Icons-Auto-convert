%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 383
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 383
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 335 rectclip
1 0 0 -1 0 384 cm q
0 g
192 143.832 m 231.938 102.77 331.801 174.625 192 267 c 52.199 174.602 152.062
 102.77 192 143.832 c 54 96 m 50.688 96 48 98.688 48 102 c 48 138 l 48 141.312
 50.688 144 54 144 c 57.312 144 60 141.312 60 138 c 60 108 l 90 108 l 93.312
 108 96 105.312 96 102 c 96 98.688 93.312 96 90 96 c h
294 96 m 290.688 96 288 98.688 288 102 c 288 105.312 290.688 108 294 108
 c 324 108 l 324 138 l 324 141.312 326.688 144 330 144 c 333.312 144 336
 141.312 336 138 c 336 102 l 336 100.41 335.367 98.883 334.242 97.758 c 
333.117 96.633 331.59 96 330 96 c h
60 246 m 60 242.688 57.312 240 54 240 c 50.688 240 48 242.688 48 246 c 
48 282 l 48 285.312 50.688 288 54 288 c 90 288 l 93.312 288 96 285.312 96
 282 c 96 278.688 93.312 276 90 276 c 60 276 l h
336 246 m 336 242.688 333.312 240 330 240 c 326.688 240 324 242.688 324
 246 c 324 276 l 294 276 l 290.688 276 288 278.688 288 282 c 288 285.312
 290.688 288 294 288 c 330 288 l 331.59 288 333.117 287.367 334.242 286.242
 c 335.367 285.117 336 283.59 336 282 c h
336 246 m f
0 71.855 m 0 70.414 l 0 64.637 2.086 59.051 5.871 54.688 c 9.66 50.324 
14.895 47.473 20.617 46.656 c 332.617 2.09 l 339.504 1.105 346.477 3.164
 351.73 7.719 c 356.98 12.277 360 18.891 360 25.848 c 360 48 l 366.363 48
 372.469 50.527 376.969 55.031 c 381.473 59.531 384 65.637 384 72 c 384 
312 l 384 318.363 381.473 324.469 376.969 328.969 c 372.469 333.473 366.363
 336 360 336 c 24 336 l 17.637 336 11.531 333.473 7.031 328.969 c 2.527 
324.469 0 318.363 0 312 c h
24 72 m 24 312 l 360 312 l 360 72 l h
24 72 m f*
Q Q
showpage
%%Trailer
%%EOF
