%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 168 rectclip
1 0 0 -1 0 192 cm q
0 g
96 71.914 m 115.969 51.383 165.898 87.309 96 133.5 c 26.102 87.301 76.031
 51.383 96 71.914 c 27 48 m 25.344 48 24 49.344 24 51 c 24 69 l 24 70.656
 25.344 72 27 72 c 28.656 72 30 70.656 30 69 c 30 54 l 45 54 l 46.656 54
 48 52.656 48 51 c 48 49.344 46.656 48 45 48 c h
147 48 m 145.344 48 144 49.344 144 51 c 144 52.656 145.344 54 147 54 c 
162 54 l 162 69 l 162 70.656 163.344 72 165 72 c 166.656 72 168 70.656 168
 69 c 168 51 l 168 50.203 167.684 49.441 167.121 48.879 c 166.559 48.316
 165.797 48 165 48 c h
30 123 m 30 121.344 28.656 120 27 120 c 25.344 120 24 121.344 24 123 c 
24 141 l 24 142.656 25.344 144 27 144 c 45 144 l 46.656 144 48 142.656 48
 141 c 48 139.344 46.656 138 45 138 c 30 138 l h
168 123 m 168 121.344 166.656 120 165 120 c 163.344 120 162 121.344 162
 123 c 162 138 l 147 138 l 145.344 138 144 139.344 144 141 c 144 142.656
 145.344 144 147 144 c 165 144 l 165.797 144 166.559 143.684 167.121 143.121
 c 167.684 142.559 168 141.797 168 141 c h
168 123 m f
0 35.93 m 0 35.207 l 0 29.234 4.395 24.172 10.309 23.328 c 166.309 1.043
 l 169.75 0.555 173.238 1.582 175.863 3.859 c 178.492 6.141 180 9.445 180
 12.926 c 180 24 l 183.184 24 186.234 25.266 188.484 27.516 c 190.734 29.766
 192 32.816 192 36 c 192 156 l 192 159.184 190.734 162.234 188.484 164.484
 c 186.234 166.734 183.184 168 180 168 c 12 168 l 5.371 168 0 162.629 0 
156 c h
12 36 m 12 156 l 180 156 l 180 36 l h
12 36 m f*
Q Q
showpage
%%Trailer
%%EOF
