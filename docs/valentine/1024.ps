%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 765
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 765
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 669 rectclip
1 0 0 -1 0 768 cm q
0 g
384 287.664 m 463.871 205.535 663.602 349.25 384 534 c 104.398 349.199 
304.129 205.535 384 287.664 c 108 192 m 101.371 192 96 197.371 96 204 c 
96 276 l 96 282.629 101.371 288 108 288 c 114.629 288 120 282.629 120 276
 c 120 216 l 180 216 l 186.629 216 192 210.629 192 204 c 192 197.371 186.629
 192 180 192 c h
588 192 m 581.371 192 576 197.371 576 204 c 576 210.629 581.371 216 588
 216 c 648 216 l 648 276 l 648 282.629 653.371 288 660 288 c 666.629 288
 672 282.629 672 276 c 672 204 l 672 200.816 670.734 197.766 668.484 195.516
 c 666.234 193.266 663.184 192 660 192 c h
120 492 m 120 485.371 114.629 480 108 480 c 101.371 480 96 485.371 96 492
 c 96 564 l 96 570.625 101.375 576 108 576 c 180 576 l 186.629 576 192 570.629
 192 564 c 192 557.371 186.629 552 180 552 c 120 552 l h
672 492 m 672 485.371 666.629 480 660 480 c 653.371 480 648 485.371 648
 492 c 648 552 l 588 552 l 581.371 552 576 557.371 576 564 c 576 570.629
 581.371 576 588 576 c 660 576 l 663.184 576 666.234 574.734 668.484 572.484
 c 670.734 570.234 672 567.184 672 564 c h
672 492 m f
0 143.711 m 0 140.832 l 0 129.273 4.172 118.105 11.746 109.375 c 19.32 
100.645 29.789 94.941 41.23 93.312 c 665.23 4.176 l 679.004 2.215 692.949
 6.324 703.457 15.441 c 713.965 24.559 720 37.785 720 51.695 c 720 96 l 
732.73 96 744.938 101.059 753.941 110.059 c 762.941 119.062 768 131.27 768
 144 c 768 624 l 768 636.73 762.941 648.938 753.941 657.941 c 744.938 666.941
 732.73 672 720 672 c 48 672 l 35.27 672 23.062 666.941 14.059 657.941 c
 5.059 648.938 0 636.73 0 624 c h
48 144 m 48 624 l 720 624 l 720 144 l h
48 144 m f*
Q Q
showpage
%%Trailer
%%EOF
