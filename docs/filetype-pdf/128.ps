%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 66 96 l 66 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
9.602 71.102 m 0 71.102 l 0 95.094 l 4.746 95.094 l 4.746 87.043 l 9.562
 87.043 l 11.281 87.043 12.746 86.695 13.953 86.004 c 15.172 85.305 16.098
 84.355 16.73 83.16 c 16.734 83.16 l 17.395 81.91 17.727 80.512 17.699 79.098
 c 17.699 77.598 17.383 76.242 16.75 75.035 c 16.754 75.035 l 16.117 73.844
 15.164 72.852 13.992 72.176 c 12.793 71.457 11.328 71.098 9.602 71.102 
c 12.871 79.098 m 12.891 79.887 12.715 80.672 12.359 81.379 c 12.043 81.992
 11.543 82.496 10.934 82.824 c 10.234 83.168 9.461 83.336 8.684 83.316 c
 4.727 83.316 l 4.727 74.879 l 8.688 74.879 l 9.996 74.879 11.02 75.242 
11.758 75.965 c 12.496 76.695 12.867 77.742 12.867 79.098 c 20.168 71.102
 m 20.168 95.094 l 28.93 95.094 l 31.336 95.094 33.332 94.621 34.918 93.672
 c 34.922 93.672 l 36.523 92.715 37.773 91.262 38.488 89.539 c 39.273 87.738
 39.664 85.57 39.664 83.035 c 39.664 80.516 39.273 78.363 38.488 76.586 
c 37.781 74.879 36.543 73.449 34.957 72.504 c 33.371 71.566 31.363 71.102
 28.926 71.102 c h
24.914 74.973 m 28.293 74.973 l 29.777 74.973 30.996 75.277 31.945 75.883
 c 31.949 75.883 l 32.938 76.531 33.684 77.488 34.074 78.605 c 34.547 79.812
 34.781 81.32 34.781 83.125 c 34.801 84.32 34.664 85.516 34.375 86.676 c
 34.168 87.594 33.766 88.457 33.199 89.207 c 32.676 89.879 31.984 90.402
 31.195 90.719 c 30.27 91.066 29.285 91.234 28.297 91.211 c 24.918 91.211
 l h
47.371 85.551 m 47.371 95.098 l 42.633 95.098 l 42.637 71.102 l 57.926 
71.102 l 57.926 75.02 l 47.375 75.02 l 47.375 81.723 l 57.012 81.723 l 57.012
 85.551 l h
47.371 85.551 m f*
Q Q
showpage
%%Trailer
%%EOF
