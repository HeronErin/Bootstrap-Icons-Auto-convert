%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
227.16 240 m 288 240 l 305.148 240 320.996 249.148 329.57 264 c 338.145
 278.852 338.145 297.148 329.57 312 c 320.996 326.852 305.148 336 288 336
 c 227.16 336 l 235.32 321.887 240 305.496 240 288 c 240 270.504 235.32 
254.113 227.16 240 c f
144 360 m 169.723 360 193.492 346.277 206.355 324 c 219.215 301.723 219.215
 274.277 206.355 252 c 193.492 229.723 169.723 216 144 216 c 118.277 216
 94.508 229.723 81.645 252 c 68.785 274.277 68.785 301.723 81.645 324 c 
94.508 346.277 118.277 360 144 360 c 144 384 m 109.703 384 78.012 365.703
 60.863 336 c 43.711 306.297 43.711 269.703 60.863 240 c 78.012 210.297 
109.703 192 144 192 c 178.297 192 209.988 210.297 227.137 240 c 244.289 
269.703 244.289 306.297 227.137 336 c 209.988 365.703 178.297 384 144 384
 c 156.84 144 m 152.496 136.48 149.195 128.406 147.023 120 c 96 120 l 87.426
 120 79.504 115.426 75.215 108 c 70.93 100.574 70.93 91.426 75.215 84 c 
79.504 76.574 87.426 72 96 72 c 147.023 72 l 149.23 63.457 152.512 55.457
 156.863 48 c 96 48 l 78.852 48 63.004 57.148 54.43 72 c 45.855 86.852 45.855
 105.148 54.43 120 c 63.004 134.852 78.852 144 96 144 c h
156.84 144 m f
336 96 m 336 130.297 317.703 161.988 288 179.137 c 258.297 196.289 221.703
 196.289 192 179.137 c 162.297 161.988 144 130.297 144 96 c 144 61.703 162.297
 30.012 192 12.863 c 221.703 -4.289 258.297 -4.289 288 12.863 c 317.703 
30.012 336 61.703 336 96 c f
Q Q
showpage
%%Trailer
%%EOF
