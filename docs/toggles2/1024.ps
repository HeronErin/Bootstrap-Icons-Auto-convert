%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
454.32 480 m 576 480 l 610.297 480 641.988 498.297 659.137 528 c 676.289
 557.703 676.289 594.297 659.137 624 c 641.988 653.703 610.297 672 576 672
 c 454.32 672 l 470.641 643.777 480 610.992 480 576 c 480 541.008 470.641
 508.223 454.32 480 c f
288 720 m 339.445 720 386.984 692.555 412.707 648 c 438.43 603.445 438.43
 548.555 412.707 504 c 386.984 459.445 339.445 432 288 432 c 236.555 432
 189.016 459.445 163.293 504 c 137.57 548.555 137.57 603.445 163.293 648
 c 189.016 692.555 236.555 720 288 720 c 288 768 m 237.078 768 188.242 747.773
 152.234 711.766 c 116.227 675.758 96 626.922 96 576 c 96 525.078 116.227
 476.242 152.234 440.234 c 188.242 404.227 237.078 384 288 384 c 338.922
 384 387.758 404.227 423.766 440.234 c 459.773 476.242 480 525.078 480 576
 c 480 626.922 459.773 675.758 423.766 711.766 c 387.758 747.773 338.922
 768 288 768 c 313.68 288 m 304.996 272.961 298.391 256.812 294.047 240 
c 192 240 l 174.852 240 159.004 230.852 150.43 216 c 141.855 201.148 141.855
 182.852 150.43 168 c 159.004 153.148 174.852 144 192 144 c 294.047 144 
l 298.461 126.91 305.023 110.91 313.727 96 c 192 96 l 157.703 96 126.012
 114.297 108.863 144 c 91.711 173.703 91.711 210.297 108.863 240 c 126.012
 269.703 157.703 288 192 288 c h
313.68 288 m f
672 192 m 672 242.922 651.773 291.758 615.766 327.766 c 579.758 363.773
 530.922 384 480 384 c 429.078 384 380.242 363.773 344.234 327.766 c 308.227
 291.758 288 242.922 288 192 c 288 141.078 308.227 92.242 344.234 56.234
 c 380.242 20.227 429.078 0 480 0 c 530.922 0 579.758 20.227 615.766 56.234
 c 651.773 92.242 672 141.078 672 192 c f
Q Q
showpage
%%Trailer
%%EOF
