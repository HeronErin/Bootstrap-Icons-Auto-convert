%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 78 0 306 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 78 0 306 384
384 384 cairo_set_page_size
%%EndPageSetup
q 78 0 228 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 72 m 204.863 72 216.746 65.137 223.176 54 c 229.609 42.863 229.609 
29.137 223.176 18 c 216.746 6.863 204.863 0 192 0 c 179.137 0 167.254 6.863
 160.824 18 c 154.391 29.137 154.391 42.863 160.824 54 c 167.254 65.137 
179.137 72 192 72 c 180 366 m 180 288 l 204 288 l 204 366 l 204 372.43 207.43
 378.375 213 381.59 c 218.57 384.805 225.43 384.805 231 381.59 c 236.57 
378.375 240 372.43 240 366 c 240 288 l 264 288 l 240 168 l 240 162.84 l 
239.961 159.398 242.484 156.461 245.895 155.988 c 249.305 155.512 252.535
 157.645 253.441 160.969 c 272.473 227.617 l 274.207 233.465 278.934 237.941
 284.863 239.359 c 290.797 240.781 297.035 238.93 301.234 234.5 c 305.43
 230.074 306.945 223.742 305.207 217.895 c 279.648 134.832 l 275.121 120.113
 265.992 107.23 253.602 98.082 c 241.215 88.934 226.219 83.996 210.816 84
 c 173.184 84 l 157.781 83.996 142.785 88.934 130.398 98.082 c 118.008 107.23
 108.879 120.113 104.352 134.832 c 78.793 217.895 l 77.055 223.746 78.574
 230.082 82.773 234.512 c 86.973 238.941 93.219 240.793 99.152 239.371 c
 105.09 237.949 109.816 233.469 111.551 227.617 c 130.582 160.969 l 130.586
 160.969 l 131.488 157.645 134.719 155.512 138.129 155.988 c 141.539 156.461
 144.062 159.398 144.023 162.84 c 144.023 168 l 120.023 288 l 144.023 288
 l 144.023 366 l 144.023 372.43 147.453 378.375 153.023 381.59 c 158.594
 384.805 165.453 384.805 171.023 381.59 c 176.594 378.375 180.023 372.43
 180.023 366 c h
180 366 m f
Q Q
showpage
%%Trailer
%%EOF
