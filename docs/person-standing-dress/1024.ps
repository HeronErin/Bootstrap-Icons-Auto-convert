%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 156 0 612 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 156 0 612 768
768 768 cairo_set_page_size
%%EndPageSetup
q 156 0 456 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 144 m 409.723 144 433.492 130.277 446.355 108 c 459.215 85.723 459.215
 58.277 446.355 36 c 433.492 13.723 409.723 0 384 0 c 358.277 0 334.508 
13.723 321.645 36 c 308.785 58.277 308.785 85.723 321.645 108 c 334.508 
130.277 358.277 144 384 144 c 360 732 m 360 576 l 408 576 l 408 732 l 408
 744.863 414.863 756.746 426 763.176 c 437.137 769.609 450.863 769.609 462
 763.176 c 473.137 756.746 480 744.863 480 732 c 480 576 l 528 576 l 480
 336 l 480 325.68 l 479.922 318.797 484.973 312.926 491.793 311.977 c 498.609
 311.027 505.074 315.293 506.879 321.938 c 544.941 455.234 l 544.945 455.23
 l 548.418 466.926 557.863 475.883 569.73 478.723 c 581.594 481.562 594.074
 477.855 602.465 469.004 c 610.859 460.148 613.887 447.488 610.414 435.793
 c 559.293 269.664 l 559.297 269.664 l 550.238 240.223 531.984 214.461 507.203
 196.164 c 482.426 177.863 452.434 167.992 421.633 168 c 346.367 168 l 315.566
 167.992 285.574 177.863 260.797 196.164 c 236.016 214.461 217.762 240.223
 208.703 269.664 c 157.586 435.793 l 154.113 447.496 157.148 460.164 165.547
 469.023 c 173.945 477.883 186.434 481.586 198.305 478.742 c 210.18 475.898
 219.633 466.938 223.105 455.23 c 261.168 321.934 l 261.168 321.938 l 262.973
 315.293 269.438 311.027 276.258 311.977 c 283.074 312.926 288.125 318.797
 288.047 325.68 c 288.047 336 l 240.047 576 l 288.047 576 l 288.047 732 
l 288.047 744.863 294.91 756.746 306.047 763.176 c 317.188 769.609 330.91
 769.609 342.047 763.176 c 353.188 756.746 360.047 744.863 360.047 732 c
 h
360 732 m f
Q Q
showpage
%%Trailer
%%EOF
