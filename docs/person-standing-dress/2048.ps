%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 312 0 1224 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 312 0 1224 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 312 0 912 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 288 m 819.445 288 866.984 260.555 892.707 216 c 918.43 171.445 918.43
 116.555 892.707 72 c 866.984 27.445 819.445 0 768 0 c 716.555 0 669.016
 27.445 643.293 72 c 617.57 116.555 617.57 171.445 643.293 216 c 669.016
 260.555 716.555 288 768 288 c 720 1464 m 720 1152 l 816 1152 l 816 1464
 l 816 1489.723 829.723 1513.492 852 1526.355 c 874.277 1539.215 901.723
 1539.215 924 1526.355 c 946.277 1513.492 960 1489.723 960 1464 c 960 1152
 l 1056 1152 l 960 672 l 960 651.359 l 959.898 642.41 964.184 633.977 971.469
 628.777 c 978.758 623.578 988.125 622.273 996.555 625.281 c 1004.988 628.293
 1011.41 635.234 1013.762 643.871 c 1089.891 910.465 l 1089.887 910.465 
l 1096.832 933.855 1115.73 951.766 1139.461 957.445 c 1163.188 963.125 1188.148
 955.715 1204.93 938.004 c 1221.715 920.293 1227.777 894.977 1220.832 871.586
 c 1118.594 539.328 l 1100.48 480.445 1063.965 428.922 1014.41 392.328 c
 964.852 355.73 904.867 335.988 843.266 336 c 692.734 336 l 631.133 335.988
 571.148 355.73 521.59 392.328 c 472.035 428.922 435.52 480.445 417.406 
539.328 c 315.168 871.586 l 308.223 894.992 314.293 920.328 331.094 938.047
 c 347.891 955.766 372.867 963.176 396.613 957.484 c 420.355 951.797 439.262
 933.871 446.207 910.465 c 522.336 643.871 l 524.684 635.234 531.109 628.293
 539.539 625.281 c 547.969 622.273 557.34 623.578 564.629 628.777 c 571.914
 633.977 576.199 642.41 576.098 651.359 c 576.098 672 l 480.098 1152 l 576.098
 1152 l 576.098 1464 l 576.098 1489.723 589.82 1513.492 612.098 1526.355
 c 634.371 1539.215 661.82 1539.215 684.098 1526.355 c 706.371 1513.492 
720.098 1489.723 720.098 1464 c h
720 1464 m f
Q Q
showpage
%%Trailer
%%EOF
