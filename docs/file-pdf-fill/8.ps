%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.07 3.91 m 2.121 3.879 2.18 3.848 2.242 3.82 c 2.191 3.898 2.133 3.973
 2.074 4.047 c 1.969 4.172 1.887 4.242 1.836 4.262 c 1.824 4.266 l 1.82 
4.262 1.816 4.254 1.812 4.25 c 1.793 4.207 1.793 4.168 1.828 4.113 c 1.867
 4.051 1.949 3.98 2.07 3.906 c 2.992 3.289 m 2.949 3.297 2.902 3.309 2.859
 3.316 c 2.859 3.32 l 2.926 3.191 2.988 3.059 3.047 2.926 c 3.105 3.035 
3.168 3.145 3.238 3.25 c 3.156 3.262 3.074 3.277 2.992 3.293 c 3.938 3.645
 m 3.879 3.598 3.824 3.547 3.777 3.488 c 3.863 3.488 3.941 3.496 4.008 3.508
 c 4.125 3.527 4.184 3.562 4.203 3.586 c 4.199 3.59 l 4.207 3.594 4.207 
3.602 4.211 3.613 c 4.207 3.641 4.199 3.664 4.188 3.688 c 4.18 3.707 4.168
 3.723 4.152 3.734 c 4.145 3.738 4.133 3.742 4.125 3.738 c 4.09 3.738 4.027
 3.715 3.938 3.641 c 3.105 1.863 m 3.09 1.953 3.066 2.059 3.031 2.176 c 
3.027 2.176 l 3.016 2.133 3.004 2.09 2.996 2.043 c 2.969 1.91 2.965 1.809
 2.98 1.734 c 2.996 1.668 3.023 1.641 3.055 1.629 c 3.051 1.629 l 3.07 1.621
 3.086 1.617 3.105 1.617 c 3.109 1.629 3.117 1.652 3.117 1.691 c 3.121 1.738
 3.113 1.797 3.102 1.867 c h
3.105 1.863 m f
1.5 0 m 4.5 0 l 4.699 0 4.891 0.078 5.031 0.219 c 5.172 0.359 5.25 0.551
 5.25 0.75 c 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 1.5 6 l 1.086 6 0.75 5.664 0.75 5.25 c 0.75 0.75 l 0.75
 0.336 1.086 0 1.5 0 c 1.562 4.375 m 1.598 4.441 1.648 4.504 1.727 4.531
 c 1.805 4.559 1.883 4.547 1.945 4.52 c 2.066 4.473 2.184 4.355 2.293 4.227
 c 2.418 4.078 2.551 3.879 2.676 3.66 c 2.672 3.66 l 2.918 3.586 3.168 3.535
 3.422 3.508 c 3.535 3.652 3.652 3.773 3.762 3.863 c 3.867 3.945 3.988 4.016
 4.113 4.02 c 4.184 4.023 4.25 4.008 4.305 3.969 c 4.363 3.93 4.406 3.875
 4.438 3.812 c 4.473 3.746 4.492 3.672 4.488 3.602 c 4.488 3.531 4.461 3.461
 4.414 3.406 c 4.328 3.305 4.191 3.258 4.055 3.23 c 4.055 3.234 l 3.891 
3.207 3.723 3.203 3.555 3.215 c 3.414 3.016 3.289 2.805 3.188 2.582 c 3.281
 2.336 3.352 2.102 3.383 1.91 c 3.395 1.828 3.402 1.75 3.402 1.68 c 3.398
 1.68 l 3.398 1.609 3.383 1.539 3.352 1.477 c 3.316 1.406 3.25 1.355 3.172
 1.34 c 3.098 1.324 3.02 1.34 2.945 1.367 c 2.805 1.422 2.73 1.543 2.703
 1.676 c 2.676 1.805 2.688 1.953 2.719 2.102 c 2.75 2.254 2.809 2.418 2.879
 2.586 c 2.883 2.59 l 2.766 2.875 2.633 3.156 2.484 3.426 c 2.289 3.484 
2.105 3.566 1.93 3.668 c 1.789 3.75 1.668 3.848 1.594 3.965 c 1.516 4.086
 1.492 4.234 1.562 4.379 c f*
Q Q
showpage
%%Trailer
%%EOF
