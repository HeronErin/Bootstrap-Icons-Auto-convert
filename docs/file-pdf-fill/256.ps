%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
66.277 125.09 m 67.957 124.098 69.793 123.145 71.785 122.234 c 71.785 122.23
 l 70.098 124.738 68.297 127.168 66.383 129.504 c 63.023 133.547 60.406 
135.695 58.762 136.367 c 58.34 136.512 l 58.344 136.512 l 58.227 136.344
 58.121 136.168 58.031 135.984 c 57.359 134.664 57.383 133.391 58.512 131.664
 c 59.785 129.684 62.34 127.418 66.277 125.09 c 95.738 105.324 m 94.312 
105.621 92.891 105.934 91.465 106.262 c 93.578 102.117 95.582 97.914 97.465
 93.66 c 99.359 97.176 101.402 100.609 103.586 103.957 c 100.977 104.34 
98.363 104.797 95.738 105.324 c 126.039 116.594 m 126.035 116.594 l 124.176
 115.086 122.43 113.441 120.816 111.672 c 123.57 111.727 126.016 111.945
 128.16 112.32 c 131.965 113.004 133.754 114.086 134.375 114.828 c 134.566
 115.039 134.68 115.312 134.688 115.598 c 134.645 116.441 134.398 117.266
 133.969 117.996 c 133.73 118.582 133.34 119.098 132.84 119.484 c 132.594
 119.645 132.301 119.707 132.012 119.664 c 130.934 119.629 128.914 118.871
 126.035 116.594 c 99.336 59.641 m 98.855 62.57 98.039 65.93 96.938 69.59
 c 96.531 68.219 96.176 66.832 95.867 65.438 c 94.957 61.203 94.824 57.879
 95.316 55.574 c 95.773 53.449 96.637 52.598 97.668 52.18 c 97.668 52.176
 l 98.219 51.93 98.809 51.766 99.406 51.695 c 99.562 52.055 99.742 52.801
 99.789 54.07 c 99.852 55.535 99.699 57.395 99.332 59.648 c h
99.336 59.641 m f
48 0 m 144 0 l 150.363 0 156.469 2.527 160.969 7.031 c 165.473 11.531 168
 17.637 168 24 c 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c
 156.469 189.473 150.363 192 144 192 c 48 192 l 41.637 192 35.531 189.473
 31.031 184.969 c 26.527 180.469 24 174.363 24 168 c 24 24 l 24 17.637 26.527
 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 49.98 140.016 m 51.059
 142.176 52.742 144.133 55.238 145.043 c 57.723 145.941 60.184 145.523 62.199
 144.684 c 66.016 143.125 69.82 139.453 73.312 135.25 c 77.309 130.438 81.508
 124.125 85.566 117.129 c 85.559 117.133 l 93.391 114.809 101.41 113.18 
109.523 112.262 c 113.125 116.859 116.844 120.816 120.445 123.66 c 123.805
 126.301 127.68 128.496 131.652 128.664 c 133.816 128.77 135.957 128.188
 137.773 127.008 c 139.633 125.797 141.012 124.043 142.02 122.016 c 143.098
 119.844 143.758 117.574 143.676 115.258 c 143.676 115.262 l 143.605 112.977
 142.758 110.785 141.277 109.043 c 138.566 105.805 134.125 104.242 129.758
 103.465 c 124.457 102.648 119.082 102.445 113.734 102.863 c 109.227 96.48
 105.289 89.711 101.977 82.633 c 104.977 74.711 107.219 67.227 108.215 61.105
 c 108.648 58.488 108.875 55.992 108.789 53.738 c 108.793 53.734 l 108.777
 51.496 108.254 49.289 107.27 47.281 c 106.113 45.035 104.012 43.426 101.543
 42.898 c 99.117 42.383 96.621 42.898 94.332 43.824 c 89.809 45.625 87.422
 49.465 86.52 53.699 c 85.645 57.777 86.039 62.531 87.07 67.332 c 88.125
 72.203 89.926 77.508 92.23 82.871 c 88.539 92.035 84.281 100.957 79.488
 109.598 c 73.305 111.547 67.344 114.141 61.703 117.336 c 57.262 119.977
 53.316 123.098 50.938 126.781 c 48.418 130.691 47.637 135.348 49.977 140.016
 c f*
Q Q
showpage
%%Trailer
%%EOF
