%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
265.105 500.352 m 271.824 496.383 279.168 492.574 287.137 488.926 c 287.137
 488.93 l 280.398 498.957 273.191 508.664 265.535 518.016 c 252.094 534.191
 241.633 542.785 235.055 545.473 c 233.375 546.047 l 232.902 545.379 232.484
 544.676 232.129 543.938 c 229.441 538.656 229.535 533.57 234.051 526.656
 c 239.141 518.734 249.363 509.664 265.105 500.352 c 382.945 421.297 m 377.25
 422.48 371.555 423.73 365.855 425.039 c 374.32 408.465 382.324 391.66 389.855
 374.641 c 397.441 388.703 405.609 402.441 414.336 415.824 c 403.902 417.359
 393.441 419.184 382.945 421.297 c 504.145 466.367 m 496.703 460.34 489.723
 453.758 483.266 446.688 c 494.273 446.91 504.066 447.777 512.641 449.281
 c 527.855 452.016 535.008 456.336 537.504 459.312 c 538.273 460.156 538.715
 461.246 538.754 462.383 c 538.578 465.77 537.59 469.062 535.871 471.984
 c 534.918 474.332 533.359 476.383 531.359 477.938 c 530.379 478.57 529.203
 478.828 528.047 478.656 c 523.727 478.512 515.664 475.488 504.145 466.367
 c 397.344 238.559 m 395.422 250.27 392.16 263.711 387.742 278.352 c 386.121
 272.867 384.699 267.328 383.473 261.742 c 379.824 244.797 379.297 231.504
 381.266 222.285 c 383.09 213.789 386.547 210.383 390.672 208.699 c 390.672
 208.703 l 392.883 207.715 395.227 207.07 397.633 206.785 c 398.258 208.227
 398.977 211.199 399.168 216.289 c 399.426 222.145 398.816 229.586 397.344
 238.609 c h
397.344 238.559 m f
192 0 m 576 0 l 601.461 0 625.879 10.113 643.883 28.117 c 661.887 46.121
 672 70.539 672 96 c 672 672 l 672 697.461 661.887 721.879 643.883 739.883
 c 625.879 757.887 601.461 768 576 768 c 192 768 l 166.539 768 142.121 757.887
 124.117 739.883 c 106.113 721.879 96 697.461 96 672 c 96 96 l 96 70.539
 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c 199.922
 560.062 m 204.242 568.703 210.961 576.527 220.945 580.176 c 230.883 583.777
 240.723 582.098 248.785 578.734 c 264.051 572.496 279.266 557.805 293.234
 541.008 c 309.219 521.762 326.02 496.512 342.242 468.527 c 342.238 468.527
 l 373.559 459.234 405.633 452.711 438.098 449.039 c 452.496 467.422 467.379
 483.262 481.777 494.641 c 495.219 505.199 510.723 513.984 526.609 514.656
 c 535.262 515.07 543.824 512.754 551.09 508.031 c 558.531 503.184 564.051
 496.176 568.082 488.062 c 572.402 479.375 575.043 470.301 574.707 461.039
 c 574.703 461.039 l 574.414 451.902 571.031 443.137 565.105 436.176 c 554.258
 423.215 536.496 416.977 519.027 413.855 c 519.023 413.855 l 497.828 410.59
 476.324 409.785 454.945 411.457 c 436.898 385.926 421.156 358.844 407.902
 330.527 c 419.902 298.848 428.879 268.895 432.863 244.414 c 434.59 233.949
 435.504 223.965 435.168 214.941 c 435.168 214.945 l 435.105 205.988 433.02
 197.16 429.07 189.121 c 424.461 180.137 416.055 173.703 406.176 171.602
 c 396.48 169.539 386.496 171.602 377.328 175.297 c 359.23 182.496 349.68
 197.855 346.082 214.801 c 342.578 231.121 344.16 250.129 348.289 269.328
 c 352.512 288.816 359.715 310.031 368.93 331.488 c 354.152 368.137 337.129
 403.836 317.953 438.383 c 293.219 446.18 269.375 456.559 246.816 469.344
 c 229.055 479.902 213.266 492.383 203.762 507.121 c 193.684 522.77 190.562
 541.395 199.922 560.066 c f*
Q Q
showpage
%%Trailer
%%EOF
