%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 47 47 721 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 47 47 721 721
768 768 cairo_set_page_size
%%EndPageSetup
q 47 47 674 674 rectclip
1 0 0 -1 0 768 cm q
0 g
88.992 712.992 m 712.992 88.992 l 719.062 82.922 721.434 74.074 719.211
 65.781 c 716.988 57.488 710.512 51.012 702.219 48.789 c 693.926 46.566 
685.078 48.938 679.008 55.008 c 55.008 679.008 l 48.938 685.078 46.566 693.926
 48.789 702.219 c 51.012 710.512 57.488 716.988 65.781 719.211 c 74.074 
721.434 82.922 719.062 88.992 712.992 c 192 48 m 198.363 48 204.469 50.527
 208.969 55.031 c 213.473 59.531 216 65.637 216 72 c 216 168 l 312 168 l
 320.574 168 328.496 172.574 332.785 180 c 337.07 187.426 337.07 196.574
 332.785 204 c 328.496 211.426 320.574 216 312 216 c 216 216 l 216 312 l
 216 320.574 211.426 328.496 204 332.785 c 196.574 337.07 187.426 337.07
 180 332.785 c 172.574 328.496 168 320.574 168 312 c 168 216 l 72 216 l 
63.426 216 55.504 211.426 51.215 204 c 46.93 196.574 46.93 187.426 51.215
 180 c 55.504 172.574 63.426 168 72 168 c 168 168 l 168 72 l 168 65.637 
170.527 59.531 175.031 55.031 c 179.531 50.527 185.637 48 192 48 c 432 576
 m 432 569.637 434.527 563.531 439.031 559.031 c 443.531 554.527 449.637
 552 456 552 c 696 552 l 704.574 552 712.496 556.574 716.785 564 c 721.07
 571.426 721.07 580.574 716.785 588 c 712.496 595.426 704.574 600 696 600
 c 456 600 l 449.637 600 443.531 597.473 439.031 592.969 c 434.527 588.469
 432 582.363 432 576 c f
Q Q
showpage
%%Trailer
%%EOF
