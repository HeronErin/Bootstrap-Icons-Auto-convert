%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.531 0.375 m 2.688 0.375 2.812 0.5 2.812 0.656 c 2.812 3 l 2.812 3.25 
3.188 3.25 3.188 3 c 3.188 2.051 l 3.219 2.051 l 3.336 2.047 3.457 2.047
 3.523 2.062 c 3.574 2.074 3.633 2.098 3.691 2.129 c 3.719 2.145 3.746 2.184
 3.746 2.246 c 3.75 3 l 3.75 3.25 4.125 3.25 4.125 3 c 4.125 2.414 l 4.164
 2.41 l 4.281 2.402 4.383 2.406 4.43 2.426 c 4.473 2.441 4.543 2.504 4.613
 2.586 c 4.645 2.621 4.668 2.656 4.688 2.684 c 4.688 3.188 l 4.688 3.438
 5.062 3.438 5.062 3.188 c 5.062 2.812 l 5.191 2.812 l 5.297 2.812 5.398
 2.855 5.469 2.938 c 5.539 3.016 5.574 3.121 5.562 3.227 c 5.461 4.246 l
 5.461 4.242 l 5.449 4.375 5.41 4.5 5.344 4.613 c 4.82 5.527 l 4.82 5.531
 l 4.785 5.59 4.727 5.625 4.656 5.625 c 2.293 5.625 l 2.223 5.625 2.16 5.586
 2.125 5.523 c 1.664 4.598 l 0.723 3.027 l 0.605 2.832 0.863 2.629 1.027
 2.793 c 1.93 3.695 l 2.047 3.812 2.25 3.73 2.25 3.562 c 2.25 0.656 l 2.25
 0.5 2.375 0.375 2.531 0.375 c 3.188 1.676 m 3.188 0.656 l 3.188 0.293 2.895
 0 2.531 0 c 2.168 0 1.875 0.293 1.875 0.656 c 1.875 3.109 l 1.293 2.527
 l 1.086 2.324 0.766 2.305 0.539 2.48 c 0.312 2.656 0.254 2.973 0.402 3.219
 c 1.336 4.777 l 1.793 5.688 l 1.789 5.688 l 1.887 5.879 2.082 6 2.293 6
 c 4.656 6 l 4.859 6 5.047 5.891 5.145 5.715 c 5.668 4.801 l 5.762 4.641
 5.816 4.465 5.836 4.281 c 5.938 3.262 l 5.957 3.051 5.891 2.84 5.746 2.684
 c 5.605 2.527 5.402 2.438 5.191 2.438 c 4.973 2.438 l 4.949 2.406 4.926
 2.375 4.898 2.344 c 4.828 2.258 4.707 2.129 4.57 2.074 c 4.434 2.02 4.254
 2.023 4.137 2.035 c 4.086 2.039 l 4.047 1.938 3.973 1.852 3.875 1.801 c
 3.789 1.75 3.695 1.715 3.598 1.691 c 3.48 1.668 3.32 1.668 3.203 1.676 
c h
3.973 2.434 m f
Q Q
showpage
%%Trailer
%%EOF
