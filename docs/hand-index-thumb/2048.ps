%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 82 0 1521 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 82 0 1521 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 82 0 1439 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
648 96 m 667.094 96 685.41 103.586 698.91 117.09 c 712.414 130.59 720 148.906
 720 168 c 720 768 l 720 785.148 729.148 800.996 744 809.57 c 758.852 818.145
 777.148 818.145 792 809.57 c 806.852 800.996 816 785.148 816 768 c 816 
524.832 l 824.258 524.449 l 854.691 523.297 885.41 523.68 902.594 527.043
 c 915.457 529.637 930.816 536.258 945.602 544.516 c 952.992 548.547 960
 558.629 960 574.66 c 960 768 l 960 785.148 969.148 800.996 984 809.57 c
 998.852 818.145 1017.148 818.145 1032 809.57 c 1046.852 800.996 1056 785.148
 1056 768 c 1056 617.762 l 1066.176 616.801 l 1096.512 614.496 1122.238 
615.84 1134.145 620.641 c 1145.473 625.055 1162.945 640.512 1180.801 661.922
 c 1188.578 671.137 1195.199 680.16 1200 686.785 c 1200 816 l 1200 833.148
 1209.148 848.996 1224 857.57 c 1238.852 866.145 1257.148 866.145 1272 857.57
 c 1286.852 848.996 1296 833.148 1296 816 c 1296 720 l 1328.832 720 l 1355.965
 720 1381.828 731.48 1400.027 751.602 c 1418.23 771.723 1427.066 798.605
 1424.352 825.602 c 1398.336 1086.242 l 1398.336 1086.238 l 1394.977 1119.734
 1384.609 1152.148 1367.902 1181.375 c 1233.98 1415.809 l 1233.984 1415.809
 l 1229.789 1423.156 1223.723 1429.262 1216.406 1433.512 c 1209.09 1437.758
 1200.781 1439.996 1192.32 1440 c 587.328 1440 l 578.422 1440 569.691 1437.52
 562.113 1432.844 c 554.535 1428.164 548.406 1421.469 544.414 1413.504 c
 426.141 1176.863 l 184.988 775.102 l 184.992 775.105 l 176.66 761.133 175.703
 743.965 182.43 729.156 c 189.156 714.344 202.711 703.77 218.715 700.852
 c 234.719 697.934 251.137 703.043 262.656 714.527 c 494.016 945.887 l 503.012
 954.906 515.219 959.977 527.957 959.988 c 540.691 960 552.91 954.949 561.922
 945.949 c 570.934 936.949 575.996 924.734 576 912 c 576 168 l 576 148.906
 583.586 130.59 597.09 117.09 c 610.59 103.586 628.906 96 648 96 c 816 428.734
 m 816 168 l 816 123.445 798.301 80.711 766.793 49.207 c 735.289 17.699 
692.555 0 648 0 c 603.445 0 560.711 17.699 529.207 49.207 c 497.699 80.711
 480 123.445 480 168 c 480 796.129 l 330.527 646.656 l 296.703 613.02 248.555
 598.078 201.629 606.664 c 154.707 615.246 114.965 646.266 95.238 689.695
 c 75.512 733.129 78.309 783.469 102.719 824.449 c 341.855 1223.137 l 458.496
 1456.418 l 458.496 1456.414 l 470.461 1480.336 488.852 1500.453 511.605
 1514.512 c 534.359 1528.566 560.582 1536.008 587.328 1536 c 1192.32 1536
 l 1217.703 1535.992 1242.633 1529.273 1264.582 1516.531 c 1286.531 1503.785
 1304.723 1485.465 1317.312 1463.426 c 1451.234 1229.09 l 1451.23 1229.09
 l 1474.645 1188.125 1489.168 1142.691 1493.855 1095.742 c 1519.871 835.102
 l 1519.871 835.105 l 1523.441 799.414 1516.941 763.438 1501.109 731.254
 c 1485.277 699.07 1460.746 671.961 1430.301 653.008 c 1399.852 634.051 
1364.699 624 1328.832 624 c 1273.055 624 l 1267.066 615.867 1260.824 607.93
 1254.336 600.191 c 1236 578.207 1205.375 545.664 1169.855 531.457 c 1134.91
 517.441 1088.641 518.785 1058.688 521.09 c 1046.016 522.242 l 1046.016 
522.238 l 1035.797 496.078 1016.789 474.285 992.258 460.609 c 970.191 447.828
 946.297 438.504 921.406 432.961 c 891.645 427.008 850.461 427.395 820.605
 428.547 c h
1017.023 623.133 m f
Q Q
showpage
%%Trailer
%%EOF
