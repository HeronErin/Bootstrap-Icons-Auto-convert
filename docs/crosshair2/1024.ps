%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 390.363 0 396.469 2.527 400.969 7.031 c 405.473 11.531 408 17.637
 408 24 c 408 48.863 l 488.609 54.637 564.438 89.273 621.582 146.418 c 678.727
 203.562 713.363 279.391 719.137 360 c 744 360 l 752.574 360 760.496 364.574
 764.785 372 c 769.07 379.426 769.07 388.574 764.785 396 c 760.496 403.426
 752.574 408 744 408 c 719.137 408 l 713.363 488.609 678.727 564.438 621.582
 621.582 c 564.438 678.727 488.609 713.363 408 719.137 c 408 744 l 408 752.574
 403.426 760.496 396 764.785 c 388.574 769.07 379.426 769.07 372 764.785
 c 364.574 760.496 360 752.574 360 744 c 360 719.137 l 279.391 713.363 203.562
 678.727 146.418 621.582 c 89.273 564.438 54.637 488.609 48.863 408 c 24
 408 l 15.426 408 7.504 403.426 3.215 396 c -1.07 388.574 -1.07 379.426 
3.215 372 c 7.504 364.574 15.426 360 24 360 c 48.863 360 l 54.637 279.391
 89.273 203.562 146.418 146.418 c 203.562 89.273 279.391 54.637 360 48.863
 c 360 24 l 360 17.637 362.527 11.531 367.031 7.031 c 371.531 2.527 377.637
 0 384 0 c 360 96.961 m 292.133 102.625 228.469 132.16 180.316 180.316 c
 132.16 228.469 102.625 292.133 96.961 360 c 145.199 360 l 150.734 304.914
 175.145 253.438 214.293 214.293 c 253.438 175.145 304.914 150.734 360 145.199
 c h
408 145.199 m 463.086 150.734 514.562 175.145 553.707 214.293 c 592.855
 253.438 617.266 304.914 622.801 360 c 671.039 360 l 665.375 292.133 635.84
 228.469 587.684 180.316 c 539.531 132.16 475.867 102.625 408 96.961 c h
622.801 408 m 617.266 463.086 592.855 514.562 553.707 553.707 c 514.562
 592.855 463.086 617.266 408 622.801 c 408 671.039 l 475.867 665.375 539.531
 635.84 587.684 587.684 c 635.84 539.531 665.375 475.867 671.039 408 c h
360 622.801 m 304.914 617.266 253.438 592.855 214.293 553.707 c 175.145
 514.562 150.734 463.086 145.199 408 c 96.961 408 l 102.625 475.867 132.16
 539.531 180.316 587.684 c 228.469 635.84 292.133 665.375 360 671.039 c 
h
480 384 m 480 349.703 461.703 318.012 432 300.863 c 402.297 283.711 365.703
 283.711 336 300.863 c 306.297 318.012 288 349.703 288 384 c 288 418.297
 306.297 449.988 336 467.137 c 365.703 484.289 402.297 484.289 432 467.137
 c 461.703 449.988 480 418.297 480 384 c f
Q Q
showpage
%%Trailer
%%EOF
