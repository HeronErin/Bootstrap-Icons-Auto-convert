%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 195.184 0 198.234 1.266 200.484 3.516 c 202.734 5.766 204 8.816
 204 12 c 204 24.434 l 244.305 27.32 282.219 44.637 310.793 73.207 c 339.363
 101.781 356.68 139.695 359.566 180 c 372 180 l 378.629 180 384 185.371 
384 192 c 384 198.629 378.629 204 372 204 c 359.566 204 l 356.68 244.305
 339.363 282.219 310.793 310.793 c 282.219 339.363 244.305 356.68 204 359.566
 c 204 372 l 204 378.629 198.629 384 192 384 c 185.371 384 180 378.629 180
 372 c 180 359.566 l 139.695 356.68 101.781 339.363 73.207 310.793 c 44.637
 282.219 27.32 244.305 24.434 204 c 12 204 l 5.371 204 0 198.629 0 192 c
 0 185.371 5.371 180 12 180 c 24.434 180 l 27.32 139.695 44.637 101.781 
73.207 73.207 c 101.781 44.637 139.695 27.32 180 24.434 c 180 12 l 180 5.371
 185.371 0 192 0 c 180 48.48 m 146.066 51.312 114.234 66.078 90.156 90.156
 c 66.078 114.234 51.312 146.066 48.48 180 c 72.602 180 l 75.367 152.457
 87.574 126.719 107.145 107.145 c 126.719 87.574 152.457 75.367 180 72.602
 c h
204 72.602 m 231.543 75.367 257.281 87.574 276.855 107.145 c 296.426 126.719
 308.633 152.457 311.398 180 c 335.52 180 l 332.688 146.066 317.922 114.234
 293.844 90.156 c 269.766 66.078 237.934 51.312 204 48.48 c h
311.398 204 m 308.633 231.543 296.426 257.281 276.855 276.855 c 257.281
 296.426 231.543 308.633 204 311.398 c 204 335.52 l 237.934 332.688 269.766
 317.922 293.844 293.844 c 317.922 269.766 332.688 237.934 335.52 204 c 
h
180 311.398 m 152.457 308.633 126.719 296.426 107.145 276.855 c 87.574 
257.281 75.367 231.543 72.602 204 c 48.48 204 l 51.312 237.934 66.078 269.766
 90.156 293.844 c 114.234 317.922 146.066 332.688 180 335.52 c h
240 192 m 240 174.852 230.852 159.004 216 150.43 c 201.148 141.855 182.852
 141.855 168 150.43 c 153.148 159.004 144 174.852 144 192 c 144 209.148 
153.148 224.996 168 233.57 c 182.852 242.145 201.148 242.145 216 233.57 
c 230.852 224.996 240 209.148 240 192 c f
Q Q
showpage
%%Trailer
%%EOF
