%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 780.73 0 792.938 5.059 801.941 14.059 c 810.941 23.062 816 35.27
 816 48 c 816 97.727 l 977.219 109.277 1128.875 178.543 1243.164 292.836
 c 1357.457 407.125 1426.723 558.781 1438.273 720 c 1488 720 l 1505.148 
720 1520.996 729.148 1529.57 744 c 1538.145 758.852 1538.145 777.148 1529.57
 792 c 1520.996 806.852 1505.148 816 1488 816 c 1438.273 816 l 1426.723 
977.219 1357.457 1128.875 1243.164 1243.164 c 1128.875 1357.457 977.219 
1426.723 816 1438.273 c 816 1488 l 816 1505.148 806.852 1520.996 792 1529.57
 c 777.148 1538.145 758.852 1538.145 744 1529.57 c 729.148 1520.996 720 
1505.148 720 1488 c 720 1438.273 l 558.781 1426.723 407.125 1357.457 292.836
 1243.164 c 178.543 1128.875 109.277 977.219 97.727 816 c 48 816 l 30.852
 816 15.004 806.852 6.43 792 c -2.145 777.148 -2.145 758.852 6.43 744 c 
15.004 729.148 30.852 720 48 720 c 97.727 720 l 109.277 558.781 178.543 
407.125 292.836 292.836 c 407.125 178.543 558.781 109.277 720 97.727 c 720
 48 l 720 35.27 725.059 23.062 734.059 14.059 c 743.062 5.059 755.27 0 768
 0 c 720 193.922 m 584.266 205.254 456.941 264.316 360.629 360.629 c 264.316
 456.941 205.254 584.266 193.922 720 c 290.402 720 l 290.398 720 l 301.473
 609.832 350.289 506.879 428.582 428.582 c 506.879 350.289 609.832 301.473
 720 290.398 c h
816 290.402 m 816 290.398 l 926.168 301.473 1029.121 350.289 1107.418 428.582
 c 1185.711 506.879 1234.527 609.832 1245.602 720 c 1342.082 720 l 1342.078
 720 l 1330.746 584.266 1271.684 456.941 1175.371 360.629 c 1079.059 264.316
 951.734 205.254 816 193.922 c h
1245.602 816 m 1234.527 926.168 1185.711 1029.121 1107.418 1107.418 c 1029.121
 1185.711 926.168 1234.527 816 1245.602 c 816 1342.082 l 816 1342.078 l 
951.734 1330.746 1079.059 1271.684 1175.371 1175.371 c 1271.684 1079.059
 1330.746 951.734 1342.078 816 c h
720 1245.602 m 609.832 1234.527 506.879 1185.711 428.582 1107.418 c 350.289
 1029.121 301.473 926.168 290.398 816 c 193.922 816 l 205.254 951.734 264.316
 1079.059 360.629 1175.371 c 456.941 1271.684 584.266 1330.746 720 1342.078
 c h
960 768 m 960 717.078 939.773 668.242 903.766 632.234 c 867.758 596.227
 818.922 576 768 576 c 717.078 576 668.242 596.227 632.234 632.234 c 596.227
 668.242 576 717.078 576 768 c 576 818.922 596.227 867.758 632.234 903.766
 c 668.242 939.773 717.078 960 768 960 c 818.922 960 867.758 939.773 903.766
 903.766 c 939.773 867.758 960 818.922 960 768 c f
Q Q
showpage
%%Trailer
%%EOF
