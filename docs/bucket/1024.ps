%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 0 696 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 0 696 768
768 768 cairo_set_page_size
%%EndPageSetup
q 72 0 624 768 rectclip
1 0 0 -1 0 768 cm q
0 g
121.055 240 m 96 240 l 89.02 240.008 82.387 243.055 77.832 248.344 c 73.277
 253.637 71.254 260.648 72.289 267.551 c 138.145 706.703 l 140.707 723.742
 149.293 739.297 162.344 750.543 c 175.398 761.793 192.051 767.984 209.281
 768 c 558.625 768 l 575.863 767.996 592.527 761.809 605.59 750.559 c 618.652
 739.312 627.246 723.75 629.809 706.703 c 695.711 267.551 l 696.746 260.648
 694.723 253.637 690.168 248.344 c 685.613 243.055 678.98 240.008 672 240
 c 646.945 240 l 641.051 174.332 610.801 113.242 562.141 68.75 c 513.48 
24.262 449.934 -0.41 384 -0.41 c 318.066 -0.41 254.52 24.262 205.859 68.75
 c 157.199 113.242 126.949 174.332 121.055 240 c 169.293 240 m 169.297 240
 l 175.164 187.168 200.309 138.352 239.918 102.898 c 279.527 67.445 330.816
 47.844 383.977 47.844 c 437.133 47.844 488.426 67.445 528.035 102.898 c
 567.645 138.352 592.789 187.168 598.656 240 c h
644.109 288 m 582.383 699.551 l 581.535 705.234 578.672 710.422 574.32 
714.176 c 569.969 717.926 564.418 719.996 558.672 720 c 209.281 720 l 203.535
 719.996 197.98 717.926 193.629 714.176 c 189.277 710.422 186.418 705.234
 185.566 699.551 c 123.84 288 l h
644.109 288 m f
Q Q
showpage
%%Trailer
%%EOF
