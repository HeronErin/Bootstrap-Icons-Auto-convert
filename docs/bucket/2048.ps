%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 0 1392 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 0 1392 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 0 1248 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
242.113 480 m 192 480 l 178.039 480.016 164.773 486.105 155.664 496.688
 c 146.559 507.273 142.508 521.297 144.574 535.105 c 276.285 1413.41 l 276.289
 1413.406 l 281.41 1447.484 298.586 1478.594 324.688 1501.09 c 350.793 1523.582
 384.102 1535.969 418.559 1536 c 1117.246 1536 l 1151.723 1535.992 1185.055
 1523.617 1211.18 1501.121 c 1237.305 1478.625 1254.492 1447.5 1259.617 
1413.406 c 1391.426 535.102 l 1391.426 535.105 l 1393.492 521.297 1389.441
 507.273 1380.336 496.688 c 1371.227 486.105 1357.961 480.016 1344 480 c
 1293.887 480 l 1282.105 348.66 1221.602 226.484 1124.281 137.504 c 1026.961
 48.523 899.867 -0.82 768 -0.82 c 636.133 -0.82 509.039 48.523 411.719 137.504
 c 314.398 226.484 253.895 348.66 242.113 480 c 338.594 480 m 350.328 374.332
 400.617 276.703 479.836 205.797 c 559.051 134.891 661.637 95.688 767.953
 95.688 c 874.27 95.688 976.852 134.891 1056.07 205.797 c 1135.289 276.703
 1185.578 374.332 1197.312 480 c h
1288.227 576 m 1164.77 1399.105 l 1163.066 1410.469 1157.348 1420.848 1148.645
 1428.352 c 1139.941 1435.855 1128.836 1439.988 1117.344 1440 c 418.559 
1440 l 407.07 1439.988 395.961 1435.855 387.262 1428.352 c 378.559 1420.848
 372.836 1410.469 371.137 1399.105 c 247.68 576 l h
1288.227 576 m f
Q Q
showpage
%%Trailer
%%EOF
