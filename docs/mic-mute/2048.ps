%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 158 0 1378 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 158 0 1378 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 158 0 1220 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1248 768 m 1248 822.145 1238.977 874.273 1222.465 922.848 c 1144.32 844.703
 l 1149.445 819.457 1152.02 793.762 1152 768 c 1152 672 l 1152 654.852 1161.148
 639.004 1176 630.43 c 1190.852 621.855 1209.148 621.855 1224 630.43 c 1238.852
 639.004 1248 654.852 1248 672 c h
768 1152 m 846.527 1152 919.488 1128.48 980.352 1087.969 c 1049.281 1156.992
 l 980.691 1206.578 900.211 1237.148 816 1245.602 c 816 1440 l 1104 1440
 l 1121.148 1440 1136.996 1449.148 1145.57 1464 c 1154.145 1478.852 1154.145
 1497.148 1145.57 1512 c 1136.996 1526.852 1121.148 1536 1104 1536 c 432
 1536 l 414.852 1536 399.004 1526.852 390.43 1512 c 381.855 1497.148 381.855
 1478.852 390.43 1464 c 399.004 1449.148 414.852 1440 432 1440 c 720 1440
 l 720 1245.602 l 601.602 1233.699 491.844 1178.246 412.02 1089.996 c 332.195
 1001.75 288 886.996 288 768 c 288 672 l 288 654.852 297.148 639.004 312
 630.43 c 326.852 621.855 345.148 621.855 360 630.43 c 374.852 639.004 384
 654.852 384 672 c 384 768 l 384 835.406 401.742 901.625 435.445 960 c 469.148
 1018.375 517.625 1066.852 576 1100.555 c 634.375 1134.258 700.594 1152 
768 1152 c 1056 288 m 1056 756.383 l 960 660.383 l 960 288 l 960.223 237.914
 940.863 189.723 906.051 153.707 c 871.238 117.695 823.734 96.711 773.668
 95.234 c 723.602 93.754 674.941 111.902 638.066 145.797 c 601.191 179.695
 579.02 226.66 576.289 276.672 c 495.168 195.551 l 517.145 130.969 561.332
 76.277 619.855 41.219 c 678.383 6.16 747.449 -6.992 814.762 4.105 c 882.074
 15.203 943.266 49.824 987.445 101.812 c 1031.621 153.801 1055.914 219.777
 1056 288 c f
910.656 1018.273 m 838.848 946.465 l 799.863 961.941 756.883 964.227 716.48
 952.973 c 676.074 941.719 640.465 917.539 615.098 884.137 c 589.73 850.734
 575.996 809.945 576 768 c 576 683.711 l 480 587.711 l 480 768 l 479.98 
835.543 503.699 900.941 547.012 952.77 c 590.324 1004.594 650.473 1039.551
 716.945 1051.523 c 783.418 1063.496 851.98 1051.727 910.656 1018.273 c 
158.016 129.984 m 1310.016 1281.984 l 1377.984 1214.016 l 225.984 62.016
 l h
158.016 129.984 m f
Q Q
showpage
%%Trailer
%%EOF
