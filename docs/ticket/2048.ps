%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 432 m 0 393.809 15.172 357.184 42.176 330.176 c 69.184 303.172 105.809
 288 144 288 c 1392 288 l 1430.191 288 1466.816 303.172 1493.824 330.176
 c 1520.828 357.184 1536 393.809 1536 432 c 1536 576 l 1536 588.73 1530.941
 600.938 1521.941 609.941 c 1512.938 618.941 1500.73 624 1488 624 c 1436.555
 624 1389.016 651.445 1363.293 696 c 1337.57 740.555 1337.57 795.445 1363.293
 840 c 1389.016 884.555 1436.555 912 1488 912 c 1500.73 912 1512.938 917.059
 1521.941 926.059 c 1530.941 935.062 1536 947.27 1536 960 c 1536 1104 l 
1536 1142.191 1520.828 1178.816 1493.824 1205.824 c 1466.816 1232.828 1430.191
 1248 1392 1248 c 144 1248 l 105.809 1248 69.184 1232.828 42.176 1205.824
 c 15.172 1178.816 0 1142.191 0 1104 c 0 960 l 0 947.27 5.059 935.062 14.059
 926.059 c 23.062 917.059 35.27 912 48 912 c 99.445 912 146.984 884.555 
172.707 840 c 198.43 795.445 198.43 740.555 172.707 696 c 146.984 651.445
 99.445 624 48 624 c 35.27 624 23.062 618.941 14.059 609.941 c 5.059 600.938
 0 588.73 0 576 c h
144 384 m 131.27 384 119.062 389.059 110.059 398.059 c 101.059 407.062 
96 419.27 96 432 c 96 532.801 l 150.254 543.816 199.031 573.25 234.066 616.117
 c 269.102 658.98 288.242 712.641 288.242 768 c 288.242 823.359 269.102 
877.02 234.066 919.883 c 199.031 962.75 150.254 992.184 96 1003.199 c 96
 1104 l 96 1116.73 101.059 1128.938 110.059 1137.941 c 119.062 1146.941 
131.27 1152 144 1152 c 1392 1152 l 1404.73 1152 1416.938 1146.941 1425.941
 1137.941 c 1434.941 1128.938 1440 1116.73 1440 1104 c 1440 1003.199 l 1385.746
 992.184 1336.969 962.75 1301.934 919.883 c 1266.898 877.02 1247.758 823.359
 1247.758 768 c 1247.758 712.641 1266.898 658.98 1301.934 616.117 c 1336.969
 573.25 1385.746 543.816 1440 532.801 c 1440 432 l 1440 419.27 1434.941 
407.062 1425.941 398.059 c 1416.938 389.059 1404.73 384 1392 384 c h
144 384 m f
Q Q
showpage
%%Trailer
%%EOF
