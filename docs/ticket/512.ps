%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
0 108 m 0 98.453 3.793 89.297 10.543 82.543 c 17.297 75.793 26.453 72 36
 72 c 348 72 l 357.547 72 366.703 75.793 373.457 82.543 c 380.207 89.297
 384 98.453 384 108 c 384 144 l 384 147.184 382.734 150.234 380.484 152.484
 c 378.234 154.734 375.184 156 372 156 c 359.137 156 347.254 162.863 340.824
 174 c 334.391 185.137 334.391 198.863 340.824 210 c 347.254 221.137 359.137
 228 372 228 c 375.184 228 378.234 229.266 380.484 231.516 c 382.734 233.766
 384 236.816 384 240 c 384 276 l 384 285.547 380.207 294.703 373.457 301.457
 c 366.703 308.207 357.547 312 348 312 c 36 312 l 26.453 312 17.297 308.207
 10.543 301.457 c 3.793 294.703 0 285.547 0 276 c 0 240 l 0 233.371 5.371
 228 12 228 c 24.863 228 36.746 221.137 43.176 210 c 49.609 198.863 49.609
 185.137 43.176 174 c 36.746 162.863 24.863 156 12 156 c 5.371 156 0 150.629
 0 144 c h
36 96 m 29.371 96 24 101.371 24 108 c 24 133.199 l 42.227 136.902 57.703
 148.844 65.906 165.535 c 74.109 182.223 74.109 201.777 65.906 218.465 c
 57.703 235.156 42.227 247.098 24 250.801 c 24 276 l 24 279.184 25.266 282.234
 27.516 284.484 c 29.766 286.734 32.816 288 36 288 c 348 288 l 351.184 288
 354.234 286.734 356.484 284.484 c 358.734 282.234 360 279.184 360 276 c
 360 250.801 l 341.773 247.098 326.297 235.156 318.094 218.465 c 309.891
 201.777 309.891 182.223 318.094 165.535 c 326.297 148.844 341.773 136.902
 360 133.199 c 360 108 l 360 104.816 358.734 101.766 356.484 99.516 c 354.234
 97.266 351.184 96 348 96 c h
36 96 m f
Q Q
showpage
%%Trailer
%%EOF
