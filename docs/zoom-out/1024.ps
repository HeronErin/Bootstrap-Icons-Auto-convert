%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
312 576 m 382.016 576 449.168 548.188 498.676 498.676 c 548.188 449.168
 576 382.016 576 312 c 576 241.984 548.188 174.832 498.676 125.324 c 449.168
 75.812 382.016 48 312 48 c 241.984 48 174.832 75.812 125.324 125.324 c 
75.812 174.832 48 241.984 48 312 c 48 382.016 75.812 449.168 125.324 498.676
 c 174.832 548.188 241.984 576 312 576 c 624 312 m 624 394.746 591.129 474.105
 532.617 532.617 c 474.105 591.129 394.746 624 312 624 c 229.254 624 149.895
 591.129 91.383 532.617 c 32.871 474.105 0 394.746 0 312 c 0 229.254 32.871
 149.895 91.383 91.383 c 149.895 32.871 229.254 0 312 0 c 394.746 0 474.105
 32.871 532.617 91.383 c 591.129 149.895 624 229.254 624 312 c f*
496.512 563.617 m 497.918 565.539 499.488 567.379 501.215 569.137 c 686.016
 753.938 l 698.141 766.07 715.816 770.812 732.387 766.379 c 748.953 761.945
 761.898 749.008 766.344 732.441 c 770.789 715.875 766.059 698.195 753.938
 686.062 c 569.137 501.262 l 569.137 501.266 l 567.422 499.527 565.574 497.922
 563.617 496.465 c 544.809 522.156 522.18 544.82 496.512 563.664 c h
496.512 563.617 m f
144 312 m 144 305.637 146.527 299.531 151.031 295.031 c 155.531 290.527
 161.637 288 168 288 c 456 288 l 464.574 288 472.496 292.574 476.785 300
 c 481.07 307.426 481.07 316.574 476.785 324 c 472.496 331.426 464.574 336
 456 336 c 168 336 l 161.637 336 155.531 333.473 151.031 328.969 c 146.527
 324.469 144 318.363 144 312 c f*
Q Q
showpage
%%Trailer
%%EOF
