%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
7.5 1.125 m 7.5 1.027 7.461 0.93 7.391 0.859 c 7.32 0.789 7.223 0.75 7.125
 0.75 c 4.875 0.75 l 4.668 0.75 4.5 0.918 4.5 1.125 c 4.5 1.875 l 4.5 1.973
 4.539 2.07 4.609 2.141 c 4.68 2.211 4.777 2.25 4.875 2.25 c 7.125 2.25 
l 7.223 2.25 7.32 2.211 7.391 2.141 c 7.461 2.07 7.5 1.973 7.5 1.875 c h
3.75 1.125 m 3.75 0.504 4.254 0 4.875 0 c 7.125 0 l 7.746 0 8.25 0.504 
8.25 1.125 c 8.25 1.875 l 8.25 2.496 7.746 3 7.125 3 c 4.875 3 l 4.254 3
 3.75 2.496 3.75 1.875 c h
2.25 1.125 m 3 1.125 l 3 1.875 l 2.25 1.875 l 1.836 1.875 1.5 2.211 1.5
 2.625 c 1.5 10.5 l 1.5 10.699 1.578 10.891 1.719 11.031 c 1.859 11.172 
2.051 11.25 2.25 11.25 c 9.75 11.25 l 9.949 11.25 10.141 11.172 10.281 11.031
 c 10.422 10.891 10.5 10.699 10.5 10.5 c 10.5 2.625 l 10.5 2.426 10.422 
2.234 10.281 2.094 c 10.141 1.953 9.949 1.875 9.75 1.875 c 9 1.875 l 9 1.125
 l 9.75 1.125 l 10.148 1.125 10.531 1.281 10.812 1.562 c 11.094 1.844 11.25
 2.227 11.25 2.625 c 11.25 10.5 l 11.25 10.898 11.094 11.281 10.812 11.562
 c 10.531 11.844 10.148 12 9.75 12 c 2.25 12 l 1.422 12 0.75 11.328 0.75
 10.5 c 0.75 2.625 l 0.75 1.797 1.422 1.125 2.25 1.125 c 7.484 4.016 m 7.434
 3.852 7.281 3.742 7.109 3.75 c 6.938 3.758 6.793 3.879 6.758 4.047 c 5.941
 7.867 l 5.238 5.516 l 5.234 5.516 l 5.191 5.379 5.074 5.273 4.93 5.254 
c 4.789 5.23 4.645 5.297 4.562 5.418 c 3.176 7.5 l 2.625 7.5 l 2.418 7.5
 2.25 7.668 2.25 7.875 c 2.25 8.082 2.418 8.25 2.625 8.25 c 3.375 8.25 l
 3.5 8.25 3.617 8.188 3.688 8.082 c 4.746 6.496 l 5.641 9.484 l 5.691 9.648
 5.844 9.758 6.016 9.75 c 6.188 9.742 6.332 9.621 6.367 9.453 c 7.184 5.633
 l 7.887 7.984 l 7.891 7.984 l 7.938 8.141 8.086 8.25 8.25 8.25 c 9.375 
8.25 l 9.582 8.25 9.75 8.082 9.75 7.875 c 9.75 7.668 9.582 7.5 9.375 7.5
 c 8.527 7.5 l h
7.484 4.016 m f*
Q Q
showpage
%%Trailer
%%EOF
