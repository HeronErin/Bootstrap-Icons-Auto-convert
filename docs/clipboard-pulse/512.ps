%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
240 36 m 240 32.816 238.734 29.766 236.484 27.516 c 234.234 25.266 231.184
 24 228 24 c 156 24 l 149.371 24 144 29.371 144 36 c 144 60 l 144 63.184
 145.266 66.234 147.516 68.484 c 149.766 70.734 152.816 72 156 72 c 228 
72 l 231.184 72 234.234 70.734 236.484 68.484 c 238.734 66.234 240 63.184
 240 60 c h
120 36 m 120 26.453 123.793 17.297 130.543 10.543 c 137.297 3.793 146.453
 0 156 0 c 228 0 l 237.547 0 246.703 3.793 253.457 10.543 c 260.207 17.297
 264 26.453 264 36 c 264 60 l 264 69.547 260.207 78.703 253.457 85.457 c
 246.703 92.207 237.547 96 228 96 c 156 96 l 146.453 96 137.297 92.207 130.543
 85.457 c 123.793 78.703 120 69.547 120 60 c h
72 36 m 96 36 l 96 60 l 72 60 l 65.637 60 59.531 62.527 55.031 67.031 c
 50.527 71.531 48 77.637 48 84 c 48 336 l 48 342.363 50.527 348.469 55.031
 352.969 c 59.531 357.473 65.637 360 72 360 c 312 360 l 318.363 360 324.469
 357.473 328.969 352.969 c 333.473 348.469 336 342.363 336 336 c 336 84 
l 336 77.637 333.473 71.531 328.969 67.031 c 324.469 62.527 318.363 60 312
 60 c 288 60 l 288 36 l 312 36 l 324.73 36 336.938 41.059 345.941 50.059
 c 354.941 59.062 360 71.27 360 84 c 360 336 l 360 348.73 354.941 360.938
 345.941 369.941 c 336.938 378.941 324.73 384 312 384 c 72 384 l 59.27 384
 47.062 378.941 38.059 369.941 c 29.059 360.938 24 348.73 24 336 c 24 84
 l 24 71.27 29.059 59.062 38.059 50.059 c 47.062 41.059 59.27 36 72 36 c
 239.496 128.543 m 237.918 123.293 232.984 119.777 227.508 120.004 c 222.031
 120.23 217.402 124.141 216.266 129.504 c 190.078 251.762 l 167.52 176.523
 l 167.52 176.52 l 166.18 172.07 162.391 168.793 157.793 168.109 c 153.195
 167.426 148.617 169.457 146.039 173.328 c 101.566 240 l 84 240 l 77.371
 240 72 245.371 72 252 c 72 258.629 77.371 264 84 264 c 108 264 l 112.012
 263.996 115.762 261.988 117.984 258.648 c 151.824 207.887 l 180.504 303.453
 l 180.504 303.457 l 182.082 308.707 187.016 312.223 192.492 311.996 c 197.969
 311.77 202.598 307.859 203.734 302.496 c 229.922 180.238 l 252.48 255.477
 l 252.48 255.48 l 254.016 260.551 258.699 264.016 264 264 c 300 264 l 306.629
 264 312 258.629 312 252 c 312 245.371 306.629 240 300 240 c 272.93 240 
l h
239.496 128.543 m f*
Q Q
showpage
%%Trailer
%%EOF
