%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 96
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
60 9 m 60 8.203 59.684 7.441 59.121 6.879 c 58.559 6.316 57.797 6 57 6 
c 39 6 l 37.344 6 36 7.344 36 9 c 36 15 l 36 15.797 36.316 16.559 36.879
 17.121 c 37.441 17.684 38.203 18 39 18 c 57 18 l 57.797 18 58.559 17.684
 59.121 17.121 c 59.684 16.559 60 15.797 60 15 c h
30 9 m 30 4.031 34.031 0 39 0 c 57 0 l 61.969 0 66 4.031 66 9 c 66 15 l
 66 19.969 61.969 24 57 24 c 39 24 l 34.031 24 30 19.969 30 15 c h
18 9 m 24 9 l 24 15 l 18 15 l 14.688 15 12 17.688 12 21 c 12 84 l 12 85.59
 12.633 87.117 13.758 88.242 c 14.883 89.367 16.41 90 18 90 c 78 90 l 79.59
 90 81.117 89.367 82.242 88.242 c 83.367 87.117 84 85.59 84 84 c 84 21 l
 84 19.41 83.367 17.883 82.242 16.758 c 81.117 15.633 79.59 15 78 15 c 72
 15 l 72 9 l 78 9 l 81.184 9 84.234 10.266 86.484 12.516 c 88.734 14.766
 90 17.816 90 21 c 90 84 l 90 87.184 88.734 90.234 86.484 92.484 c 84.234
 94.734 81.184 96 78 96 c 18 96 l 11.371 96 6 90.629 6 84 c 6 21 l 6 14.371
 11.371 9 18 9 c 59.875 32.137 m 59.48 30.824 58.246 29.945 56.875 30 c 
55.508 30.059 54.352 31.035 54.066 32.375 c 47.52 62.941 l 41.879 44.133
 l 41.879 44.129 l 41.547 43.016 40.598 42.199 39.449 42.027 c 38.297 41.855
 37.152 42.363 36.512 43.332 c 25.391 60 l 21 60 l 19.344 60 18 61.344 18
 63 c 18 64.656 19.344 66 21 66 c 27 66 l 28.004 66 28.941 65.496 29.496
 64.66 c 37.957 51.969 l 45.129 75.859 l 45.125 75.863 l 45.52 77.176 46.754
 78.055 48.125 78 c 49.492 77.941 50.648 76.965 50.934 75.625 c 57.48 45.059
 l 63.121 63.867 l 63.121 63.871 l 63.504 65.137 64.676 66.004 66 66 c 75
 66 l 76.656 66 78 64.656 78 63 c 78 61.344 76.656 60 75 60 c 68.23 60 l
 h
59.875 32.137 m f*
Q Q
showpage
%%Trailer
%%EOF
