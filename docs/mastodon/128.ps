%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 2 0 94 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 2 0 94 96
96 96 cairo_set_page_size
%%EndPageSetup
q 2 0 92 96 rectclip
1 0 0 -1 0 96 cm q
0 g
67.141 73.172 m 79.238 71.73 89.762 64.32 91.082 57.555 c 93.172 46.887
 93.004 31.52 93.004 31.52 c 93.004 10.699 79.289 4.59 79.289 4.59 c 72.371
 1.43 60.496 0.102 48.16 0 c 47.859 0 l 35.52 0.102 23.652 1.43 16.738 4.59
 c 16.738 4.59 3.027 10.691 3.027 31.52 c 3.016 35.492 l 2.992 39.332 2.973
 43.594 3.082 48.039 c 3.578 68.402 6.84 88.48 25.762 93.461 c 34.484 95.758
 41.98 96.238 48.016 95.91 c 58.953 95.309 65.098 92.027 65.098 92.027 c
 64.738 84.125 l 64.738 84.125 56.922 86.586 48.137 86.285 c 39.438 85.984
 30.258 85.348 28.848 74.719 c 28.848 74.711 l 28.719 73.727 28.652 72.73
 28.648 71.734 c 28.648 71.734 37.191 73.809 48.016 74.301 c 54.633 74.602
 60.836 73.918 67.145 73.168 c h
76.82 58.352 m 66.781 58.352 l 66.781 33.871 l 66.781 28.719 64.598 26.102
 60.234 26.102 c 55.41 26.102 52.992 29.203 52.992 35.348 c 52.992 48.746
 l 43.008 48.742 l 43.008 35.34 l 43.008 29.195 40.59 26.094 35.766 26.094
 c 31.402 26.094 29.219 28.711 29.219 33.871 c 29.219 58.344 l 19.184 58.344
 l 19.184 33.133 l 19.184 27.98 20.504 23.891 23.145 20.855 c 25.879 17.824
 29.457 16.27 33.902 16.27 c 39.039 16.27 42.926 18.238 45.5 22.168 c 48
 26.34 l 50.504 22.168 l 53.078 18.238 56.965 16.27 62.109 16.27 c 66.551
 16.27 70.125 17.824 72.855 20.855 c 75.504 23.883 76.824 27.977 76.82 33.133
 c h
76.82 58.352 m f
Q Q
showpage
%%Trailer
%%EOF
