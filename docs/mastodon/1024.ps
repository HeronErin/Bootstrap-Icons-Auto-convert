%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 24 0 745 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 24 0 745 768
768 768 cairo_set_page_size
%%EndPageSetup
q 24 0 721 768 rectclip
1 0 0 -1 0 768 cm q
0 g
537.121 585.359 m 633.891 573.84 718.082 514.559 728.641 460.414 c 745.344
 375.07 744 252.141 744 252.141 c 744 85.582 634.273 36.715 634.273 36.715
 c 578.977 11.426 483.984 0.816 385.297 0 c 382.898 0 l 284.16 0.816 189.215
 11.426 133.922 36.719 c 133.922 36.719 24.242 85.535 24.242 252.145 c 24.145
 283.922 l 23.953 314.641 23.809 348.723 24.672 384.289 c 28.656 547.199
 54.719 707.809 206.113 747.648 c 275.906 766.031 335.855 769.871 384.145
 767.234 c 471.648 762.434 520.801 736.18 520.801 736.18 c 517.922 672.965
 l 517.922 672.965 455.379 692.645 385.105 690.246 c 315.504 687.848 242.066
 682.758 230.785 597.703 c 230.785 597.695 l 229.762 589.801 229.234 581.848
 229.199 573.887 c 229.199 573.887 297.551 590.496 384.145 594.43 c 437.09
 596.828 486.719 591.359 537.168 585.359 c h
614.547 466.801 m 534.238 466.801 l 534.238 270.961 l 534.238 229.73 516.766
 208.801 481.871 208.801 c 443.277 208.801 423.934 233.617 423.934 282.77
 c 423.934 389.953 l 344.062 389.953 l 344.062 282.719 l 344.062 233.566
 324.719 208.75 286.125 208.75 c 251.23 208.75 233.758 229.68 233.758 270.957
 c 233.758 466.75 l 153.457 466.754 l 153.457 265.055 l 153.457 223.84 164.016
 191.102 185.137 166.848 c 207.023 142.609 235.633 130.176 271.199 130.176
 c 312.289 130.176 343.391 145.918 363.984 177.359 c 384 210.719 l 404.016
 177.359 l 424.609 145.918 455.711 130.176 496.848 130.176 c 532.367 130.176
 560.977 142.609 582.816 166.848 c 604 191.07 614.578 223.809 614.543 265.055
 c h
614.547 466.801 m f
Q Q
showpage
%%Trailer
%%EOF
