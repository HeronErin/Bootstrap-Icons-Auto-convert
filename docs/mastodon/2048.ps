%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 47 0 1489 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 47 0 1489 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 47 0 1442 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1074.238 1170.719 m 1267.773 1147.68 1436.16 1029.117 1457.277 920.832 
c 1490.684 750.145 1487.996 504.289 1487.996 504.289 c 1487.996 171.168 
1268.539 73.441 1268.539 73.441 c 1157.953 22.848 967.969 1.633 770.594 
0 c 765.793 0 l 568.32 1.633 378.434 22.848 267.84 73.441 c 267.84 73.441
 48.48 171.074 48.48 504.289 c 48.289 567.84 l 47.906 629.281 47.617 697.441
 49.344 768.574 c 57.312 1094.398 109.441 1415.613 412.223 1495.293 c 551.809
 1532.062 671.711 1539.742 768.285 1534.461 c 943.293 1524.859 1041.598 
1472.348 1041.598 1472.348 c 1035.836 1345.914 l 1035.836 1345.914 910.746
 1385.273 770.203 1380.473 c 631.004 1375.672 484.125 1365.496 461.562 1195.383
 c 461.566 1195.391 l 459.527 1179.602 458.469 1163.699 458.398 1147.777
 c 458.398 1147.777 595.102 1180.992 768.285 1188.867 c 874.172 1193.668
 973.438 1182.723 1074.332 1170.723 c h
1229.086 933.598 m 1068.48 933.602 l 1068.48 541.922 l 1068.48 459.457 
1033.535 417.602 963.746 417.602 c 886.562 417.602 847.875 467.234 847.875
 565.539 c 847.875 779.906 l 688.129 779.902 l 688.129 565.441 l 688.129
 467.137 649.441 417.504 572.258 417.504 c 502.465 417.504 467.523 459.359
 467.523 541.918 c 467.523 933.504 l 306.91 933.504 l 306.91 530.113 l 306.91
 447.68 328.031 382.211 370.27 333.699 c 414.047 285.219 471.262 260.355
 542.398 260.355 c 624.574 260.355 686.781 291.844 727.965 354.723 c 768
 421.441 l 808.031 354.723 l 849.215 291.844 911.422 260.355 993.695 260.355
 c 1064.734 260.355 1121.953 285.219 1165.633 333.699 c 1208 382.148 1229.152
 447.621 1229.09 530.113 c h
1229.086 933.598 m f
Q Q
showpage
%%Trailer
%%EOF
