%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 12 0 373 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 12 0 373 384
384 384 cairo_set_page_size
%%EndPageSetup
q 12 0 361 384 rectclip
1 0 0 -1 0 384 cm q
0 g
268.559 292.68 m 316.941 286.918 359.039 257.281 364.32 230.207 c 372.672
 187.535 372 126.07 372 126.07 c 372 42.789 317.137 18.359 317.137 18.359
 c 289.488 5.711 241.992 0.406 192.648 0 c 191.449 0 l 142.078 0.406 94.609
 5.711 66.961 18.359 c 66.961 18.359 12.121 42.766 12.121 126.07 c 12.074
 141.957 l 11.977 157.316 11.906 174.355 12.34 192.141 c 14.332 273.598 
27.363 353.902 103.059 373.82 c 137.953 383.012 167.93 384.934 192.074 383.613
 c 235.828 381.215 260.402 368.086 260.402 368.086 c 258.961 336.477 l 258.961
 336.477 227.688 346.316 192.555 345.117 c 157.754 343.918 121.035 341.375
 115.395 298.844 c 115.391 298.848 l 114.883 294.898 114.617 290.926 114.602
 286.945 c 114.602 286.945 148.777 295.25 192.074 297.219 c 218.547 298.418
 243.363 295.684 268.586 292.684 c h
307.27 233.398 m 267.121 233.398 l 267.121 135.477 l 267.121 114.859 258.387
 104.398 240.938 104.398 c 221.641 104.398 211.969 116.805 211.969 141.383
 c 211.969 194.977 l 172.031 194.977 l 172.031 141.359 l 172.031 116.785
 162.359 104.375 143.062 104.375 c 125.613 104.375 116.879 114.84 116.879
 135.48 c 116.879 233.375 l 76.727 233.375 l 76.727 132.527 l 76.727 111.918
 82.008 95.551 92.566 83.422 c 103.512 71.301 117.812 65.086 135.598 65.086
 c 156.141 65.086 171.695 72.957 181.988 88.68 c 192 105.359 l 202.008 88.68
 l 212.305 72.961 227.855 65.086 248.422 65.086 c 266.184 65.086 280.484
 71.301 291.406 83.422 c 302 95.535 307.285 111.902 307.27 132.527 c h
307.27 233.398 m f
Q Q
showpage
%%Trailer
%%EOF
