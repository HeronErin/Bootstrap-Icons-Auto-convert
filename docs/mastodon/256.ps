%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 6 0 187 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 6 0 187 192
192 192 cairo_set_page_size
%%EndPageSetup
q 6 0 181 192 rectclip
1 0 0 -1 0 192 cm q
0 g
134.281 146.34 m 158.473 143.461 179.52 128.641 182.16 115.105 c 186.336
 93.77 186 63.039 186 63.039 c 186 21.398 158.566 9.184 158.566 9.184 c 
144.742 2.855 120.996 0.203 96.324 0 c 95.723 0 l 71.039 0.203 47.305 2.855
 33.48 9.18 c 33.48 9.18 6.059 21.383 6.059 63.035 c 6.035 70.98 l 5.988
 78.66 5.949 87.18 6.168 96.074 c 7.164 136.801 13.68 176.953 51.527 186.914
 c 68.977 191.512 83.965 192.469 96.035 191.809 c 117.91 190.609 130.199
 184.043 130.199 184.043 c 129.48 168.238 l 129.48 168.238 113.844 173.16
 96.277 172.559 c 78.879 171.957 60.516 170.688 57.699 149.422 c 57.695 
149.426 l 57.441 147.449 57.309 145.461 57.301 143.473 c 57.301 143.473 
74.391 147.625 96.035 148.609 c 109.27 149.211 121.68 147.84 134.293 146.34
 c h
153.637 116.699 m 133.559 116.699 l 133.559 67.738 l 133.559 57.43 129.191
 52.199 120.465 52.199 c 110.816 52.199 105.98 58.402 105.98 70.691 c 105.98
 97.488 l 86.016 97.488 l 86.016 70.68 l 86.016 58.391 81.18 52.188 71.531
 52.188 c 62.809 52.188 58.438 57.418 58.438 67.738 c 58.438 116.688 l 38.363
 116.688 l 38.363 66.266 l 38.363 55.961 41.004 47.777 46.285 41.715 c 51.758
 35.656 58.91 32.547 67.801 32.547 c 78.074 32.547 85.848 36.484 90.996 
44.344 c 96 52.68 l 101.004 44.34 l 106.152 36.48 113.93 32.543 124.211 
32.543 c 133.09 32.543 140.242 35.652 145.703 41.711 c 151 47.766 153.645
 55.949 153.637 66.262 c h
153.637 116.699 m f
Q Q
showpage
%%Trailer
%%EOF
