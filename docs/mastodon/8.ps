%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.195 4.574 m 4.953 4.484 5.609 4.02 5.691 3.598 c 5.82 2.93 5.812 1.969
 5.812 1.969 c 5.812 0.668 4.957 0.285 4.957 0.285 c 4.523 0.09 3.781 0.008
 3.012 0 c 2.992 0 l 2.219 0.008 1.477 0.09 1.047 0.285 c 1.047 0.285 0.191
 0.668 0.191 1.969 c 0.191 2.219 l 0.191 2.457 0.188 2.727 0.195 3.004 c
 0.227 4.277 0.43 5.531 1.613 5.844 c 2.16 5.988 2.625 6.016 3.004 5.996
 c 3.688 5.957 4.07 5.754 4.07 5.754 c 4.047 5.262 l 4.047 5.262 3.559 5.414
 3.008 5.398 c 2.465 5.379 1.891 5.34 1.801 4.676 c 1.805 4.668 l 1.797 
4.609 1.789 4.547 1.789 4.484 c 1.789 4.484 2.324 4.613 3 4.645 c 3.414 
4.664 3.801 4.621 4.195 4.574 c h
4.801 3.648 m 4.172 3.648 l 4.172 2.117 l 4.172 1.797 4.035 1.633 3.762
 1.633 c 3.461 1.633 3.309 1.828 3.309 2.211 c 3.309 3.047 l 2.688 3.047
 l 2.688 2.207 l 2.688 1.824 2.535 1.629 2.234 1.629 c 1.961 1.629 1.824
 1.793 1.824 2.113 c 1.824 3.645 l 1.199 3.648 l 1.199 2.07 l 1.199 1.75
 1.281 1.492 1.445 1.305 c 1.617 1.117 1.84 1.02 2.117 1.02 c 2.438 1.02
 2.68 1.141 2.844 1.387 c 3 1.645 l 3.156 1.383 l 3.316 1.137 3.559 1.016
 3.883 1.016 c 4.16 1.016 4.383 1.113 4.555 1.301 c 4.719 1.488 4.805 1.746
 4.801 2.066 c h
4.801 3.648 m f
Q Q
showpage
%%Trailer
%%EOF
