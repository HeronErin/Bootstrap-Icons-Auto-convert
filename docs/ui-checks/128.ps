%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 90 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 90 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 90 84 rectclip
1 0 0 -1 0 96 cm q
0 g
42 15 m 42 13.344 43.344 12 45 12 c 87 12 l 87.797 12 88.559 12.316 89.121
 12.879 c 89.684 13.441 90 14.203 90 15 c 90 21 l 90 21.797 89.684 22.559
 89.121 23.121 c 88.559 23.684 87.797 24 87 24 c 45 24 l 43.344 24 42 22.656
 42 21 c h
12 6 m 5.371 6 0 11.371 0 18 c 0 30 l 0 33.184 1.266 36.234 3.516 38.484
 c 5.766 40.734 8.816 42 12 42 c 24 42 l 27.184 42 30.234 40.734 32.484 
38.484 c 34.734 36.234 36 33.184 36 30 c 36 18 l 36 14.816 34.734 11.766
 32.484 9.516 c 30.234 7.266 27.184 6 24 6 c h
12 54 m 5.371 54 0 59.371 0 66 c 0 78 l 0 81.184 1.266 84.234 3.516 86.484
 c 5.766 88.734 8.816 90 12 90 c 24 90 l 27.184 90 30.234 88.734 32.484 
86.484 c 34.734 84.234 36 81.184 36 78 c 36 66 l 36 62.816 34.734 59.766
 32.484 57.516 c 30.234 55.266 27.184 54 24 54 c h
17.125 32.125 m 16.562 32.688 15.797 33.004 15 33.004 c 14.203 33.004 13.438
 32.688 12.875 32.125 c 6.875 26.125 l 5.703 24.949 5.703 23.051 6.875 21.875
 c 8.051 20.703 9.949 20.703 11.125 21.875 c 15 25.758 l 24.875 15.875 l
 26.051 14.703 27.949 14.703 29.125 15.875 c 30.297 17.051 30.297 18.949
 29.125 20.125 c h
17.125 80.125 m 16.562 80.688 15.797 81.004 15 81.004 c 14.203 81.004 13.438
 80.688 12.875 80.125 c 6.875 74.125 l 5.703 72.949 5.703 71.051 6.875 69.875
 c 8.051 68.703 9.949 68.703 11.125 69.875 c 15 73.758 l 24.875 63.875 l
 26.051 62.703 27.949 62.703 29.125 63.875 c 30.297 65.051 30.297 66.949
 29.125 68.125 c h
42 63 m 42 61.344 43.344 60 45 60 c 87 60 l 87.797 60 88.559 60.316 89.121
 60.879 c 89.684 61.441 90 62.203 90 63 c 90 69 l 90 69.797 89.684 70.559
 89.121 71.121 c 88.559 71.684 87.797 72 87 72 c 45 72 l 43.344 72 42 70.656
 42 69 c h
42 33 m 42 31.344 43.344 30 45 30 c 75 30 l 76.656 30 78 31.344 78 33 c
 78 34.656 76.656 36 75 36 c 45 36 l 43.344 36 42 34.656 42 33 c 42 81 m
 42 79.344 43.344 78 45 78 c 75 78 l 76.656 78 78 79.344 78 81 c 78 82.656
 76.656 84 75 84 c 45 84 l 43.344 84 42 82.656 42 81 c f
Q Q
showpage
%%Trailer
%%EOF
