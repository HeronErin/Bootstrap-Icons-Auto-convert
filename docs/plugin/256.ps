%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
12 96 m 12.004 70.668 23.438 46.691 43.121 30.742 c 62.801 14.797 88.629
 8.582 113.41 13.836 c 138.191 19.086 159.281 35.238 170.805 57.797 c 182.328
 80.355 183.059 106.91 172.785 130.066 c 162.516 153.223 142.344 170.508
 117.887 177.109 c 93.434 183.707 67.301 178.922 46.777 164.074 c 44.773
 162.621 44.184 159.203 46.754 156.633 c 68.355 135.031 l 68.352 135.035
 l 76.441 141.09 86.441 144.023 96.52 143.297 c 106.594 142.574 116.074 
138.246 123.215 131.102 c 140.184 114.121 l 142.527 111.777 142.527 107.98
 140.184 105.637 c 131.699 97.152 l 150.406 78.395 l 151.562 77.277 152.223
 75.738 152.234 74.129 c 152.246 72.52 151.609 70.973 150.469 69.836 c 149.332
 68.703 147.781 68.07 146.172 68.086 c 144.562 68.102 143.027 68.766 141.91
 69.926 c 123.203 88.668 l 106.234 71.699 l 124.953 52.957 l 124.957 52.957
 l 126.156 51.848 126.855 50.297 126.887 48.664 c 126.922 47.031 126.285
 45.453 125.129 44.297 c 123.973 43.145 122.395 42.512 120.762 42.547 c 
119.129 42.582 117.578 43.281 116.473 44.484 c 97.754 63.203 l 89.27 54.73
 l 86.926 52.391 83.129 52.391 80.785 54.73 c 63.816 71.699 l 56.676 78.844
 52.344 88.316 51.621 98.391 c 50.898 108.465 53.832 118.465 59.879 126.551
 c 38.277 148.152 l 31.316 155.113 30.836 167.352 39.73 173.797 c 63.188
 190.766 93.051 196.242 121.004 188.703 c 148.953 181.16 172.012 161.41 
183.75 134.945 c 195.492 108.484 194.664 78.133 181.496 52.352 c 168.328
 26.566 144.227 8.105 115.906 2.102 c 87.582 -3.902 58.066 3.199 35.57 21.422
 c 13.074 39.645 0.004 67.051 0 96 c 0 99.312 2.688 102 6 102 c 9.312 102
 12 99.312 12 96 c f*
Q Q
showpage
%%Trailer
%%EOF
