%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
6 48 m 6 35.336 11.719 23.344 21.559 15.371 c 31.402 7.398 44.316 4.293
 56.707 6.918 c 69.098 9.543 79.641 17.617 85.402 28.898 c 91.164 40.176
 91.527 53.453 86.395 65.031 c 81.258 76.609 71.172 85.254 58.945 88.555
 c 46.715 91.855 33.652 89.461 23.387 82.039 c 22.383 81.312 22.09 79.602
 23.375 78.32 c 34.176 67.52 l 38.219 70.543 43.219 72.012 48.258 71.648
 c 53.297 71.289 58.035 69.121 61.609 65.551 c 70.094 57.062 l 70.094 57.059
 l 71.262 55.887 71.262 53.988 70.094 52.816 c 65.852 48.574 l 75.207 39.195
 l 75.203 39.199 l 75.781 38.637 76.109 37.871 76.117 37.066 c 76.121 36.262
 75.805 35.488 75.234 34.918 c 74.664 34.352 73.891 34.035 73.086 34.043
 c 72.281 34.051 71.516 34.383 70.957 34.961 c 61.602 44.332 l 53.117 35.848
 l 62.477 26.477 l 63.078 25.926 63.43 25.148 63.445 24.332 c 63.461 23.516
 63.145 22.727 62.566 22.148 c 61.988 21.57 61.199 21.254 60.379 21.273 
c 59.562 21.289 58.789 21.641 58.234 22.242 c 48.875 31.602 l 44.633 27.367
 l 43.461 26.195 41.562 26.195 40.391 27.367 c 31.906 35.852 l 28.336 39.422
 26.172 44.16 25.812 49.195 c 25.449 54.234 26.914 59.23 29.941 63.277 c
 19.141 74.078 l 15.66 77.559 15.422 83.68 19.867 86.898 c 31.594 95.383
 46.523 98.121 60.5 94.352 c 74.477 90.582 86.004 80.703 91.875 67.473 c
 97.746 54.242 97.332 39.066 90.746 26.176 c 84.164 13.285 72.113 4.051 
57.953 1.051 c 43.793 -1.949 29.031 1.598 17.785 10.711 c 6.535 19.824 0.004
 33.523 0 48 c 0 49.656 1.344 51 3 51 c 4.656 51 6 49.656 6 48 c f*
Q Q
showpage
%%Trailer
%%EOF
