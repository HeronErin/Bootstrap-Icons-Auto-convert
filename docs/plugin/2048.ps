%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 768 m 96.02 617.121 146.809 470.641 240.195 352.141 c 333.582 233.637
 464.129 150.008 610.82 114.719 c 757.516 79.43 911.812 94.531 1048.879 
157.594 c 1185.945 220.656 1297.801 328.012 1366.438 462.371 c 1435.074 
596.734 1456.5 750.281 1427.262 898.301 c 1398.023 1046.316 1319.828 1180.188
 1205.258 1278.363 c 1090.691 1376.535 946.418 1433.297 795.668 1439.508
 c 644.918 1445.723 496.465 1401.023 374.207 1312.609 c 358.176 1300.992
 353.473 1273.633 374.016 1253.09 c 546.816 1080.289 l 611.531 1128.707 
691.527 1152.172 772.145 1146.391 c 852.758 1140.605 928.586 1105.961 985.727
 1048.801 c 1121.469 912.961 l 1121.473 912.961 l 1130.469 903.957 1135.527
 891.75 1135.527 879.023 c 1135.527 866.297 1130.469 854.09 1121.473 845.09
 c 1053.602 777.219 l 1203.266 627.172 l 1203.266 627.168 l 1212.512 618.211
 1217.773 605.914 1217.867 593.039 c 1217.961 580.164 1212.875 567.793 1203.762
 558.703 c 1194.645 549.613 1182.258 544.562 1169.383 544.695 c 1156.508
 544.824 1144.227 550.121 1135.297 559.391 c 985.633 709.344 l 849.891 573.602
 l 999.652 423.648 l 999.648 423.648 l 1009.262 414.785 1014.844 402.387
 1015.105 389.312 c 1015.367 376.242 1010.285 363.629 1001.035 354.387 c
 991.781 345.148 979.16 340.086 966.09 340.363 c 953.016 340.645 940.625
 346.246 931.777 355.871 c 782.016 505.633 l 714.145 437.855 l 705.145 428.855
 692.938 423.801 680.207 423.801 c 667.48 423.801 655.273 428.855 646.273
 437.855 c 510.527 573.602 l 453.395 630.734 418.762 706.543 412.98 787.137
 c 407.195 867.73 430.648 947.711 479.039 1012.414 c 306.238 1185.215 l 
250.559 1240.895 246.719 1338.816 317.855 1390.367 c 457.566 1491.438 627.223
 1542.547 799.512 1535.473 c 971.805 1528.395 1136.699 1463.547 1267.652
 1351.363 c 1398.605 1239.18 1487.992 1086.188 1521.426 917.027 c 1554.859
 747.863 1530.391 572.371 1451.961 418.805 c 1373.531 265.238 1245.707 142.535
 1089.062 70.449 c 932.418 -1.637 756.07 -18.91 588.418 21.41 c 420.762 
61.73 271.555 157.297 164.82 292.727 c 58.082 428.156 0.027 595.566 0 768
 c 0 785.148 9.148 800.996 24 809.57 c 38.852 818.145 57.148 818.145 72 
809.57 c 86.852 800.996 96 785.148 96 768 c f*
Q Q
showpage
%%Trailer
%%EOF
