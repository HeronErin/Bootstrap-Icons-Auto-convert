%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
24 192 m 24.004 154.281 36.703 117.66 60.047 88.035 c 83.395 58.41 116.031
 37.504 152.707 28.68 c 189.379 19.855 227.953 23.633 262.219 39.398 c 296.484
 55.164 324.449 82.004 341.609 115.594 c 358.77 149.184 364.125 187.57 356.816
 224.574 c 349.508 261.578 329.957 295.047 301.316 319.59 c 272.672 344.133
 236.605 358.324 198.918 359.879 c 161.23 361.43 124.117 350.254 93.551 
328.152 c 89.543 325.25 88.367 318.41 93.504 313.273 c 136.703 270.074 l
 136.703 270.07 l 152.883 282.176 172.883 288.043 193.035 286.598 c 213.191
 285.152 232.148 276.488 246.434 262.199 c 280.371 228.238 l 280.367 228.238
 l 285.051 223.555 285.051 215.957 280.367 211.273 c 263.398 194.305 l 300.812
 156.793 l 300.816 156.793 l 303.129 154.551 304.441 151.477 304.465 148.262
 c 304.488 145.043 303.219 141.949 300.941 139.676 c 298.66 137.402 295.562
 136.141 292.348 136.172 c 289.129 136.207 286.059 137.531 283.824 139.848
 c 246.41 177.336 l 212.473 143.398 l 249.914 105.91 l 249.91 105.91 l 252.316
 103.695 253.711 100.598 253.777 97.328 c 253.844 94.059 252.57 90.906 250.258
 88.598 c 247.945 86.289 244.789 85.02 241.523 85.09 c 238.254 85.16 235.156
 86.562 232.945 88.969 c 195.504 126.41 l 178.535 109.465 l 173.852 104.781
 166.254 104.781 161.566 109.465 c 127.633 143.398 l 113.348 157.684 104.691
 176.637 103.246 196.785 c 101.801 216.934 107.664 236.926 119.762 253.105
 c 76.562 296.305 l 62.641 310.227 61.684 334.703 79.465 347.594 c 114.391
 372.859 156.805 385.637 199.879 383.867 c 242.949 382.098 284.176 365.887
 316.914 337.84 c 349.652 309.793 372 271.547 380.355 229.258 c 388.715 
186.965 382.598 143.094 362.992 104.703 c 343.383 66.309 311.426 35.633 
272.266 17.613 c 233.105 -0.41 189.02 -4.727 147.105 5.352 c 105.191 15.434
 67.891 39.324 41.203 73.184 c 14.52 107.039 0.008 148.891 0 192 c 0 198.629
 5.371 204 12 204 c 18.629 204 24 198.629 24 192 c f*
Q Q
showpage
%%Trailer
%%EOF
