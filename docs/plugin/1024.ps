%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
48 384 m 48.008 308.562 73.402 235.32 120.098 176.07 c 166.789 116.816 
232.066 75.004 305.41 57.359 c 378.758 39.715 455.906 47.266 524.441 78.797
 c 592.973 110.328 648.898 164.008 683.219 231.188 c 717.539 298.367 728.25
 375.141 713.633 449.148 c 699.012 523.16 659.914 590.094 602.629 639.18
 c 545.344 688.27 473.207 716.648 397.836 719.754 c 322.461 722.859 248.234
 700.512 187.105 656.305 c 179.09 650.496 176.738 636.816 187.008 626.543
 c 273.406 540.145 l 305.766 564.352 345.766 576.086 386.07 573.195 c 426.379
 570.305 464.293 552.98 492.863 524.398 c 560.734 456.477 l 560.734 456.48
 l 565.234 451.98 567.762 445.875 567.762 439.512 c 567.762 433.148 565.234
 427.043 560.734 422.543 c 526.797 388.605 l 601.629 313.582 l 601.633 313.586
 l 606.254 309.105 608.887 302.957 608.934 296.52 c 608.98 290.082 606.438
 283.895 601.879 279.352 c 597.32 274.805 591.129 272.281 584.691 272.348
 c 578.254 272.41 572.113 275.059 567.648 279.695 c 492.816 354.672 l 424.945
 286.801 l 499.824 211.824 l 504.633 207.395 507.422 201.191 507.555 194.656
 c 507.684 188.121 505.145 181.812 500.516 177.195 c 495.891 172.574 489.582
 170.043 483.043 170.184 c 476.508 170.32 470.312 173.121 465.887 177.938
 c 391.008 252.816 l 357.07 218.93 l 352.57 214.43 346.469 211.902 340.105
 211.902 c 333.738 211.902 327.637 214.43 323.137 218.93 c 255.266 286.801
 l 226.695 315.367 209.383 353.273 206.488 393.57 c 203.598 433.867 215.324
 473.855 239.52 506.207 c 153.121 592.605 l 125.281 620.445 123.359 669.406
 158.93 695.18 c 158.93 695.184 l 228.781 745.719 313.613 771.273 399.758
 767.734 c 485.902 764.199 568.348 731.773 633.824 675.68 c 699.301 619.59
 743.996 543.094 760.715 458.512 c 777.43 373.934 765.195 286.188 725.98
 209.402 c 686.766 132.621 622.852 71.266 544.531 35.223 c 466.207 -0.82
 378.035 -9.457 294.207 10.703 c 210.383 30.863 135.777 78.648 82.41 146.363
 c 29.039 214.078 0.012 297.781 0 384 c 0 392.574 4.574 400.496 12 404.785
 c 19.426 409.07 28.574 409.07 36 404.785 c 43.426 400.496 48 392.574 48
 384 c f*
Q Q
showpage
%%Trailer
%%EOF
