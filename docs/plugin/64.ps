%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
3 24 m 3 17.668 5.859 11.672 10.781 7.688 c 15.699 3.699 22.156 2.145 28.352
 3.457 c 34.547 4.77 39.82 8.809 42.703 14.449 c 45.582 20.09 45.766 26.727
 43.195 32.516 c 40.629 38.305 35.586 42.625 29.473 44.277 c 23.359 45.926
 16.824 44.73 11.695 41.02 c 11.195 40.656 11.047 39.801 11.688 39.16 c 
17.09 33.758 l 21.27 36.887 27.113 36.469 30.805 32.773 c 35.047 28.527 
l 35.047 28.531 l 35.633 27.945 35.633 26.996 35.047 26.41 c 32.926 24.289
 l 37.602 19.602 l 37.602 19.598 l 37.891 19.32 38.055 18.934 38.059 18.531
 c 38.062 18.129 37.902 17.742 37.617 17.461 c 37.332 17.176 36.945 17.02
 36.543 17.023 c 36.141 17.027 35.758 17.191 35.477 17.48 c 30.801 22.168
 l 26.559 17.926 l 31.238 13.238 l 31.539 12.961 31.715 12.574 31.723 12.168
 c 31.73 11.758 31.57 11.363 31.281 11.074 c 30.992 10.785 30.598 10.629
 30.191 10.637 c 29.781 10.645 29.395 10.82 29.117 11.121 c 24.438 15.801
 l 22.316 13.684 l 21.73 13.098 20.781 13.098 20.195 13.684 c 15.953 17.926
 l 12.262 21.617 11.844 27.457 14.969 31.637 c 9.57 37.035 l 7.832 38.773
 7.711 41.836 9.934 43.445 c 9.934 43.449 l 15.797 47.691 23.262 49.059 
30.25 47.176 c 37.238 45.289 43.004 40.352 45.938 33.738 c 48.875 27.121
 48.664 19.535 45.375 13.086 c 42.082 6.641 36.059 2.027 28.977 0.523 c 
21.895 -0.977 14.516 0.801 8.891 5.355 c 3.27 9.91 0 16.762 0 24 c 0 24.828
 0.672 25.5 1.5 25.5 c 2.328 25.5 3 24.828 3 24 c f*
Q Q
showpage
%%Trailer
%%EOF
