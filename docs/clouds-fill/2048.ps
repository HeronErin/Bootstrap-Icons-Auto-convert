%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
1101.406 864 m 1090.605 766.668 1047.059 675.895 977.898 606.562 c 908.742
 537.23 818.078 493.449 720.777 482.402 c 623.473 471.355 525.305 493.699
 442.363 545.762 c 359.422 597.828 296.633 676.527 264.289 768.961 c 190.172
 775.027 121.273 809.527 72.016 865.242 c 22.758 920.957 -3.035 993.562 
0.027 1067.867 c 3.09 1142.168 34.777 1212.406 88.453 1263.875 c 142.129
 1315.344 213.633 1344.055 288 1344 c 1104 1344 l 1167.652 1343.656 1228.559
 1318.039 1273.324 1272.789 c 1318.09 1227.539 1343.047 1166.355 1342.703
 1102.703 c 1342.359 1039.051 1316.746 978.145 1271.492 933.379 c 1226.242
 888.613 1165.059 863.656 1101.406 864 c f
1396.223 938.113 m 1373.531 898.102 1342.863 863.176 1306.121 835.5 c 1269.379
 807.824 1227.344 787.984 1182.625 777.215 c 1148.574 648.133 1066.895 536.738
 954.02 465.457 c 841.145 394.172 705.461 368.293 574.273 393.023 c 611.086
 325.23 667.457 270.09 736.047 234.781 c 804.637 199.469 882.27 185.625 
958.836 195.055 c 1035.402 204.48 1107.359 236.738 1165.34 287.629 c 1223.316
 338.52 1264.633 405.684 1283.902 480.383 c 1339.637 477.539 1394.617 494.203
 1439.391 527.512 c 1484.164 560.82 1515.934 608.691 1529.23 662.887 c 1542.523
 717.086 1536.52 774.223 1512.246 824.469 c 1487.973 874.719 1446.945 914.938
 1396.223 938.207 c h
1396.223 938.113 m f
Q Q
showpage
%%Trailer
%%EOF
