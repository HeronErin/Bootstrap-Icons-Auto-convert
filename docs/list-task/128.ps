%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 9 21 90 81
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 9 21 90 81
96 96 cairo_set_page_size
%%EndPageSetup
q 9 21 81 60 rectclip
1 0 0 -1 0 96 cm q
0 g
12 15 m 10.344 15 9 16.344 9 18 c 9 24 l 9 24.797 9.316 25.559 9.879 26.121
 c 10.441 26.684 11.203 27 12 27 c 18 27 l 18.797 27 19.559 26.684 20.121
 26.121 c 20.684 25.559 21 24.797 21 24 c 21 18 l 21 17.203 20.684 16.441
 20.121 15.879 c 19.559 15.316 18.797 15 18 15 c h
18 18 m 12 18 l 12 24 l 18 24 l h
18 18 m f*
30 21 m 30 19.344 31.344 18 33 18 c 87 18 l 88.656 18 90 19.344 90 21 c
 90 22.656 88.656 24 87 24 c 33 24 l 31.344 24 30 22.656 30 21 c 33 42 m
 31.344 42 30 43.344 30 45 c 30 46.656 31.344 48 33 48 c 87 48 l 88.656 
48 90 46.656 90 45 c 90 43.344 88.656 42 87 42 c h
33 66 m 31.344 66 30 67.344 30 69 c 30 70.656 31.344 72 33 72 c 87 72 l
 88.656 72 90 70.656 90 69 c 90 67.344 88.656 66 87 66 c h
33 66 m f
9 42 m 9 40.344 10.344 39 12 39 c 18 39 l 18.797 39 19.559 39.316 20.121
 39.879 c 20.684 40.441 21 41.203 21 42 c 21 48 l 21 48.797 20.684 49.559
 20.121 50.121 c 19.559 50.684 18.797 51 18 51 c 12 51 l 10.344 51 9 49.656
 9 48 c h
12 42 m 18 42 l 18 48 l 12 48 l h
12 63 m 10.344 63 9 64.344 9 66 c 9 72 l 9 72.797 9.316 73.559 9.879 74.121
 c 10.441 74.684 11.203 75 12 75 c 18 75 l 18.797 75 19.559 74.684 20.121
 74.121 c 20.684 73.559 21 72.797 21 72 c 21 66 l 21 65.203 20.684 64.441
 20.121 63.879 c 19.559 63.316 18.797 63 18 63 c h
18 66 m 12 66 l 12 72 l 18 72 l h
18 66 m f*
Q Q
showpage
%%Trailer
%%EOF
