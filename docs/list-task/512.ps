%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 36 84 360 324
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 36 84 360 324
384 384 cairo_set_page_size
%%EndPageSetup
q 36 84 324 240 rectclip
1 0 0 -1 0 384 cm q
0 g
48 60 m 41.371 60 36 65.371 36 72 c 36 96 l 36 99.184 37.266 102.234 39.516
 104.484 c 41.766 106.734 44.816 108 48 108 c 72 108 l 75.184 108 78.234
 106.734 80.484 104.484 c 82.734 102.234 84 99.184 84 96 c 84 72 l 84 68.816
 82.734 65.766 80.484 63.516 c 78.234 61.266 75.184 60 72 60 c h
72 72 m 48 72 l 48 96 l 72 96 l h
72 72 m f*
120 84 m 120 77.371 125.371 72 132 72 c 348 72 l 354.629 72 360 77.371 
360 84 c 360 90.629 354.629 96 348 96 c 132 96 l 125.371 96 120 90.629 120
 84 c 132 168 m 125.371 168 120 173.371 120 180 c 120 186.629 125.371 192
 132 192 c 348 192 l 354.629 192 360 186.629 360 180 c 360 173.371 354.629
 168 348 168 c h
132 264 m 125.371 264 120 269.371 120 276 c 120 282.629 125.371 288 132
 288 c 348 288 l 354.629 288 360 282.629 360 276 c 360 269.371 354.629 264
 348 264 c h
132 264 m f
36 168 m 36 161.371 41.371 156 48 156 c 72 156 l 75.184 156 78.234 157.266
 80.484 159.516 c 82.734 161.766 84 164.816 84 168 c 84 192 l 84 195.184
 82.734 198.234 80.484 200.484 c 78.234 202.734 75.184 204 72 204 c 48 204
 l 41.371 204 36 198.629 36 192 c h
48 168 m 72 168 l 72 192 l 48 192 l h
48 252 m 41.371 252 36 257.371 36 264 c 36 288 l 36 291.184 37.266 294.234
 39.516 296.484 c 41.766 298.734 44.816 300 48 300 c 72 300 l 75.184 300
 78.234 298.734 80.484 296.484 c 82.734 294.234 84 291.184 84 288 c 84 264
 l 84 260.816 82.734 257.766 80.484 255.516 c 78.234 253.266 75.184 252 
72 252 c h
72 264 m 48 264 l 48 288 l 72 288 l h
72 264 m f*
Q Q
showpage
%%Trailer
%%EOF
