%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
120 240 m 128.574 240 136.496 235.426 140.785 228 c 145.07 220.574 145.07
 211.426 140.785 204 c 136.496 196.574 128.574 192 120 192 c 111.426 192
 103.504 196.574 99.215 204 c 94.93 211.426 94.93 220.574 99.215 228 c 103.504
 235.426 111.426 240 120 240 c 216 240 m 224.574 240 232.496 235.426 236.785
 228 c 241.07 220.574 241.07 211.426 236.785 204 c 232.496 196.574 224.574
 192 216 192 c 207.426 192 199.504 196.574 195.215 204 c 190.93 211.426 
190.93 220.574 195.215 228 c 199.504 235.426 207.426 240 216 240 c 576 216
 m 576 224.574 571.426 232.496 564 236.785 c 556.574 241.07 547.426 241.07
 540 236.785 c 532.574 232.496 528 224.574 528 216 c 528 207.426 532.574
 199.504 540 195.215 c 547.426 190.93 556.574 190.93 564 195.215 c 571.426
 199.504 576 207.426 576 216 c 648 240 m 656.574 240 664.496 235.426 668.785
 228 c 673.07 220.574 673.07 211.426 668.785 204 c 664.496 196.574 656.574
 192 648 192 c 639.426 192 631.504 196.574 627.215 204 c 622.93 211.426 
622.93 220.574 627.215 228 c 631.504 235.426 639.426 240 648 240 c 312 192
 m 303.426 192 295.504 196.574 291.215 204 c 286.93 211.426 286.93 220.574
 291.215 228 c 295.504 235.426 303.426 240 312 240 c 456 240 l 464.574 240
 472.496 235.426 476.785 228 c 481.07 220.574 481.07 211.426 476.785 204
 c 472.496 196.574 464.574 192 456 192 c h
576 504 m 576 512.574 571.426 520.496 564 524.785 c 556.574 529.07 547.426
 529.07 540 524.785 c 532.574 520.496 528 512.574 528 504 c 528 495.426 
532.574 487.504 540 483.215 c 547.426 478.93 556.574 478.93 564 483.215 
c 571.426 487.504 576 495.426 576 504 c f
552 624 m 594.871 624 634.488 601.129 655.922 564 c 677.359 526.871 677.359
 481.129 655.922 444 c 634.488 406.871 594.871 384 552 384 c 509.129 384
 469.512 406.871 448.078 444 c 426.641 481.129 426.641 526.871 448.078 564
 c 469.512 601.129 509.129 624 552 624 c 552 576 m 526.277 576 502.508 562.277
 489.645 540 c 476.785 517.723 476.785 490.277 489.645 468 c 502.508 445.723
 526.277 432 552 432 c 577.723 432 601.492 445.723 614.355 468 c 627.215
 490.277 627.215 517.723 614.355 540 c 601.492 562.277 577.723 576 552 576
 c 240 504 m 240 512.574 235.426 520.496 228 524.785 c 220.574 529.07 211.426
 529.07 204 524.785 c 196.574 520.496 192 512.574 192 504 c 192 495.426 
196.574 487.504 204 483.215 c 211.426 478.93 220.574 478.93 228 483.215 
c 235.426 487.504 240 495.426 240 504 c f
336 504 m 336 546.871 313.129 586.488 276 607.922 c 238.871 629.359 193.129
 629.359 156 607.922 c 118.871 586.488 96 546.871 96 504 c 96 461.129 118.871
 421.512 156 400.078 c 193.129 378.641 238.871 378.641 276 400.078 c 313.129
 421.512 336 461.129 336 504 c 288 504 m 288 478.277 274.277 454.508 252
 441.645 c 229.723 428.785 202.277 428.785 180 441.645 c 157.723 454.508
 144 478.277 144 504 c 144 529.723 157.723 553.492 180 566.355 c 202.277
 579.215 229.723 579.215 252 566.355 c 274.277 553.492 288 529.723 288 504
 c f
672 0 m 678.363 0 684.469 2.527 688.969 7.031 c 693.473 11.531 696 17.637
 696 24 c 696 96 l 720 96 l 732.73 96 744.938 101.059 753.941 110.059 c 
762.941 119.062 768 131.27 768 144 c 768 672 l 768 684.73 762.941 696.938
 753.941 705.941 c 744.938 714.941 732.73 720 720 720 c 48 720 l 35.27 720
 23.062 714.941 14.059 705.941 c 5.059 696.938 0 684.73 0 672 c 0 144 l 
0 131.27 5.059 119.062 14.059 110.059 c 23.062 101.059 35.27 96 48 96 c 
648 96 l 648 24 l 648 17.637 650.527 11.531 655.031 7.031 c 659.531 2.527
 665.637 0 672 0 c 48 144 m 48 288 l 720 288 l 720 144 l h
720 336 m 48 336 l 48 672 l 720 672 l h
720 336 m f
Q Q
showpage
%%Trailer
%%EOF
