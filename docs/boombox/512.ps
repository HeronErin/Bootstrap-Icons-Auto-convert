%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
60 120 m 66.629 120 72 114.629 72 108 c 72 101.371 66.629 96 60 96 c 53.371
 96 48 101.371 48 108 c 48 114.629 53.371 120 60 120 c 108 120 m 114.629
 120 120 114.629 120 108 c 120 101.371 114.629 96 108 96 c 101.371 96 96
 101.371 96 108 c 96 114.629 101.371 120 108 120 c 288 108 m 288 114.629
 282.629 120 276 120 c 269.371 120 264 114.629 264 108 c 264 101.371 269.371
 96 276 96 c 282.629 96 288 101.371 288 108 c 324 120 m 330.629 120 336 
114.629 336 108 c 336 101.371 330.629 96 324 96 c 317.371 96 312 101.371
 312 108 c 312 114.629 317.371 120 324 120 c 156 96 m 149.371 96 144 101.371
 144 108 c 144 114.629 149.371 120 156 120 c 228 120 l 234.629 120 240 114.629
 240 108 c 240 101.371 234.629 96 228 96 c h
288 252 m 288 258.629 282.629 264 276 264 c 269.371 264 264 258.629 264
 252 c 264 245.371 269.371 240 276 240 c 282.629 240 288 245.371 288 252
 c f
276 312 m 297.438 312 317.242 300.562 327.961 282 c 338.68 263.438 338.68
 240.562 327.961 222 c 317.242 203.438 297.438 192 276 192 c 254.562 192
 234.758 203.438 224.039 222 c 213.32 240.562 213.32 263.438 224.039 282
 c 234.758 300.562 254.562 312 276 312 c 276 288 m 263.137 288 251.254 281.137
 244.824 270 c 238.391 258.863 238.391 245.137 244.824 234 c 251.254 222.863
 263.137 216 276 216 c 288.863 216 300.746 222.863 307.176 234 c 313.609
 245.137 313.609 258.863 307.176 270 c 300.746 281.137 288.863 288 276 288
 c 120 252 m 120 258.629 114.629 264 108 264 c 101.371 264 96 258.629 96
 252 c 96 245.371 101.371 240 108 240 c 114.629 240 120 245.371 120 252 
c f
168 252 m 168 273.438 156.562 293.242 138 303.961 c 119.438 314.68 96.562
 314.68 78 303.961 c 59.438 293.242 48 273.438 48 252 c 48 230.562 59.438
 210.758 78 200.039 c 96.562 189.32 119.438 189.32 138 200.039 c 156.562
 210.758 168 230.562 168 252 c 144 252 m 144 239.137 137.137 227.254 126
 220.824 c 114.863 214.391 101.137 214.391 90 220.824 c 78.863 227.254 72
 239.137 72 252 c 72 264.863 78.863 276.746 90 283.176 c 101.137 289.609
 114.863 289.609 126 283.176 c 137.137 276.746 144 264.863 144 252 c f
336 0 m 339.184 0 342.234 1.266 344.484 3.516 c 346.734 5.766 348 8.816
 348 12 c 348 48 l 360 48 l 366.363 48 372.469 50.527 376.969 55.031 c 381.473
 59.531 384 65.637 384 72 c 384 336 l 384 342.363 381.473 348.469 376.969
 352.969 c 372.469 357.473 366.363 360 360 360 c 24 360 l 17.637 360 11.531
 357.473 7.031 352.969 c 2.527 348.469 0 342.363 0 336 c 0 72 l 0 65.637
 2.527 59.531 7.031 55.031 c 11.531 50.527 17.637 48 24 48 c 324 48 l 324
 12 l 324 5.371 329.371 0 336 0 c 24 72 m 24 144 l 360 144 l 360 72 l h
360 168 m 24 168 l 24 336 l 360 336 l h
360 168 m f
Q Q
showpage
%%Trailer
%%EOF
