%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
297.602 1075.199 m 306.664 1063.113 320.891 1056 336 1056 c 576 1056 l 
593.148 1056 608.996 1065.148 617.57 1080 c 626.145 1094.852 626.145 1113.148
 617.57 1128 c 608.996 1142.852 593.148 1152 576 1152 c 360 1152 l 144 1440
 l 1392 1440 l 1176 1152 l 960 1152 l 942.852 1152 927.004 1142.852 918.43
 1128 c 909.855 1113.148 909.855 1094.852 918.43 1080 c 927.004 1065.148
 942.852 1056 960 1056 c 1200 1056 l 1215.109 1056 1229.336 1063.113 1238.398
 1075.199 c 1526.398 1459.199 l 1533.566 1468.758 1536.914 1480.641 1535.785
 1492.535 c 1534.656 1504.426 1529.137 1515.469 1520.297 1523.508 c 1511.461
 1531.547 1499.945 1536 1488 1536 c 48 1536 l 36.055 1536 24.539 1531.547
 15.703 1523.508 c 6.863 1515.469 1.344 1504.426 0.215 1492.535 c -0.914
 1480.641 2.434 1468.758 9.602 1459.199 c h
297.602 1075.199 m f*
384 384 m 384.008 284.934 422.305 189.707 490.879 118.215 c 559.457 46.723
 653.008 4.5 751.988 0.371 c 850.965 -3.762 947.711 30.52 1022.004 96.047
 c 1096.301 161.574 1142.398 253.281 1150.66 352 c 1158.926 450.719 1128.719
 548.812 1066.352 625.781 c 1003.988 702.754 914.289 752.641 816 765.023
 c 816 1296 l 816 1313.148 806.852 1328.996 792 1337.57 c 777.148 1346.145
 758.852 1346.145 744 1337.57 c 729.148 1328.996 720 1313.148 720 1296 c
 720 765.121 l 627.164 753.426 541.793 708.234 479.926 638.039 c 418.055
 567.844 383.945 477.473 384 383.902 c h
384 384 m f*
Q Q
showpage
%%Trailer
%%EOF
