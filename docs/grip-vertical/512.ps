%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 120 24 240 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 120 24 240 360
384 384 cairo_set_page_size
%%EndPageSetup
q 120 24 120 336 rectclip
1 0 0 -1 0 384 cm q
0 g
168 48 m 168 56.574 163.426 64.496 156 68.785 c 148.574 73.07 139.426 73.07
 132 68.785 c 124.574 64.496 120 56.574 120 48 c 120 39.426 124.574 31.504
 132 27.215 c 139.426 22.93 148.574 22.93 156 27.215 c 163.426 31.504 168
 39.426 168 48 c 240 48 m 240 56.574 235.426 64.496 228 68.785 c 220.574
 73.07 211.426 73.07 204 68.785 c 196.574 64.496 192 56.574 192 48 c 192
 39.426 196.574 31.504 204 27.215 c 211.426 22.93 220.574 22.93 228 27.215
 c 235.426 31.504 240 39.426 240 48 c 168 120 m 168 128.574 163.426 136.496
 156 140.785 c 148.574 145.07 139.426 145.07 132 140.785 c 124.574 136.496
 120 128.574 120 120 c 120 111.426 124.574 103.504 132 99.215 c 139.426 
94.93 148.574 94.93 156 99.215 c 163.426 103.504 168 111.426 168 120 c 240
 120 m 240 128.574 235.426 136.496 228 140.785 c 220.574 145.07 211.426 
145.07 204 140.785 c 196.574 136.496 192 128.574 192 120 c 192 111.426 196.574
 103.504 204 99.215 c 211.426 94.93 220.574 94.93 228 99.215 c 235.426 103.504
 240 111.426 240 120 c 168 192 m 168 200.574 163.426 208.496 156 212.785
 c 148.574 217.07 139.426 217.07 132 212.785 c 124.574 208.496 120 200.574
 120 192 c 120 183.426 124.574 175.504 132 171.215 c 139.426 166.93 148.574
 166.93 156 171.215 c 163.426 175.504 168 183.426 168 192 c 240 192 m 240
 200.574 235.426 208.496 228 212.785 c 220.574 217.07 211.426 217.07 204
 212.785 c 196.574 208.496 192 200.574 192 192 c 192 183.426 196.574 175.504
 204 171.215 c 211.426 166.93 220.574 166.93 228 171.215 c 235.426 175.504
 240 183.426 240 192 c 168 264 m 168 272.574 163.426 280.496 156 284.785
 c 148.574 289.07 139.426 289.07 132 284.785 c 124.574 280.496 120 272.574
 120 264 c 120 255.426 124.574 247.504 132 243.215 c 139.426 238.93 148.574
 238.93 156 243.215 c 163.426 247.504 168 255.426 168 264 c 240 264 m 240
 272.574 235.426 280.496 228 284.785 c 220.574 289.07 211.426 289.07 204
 284.785 c 196.574 280.496 192 272.574 192 264 c 192 255.426 196.574 247.504
 204 243.215 c 211.426 238.93 220.574 238.93 228 243.215 c 235.426 247.504
 240 255.426 240 264 c 168 336 m 168 344.574 163.426 352.496 156 356.785
 c 148.574 361.07 139.426 361.07 132 356.785 c 124.574 352.496 120 344.574
 120 336 c 120 327.426 124.574 319.504 132 315.215 c 139.426 310.93 148.574
 310.93 156 315.215 c 163.426 319.504 168 327.426 168 336 c 240 336 m 240
 344.574 235.426 352.496 228 356.785 c 220.574 361.07 211.426 361.07 204
 356.785 c 196.574 352.496 192 344.574 192 336 c 192 327.426 196.574 319.504
 204 315.215 c 211.426 310.93 220.574 310.93 228 315.215 c 235.426 319.504
 240 327.426 240 336 c f
Q Q
showpage
%%Trailer
%%EOF
