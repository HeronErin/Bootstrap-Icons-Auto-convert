%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 240 48 480 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 240 48 480 720
768 768 cairo_set_page_size
%%EndPageSetup
q 240 48 240 672 rectclip
1 0 0 -1 0 768 cm q
0 g
336 96 m 336 113.148 326.852 128.996 312 137.57 c 297.148 146.145 278.852
 146.145 264 137.57 c 249.148 128.996 240 113.148 240 96 c 240 78.852 249.148
 63.004 264 54.43 c 278.852 45.855 297.148 45.855 312 54.43 c 326.852 63.004
 336 78.852 336 96 c 480 96 m 480 113.148 470.852 128.996 456 137.57 c 441.148
 146.145 422.852 146.145 408 137.57 c 393.148 128.996 384 113.148 384 96
 c 384 78.852 393.148 63.004 408 54.43 c 422.852 45.855 441.148 45.855 456
 54.43 c 470.852 63.004 480 78.852 480 96 c 336 240 m 336 257.148 326.852
 272.996 312 281.57 c 297.148 290.145 278.852 290.145 264 281.57 c 249.148
 272.996 240 257.148 240 240 c 240 222.852 249.148 207.004 264 198.43 c 
278.852 189.855 297.148 189.855 312 198.43 c 326.852 207.004 336 222.852
 336 240 c 480 240 m 480 257.148 470.852 272.996 456 281.57 c 441.148 290.145
 422.852 290.145 408 281.57 c 393.148 272.996 384 257.148 384 240 c 384 
222.852 393.148 207.004 408 198.43 c 422.852 189.855 441.148 189.855 456
 198.43 c 470.852 207.004 480 222.852 480 240 c 336 384 m 336 401.148 326.852
 416.996 312 425.57 c 297.148 434.145 278.852 434.145 264 425.57 c 249.148
 416.996 240 401.148 240 384 c 240 366.852 249.148 351.004 264 342.43 c 
278.852 333.855 297.148 333.855 312 342.43 c 326.852 351.004 336 366.852
 336 384 c 480 384 m 480 401.148 470.852 416.996 456 425.57 c 441.148 434.145
 422.852 434.145 408 425.57 c 393.148 416.996 384 401.148 384 384 c 384 
366.852 393.148 351.004 408 342.43 c 422.852 333.855 441.148 333.855 456
 342.43 c 470.852 351.004 480 366.852 480 384 c 336 528 m 336 545.148 326.852
 560.996 312 569.57 c 297.148 578.145 278.852 578.145 264 569.57 c 249.148
 560.996 240 545.148 240 528 c 240 510.852 249.148 495.004 264 486.43 c 
278.852 477.855 297.148 477.855 312 486.43 c 326.852 495.004 336 510.852
 336 528 c 480 528 m 480 545.148 470.852 560.996 456 569.57 c 441.148 578.145
 422.852 578.145 408 569.57 c 393.148 560.996 384 545.148 384 528 c 384 
510.852 393.148 495.004 408 486.43 c 422.852 477.855 441.148 477.855 456
 486.43 c 470.852 495.004 480 510.852 480 528 c 336 672 m 336 689.148 326.852
 704.996 312 713.57 c 297.148 722.145 278.852 722.145 264 713.57 c 249.148
 704.996 240 689.148 240 672 c 240 654.852 249.148 639.004 264 630.43 c 
278.852 621.855 297.148 621.855 312 630.43 c 326.852 639.004 336 654.852
 336 672 c 480 672 m 480 689.148 470.852 704.996 456 713.57 c 441.148 722.145
 422.852 722.145 408 713.57 c 393.148 704.996 384 689.148 384 672 c 384 
654.852 393.148 639.004 408 630.43 c 422.852 621.855 441.148 621.855 456
 630.43 c 470.852 639.004 480 654.852 480 672 c f
Q Q
showpage
%%Trailer
%%EOF
