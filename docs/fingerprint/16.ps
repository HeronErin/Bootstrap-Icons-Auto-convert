%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6.047 4.875 m 6.145 4.875 6.238 4.914 6.309 4.984 c 6.379 5.055 6.422 5.152
 6.422 5.25 c 6.422 5.832 l 6.418 6.727 6.281 7.617 6.008 8.473 c 5.008 
11.578 l 4.941 11.77 4.734 11.871 4.539 11.809 c 4.344 11.746 4.238 11.543
 4.293 11.348 c 5.289 8.242 l 5.293 8.242 l 5.543 7.465 5.668 6.648 5.668
 5.832 c 5.668 5.25 l 5.668 5.043 5.836 4.875 6.043 4.875 c h
6.047 4.875 m f
4.547 5.25 m 4.547 4.422 5.215 3.75 6.047 3.75 c 6.875 3.75 7.547 4.422
 7.547 5.25 c 7.547 5.457 7.379 5.625 7.172 5.625 c 6.965 5.625 6.797 5.457
 6.797 5.25 c 6.797 4.836 6.461 4.5 6.047 4.5 c 5.629 4.5 5.297 4.836 5.297
 5.25 c 5.297 5.5 l 5.297 5.805 5.281 6.113 5.246 6.414 c 5.219 6.617 5.035
 6.758 4.836 6.738 c 4.633 6.715 4.484 6.539 4.5 6.336 c 4.531 6.059 4.547
 5.781 4.547 5.5 c h
7.18 6 m 7.176 6 l 7.277 6.004 7.371 6.043 7.438 6.117 c 7.508 6.188 7.543
 6.285 7.543 6.383 c 7.52 7.238 7.371 8.082 7.102 8.891 c 6.152 11.742 l
 6.152 11.738 l 6.086 11.934 5.875 12.043 5.676 11.977 c 5.48 11.91 5.375
 11.699 5.441 11.5 c 6.391 8.648 l 6.391 8.652 l 6.637 7.914 6.773 7.145
 6.793 6.367 c 6.793 6.266 6.836 6.172 6.91 6.102 c 6.98 6.035 7.078 5.996
 7.176 6 c 4.66 7.586 m 4.754 7.617 4.836 7.68 4.879 7.77 c 4.926 7.859 
4.938 7.961 4.906 8.055 c 3.93 11.203 l 3.902 11.301 3.836 11.383 3.746 
11.43 c 3.66 11.477 3.555 11.488 3.457 11.457 c 3.363 11.43 3.281 11.359
 3.238 11.273 c 3.191 11.184 3.184 11.078 3.215 10.98 c 4.191 7.832 l 4.254
 7.637 4.461 7.523 4.66 7.586 c f
3.57 4.375 m 3.996 3.172 5.23 2.449 6.488 2.664 c 7.746 2.883 8.668 3.973
 8.668 5.25 c 8.668 5.457 8.5 5.625 8.293 5.625 c 8.086 5.625 7.918 5.457
 7.918 5.25 c 7.918 4.336 7.262 3.555 6.359 3.402 c 5.461 3.246 4.582 3.766
 4.277 4.625 c 4.207 4.82 3.992 4.922 3.797 4.855 c 3.602 4.785 3.5 4.57
 3.57 4.375 c 3.797 5.629 m 3.793 5.629 l 4 5.648 4.152 5.832 4.133 6.035
 c 4.082 6.555 3.98 7.062 3.832 7.559 c 2.914 10.613 l 2.855 10.812 2.645
 10.926 2.449 10.867 c 2.25 10.805 2.137 10.598 2.195 10.398 c 3.113 7.344
 l 3.246 6.895 3.34 6.43 3.383 5.965 c 3.406 5.758 3.59 5.605 3.793 5.625
 c h
8.297 6.113 m 8.293 6.113 l 8.395 6.113 8.488 6.152 8.559 6.223 c 8.629
 6.293 8.668 6.387 8.668 6.488 c 8.668 7.449 8.508 8.402 8.195 9.309 c 7.379
 11.668 l 7.305 11.855 7.098 11.949 6.906 11.883 c 6.715 11.816 6.613 11.613
 6.668 11.422 c 7.484 9.062 l 7.77 8.234 7.918 7.363 7.918 6.484 c 7.922
 6.488 l 7.922 6.281 8.09 6.113 8.297 6.113 c h
8.297 6.113 m f
2.926 3.168 m 3.781 1.891 5.324 1.262 6.828 1.582 c 7.031 1.625 7.16 1.824
 7.117 2.027 c 7.074 2.23 6.875 2.359 6.672 2.316 c 5.469 2.059 4.234 2.562
 3.551 3.582 c 3.434 3.75 3.203 3.797 3.035 3.68 c 2.863 3.566 2.816 3.34
 2.926 3.168 c 7.965 2.453 m 7.965 2.449 l 8.102 2.293 8.34 2.277 8.496 
2.41 c 9.32 3.125 9.797 4.16 9.793 5.25 c 9.793 6.375 l 9.793 6.582 9.625
 6.75 9.418 6.75 c 9.211 6.75 9.043 6.582 9.043 6.375 c 9.043 5.25 l 9.047
 4.379 8.664 3.547 8.004 2.98 c 7.848 2.844 7.832 2.605 7.965 2.449 c 2.762
 4.383 m 2.859 4.395 2.945 4.449 3.008 4.527 c 3.066 4.609 3.09 4.711 3.078
 4.809 c 3.055 4.953 3.047 5.102 3.047 5.25 c 3.047 5.781 2.973 6.312 2.824
 6.824 c 1.969 9.766 l 1.965 9.766 l 1.938 9.863 1.875 9.949 1.785 9.996
 c 1.699 10.047 1.594 10.059 1.496 10.031 c 1.402 10.004 1.32 9.938 1.273
 9.848 c 1.223 9.758 1.215 9.652 1.246 9.559 c 2.102 6.617 l 2.23 6.172 
2.293 5.711 2.293 5.25 c 2.293 5.062 2.305 4.879 2.332 4.699 c 2.336 4.699
 l 2.348 4.598 2.402 4.512 2.48 4.453 c 2.562 4.391 2.66 4.367 2.762 4.383
 c 9.422 7.129 m 9.422 7.125 l 9.629 7.145 9.781 7.324 9.762 7.531 c 9.699
 8.281 9.539 9.02 9.281 9.73 c 8.723 11.281 l 8.727 11.281 l 8.652 11.473
 8.441 11.574 8.246 11.504 c 8.055 11.434 7.953 11.223 8.02 11.031 c 8.578
 9.48 l 8.578 9.477 l 8.812 8.828 8.957 8.152 9.016 7.469 c 9.035 7.262 
9.215 7.109 9.422 7.125 c f
3.609 1.027 m 5.117 0.156 6.973 0.156 8.484 1.027 c 9.992 1.898 10.922 
3.508 10.922 5.25 c 10.922 5.457 10.754 5.625 10.547 5.625 c 10.34 5.625
 10.172 5.457 10.172 5.25 c 10.172 3.777 9.383 2.414 8.109 1.676 c 6.832
 0.938 5.258 0.938 3.984 1.676 c 3.805 1.77 3.586 1.707 3.484 1.531 c 3.383
 1.359 3.438 1.137 3.609 1.027 c 2.941 1.969 m 3.016 2.035 3.059 2.129 3.066
 2.23 c 3.07 2.328 3.035 2.426 2.969 2.5 c 2.293 3.254 1.918 4.234 1.922
 5.25 c 1.922 5.457 1.754 5.625 1.547 5.625 c 1.34 5.625 1.172 5.457 1.172
 5.25 c 1.172 4.004 1.641 2.863 2.414 2 c 2.41 2 l 2.477 1.926 2.57 1.883
 2.668 1.875 c 2.77 1.871 2.867 1.902 2.941 1.969 c h
1.438 6.016 m 1.637 6.07 1.75 6.277 1.695 6.477 c 1.109 8.551 l 1.113 8.551
 l 1.09 8.652 1.023 8.738 0.938 8.789 c 0.848 8.84 0.742 8.855 0.645 8.828
 c 0.547 8.801 0.465 8.734 0.414 8.645 c 0.367 8.551 0.359 8.445 0.391 8.352
 c 0.973 6.277 l 0.973 6.273 l 1 6.18 1.062 6.098 1.152 6.051 c 1.238 6 
1.34 5.988 1.438 6.016 c 10.551 6.375 m 10.547 6.375 l 10.648 6.379 10.742
 6.418 10.812 6.492 c 10.879 6.562 10.918 6.66 10.918 6.758 c 10.895 7.883
 10.797 9.027 10.371 10.156 c 10.32 10.297 l 10.242 10.488 10.031 10.578
 9.84 10.508 c 9.648 10.438 9.551 10.227 9.617 10.035 c 9.668 9.895 l 10.047
 8.883 10.145 7.84 10.164 6.742 c 10.168 6.742 l 10.168 6.645 10.211 6.551
 10.281 6.48 c 10.352 6.41 10.449 6.375 10.547 6.375 c f
Q Q
showpage
%%Trailer
%%EOF
