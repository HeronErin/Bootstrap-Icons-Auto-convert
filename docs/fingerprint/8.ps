%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.023 2.438 m 3.125 2.438 3.211 2.52 3.211 2.625 c 3.211 2.914 l 3.211 
3.363 3.141 3.809 3.004 4.234 c 2.504 5.785 l 2.504 5.789 l 2.422 6.02 2.078
 5.906 2.148 5.672 c 2.648 4.117 l 2.645 4.121 l 2.77 3.73 2.836 3.324 2.836
 2.914 c 2.836 2.625 l 2.836 2.52 2.918 2.438 3.023 2.438 c h
3.023 2.438 m f
2.273 2.625 m 2.273 2.211 2.609 1.875 3.023 1.875 c 3.438 1.875 3.773 2.211
 3.773 2.625 c 3.773 2.875 3.398 2.875 3.398 2.625 c 3.398 2.418 3.23 2.25
 3.023 2.25 c 2.816 2.25 2.648 2.418 2.648 2.625 c 2.648 2.75 l 2.648 2.902
 2.641 3.055 2.625 3.207 c 2.621 3.207 l 2.59 3.449 2.23 3.41 2.25 3.168
 c 2.266 3.027 2.273 2.891 2.273 2.75 c h
3.59 3 m 3.691 3.004 3.773 3.09 3.77 3.191 c 3.762 3.617 3.688 4.039 3.551
 4.445 c 3.074 5.871 l 2.996 6.105 2.641 5.988 2.719 5.75 c 3.195 4.324 
l 3.316 3.957 3.387 3.57 3.395 3.184 c 3.398 3.078 3.484 2.996 3.59 3 c 
2.332 3.793 m 2.328 3.793 l 2.43 3.824 2.484 3.93 2.453 4.027 c 1.965 5.602
 l 1.938 5.703 1.828 5.762 1.73 5.73 c 1.629 5.699 1.574 5.59 1.605 5.492
 c 2.094 3.918 l 2.125 3.816 2.23 3.762 2.328 3.793 c f
1.785 2.188 m 2 1.586 2.613 1.227 3.242 1.332 c 3.875 1.441 4.332 1.984
 4.336 2.625 c 4.336 2.875 3.961 2.875 3.961 2.625 c 3.961 2.168 3.629 1.777
 3.18 1.699 c 2.73 1.625 2.289 1.883 2.137 2.312 c 2.055 2.547 1.699 2.422
 1.785 2.188 c 1.898 2.812 m 2 2.824 2.074 2.914 2.066 3.02 c 2.039 3.277
 1.988 3.531 1.914 3.781 c 1.457 5.309 l 1.387 5.547 1.027 5.438 1.098 5.199
 c 1.555 3.672 l 1.625 3.445 1.668 3.215 1.691 2.98 c 1.703 2.879 1.793 
2.805 1.898 2.812 c h
4.148 3.055 m 4.25 3.055 4.336 3.141 4.336 3.242 c 4.336 3.723 4.258 4.199
 4.098 4.652 c 3.688 5.832 l 3.602 6.055 3.266 5.941 3.336 5.711 c 3.746
 4.531 l 3.891 4.117 3.961 3.68 3.961 3.242 c 3.961 3.141 4.043 3.055 4.148
 3.055 c h
4.148 3.055 m f
1.465 1.582 m 1.891 0.945 2.664 0.629 3.414 0.789 c 3.66 0.844 3.582 1.211
 3.336 1.156 c 2.734 1.031 2.117 1.281 1.773 1.793 c 1.633 1.992 1.332 1.789
 1.465 1.582 c 3.984 1.223 m 3.984 1.227 l 4.051 1.148 4.168 1.137 4.246
 1.207 c 4.66 1.562 4.898 2.078 4.898 2.625 c 4.898 3.188 l 4.898 3.438 
4.523 3.438 4.523 3.188 c 4.523 2.625 l 4.523 2.188 4.332 1.773 4.004 1.488
 c 3.926 1.422 3.914 1.305 3.984 1.227 c 1.379 2.191 m 1.484 2.207 1.555
 2.301 1.539 2.402 c 1.527 2.473 1.523 2.547 1.523 2.625 c 1.523 2.891 1.484
 3.156 1.41 3.414 c 0.984 4.887 l 0.984 4.883 l 0.957 4.984 0.852 5.047 
0.75 5.016 c 0.648 4.984 0.59 4.879 0.621 4.777 c 1.051 3.309 l 1.113 3.086
 1.148 2.855 1.148 2.625 c 1.148 2.531 1.156 2.438 1.168 2.348 c 1.184 2.246
 1.277 2.176 1.379 2.191 c 4.711 3.562 m 4.812 3.57 4.891 3.664 4.883 3.766
 c 4.852 4.141 4.77 4.512 4.645 4.867 c 4.367 5.645 l 4.363 5.641 l 4.277
 5.871 3.93 5.746 4.012 5.516 c 4.293 4.738 l 4.289 4.738 l 4.406 4.414 
4.48 4.078 4.508 3.734 c 4.516 3.633 4.609 3.555 4.711 3.562 c f
1.805 0.516 m 2.559 0.078 3.488 0.078 4.242 0.516 c 4.996 0.949 5.461 1.754
 5.461 2.625 c 5.461 2.875 5.086 2.875 5.086 2.625 c 5.086 1.887 4.691 1.207
 4.055 0.84 c 3.414 0.469 2.629 0.469 1.992 0.84 c 1.777 0.949 1.602 0.641
 1.805 0.516 c 1.473 0.988 m 1.469 0.984 l 1.547 1.055 1.555 1.172 1.484
 1.25 c 1.145 1.629 0.961 2.117 0.961 2.625 c 0.961 2.875 0.586 2.875 0.586
 2.625 c 0.586 2 0.82 1.43 1.207 1 c 1.273 0.922 1.395 0.918 1.469 0.984
 c h
0.719 3.008 m 0.816 3.035 0.875 3.141 0.848 3.238 c 0.555 4.277 l 0.531
 4.379 0.426 4.441 0.324 4.414 c 0.219 4.383 0.16 4.277 0.195 4.176 c 0.488
 3.137 l 0.516 3.039 0.617 2.98 0.719 3.008 c 5.273 3.188 m 5.379 3.191 
5.461 3.277 5.457 3.379 c 5.445 3.941 5.398 4.512 5.184 5.078 c 5.156 5.148
 l 5.16 5.148 l 5.066 5.375 4.73 5.246 4.809 5.016 c 4.836 4.945 l 5.027
 4.438 5.074 3.918 5.086 3.371 c 5.082 3.371 l 5.086 3.27 5.172 3.188 5.273
 3.188 c f
Q Q
showpage
%%Trailer
%%EOF
