%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 95 0 1441 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 95 0 1441 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 95 0 1346 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 1104 m 96 1116.73 101.059 1128.938 110.059 1137.941 c 119.062 1146.941
 131.27 1152 144 1152 c 1276.129 1152 l 974.016 1454.016 l 961.875 1466.156
 957.133 1483.855 961.578 1500.438 c 966.02 1517.023 978.977 1529.98 995.562
 1534.422 c 1012.145 1538.867 1029.844 1534.125 1041.984 1521.984 c 1425.984
 1137.984 l 1435.012 1128.98 1440.086 1116.75 1440.086 1104 c 1440.086 1091.25
 1435.012 1079.02 1425.984 1070.016 c 1041.984 686.016 l 1029.844 673.875
 1012.145 669.133 995.562 673.578 c 978.977 678.02 966.02 690.977 961.578
 707.562 c 957.133 724.145 961.875 741.844 974.016 753.984 c 1276.129 1056
 l 144 1056 l 131.27 1056 119.062 1061.059 110.059 1070.059 c 101.059 1079.062
 96 1091.27 96 1104 c 1440 432 m 1440 444.73 1434.941 456.938 1425.941 465.941
 c 1416.938 474.941 1404.73 480 1392 480 c 259.871 480 l 561.984 782.016
 l 574.125 794.156 578.867 811.855 574.422 828.438 c 569.98 845.023 557.023
 857.98 540.438 862.422 c 523.855 866.867 506.156 862.125 494.016 849.984
 c 110.016 465.984 l 100.988 456.98 95.914 444.75 95.914 432 c 95.914 419.25
 100.988 407.02 110.016 398.016 c 494.016 14.016 l 506.156 1.875 523.855
 -2.867 540.438 1.578 c 557.023 6.02 569.98 18.977 574.422 35.562 c 578.867
 52.145 574.125 69.844 561.984 81.984 c 259.871 384 l 1392 384 l 1404.73
 384 1416.938 389.059 1425.941 398.059 c 1434.941 407.062 1440 419.27 1440
 432 c f*
Q Q
showpage
%%Trailer
%%EOF
