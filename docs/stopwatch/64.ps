%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 0 45 47
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 0 45 47
48 48 cairo_set_page_size
%%EndPageSetup
q 3 0 42 47 rectclip
1 0 0 -1 0 48 cm q
0 g
25.5 16.801 m 25.5 15.973 24.828 15.301 24 15.301 c 23.172 15.301 22.5 
15.973 22.5 16.801 c 22.5 25.5 l 13.5 25.5 l 12.672 25.5 12 26.172 12 27
 c 12 27.828 12.672 28.5 13.5 28.5 c 24 28.5 l 24.398 28.5 24.781 28.344
 25.062 28.062 c 25.344 27.781 25.5 27.398 25.5 27 c h
25.5 16.801 m f
19.5 3 m 19.5 2.172 20.172 1.5 21 1.5 c 27 1.5 l 27.828 1.5 28.5 2.172 
28.5 3 c 28.5 3.828 27.828 4.5 27 4.5 c 27 6.211 l 31.078 6.801 34.781 8.551
 37.754 11.133 c 37.789 11.094 l 38.852 10.031 l 37.789 8.973 l 37.789 8.969
 l 37.508 8.688 37.348 8.309 37.348 7.91 c 37.348 7.512 37.504 7.129 37.785
 6.848 c 38.371 6.262 39.324 6.262 39.91 6.848 c 44.152 11.094 l 44.152 
11.09 l 44.441 11.371 44.605 11.754 44.609 12.156 c 44.613 12.559 44.453
 12.945 44.168 13.23 c 43.887 13.516 43.5 13.672 43.098 13.668 c 42.695 
13.668 42.309 13.5 42.031 13.211 c 40.973 12.148 l 39.91 13.211 l 39.871
 13.246 l 43.973 17.984 45.746 24.305 44.707 30.48 c 43.668 36.66 39.926
 42.051 34.5 45.184 c 29.074 48.316 22.531 48.863 16.66 46.676 c 10.793 
44.488 6.203 39.793 4.152 33.871 c 2.105 27.949 2.805 21.426 6.062 16.074
 c 9.32 10.723 14.801 7.105 21 6.215 c 21 4.5 l 20.172 4.5 19.5 3.828 19.5
 3 c 24 9 m 17.57 9 11.629 12.434 8.414 18 c 5.199 23.57 5.199 30.434 8.414
 36 c 11.629 41.57 17.57 45 24.004 45 c 30.434 45 36.375 41.566 39.59 36
 c 42.805 30.43 42.805 23.566 39.59 18 c 36.375 12.43 30.43 9 24 9 c f
Q Q
showpage
%%Trailer
%%EOF
