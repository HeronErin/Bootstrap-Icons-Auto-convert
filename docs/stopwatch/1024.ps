%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 47 0 720 744
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 47 0 720 744
768 768 cairo_set_page_size
%%EndPageSetup
q 47 0 673 744 rectclip
1 0 0 -1 0 768 cm q
0 g
408 268.801 m 408 260.227 403.426 252.301 396 248.016 c 388.574 243.727
 379.426 243.727 372 248.016 c 364.574 252.301 360 260.227 360 268.801 c
 360 408 l 216 408 l 207.426 408 199.504 412.574 195.215 420 c 190.93 427.426
 190.93 436.574 195.215 444 c 199.504 451.426 207.426 456 216 456 c 384 
456 l 390.363 456 396.469 453.473 400.969 448.969 c 405.473 444.469 408 
438.363 408 432 c h
408 268.801 m f
312 48 m 312 41.637 314.527 35.531 319.031 31.031 c 323.531 26.527 329.637
 24 336 24 c 432 24 l 440.574 24 448.496 28.574 452.785 36 c 457.07 43.426
 457.07 52.574 452.785 60 c 448.496 67.426 440.574 72 432 72 c 432 99.359
 l 497.281 108.766 556.512 136.801 604.031 178.078 c 604.605 177.453 l 621.598
 160.461 l 604.605 143.516 l 604.609 143.52 l 600.102 139.02 597.566 132.914
 597.562 126.547 c 597.559 120.176 600.082 114.066 604.586 109.559 c 609.086
 105.055 615.191 102.52 621.559 102.516 c 627.93 102.512 634.039 105.035
 638.543 109.535 c 706.414 177.457 l 711.047 181.93 713.688 188.074 713.742
 194.512 c 713.797 200.949 711.266 207.137 706.715 211.691 c 702.16 216.242
 695.973 218.773 689.535 218.719 c 683.098 218.66 676.953 216.023 672.48
 211.391 c 655.535 194.398 l 638.543 211.391 l 637.918 211.965 l 637.922
 211.969 l 686.793 268.387 715.488 339.469 719.48 414.004 c 723.469 488.539
 702.527 562.281 659.957 623.594 c 617.387 684.906 555.613 730.301 484.387
 752.609 c 413.156 774.918 336.523 772.875 266.586 746.801 c 196.645 720.727
 137.379 672.105 98.141 608.609 c 58.898 545.117 41.918 470.363 49.875 396.145
 c 57.832 321.93 90.273 252.477 142.086 198.746 c 193.895 145.012 262.121
 110.062 336 99.406 c 336 72 l 329.637 72 323.531 69.473 319.031 64.969 
c 314.527 60.469 312 54.363 312 48 c 384 144 m 307.617 144.008 234.367 174.355
 180.359 228.371 c 126.355 282.387 96.02 355.641 96.023 432.023 c 96.031
 508.406 126.379 581.656 180.395 635.664 c 234.41 689.668 307.664 720.008
 384.047 720 c 460.43 719.992 533.684 689.645 587.688 635.629 c 641.695 
581.613 672.031 508.359 672.023 431.977 c 672.02 355.594 641.668 282.344
 587.652 228.336 c 533.641 174.332 460.383 143.992 384 144 c f
Q Q
showpage
%%Trailer
%%EOF
