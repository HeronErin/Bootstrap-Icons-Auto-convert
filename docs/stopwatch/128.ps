%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 5 0 90 93
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 5 0 90 93
96 96 cairo_set_page_size
%%EndPageSetup
q 5 0 85 93 rectclip
1 0 0 -1 0 96 cm q
0 g
51 33.602 m 51 31.941 49.656 30.602 48 30.602 c 46.344 30.602 45 31.941
 45 33.602 c 45 51 l 27 51 l 25.344 51 24 52.344 24 54 c 24 55.656 25.344
 57 27 57 c 48 57 l 48.797 57 49.559 56.684 50.121 56.121 c 50.684 55.559
 51 54.797 51 54 c h
51 33.602 m f
39 6 m 39 4.344 40.344 3 42 3 c 54 3 l 55.656 3 57 4.344 57 6 c 57 7.656
 55.656 9 54 9 c 54 12.422 l 62.16 13.598 69.562 17.102 75.504 22.262 c 
75.574 22.184 l 77.699 20.059 l 75.574 17.941 l 75.012 17.379 74.695 16.613
 74.695 15.816 c 74.695 15.023 75.012 14.258 75.574 13.695 c 76.746 12.523
 78.645 12.52 79.816 13.691 c 88.301 22.18 l 88.301 22.184 l 88.879 22.742
 89.211 23.508 89.219 24.312 c 89.227 25.117 88.906 25.891 88.34 26.461 
c 87.77 27.031 86.996 27.348 86.191 27.34 c 85.387 27.332 84.617 27.004 
84.059 26.426 c 81.941 24.301 l 79.816 26.426 l 79.738 26.496 l 87.945 35.965
 91.492 48.605 89.414 60.961 c 87.336 73.32 79.848 84.102 68.996 90.367 
c 58.145 96.633 45.062 97.727 33.324 93.352 c 21.582 88.973 12.41 79.582
 8.309 67.742 c 4.207 55.902 5.605 42.852 12.125 32.148 c 18.645 21.445 
29.598 14.215 42 12.426 c 42 9 l 40.344 9 39 7.656 39 6 c 48 18 m 35.137
 18 23.254 24.863 16.824 36.004 c 10.395 47.141 10.395 60.863 16.828 72.004
 c 23.258 83.141 35.145 90 48.008 90 c 60.867 90 72.75 83.137 79.18 71.996
 c 85.609 60.859 85.609 47.137 79.18 35.996 c 72.746 24.859 60.863 18 48
 18 c f
Q Q
showpage
%%Trailer
%%EOF
