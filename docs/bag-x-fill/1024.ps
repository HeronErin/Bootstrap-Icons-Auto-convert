%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
504 168 m 504 125.129 481.129 85.512 444 64.078 c 406.871 42.641 361.129
 42.641 324 64.078 c 286.871 85.512 264 125.129 264 168 c 264 192 l 504 
192 l h
552 168 m 552 192 l 720 192 l 720 672 l 720 697.461 709.887 721.879 691.883
 739.883 c 673.879 757.887 649.461 768 624 768 c 144 768 l 118.539 768 94.121
 757.887 76.117 739.883 c 58.113 721.879 48 697.461 48 672 c 48 192 l 216
 192 l 216 168 l 216 123.445 233.699 80.711 265.207 49.207 c 296.711 17.699
 339.445 0 384 0 c 428.555 0 471.289 17.699 502.793 49.207 c 534.301 80.711
 552 123.445 552 168 c 328.992 391.008 m 322.922 384.938 314.074 382.566
 305.781 384.789 c 297.488 387.012 291.012 393.488 288.789 401.781 c 286.566
 410.074 288.938 418.922 295.008 424.992 c 350.062 480 l 295.008 535.008
 l 288.938 541.078 286.566 549.926 288.789 558.219 c 291.012 566.512 297.488
 572.988 305.781 575.211 c 314.074 577.434 322.922 575.062 328.992 568.992
 c 384 513.938 l 439.008 568.992 l 445.078 575.062 453.926 577.434 462.219
 575.211 c 470.512 572.988 476.988 566.512 479.211 558.219 c 481.434 549.926
 479.062 541.078 472.992 535.008 c 417.938 480 l 472.992 424.992 l 479.062
 418.922 481.434 410.074 479.211 401.781 c 476.988 393.488 470.512 387.012
 462.219 384.789 c 453.926 382.566 445.078 384.938 439.008 391.008 c 384
 446.062 l h
328.992 391.008 m f*
Q Q
showpage
%%Trailer
%%EOF
