%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1008 336 m 1008 272.348 982.715 211.305 937.707 166.293 c 892.695 121.285
 831.652 96 768 96 c 704.348 96 643.305 121.285 598.293 166.293 c 553.285
 211.305 528 272.348 528 336 c 528 384 l 1008 384 l h
1104 336 m 1104 384 l 1440 384 l 1440 1344 l 1440 1377.703 1431.129 1410.812
 1414.277 1440 c 1397.426 1469.188 1373.188 1493.426 1344 1510.277 c 1314.812
 1527.129 1281.703 1536 1248 1536 c 288 1536 l 237.078 1536 188.242 1515.773
 152.234 1479.766 c 116.227 1443.758 96 1394.922 96 1344 c 96 384 l 432 
384 l 432 336 l 432 246.887 467.398 161.426 530.414 98.414 c 593.426 35.398
 678.887 0 768 0 c 857.113 0 942.574 35.398 1005.586 98.414 c 1068.602 161.426
 1104 246.887 1104 336 c 657.984 782.016 m 645.844 769.875 628.145 765.133
 611.562 769.578 c 594.977 774.02 582.02 786.977 577.578 803.562 c 573.133
 820.145 577.875 837.844 590.016 849.984 c 700.129 960 l 590.016 1070.016
 l 577.875 1082.156 573.133 1099.855 577.578 1116.438 c 582.02 1133.023 
594.977 1145.98 611.562 1150.422 c 628.145 1154.867 645.844 1150.125 657.984
 1137.984 c 768 1027.871 l 878.016 1137.984 l 890.156 1150.125 907.855 1154.867
 924.438 1150.422 c 941.023 1145.98 953.98 1133.023 958.422 1116.438 c 962.867
 1099.855 958.125 1082.156 945.984 1070.016 c 835.871 960 l 945.984 849.984
 l 958.125 837.844 962.867 820.145 958.422 803.562 c 953.98 786.977 941.023
 774.02 924.438 769.578 c 907.855 765.133 890.156 769.875 878.016 782.016
 c 768 892.129 l h
657.984 782.016 m f*
Q Q
showpage
%%Trailer
%%EOF
