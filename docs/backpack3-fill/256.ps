%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 18 0 174 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 18 0 174 192
192 192 cairo_set_page_size
%%EndPageSetup
q 18 0 156 192 rectclip
1 0 0 -1 0 192 cm q
0 g
60 120 m 60 156 l 132 156 l 132 120 l 120 120 l 120 126 l 120 129.312 117.312
 132 114 132 c 110.688 132 108 129.312 108 126 c 108 120 l h
60 120 m f
72 24 m 72 28.094 l 66.469 30.055 61.195 32.688 56.305 35.93 c 51.312 20.965
 l 49.902 16.727 46.258 13.625 41.848 12.91 c 37.441 12.191 33.004 13.984
 30.324 17.555 c 21.086 29.879 l 18.719 33.031 18.047 37.145 19.297 40.883
 c 28.934 69.766 l 28.934 69.77 l 25.668 78.129 23.996 87.023 24 96 c 24
 162 l 24 169.957 27.16 177.586 32.785 183.215 c 38.414 188.84 46.043 192
 54 192 c 138 192 l 145.957 192 153.586 188.84 159.215 183.215 c 164.84 
177.586 168 169.957 168 162 c 168 96 l 168 86.746 166.246 77.891 163.078
 69.77 c 172.691 40.887 l 172.691 40.883 l 173.941 37.148 173.277 33.035
 170.914 29.879 c 161.676 17.555 l 159 13.977 154.555 12.18 150.145 12.898
 c 145.73 13.613 142.082 16.723 140.676 20.965 c 135.695 35.93 l 130.805
 32.684 125.531 30.047 120 28.078 c 120 24 l 120 15.426 115.426 7.504 108
 3.215 c 100.574 -1.07 91.426 -1.07 84 3.215 c 76.574 7.504 72 15.426 72
 24 c 84 24 m 84 17.371 89.371 12 96 12 c 102.629 12 108 17.371 108 24 c
 108 24.996 l 100.055 23.652 91.945 23.652 84 24.996 c h
155.293 55.141 m 152.484 51.074 149.27 47.305 145.691 43.895 c 152.062 
24.754 l 161.301 37.078 l h
46.32 43.895 m 42.742 47.305 39.527 51.074 36.719 55.141 c 30.684 37.078
 l 39.922 24.754 l h
48.48 89.16 m 50.672 73.773 60.176 60.402 73.988 53.277 c 87.797 46.148
 104.203 46.148 118.012 53.277 c 131.824 60.402 141.328 73.773 143.52 89.16
 c 143.992 92.441 141.711 95.48 138.434 95.953 c 135.152 96.422 132.109 
94.145 131.641 90.863 c 129.996 79.324 122.867 69.297 112.508 63.953 c 102.152
 58.605 89.848 58.605 79.492 63.953 c 69.133 69.297 62.004 79.324 60.359
 90.863 c 59.891 94.145 56.848 96.422 53.566 95.953 c 50.289 95.48 48.008
 92.441 48.48 89.16 c 48 114 m 48 110.688 50.688 108 54 108 c 138 108 l 
139.59 108 141.117 108.633 142.242 109.758 c 143.367 110.883 144 112.41 
144 114 c 144 162 l 144 163.59 143.367 165.117 142.242 166.242 c 141.117
 167.367 139.59 168 138 168 c 54 168 l 50.688 168 48 165.312 48 162 c h
48 114 m f
Q Q
showpage
%%Trailer
%%EOF
