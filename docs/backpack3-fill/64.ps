%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 4 0 44 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 4 0 44 48
48 48 cairo_set_page_size
%%EndPageSetup
q 4 0 40 48 rectclip
1 0 0 -1 0 48 cm q
0 g
15 30 m 15 39 l 33 39 l 33 30 l 30 30 l 30 31.5 l 30 32.328 29.328 33 28.5
 33 c 27.672 33 27 32.328 27 31.5 c 27 30 l h
15 30 m f
18 6 m 18 7.023 l 16.617 7.512 15.301 8.172 14.074 8.98 c 12.828 5.238 
l 12.828 5.242 l 12.477 4.184 11.562 3.406 10.461 3.227 c 9.359 3.047 8.25
 3.496 7.582 4.391 c 5.273 7.473 l 5.27 7.469 l 4.68 8.258 4.512 9.285 4.824
 10.223 c 7.234 17.445 l 7.234 17.441 l 6.418 19.531 6 21.758 6 24 c 6 40.5
 l 6 42.488 6.789 44.398 8.195 45.805 c 9.602 47.211 11.512 48 13.5 48 c
 34.5 48 l 36.488 48 38.398 47.211 39.805 45.805 c 41.211 44.398 42 42.488
 42 40.5 c 42 24 l 42 21.688 41.562 19.473 40.77 17.441 c 43.172 10.219 
l 43.172 10.223 l 43.484 9.285 43.32 8.258 42.73 7.469 c 40.422 4.387 l 
40.418 4.391 l 39.75 3.492 38.641 3.047 37.535 3.223 c 36.434 3.402 35.52
 4.18 35.168 5.242 c 33.922 8.984 l 33.926 8.98 l 32.699 8.172 31.383 7.512
 30 7.02 c 30 6 l 30 2.688 27.312 0 24 0 c 20.688 0 18 2.688 18 6 c 21 6
 m 21 4.344 22.344 3 24 3 c 25.656 3 27 4.344 27 6 c 27 6.25 l 25.016 5.914
 22.984 5.914 21 6.25 c h
38.824 13.785 m 38.121 12.77 37.316 11.824 36.422 10.973 c 38.016 6.188
 l 40.324 9.27 l h
11.578 10.973 m 10.688 11.824 9.883 12.77 9.18 13.785 c 7.672 9.27 l 9.98
 6.188 l h
12.117 22.289 m 12.121 22.289 l 12.961 16.375 18.027 11.984 24 11.984 c
 29.973 11.984 35.039 16.375 35.879 22.289 c 35.996 23.109 35.43 23.871 
34.609 23.988 c 33.789 24.105 33.027 23.535 32.91 22.715 c 32.277 18.281
 28.48 14.984 24 14.984 c 19.52 14.984 15.723 18.281 15.09 22.715 c 14.973
 23.535 14.211 24.105 13.391 23.988 c 12.57 23.871 12.004 23.109 12.121 
22.289 c 12 28.5 m 12 27.672 12.672 27 13.5 27 c 34.5 27 l 34.898 27 35.281
 27.156 35.562 27.438 c 35.844 27.719 36 28.102 36 28.5 c 36 40.5 l 36 40.898
 35.844 41.281 35.562 41.562 c 35.281 41.844 34.898 42 34.5 42 c 13.5 42
 l 12.672 42 12 41.328 12 40.5 c h
12 28.5 m f
Q Q
showpage
%%Trailer
%%EOF
