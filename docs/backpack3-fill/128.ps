%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 9 0 87 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 9 0 87 96
96 96 cairo_set_page_size
%%EndPageSetup
q 9 0 78 96 rectclip
1 0 0 -1 0 96 cm q
0 g
30 60 m 30 78 l 66 78 l 66 60 l 60 60 l 60 63 l 60 64.656 58.656 66 57 
66 c 55.344 66 54 64.656 54 63 c 54 60 l h
30 60 m f
36 12 m 36 14.047 l 33.234 15.027 30.598 16.344 28.152 17.965 c 25.656 
10.484 l 25.656 10.48 l 24.949 8.363 23.129 6.812 20.926 6.453 c 18.723 
6.098 16.5 6.992 15.16 8.777 c 10.539 14.938 l 10.543 14.941 l 9.359 16.516
 9.023 18.574 9.648 20.441 c 14.465 34.883 l 12.832 39.062 11.996 43.512
 12 48 c 12 81 l 12 84.977 13.582 88.793 16.395 91.605 c 19.207 94.418 23.023
 96 27 96 c 69 96 l 72.977 96 76.793 94.418 79.605 91.605 c 82.418 88.793
 84 84.977 84 81 c 84 48 l 84 43.375 83.125 38.945 81.539 34.883 c 86.344
 20.441 l 86.348 20.441 l 86.973 18.574 86.641 16.516 85.457 14.941 c 80.836
 8.781 l 80.84 8.777 l 79.5 6.988 77.277 6.09 75.07 6.449 c 72.867 6.805
 71.043 8.359 70.34 10.48 c 67.852 17.961 l 67.848 17.965 l 65.402 16.34
 62.766 15.023 60 14.039 c 60 12 l 60 5.371 54.629 0 48 0 c 41.371 0 36 
5.371 36 12 c 42 12 m 42 8.688 44.688 6 48 6 c 51.312 6 54 8.688 54 12 c
 54 12.496 l 50.027 11.828 45.973 11.828 42 12.496 c h
77.645 27.57 m 76.242 25.535 74.633 23.652 72.848 21.949 c 76.035 12.379
 l 80.656 18.539 l h
23.16 21.949 m 21.371 23.652 19.762 25.535 18.359 27.57 c 15.344 18.539
 l 19.965 12.379 l h
24.238 44.582 m 24.238 44.578 l 25.336 36.887 30.09 30.203 36.992 26.637
 c 43.898 23.074 52.102 23.074 59.008 26.637 c 65.91 30.203 70.664 36.887
 71.762 44.578 c 71.996 46.219 70.855 47.742 69.215 47.977 c 67.574 48.211
 66.055 47.074 65.82 45.434 c 64.996 39.664 61.434 34.648 56.254 31.977 
c 51.074 29.305 44.926 29.305 39.746 31.977 c 34.566 34.648 31.004 39.664
 30.18 45.434 c 29.945 47.074 28.426 48.211 26.785 47.977 c 25.145 47.742
 24.004 46.219 24.238 44.578 c 24 57 m 24 55.344 25.344 54 27 54 c 69 54
 l 69.797 54 70.559 54.316 71.121 54.879 c 71.684 55.441 72 56.203 72 57
 c 72 81 l 72 81.797 71.684 82.559 71.121 83.121 c 70.559 83.684 69.797 
84 69 84 c 27 84 l 25.344 84 24 82.656 24 81 c h
24 57 m f
Q Q
showpage
%%Trailer
%%EOF
