%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 72 90 l 73.59 90 75.117 89.367 76.242 88.242 c 77.367 87.117
 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57 18 c 57 6 l 24 
6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12 5.371 17.371 0 
24 0 c 57 0 l h
61.441 75.793 m 61.898 76.715 62.176 77.695 62.281 78.746 c 57.625 78.746
 l 57.625 78.742 l 57.516 78.219 57.32 77.711 57.043 77.25 c 56.773 76.812
 56.43 76.426 56.023 76.109 c 55.602 75.77 55.117 75.512 54.602 75.355 c
 54.02 75.176 53.414 75.086 52.805 75.09 c 51.098 75.09 49.766 75.695 48.816
 76.902 c 47.879 78.105 47.414 79.805 47.414 82.004 c 47.414 84.992 l 47.414
 86.395 47.609 87.625 47.996 88.684 c 47.992 88.68 l 48.348 89.664 48.984
 90.527 49.816 91.156 c 50.738 91.773 51.828 92.078 52.934 92.035 c 53.879
 92.062 54.816 91.863 55.676 91.457 c 56.359 91.098 56.926 90.547 57.305
 89.875 c 57.664 89.219 57.848 88.492 57.852 87.695 c 57.852 86.164 l 52.922
 86.164 l 52.922 82.625 l 62.379 82.625 l 62.379 87.414 l 62.379 88.574 
62.184 89.676 61.797 90.715 c 61.793 90.715 l 61.41 91.742 60.809 92.68 
60.035 93.461 c 59.191 94.289 58.176 94.93 57.066 95.34 c 55.883 95.785 
54.488 96.004 52.883 96.004 c 52.883 96.008 l 51.34 96.035 49.809 95.766
 48.367 95.215 c 47.141 94.715 46.047 93.938 45.168 92.953 c 44.293 91.938
 43.637 90.754 43.246 89.473 c 42.812 88.023 42.602 86.516 42.617 85.004
 c 42.617 81.969 l 42.617 79.797 43.016 77.898 43.816 76.27 c 44.621 74.645
 45.785 73.379 47.309 72.473 c 48.844 71.562 50.695 71.105 52.863 71.105
 c 54.293 71.105 55.562 71.305 56.68 71.707 c 57.805 72.105 58.766 72.656
 59.559 73.355 c 60.359 74.059 60.988 74.875 61.441 75.797 c h
9.602 71.559 m 0 71.555 l 0 95.555 l 4.746 95.555 l 4.746 87.496 l 9.562
 87.496 l 11.281 87.496 12.746 87.152 13.953 86.465 c 15.172 85.758 16.098
 84.809 16.73 83.613 c 16.734 83.617 l 17.395 82.363 17.727 80.969 17.699
 79.555 c 17.699 78.059 17.383 76.703 16.75 75.492 c 16.754 75.492 l 16.117
 74.297 15.164 73.305 13.992 72.629 c 12.793 71.91 11.328 71.551 9.602 71.555
 c 12.871 79.551 m 12.871 79.555 l 12.891 80.348 12.715 81.133 12.359 81.84
 c 12.039 82.453 11.543 82.957 10.934 83.281 c 10.234 83.625 9.461 83.793
 8.684 83.773 c 4.727 83.773 l 4.727 75.336 l 8.688 75.336 l 9.996 75.336
 11.02 75.699 11.758 76.43 c 12.496 77.152 12.867 78.195 12.867 79.555 c
 24.652 95.551 m 24.652 79.5 l 24.844 79.5 l 35.41 95.551 l 39.348 95.551
 l 39.348 71.559 l 34.848 71.559 l 34.848 87.52 l 34.656 87.52 l 24.145 
71.559 l 20.172 71.559 l 20.172 95.559 l h
24.652 95.551 m f*
Q Q
showpage
%%Trailer
%%EOF
