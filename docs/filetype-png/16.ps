%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 9 11.25 l 9.199 11.25 9.391 11.172 9.531 11.031 
c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
7.68 9.473 m 7.738 9.586 7.773 9.711 7.785 9.84 c 7.203 9.84 l 7.203 9.844
 l 7.188 9.777 7.164 9.715 7.129 9.656 c 7.098 9.602 7.055 9.555 7.004 9.516
 c 6.949 9.473 6.891 9.438 6.824 9.418 c 6.754 9.398 6.676 9.387 6.602 9.387
 c 6.387 9.387 6.223 9.461 6.102 9.613 c 5.984 9.766 5.926 9.977 5.926 10.25
 c 5.926 10.625 l 5.926 10.801 5.949 10.953 6 11.086 c 6.043 11.207 6.121
 11.316 6.227 11.395 c 6.344 11.473 6.477 11.512 6.617 11.504 c 6.734 11.508
 6.852 11.484 6.961 11.434 c 7.043 11.387 7.117 11.32 7.164 11.234 c 7.211
 11.152 7.23 11.062 7.23 10.961 c 7.23 10.77 l 6.613 10.77 l 6.613 10.328
 l 7.797 10.328 l 7.797 10.926 l 7.797 11.07 7.773 11.207 7.723 11.34 c 
7.676 11.469 7.602 11.586 7.504 11.684 c 7.398 11.785 7.273 11.867 7.133
 11.918 c 6.984 11.973 6.812 12 6.609 12 c 6.418 12.004 6.227 11.973 6.047
 11.902 c 5.895 11.84 5.758 11.742 5.645 11.617 c 5.535 11.492 5.453 11.344
 5.406 11.184 c 5.352 11.004 5.324 10.812 5.328 10.625 c 5.328 10.246 l 
5.328 9.973 5.379 9.738 5.477 9.535 c 5.578 9.332 5.723 9.176 5.914 9.059
 c 6.105 8.945 6.336 8.887 6.609 8.887 c 6.789 8.887 6.945 8.91 7.086 8.961
 c 7.227 9.012 7.348 9.078 7.445 9.168 c 7.547 9.258 7.625 9.359 7.68 9.473
 c h
1.199 8.941 m 0 8.945 l 0 11.945 l 0.594 11.945 l 0.594 10.938 l 1.195 
10.938 l 1.41 10.938 1.594 10.895 1.746 10.809 c 1.898 10.719 2.016 10.602
 2.094 10.453 c 2.09 10.453 l 2.176 10.297 2.215 10.121 2.211 9.945 c 2.211
 9.758 2.172 9.59 2.094 9.438 c 2.016 9.289 1.895 9.164 1.75 9.078 c 1.602
 8.988 1.418 8.945 1.199 8.945 c 1.609 9.945 m 1.613 10.043 1.59 10.141 
1.547 10.23 c 1.504 10.309 1.441 10.371 1.367 10.41 c 1.277 10.453 1.184
 10.473 1.086 10.473 c 0.59 10.473 l 0.59 9.418 l 1.086 9.418 l 1.25 9.418
 1.379 9.465 1.469 9.555 c 1.562 9.645 1.609 9.777 1.609 9.945 c 3.082 11.945
 m 3.082 9.938 l 3.105 9.938 l 4.426 11.945 l 4.918 11.945 l 4.918 8.945
 l 4.355 8.945 l 4.355 10.941 l 4.332 10.941 l 3.02 8.945 l 2.523 8.945 
l 2.523 11.945 l h
3.082 11.945 m f*
Q Q
showpage
%%Trailer
%%EOF
