%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 36 45 l 36.797 45 37.559 44.684 38.121 44.121 c 38.684 
43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5 28.5 11.484 28.5
 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33 l 6 6 l 6 2.688 
8.688 0 12 0 c 28.5 0 l h
30.719 37.895 m 30.945 38.355 31.086 38.848 31.141 39.371 c 28.812 39.371
 l 28.758 39.109 28.66 38.855 28.52 38.625 c 28.387 38.406 28.215 38.211
 28.012 38.055 c 27.801 37.883 27.559 37.758 27.301 37.676 c 27.008 37.586
 26.707 37.543 26.402 37.547 c 25.547 37.547 24.883 37.848 24.406 38.453
 c 23.938 39.055 23.703 39.906 23.703 41.004 c 23.703 42.496 l 23.703 43.199
 23.801 43.812 23.992 44.34 c 23.996 44.34 l 24.176 44.832 24.492 45.262
 24.91 45.578 c 25.367 45.887 25.914 46.039 26.465 46.016 c 26.938 46.031
 27.41 45.934 27.836 45.73 c 28.18 45.551 28.465 45.273 28.652 44.938 c 
28.832 44.609 28.922 44.246 28.926 43.848 c 28.926 43.082 l 26.461 43.082
 l 26.461 41.312 l 31.188 41.312 l 31.188 43.707 l 31.188 44.285 31.09 44.836
 30.898 45.355 c 30.703 45.871 30.406 46.34 30.02 46.73 c 29.594 47.145 
29.09 47.465 28.531 47.672 c 27.938 47.895 27.242 48.004 26.441 48.004 c
 25.672 48.016 24.902 47.883 24.184 47.605 c 23.57 47.355 23.023 46.969 
22.586 46.477 c 22.145 45.969 21.82 45.375 21.625 44.734 c 21.406 44.012
 21.301 43.258 21.309 42.5 c 21.309 40.98 l 21.309 39.895 21.508 38.945 
21.91 38.129 c 22.312 37.316 22.895 36.684 23.656 36.23 c 24.426 35.773 
25.352 35.547 26.434 35.547 c 27.148 35.547 27.785 35.648 28.34 35.848 c
 28.902 36.047 29.383 36.324 29.781 36.672 c 30.18 37.023 30.496 37.43 30.723
 37.895 c h
4.797 35.777 m 0 35.777 l 0 47.777 l 2.371 47.777 l 2.371 43.75 l 4.781
 43.75 l 5.641 43.75 6.375 43.578 6.977 43.234 c 7.586 42.879 8.051 42.406
 8.367 41.809 c 8.695 41.184 8.863 40.484 8.852 39.777 c 8.852 39.031 8.695
 38.352 8.379 37.746 c 8.375 37.746 l 8.059 37.148 7.582 36.652 6.996 36.316
 c 6.395 35.957 5.664 35.777 4.801 35.781 c 6.438 39.781 m 6.434 39.777 
l 6.445 40.172 6.359 40.566 6.18 40.922 c 6.02 41.227 5.77 41.477 5.465 
41.641 c 5.117 41.812 4.73 41.898 4.34 41.887 c 2.363 41.887 l 2.363 37.668
 l 4.344 37.668 l 4.996 37.668 5.508 37.852 5.879 38.215 c 6.25 38.578 6.434
 39.098 6.434 39.777 c 12.324 47.773 m 12.328 39.75 l 12.426 39.75 l 17.707
 47.773 l 19.676 47.773 l 19.676 35.777 l 17.426 35.777 l 17.426 43.758 
l 17.328 43.758 l 12.07 35.777 l 10.086 35.777 l 10.086 47.777 l h
12.324 47.773 m f*
Q Q
showpage
%%Trailer
%%EOF
