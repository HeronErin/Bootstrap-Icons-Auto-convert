%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766 5.516 c 4.836
 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 l 3.812 1.688 
3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125 0.543
 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086 0 
1.5 0 c 3.562 0 l h
3.84 4.738 m 3.867 4.797 3.887 4.855 3.891 4.922 c 3.602 4.922 l 3.594 
4.887 3.582 4.855 3.566 4.828 c 3.547 4.801 3.527 4.777 3.5 4.758 c 3.477
 4.734 3.445 4.719 3.414 4.711 c 3.375 4.699 3.34 4.691 3.301 4.691 c 3.195
 4.691 3.109 4.73 3.051 4.805 c 2.992 4.879 2.965 4.984 2.965 5.125 c 2.965
 5.312 l 2.965 5.398 2.977 5.477 3 5.543 c 3.023 5.605 3.062 5.656 3.113
 5.699 c 3.172 5.734 3.238 5.754 3.309 5.754 c 3.367 5.754 3.426 5.742 3.48
 5.715 c 3.523 5.695 3.559 5.66 3.582 5.617 c 3.605 5.578 3.617 5.531 3.617
 5.48 c 3.617 5.387 l 3.309 5.387 l 3.309 5.164 l 3.898 5.164 l 3.898 5.465
 l 3.898 5.539 3.887 5.605 3.863 5.672 c 3.863 5.668 l 3.84 5.734 3.801 
5.793 3.754 5.84 c 3.699 5.895 3.637 5.934 3.566 5.957 c 3.492 5.984 3.406
 6 3.305 6 c 3.207 6.004 3.113 5.984 3.023 5.949 c 2.945 5.918 2.879 5.871
 2.824 5.809 c 2.77 5.746 2.727 5.672 2.703 5.594 c 2.676 5.5 2.664 5.406
 2.664 5.312 c 2.664 5.121 l 2.664 4.984 2.688 4.867 2.738 4.766 c 2.789
 4.664 2.859 4.586 2.957 4.527 c 3.055 4.469 3.168 4.441 3.305 4.441 c 3.395
 4.441 3.473 4.453 3.543 4.48 c 3.613 4.504 3.672 4.539 3.723 4.582 c 3.773
 4.625 3.812 4.676 3.84 4.734 c h
0.602 4.473 m 0 4.473 l 0 5.973 l 0.297 5.973 l 0.297 5.469 l 0.598 5.469
 l 0.707 5.469 0.797 5.445 0.871 5.402 c 0.949 5.359 1.004 5.297 1.043 5.223
 c 1.047 5.227 l 1.086 5.148 1.109 5.059 1.105 4.973 c 1.105 4.879 1.086
 4.793 1.047 4.719 c 1.008 4.645 0.949 4.582 0.875 4.539 c 0.801 4.492 0.707
 4.473 0.602 4.473 c 0.805 4.973 m 0.805 5.023 0.793 5.07 0.773 5.113 c 
0.754 5.152 0.723 5.184 0.684 5.203 c 0.641 5.227 0.59 5.238 0.543 5.234
 c 0.297 5.234 l 0.297 4.707 l 0.543 4.707 l 0.625 4.707 0.688 4.73 0.734
 4.773 c 0.781 4.82 0.805 4.883 0.805 4.969 c 1.543 5.969 m 1.539 4.969 
l 1.551 4.969 l 2.211 5.973 l 2.457 5.973 l 2.457 4.473 l 2.176 4.473 l 
2.176 5.469 l 2.164 5.469 l 1.508 4.473 l 1.258 4.473 l 1.258 5.973 l h
1.543 5.969 m f*
Q Q
showpage
%%Trailer
%%EOF
