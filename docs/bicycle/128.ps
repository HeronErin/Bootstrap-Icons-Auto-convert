%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 18 96 72
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 18 96 72
96 96 cairo_set_page_size
%%EndPageSetup
q 0 18 96 54 rectclip
1 0 0 -1 0 96 cm q
0 g
24 27 m 24 25.344 25.344 24 27 24 c 36 24 l 37.656 24 39 25.344 39 27 c
 39 28.656 37.656 30 36 30 c 36 33 l 60.84 33 l 63.156 26.051 l 63.562 24.828
 64.711 24 66 24 c 72 24 l 73.656 24 75 25.344 75 27 c 75 28.656 73.656 
30 72 30 c 68.16 30 l 66.293 35.609 l 71.137 43.348 l 71.137 43.352 l 76.75
 41.035 83.152 41.707 88.164 45.137 c 93.176 48.566 96.121 54.293 95.996
 60.363 c 95.867 66.438 92.688 72.035 87.539 75.254 c 82.387 78.473 75.961
 78.879 70.449 76.332 c 64.938 73.785 61.078 68.629 60.191 62.621 c 59.305
 56.613 61.508 50.562 66.047 46.531 c 63 41.66 l 50.543 61.594 l 50.543 
61.59 l 49.996 62.469 49.035 63 48 63 c 35.754 63 l 34.918 67.938 32.066
 72.301 27.879 75.047 c 23.695 77.793 18.555 78.672 13.691 77.473 c 8.832
 76.273 4.691 73.105 2.262 68.727 c -0.164 64.348 -0.66 59.156 0.898 54.398
 c 2.457 49.641 5.926 45.746 10.473 43.648 c 15.02 41.555 20.234 41.449 
24.863 43.355 c 30 35.137 l 30 30 l 27 30 l 25.344 30 24 28.656 24 27 c 
33 41.656 m 29.953 46.539 l 32.953 49.203 35.055 52.863 35.754 56.996 c 
42.59 56.996 l h
48 54.344 m 57.59 39 l 38.41 39 l h
29.621 57 m 29.109 55.027 28.105 53.215 26.699 51.738 c 23.41 57 l h
21.617 48.551 m 16.934 47.074 11.824 48.598 8.715 52.398 c 5.605 56.203
 5.129 61.516 7.508 65.809 c 9.887 70.105 14.645 72.52 19.516 71.898 c 24.391
 71.281 28.391 67.754 29.621 63 c 18 63 l 16.91 63 15.906 62.406 15.375 
61.453 c 14.848 60.5 14.879 59.336 15.457 58.41 c h
69.301 51.73 m 65.141 56.113 64.887 62.906 68.707 67.586 c 72.531 72.266
 79.238 73.375 84.363 70.172 c 89.484 66.969 91.43 60.453 88.898 54.969 
c 86.367 49.48 80.148 46.73 74.387 48.551 c 80.543 58.41 l 81.422 59.816
 80.996 61.664 79.59 62.543 c 78.184 63.422 76.336 62.996 75.457 61.59 c
 h
69.301 51.73 m f
Q Q
showpage
%%Trailer
%%EOF
