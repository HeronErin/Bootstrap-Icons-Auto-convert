%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 2 12 9
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 2 12 9
12 12 cairo_set_page_size
%%EndPageSetup
q 0 2 12 7 rectclip
1 0 0 -1 0 12 cm q
0 g
3 3.375 m 3 3.168 3.168 3 3.375 3 c 4.5 3 l 4.707 3 4.875 3.168 4.875 3.375
 c 4.875 3.582 4.707 3.75 4.5 3.75 c 4.5 4.125 l 7.605 4.125 l 7.895 3.258
 l 7.945 3.102 8.09 3 8.25 3 c 9 3 l 9.207 3 9.375 3.168 9.375 3.375 c 9.375
 3.582 9.207 3.75 9 3.75 c 8.52 3.75 l 8.285 4.453 l 8.891 5.422 l 8.891
 5.418 l 9.973 4.973 11.215 5.43 11.75 6.469 c 12.285 7.512 11.934 8.785
 10.941 9.406 c 9.949 10.027 8.648 9.785 7.949 8.848 c 7.246 7.91 7.383 
6.594 8.258 5.816 c 7.875 5.207 l 6.316 7.699 l 6.25 7.809 6.129 7.875 6
 7.875 c 4.469 7.875 l 4.309 8.816 3.57 9.555 2.629 9.719 c 1.688 9.879 
0.746 9.426 0.281 8.59 c -0.18 7.754 -0.066 6.719 0.57 6.004 c 1.207 5.289
 2.223 5.055 3.109 5.418 c 3.75 4.391 l 3.75 3.75 l 3.375 3.75 l 3.168 3.75
 3 3.582 3 3.375 c 4.125 5.207 m 3.742 5.816 l 4.117 6.148 4.379 6.605 4.469
 7.125 c 5.324 7.125 l h
6 6.793 m 7.199 4.875 l 4.801 4.875 l h
3.703 7.125 m 3.641 6.879 3.512 6.652 3.336 6.469 c 2.926 7.125 l h
2.703 6.07 m 2.117 5.883 1.477 6.074 1.09 6.551 c 0.699 7.023 0.641 7.688
 0.938 8.227 c 1.234 8.762 1.832 9.066 2.441 8.988 c 3.047 8.91 3.551 8.469
 3.703 7.875 c 2.25 7.875 l 2.113 7.875 1.988 7.801 1.922 7.684 c 1.855 
7.562 1.859 7.418 1.934 7.301 c h
8.664 6.469 m 8.664 6.465 l 8.141 7.016 8.109 7.863 8.59 8.449 c 9.066 
9.035 9.906 9.172 10.547 8.77 c 11.188 8.371 11.43 7.559 11.113 6.871 c 
10.797 6.184 10.02 5.84 9.297 6.07 c 10.066 7.301 l 10.18 7.477 10.125 7.707
 9.949 7.816 c 9.773 7.93 9.543 7.875 9.434 7.699 c h
8.664 6.469 m f
Q Q
showpage
%%Trailer
%%EOF
