%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 288
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 288
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 216 rectclip
1 0 0 -1 0 384 cm q
0 g
96 108 m 96 101.371 101.371 96 108 96 c 144 96 l 150.629 96 156 101.371
 156 108 c 156 114.629 150.629 120 144 120 c 144 132 l 243.359 132 l 252.625
 104.207 l 254.254 99.309 258.836 96.004 264 96 c 288 96 l 294.629 96 300
 101.371 300 108 c 300 114.629 294.629 120 288 120 c 272.641 120 l 265.176
 142.441 l 284.543 173.402 l 284.543 173.398 l 307 164.137 332.617 166.824
 352.664 180.547 c 372.707 194.27 384.484 217.172 383.98 241.461 c 383.473
 265.746 370.754 288.145 350.152 301.02 c 329.555 313.895 303.852 315.512
 281.797 305.324 c 259.746 295.137 244.316 274.512 240.766 250.48 c 237.219
 226.449 246.027 202.25 264.191 186.121 c 252 166.633 l 202.176 246.359 
l 199.984 249.867 196.137 252 192 252 c 143.016 252 l 139.676 271.746 128.266
 289.207 111.52 300.195 c 94.777 311.18 74.215 314.695 54.77 309.895 c 35.328
 305.098 18.762 292.418 9.055 274.902 c -0.656 257.387 -2.633 236.621 3.598
 217.59 c 9.832 198.559 23.707 182.98 41.895 174.602 c 60.082 166.219 80.941
 165.793 99.457 173.426 c 120 140.543 l 120 120 l 108 120 l 101.371 120 
96 114.629 96 108 c 132 166.633 m 119.809 186.168 l 131.809 196.824 140.207
 211.465 143.016 228 c 170.352 228 l h
192 217.367 m 230.352 156 l 153.648 156 l h
118.488 228 m 116.441 220.105 112.422 212.859 106.801 206.953 c 93.648 
228 l h
86.473 194.207 m 74.191 190.332 60.871 191.551 49.5 197.59 c 38.129 203.629
 29.66 213.988 26 226.332 c 22.336 238.68 23.789 251.977 30.031 263.242 
c 36.27 274.504 46.773 282.789 59.184 286.23 c 71.59 289.676 84.859 287.988
 96.012 281.551 c 107.164 275.113 115.262 264.465 118.488 252 c 72 252 l
 67.637 252 63.617 249.633 61.504 245.816 c 59.391 242 59.512 237.34 61.824
 233.641 c h
277.199 206.926 m 277.199 206.93 l 266.383 218.32 261.824 234.289 265 249.68
 c 268.172 265.066 278.68 277.926 293.121 284.109 c 307.566 290.289 324.125
 289.012 337.449 280.684 c 350.773 272.355 359.176 258.035 359.949 242.34
 c 360.723 226.648 353.766 211.57 341.324 201.973 c 328.887 192.375 312.535
 189.477 297.551 194.207 c 322.176 233.641 l 325.688 239.262 323.98 246.664
 318.359 250.176 c 312.738 253.688 305.336 251.98 301.824 246.359 c h
277.199 206.926 m f
Q Q
showpage
%%Trailer
%%EOF
