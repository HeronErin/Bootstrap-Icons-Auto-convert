%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 9 48 36
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 9 48 36
48 48 cairo_set_page_size
%%EndPageSetup
q 0 9 48 27 rectclip
1 0 0 -1 0 48 cm q
0 g
12 13.5 m 12 12.672 12.672 12 13.5 12 c 18 12 l 18.828 12 19.5 12.672 19.5
 13.5 c 19.5 14.328 18.828 15 18 15 c 18 16.5 l 30.422 16.5 l 31.578 13.027
 l 31.781 12.414 32.355 12 33 12 c 36 12 l 36.828 12 37.5 12.672 37.5 13.5
 c 37.5 14.328 36.828 15 36 15 c 34.078 15 l 33.145 17.805 l 35.566 21.676
 l 39.895 19.891 44.863 21.719 47.004 25.879 c 49.145 30.043 47.738 35.148
 43.77 37.629 c 39.801 40.105 34.598 39.133 31.793 35.387 c 28.988 31.641
 29.523 26.371 33.023 23.266 c 31.5 20.828 l 25.273 30.793 l 25.273 30.797
 l 24.996 31.234 24.516 31.5 24 31.5 c 17.879 31.5 l 17.238 35.27 14.289
 38.227 10.52 38.871 c 6.75 39.516 2.984 37.707 1.133 34.363 c -0.723 31.02
 -0.262 26.867 2.281 24.012 c 4.828 21.156 8.898 20.223 12.434 21.68 c 15
 17.566 l 15 15 l 13.5 15 l 12.672 15 12 14.328 12 13.5 c 16.5 20.828 m 
14.977 23.27 l 16.477 24.602 17.527 26.43 17.879 28.5 c 21.297 28.5 l h
24 27.172 m 28.793 19.5 l 19.207 19.5 l h
14.812 28.5 m 14.555 27.512 14.051 26.609 13.352 25.867 c 11.707 28.5 l
 h
10.809 24.277 m 8.469 23.535 5.91 24.297 4.355 26.199 c 2.805 28.102 2.562
 30.758 3.754 32.906 c 4.945 35.055 7.324 36.258 9.758 35.949 c 12.195 35.641
 14.195 33.879 14.812 31.5 c 9 31.5 l 8.453 31.5 7.953 31.203 7.688 30.727
 c 7.422 30.25 7.438 29.668 7.727 29.203 c h
34.648 25.867 m 32.57 28.059 32.441 31.453 34.355 33.793 c 36.266 36.133
 39.617 36.688 42.18 35.086 c 44.742 33.484 45.715 30.227 44.449 27.484 
c 43.184 24.742 40.074 23.367 37.195 24.277 c 40.273 29.207 l 40.273 29.203
 l 40.711 29.906 40.496 30.832 39.797 31.273 c 39.094 31.711 38.168 31.496
 37.727 30.797 c h
34.648 25.867 m f
Q Q
showpage
%%Trailer
%%EOF
