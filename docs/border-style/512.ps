%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 72 360 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 72 360 312
384 384 cairo_set_page_size
%%EndPageSetup
q 24 72 336 240 rectclip
1 0 0 -1 0 384 cm q
0 g
24 84 m 24 77.371 29.371 72 36 72 c 348 72 l 351.184 72 354.234 73.266 
356.484 75.516 c 358.734 77.766 360 80.816 360 84 c 360 108 l 360 111.184
 358.734 114.234 356.484 116.484 c 354.234 118.734 351.184 120 348 120 c
 36 120 l 29.371 120 24 114.629 24 108 c h
24 180 m 24 173.371 29.371 168 36 168 c 156 168 l 159.184 168 162.234 169.266
 164.484 171.516 c 166.734 173.766 168 176.816 168 180 c 168 204 l 168 207.184
 166.734 210.234 164.484 212.484 c 162.234 214.734 159.184 216 156 216 c
 36 216 l 29.371 216 24 210.629 24 204 c h
24 276 m 24 269.371 29.371 264 36 264 c 60 264 l 63.184 264 66.234 265.266
 68.484 267.516 c 70.734 269.766 72 272.816 72 276 c 72 300 l 72 303.184
 70.734 306.234 68.484 308.484 c 66.234 310.734 63.184 312 60 312 c 36 312
 l 29.371 312 24 306.629 24 300 c h
216 276 m 216 269.371 221.371 264 228 264 c 252 264 l 255.184 264 258.234
 265.266 260.484 267.516 c 262.734 269.766 264 272.816 264 276 c 264 300
 l 264 303.184 262.734 306.234 260.484 308.484 c 258.234 310.734 255.184
 312 252 312 c 228 312 l 221.371 312 216 306.629 216 300 c h
120 276 m 120 269.371 125.371 264 132 264 c 156 264 l 159.184 264 162.234
 265.266 164.484 267.516 c 166.734 269.766 168 272.816 168 276 c 168 300
 l 168 303.184 166.734 306.234 164.484 308.484 c 162.234 310.734 159.184
 312 156 312 c 132 312 l 125.371 312 120 306.629 120 300 c h
312 276 m 312 269.371 317.371 264 324 264 c 348 264 l 351.184 264 354.234
 265.266 356.484 267.516 c 358.734 269.766 360 272.816 360 276 c 360 300
 l 360 303.184 358.734 306.234 356.484 308.484 c 354.234 310.734 351.184
 312 348 312 c 324 312 l 317.371 312 312 306.629 312 300 c h
216 180 m 216 173.371 221.371 168 228 168 c 348 168 l 351.184 168 354.234
 169.266 356.484 171.516 c 358.734 173.766 360 176.816 360 180 c 360 204
 l 360 207.184 358.734 210.234 356.484 212.484 c 354.234 214.734 351.184
 216 348 216 c 228 216 l 221.371 216 216 210.629 216 204 c h
216 180 m f
Q Q
showpage
%%Trailer
%%EOF
