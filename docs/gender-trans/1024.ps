%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 24 m 0 17.637 2.527 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c
 168 0 l 176.574 0 184.496 4.574 188.785 12 c 193.07 19.426 193.07 28.574
 188.785 36 c 184.496 43.426 176.574 48 168 48 c 81.938 48 l 168 134.062
 l 199.008 103.008 l 205.078 96.938 213.926 94.566 222.219 96.789 c 230.512
 99.012 236.988 105.488 239.211 113.781 c 241.434 122.074 239.062 130.922
 232.992 136.992 c 201.938 168 l 241.395 207.457 l 241.391 207.457 l 259.395
 187.484 281.391 171.512 305.957 160.582 c 330.523 149.652 357.113 144 384
 144 c 440.641 144 491.473 168.48 526.609 207.457 c 686.062 48 l 552 48 
l 543.426 48 535.504 43.426 531.215 36 c 526.93 28.574 526.93 19.426 531.215
 12 c 535.504 4.574 543.426 0 552 0 c 744 0 l 750.363 0 756.469 2.527 760.969
 7.031 c 765.473 11.531 768 17.637 768 24 c 768 216 l 768 224.574 763.426
 232.496 756 236.785 c 748.574 241.07 739.426 241.07 732 236.785 c 724.574
 232.496 720 224.574 720 216 c 720 81.938 l 554.398 247.539 l 554.398 247.535
 l 573.496 284.289 580.195 326.234 573.5 367.105 c 566.805 407.98 547.07
 445.594 517.242 474.328 c 487.414 503.066 449.094 521.387 408 526.559 c
 408 624 l 480 624 l 488.574 624 496.496 628.574 500.785 636 c 505.07 643.426
 505.07 652.574 500.785 660 c 496.496 667.426 488.574 672 480 672 c 408 
672 l 408 744 l 408 752.574 403.426 760.496 396 764.785 c 388.574 769.07
 379.426 769.07 372 764.785 c 364.574 760.496 360 752.574 360 744 c 360 
672 l 288 672 l 279.426 672 271.504 667.426 267.215 660 c 262.93 652.574
 262.93 643.426 267.215 636 c 271.504 628.574 279.426 624 288 624 c 360 
624 l 360 526.559 l 318.898 521.391 280.566 503.07 250.734 474.324 c 220.902
 445.582 201.164 407.961 194.473 367.078 c 187.781 326.195 194.488 284.242
 213.602 247.488 c 168 201.938 l 136.992 232.992 l 130.922 239.062 122.074
 241.434 113.781 239.211 c 105.488 236.988 99.012 230.512 96.789 222.219
 c 94.566 213.926 96.938 205.078 103.008 199.008 c 134.062 168 l 48 81.938
 l 48 168 l 48 176.574 43.426 184.496 36 188.785 c 28.574 193.07 19.426 
193.07 12 188.785 c 4.574 184.496 0 176.574 0 168 c h
263.52 257.09 m 235.328 300.133 232.238 354.945 255.422 400.883 c 278.602
 446.82 324.527 476.902 375.898 479.793 c 427.273 482.688 476.289 457.957
 504.48 414.91 c 532.672 371.867 535.762 317.055 512.578 271.117 c 489.398
 225.18 443.473 195.098 392.102 192.207 c 340.727 189.312 291.711 214.043
 263.52 257.09 c f*
Q Q
showpage
%%Trailer
%%EOF
