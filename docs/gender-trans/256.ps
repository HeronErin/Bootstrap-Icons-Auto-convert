%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
0 6 m 0 2.688 2.688 0 6 0 c 42 0 l 45.312 0 48 2.688 48 6 c 48 9.312 45.312
 12 42 12 c 20.484 12 l 42 33.516 l 49.754 25.75 l 49.754 25.754 l 52.098
 23.406 55.902 23.406 58.246 25.754 c 60.594 28.098 60.594 31.902 58.246
 34.246 c 50.48 42 l 60.344 51.863 l 60.348 51.863 l 69.449 41.766 82.406
 36 96 36 c 110.16 36 122.867 42.121 131.652 51.863 c 171.516 12 l 138 12
 l 134.688 12 132 9.312 132 6 c 132 2.688 134.688 0 138 0 c 186 0 l 187.59
 0 189.117 0.633 190.242 1.758 c 191.367 2.883 192 4.41 192 6 c 192 54 l
 192 57.312 189.312 60 186 60 c 182.688 60 180 57.312 180 54 c 180 20.484
 l 138.602 61.883 l 145.84 75.816 145.809 92.414 138.512 106.316 c 131.215
 120.223 117.578 129.68 102 131.641 c 102 156 l 120 156 l 123.312 156 126
 158.688 126 162 c 126 165.312 123.312 168 120 168 c 102 168 l 102 186 l
 102 189.312 99.312 192 96 192 c 92.688 192 90 189.312 90 186 c 90 168 l
 72 168 l 68.688 168 66 165.312 66 162 c 66 158.688 68.688 156 72 156 c 
90 156 l 90 131.641 l 74.418 129.68 60.777 120.223 53.48 106.312 c 46.184
 92.406 46.156 75.809 53.398 61.871 c 42 50.484 l 34.246 58.25 l 34.246 
58.246 l 31.902 60.594 28.098 60.594 25.754 58.246 c 23.406 55.902 23.406
 52.098 25.754 49.754 c 33.52 42 l 12 20.484 l 12 42 l 12 45.312 9.312 48
 6 48 c 2.688 48 0 45.312 0 42 c h
65.879 64.273 m 58.832 75.031 58.059 88.738 63.855 100.219 c 69.648 111.703
 81.133 119.227 93.977 119.949 c 106.816 120.672 119.07 114.488 126.121 
103.727 c 133.168 92.969 133.941 79.262 128.145 67.781 c 122.352 56.297 
110.867 48.773 98.023 48.051 c 85.184 47.328 72.93 53.512 65.879 64.273 
c f*
Q Q
showpage
%%Trailer
%%EOF
