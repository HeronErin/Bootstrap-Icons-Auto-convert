%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 48 m 0 35.27 5.059 23.062 14.059 14.059 c 23.062 5.059 35.27 0 48 0 c
 336 0 l 353.148 0 368.996 9.148 377.57 24 c 386.145 38.852 386.145 57.148
 377.57 72 c 368.996 86.852 353.148 96 336 96 c 163.871 96 l 336 268.129
 l 398.016 206.016 l 410.156 193.875 427.855 189.133 444.438 193.578 c 461.023
 198.02 473.98 210.977 478.422 227.562 c 482.867 244.145 478.125 261.844
 465.984 273.984 c 403.871 336 l 482.781 414.91 l 482.785 414.91 l 518.789
 374.965 562.781 343.027 611.914 321.164 c 661.047 299.301 714.223 288.004
 768 288 c 881.281 288 982.945 336.961 1053.215 414.91 c 1372.129 96 l 1104
 96 l 1086.852 96 1071.004 86.852 1062.43 72 c 1053.855 57.148 1053.855 
38.852 1062.43 24 c 1071.004 9.148 1086.852 0 1104 0 c 1488 0 l 1500.73 
0 1512.938 5.059 1521.941 14.059 c 1530.941 23.062 1536 35.27 1536 48 c 
1536 432 l 1536 449.148 1526.852 464.996 1512 473.57 c 1497.148 482.145 
1478.852 482.145 1464 473.57 c 1449.148 464.996 1440 449.148 1440 432 c 
1440 163.871 l 1108.801 495.07 l 1146.996 568.578 1160.395 652.465 1147 
734.211 c 1133.605 815.961 1094.137 891.184 1034.484 948.66 c 974.828 1006.133
 898.188 1042.777 816 1053.121 c 816 1248 l 960 1248 l 977.148 1248 992.996
 1257.148 1001.57 1272 c 1010.145 1286.852 1010.145 1305.148 1001.57 1320
 c 992.996 1334.852 977.148 1344 960 1344 c 816 1344 l 816 1488 l 816 1505.148
 806.852 1520.996 792 1529.57 c 777.148 1538.145 758.852 1538.145 744 1529.57
 c 729.148 1520.996 720 1505.148 720 1488 c 720 1344 l 576 1344 l 558.852
 1344 543.004 1334.852 534.43 1320 c 525.855 1305.148 525.855 1286.852 534.43
 1272 c 543.004 1257.148 558.852 1248 576 1248 c 720 1248 l 720 1053.121
 l 637.793 1042.785 561.133 1006.137 501.469 948.652 c 441.801 891.164 402.328
 815.922 388.945 734.156 c 375.559 652.391 388.98 568.488 427.199 494.977
 c 336 403.871 l 273.984 465.984 l 261.844 478.125 244.145 482.867 227.562
 478.422 c 210.977 473.98 198.02 461.023 193.578 444.438 c 189.133 427.855
 193.875 410.156 206.016 398.016 c 268.129 336 l 96 163.871 l 96 336 l 96
 353.148 86.852 368.996 72 377.57 c 57.148 386.145 38.852 386.145 24 377.57
 c 9.148 368.996 0 353.148 0 336 c h
527.039 514.176 m 485.184 578.082 470.426 656 486.016 730.785 c 501.609
 805.574 546.27 871.102 610.176 912.961 c 674.082 954.816 752 969.574 826.785
 953.984 c 901.574 938.391 967.102 893.73 1008.961 829.824 c 1050.816 765.918
 1065.574 688 1049.984 613.215 c 1034.391 538.426 989.73 472.898 925.824
 431.039 c 861.918 389.184 784 374.426 709.215 390.016 c 634.426 405.609
 568.898 450.27 527.039 514.176 c f*
Q Q
showpage
%%Trailer
%%EOF
