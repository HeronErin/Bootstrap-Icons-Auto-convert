%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
0 12 m 0 5.371 5.371 0 12 0 c 84 0 l 90.629 0 96 5.371 96 12 c 96 18.629
 90.629 24 84 24 c 40.969 24 l 84 67.031 l 99.504 51.504 l 104.195 46.812
 111.805 46.812 116.496 51.504 c 121.188 56.195 121.188 63.805 116.496 68.496
 c 100.969 84 l 120.695 103.727 l 138.898 83.531 164.812 72 192 72 c 220.32
 72 245.734 84.238 263.305 103.727 c 343.031 24 l 276 24 l 269.371 24 264
 18.629 264 12 c 264 5.371 269.371 0 276 0 c 372 0 l 375.184 0 378.234 1.266
 380.484 3.516 c 382.734 5.766 384 8.816 384 12 c 384 108 l 384 114.629 
378.629 120 372 120 c 365.371 120 360 114.629 360 108 c 360 40.969 l 277.199
 123.77 l 291.68 151.637 291.613 184.824 277.023 212.633 c 262.43 240.445
 235.16 259.359 204 263.281 c 204 312 l 240 312 l 246.629 312 252 317.371
 252 324 c 252 330.629 246.629 336 240 336 c 204 336 l 204 372 l 204 378.629
 198.629 384 192 384 c 185.371 384 180 378.629 180 372 c 180 336 l 144 336
 l 137.371 336 132 330.629 132 324 c 132 317.371 137.371 312 144 312 c 180
 312 l 180 263.281 l 148.832 259.363 121.555 240.445 106.961 212.625 c 92.371
 184.809 92.309 151.613 106.801 123.742 c 84 100.965 l 68.496 116.492 l 
68.496 116.496 l 63.805 121.188 56.195 121.188 51.504 116.496 c 46.812 111.805
 46.812 104.195 51.504 99.504 c 67.031 84 l 24 40.969 l 24 84 l 24 90.629
 18.629 96 12 96 c 5.371 96 0 90.629 0 84 c h
131.762 128.543 m 117.664 150.066 116.121 177.473 127.711 200.441 c 139.301
 223.41 162.262 238.449 187.949 239.898 c 213.637 241.344 238.145 228.977
 252.238 207.457 c 266.336 185.934 267.879 158.527 256.289 135.559 c 244.699
 112.59 221.738 97.551 196.051 96.102 c 170.363 94.656 145.855 107.023 131.762
 128.543 c f*
Q Q
showpage
%%Trailer
%%EOF
