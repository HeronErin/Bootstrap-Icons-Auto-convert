%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 72 m 0 52.906 7.586 34.59 21.09 21.09 c 34.59 7.586 52.906 0 72 0 c 144
 0 l 144 264 l 144 283.094 151.586 301.41 165.09 314.91 c 178.59 328.414
 196.906 336 216 336 c 552 336 l 571.094 336 589.41 328.414 602.91 314.91
 c 616.414 301.41 624 283.094 624 264 c 624 0 l 628.129 0 l 647.219 0.016
 665.52 7.613 679.008 21.121 c 746.93 88.992 l 760.418 102.488 767.996 120.789
 768 139.871 c 768 696 l 768 715.094 760.414 733.41 746.91 746.91 c 733.41
 760.414 715.094 768 696 768 c 672 768 l 672 504 l 672 484.906 664.414 466.59
 650.91 453.09 c 637.41 439.586 619.094 432 600 432 c 168 432 l 148.906 
432 130.59 439.586 117.09 453.09 c 103.586 466.59 96 484.906 96 504 c 96
 768 l 72 768 l 52.906 768 34.59 760.414 21.09 746.91 c 7.586 733.41 0 715.094
 0 696 c h
0 72 m f
144 768 m 624 768 l 624 504 l 624 497.637 621.473 491.531 616.969 487.031
 c 612.469 482.527 606.363 480 600 480 c 168 480 l 161.637 480 155.531 482.527
 151.031 487.031 c 146.527 491.531 144 497.637 144 504 c h
576 0 m 192 0 l 192 264 l 192 270.363 194.527 276.469 199.031 280.969 c
 203.531 285.473 209.637 288 216 288 c 552 288 l 558.363 288 564.469 285.473
 568.969 280.969 c 573.473 276.469 576 270.363 576 264 c h
432 48 m 528 48 l 528 240 l 432 240 l h
432 48 m f
Q Q
showpage
%%Trailer
%%EOF
