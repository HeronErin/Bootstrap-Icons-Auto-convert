%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 144 m 0 105.809 15.172 69.184 42.176 42.176 c 69.184 15.172 105.809 0
 144 0 c 288 0 l 288 528 l 288 566.191 303.172 602.816 330.176 629.824 c
 357.184 656.828 393.809 672 432 672 c 1104 672 l 1142.191 672 1178.816 
656.828 1205.824 629.824 c 1232.828 602.816 1248 566.191 1248 528 c 1248
 0 l 1256.258 0 l 1294.434 0.035 1331.035 15.227 1358.016 42.238 c 1493.855
 177.98 l 1493.855 177.984 l 1520.832 204.98 1535.992 241.578 1536 279.742
 c 1536 1392 l 1536 1430.191 1520.828 1466.816 1493.824 1493.824 c 1466.816
 1520.828 1430.191 1536 1392 1536 c 1344 1536 l 1344 1008 l 1344 969.809
 1328.828 933.184 1301.824 906.176 c 1274.816 879.172 1238.191 864 1200 
864 c 336 864 l 297.809 864 261.184 879.172 234.176 906.176 c 207.172 933.184
 192 969.809 192 1008 c 192 1536 l 144 1536 l 105.809 1536 69.184 1520.828
 42.176 1493.824 c 15.172 1466.816 0 1430.191 0 1392 c h
0 144 m f
288 1536 m 1248 1536 l 1248 1008 l 1248 995.27 1242.941 983.062 1233.941
 974.059 c 1224.938 965.059 1212.73 960 1200 960 c 336 960 l 323.27 960 
311.062 965.059 302.059 974.059 c 293.059 983.062 288 995.27 288 1008 c 
h
1152 0 m 384 0 l 384 528 l 384 540.73 389.059 552.938 398.059 561.941 c
 407.062 570.941 419.27 576 432 576 c 1104 576 l 1116.73 576 1128.938 570.941
 1137.941 561.941 c 1146.941 552.938 1152 540.73 1152 528 c h
864 96 m 1056 96 l 1056 480 l 864 480 l h
864 96 m f
Q Q
showpage
%%Trailer
%%EOF
