%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 360 384 rectclip
1 0 0 -1 0 384 cm q
0 g
24 48 m 24 35.27 29.059 23.062 38.059 14.059 c 47.062 5.059 59.27 0 72 
0 c 216 0 l 228.73 0 240.938 5.059 249.941 14.059 c 258.941 23.062 264 35.27
 264 48 c 264 240 l 276.73 240 288.938 245.059 297.941 254.059 c 306.941
 263.062 312 275.27 312 288 c 312 300 l 312 306.629 317.371 312 324 312 
c 330.629 312 336 306.629 336 300 c 336 216 l 336 209.809 333.504 206.953
 327.434 200.762 c 327.266 200.57 l 321.098 194.305 312 185.039 312 168 
c 312 96 l 311.996 92.816 313.254 89.758 315.504 87.504 c 327.504 75.504
 l 329.754 73.246 332.812 71.98 336 71.98 c 339.188 71.98 342.246 73.246
 344.496 75.504 c 356.496 87.504 l 358.746 89.758 360.004 92.816 360 96 
c 360 300 l 360 312.863 353.137 324.746 342 331.176 c 330.863 337.609 317.137
 337.609 306 331.176 c 294.863 324.746 288 312.863 288 300 c 288 288 l 288
 281.637 285.473 275.531 280.969 271.031 c 276.469 266.527 270.363 264 264
 264 c 264 360 l 276 360 l 282.629 360 288 365.371 288 372 c 288 378.629
 282.629 384 276 384 c 12 384 l 5.371 384 0 378.629 0 372 c 0 365.371 5.371
 360 12 360 c 24 360 l h
72 60 m 72 180 l 72 183.184 73.266 186.234 75.516 188.484 c 77.766 190.734
 80.816 192 84 192 c 204 192 l 207.184 192 210.234 190.734 212.484 188.484
 c 214.734 186.234 216 183.184 216 180 c 216 60 l 216 56.816 214.734 53.766
 212.484 51.516 c 210.234 49.266 207.184 48 204 48 c 84 48 l 77.371 48 72
 53.371 72 60 c 135.145 299.039 m 99.359 299.039 l 99.359 277.605 l 133.031
 277.605 l 133.031 265.484 l 99.359 265.488 l 99.359 244.969 l 135.121 244.969
 l 135.121 232.008 l 83.641 232.008 l 83.641 312 l 135.145 312 l h
166.73 312 m 185.785 312 l 212.328 232.008 l 194.734 232.008 l 176.973 
294.77 l 176.23 294.77 l 158.301 232.008 l 139.965 232.008 l h
166.73 312 m f
Q Q
showpage
%%Trailer
%%EOF
