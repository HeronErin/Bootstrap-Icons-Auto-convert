%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.125 6 l 4.125 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586
 4.766 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 
1.688 l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 
1.293 0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75
 l 0.75 0.336 1.086 0 1.5 0 c 3.562 0 l h
3.621 4.738 m 3.648 4.797 3.668 4.855 3.672 4.922 c 3.383 4.922 l 3.379
 4.887 3.363 4.855 3.348 4.828 c 3.332 4.801 3.309 4.777 3.285 4.758 c 3.258
 4.734 3.227 4.719 3.195 4.711 c 3.16 4.699 3.121 4.691 3.082 4.691 c 2.977
 4.691 2.891 4.73 2.832 4.805 c 2.773 4.879 2.746 4.984 2.746 5.125 c 2.746
 5.312 l 2.746 5.398 2.758 5.477 2.781 5.543 c 2.805 5.605 2.844 5.656 2.895
 5.699 c 2.953 5.734 3.023 5.754 3.09 5.754 c 3.148 5.754 3.207 5.742 3.262
 5.715 c 3.305 5.695 3.34 5.66 3.363 5.617 c 3.387 5.578 3.398 5.531 3.398
 5.48 c 3.398 5.387 l 3.09 5.387 l 3.09 5.164 l 3.68 5.164 l 3.68 5.465 
l 3.68 5.539 3.668 5.605 3.645 5.672 c 3.645 5.668 l 3.621 5.734 3.582 5.793
 3.535 5.84 c 3.48 5.895 3.418 5.934 3.348 5.957 c 3.273 5.984 3.188 6 3.086
 6 c 2.992 6.004 2.895 5.984 2.805 5.949 c 2.73 5.918 2.66 5.871 2.605 5.809
 c 2.551 5.746 2.512 5.672 2.484 5.594 c 2.457 5.5 2.445 5.406 2.445 5.312
 c 2.445 5.121 l 2.445 4.984 2.469 4.867 2.52 4.766 c 2.57 4.664 2.641 4.586
 2.738 4.527 c 2.836 4.469 2.949 4.441 3.086 4.441 c 3.176 4.441 3.254 4.453
 3.324 4.48 c 3.395 4.504 3.453 4.539 3.504 4.582 c 3.555 4.625 3.594 4.676
 3.621 4.734 c h
0 5.543 m 0 5.605 0.012 5.664 0.031 5.719 c 0.051 5.773 0.082 5.824 0.121
 5.863 c 0.164 5.906 0.215 5.938 0.273 5.965 c 0.336 5.988 0.406 6 0.488
 6 c 0.645 6 0.77 5.957 0.855 5.871 c 0.945 5.785 0.988 5.66 0.988 5.496
 c 0.988 4.473 l 0.691 4.473 l 0.691 5.504 l 0.691 5.578 0.676 5.637 0.641
 5.68 c 0.605 5.719 0.555 5.742 0.48 5.742 c 0.484 5.738 l 0.414 5.742 0.348
 5.707 0.312 5.645 c 0.297 5.613 0.289 5.578 0.285 5.543 c h
1.844 4.469 m 1.246 4.473 l 1.246 5.973 l 1.543 5.973 l 1.543 5.469 l 1.844
 5.469 l 1.953 5.469 2.043 5.445 2.117 5.402 c 2.195 5.359 2.25 5.297 2.289
 5.223 c 2.328 5.148 2.352 5.062 2.348 4.969 c 2.348 4.875 2.328 4.789 2.289
 4.715 c 2.293 4.719 l 2.254 4.645 2.195 4.582 2.121 4.539 c 2.047 4.492
 1.953 4.473 1.848 4.473 c h
2.047 4.969 m 2.051 4.973 l 2.051 5.023 2.039 5.07 2.02 5.113 c 1.996 5.152
 1.965 5.184 1.93 5.203 c 1.887 5.227 1.836 5.238 1.789 5.234 c 1.543 5.234
 l 1.543 4.707 l 1.789 4.707 l 1.871 4.707 1.934 4.73 1.98 4.773 c 2.027
 4.82 2.051 4.883 2.051 4.969 c h
2.047 4.969 m f*
Q Q
showpage
%%Trailer
%%EOF
