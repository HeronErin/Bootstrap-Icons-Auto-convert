%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 528 768 l 528 720 l 576 720 l 588.73 720 
600.938 714.941 609.941 705.941 c 618.941 696.938 624 684.73 624 672 c 624
 216 l 528 216 l 508.906 216 490.59 208.414 477.09 194.91 c 463.586 181.41
 456 163.094 456 144 c 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059
 62.059 c 149.059 71.062 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96
 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c
 456 0 l h
463.68 606.336 m 467.328 613.695 469.566 621.566 470.398 629.953 c 433.152
 629.953 l 432.281 625.734 430.707 621.695 428.496 618 c 426.355 614.484
 423.59 611.395 420.336 608.879 c 416.969 606.148 413.105 604.094 408.961
 602.832 c 404.312 601.406 399.473 600.691 394.609 600.719 c 380.914 600.719
 370.273 605.551 362.688 615.215 c 355.199 624.848 351.457 638.445 351.457
 656.016 c 351.457 679.918 l 351.457 691.148 353.008 700.988 356.113 709.438
 c 356.113 709.441 l 358.949 717.324 364.02 724.211 370.703 729.266 c 378.055
 734.18 386.781 736.633 395.617 736.273 c 403.188 736.488 410.707 734.91
 417.551 731.664 c 423.031 728.785 427.566 724.383 430.609 718.992 c 433.488
 713.746 434.945 707.938 434.977 701.566 c 434.977 689.328 l 395.52 689.328
 l 395.52 661.008 l 471.168 661.008 l 471.168 699.312 l 471.168 708.594 
469.617 717.391 466.512 725.711 c 463.426 733.949 458.633 741.441 452.449
 747.695 c 445.676 754.324 437.578 759.441 428.688 762.719 c 419.215 766.27
 408.062 768.047 395.23 768.047 c 382.891 768.281 370.617 766.129 359.09
 761.711 c 349.297 757.703 340.547 751.516 333.504 743.617 c 326.496 735.508
 321.266 726.027 318.145 715.777 c 314.668 704.18 312.969 692.121 313.105
 680.016 c 313.105 655.727 l 313.105 638.352 316.305 623.152 322.707 610.125
 c 329.141 597.133 338.449 587.004 350.645 579.742 c 362.934 572.445 377.75
 568.797 395.094 568.797 c 406.52 568.797 416.695 570.398 425.621 573.598
 c 434.582 576.797 442.262 581.199 448.66 586.797 c 455.059 592.398 460.086
 598.91 463.73 606.332 c h
0 709.727 m 0 717.598 1.312 725.039 3.938 732.047 c 6.594 739.086 10.48
 745.328 15.602 750.766 c 20.883 756.207 27.395 760.477 35.137 763.582 c
 43.008 766.559 52.113 768.047 62.449 768.047 c 82.609 768.047 98.352 762.527
 109.68 751.488 c 121.105 740.418 126.832 724.336 126.863 703.25 c 126.863
 572.449 l 88.895 572.449 l 88.895 704.211 l 88.895 713.906 86.688 721.363
 82.27 726.578 c 77.855 731.793 71.102 734.418 62.012 734.449 c 62.016 734.449
 l 57.652 734.648 53.316 733.656 49.477 731.574 c 45.637 729.492 42.438 
726.406 40.223 722.641 c 38.051 718.656 36.852 714.215 36.719 709.68 c 0
 709.68 l h
236.16 572.445 m 159.457 572.449 l 159.457 764.449 l 197.426 764.449 l 
197.426 699.984 l 235.969 699.984 l 249.73 699.984 261.441 697.23 271.105
 691.727 c 280.867 686.062 288.273 678.461 293.328 668.926 c 298.512 659.262
 301.09 648.43 301.055 636.43 c 301.055 624.461 298.527 613.629 293.469 
603.934 c 293.473 603.938 l 288.406 594.383 280.754 586.449 271.391 581.039
 c 261.789 575.277 250.078 572.414 236.254 572.445 c h
262.367 636.43 m 262.367 636.434 l 262.539 642.77 261.137 649.055 258.289
 654.719 c 255.73 659.625 251.75 663.645 246.863 666.238 c 241.273 668.992
 235.094 670.344 228.863 670.176 c 197.281 670.176 l 197.281 602.688 l 228.961
 602.688 l 239.426 602.688 247.617 605.598 253.535 611.422 c 259.457 617.215
 262.414 625.551 262.414 636.43 c h
262.367 636.43 m f*
Q Q
showpage
%%Trailer
%%EOF
