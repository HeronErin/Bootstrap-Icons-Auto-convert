%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 8.25 12 l 8.25 11.25 l 9 11.25 l 9.199 11.25 9.391
 11.172 9.531 11.031 c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l
 8.25 3.375 l 7.629 3.375 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l
 2.586 0.75 2.25 1.086 2.25 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672
 2.172 0 3 0 c 7.125 0 l h
7.246 9.473 m 7.305 9.586 7.34 9.711 7.352 9.84 c 6.77 9.84 l 6.77 9.844
 l 6.754 9.777 6.73 9.715 6.695 9.656 c 6.66 9.602 6.617 9.555 6.566 9.516
 c 6.516 9.473 6.453 9.438 6.391 9.418 c 6.316 9.398 6.242 9.387 6.164 9.387
 c 5.949 9.387 5.785 9.461 5.664 9.613 c 5.547 9.766 5.488 9.977 5.488 10.25
 c 5.488 10.625 l 5.488 10.801 5.512 10.953 5.562 11.086 c 5.609 11.207 
5.688 11.316 5.793 11.395 c 5.906 11.473 6.043 11.512 6.18 11.504 c 6.301
 11.508 6.418 11.484 6.523 11.434 c 6.609 11.387 6.68 11.32 6.727 11.234
 c 6.773 11.152 6.793 11.062 6.793 10.961 c 6.793 10.77 l 6.18 10.77 l 6.18
 10.328 l 7.363 10.328 l 7.363 10.926 l 7.363 11.07 7.34 11.207 7.289 11.34
 c 7.242 11.469 7.168 11.586 7.07 11.684 c 6.965 11.785 6.836 11.867 6.699
 11.918 c 6.551 11.973 6.379 12 6.176 12 c 5.984 12.004 5.789 11.973 5.609
 11.902 c 5.457 11.84 5.32 11.742 5.211 11.617 c 5.102 11.492 5.02 11.344
 4.973 11.184 c 4.918 11.004 4.891 10.812 4.891 10.625 c 4.891 10.246 l 
4.891 9.973 4.941 9.738 5.039 9.535 c 5.141 9.332 5.285 9.176 5.477 9.059
 c 5.668 8.945 5.898 8.887 6.172 8.887 c 6.352 8.887 6.508 8.91 6.648 8.961
 c 6.789 9.012 6.91 9.078 7.008 9.168 c 7.109 9.254 7.188 9.355 7.242 9.473
 c h
0 11.09 m 0 11.211 0.02 11.328 0.062 11.438 c 0.105 11.547 0.164 11.645
 0.246 11.73 c 0.328 11.816 0.43 11.883 0.551 11.93 c 0.672 11.977 0.816
 12 0.977 12 c 1.293 12 1.539 11.914 1.715 11.742 c 1.895 11.57 1.984 11.316
 1.984 10.988 c 1.984 8.945 l 1.391 8.945 l 1.391 11.004 l 1.391 11.156 
1.355 11.273 1.289 11.352 c 1.219 11.434 1.113 11.473 0.973 11.473 c 0.969
 11.477 l 0.828 11.48 0.699 11.41 0.629 11.293 c 0.594 11.23 0.574 11.16
 0.574 11.09 c h
3.691 8.945 m 2.492 8.945 l 2.492 11.945 l 3.086 11.945 l 3.086 10.938 
l 3.688 10.938 l 3.902 10.938 4.086 10.895 4.238 10.809 c 4.391 10.719 4.508
 10.602 4.586 10.453 c 4.668 10.301 4.707 10.133 4.707 9.945 c 4.707 9.758
 4.668 9.59 4.59 9.438 c 4.586 9.438 l 4.508 9.289 4.387 9.164 4.242 9.078
 c 4.094 8.988 3.91 8.945 3.691 8.945 c h
4.102 9.945 m 4.098 9.945 l 4.102 10.043 4.082 10.141 4.035 10.23 c 3.996
 10.309 3.934 10.371 3.855 10.41 c 3.77 10.453 3.672 10.473 3.574 10.473
 c 3.082 10.473 l 3.082 9.418 l 3.578 9.418 l 3.742 9.418 3.871 9.465 3.961
 9.555 c 4.055 9.645 4.102 9.777 4.102 9.945 c h
4.102 9.945 m f*
Q Q
showpage
%%Trailer
%%EOF
