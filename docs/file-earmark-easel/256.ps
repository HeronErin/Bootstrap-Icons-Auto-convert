%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
102 72 m 102 68.688 99.312 66 96 66 c 92.688 66 90 68.688 90 72 c 66 72
 l 61.227 72 56.648 73.895 53.273 77.273 c 49.895 80.648 48 85.227 48 90
 c 48 114 l 48 118.773 49.895 123.352 53.273 126.727 c 56.648 130.105 61.227
 132 66 132 c 71.676 132 l 66.312 148.105 l 65.738 149.629 65.809 151.324
 66.512 152.797 c 67.215 154.27 68.484 155.391 70.031 155.906 c 71.578 156.422
 73.27 156.289 74.711 155.531 c 76.156 154.773 77.23 153.461 77.688 151.895
 c 84.324 132 l 90 132 l 90 144 l 90 147.312 92.688 150 96 150 c 99.312 
150 102 147.312 102 144 c 102 132 l 107.676 132 l 114.312 151.895 l 114.77
 153.461 115.844 154.773 117.289 155.531 c 118.73 156.289 120.422 156.422
 121.969 155.906 c 123.516 155.391 124.785 154.27 125.488 152.797 c 126.191
 151.324 126.262 149.629 125.688 148.105 c 120.324 132 l 126 132 l 130.773
 132 135.352 130.105 138.727 126.727 c 142.105 123.352 144 118.773 144 114
 c 144 90 l 144 85.227 142.105 80.648 138.727 77.273 c 135.352 73.895 130.773
 72 126 72 c h
60 90 m 60 86.688 62.688 84 66 84 c 126 84 l 127.59 84 129.117 84.633 130.242
 85.758 c 131.367 86.883 132 88.41 132 90 c 132 114 l 132 115.59 131.367
 117.117 130.242 118.242 c 129.117 119.367 127.59 120 126 120 c 66 120 l
 62.688 120 60 117.312 60 114 c h
60 90 m f
168 168 m 168 54 l 114 0 l 48 0 l 41.637 0 35.531 2.527 31.031 7.031 c 
26.527 11.531 24 17.637 24 24 c 24 168 l 24 174.363 26.527 180.469 31.031
 184.969 c 35.531 189.473 41.637 192 48 192 c 144 192 l 150.363 192 156.469
 189.473 160.969 184.969 c 165.473 180.469 168 174.363 168 168 c 114 36 
m 114 40.773 115.895 45.352 119.273 48.727 c 122.648 52.105 127.227 54 132
 54 c 156 54 l 156 168 l 156 171.184 154.734 174.234 152.484 176.484 c 150.234
 178.734 147.184 180 144 180 c 48 180 l 41.371 180 36 174.629 36 168 c 36
 24 l 36 17.371 41.371 12 48 12 c 114 12 l h
114 36 m f
Q Q
showpage
%%Trailer
%%EOF
