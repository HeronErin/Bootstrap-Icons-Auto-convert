%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 0 m 1248 0 l 1281.703 0 1314.812 8.871 1344 25.723 c 1373.188 42.574
 1397.426 66.812 1414.277 96 c 1431.129 125.188 1440 158.297 1440 192 c 
1440 480 l 1440 513.703 1431.129 546.812 1414.277 576 c 1397.426 605.188
 1373.188 629.426 1344 646.277 c 1314.812 663.129 1281.703 672 1248 672 
c 288 672 l 237.078 672 188.242 651.773 152.234 615.766 c 116.227 579.758
 96 530.922 96 480 c 96 192 l 96 141.078 116.227 92.242 152.234 56.234 c
 188.242 20.227 237.078 0 288 0 c 288 96 m 262.539 96 238.121 106.113 220.117
 124.117 c 202.113 142.121 192 166.539 192 192 c 192 480 l 192 505.461 202.113
 529.879 220.117 547.883 c 238.121 565.887 262.539 576 288 576 c 1248 576
 l 1273.461 576 1297.879 565.887 1315.883 547.883 c 1333.887 529.879 1344
 505.461 1344 480 c 1344 192 l 1344 166.539 1333.887 142.121 1315.883 124.117
 c 1297.879 106.113 1273.461 96 1248 96 c h
288 864 m 1248 864 l 1281.703 864 1314.812 872.871 1344 889.723 c 1373.188
 906.574 1397.426 930.812 1414.277 960 c 1431.129 989.188 1440 1022.297 
1440 1056 c 1440 1344 l 1440 1377.703 1431.129 1410.812 1414.277 1440 c 
1397.426 1469.188 1373.188 1493.426 1344 1510.277 c 1314.812 1527.129 1281.703
 1536 1248 1536 c 288 1536 l 237.078 1536 188.242 1515.773 152.234 1479.766
 c 116.227 1443.758 96 1394.922 96 1344 c 96 1056 l 96 1005.078 116.227 
956.242 152.234 920.234 c 188.242 884.227 237.078 864 288 864 c 288 960 
m 262.539 960 238.121 970.113 220.117 988.117 c 202.113 1006.121 192 1030.539
 192 1056 c 192 1344 l 192 1369.461 202.113 1393.879 220.117 1411.883 c 
238.121 1429.887 262.539 1440 288 1440 c 1248 1440 l 1273.461 1440 1297.879
 1429.887 1315.883 1411.883 c 1333.887 1393.879 1344 1369.461 1344 1344 
c 1344 1056 l 1344 1030.539 1333.887 1006.121 1315.883 988.117 c 1297.879
 970.113 1273.461 960 1248 960 c h
288 960 m f
Q Q
showpage
%%Trailer
%%EOF
