%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
59.617 117 m 58.824 115.609 57.516 114.594 55.973 114.176 c 54.43 113.758
 52.785 113.969 51.398 114.77 c 50.016 115.57 49.008 116.887 48.598 118.434
 c 48.191 119.977 48.414 121.621 49.223 123 c 53.965 131.211 60.781 138.027
 68.992 142.77 c 77.203 147.508 86.52 150 96 150 c 105.48 150 114.797 147.508
 123.008 142.77 c 131.219 138.027 138.035 131.211 142.777 123 c 143.586 
121.621 143.809 119.977 143.402 118.434 c 142.992 116.887 141.984 115.57
 140.602 114.77 c 139.215 113.969 137.57 113.758 136.027 114.176 c 134.484
 114.594 133.176 115.609 132.383 117 c 128.695 123.387 123.395 128.688 117.008
 132.375 c 110.621 136.062 103.375 138 96 138 c 88.625 138 81.379 136.062
 74.992 132.375 c 68.605 128.688 63.305 123.387 59.617 117 c 84 61.391 m
 84 60 l 84 56.816 82.734 53.766 80.484 51.516 c 78.234 49.266 75.184 48
 72 48 c 39.359 48 l 35.664 48 32.176 49.703 29.898 52.617 c 27.625 55.531
 26.82 59.332 27.719 62.914 c 31.449 77.816 l 31.453 77.82 l 32.75 83.012
 35.746 87.621 39.965 90.914 c 44.184 94.211 49.379 96 54.73 96 c 60 96 
l 66.031 96 71.844 93.73 76.277 89.641 c 80.711 85.555 83.441 79.945 83.93
 73.934 c 87.812 72.605 91.895 71.949 96 72 c 100.715 72 104.879 72.77 108.07
 73.934 c 108.559 79.945 111.289 85.555 115.723 89.641 c 120.156 93.73 125.969
 96 132 96 c 137.258 96 l 142.609 96 147.805 94.211 152.023 90.914 c 156.242
 87.621 159.238 83.012 160.535 77.82 c 164.266 62.918 l 164.27 62.914 l 
165.164 59.332 164.363 55.535 162.09 52.621 c 159.82 49.707 156.336 48.004
 152.641 48 c 120 48 l 113.371 48 108 53.371 108 60 c 108 61.391 l 104.07
 60.449 100.043 59.98 96 60 c 91.801 60 87.719 60.48 84 61.391 c f
192 96 m 192 130.297 173.703 161.988 144 179.137 c 114.297 196.289 77.703
 196.289 48 179.137 c 18.297 161.988 0 130.297 0 96 c 0 61.703 18.297 30.012
 48 12.863 c 77.703 -4.289 114.297 -4.289 144 12.863 c 173.703 30.012 192
 61.703 192 96 c 180 96 m 180 65.988 163.988 38.258 138 23.254 c 112.012
 8.25 79.988 8.25 54 23.254 c 28.012 38.258 12 65.988 12 96 c 12 126.012
 28.012 153.742 54 168.746 c 79.988 183.75 112.012 183.75 138 168.746 c 
163.988 153.742 180 126.012 180 96 c f
Q Q
showpage
%%Trailer
%%EOF
