%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
119.23 234 m 117.652 231.223 115.027 229.188 111.945 228.352 c 108.859 
227.512 105.566 227.941 102.801 229.539 c 100.031 231.137 98.016 233.773
 97.199 236.863 c 96.383 239.953 96.832 243.242 98.449 246 c 107.93 262.422
 121.566 276.059 137.988 285.535 c 154.41 295.016 173.039 300.004 192 300
 c 210.961 300.004 229.59 295.016 246.012 285.535 c 262.434 276.059 276.07
 262.422 285.551 246 c 287.168 243.242 287.617 239.953 286.801 236.863 c
 285.984 233.773 283.969 231.137 281.199 229.539 c 278.434 227.941 275.141
 227.512 272.055 228.352 c 268.973 229.188 266.348 231.223 264.77 234 c 
257.395 246.773 246.785 257.379 234.012 264.75 c 221.238 272.125 206.75 
276.004 192 276 c 177.25 276.004 162.762 272.125 149.988 264.75 c 137.215
 257.379 126.605 246.773 119.23 234 c 168 122.785 m 168 120 l 168 113.637
 165.473 107.531 160.969 103.031 c 156.469 98.527 150.363 96 144 96 c 78.719
 96 l 71.328 96 64.348 99.406 59.801 105.234 c 55.254 111.062 53.645 118.66
 55.441 125.832 c 62.906 155.641 l 62.902 155.641 l 65.5 166.023 71.492 
175.242 79.93 181.832 c 88.363 188.418 98.762 192 109.465 192 c 120 192 
l 132.062 192.004 143.688 187.465 152.555 179.285 c 161.422 171.105 166.887
 159.887 167.855 147.863 c 175.625 145.207 183.789 143.902 192 144 c 201.434
 144 209.762 145.535 216.145 147.863 c 217.113 159.887 222.578 171.105 231.445
 179.285 c 240.312 187.465 251.938 192.004 264 192 c 274.512 192 l 285.215
 192 295.613 188.418 304.047 181.832 c 312.484 175.242 318.477 166.023 321.07
 155.641 c 328.535 125.832 l 330.332 118.664 328.727 111.07 324.184 105.246
 c 319.641 99.418 312.668 96.008 305.281 96 c 240 96 l 233.637 96 227.531
 98.527 223.031 103.031 c 218.527 107.531 216 113.637 216 120 c 216 122.785
 l 208.141 120.898 200.082 119.961 192 120 c 183.602 120 175.441 120.961
 168 122.785 c f
384 192 m 384 242.922 363.773 291.758 327.766 327.766 c 291.758 363.773
 242.922 384 192 384 c 141.078 384 92.242 363.773 56.234 327.766 c 20.227
 291.758 0 242.922 0 192 c 0 141.078 20.227 92.242 56.234 56.234 c 92.242
 20.227 141.078 0 192 0 c 242.922 0 291.758 20.227 327.766 56.234 c 363.773
 92.242 384 141.078 384 192 c 360 192 m 360 147.445 342.301 104.711 310.793
 73.207 c 279.289 41.699 236.555 24 192 24 c 147.445 24 104.711 41.699 73.207
 73.207 c 41.699 104.711 24 147.445 24 192 c 24 236.555 41.699 279.289 73.207
 310.793 c 104.711 342.301 147.445 360 192 360 c 236.555 360 279.289 342.301
 310.793 310.793 c 342.301 279.289 360 236.555 360 192 c f
Q Q
showpage
%%Trailer
%%EOF
