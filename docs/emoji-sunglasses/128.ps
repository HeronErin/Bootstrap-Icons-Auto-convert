%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
29.809 58.5 m 29.414 57.805 28.758 57.297 27.984 57.086 c 27.215 56.879
 26.391 56.984 25.699 57.383 c 25.008 57.785 24.504 58.445 24.301 59.215
 c 24.094 59.988 24.207 60.812 24.613 61.5 c 26.98 65.605 30.391 69.016 
34.496 71.383 c 38.602 73.754 43.258 75 48 75 c 52.742 75 57.398 73.754 
61.504 71.383 c 65.609 69.016 69.02 65.605 71.387 61.5 c 71.793 60.812 71.906
 59.988 71.699 59.215 c 71.496 58.445 70.992 57.785 70.301 57.383 c 69.609
 56.984 68.785 56.879 68.016 57.086 c 67.242 57.297 66.586 57.805 66.191
 58.5 c 64.348 61.691 61.695 64.344 58.504 66.188 c 55.309 68.031 51.688
 69 48 69 c 44.312 69 40.691 68.031 37.496 66.188 c 34.305 64.344 31.652
 61.691 29.809 58.5 c 42 30.695 m 42 30 l 42 28.41 41.367 26.883 40.242 
25.758 c 39.117 24.633 37.59 24 36 24 c 19.68 24 l 17.832 24 16.086 24.852
 14.949 26.309 c 13.812 27.766 13.41 29.664 13.859 31.457 c 15.727 38.91
 l 17.062 44.25 21.859 48 27.367 48 c 30 48 l 36.254 48 41.461 43.199 41.965
 36.965 c 43.906 36.301 45.949 35.977 48 36 c 50.359 36 52.441 36.383 54.035
 36.965 c 54.539 43.199 59.746 48 66 48 c 68.629 48 l 74.133 48 78.934 44.25
 80.27 38.91 c 82.137 31.457 l 82.133 31.457 l 82.582 29.668 82.18 27.77
 81.047 26.312 c 79.91 24.855 78.168 24 76.32 24 c 60 24 l 56.688 24 54 
26.688 54 30 c 54 30.695 l 52.035 30.223 50.02 29.992 48 30 c 45.898 30 
43.859 30.238 42 30.695 c f
96 48 m 96 65.148 86.852 80.996 72 89.57 c 57.148 98.145 38.852 98.145 
24 89.57 c 9.148 80.996 0 65.148 0 48 c 0 30.852 9.148 15.004 24 6.43 c 
38.852 -2.145 57.148 -2.145 72 6.43 c 86.852 15.004 96 30.852 96 48 c 90
 48 m 90 32.996 81.996 19.129 69 11.625 c 56.004 4.125 39.996 4.125 27 11.625
 c 14.004 19.129 6 32.996 6 48 c 6 63.004 14.004 76.871 27 84.375 c 39.996
 91.875 56.004 91.875 69 84.375 c 81.996 76.871 90 63.004 90 48 c f
Q Q
showpage
%%Trailer
%%EOF
