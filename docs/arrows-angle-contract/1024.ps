%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 1 1 767 767
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 1 1 767 767
768 768 cairo_set_page_size
%%EndPageSetup
q 1 1 766 766 rectclip
1 0 0 -1 0 768 cm q
0 g
8.258 759.742 m 12.758 764.242 18.859 766.77 25.223 766.77 c 31.59 766.77
 37.691 764.242 42.191 759.742 c 238.801 563.133 l 238.801 696 l 238.801
 704.574 243.375 712.496 250.801 716.785 c 258.227 721.07 267.375 721.07
 274.801 716.785 c 282.227 712.496 286.801 704.574 286.801 696 c 286.801
 505.199 l 286.801 498.836 284.27 492.73 279.77 488.23 c 275.27 483.73 269.164
 481.199 262.801 481.199 c 72 481.199 l 63.426 481.199 55.504 485.773 51.215
 493.199 c 46.93 500.625 46.93 509.773 51.215 517.199 c 55.504 524.625 63.426
 529.199 72 529.199 c 204.863 529.199 l 8.258 725.809 l 3.758 730.309 1.23
 736.41 1.23 742.777 c 1.23 749.141 3.758 755.242 8.258 759.742 c 759.742
 8.258 m 755.242 3.758 749.141 1.23 742.777 1.23 c 736.41 1.23 730.309 3.758
 725.809 8.258 c 529.199 204.867 l 529.199 72 l 529.199 63.426 524.625 55.504
 517.199 51.215 c 509.773 46.93 500.625 46.93 493.199 51.215 c 485.773 55.504
 481.199 63.426 481.199 72 c 481.199 262.801 l 481.199 269.164 483.73 275.27
 488.23 279.77 c 492.73 284.27 498.836 286.801 505.199 286.801 c 696 286.801
 l 704.574 286.801 712.496 282.227 716.785 274.801 c 721.07 267.375 721.07
 258.227 716.785 250.801 c 712.496 243.375 704.574 238.801 696 238.801 c
 563.137 238.801 l 759.742 42.191 l 764.242 37.691 766.77 31.59 766.77 25.223
 c 766.77 18.859 764.242 12.758 759.742 8.258 c f*
Q Q
showpage
%%Trailer
%%EOF
