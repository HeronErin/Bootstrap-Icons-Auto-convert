%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
48 384 m 48 473.113 83.398 558.574 146.414 621.586 c 209.426 684.602 294.887
 720 384 720 c 473.113 720 558.574 684.602 621.586 621.586 c 684.602 558.574
 720 473.113 720 384 c 720 294.887 684.602 209.426 621.586 146.414 c 558.574
 83.398 473.113 48 384 48 c 294.887 48 209.426 83.398 146.414 146.414 c 
83.398 209.426 48 294.887 48 384 c 768 384 m 768 485.844 727.543 583.516
 655.527 655.527 c 583.516 727.543 485.844 768 384 768 c 282.156 768 184.484
 727.543 112.473 655.527 c 40.457 583.516 0 485.844 0 384 c 0 282.156 40.457
 184.484 112.473 112.473 c 184.484 40.457 282.156 0 384 0 c 485.844 0 583.516
 40.457 655.527 112.473 c 727.543 184.484 768 282.156 768 384 c 259.586 
282.719 m 219.746 282.719 196.32 313.438 196.32 366.863 c 196.32 402.48 
l 196.32 455.664 219.312 485.375 259.586 485.375 c 292.707 485.375 314.211
 464.496 316.562 434.977 c 371.617 434.977 l 371.617 440.449 l 368.832 495.504
 322.227 533.473 259.152 533.473 c 181.777 533.473 138.289 484.129 138.289
 402.48 c 138.289 366.625 l 138.289 285.023 182.16 234.625 259.152 234.625
 c 322.465 234.625 369.074 273.602 371.617 330.578 c 371.617 335.859 l 316.559
 335.855 l 314.207 305.23 292.27 282.672 259.582 282.672 c h
518.977 282.719 m 479.09 282.719 455.664 313.438 455.664 366.863 c 455.664
 402.48 l 455.664 455.664 478.703 485.375 518.977 485.375 c 552.098 485.375
 573.602 464.496 575.906 434.977 c 630.961 434.977 l 630.961 440.449 l 628.227
 495.504 581.617 533.473 518.547 533.473 c 441.121 533.473 397.684 484.129
 397.684 402.48 c 397.684 366.625 l 397.684 285.023 441.555 234.625 518.547
 234.625 c 581.812 234.625 628.469 273.602 630.961 330.578 c 630.961 335.859
 l 575.906 335.859 l 573.602 305.234 551.668 282.676 518.977 282.676 c h
518.977 282.719 m f
Q Q
showpage
%%Trailer
%%EOF
