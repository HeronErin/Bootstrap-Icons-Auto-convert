%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
12 96 m 12 126.012 28.012 153.742 54 168.746 c 79.988 183.75 112.012 183.75
 138 168.746 c 163.988 153.742 180 126.012 180 96 c 180 65.988 163.988 38.258
 138 23.254 c 112.012 8.25 79.988 8.25 54 23.254 c 28.012 38.258 12 65.988
 12 96 c 192 96 m 192 130.297 173.703 161.988 144 179.137 c 114.297 196.289
 77.703 196.289 48 179.137 c 18.297 161.988 0 130.297 0 96 c 0 61.703 18.297
 30.012 48 12.863 c 77.703 -4.289 114.297 -4.289 144 12.863 c 173.703 30.012
 192 61.703 192 96 c 64.895 70.68 m 54.934 70.68 49.078 78.359 49.078 91.715
 c 49.078 100.617 l 49.078 113.914 54.824 121.34 64.895 121.34 c 73.176 
121.34 78.551 116.121 79.137 108.738 c 92.902 108.738 l 92.902 110.105 l
 92.207 123.871 80.555 133.363 64.785 133.363 c 45.441 133.363 34.57 121.027
 34.57 100.617 c 34.57 91.652 l 34.57 71.254 45.539 58.652 64.785 58.652
 c 80.613 58.652 92.266 68.395 92.902 82.641 c 92.902 83.961 l 79.141 83.965
 l 78.551 76.309 73.07 70.668 64.898 70.668 c h
129.742 70.68 m 119.77 70.68 113.914 78.359 113.914 91.715 c 113.914 100.617
 l 113.914 113.914 119.676 121.34 129.742 121.34 c 138.023 121.34 143.398
 116.121 143.973 108.738 c 157.738 108.738 l 157.738 110.105 l 157.055 123.871
 145.402 133.363 129.633 133.363 c 110.277 133.363 99.418 121.027 99.418
 100.617 c 99.418 91.652 l 99.418 71.254 110.387 58.652 129.633 58.652 c
 145.449 58.652 157.113 68.395 157.738 82.641 c 157.738 83.961 l 143.973
 83.961 l 143.398 76.305 137.914 70.664 129.742 70.664 c h
129.742 70.68 m f
Q Q
showpage
%%Trailer
%%EOF
