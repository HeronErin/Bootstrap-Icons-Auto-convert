%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1440 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
1089.984 609.984 m 1102.125 597.844 1106.867 580.145 1102.422 563.562 c
 1097.98 546.977 1085.023 534.02 1068.438 529.578 c 1051.855 525.133 1034.156
 529.875 1022.016 542.016 c 768 796.129 l 657.984 686.016 l 645.844 673.875
 628.145 669.133 611.562 673.578 c 594.977 678.02 582.02 690.977 577.578
 707.562 c 573.133 724.145 577.875 741.844 590.016 753.984 c 734.016 897.984
 l 743.02 907.012 755.25 912.086 768 912.086 c 780.75 912.086 792.98 907.012
 801.984 897.984 c h
1089.984 609.984 m f
48 96 m 30.852 96 15.004 105.148 6.43 120 c -2.145 134.852 -2.145 153.148
 6.43 168 c 15.004 182.852 30.852 192 48 192 c 154.559 192 l 193.055 346.273
 l 336.863 1112.832 l 338.922 1123.832 344.762 1133.766 353.367 1140.918
 c 361.973 1148.07 372.809 1151.988 384 1152 c 480 1152 l 429.078 1152 380.242
 1172.227 344.234 1208.234 c 308.227 1244.242 288 1293.078 288 1344 c 288
 1394.922 308.227 1443.758 344.234 1479.766 c 380.242 1515.773 429.078 1536
 480 1536 c 530.922 1536 579.758 1515.773 615.766 1479.766 c 651.773 1443.758
 672 1394.922 672 1344 c 672 1293.078 651.773 1244.242 615.766 1208.234 
c 579.758 1172.227 530.922 1152 480 1152 c 1152 1152 l 1101.078 1152 1052.242
 1172.227 1016.234 1208.234 c 980.227 1244.242 960 1293.078 960 1344 c 960
 1394.922 980.227 1443.758 1016.234 1479.766 c 1052.242 1515.773 1101.078
 1536 1152 1536 c 1202.922 1536 1251.758 1515.773 1287.766 1479.766 c 1323.773
 1443.758 1344 1394.922 1344 1344 c 1344 1293.078 1323.773 1244.242 1287.766
 1208.234 c 1251.758 1172.227 1202.922 1152 1152 1152 c 1248 1152 l 1259.191
 1151.988 1270.027 1148.07 1278.633 1140.918 c 1287.238 1133.766 1293.078
 1123.832 1295.137 1112.832 c 1439.137 344.832 l 1441.762 330.805 1438.012
 316.34 1428.902 305.355 c 1419.793 294.375 1406.27 288.012 1392 288 c 277.441
 288 l 238.562 132.383 l 238.559 132.383 l 235.969 121.996 229.98 112.77
 221.543 106.18 c 213.105 99.586 202.707 96.004 192 96 c h
423.84 1056 m 297.793 384 l 1334.207 384 l 1208.16 1056 l h
576 1344 m 576 1378.297 557.703 1409.988 528 1427.137 c 498.297 1444.289
 461.703 1444.289 432 1427.137 c 402.297 1409.988 384 1378.297 384 1344 
c 384 1309.703 402.297 1278.012 432 1260.863 c 461.703 1243.711 498.297 
1243.711 528 1260.863 c 557.703 1278.012 576 1309.703 576 1344 c 1248 1344
 m 1248 1378.297 1229.703 1409.988 1200 1427.137 c 1170.297 1444.289 1133.703
 1444.289 1104 1427.137 c 1074.297 1409.988 1056 1378.297 1056 1344 c 1056
 1309.703 1074.297 1278.012 1104 1260.863 c 1133.703 1243.711 1170.297 1243.711
 1200 1260.863 c 1229.703 1278.012 1248 1309.703 1248 1344 c f
Q Q
showpage
%%Trailer
%%EOF
