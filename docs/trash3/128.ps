%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 96
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
39 6 m 57 6 l 57.797 6 58.559 6.316 59.121 6.879 c 59.684 7.441 60 8.203
 60 9 c 60 15 l 36 15 l 36 9 l 36 7.344 37.344 6 39 6 c 66 15 m 66 9 l 66
 4.031 61.969 0 57 0 c 39 0 l 34.031 0 30 4.031 30 9 c 30 15 l 9 15 l 7.344
 15 6 16.344 6 18 c 6 19.656 7.344 21 9 21 c 12.227 21 l 17.344 84.961 l
 17.348 84.961 l 17.848 91.195 23.055 96 29.309 96 c 66.691 96 l 72.945 
96 78.152 91.195 78.652 84.961 c 83.77 21 l 87 21 l 88.656 21 90 19.656 
90 18 c 90 16.344 88.656 15 87 15 c h
77.746 21 m 72.672 84.48 l 72.422 87.598 69.816 90 66.691 90 c 29.309 90
 l 26.184 90 23.578 87.598 23.328 84.48 c 18.254 21 l h
32.824 27 m 34.48 26.906 35.898 28.168 35.992 29.82 c 38.992 80.82 l 39.059
 82.453 37.809 83.836 36.176 83.934 c 34.547 84.031 33.137 82.809 33.008
 81.18 c 30 30.18 l 29.949 29.383 30.219 28.602 30.75 28.004 c 31.277 27.406
 32.023 27.047 32.82 27 c h
63.172 27 m 63.176 27 l 63.969 27.047 64.715 27.406 65.246 28.004 c 65.773
 28.602 66.043 29.383 65.992 30.18 c 62.992 81.18 l 62.961 81.984 62.605
 82.742 62.008 83.285 c 61.41 83.824 60.621 84.102 59.816 84.055 c 59.012
 84.004 58.262 83.637 57.73 83.027 c 57.203 82.418 56.941 81.625 57.008 
80.82 c 60.008 29.82 l 60.102 28.168 61.52 26.906 63.176 27 c 48 27 m 48.797
 27 49.559 27.316 50.121 27.879 c 50.684 28.441 51 29.203 51 30 c 51 81 
l 51 82.656 49.656 84 48 84 c 46.344 84 45 82.656 45 81 c 45 30 l 45 28.344
 46.344 27 48 27 c f
Q Q
showpage
%%Trailer
%%EOF
