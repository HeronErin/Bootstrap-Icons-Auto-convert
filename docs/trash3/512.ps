%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
156 24 m 228 24 l 231.184 24 234.234 25.266 236.484 27.516 c 238.734 29.766
 240 32.816 240 36 c 240 60 l 144 60 l 144 36 l 144 29.371 149.371 24 156
 24 c 264 60 m 264 36 l 264 26.453 260.207 17.297 253.457 10.543 c 246.703
 3.793 237.547 0 228 0 c 156 0 l 146.453 0 137.297 3.793 130.543 10.543 
c 123.793 17.297 120 26.453 120 36 c 120 60 l 36 60 l 29.371 60 24 65.371
 24 72 c 24 78.629 29.371 84 36 84 c 48.91 84 l 69.383 339.84 l 70.348 351.867
 75.809 363.094 84.68 371.277 c 93.547 379.461 105.172 384.004 117.238 384
 c 266.762 384 l 278.828 384.004 290.453 379.461 299.32 371.277 c 308.191
 363.094 313.652 351.867 314.617 339.84 c 335.09 84 l 348 84 l 354.629 84
 360 78.629 360 72 c 360 65.371 354.629 60 348 60 c h
310.992 84 m 290.688 337.922 l 290.207 343.934 287.477 349.547 283.039 
353.637 c 278.605 357.73 272.793 360 266.762 360 c 117.238 360 l 111.207
 360 105.395 357.73 100.961 353.637 c 96.523 349.547 93.793 343.934 93.312
 337.922 c 73.008 84 l h
131.305 108 m 137.918 107.617 143.59 112.668 143.977 119.281 c 155.977 
323.281 l 156.238 329.809 151.227 335.348 144.707 335.738 c 138.184 336.133
 132.547 331.234 132.023 324.719 c 120 120.719 l 119.805 117.535 120.883
 114.406 123 112.02 c 125.117 109.633 128.094 108.184 131.281 108 c h
252.695 108 m 255.879 108.184 258.859 109.633 260.977 112.02 c 263.094 
114.406 264.172 117.535 263.977 120.719 c 251.977 324.719 l 251.848 327.941
 250.426 330.977 248.035 333.137 c 245.645 335.301 242.484 336.41 239.266
 336.215 c 236.047 336.023 233.043 334.543 230.926 332.109 c 228.812 329.676
 227.766 326.492 228.023 323.281 c 240.023 119.281 l 240.41 112.668 246.082
 107.617 252.695 108 c 192 108 m 195.184 108 198.234 109.266 200.484 111.516
 c 202.734 113.766 204 116.816 204 120 c 204 324 l 204 330.629 198.629 336
 192 336 c 185.371 336 180 330.629 180 324 c 180 120 l 180 113.371 185.371
 108 192 108 c f
Q Q
showpage
%%Trailer
%%EOF
