%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 192
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
78 12 m 114 12 l 115.59 12 117.117 12.633 118.242 13.758 c 119.367 14.883
 120 16.41 120 18 c 120 30 l 72 30 l 72 18 l 72 14.688 74.688 12 78 12 c
 132 30 m 132 18 l 132 13.227 130.105 8.648 126.727 5.273 c 123.352 1.895
 118.773 0 114 0 c 78 0 l 73.227 0 68.648 1.895 65.273 5.273 c 61.895 8.648
 60 13.227 60 18 c 60 30 l 18 30 l 14.688 30 12 32.688 12 36 c 12 39.312
 14.688 42 18 42 c 24.457 42 l 34.691 169.922 l 35.176 175.934 37.906 181.547
 42.34 185.637 c 46.773 189.73 52.586 192 58.621 192 c 133.383 192 l 133.379
 192 l 139.414 192 145.227 189.73 149.66 185.637 c 154.094 181.547 156.824
 175.934 157.309 169.922 c 167.543 42 l 174 42 l 177.312 42 180 39.312 180
 36 c 180 32.688 177.312 30 174 30 c h
155.496 42 m 145.344 168.961 l 144.844 175.195 139.637 180 133.379 180 
c 58.617 180 l 58.621 180 l 52.363 180 47.156 175.195 46.656 168.961 c 36.504
 42 l h
65.652 54 m 68.957 53.809 71.793 56.332 71.988 59.641 c 77.988 161.641 
l 78.117 164.906 75.613 167.676 72.352 167.871 c 69.09 168.066 66.273 165.617
 66.012 162.359 c 60 60.359 l 59.902 58.77 60.441 57.203 61.5 56.008 c 62.559
 54.816 64.047 54.094 65.641 54 c h
126.348 54 m 127.941 54.094 129.43 54.816 130.488 56.008 c 131.547 57.203
 132.086 58.77 131.988 60.359 c 125.988 162.359 l 125.922 163.969 125.215
 165.488 124.02 166.57 c 122.82 167.648 121.242 168.207 119.633 168.109 
c 118.023 168.012 116.52 167.27 115.465 166.055 c 114.406 164.84 113.883
 163.246 114.012 161.641 c 120.012 59.641 l 120.207 56.332 123.043 53.809
 126.348 54 c 96 54 m 97.59 54 99.117 54.633 100.242 55.758 c 101.367 56.883
 102 58.41 102 60 c 102 162 l 102 165.312 99.312 168 96 168 c 92.688 168
 90 165.312 90 162 c 90 60 l 90 56.688 92.688 54 96 54 c f
Q Q
showpage
%%Trailer
%%EOF
