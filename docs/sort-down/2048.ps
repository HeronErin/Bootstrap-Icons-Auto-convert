%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 47 287 1440 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 47 287 1440 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 47 287 1393 1057 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 240 m 336 222.852 326.852 207.004 312 198.43 c 297.148 189.855 278.852
 189.855 264 198.43 c 249.148 207.004 240 222.852 240 240 c 240 1084.129
 l 129.984 974.016 l 117.844 961.875 100.145 957.133 83.562 961.578 c 66.977
 966.02 54.02 978.977 49.578 995.562 c 45.133 1012.145 49.875 1029.844 62.016
 1041.984 c 254.016 1233.887 l 254.688 1234.559 l 263.699 1243.348 275.82
 1248.219 288.406 1248.109 c 300.992 1248.004 313.027 1242.926 321.887 1233.984
 c 513.887 1041.984 l 526.031 1029.859 530.781 1012.18 526.352 995.602 c
 521.922 979.027 508.984 966.07 492.414 961.617 c 475.844 957.164 458.156
 961.891 446.016 974.016 c 336 1084.129 l h
672 336 m 672 323.27 677.059 311.062 686.059 302.059 c 695.062 293.059 
707.27 288 720 288 c 1392 288 l 1409.148 288 1424.996 297.148 1433.57 312
 c 1442.145 326.852 1442.145 345.148 1433.57 360 c 1424.996 374.852 1409.148
 384 1392 384 c 720 384 l 707.27 384 695.062 378.941 686.059 369.941 c 677.059
 360.938 672 348.73 672 336 c 720 576 m 702.852 576 687.004 585.148 678.43
 600 c 669.855 614.852 669.855 633.148 678.43 648 c 687.004 662.852 702.852
 672 720 672 c 1200 672 l 1217.148 672 1232.996 662.852 1241.57 648 c 1250.145
 633.148 1250.145 614.852 1241.57 600 c 1232.996 585.148 1217.148 576 1200
 576 c h
720 864 m 702.852 864 687.004 873.148 678.43 888 c 669.855 902.852 669.855
 921.148 678.43 936 c 687.004 950.852 702.852 960 720 960 c 1008 960 l 1025.148
 960 1040.996 950.852 1049.57 936 c 1058.145 921.148 1058.145 902.852 1049.57
 888 c 1040.996 873.148 1025.148 864 1008 864 c h
720 1152 m 702.852 1152 687.004 1161.148 678.43 1176 c 669.855 1190.852
 669.855 1209.148 678.43 1224 c 687.004 1238.852 702.852 1248 720 1248 c
 816 1248 l 833.148 1248 848.996 1238.852 857.57 1224 c 866.145 1209.148
 866.145 1190.852 857.57 1176 c 848.996 1161.148 833.148 1152 816 1152 c
 h
720 1152 m f
Q Q
showpage
%%Trailer
%%EOF
