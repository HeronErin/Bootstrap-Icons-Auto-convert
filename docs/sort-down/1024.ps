%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 23 143 720 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 23 143 720 672
768 768 cairo_set_page_size
%%EndPageSetup
q 23 143 697 529 rectclip
1 0 0 -1 0 768 cm q
0 g
168 120 m 168 111.426 163.426 103.504 156 99.215 c 148.574 94.93 139.426
 94.93 132 99.215 c 124.574 103.504 120 111.426 120 120 c 120 542.062 l 
64.992 487.008 l 58.922 480.938 50.074 478.566 41.781 480.789 c 33.488 483.012
 27.012 489.488 24.789 497.781 c 22.566 506.074 24.938 514.922 31.008 520.992
 c 127.008 616.945 l 127.344 617.281 l 131.852 621.676 137.91 624.109 144.203
 624.055 c 150.496 624 156.516 621.461 160.945 616.992 c 256.945 520.992
 l 263.016 514.93 265.391 506.09 263.176 497.801 c 260.961 489.512 254.492
 483.035 246.207 480.809 c 237.922 478.582 229.078 480.945 223.008 487.008
 c 168 542.062 l h
336 168 m 336 161.637 338.527 155.531 343.031 151.031 c 347.531 146.527
 353.637 144 360 144 c 696 144 l 704.574 144 712.496 148.574 716.785 156
 c 721.07 163.426 721.07 172.574 716.785 180 c 712.496 187.426 704.574 192
 696 192 c 360 192 l 353.637 192 347.531 189.473 343.031 184.969 c 338.527
 180.469 336 174.363 336 168 c 360 288 m 351.426 288 343.504 292.574 339.215
 300 c 334.93 307.426 334.93 316.574 339.215 324 c 343.504 331.426 351.426
 336 360 336 c 600 336 l 608.574 336 616.496 331.426 620.785 324 c 625.07
 316.574 625.07 307.426 620.785 300 c 616.496 292.574 608.574 288 600 288
 c h
360 432 m 351.426 432 343.504 436.574 339.215 444 c 334.93 451.426 334.93
 460.574 339.215 468 c 343.504 475.426 351.426 480 360 480 c 504 480 l 512.574
 480 520.496 475.426 524.785 468 c 529.07 460.574 529.07 451.426 524.785
 444 c 520.496 436.574 512.574 432 504 432 c h
360 576 m 351.426 576 343.504 580.574 339.215 588 c 334.93 595.426 334.93
 604.574 339.215 612 c 343.504 619.426 351.426 624 360 624 c 408 624 l 416.574
 624 424.496 619.426 428.785 612 c 433.07 604.574 433.07 595.426 428.785
 588 c 424.496 580.574 416.574 576 408 576 c h
360 576 m f
Q Q
showpage
%%Trailer
%%EOF
