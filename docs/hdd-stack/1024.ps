%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
672 480 m 684.73 480 696.938 485.059 705.941 494.059 c 714.941 503.062 
720 515.27 720 528 c 720 576 l 720 588.73 714.941 600.938 705.941 609.941
 c 696.938 618.941 684.73 624 672 624 c 96 624 l 83.27 624 71.062 618.941
 62.059 609.941 c 53.059 600.938 48 588.73 48 576 c 48 528 l 48 515.27 53.059
 503.062 62.059 494.059 c 71.062 485.059 83.27 480 96 480 c h
96 432 m 70.539 432 46.121 442.113 28.117 460.117 c 10.113 478.121 0 502.539
 0 528 c 0 576 l 0 601.461 10.113 625.879 28.117 643.883 c 46.121 661.887
 70.539 672 96 672 c 672 672 l 697.461 672 721.879 661.887 739.883 643.883
 c 757.887 625.879 768 601.461 768 576 c 768 528 l 768 502.539 757.887 478.121
 739.883 460.117 c 721.879 442.113 697.461 432 672 432 c h
96 432 m f
240 552 m 240 560.574 235.426 568.496 228 572.785 c 220.574 577.07 211.426
 577.07 204 572.785 c 196.574 568.496 192 560.574 192 552 c 192 543.426 
196.574 535.504 204 531.215 c 211.426 526.93 220.574 526.93 228 531.215 
c 235.426 535.504 240 543.426 240 552 c 144 552 m 144 560.574 139.426 568.496
 132 572.785 c 124.574 577.07 115.426 577.07 108 572.785 c 100.574 568.496
 96 560.574 96 552 c 96 543.426 100.574 535.504 108 531.215 c 115.426 526.93
 124.574 526.93 132 531.215 c 139.426 535.504 144 543.426 144 552 c 672 
144 m 684.73 144 696.938 149.059 705.941 158.059 c 714.941 167.062 720 179.27
 720 192 c 720 240 l 720 252.73 714.941 264.938 705.941 273.941 c 696.938
 282.941 684.73 288 672 288 c 96 288 l 83.27 288 71.062 282.941 62.059 273.941
 c 53.059 264.938 48 252.73 48 240 c 48 192 l 48 179.27 53.059 167.062 62.059
 158.059 c 71.062 149.059 83.27 144 96 144 c h
96 96 m 70.539 96 46.121 106.113 28.117 124.117 c 10.113 142.121 0 166.539
 0 192 c 0 240 l 0 265.461 10.113 289.879 28.117 307.883 c 46.121 325.887
 70.539 336 96 336 c 672 336 l 697.461 336 721.879 325.887 739.883 307.883
 c 757.887 289.879 768 265.461 768 240 c 768 192 l 768 166.539 757.887 142.121
 739.883 124.117 c 721.879 106.113 697.461 96 672 96 c h
96 96 m f
240 216 m 240 224.574 235.426 232.496 228 236.785 c 220.574 241.07 211.426
 241.07 204 236.785 c 196.574 232.496 192 224.574 192 216 c 192 207.426 
196.574 199.504 204 195.215 c 211.426 190.93 220.574 190.93 228 195.215 
c 235.426 199.504 240 207.426 240 216 c 144 216 m 144 224.574 139.426 232.496
 132 236.785 c 124.574 241.07 115.426 241.07 108 236.785 c 100.574 232.496
 96 224.574 96 216 c 96 207.426 100.574 199.504 108 195.215 c 115.426 190.93
 124.574 190.93 132 195.215 c 139.426 199.504 144 207.426 144 216 c f
Q Q
showpage
%%Trailer
%%EOF
