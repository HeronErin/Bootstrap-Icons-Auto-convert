%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 768 m 96 946.227 166.801 1117.152 292.824 1243.176 c 418.848 1369.199
 589.773 1440 768 1440 c 946.227 1440 1117.152 1369.199 1243.176 1243.176
 c 1369.199 1117.152 1440 946.227 1440 768 c 1440 589.773 1369.199 418.848
 1243.176 292.824 c 1117.152 166.801 946.227 96 768 96 c 589.773 96 418.848
 166.801 292.824 292.824 c 166.801 418.848 96 589.773 96 768 c 1536 768 
m 1536 971.688 1455.086 1167.031 1311.059 1311.059 c 1167.031 1455.086 971.688
 1536 768 1536 c 564.312 1536 368.969 1455.086 224.941 1311.059 c 80.914
 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969 224.941 224.941 c 368.969
 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914 1311.059 224.941 c 1455.086
 368.969 1536 564.312 1536 768 c 969.215 1037.09 m 978.16 1046.348 990.449
 1051.629 1003.324 1051.738 c 1016.199 1051.852 1028.578 1046.785 1037.684
 1037.684 c 1046.785 1028.578 1051.852 1016.199 1051.738 1003.324 c 1051.629
 990.449 1046.348 978.16 1037.09 969.215 c 643.871 576 l 909.602 576 l 926.75
 576 942.594 566.852 951.168 552 c 959.742 537.148 959.742 518.852 951.168
 504 c 942.594 489.148 926.75 480 909.602 480 c 528 480 l 515.27 480 503.062
 485.059 494.059 494.059 c 485.059 503.062 480 515.27 480 528 c 480 909.602
 l 480 926.75 489.148 942.594 504 951.168 c 518.852 959.742 537.148 959.742
 552 951.168 c 566.852 942.594 576 926.75 576 909.602 c 576 643.871 l h
969.215 1037.09 m f*
Q Q
showpage
%%Trailer
%%EOF
