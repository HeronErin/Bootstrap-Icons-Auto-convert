%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
72 6 m 73.59 6 75.117 6.633 76.242 7.758 c 77.367 8.883 78 10.41 78 12 
c 78 84 l 78 85.59 77.367 87.117 76.242 88.242 c 75.117 89.367 73.59 90 
72 90 c 24 90 l 20.688 90 18 87.312 18 84 c 18 12 l 18 8.688 20.688 6 24
 6 c h
24 0 m 17.371 0 12 5.371 12 12 c 12 84 l 12 87.184 13.266 90.234 15.516
 92.484 c 17.766 94.734 20.816 96 24 96 c 72 96 l 75.184 96 78.234 94.734
 80.484 92.484 c 82.734 90.234 84 87.184 84 84 c 84 12 l 84 8.816 82.734
 5.766 80.484 3.516 c 78.234 1.266 75.184 0 72 0 c h
24 0 m f
24 15 m 24 13.344 25.344 12 27 12 c 69 12 l 69.797 12 70.559 12.316 71.121
 12.879 c 71.684 13.441 72 14.203 72 15 c 72 27 l 72 27.797 71.684 28.559
 71.121 29.121 c 70.559 29.684 69.797 30 69 30 c 27 30 l 25.344 30 24 28.656
 24 27 c h
24 39 m 24 37.344 25.344 36 27 36 c 33 36 l 33.797 36 34.559 36.316 35.121
 36.879 c 35.684 37.441 36 38.203 36 39 c 36 45 l 36 45.797 35.684 46.559
 35.121 47.121 c 34.559 47.684 33.797 48 33 48 c 27 48 l 25.344 48 24 46.656
 24 45 c h
24 57 m 24 55.344 25.344 54 27 54 c 33 54 l 33.797 54 34.559 54.316 35.121
 54.879 c 35.684 55.441 36 56.203 36 57 c 36 63 l 36 63.797 35.684 64.559
 35.121 65.121 c 34.559 65.684 33.797 66 33 66 c 27 66 l 25.344 66 24 64.656
 24 63 c h
24 75 m 24 73.344 25.344 72 27 72 c 33 72 l 33.797 72 34.559 72.316 35.121
 72.879 c 35.684 73.441 36 74.203 36 75 c 36 81 l 36 81.797 35.684 82.559
 35.121 83.121 c 34.559 83.684 33.797 84 33 84 c 27 84 l 25.344 84 24 82.656
 24 81 c h
42 39 m 42 37.344 43.344 36 45 36 c 51 36 l 51.797 36 52.559 36.316 53.121
 36.879 c 53.684 37.441 54 38.203 54 39 c 54 45 l 54 45.797 53.684 46.559
 53.121 47.121 c 52.559 47.684 51.797 48 51 48 c 45 48 l 43.344 48 42 46.656
 42 45 c h
42 57 m 42 55.344 43.344 54 45 54 c 51 54 l 51.797 54 52.559 54.316 53.121
 54.879 c 53.684 55.441 54 56.203 54 57 c 54 63 l 54 63.797 53.684 64.559
 53.121 65.121 c 52.559 65.684 51.797 66 51 66 c 45 66 l 43.344 66 42 64.656
 42 63 c h
42 75 m 42 73.344 43.344 72 45 72 c 51 72 l 51.797 72 52.559 72.316 53.121
 72.879 c 53.684 73.441 54 74.203 54 75 c 54 81 l 54 81.797 53.684 82.559
 53.121 83.121 c 52.559 83.684 51.797 84 51 84 c 45 84 l 43.344 84 42 82.656
 42 81 c h
60 39 m 60 37.344 61.344 36 63 36 c 69 36 l 69.797 36 70.559 36.316 71.121
 36.879 c 71.684 37.441 72 38.203 72 39 c 72 45 l 72 45.797 71.684 46.559
 71.121 47.121 c 70.559 47.684 69.797 48 69 48 c 63 48 l 61.344 48 60 46.656
 60 45 c h
60 57 m 60 55.344 61.344 54 63 54 c 69 54 l 69.797 54 70.559 54.316 71.121
 54.879 c 71.684 55.441 72 56.203 72 57 c 72 81 l 72 81.797 71.684 82.559
 71.121 83.121 c 70.559 83.684 69.797 84 69 84 c 63 84 l 61.344 84 60 82.656
 60 81 c h
60 57 m f
Q Q
showpage
%%Trailer
%%EOF
