%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 720 m 780.73 720 792.938 725.059 801.941 734.059 c 810.941 743.062 
816 755.27 816 768 c 816 912 l 960 912 l 977.148 912 992.996 921.148 1001.57
 936 c 1010.145 950.852 1010.145 969.148 1001.57 984 c 992.996 998.852 977.148
 1008 960 1008 c 816 1008 l 816 1152 l 816 1169.148 806.852 1184.996 792
 1193.57 c 777.148 1202.145 758.852 1202.145 744 1193.57 c 729.148 1184.996
 720 1169.148 720 1152 c 720 1008 l 576 1008 l 558.852 1008 543.004 998.852
 534.43 984 c 525.855 969.148 525.855 950.852 534.43 936 c 543.004 921.148
 558.852 912 576 912 c 720 912 l 720 768 l 720 755.27 725.059 743.062 734.059
 734.059 c 743.062 725.059 755.27 720 768 720 c f*
768 96 m 810.129 96 851.516 107.09 888 128.152 c 924.484 149.219 954.781
 179.516 975.848 216 c 996.91 252.484 1008 293.871 1008 336 c 1008 384 l
 528 384 l 528 336 l 528 272.348 553.285 211.305 598.293 166.293 c 643.305
 121.285 704.348 96 768 96 c 1104 384 m 1104 336 l 1104 246.887 1068.602
 161.426 1005.586 98.414 c 942.574 35.398 857.113 0 768 0 c 678.887 0 593.426
 35.398 530.414 98.414 c 467.398 161.426 432 246.887 432 336 c 432 384 l
 96 384 l 96 1344 l 96 1377.703 104.871 1410.812 121.723 1440 c 138.574 
1469.188 162.812 1493.426 192 1510.277 c 221.188 1527.129 254.297 1536 288
 1536 c 1248 1536 l 1281.703 1536 1314.812 1527.129 1344 1510.277 c 1373.188
 1493.426 1397.426 1469.188 1414.277 1440 c 1431.129 1410.812 1440 1377.703
 1440 1344 c 1440 384 l h
192 480 m 1344 480 l 1344 1344 l 1344 1369.461 1333.887 1393.879 1315.883
 1411.883 c 1297.879 1429.887 1273.461 1440 1248 1440 c 288 1440 l 262.539
 1440 238.121 1429.887 220.117 1411.883 c 202.113 1393.879 192 1369.461 
192 1344 c h
192 480 m f
Q Q
showpage
%%Trailer
%%EOF
