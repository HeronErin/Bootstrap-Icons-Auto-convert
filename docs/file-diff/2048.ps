%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 384 m 780.73 384 792.938 389.059 801.941 398.059 c 810.941 407.062 
816 419.27 816 432 c 816 576 l 960 576 l 977.148 576 992.996 585.148 1001.57
 600 c 1010.145 614.852 1010.145 633.148 1001.57 648 c 992.996 662.852 977.148
 672 960 672 c 816 672 l 816 816 l 816 833.148 806.852 848.996 792 857.57
 c 777.148 866.145 758.852 866.145 744 857.57 c 729.148 848.996 720 833.148
 720 816 c 720 672 l 576 672 l 558.852 672 543.004 662.852 534.43 648 c 
525.855 633.148 525.855 614.852 534.43 600 c 543.004 585.148 558.852 576
 576 576 c 720 576 l 720 432 l 720 419.27 725.059 407.062 734.059 398.059
 c 743.062 389.059 755.27 384 768 384 c 528 1008 m 528 995.27 533.059 983.062
 542.059 974.059 c 551.062 965.059 563.27 960 576 960 c 960 960 l 977.148
 960 992.996 969.148 1001.57 984 c 1010.145 998.852 1010.145 1017.148 1001.57
 1032 c 992.996 1046.852 977.148 1056 960 1056 c 576 1056 l 563.27 1056 
551.062 1050.941 542.059 1041.941 c 533.059 1032.938 528 1020.73 528 1008
 c f
192 192 m 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078
 0 384 0 c 1152 0 l 1185.703 0 1218.812 8.871 1248 25.723 c 1277.188 42.574
 1301.426 66.812 1318.277 96 c 1335.129 125.188 1344 158.297 1344 192 c 
1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 1301.426 1469.188
 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703 1536 1152 
1536 c 384 1536 l 333.078 1536 284.242 1515.773 248.234 1479.766 c 212.227
 1443.758 192 1394.922 192 1344 c h
1152 96 m 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113
 142.121 288 166.539 288 192 c 288 1344 l 288 1369.461 298.113 1393.879 
316.117 1411.883 c 334.121 1429.887 358.539 1440 384 1440 c 1152 1440 l 
1177.461 1440 1201.879 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248
 1369.461 1248 1344 c 1248 192 l 1248 166.539 1237.887 142.121 1219.883 
124.117 c 1201.879 106.113 1177.461 96 1152 96 c f
Q Q
showpage
%%Trailer
%%EOF
