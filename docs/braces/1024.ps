%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 97 720 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 97 720 672
768 768 cairo_set_page_size
%%EndPageSetup
q 48 97 672 575 rectclip
1 0 0 -1 0 768 cm q
0 g
101.473 387.023 m 101.473 379.199 l 149.711 374.305 173.328 349.68 173.328
 302.398 c 173.328 216.145 l 173.328 163.633 192.047 142.32 238.32 142.32
 c 251.426 142.32 l 251.426 96 l 233.379 96 l 156 96 119.52 132.434 119.52
 208.895 c 119.52 282.047 l 119.52 334.559 101.473 351.934 48 351.934 c 
48 414.285 l 101.473 414.285 119.52 431.66 119.52 484.172 c 119.52 557.324
 l 119.52 633.789 155.953 670.219 233.375 670.219 c 251.422 670.219 l 251.422
 623.945 l 238.316 623.945 l 192.043 623.945 173.324 602.633 173.324 550.121
 c 173.328 463.824 l 173.328 416.594 149.711 391.969 101.473 387.023 c 666.527
 379.199 m 666.527 387.023 l 618.289 391.969 594.672 416.59 594.672 463.824
 c 594.672 550.129 l 594.672 602.641 575.953 623.953 529.68 623.953 c 516.574
 623.953 l 516.574 670.227 l 534.621 670.227 l 612.047 670.227 648.477 633.793
 648.477 557.332 c 648.477 484.18 l 648.477 431.668 666.523 414.293 719.996
 414.293 c 720 351.938 l 666.527 351.938 648.48 334.562 648.48 282.051 c
 648.48 208.895 l 648.48 132.434 612 96 534.625 96 c 516.578 96 l 516.578
 142.273 l 529.684 142.273 l 575.957 142.273 594.676 163.586 594.676 216.098
 c 594.672 302.398 l 594.672 349.629 618.289 374.254 666.527 379.199 c f
Q Q
showpage
%%Trailer
%%EOF
