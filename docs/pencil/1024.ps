%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
583.008 7.008 m 587.512 2.492 593.625 -0.043 600 -0.043 c 606.375 -0.043
 612.488 2.492 616.992 7.008 c 760.992 151.008 l 765.508 155.512 768.043
 161.625 768.043 168 c 768.043 174.375 765.508 180.488 760.992 184.992 c
 280.992 664.992 l 278.688 667.277 275.945 669.074 272.93 670.273 c 32.93
 766.273 l 27.082 768.613 20.547 768.562 14.738 766.129 c 8.926 763.691 
4.309 759.074 1.871 753.262 c -0.562 747.453 -0.613 740.918 1.727 735.07
 c 97.727 495.07 l 98.926 492.055 100.723 489.312 103.008 487.008 c h
537.938 120 m 648 230.062 l 710.062 168 l 600 57.938 l h
614.066 264 m 504 153.938 l 192 465.938 l 192 480 l 216 480 l 222.363 480
 228.469 482.527 232.969 487.031 c 237.473 491.531 240 497.637 240 504 c
 240 528 l 264 528 l 270.363 528 276.469 530.527 280.969 535.031 c 285.473
 539.531 288 545.637 288 552 c 288 576 l 302.062 576 l h
145.539 512.398 m 140.449 517.488 l 67.105 700.895 l 250.512 627.551 l 
255.602 622.461 l 255.602 622.465 l 251.023 620.754 247.074 617.688 244.289
 613.672 c 241.5 609.656 240.004 604.887 240 600 c 240 576 l 216 576 l 209.637
 576 203.531 573.473 199.031 568.969 c 194.527 564.469 192 558.363 192 552
 c 192 528 l 168 528 l 163.113 527.996 158.344 526.5 154.328 523.711 c 150.312
 520.926 147.246 516.977 145.535 512.398 c f
Q Q
showpage
%%Trailer
%%EOF
