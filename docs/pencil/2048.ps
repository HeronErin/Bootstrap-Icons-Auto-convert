%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1166.016 14.016 m 1175.02 4.988 1187.25 -0.086 1200 -0.086 c 1212.75 -0.086
 1224.98 4.988 1233.984 14.016 c 1521.984 302.016 l 1531.012 311.02 1536.086
 323.25 1536.086 336 c 1536.086 348.75 1531.012 360.98 1521.984 369.984 
c 561.984 1329.984 l 557.379 1334.559 551.891 1338.152 545.855 1340.543 
c 65.855 1532.543 l 54.16 1537.227 41.094 1537.121 29.473 1532.254 c 17.855
 1527.387 8.613 1518.145 3.746 1506.527 c -1.121 1494.906 -1.227 1481.84
 3.457 1470.145 c 195.457 990.145 l 197.848 984.109 201.441 978.621 206.016
 974.016 c h
1075.871 240 m 1296 460.129 l 1420.129 336 l 1200 115.871 l h
1228.129 528 m 1008 307.871 l 384 931.871 l 384 960 l 432 960 l 444.73 
960 456.938 965.059 465.941 974.059 c 474.941 983.062 480 995.27 480 1008
 c 480 1056 l 528 1056 l 540.73 1056 552.938 1061.059 561.941 1070.059 c
 570.941 1079.062 576 1091.27 576 1104 c 576 1152 l 604.129 1152 l h
291.074 1024.801 m 280.898 1034.977 l 134.211 1401.793 l 501.027 1255.105
 l 511.203 1244.93 l 511.199 1244.93 l 502.043 1241.508 494.148 1235.371
 488.574 1227.344 c 483 1219.312 480.008 1209.773 480 1200 c 480 1152 l 
432 1152 l 419.27 1152 407.062 1146.941 398.059 1137.941 c 389.059 1128.938
 384 1116.73 384 1104 c 384 1056 l 336 1056 l 326.227 1055.992 316.688 1053
 308.656 1047.426 c 300.629 1041.852 294.492 1033.957 291.07 1024.801 c f
Q Q
showpage
%%Trailer
%%EOF
