%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 312 rectclip
1 0 0 -1 0 384 cm q
0 g
192 144 m 217.723 144 241.492 157.723 254.355 180 c 267.215 202.277 267.215
 229.723 254.355 252 c 241.492 274.277 217.723 288 192 288 c 166.277 288
 142.508 274.277 129.645 252 c 116.785 229.723 116.785 202.277 129.645 180
 c 142.508 157.723 166.277 144 192 144 c 216 216 m 216 207.426 211.426 199.504
 204 195.215 c 196.574 190.93 187.426 190.93 180 195.215 c 172.574 199.504
 168 207.426 168 216 c 168 224.574 172.574 232.496 180 236.785 c 187.426
 241.07 196.574 241.07 204 236.785 c 211.426 232.496 216 224.574 216 216
 c f
60 360 m 53.371 360 48 354.629 48 348 c 48 274.801 l 29.773 271.098 14.297
 259.156 6.094 242.465 c -2.109 225.777 -2.109 206.223 6.094 189.535 c 14.297
 172.844 29.773 160.902 48 157.199 c 48 108 l 47.996 104.816 49.254 101.758
 51.504 99.504 c 99.504 51.504 l 101.758 49.254 104.816 47.996 108 48 c 
276 48 l 279.184 47.996 282.242 49.254 284.496 51.504 c 332.496 99.504 l
 334.746 101.758 336.004 104.816 336 108 c 336 157.199 l 354.227 160.902
 369.703 172.844 377.906 189.535 c 386.109 206.223 386.109 225.777 377.906
 242.465 c 369.703 259.156 354.227 271.098 336 274.801 c 336 348 l 336 351.184
 334.734 354.234 332.484 356.484 c 330.234 358.734 327.184 360 324 360 c
 h
192 120 m 157.703 120 126.012 138.297 108.863 168 c 91.711 197.703 91.711
 234.297 108.863 264 c 126.012 293.703 157.703 312 192 312 c 226.297 312
 257.988 293.703 275.137 264 c 292.289 234.297 292.289 197.703 275.137 168
 c 257.988 138.297 226.297 120 192 120 c f
Q Q
showpage
%%Trailer
%%EOF
