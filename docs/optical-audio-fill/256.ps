%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 156 rectclip
1 0 0 -1 0 192 cm q
0 g
96 72 m 108.863 72 120.746 78.863 127.176 90 c 133.609 101.137 133.609 
114.863 127.176 126 c 120.746 137.137 108.863 144 96 144 c 83.137 144 71.254
 137.137 64.824 126 c 58.391 114.863 58.391 101.137 64.824 90 c 71.254 78.863
 83.137 72 96 72 c 108 108 m 108 101.371 102.629 96 96 96 c 89.371 96 84
 101.371 84 108 c 84 114.629 89.371 120 96 120 c 102.629 120 108 114.629
 108 108 c f
30 180 m 26.688 180 24 177.312 24 174 c 24 137.398 l 14.887 135.551 7.148
 129.578 3.047 121.234 c -1.055 112.887 -1.055 103.113 3.047 94.766 c 7.148
 86.422 14.887 80.449 24 78.602 c 24 54 l 23.996 52.406 24.629 50.879 25.754
 49.754 c 49.754 25.754 l 50.879 24.629 52.406 23.996 54 24 c 138 24 l 139.594
 23.996 141.121 24.629 142.246 25.754 c 166.246 49.754 l 167.371 50.879 
168.004 52.406 168 54 c 168 78.602 l 177.113 80.449 184.852 86.422 188.953
 94.766 c 193.055 103.113 193.055 112.887 188.953 121.234 c 184.852 129.578
 177.113 135.551 168 137.398 c 168 174 l 168 175.59 167.367 177.117 166.242
 178.242 c 165.117 179.367 163.59 180 162 180 c h
96 60 m 78.852 60 63.004 69.148 54.43 84 c 45.855 98.852 45.855 117.148
 54.43 132 c 63.004 146.852 78.852 156 96 156 c 113.148 156 128.996 146.852
 137.57 132 c 146.145 117.148 146.145 98.852 137.57 84 c 128.996 69.148 
113.148 60 96 60 c f
Q Q
showpage
%%Trailer
%%EOF
