%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 624 rectclip
1 0 0 -1 0 768 cm q
0 g
384 288 m 435.445 288 482.984 315.445 508.707 360 c 534.43 404.555 534.43
 459.445 508.707 504 c 482.984 548.555 435.445 576 384 576 c 332.555 576
 285.016 548.555 259.293 504 c 233.57 459.445 233.57 404.555 259.293 360
 c 285.016 315.445 332.555 288 384 288 c 432 432 m 432 414.852 422.852 399.004
 408 390.43 c 393.148 381.855 374.852 381.855 360 390.43 c 345.148 399.004
 336 414.852 336 432 c 336 449.148 345.148 464.996 360 473.57 c 374.852 
482.145 393.148 482.145 408 473.57 c 422.852 464.996 432 449.148 432 432
 c f
120 720 m 113.637 720 107.531 717.473 103.031 712.969 c 98.527 708.469 
96 702.363 96 696 c 96 549.602 l 59.551 542.199 28.59 518.312 12.184 484.93
 c -4.223 451.551 -4.223 412.449 12.184 379.07 c 28.59 345.688 59.551 321.801
 96 314.398 c 96 216 l 95.988 209.629 98.508 203.52 103.008 199.008 c 199.008
 103.008 l 203.52 98.508 209.629 95.988 216 96 c 552 96 l 558.371 95.988
 564.48 98.508 568.992 103.008 c 664.992 199.008 l 669.492 203.52 672.012
 209.629 672 216 c 672 314.398 l 708.449 321.801 739.41 345.688 755.816 
379.07 c 772.223 412.449 772.223 451.551 755.816 484.93 c 739.41 518.312
 708.449 542.199 672 549.602 c 672 696 l 672 702.363 669.473 708.469 664.969
 712.969 c 660.469 717.473 654.363 720 648 720 c h
384 240 m 333.078 240 284.242 260.227 248.234 296.234 c 212.227 332.242
 192 381.078 192 432 c 192 482.922 212.227 531.758 248.234 567.766 c 284.242
 603.773 333.078 624 384 624 c 434.922 624 483.758 603.773 519.766 567.766
 c 555.773 531.758 576 482.922 576 432 c 576 381.078 555.773 332.242 519.766
 296.234 c 483.758 260.227 434.922 240 384 240 c f
Q Q
showpage
%%Trailer
%%EOF
