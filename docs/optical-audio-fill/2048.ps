%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 576 m 844.383 576 917.637 606.344 971.648 660.352 c 1025.656 714.363
 1056 787.617 1056 864 c 1056 940.383 1025.656 1013.637 971.648 1067.648
 c 917.637 1121.656 844.383 1152 768 1152 c 691.617 1152 618.363 1121.656
 564.352 1067.648 c 510.344 1013.637 480 940.383 480 864 c 480 787.617 510.344
 714.363 564.352 660.352 c 618.363 606.344 691.617 576 768 576 c 864 864
 m 864 829.703 845.703 798.012 816 780.863 c 786.297 763.711 749.703 763.711
 720 780.863 c 690.297 798.012 672 829.703 672 864 c 672 898.297 690.297
 929.988 720 947.137 c 749.703 964.289 786.297 964.289 816 947.137 c 845.703
 929.988 864 898.297 864 864 c f
240 1440 m 227.27 1440 215.062 1434.941 206.059 1425.941 c 197.059 1416.938
 192 1404.73 192 1392 c 192 1099.199 l 137.746 1088.184 88.969 1058.75 53.934
 1015.883 c 18.898 973.02 -0.242 919.359 -0.242 864 c -0.242 808.641 18.898
 754.98 53.934 712.117 c 88.969 669.25 137.746 639.816 192 628.801 c 192
 432 l 191.977 419.262 197.02 407.035 206.016 398.016 c 398.016 206.016 
l 407.035 197.02 419.262 191.977 432 192 c 1104 192 l 1116.738 191.977 1128.965
 197.02 1137.984 206.016 c 1329.984 398.016 l 1338.98 407.035 1344.023 419.262
 1344 432 c 1344 628.801 l 1398.254 639.816 1447.031 669.25 1482.066 712.117
 c 1517.102 754.98 1536.242 808.641 1536.242 864 c 1536.242 919.359 1517.102
 973.02 1482.066 1015.883 c 1447.031 1058.75 1398.254 1088.184 1344 1099.199
 c 1344 1392 l 1344 1404.73 1338.941 1416.938 1329.941 1425.941 c 1320.938
 1434.941 1308.73 1440 1296 1440 c h
768 480 m 666.156 480 568.484 520.457 496.473 592.473 c 424.457 664.484
 384 762.156 384 864 c 384 965.844 424.457 1063.516 496.473 1135.527 c 568.484
 1207.543 666.156 1248 768 1248 c 869.844 1248 967.516 1207.543 1039.527
 1135.527 c 1111.543 1063.516 1152 965.844 1152 864 c 1152 762.156 1111.543
 664.484 1039.527 592.473 c 967.516 520.457 869.844 480 768 480 c f
Q Q
showpage
%%Trailer
%%EOF
