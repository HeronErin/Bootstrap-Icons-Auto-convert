%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 672 672 rectclip
1 0 0 -1 0 768 cm q
0 g
666.191 499.871 m 635.176 479.402 596.43 474.449 561.262 486.465 c 526.098
 498.477 498.477 526.098 486.465 561.262 c 474.449 596.43 479.402 635.176
 499.871 666.191 c h
700.129 533.809 m 533.809 700.129 l 564.824 720.598 603.57 725.551 638.738
 713.535 c 673.902 701.523 701.523 673.902 713.535 638.738 c 725.551 603.57
 720.598 564.824 700.129 533.809 c 481.25 481.199 m 481.246 481.199 l 502.027
 460.008 528.047 444.695 556.664 436.824 c 585.285 428.957 615.477 428.809
 644.168 436.398 c 672.863 443.984 699.031 459.043 720.02 480.031 c 741.004
 501.02 756.051 527.191 763.637 555.887 c 771.219 584.582 771.066 614.773
 763.191 643.391 c 755.312 672.008 739.996 698.027 718.801 718.801 c 687.293
 750.309 644.559 768.008 600 768.008 c 555.441 768.008 512.707 750.309 481.199
 718.801 c 449.691 687.293 431.992 644.559 431.992 600 c 431.992 555.441
 449.691 512.707 481.199 481.199 c h
528 240 m 528 291.445 500.555 338.984 456 364.707 c 411.445 390.43 356.555
 390.43 312 364.707 c 267.445 338.984 240 291.445 240 240 c 240 188.555 
267.445 141.016 312 115.293 c 356.555 89.57 411.445 89.57 456 115.293 c 
500.555 141.016 528 188.555 528 240 c 384 336 m 418.297 336 449.988 317.703
 467.137 288 c 484.289 258.297 484.289 221.703 467.137 192 c 449.988 162.297
 418.297 144 384 144 c 349.703 144 318.012 162.297 300.863 192 c 283.711
 221.703 283.711 258.297 300.863 288 c 318.012 317.703 349.703 336 384 336
 c 396.289 672 m 390.793 656.41 387.105 640.238 385.297 623.809 c 144 623.809
 l 144.047 612 151.391 576.48 183.938 543.938 c 215.23 512.641 274.129 480
 384 480 c 396.48 480 408.32 480.398 419.52 481.199 c 430.367 464.832 443.328
 450 458.113 437.137 c 435.711 433.777 411.008 432.062 384 432 c 144 432
 96 576 96 624 c 96 672 144 672 144 672 c h
396.289 672 m f
Q Q
showpage
%%Trailer
%%EOF
