%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.738 2.871 m 4.738 2.555 4.625 2.332 4.527 2.16 c 4.496 2.113 l 4.379 
1.922 4.273 1.754 4.273 1.559 c 4.273 1.324 4.453 1.102 4.707 1.102 c 4.715
 1.102 4.723 1.102 4.73 1.102 c 4.742 1.102 l 4.738 1.102 l 4.266 0.668 
3.645 0.426 3 0.426 c 2.133 0.426 1.324 0.863 0.852 1.586 c 0.91 1.586 0.969
 1.59 1.016 1.59 c 1.285 1.59 1.699 1.559 1.699 1.559 c 1.84 1.551 1.855
 1.754 1.715 1.77 c 1.715 1.77 1.574 1.785 1.422 1.793 c 2.359 4.582 l 2.922
 2.891 l 2.52 1.793 l 2.383 1.785 2.25 1.77 2.25 1.77 c 2.109 1.762 2.129
 1.551 2.266 1.559 c 2.266 1.559 2.691 1.59 2.945 1.59 c 3.215 1.59 3.633
 1.559 3.633 1.559 c 3.773 1.551 3.789 1.754 3.648 1.77 c 3.648 1.77 3.508
 1.785 3.355 1.793 c 4.285 4.559 l 4.543 3.699 l 4.562 3.633 l 4.664 3.309
 4.738 3.07 4.738 2.867 c h
0.426 3 m 0.426 3.984 0.988 4.887 1.875 5.316 c 0.648 1.953 l 0.5 2.281
 0.426 2.641 0.426 3 c f
2.273 5.469 m 3.047 3.227 l 3.836 5.395 l 3.84 5.406 3.848 5.418 3.855 
5.43 c 3.344 5.609 2.793 5.621 2.273 5.469 c 5.258 1.766 m 5.27 1.848 5.273
 1.938 5.277 2.031 c 5.277 2.293 5.23 2.586 5.082 2.953 c 4.297 5.227 l 
4.293 5.223 l 5.5 4.523 5.93 2.988 5.258 1.766 c h
5.258 1.766 m f
0 3 m 0 1.348 1.348 0 3 0 c 4.652 0 6 1.348 6 3 c 6 4.652 4.652 6 3 6 c
 1.348 6 0 4.652 0 3 c 0.137 3 m 0.137 4.578 1.422 5.863 3 5.863 c 4.578
 5.863 5.863 4.578 5.863 3 c 5.863 1.422 4.578 0.137 3 0.137 c 1.422 0.137
 0.137 1.422 0.137 3 c f*
Q Q
showpage
%%Trailer
%%EOF
