%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
151.598 91.836 m 151.598 81.66 147.938 74.617 144.805 69.133 c 143.844 
67.574 l 140.039 61.453 136.715 56.078 136.715 49.812 c 136.715 42.254 142.449
 35.195 150.539 35.195 c 150.777 35.195 151.012 35.207 151.234 35.23 c 151.605
 35.266 l 151.609 35.27 l 136.441 21.34 116.594 13.621 96 13.645 c 68.277
 13.641 42.414 27.59 27.191 50.762 c 29.113 50.82 30.949 50.871 32.496 50.871
 c 41.102 50.871 54.434 49.828 54.434 49.828 c 58.875 49.562 59.402 56.082
 54.961 56.609 c 54.961 56.609 50.508 57.137 45.539 57.391 c 75.539 146.598
 l 93.539 92.527 l 80.699 57.379 l 76.27 57.113 72.07 56.598 72.07 56.598
 c 67.629 56.332 68.16 49.543 72.586 49.805 c 72.586 49.805 86.195 50.848
 94.281 50.848 c 102.898 50.848 116.242 49.805 116.242 49.805 c 120.684 
49.539 121.199 56.07 116.758 56.598 c 116.758 56.598 112.293 57.113 107.336
 57.379 c 137.098 145.902 l 145.305 118.457 l 145.953 116.383 l 149.191 
106.062 151.582 98.441 151.582 91.832 c h
13.645 96 m 13.637 111.465 17.988 126.621 26.199 139.73 c 34.406 152.836
 46.141 163.367 60.059 170.113 c 20.762 62.473 l 16.043 73.02 13.617 84.445
 13.645 96 c f
72.73 174.996 m 97.453 103.199 l 122.762 172.559 l 122.922 172.957 123.117
 173.336 123.352 173.688 c 123.348 173.688 l 107.035 179.438 89.32 179.898
 72.73 174.996 c 168.25 56.484 m 168.617 59.109 168.805 61.934 168.812 64.957
 c 168.812 73.309 167.254 82.703 162.547 94.453 c 137.395 167.172 l 137.398
 167.172 l 155.961 156.387 169.574 138.781 175.34 118.105 c 181.105 97.426
 178.566 75.316 168.266 56.484 c h
168.25 56.484 m f
0 96 m 0 43.066 43.066 0 96 0 c 148.934 0 192 43.066 192 96 c 192 148.934
 148.922 192 96 192 c 43.078 192 0 148.934 0 96 c 4.402 96 m 4.402 146.508
 45.492 187.598 96 187.598 c 146.508 187.598 187.586 146.508 187.586 96 
c 187.586 45.48 146.496 4.402 96 4.402 c 45.48 4.402 4.402 45.48 4.402 96
 c f*
Q Q
showpage
%%Trailer
%%EOF
