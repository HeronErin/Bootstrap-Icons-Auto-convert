%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 2 0 96 89
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 2 0 96 89
96 96 cairo_set_page_size
%%EndPageSetup
q 2 0 94 89 rectclip
1 0 0 -1 0 96 cm q
0 g
75 54 m 82.504 54 89.434 58.004 93.188 64.5 c 96.938 70.996 96.938 79.004
 93.188 85.5 c 89.434 91.996 82.504 96 75 96 c 67.496 96 60.566 91.996 56.812
 85.5 c 53.062 79.004 53.062 70.996 56.812 64.5 c 60.566 58.004 67.496 54
 75 54 c 77.125 89.125 m 86.125 80.125 l 87.297 78.949 87.293 77.051 86.121
 75.879 c 84.949 74.707 83.047 74.707 81.875 75.883 c 78 79.758 l 78 63 
l 78 61.344 76.656 60 75 60 c 73.344 60 72 61.344 72 63 c 72 79.758 l 68.125
 75.883 l 66.953 74.707 65.051 74.707 63.879 75.879 c 62.707 77.051 62.703
 78.949 63.875 80.125 c 72.875 89.125 l 73.438 89.688 74.203 90.004 75 90.004
 c 75.797 90.004 76.562 89.688 77.125 89.125 c f
52.242 9 m 49.898 6.656 46.102 6.656 43.758 9 c 3.875 48.875 l 2.703 50.051
 2.703 51.949 3.875 53.125 c 5.051 54.297 6.949 54.297 8.125 53.125 c 48
 13.242 l 87.875 53.125 l 89.051 54.297 90.949 54.297 92.125 53.125 c 93.297
 51.949 93.297 50.051 92.125 48.875 c 78 34.758 l 78 15 l 78 14.203 77.684
 13.441 77.121 12.879 c 76.559 12.316 75.797 12 75 12 c 69 12 l 67.344 12
 66 13.344 66 15 c 66 22.758 l h
52.242 9 m f
48 19.758 m 76.273 48.031 l 69.582 47.715 63.016 49.895 57.844 54.148 c
 52.672 58.406 49.266 64.43 48.289 71.055 c 47.309 77.68 48.828 84.434 52.547
 90 c 21 90 l 16.031 90 12 85.969 12 81 c 12 55.758 l h
48 19.758 m f
Q Q
showpage
%%Trailer
%%EOF
