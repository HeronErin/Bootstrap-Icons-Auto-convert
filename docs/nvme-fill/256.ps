%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 48 192 144
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 48 192 144
192 192 cairo_set_page_size
%%EndPageSetup
q 0 48 192 96 rectclip
1 0 0 -1 0 192 cm q
0 g
72 84 m 60 84 l 60 108 l 72 108 l h
144 84 m 108 84 l 108 108 l 144 108 l h
144 84 m f
24 48 m 20.688 48 18 50.688 18 54 c 6 54 l 2.688 54 0 56.688 0 60 c 0 72
 l 0 73.59 0.633 75.117 1.758 76.242 c 2.883 77.367 4.41 78 6 78 c 18 78
 l 19.656 78 21 79.344 21 81 c 21 82.656 19.656 84 18 84 c 6 84 l 2.688 
84 0 86.688 0 90 c 0 132 l 0 133.59 0.633 135.117 1.758 136.242 c 2.883 
137.367 4.41 138 6 138 c 18 138 l 18 139.59 18.633 141.117 19.758 142.242
 c 20.883 143.367 22.41 144 24 144 c 186 144 l 187.59 144 189.117 143.367
 190.242 142.242 c 191.367 141.117 192 139.59 192 138 c 192 108 l 192 106.41
 191.367 104.883 190.242 103.758 c 189.117 102.633 187.59 102 186 102 c 
182.688 102 180 99.312 180 96 c 180 92.688 182.688 90 186 90 c 187.59 90
 189.117 89.367 190.242 88.242 c 191.367 87.117 192 85.59 192 84 c 192 54
 l 192 52.41 191.367 50.883 190.242 49.758 c 189.117 48.633 187.59 48 186
 48 c h
48 78 m 48 74.688 50.688 72 54 72 c 78 72 l 79.59 72 81.117 72.633 82.242
 73.758 c 83.367 74.883 84 76.41 84 78 c 84 114 l 84 115.59 83.367 117.117
 82.242 118.242 c 81.117 119.367 79.59 120 78 120 c 54 120 l 50.688 120 
48 117.312 48 114 c h
96 78 m 96 74.688 98.688 72 102 72 c 150 72 l 151.59 72 153.117 72.633 
154.242 73.758 c 155.367 74.883 156 76.41 156 78 c 156 114 l 156 115.59 
155.367 117.117 154.242 118.242 c 153.117 119.367 151.59 120 150 120 c 102
 120 l 98.688 120 96 117.312 96 114 c h
96 78 m f
Q Q
showpage
%%Trailer
%%EOF
