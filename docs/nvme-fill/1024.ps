%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 192 768 576
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 192 768 576
768 768 cairo_set_page_size
%%EndPageSetup
q 0 192 768 384 rectclip
1 0 0 -1 0 768 cm q
0 g
288 336 m 240 336 l 240 432 l 288 432 l h
576 336 m 432 336 l 432 432 l 576 432 l h
576 336 m f
96 192 m 89.637 192 83.531 194.527 79.031 199.031 c 74.527 203.531 72 209.637
 72 216 c 24 216 l 17.637 216 11.531 218.527 7.031 223.031 c 2.527 227.531
 0 233.637 0 240 c 0 288 l 0 294.363 2.527 300.469 7.031 304.969 c 11.531
 309.473 17.637 312 24 312 c 72 312 l 78.629 312 84 317.371 84 324 c 84 
330.629 78.629 336 72 336 c 24 336 l 17.637 336 11.531 338.527 7.031 343.031
 c 2.527 347.531 0 353.637 0 360 c 0 528 l 0 534.363 2.527 540.469 7.031
 544.969 c 11.531 549.473 17.637 552 24 552 c 72 552 l 72 558.363 74.527
 564.469 79.031 568.969 c 83.531 573.473 89.637 576 96 576 c 744 576 l 750.363
 576 756.469 573.473 760.969 568.969 c 765.473 564.469 768 558.363 768 552
 c 768 432 l 768 425.637 765.473 419.531 760.969 415.031 c 756.469 410.527
 750.363 408 744 408 c 735.426 408 727.504 403.426 723.215 396 c 718.93 
388.574 718.93 379.426 723.215 372 c 727.504 364.574 735.426 360 744 360
 c 750.363 360 756.469 357.473 760.969 352.969 c 765.473 348.469 768 342.363
 768 336 c 768 216 l 768 209.637 765.473 203.531 760.969 199.031 c 756.469
 194.527 750.363 192 744 192 c h
192 312 m 192 305.637 194.527 299.531 199.031 295.031 c 203.531 290.527
 209.637 288 216 288 c 312 288 l 318.363 288 324.469 290.527 328.969 295.031
 c 333.473 299.531 336 305.637 336 312 c 336 456 l 336 462.363 333.473 468.469
 328.969 472.969 c 324.469 477.473 318.363 480 312 480 c 216 480 l 209.637
 480 203.531 477.473 199.031 472.969 c 194.527 468.469 192 462.363 192 456
 c h
384 312 m 384 305.637 386.527 299.531 391.031 295.031 c 395.531 290.527
 401.637 288 408 288 c 600 288 l 606.363 288 612.469 290.527 616.969 295.031
 c 621.473 299.531 624 305.637 624 312 c 624 456 l 624 462.363 621.473 468.469
 616.969 472.969 c 612.469 477.473 606.363 480 600 480 c 408 480 l 401.637
 480 395.531 477.473 391.031 472.969 c 386.527 468.469 384 462.363 384 456
 c h
384 312 m f
Q Q
showpage
%%Trailer
%%EOF
