%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 6 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 6 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 6 1536 1434 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536 1139.137 1192.129 1440 768 1440 c 691.93 1440.168 616.172
 1430.293 542.688 1410.625 c 486.625 1439.039 357.887 1493.57 141.312 1529.09
 c 122.113 1532.16 107.52 1512.195 115.105 1494.336 c 149.09 1414.078 179.809
 1307.137 189.027 1209.602 c 71.426 1091.52 0 936.961 0 768 c 0 396.863 
343.871 96 768 96 c 1192.129 96 1536 396.863 1536 768 c 432 480 m 414.852
 480 399.004 489.148 390.43 504 c 381.855 518.852 381.855 537.148 390.43
 552 c 399.004 566.852 414.852 576 432 576 c 1104 576 l 1121.148 576 1136.996
 566.852 1145.57 552 c 1154.145 537.148 1154.145 518.852 1145.57 504 c 1136.996
 489.148 1121.148 480 1104 480 c h
432 720 m 414.852 720 399.004 729.148 390.43 744 c 381.855 758.852 381.855
 777.148 390.43 792 c 399.004 806.852 414.852 816 432 816 c 1104 816 l 1121.148
 816 1136.996 806.852 1145.57 792 c 1154.145 777.148 1154.145 758.852 1145.57
 744 c 1136.996 729.148 1121.148 720 1104 720 c h
432 960 m 414.852 960 399.004 969.148 390.43 984 c 381.855 998.852 381.855
 1017.148 390.43 1032 c 399.004 1046.852 414.852 1056 432 1056 c 816 1056
 l 833.148 1056 848.996 1046.852 857.57 1032 c 866.145 1017.148 866.145 
998.852 857.57 984 c 848.996 969.148 833.148 960 816 960 c h
432 960 m f
Q Q
showpage
%%Trailer
%%EOF
