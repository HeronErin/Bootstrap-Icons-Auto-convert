%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 68 1536 1468
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 68 1536 1468
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 68 1536 1400 rectclip
1 0 0 -1 0 1536 cm q
0 g
1052.258 1187.039 m 1079.582 1157.824 1097.102 1120.805 1102.367 1081.152
 c 1400.926 1213.824 l 1400.93 1213.824 l 1430.621 1227.055 1464.988 1224.359
 1492.258 1206.664 c 1519.523 1188.973 1535.984 1158.68 1536 1126.176 c 
1536 409.824 l 1535.973 377.344 1519.523 347.082 1492.281 329.395 c 1465.043
 311.707 1430.707 308.988 1401.023 322.176 c 1102.367 454.848 l 1096.266
 408.68 1073.594 366.305 1038.574 335.609 c 1003.551 304.914 958.57 287.996
 912 288 c 410.113 288 l 478.656 384 l 912 384 l 937.461 384 961.879 394.113
 979.883 412.117 c 997.887 430.121 1008 454.539 1008 480 c 1008 1056 l 1008.02
 1073.527 1003.238 1090.727 994.176 1105.727 c h
137.09 401.281 m 111.352 419.227 96.008 448.621 96 480 c 96 1056 l 96 1081.461
 106.113 1105.879 124.117 1123.883 c 142.121 1141.887 166.539 1152 192 1152
 c 673.344 1152 l 741.887 1248 l 192 1248 l 141.078 1248 92.242 1227.773
 56.234 1191.766 c 20.227 1155.758 0 1106.922 0 1056 c 0 480 l 0 415.199
 32.062 357.887 81.312 323.137 c h
1440 1126.078 m 1104 976.797 l 1104 559.195 l 1440 409.824 l h
1016.93 1467.84 m 56.93 123.84 l 135.074 68.16 l 1095.074 1412.16 l h
1016.93 1467.84 m f*
Q Q
showpage
%%Trailer
%%EOF
