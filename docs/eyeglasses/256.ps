%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 59 192 133
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 59 192 133
192 192 cairo_set_page_size
%%EndPageSetup
q 0 59 192 74 rectclip
1 0 0 -1 0 192 cm q
0 g
48 72 m 56.574 72 64.496 76.574 68.785 84 c 73.07 91.426 73.07 100.574 
68.785 108 c 64.496 115.426 56.574 120 48 120 c 39.426 120 31.504 115.426
 27.215 108 c 22.93 100.574 22.93 91.426 27.215 84 c 31.504 76.574 39.426
 72 48 72 c 79.5 78.562 m 74.652 69.793 66.367 63.441 56.641 61.031 c 46.914
 58.625 36.621 60.383 28.242 65.879 c 19.863 71.375 14.156 80.117 12.492
 90 c 6 90 l 2.688 90 0 92.688 0 96 c 0 99.312 2.688 102 6 102 c 12.492 
102 l 14.496 113.996 22.422 124.172 33.562 129.047 c 44.707 133.926 57.559
 132.848 67.73 126.18 c 77.902 119.516 84.023 108.164 84 96 c 84 89.371 
89.371 84 96 84 c 102.629 84 108 89.371 108 96 c 107.977 108.164 114.098
 119.516 124.27 126.18 c 134.441 132.848 147.293 133.926 158.438 129.047
 c 169.578 124.172 177.504 113.996 179.508 102 c 186 102 l 189.312 102 192
 99.312 192 96 c 192 92.688 189.312 90 186 90 c 179.508 90 l 177.844 80.117
 172.137 71.375 163.758 65.879 c 155.379 60.383 145.086 58.625 135.359 61.031
 c 125.633 63.441 117.348 69.793 112.5 78.562 c 108.043 74.348 102.137 71.996
 96 72 c 89.617 72 83.809 74.496 79.5 78.562 c 168 96 m 168 104.574 163.426
 112.496 156 116.785 c 148.574 121.07 139.426 121.07 132 116.785 c 124.574
 112.496 120 104.574 120 96 c 120 87.426 124.574 79.504 132 75.215 c 139.426
 70.93 148.574 70.93 156 75.215 c 163.426 79.504 168 87.426 168 96 c f
Q Q
showpage
%%Trailer
%%EOF
