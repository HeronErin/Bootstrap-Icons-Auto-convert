%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 239 768 529
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 239 768 529
768 768 cairo_set_page_size
%%EndPageSetup
q 0 239 768 290 rectclip
1 0 0 -1 0 768 cm q
0 g
192 288 m 226.297 288 257.988 306.297 275.137 336 c 292.289 365.703 292.289
 402.297 275.137 432 c 257.988 461.703 226.297 480 192 480 c 157.703 480
 126.012 461.703 108.863 432 c 91.711 402.297 91.711 365.703 108.863 336
 c 126.012 306.297 157.703 288 192 288 c 318 314.258 m 298.609 279.172 265.473
 253.758 226.562 244.129 c 187.652 234.5 146.484 241.527 112.973 263.516
 c 79.457 285.508 56.625 320.473 49.969 360 c 24 360 l 15.426 360 7.504 
364.574 3.215 372 c -1.07 379.426 -1.07 388.574 3.215 396 c 7.504 403.426
 15.426 408 24 408 c 49.969 408 l 57.984 455.984 89.688 496.68 134.254 516.191
 c 178.82 535.699 230.227 531.387 270.922 504.723 c 311.613 478.059 336.094
 432.652 336 384 c 336 366.852 345.148 351.004 360 342.43 c 374.852 333.855
 393.148 333.855 408 342.43 c 422.852 351.004 432 366.852 432 384 c 431.906
 432.652 456.387 478.059 497.078 504.723 c 537.773 531.387 589.18 535.699
 633.746 516.191 c 678.312 496.68 710.016 455.984 718.031 408 c 744 408 
l 752.574 408 760.496 403.426 764.785 396 c 769.07 388.574 769.07 379.426
 764.785 372 c 760.496 364.574 752.574 360 744 360 c 718.031 360 l 711.375
 320.473 688.543 285.508 655.027 263.516 c 621.516 241.527 580.348 234.5
 541.438 244.129 c 502.527 253.758 469.391 279.172 450 314.258 c 432.168
 297.387 408.547 287.992 384 288 c 358.465 288 335.23 297.984 318 314.258
 c 672 384 m 672 418.297 653.703 449.988 624 467.137 c 594.297 484.289 557.703
 484.289 528 467.137 c 498.297 449.988 480 418.297 480 384 c 480 349.703
 498.297 318.012 528 300.863 c 557.703 283.711 594.297 283.711 624 300.863
 c 653.703 318.012 672 349.703 672 384 c f
Q Q
showpage
%%Trailer
%%EOF
