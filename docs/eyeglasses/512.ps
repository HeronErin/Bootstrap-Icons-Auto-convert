%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 119 384 265
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 119 384 265
384 384 cairo_set_page_size
%%EndPageSetup
q 0 119 384 146 rectclip
1 0 0 -1 0 384 cm q
0 g
96 144 m 113.148 144 128.996 153.148 137.57 168 c 146.145 182.852 146.145
 201.148 137.57 216 c 128.996 230.852 113.148 240 96 240 c 78.852 240 63.004
 230.852 54.43 216 c 45.855 201.148 45.855 182.852 54.43 168 c 63.004 153.148
 78.852 144 96 144 c 159 157.129 m 149.305 139.586 132.738 126.879 113.281
 122.066 c 93.824 117.25 73.242 120.762 56.484 131.758 c 39.727 142.754 
28.312 160.234 24.984 180 c 12 180 l 5.371 180 0 185.371 0 192 c 0 198.629
 5.371 204 12 204 c 24.984 204 l 28.992 227.992 44.844 248.34 67.129 258.094
 c 89.41 267.852 115.113 265.691 135.461 252.363 c 155.809 239.031 168.047
 216.324 168 192 c 168 183.426 172.574 175.504 180 171.215 c 187.426 166.93
 196.574 166.93 204 171.215 c 211.426 175.504 216 183.426 216 192 c 215.953
 216.324 228.191 239.031 248.539 252.363 c 268.887 265.691 294.59 267.852
 316.871 258.094 c 339.156 248.34 355.008 227.992 359.016 204 c 372 204 
l 378.629 204 384 198.629 384 192 c 384 185.371 378.629 180 372 180 c 359.016
 180 l 355.688 160.234 344.273 142.754 327.516 131.758 c 310.758 120.762
 290.176 117.25 270.719 122.066 c 251.262 126.879 234.695 139.586 225 157.129
 c 216.082 148.695 204.273 143.996 192 144 c 179.23 144 167.617 148.992 
159 157.129 c 336 192 m 336 209.148 326.852 224.996 312 233.57 c 297.148
 242.145 278.852 242.145 264 233.57 c 249.148 224.996 240 209.148 240 192
 c 240 174.852 249.148 159.004 264 150.43 c 278.852 141.855 297.148 141.855
 312 150.43 c 326.852 159.004 336 174.852 336 192 c f
Q Q
showpage
%%Trailer
%%EOF
