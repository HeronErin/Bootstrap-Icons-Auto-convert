%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 84 rectclip
1 0 0 -1 0 96 cm q
0 g
12 12 m 6.402 12 1.547 15.871 0.301 21.328 c 48 50.484 l 95.699 21.332 
l 95.699 21.328 l 94.453 15.871 89.598 12 84 12 c h
0 70.801 m 0 28.188 l 34.816 49.465 l h
40.566 52.98 m 1.145 77.137 l 3.133 81.332 7.359 84.004 12 84 c 49.535 
84 l 48.516 81.109 47.996 78.066 48 75 c 47.992 67.02 51.52 59.449 57.637
 54.324 c 55.434 52.973 l 48 57.516 l h
96 58.027 m 96 28.184 l 61.184 49.461 l 63.211 50.707 l 66.883 48.926 70.914
 48 75 48 c 83.484 48 91.051 51.91 96 58.027 c f
95.004 73.465 m 95.004 80.473 91.543 85.613 85.48 85.613 c 82.461 85.613
 79.469 84.246 78.762 81.727 c 78.504 81.727 l 77.797 84.223 75.246 85.586
 72.414 85.586 c 67.793 85.586 64.859 82.332 64.859 76.98 c 64.859 73.805
 l 64.859 68.742 67.746 65.406 72.418 65.406 c 75.93 65.406 77.637 67.402
 78.137 69.188 c 78.316 69.188 l 78.316 65.781 l 83.746 65.781 l 83.746 
78.922 l 83.746 80.555 84.824 81.441 86.211 81.441 c 88.102 81.441 90.047
 78.953 90.047 73.102 c 90.047 72.395 l 90.047 64.734 84.348 58.438 75.145
 58.438 c 74.906 58.438 l 65.414 58.438 59.066 64.84 59.066 74.781 c 59.066
 75.723 l 59.066 86.926 66.488 91.648 74.488 91.648 c 74.758 91.648 l 77.801
 91.648 80.367 91.227 81.836 90.57 c 81.836 94.957 l 80.523 95.559 77.977
 96.008 74.414 96.008 c 74.148 96.008 l 62.629 96 54 88.922 54 75.875 c 
54 74.59 l 54 62.16 62.527 54 74.91 54 c 75.121 54 l 87.84 54 95.004 62.578
 95.004 72.203 c h
70.766 74.727 m 70.766 76.09 l 70.766 79.605 72.129 80.891 74.25 80.891
 c 76.109 80.891 77.633 79.871 77.633 76.434 c 77.633 74.23 l 77.633 71.133
 75.984 69.984 74.199 69.984 c 72.125 69.984 70.762 71.453 70.762 74.73 
c f
Q Q
showpage
%%Trailer
%%EOF
