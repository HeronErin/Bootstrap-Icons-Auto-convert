%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 192 m 148.5 191.996 106.289 206.766 72.281 233.887 c 38.27 261.008 
14.48 298.871 4.801 341.281 c 768 807.742 l 1531.199 341.277 l 1531.199 
341.281 l 1521.52 298.871 1497.73 261.008 1463.719 233.887 c 1429.711 206.766
 1387.5 191.996 1344 192 c h
0 1132.801 m 0 451.008 l 557.09 791.422 l h
649.055 847.68 m 18.336 1234.176 l 33.906 1267.055 58.496 1294.832 89.242
 1314.273 c 119.984 1333.719 155.621 1344.027 192 1344 c 792.574 1344 l 
776.27 1297.742 767.957 1249.047 768 1200 c 767.934 1136.938 781.707 1074.629
 808.348 1017.469 c 834.984 960.309 873.844 909.691 922.176 869.184 c 886.945
 847.582 l 768 920.258 l h
1536 928.414 m 1536 450.91 l 978.91 791.324 l 1011.359 811.293 l 1011.359
 811.297 l 1070.156 782.781 1134.656 767.98 1200 768 c 1335.742 768 1456.801
 830.594 1536 928.414 c f
1520.062 1175.426 m 1520.062 1287.555 1464.672 1369.824 1367.711 1369.824
 c 1319.422 1369.824 1271.52 1347.938 1260.191 1307.617 c 1256.062 1307.617
 l 1244.734 1347.555 1203.934 1369.344 1158.621 1369.344 c 1084.699 1369.344
 1037.758 1317.312 1037.758 1231.68 c 1037.758 1180.895 l 1037.758 1099.871
 1083.934 1046.496 1158.719 1046.496 c 1214.879 1046.496 1242.238 1078.465
 1250.207 1106.977 c 1253.086 1106.977 l 1253.086 1052.449 l 1339.965 1052.449
 l 1339.965 1262.688 l 1339.965 1288.801 1357.246 1303.008 1379.422 1303.008
 c 1409.66 1303.008 1440.766 1263.168 1440.766 1169.566 c 1440.766 1158.238
 l 1440.766 1035.645 1349.566 934.941 1202.301 934.941 c 1198.461 934.941
 l 1046.59 934.941 945.02 1037.375 945.02 1196.445 c 945.02 1211.516 l 945.02
 1390.746 1063.773 1466.301 1191.738 1466.301 c 1196.059 1466.301 l 1244.73
 1466.301 1285.82 1459.582 1309.34 1449.02 c 1309.34 1519.195 l 1288.316
 1528.797 1247.613 1535.996 1190.586 1535.996 c 1186.363 1535.996 l 1002.047
 1536 864 1422.719 864 1214.016 c 864 1193.473 l 864 994.559 1000.414 864
 1198.559 864 c 1201.918 864 l 1405.438 864 1520.062 1001.281 1520.062 1155.266
 c h
1132.223 1195.586 m 1132.223 1217.379 l 1132.223 1273.637 1154.016 1294.18
 1188 1294.18 c 1217.762 1294.18 1242.145 1277.859 1242.145 1222.852 c 1242.145
 1187.621 l 1242.145 1138.086 1215.746 1119.652 1187.234 1119.652 c 1154.02
 1119.652 1132.227 1143.172 1132.227 1195.59 c f
Q Q
showpage
%%Trailer
%%EOF
