%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.75 0.75 m 0.398 0.75 0.098 0.992 0.02 1.332 c 3 3.156 l 5.98 1.336 l 
5.98 1.332 l 5.902 0.992 5.602 0.75 5.25 0.75 c h
0 4.426 m 0 1.762 l 2.176 3.09 l h
2.535 3.312 m 0.07 4.82 l 0.195 5.082 0.461 5.25 0.75 5.25 c 3.098 5.25
 l 3.031 5.07 3 4.879 3 4.688 c 3 4.188 3.219 3.715 3.602 3.395 c 3.465 
3.309 l 3 3.594 l h
6 3.625 m 6 1.762 l 3.824 3.09 l 3.949 3.168 l 4.18 3.059 4.434 3 4.688
 3 c 5.219 3 5.691 3.246 6 3.625 c f
5.938 4.59 m 5.938 5.027 5.723 5.348 5.344 5.348 c 5.156 5.348 4.969 5.262
 4.922 5.105 c 4.906 5.105 l 4.863 5.262 4.703 5.348 4.527 5.348 c 4.238
 5.348 4.055 5.145 4.055 4.809 c 4.055 4.609 l 4.055 4.293 4.234 4.086 4.527
 4.086 c 4.746 4.086 4.855 4.211 4.883 4.32 c 4.895 4.32 l 4.895 4.105 l
 5.234 4.105 l 5.234 4.926 l 5.234 5.027 5.301 5.082 5.387 5.082 c 5.504
 5.082 5.625 4.926 5.625 4.562 c 5.625 4.52 l 5.625 4.039 5.27 3.648 4.695
 3.648 c 4.68 3.648 l 4.086 3.648 3.691 4.047 3.691 4.672 c 3.691 4.73 l
 3.691 5.43 4.156 5.727 4.656 5.727 c 4.672 5.727 l 4.863 5.727 5.023 5.699
 5.113 5.66 c 5.113 5.934 l 5.031 5.973 4.871 6 4.648 6 c 4.633 6 l 3.914
 6 3.375 5.559 3.375 4.742 c 3.375 4.66 l 3.375 3.887 3.906 3.375 4.684 
3.375 c 4.695 3.375 l 5.492 3.375 5.938 3.91 5.938 4.512 c h
4.422 4.668 m 4.422 4.754 l 4.422 4.973 4.508 5.055 4.641 5.055 c 4.758
 5.055 4.852 4.992 4.852 4.777 c 4.852 4.641 l 4.852 4.445 4.75 4.375 4.637
 4.375 c 4.508 4.375 4.422 4.469 4.422 4.672 c f
Q Q
showpage
%%Trailer
%%EOF
