%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
96 96 m 74.25 96 53.145 103.383 36.141 116.941 c 19.137 130.504 7.238 149.438
 2.398 170.641 c 384 403.871 l 765.602 170.641 l 760.762 149.438 748.863
 130.504 731.859 116.941 c 714.855 103.383 693.75 96 672 96 c h
0 566.398 m 0 225.504 l 278.543 395.711 l h
324.527 423.84 m 9.168 617.086 l 9.168 617.09 l 16.953 633.527 29.246 647.414
 44.621 657.137 c 59.992 666.859 77.812 672.012 96 672 c 396.289 672 l 388.133
 648.871 383.98 624.523 384 600 c 383.969 568.469 390.852 537.312 404.172
 508.734 c 417.492 480.152 436.922 454.844 461.09 434.594 c 443.473 423.793
 l 384 460.129 l h
768 464.207 m 768 225.457 l 489.457 395.664 l 505.68 405.648 l 535.078 
391.391 567.328 383.988 600 384 c 667.871 384 728.398 415.297 768 464.207
 c f
760.031 587.711 m 760.031 643.773 732.336 684.91 683.855 684.91 c 659.711
 684.91 635.758 673.965 630.094 653.805 c 628.031 653.805 l 622.367 673.773
 601.969 684.668 579.312 684.668 c 542.352 684.668 518.879 658.652 518.879
 615.836 c 518.879 590.445 l 518.879 549.934 541.969 523.246 579.359 523.246
 c 607.438 523.246 621.121 539.23 625.102 553.484 c 626.543 553.484 l 626.543
 526.219 l 669.984 526.219 l 669.984 631.34 l 669.984 644.395 678.625 651.5
 689.711 651.5 c 704.832 651.5 720.383 631.578 720.383 584.781 c 720.383
 579.117 l 720.383 517.82 674.781 467.469 601.152 467.469 c 599.23 467.469
 l 523.293 467.469 472.512 518.684 472.512 598.223 c 472.512 605.758 l 472.512
 695.375 531.887 733.148 595.871 733.148 c 598.031 733.148 l 622.367 733.148
 642.91 729.789 654.672 724.508 c 654.672 759.598 l 644.16 764.398 623.809
 767.996 595.297 767.996 c 593.184 767.996 l 501.023 768 432 711.359 432
 607.008 c 432 596.734 l 432 497.281 500.207 432 599.281 432 c 600.961 432
 l 702.723 432 760.031 500.641 760.031 577.633 c h
566.109 597.789 m 566.109 608.684 l 566.109 636.812 577.004 647.082 593.996
 647.082 c 608.875 647.082 621.066 638.922 621.066 611.418 c 621.066 593.801
 l 621.066 569.031 607.867 559.816 593.609 559.816 c 577 559.816 566.105
 571.578 566.105 597.785 c f
Q Q
showpage
%%Trailer
%%EOF
