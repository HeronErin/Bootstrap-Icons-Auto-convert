%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 312 rectclip
1 0 0 -1 0 384 cm q
0 g
216 60 m 216 53.371 221.371 48 228 48 c 300 48 l 306.629 48 312 53.371 
312 60 c 312 66.629 306.629 72 300 72 c 290.641 72 l 324.242 240 l 324.238
 240 l 344.246 240.094 362.887 250.156 373.945 266.824 c 385.008 283.492
 387.035 304.578 379.352 323.047 c 371.668 341.516 355.281 354.941 335.664
 358.844 c 316.043 362.75 295.766 356.617 281.598 342.496 c 267.43 328.375
 261.23 308.121 265.066 288.488 c 268.906 268.855 282.277 252.426 300.719
 244.68 c 296.184 222.168 l 237.863 306.816 l 235.625 310.059 231.941 311.996
 228 312 c 118.801 312 l 114.801 331.598 101.293 347.914 82.789 355.508 
c 64.281 363.102 43.207 360.973 26.594 349.832 c 9.98 338.691 0.012 320.004
 0.012 300 c 0.012 279.996 9.98 261.309 26.594 250.168 c 43.207 239.027 
64.281 236.898 82.789 244.492 c 101.293 252.086 114.801 268.402 118.801 
288 c 221.688 288 l 289.633 189.359 l 266.16 72 l 228 72 l 221.371 72 216
 66.629 216 60 c 93.961 288 m 90.156 277.238 81.473 268.918 70.555 265.578
 c 59.641 262.234 47.789 264.27 38.609 271.059 c 29.434 277.848 24.02 288.586
 24.02 300 c 24.02 311.414 29.434 322.152 38.609 328.941 c 47.789 335.73
 59.641 337.766 70.555 334.422 c 81.473 331.082 90.156 322.762 93.961 312
 c 60 312 l 53.371 312 48 306.629 48 300 c 48 293.371 53.371 288 60 288 
c h
305.57 269.062 m 305.566 269.062 l 296.445 274.465 290.168 283.613 288.41
 294.066 c 286.656 304.523 289.602 315.219 296.461 323.305 c 303.324 331.387
 313.398 336.031 324 336 c 336.262 336.012 347.684 329.781 354.316 319.469
 c 360.945 309.156 361.871 296.176 356.773 285.027 c 351.672 273.879 341.25
 266.09 329.113 264.359 c 335.762 297.648 l 336.809 304.027 332.613 310.094
 326.273 311.363 c 319.93 312.629 313.727 308.645 312.238 302.352 c h
305.57 269.062 m f*
Q Q
showpage
%%Trailer
%%EOF
