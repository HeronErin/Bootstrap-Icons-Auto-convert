%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 624 rectclip
1 0 0 -1 0 768 cm q
0 g
432 120 m 432 113.637 434.527 107.531 439.031 103.031 c 443.531 98.527 
449.637 96 456 96 c 600 96 l 608.574 96 616.496 100.574 620.785 108 c 625.07
 115.426 625.07 124.574 620.785 132 c 616.496 139.426 608.574 144 600 144
 c 581.281 144 l 648.48 480 l 688.488 480.191 725.77 500.309 747.895 533.648
 c 770.016 566.984 774.07 609.152 758.699 646.094 c 743.332 683.031 710.566
 709.883 671.324 717.691 c 632.086 725.5 591.535 713.238 563.195 684.992
 c 534.859 656.75 522.461 616.242 530.137 576.977 c 537.812 537.711 564.551
 504.852 601.441 489.359 c 592.371 444.336 l 475.73 613.633 l 475.727 613.633
 l 471.254 620.117 463.879 623.992 456 624 c 237.602 624 l 229.598 663.199
 202.59 695.832 165.574 711.02 c 128.562 726.203 86.418 721.945 53.191 699.664
 c 19.961 677.383 0.023 640.008 0.023 600 c 0.023 559.992 19.961 522.617
 53.191 500.336 c 86.418 478.055 128.562 473.797 165.574 488.98 c 202.59
 504.168 229.598 536.801 237.602 576 c 443.379 576 l 579.266 378.719 l 532.32
 144 l 456 144 l 449.637 144 443.531 141.473 439.031 136.969 c 434.527 132.469
 432 126.363 432 120 c 187.922 576 m 180.309 554.477 162.941 537.836 141.113
 531.152 c 119.281 524.473 95.574 528.539 77.219 542.113 c 58.867 555.691
 48.039 577.168 48.039 600 c 48.039 622.832 58.867 644.309 77.219 657.887
 c 95.574 671.461 119.281 675.527 141.113 668.848 c 162.941 662.164 180.309
 645.523 187.922 624 c 120 624 l 111.426 624 103.504 619.426 99.215 612 
c 94.93 604.574 94.93 595.426 99.215 588 c 103.504 580.574 111.426 576 120
 576 c h
611.137 538.129 m 592.891 548.926 580.332 567.227 576.824 588.137 c 573.312
 609.047 579.203 630.441 592.926 646.605 c 606.645 662.773 626.797 672.062
 648 672 c 672.52 672.023 695.367 659.562 708.629 638.938 c 721.891 618.312
 723.742 592.355 713.547 570.055 c 703.348 547.754 682.5 532.18 658.223 
528.719 c 671.52 595.293 l 671.52 595.297 l 672.879 603.562 669.828 611.941
 663.473 617.398 c 657.117 622.855 648.375 624.605 640.41 622.012 c 632.441
 619.418 626.406 612.859 624.48 604.703 c h
611.137 538.129 m f*
Q Q
showpage
%%Trailer
%%EOF
