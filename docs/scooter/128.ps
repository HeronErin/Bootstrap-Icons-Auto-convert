%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 78 rectclip
1 0 0 -1 0 96 cm q
0 g
54 15 m 54 13.344 55.344 12 57 12 c 75 12 l 76.656 12 78 13.344 78 15 c
 78 16.656 76.656 18 75 18 c 72.66 18 l 81.059 60 l 86.062 60.023 90.723
 62.539 93.488 66.707 c 96.25 70.871 96.758 76.145 94.836 80.762 c 92.918
 85.379 88.82 88.734 83.914 89.711 c 79.012 90.688 73.941 89.156 70.398 
85.625 c 66.855 82.094 65.309 77.031 66.266 72.121 c 67.227 67.215 70.57
 63.105 75.18 61.172 c 74.047 55.543 l 59.469 76.703 l 59.465 76.703 l 58.906
 77.516 57.984 78 57 78 c 29.699 78 l 28.699 82.898 25.324 86.98 20.695 
88.879 c 16.07 90.777 10.801 90.242 6.648 87.457 c 2.496 84.672 0.004 80
 0.004 75 c 0.004 70 2.496 65.328 6.648 62.543 c 10.801 59.758 16.07 59.223
 20.695 61.121 c 25.324 63.02 28.699 67.102 29.699 72 c 55.422 72 l 72.406
 47.34 l 66.539 18 l 57 18 l 55.344 18 54 16.656 54 15 c 23.488 72 m 22.027
 67.867 17.805 65.387 13.484 66.129 c 9.164 66.871 6.004 70.617 6.004 75
 c 6.004 79.383 9.164 83.129 13.484 83.871 c 17.805 84.613 22.027 82.133
 23.488 78 c 15 78 l 13.344 78 12 76.656 12 75 c 12 73.344 13.344 72 15 
72 c h
76.391 67.266 m 72.898 69.332 71.223 73.48 72.301 77.395 c 73.379 81.305
 76.941 84.012 81 84 c 85.727 84.004 89.648 80.355 89.984 75.641 c 90.32
 70.926 86.957 66.758 82.277 66.09 c 83.938 74.41 l 83.941 74.41 l 84.203
 76.008 83.152 77.523 81.566 77.84 c 79.984 78.156 78.43 77.16 78.059 75.59
 c h
76.391 67.266 m f*
Q Q
showpage
%%Trailer
%%EOF
