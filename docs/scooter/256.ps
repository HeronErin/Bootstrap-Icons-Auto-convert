%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 156 rectclip
1 0 0 -1 0 192 cm q
0 g
108 30 m 108 26.688 110.688 24 114 24 c 150 24 l 153.312 24 156 26.688 
156 30 c 156 33.312 153.312 36 150 36 c 145.32 36 l 162.121 120 l 172.121
 120.047 181.441 125.078 186.973 133.41 c 192.504 141.746 193.516 152.289
 189.676 161.523 c 185.832 170.758 177.641 177.473 167.832 179.422 c 158.02
 181.375 147.883 178.309 140.801 171.25 c 133.715 164.188 130.613 154.059
 132.535 144.242 c 134.453 134.426 141.137 126.215 150.359 122.34 c 148.09
 111.082 l 118.93 153.406 l 118.934 153.406 l 117.812 155.027 115.969 155.996
 114 156 c 59.398 156 l 57.398 165.801 50.648 173.957 41.395 177.754 c 32.141
 181.551 21.605 180.488 13.297 174.918 c 4.992 169.344 0.008 160 0.008 150
 c 0.008 140 4.992 130.656 13.297 125.082 c 21.605 119.512 32.141 118.449
 41.395 122.246 c 50.648 126.043 57.398 134.199 59.398 144 c 110.844 144
 l 144.816 94.68 l 133.078 36 l 114 36 l 110.688 36 108 33.312 108 30 c 
46.98 144 m 45.078 138.617 40.734 134.457 35.277 132.789 c 29.82 131.117
 23.895 132.133 19.305 135.527 c 14.715 138.922 12.008 144.293 12.008 150
 c 12.008 155.707 14.715 161.078 19.305 164.473 c 23.895 167.867 29.82 168.883
 35.277 167.211 c 40.734 165.543 45.078 161.383 46.98 156 c 30 156 l 26.688
 156 24 153.312 24 150 c 24 146.688 26.688 144 30 144 c h
152.785 134.531 m 148.223 137.23 145.082 141.805 144.207 147.035 c 143.328
 152.262 144.801 157.609 148.23 161.652 c 151.66 165.691 156.699 168.016
 162 168 c 168.129 168.004 173.844 164.891 177.156 159.734 c 180.473 154.578
 180.938 148.09 178.387 142.516 c 175.836 136.938 170.625 133.043 164.555
 132.18 c 167.879 148.824 l 168.406 152.016 166.309 155.047 163.137 155.68
 c 159.965 156.316 156.863 154.324 156.121 151.176 c h
152.785 134.531 m f*
Q Q
showpage
%%Trailer
%%EOF
