%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 36 rectclip
1 0 0 -1 0 48 cm q
0 g
45 36 m 45 36.797 44.684 37.559 44.121 38.121 c 43.559 38.684 42.797 39
 42 39 c 6 39 l 4.344 39 3 37.656 3 36 c 3 18 l 3 16.344 4.344 15 6 15 c
 9.516 15 l 11.902 15 14.188 14.051 15.875 12.363 c 18.363 9.879 l 18.367
 9.879 l 18.926 9.316 19.688 9 20.48 9 c 27.512 9 l 28.309 9 29.07 9.316
 29.633 9.879 c 32.117 12.363 l 33.805 14.051 36.098 15 38.484 15 c 42 15
 l 42.797 15 43.559 15.316 44.121 15.879 c 44.684 16.441 45 17.203 45 18
 c h
6 12 m 2.688 12 0 14.688 0 18 c 0 36 l 0 37.59 0.633 39.117 1.758 40.242
 c 2.883 41.367 4.41 42 6 42 c 42 42 l 43.59 42 45.117 41.367 46.242 40.242
 c 47.367 39.117 48 37.59 48 36 c 48 18 l 48 16.41 47.367 14.883 46.242 
13.758 c 45.117 12.633 43.59 12 42 12 c 38.484 12 l 36.895 12 35.367 11.367
 34.242 10.242 c 31.758 7.758 l 30.633 6.633 29.105 6 27.516 6 c 20.484 
6 l 18.895 6 17.367 6.633 16.242 7.758 c 13.758 10.242 l 12.633 11.367 11.105
 12 9.516 12 c h
6 12 m f
24 33 m 19.859 33 16.5 29.641 16.5 25.5 c 16.5 21.359 19.859 18 24 18 c
 28.141 18 31.5 21.359 31.5 25.5 c 31.5 29.641 28.141 33 24 33 c 24 36 m
 29.801 36 34.5 31.301 34.5 25.5 c 34.5 19.699 29.801 15 24 15 c 18.199 
15 13.5 19.699 13.5 25.5 c 13.5 31.301 18.199 36 24 36 c 9 19.5 m 9 20.328
 8.328 21 7.5 21 c 6.672 21 6 20.328 6 19.5 c 6 18.672 6.672 18 7.5 18 c
 8.328 18 9 18.672 9 19.5 c f
Q Q
showpage
%%Trailer
%%EOF
