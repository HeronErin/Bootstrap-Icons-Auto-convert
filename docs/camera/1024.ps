%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
720 576 m 720 588.73 714.941 600.938 705.941 609.941 c 696.938 618.941 
684.73 624 672 624 c 96 624 l 83.27 624 71.062 618.941 62.059 609.941 c 
53.059 600.938 48 588.73 48 576 c 48 288 l 48 275.27 53.059 263.062 62.059
 254.059 c 71.062 245.059 83.27 240 96 240 c 152.258 240 l 190.426 239.98
 227.027 224.805 254.016 197.809 c 293.855 158.066 l 293.855 158.062 l 302.832
 149.086 315 144.027 327.695 144 c 440.207 144 l 452.938 144.004 465.145
 149.062 474.145 158.062 c 513.887 197.805 l 513.887 197.809 l 540.898 224.828
 577.539 240.004 615.742 240 c 672 240 l 684.73 240 696.938 245.059 705.941
 254.059 c 714.941 263.062 720 275.27 720 288 c h
96 192 m 70.539 192 46.121 202.113 28.117 220.117 c 10.113 238.121 0 262.539
 0 288 c 0 576 l 0 601.461 10.113 625.879 28.117 643.883 c 46.121 661.887
 70.539 672 96 672 c 672 672 l 697.461 672 721.879 661.887 739.883 643.883
 c 757.887 625.879 768 601.461 768 576 c 768 288 l 768 262.539 757.887 238.121
 739.883 220.117 c 721.879 202.113 697.461 192 672 192 c 615.742 192 l 590.285
 191.996 565.871 181.875 547.871 163.871 c 508.129 124.129 l 490.129 106.125
 465.715 96.004 440.258 96 c 327.742 96 l 302.285 96.004 277.871 106.125
 259.871 124.129 c 220.129 163.871 l 202.129 181.875 177.715 191.996 152.258
 192 c h
96 192 m f
384 528 m 341.129 528 301.512 505.129 280.078 468 c 258.641 430.871 258.641
 385.129 280.078 348 c 301.512 310.871 341.129 288 384 288 c 426.871 288
 466.488 310.871 487.922 348 c 509.359 385.129 509.359 430.871 487.922 468
 c 466.488 505.129 426.871 528 384 528 c 384 576 m 428.555 576 471.289 558.301
 502.793 526.793 c 534.301 495.289 552 452.555 552 408 c 552 363.445 534.301
 320.711 502.793 289.207 c 471.289 257.699 428.555 240 384 240 c 339.445
 240 296.711 257.699 265.207 289.207 c 233.699 320.711 216 363.445 216 408
 c 216 452.555 233.699 495.289 265.207 526.793 c 296.711 558.301 339.445
 576 384 576 c 144 312 m 144 320.574 139.426 328.496 132 332.785 c 124.574
 337.07 115.426 337.07 108 332.785 c 100.574 328.496 96 320.574 96 312 c
 96 303.426 100.574 295.504 108 291.215 c 115.426 286.93 124.574 286.93 
132 291.215 c 139.426 295.504 144 303.426 144 312 c f
Q Q
showpage
%%Trailer
%%EOF
