%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
90 72 m 90 73.59 89.367 75.117 88.242 76.242 c 87.117 77.367 85.59 78 84
 78 c 12 78 l 8.688 78 6 75.312 6 72 c 6 36 l 6 32.688 8.688 30 12 30 c 
19.031 30 l 23.805 29.996 28.379 28.102 31.754 24.727 c 36.734 19.758 l 
36.73 19.758 l 37.855 18.637 39.375 18.004 40.961 18 c 55.027 18 l 56.617
 18 58.145 18.633 59.27 19.758 c 64.238 24.727 l 64.234 24.727 l 67.613 
28.102 72.191 30 76.969 30 c 84 30 l 85.59 30 87.117 30.633 88.242 31.758
 c 89.367 32.883 90 34.41 90 36 c h
12 24 m 5.371 24 0 29.371 0 36 c 0 72 l 0 75.184 1.266 78.234 3.516 80.484
 c 5.766 82.734 8.816 84 12 84 c 84 84 l 87.184 84 90.234 82.734 92.484 
80.484 c 94.734 78.234 96 75.184 96 72 c 96 36 l 96 32.816 94.734 29.766
 92.484 27.516 c 90.234 25.266 87.184 24 84 24 c 76.969 24 l 73.785 24 70.734
 22.734 68.484 20.484 c 63.516 15.516 l 61.266 13.266 58.215 12 55.031 12
 c 40.969 12 l 37.785 12 34.734 13.266 32.484 15.516 c 27.516 20.484 l 25.266
 22.734 22.215 24 19.031 24 c h
12 24 m f
48 66 m 42.641 66 37.688 63.141 35.008 58.5 c 32.332 53.859 32.332 48.141
 35.008 43.5 c 37.688 38.859 42.641 36 48 36 c 53.359 36 58.312 38.859 60.992
 43.5 c 63.668 48.141 63.668 53.859 60.992 58.5 c 58.312 63.141 53.359 66
 48 66 c 48 72 m 55.504 72 62.434 67.996 66.188 61.5 c 69.938 55.004 69.938
 46.996 66.188 40.5 c 62.434 34.004 55.504 30 48 30 c 40.496 30 33.566 34.004
 29.812 40.5 c 26.062 46.996 26.062 55.004 29.812 61.5 c 33.566 67.996 40.496
 72 48 72 c 18 39 m 18 40.656 16.656 42 15 42 c 13.344 42 12 40.656 12 39
 c 12 37.344 13.344 36 15 36 c 16.656 36 18 37.344 18 39 c f
Q Q
showpage
%%Trailer
%%EOF
