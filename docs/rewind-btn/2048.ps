%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
692.16 488.93 m 701.777 482.082 713.578 479.02 725.312 480.324 c 737.047
 481.633 747.887 487.215 755.762 496.012 c 763.637 504.805 767.992 516.195
 768 528 c 768 709.055 l 1076.16 488.926 l 1076.16 488.93 l 1085.777 482.082
 1097.578 479.02 1109.312 480.324 c 1121.047 481.633 1131.887 487.215 1139.762
 496.012 c 1147.637 504.805 1151.992 516.195 1152 528 c 1152 1008 l 1151.992
 1019.805 1147.637 1031.195 1139.762 1039.988 c 1131.887 1048.785 1121.047
 1054.367 1109.312 1055.676 c 1097.578 1056.98 1085.777 1053.918 1076.16
 1047.07 c 768 826.945 l 768 1008 l 767.992 1019.805 763.637 1031.195 755.762
 1039.988 c 747.887 1048.785 737.047 1054.367 725.312 1055.676 c 713.578
 1056.98 701.777 1053.918 692.16 1047.07 c 356.16 807.07 l 343.535 798.062
 336.043 783.508 336.043 768 c 336.043 752.492 343.535 737.938 356.16 728.93
 c h
692.16 488.93 m f
0 384 m 0 333.078 20.227 284.242 56.234 248.234 c 92.242 212.227 141.078
 192 192 192 c 1344 192 l 1377.703 192 1410.812 200.871 1440 217.723 c 1469.188
 234.574 1493.426 258.812 1510.277 288 c 1527.129 317.188 1536 350.297 1536
 384 c 1536 1152 l 1536 1185.703 1527.129 1218.812 1510.277 1248 c 1493.426
 1277.188 1469.188 1301.426 1440 1318.277 c 1410.812 1335.129 1377.703 1344
 1344 1344 c 192 1344 l 141.078 1344 92.242 1323.773 56.234 1287.766 c 20.227
 1251.758 0 1202.922 0 1152 c h
1440 384 m 1440 358.539 1429.887 334.121 1411.883 316.117 c 1393.879 298.113
 1369.461 288 1344 288 c 192 288 l 166.539 288 142.121 298.113 124.117 316.117
 c 106.113 334.121 96 358.539 96 384 c 96 1152 l 96 1177.461 106.113 1201.879
 124.117 1219.883 c 142.121 1237.887 166.539 1248 192 1248 c 1344 1248 l
 1369.461 1248 1393.879 1237.887 1411.883 1219.883 c 1429.887 1201.879 1440
 1177.461 1440 1152 c h
1440 384 m f
Q Q
showpage
%%Trailer
%%EOF
