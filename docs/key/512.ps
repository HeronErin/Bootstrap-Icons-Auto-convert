%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 95 384 289
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 95 384 289
384 384 cairo_set_page_size
%%EndPageSetup
q 0 95 384 194 rectclip
1 0 0 -1 0 384 cm q
0 g
0 192 m -0.012 163.613 12.543 136.68 34.285 118.43 c 56.027 100.18 84.73
 92.488 112.688 97.426 c 140.641 102.359 164.977 119.41 179.16 144 c 336
 144 l 339.184 143.996 342.242 145.254 344.496 147.504 c 380.496 183.504
 l 382.754 185.754 384.02 188.812 384.02 192 c 384.02 195.188 382.754 198.246
 380.496 200.496 c 344.496 236.496 l 342.246 238.754 339.188 240.02 336 
240.02 c 332.812 240.02 329.754 238.754 327.504 236.496 c 312 220.969 l 
296.496 236.496 l 294.246 238.754 291.188 240.02 288 240.02 c 284.812 240.02
 281.754 238.754 279.504 236.496 c 264 220.969 l 248.496 236.496 l 246.246
 238.754 243.188 240.02 240 240.02 c 236.812 240.02 233.754 238.754 231.504
 236.496 c 216 220.969 l 200.496 236.496 l 198.242 238.746 195.184 240.004
 192 240 c 179.16 240 l 164.977 264.59 140.641 281.641 112.688 286.574 c
 84.73 291.512 56.027 283.82 34.285 265.57 c 12.543 247.32 -0.012 220.387
 0 192 c 96 120 m 78.738 120.008 62.059 126.215 48.988 137.488 c 35.922 
148.766 27.34 164.359 24.809 181.434 c 22.273 198.508 25.957 215.922 35.188
 230.504 c 44.418 245.09 58.582 255.871 75.098 260.891 c 91.609 265.906 
109.379 264.828 125.16 257.844 c 140.945 250.859 153.695 238.438 161.09 
222.84 c 163.078 218.664 167.289 216.004 171.91 216 c 187.031 216 l 207.504
 195.504 l 209.754 193.246 212.812 191.98 216 191.98 c 219.188 191.98 222.246
 193.246 224.496 195.504 c 240 211.031 l 255.504 195.504 l 257.754 193.246
 260.812 191.98 264 191.98 c 267.188 191.98 270.246 193.246 272.496 195.504
 c 288 211.031 l 303.504 195.504 l 305.754 193.246 308.812 191.98 312 191.98
 c 315.188 191.98 318.246 193.246 320.496 195.504 c 336 211.031 l 355.031
 192 l 331.031 168 l 171.91 168 l 167.289 167.996 163.078 165.336 161.09
 161.16 c 155.25 148.84 146.031 138.434 134.508 131.148 c 122.988 123.859
 109.633 119.996 96 120 c f
96 192 m 96 200.574 91.426 208.496 84 212.785 c 76.574 217.07 67.426 217.07
 60 212.785 c 52.574 208.496 48 200.574 48 192 c 48 183.426 52.574 175.504
 60 171.215 c 67.426 166.93 76.574 166.93 84 171.215 c 91.426 175.504 96
 183.426 96 192 c f
Q Q
showpage
%%Trailer
%%EOF
