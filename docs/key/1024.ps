%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 191 768 577
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 191 768 577
768 768 cairo_set_page_size
%%EndPageSetup
q 0 191 768 386 rectclip
1 0 0 -1 0 768 cm q
0 g
0 384 m -0.016 341.719 13.922 300.617 39.656 267.07 c 65.387 233.523 101.473
 209.406 142.312 198.465 c 183.152 187.523 226.461 190.367 265.52 206.559
 c 304.574 222.746 337.195 251.375 358.32 288 c 672 288 l 678.371 287.988
 684.48 290.508 688.992 295.008 c 760.992 367.008 l 765.508 371.512 768.043
 377.625 768.043 384 c 768.043 390.375 765.508 396.488 760.992 400.992 c
 688.992 472.992 l 684.488 477.508 678.375 480.043 672 480.043 c 665.625
 480.043 659.512 477.508 655.008 472.992 c 624 441.938 l 592.992 472.992
 l 588.488 477.508 582.375 480.043 576 480.043 c 569.625 480.043 563.512
 477.508 559.008 472.992 c 528 441.938 l 496.992 472.992 l 492.488 477.508
 486.375 480.043 480 480.043 c 473.625 480.043 467.512 477.508 463.008 472.992
 c 432 441.938 l 400.992 472.992 l 396.48 477.492 390.371 480.012 384 480
 c 358.32 480 l 337.195 516.625 304.574 545.254 265.52 561.441 c 226.461
 577.633 183.152 580.477 142.312 569.535 c 101.473 558.594 65.387 534.477
 39.656 500.93 c 13.922 467.383 -0.016 426.281 0 384 c 192 240 m 157.48 
240.012 124.113 252.426 97.98 274.977 c 71.844 297.531 54.68 328.719 49.613
 362.867 c 44.547 397.012 51.918 431.84 70.379 461.012 c 88.84 490.18 117.164
 511.746 150.191 521.781 c 183.223 531.816 218.754 529.652 250.324 515.684
 c 281.891 501.715 307.391 476.871 322.176 445.68 c 324.125 441.59 327.191
 438.133 331.023 435.711 c 334.855 433.289 339.293 432.004 343.824 432 c
 374.062 432 l 415.008 391.008 l 419.512 386.492 425.625 383.957 432 383.957
 c 438.375 383.957 444.488 386.492 448.992 391.008 c 480 422.062 l 511.008
 391.008 l 515.512 386.492 521.625 383.957 528 383.957 c 534.375 383.957
 540.488 386.492 544.992 391.008 c 576 422.062 l 607.008 391.008 l 611.512
 386.492 617.625 383.957 624 383.957 c 630.375 383.957 636.488 386.492 640.992
 391.008 c 672 422.062 l 710.062 384 l 662.062 336 l 343.824 336 l 339.293
 335.996 334.855 334.711 331.023 332.289 c 327.191 329.867 324.125 326.41
 322.176 322.32 c 310.496 297.684 292.062 276.867 269.02 262.293 c 245.973
 247.719 219.266 239.988 192 240 c f
192 384 m 192 401.148 182.852 416.996 168 425.57 c 153.148 434.145 134.852
 434.145 120 425.57 c 105.148 416.996 96 401.148 96 384 c 96 366.852 105.148
 351.004 120 342.43 c 134.852 333.855 153.148 333.855 168 342.43 c 182.852
 351.004 192 366.852 192 384 c f
Q Q
showpage
%%Trailer
%%EOF
