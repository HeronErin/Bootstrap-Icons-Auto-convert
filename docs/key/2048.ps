%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 383 1536 1153
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 383 1536 1153
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 383 1536 770 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 768 m -0.031 683.441 27.848 601.234 79.309 534.141 c 130.773 467.047 
202.945 418.816 284.625 396.934 c 366.305 375.051 452.922 380.738 531.035
 413.117 c 609.148 445.492 674.395 502.75 716.641 576 c 1344 576 l 1356.738
 575.977 1368.965 581.02 1377.984 590.016 c 1521.984 734.016 l 1531.012 
743.02 1536.086 755.25 1536.086 768 c 1536.086 780.75 1531.012 792.98 1521.984
 801.984 c 1377.984 945.984 l 1368.98 955.012 1356.75 960.086 1344 960.086
 c 1331.25 960.086 1319.02 955.012 1310.016 945.984 c 1248 883.871 l 1185.984
 945.984 l 1176.98 955.012 1164.75 960.086 1152 960.086 c 1139.25 960.086
 1127.02 955.012 1118.016 945.984 c 1056 883.871 l 993.984 945.984 l 984.98
 955.012 972.75 960.086 960 960.086 c 947.25 960.086 935.02 955.012 926.016
 945.984 c 864 883.871 l 801.984 945.984 l 792.965 954.98 780.738 960.023
 768 960 c 716.641 960 l 674.395 1033.25 609.148 1090.508 531.035 1122.883
 c 452.922 1155.262 366.305 1160.949 284.625 1139.066 c 202.945 1117.184
 130.773 1068.953 79.309 1001.859 c 27.848 934.766 -0.031 852.559 0 768 
c 384 480 m 314.961 480.027 248.227 504.852 195.957 549.957 c 143.688 595.059
 109.359 657.441 99.227 725.73 c 89.094 794.023 103.832 863.684 140.754 
922.02 c 177.676 980.359 234.324 1023.492 300.383 1043.562 c 366.441 1063.633
 437.512 1059.305 500.645 1031.367 c 563.781 1003.434 614.781 953.746 644.352
 891.359 c 648.25 883.176 654.383 876.266 662.047 871.422 c 669.707 866.582
 678.586 864.008 687.648 864 c 748.129 864 l 830.016 782.016 l 839.02 772.988
 851.25 767.914 864 767.914 c 876.75 767.914 888.98 772.988 897.984 782.016
 c 960 844.129 l 1022.016 782.016 l 1031.02 772.988 1043.25 767.914 1056
 767.914 c 1068.75 767.914 1080.98 772.988 1089.984 782.016 c 1152 844.129
 l 1214.016 782.016 l 1223.02 772.988 1235.25 767.914 1248 767.914 c 1260.75
 767.914 1272.98 772.988 1281.984 782.016 c 1344 844.129 l 1420.129 768 
l 1324.129 672 l 687.648 672 l 678.586 671.992 669.707 669.418 662.047 664.578
 c 654.383 659.734 648.25 652.824 644.352 644.641 c 620.996 595.363 584.125
 553.73 538.039 524.586 c 491.949 495.441 438.531 479.98 384 480 c f
384 768 m 384 802.297 365.703 833.988 336 851.137 c 306.297 868.289 269.703
 868.289 240 851.137 c 210.297 833.988 192 802.297 192 768 c 192 733.703
 210.297 702.012 240 684.863 c 269.703 667.711 306.297 667.711 336 684.863
 c 365.703 702.012 384 733.703 384 768 c f
Q Q
showpage
%%Trailer
%%EOF
