%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 36 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 7.262 m 21.848 5.051 l 18.457 1.566 12.117 2.719 9.816 7.211 c 8.766
 9.266 8.465 12.332 10.523 16.398 c 12.48 20.258 16.559 24.961 24 30.125
 c 31.438 24.957 35.516 20.254 37.473 16.395 c 39.535 12.328 39.234 9.262
 38.18 7.211 c 35.879 2.719 29.539 1.566 26.148 5.047 c h
22.531 32.762 m -9.809 10.441 13.531 -6.703 23.609 2.574 c 23.746 2.699
 23.879 2.828 24.004 2.961 c 24.133 2.828 24.266 2.699 24.398 2.574 c 34.477
 -6.703 57.809 10.445 25.469 32.762 c 26.172 34.164 l 26.176 34.164 l 26.359
 34.535 26.211 34.988 25.84 35.172 c 25.469 35.359 25.016 35.207 24.832 
34.836 c 24.809 34.785 l 24.832 35.113 24.867 35.391 24.918 35.656 c 25.078
 36.465 25.402 37.121 26.176 38.664 c 27.039 40.398 26.879 42.113 26.402
 43.551 c 25.93 44.957 25.137 46.152 24.637 46.895 c 24.625 46.914 l 24.629
 46.918 l 24.398 47.262 23.93 47.355 23.586 47.125 c 23.242 46.895 23.148
 46.426 23.379 46.082 c 23.883 45.324 24.578 44.281 24.977 43.074 c 25.375
 41.887 25.465 40.602 24.828 39.336 c 24.789 39.25 l 24.07 37.809 23.648
 36.977 23.445 35.945 c 23.449 35.945 l 23.363 35.5 23.309 35.051 23.293
 34.598 c 23.172 34.836 l 23.082 35.016 22.926 35.152 22.738 35.215 c 22.547
 35.281 22.34 35.266 22.164 35.176 c 21.984 35.086 21.848 34.93 21.785 34.738
 c 21.723 34.551 21.738 34.344 21.832 34.164 c 22.535 32.762 l h
18.039 6.18 m 16.094 5.641 13.59 6.43 12.488 8.574 c 12.094 9.348 11.754
 10.641 12.25 12.578 c 12.438 13.309 13.492 13.172 13.711 12.449 c 14.34
 10.359 15.594 8.109 17.789 7.375 c 18.441 7.156 18.699 6.363 18.043 6.18
 c f*
Q Q
showpage
%%Trailer
%%EOF
