%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 11 673 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 11 673 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 11 577 757 rectclip
1 0 0 -1 0 768 cm q
0 g
384 116.16 m 349.586 80.785 l 295.348 25.059 193.922 43.488 157.105 115.344
 c 140.305 148.223 135.457 197.281 168.434 262.32 c 199.68 324.145 264.961
 399.359 384 482.016 c 502.992 399.312 568.273 324.094 599.566 262.32 c 
632.543 197.281 627.742 148.223 610.895 115.391 c 574.078 43.488 472.656
 25.055 418.414 80.781 c h
360.48 524.16 m -156.961 167.039 216.48 -107.281 377.711 41.137 c 379.887
 43.121 382 45.184 384.047 47.328 c 386.125 45.184 388.238 43.121 390.383
 41.137 c 551.664 -107.277 924.957 167.09 407.52 524.16 c 418.801 546.625
 l 421.77 552.562 419.363 559.781 413.426 562.754 c 407.484 565.723 400.266
 563.312 397.297 557.375 c 396.914 556.559 l 397.297 561.84 397.875 566.254
 398.691 570.48 c 401.285 583.441 406.418 593.906 418.805 618.625 c 432.629
 646.367 430.086 673.824 422.453 696.816 c 414.918 719.328 402.195 738.434
 394.23 750.336 c 394.039 750.672 l 394.031 750.672 l 390.348 756.188 382.891
 757.668 377.375 753.984 c 371.863 750.301 370.379 742.844 374.062 737.328
 c 382.125 725.23 393.262 708.527 399.648 689.184 c 406.031 670.176 407.473
 649.633 397.297 629.375 c 396.672 628.031 l 385.152 604.992 378.434 591.648
 375.168 575.137 c 373.793 568.008 372.957 560.789 372.672 553.535 c 370.75
 557.375 l 370.754 557.375 l 369.34 560.246 366.844 562.434 363.812 563.457
 c 360.781 564.477 357.465 564.246 354.605 562.812 c 351.746 561.379 349.578
 558.863 348.582 555.824 c 347.582 552.785 347.84 549.473 349.297 546.625
 c 360.578 524.16 l h
288.625 98.879 m 257.473 90.238 217.441 102.863 199.824 137.184 c 193.535
 149.566 188.062 170.254 195.984 201.262 c 199.008 212.973 215.855 210.766
 219.359 199.199 c 229.438 165.742 249.457 129.742 284.59 117.984 c 295.004
 114.48 299.184 101.809 288.621 98.879 c f*
Q Q
showpage
%%Trailer
%%EOF
