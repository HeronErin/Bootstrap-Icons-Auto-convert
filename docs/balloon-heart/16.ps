%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 1 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 1.816 m 5.461 1.262 l 4.613 0.391 3.027 0.68 2.453 1.801 c 2.191 2.316
 2.113 3.082 2.629 4.098 c 3.121 5.066 4.141 6.238 6 7.531 c 7.859 6.238
 8.879 5.062 9.367 4.098 c 9.883 3.082 9.809 2.316 9.543 1.801 c 8.969 0.676
 7.383 0.391 6.535 1.262 c h
5.633 8.191 m -2.453 2.613 3.383 -1.676 5.902 0.645 c 5.938 0.676 5.969
 0.707 6 0.742 c 6.031 0.707 6.066 0.676 6.098 0.645 c 8.617 -1.676 14.449
 2.613 6.367 8.191 c 6.543 8.543 l 6.543 8.539 l 6.656 8.766 6.32 8.934 
6.207 8.711 c 6.199 8.699 l 6.207 8.781 6.215 8.852 6.227 8.918 c 6.266 
9.121 6.348 9.285 6.539 9.672 c 6.754 10.105 6.715 10.535 6.598 10.895 c
 6.48 11.246 6.281 11.543 6.156 11.73 c 6.152 11.734 l 6.156 11.73 l 6.02
 11.938 5.707 11.73 5.844 11.52 c 5.969 11.332 6.145 11.07 6.242 10.766 
c 6.344 10.469 6.363 10.148 6.207 9.832 c 6.199 9.812 l 6.02 9.453 5.914
 9.242 5.863 8.984 c 5.863 8.988 l 5.84 8.875 5.828 8.762 5.824 8.648 c 
5.793 8.707 l 5.793 8.711 l 5.746 8.801 5.633 8.84 5.539 8.793 c 5.449 8.746
 5.41 8.633 5.457 8.539 c 5.633 8.188 l h
4.508 1.547 m 4.02 1.41 3.395 1.609 3.121 2.145 c 3.023 2.34 2.938 2.66
 3.062 3.145 c 3.109 3.328 3.371 3.293 3.43 3.113 c 3.586 2.59 3.898 2.027
 4.449 1.844 c 4.613 1.789 4.676 1.59 4.512 1.547 c f*
Q Q
showpage
%%Trailer
%%EOF
