%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 1 85 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 1 85 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 1 73 95 rectclip
1 0 0 -1 0 96 cm q
0 g
48 14.52 m 43.699 10.098 l 36.918 3.133 24.242 5.438 19.641 14.418 c 17.539
 18.527 16.934 24.66 21.055 32.789 c 24.961 40.52 33.121 49.922 48 60.254
 c 62.875 49.914 71.035 40.516 74.945 32.793 c 79.066 24.664 78.469 18.531
 76.359 14.426 c 71.758 5.438 59.078 3.133 52.301 10.102 c h
45.059 65.52 m -19.621 20.879 27.059 -13.41 47.211 5.141 c 47.484 5.387
 47.746 5.648 48.004 5.914 c 48.266 5.645 48.527 5.387 48.797 5.141 c 68.957
 -13.41 115.617 20.883 50.938 65.52 c 52.348 68.328 l 52.352 68.328 l 52.723
 69.07 52.422 69.973 51.68 70.344 c 50.938 70.715 50.031 70.414 49.66 69.672
 c 49.613 69.57 l 49.66 70.23 49.734 70.781 49.836 71.309 c 50.16 72.93 
50.801 74.238 52.352 77.328 c 54.078 80.797 53.762 84.227 52.809 87.102 
c 51.867 89.914 50.277 92.305 49.281 93.793 c 49.258 93.836 l 49.254 93.836
 l 48.793 94.523 47.859 94.707 47.172 94.246 c 46.484 93.789 46.297 92.855
 46.758 92.164 c 47.766 90.652 49.156 88.562 49.957 86.145 c 50.754 83.77
 50.934 81.199 49.664 78.668 c 49.586 78.5 l 48.145 75.621 47.305 73.953
 46.898 71.887 c 46.895 71.891 l 46.723 71 46.621 70.098 46.586 69.191 c
 46.348 69.672 l 46.344 69.672 l 46.168 70.031 45.855 70.305 45.477 70.434
 c 45.098 70.559 44.684 70.531 44.324 70.352 c 43.969 70.172 43.695 69.859
 43.574 69.477 c 43.449 69.098 43.48 68.684 43.66 68.328 c 45.07 65.52 l
 h
36.078 12.359 m 32.184 11.281 27.18 12.855 24.977 17.148 c 24.191 18.695
 23.508 21.281 24.496 25.16 c 24.875 26.625 26.98 26.348 27.418 24.902 c
 28.68 20.719 31.18 16.219 35.57 14.75 c 36.871 14.312 37.395 12.727 36.074
 12.363 c f*
Q Q
showpage
%%Trailer
%%EOF
