%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 2 169 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 2 169 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 2 145 190 rectclip
1 0 0 -1 0 192 cm q
0 g
96 29.039 m 87.395 20.195 l 73.836 6.262 48.48 10.871 39.273 28.836 c 35.074
 37.055 33.863 49.32 42.105 65.578 c 49.922 81.035 66.238 99.84 96 120.504
 c 125.746 99.828 142.066 81.023 149.891 65.578 c 158.133 49.316 156.934
 37.055 152.723 28.848 c 143.52 10.871 118.164 6.262 104.602 20.195 c h
90.121 131.039 m -39.238 41.758 54.121 -26.82 94.43 10.281 c 94.973 10.777
 95.5 11.293 96.016 11.828 c 96.535 11.293 97.062 10.777 97.602 10.281 c
 137.922 -26.824 231.246 41.77 101.887 131.039 c 104.707 136.656 l 104.699
 136.656 l 105.441 138.141 104.84 139.945 103.355 140.688 c 101.871 141.43
 100.066 140.828 99.324 139.344 c 99.227 139.141 l 99.324 140.461 99.465
 141.566 99.672 142.621 c 100.32 145.859 101.605 148.477 104.699 154.656
 c 108.156 161.594 107.52 168.457 105.609 174.203 c 103.727 179.832 100.547
 184.605 98.555 187.582 c 98.508 187.668 l 97.586 189.047 95.723 189.418
 94.344 188.496 c 92.965 187.574 92.594 185.711 93.516 184.332 c 95.531 
181.309 98.316 177.133 99.91 172.297 c 101.508 167.543 101.867 162.41 99.32
 157.344 c 99.164 157.008 l 96.285 151.246 94.605 147.91 93.789 143.785 
c 93.793 143.785 l 93.449 142.004 93.238 140.195 93.168 138.383 c 92.688
 139.344 l 92.336 140.062 91.711 140.609 90.953 140.863 c 90.195 141.117
 89.367 141.062 88.652 140.703 c 87.938 140.344 87.395 139.715 87.145 138.957
 c 86.895 138.195 86.961 137.367 87.324 136.656 c 90.145 131.039 l h
72.156 24.719 m 64.367 22.559 54.359 25.715 49.957 34.293 c 48.387 37.391
 47.016 42.562 48.996 50.312 c 49.754 53.242 53.965 52.688 54.84 49.797 
c 57.359 41.434 62.363 32.434 71.148 29.492 c 73.754 28.617 74.797 25.449
 72.156 24.715 c f*
Q Q
showpage
%%Trailer
%%EOF
