%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 5 337 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 5 337 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 5 289 379 rectclip
1 0 0 -1 0 384 cm q
0 g
192 58.078 m 174.793 40.391 l 147.672 12.527 96.961 21.742 78.555 57.672
 c 70.156 74.113 67.73 98.641 84.219 131.16 c 99.84 162.07 132.48 199.68
 192 241.008 c 251.496 199.656 284.137 162.047 299.785 131.16 c 316.273 
98.641 313.875 74.113 305.449 57.695 c 287.043 21.742 236.328 12.527 209.211
 40.391 c h
180.238 262.078 m -78.48 83.52 108.238 -53.641 188.855 20.566 c 189.945
 21.559 191 22.59 192.023 23.664 c 193.062 22.594 194.121 21.559 195.191
 20.566 c 275.832 -53.641 462.48 83.543 203.758 262.078 c 209.398 273.309
 l 209.398 273.312 l 210.883 276.281 209.68 279.891 206.711 281.375 c 203.742
 282.859 200.133 281.656 198.648 278.688 c 198.457 278.281 l 198.648 280.922
 198.938 283.129 199.344 285.242 c 200.641 291.723 203.207 296.953 209.398
 309.312 c 216.309 323.184 215.039 336.914 211.223 348.41 c 207.453 359.668
 201.094 369.219 197.109 375.172 c 197.012 375.34 l 197.016 375.336 l 195.172
 378.094 191.445 378.836 188.688 376.992 c 185.93 375.148 185.191 371.422
 187.031 368.664 c 191.062 362.617 196.633 354.266 199.824 344.594 c 203.016
 335.09 203.734 324.816 198.648 314.691 c 198.336 314.02 l 192.574 302.5
 189.215 295.828 187.582 287.57 c 187.586 287.566 l 186.895 284.004 186.48
 280.395 186.336 276.77 c 185.375 278.691 l 185.375 278.688 l 184.672 280.125
 183.422 281.219 181.906 281.727 c 180.391 282.238 178.734 282.121 177.305
 281.406 c 175.875 280.688 174.789 279.43 174.289 277.91 c 173.793 276.391
 173.922 274.734 174.648 273.312 c 180.289 262.082 l h
144.312 49.441 m 128.738 45.121 108.719 51.434 99.914 68.594 c 96.77 74.785
 94.035 85.129 97.992 100.633 c 99.504 106.488 107.93 105.387 109.68 99.602
 c 114.719 82.875 124.727 64.875 142.297 58.992 c 147.504 57.238 149.594
 50.902 144.312 49.441 c f*
Q Q
showpage
%%Trailer
%%EOF
