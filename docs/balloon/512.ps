%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 5 312 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 5 312 384
384 384 cairo_set_page_size
%%EndPageSetup
q 72 5 240 379 rectclip
1 0 0 -1 0 384 cm q
0 g
192 239.617 m 249.672 228.145 288 179.52 288 120 c 288 85.703 269.703 54.012
 240 36.863 c 210.297 19.711 173.703 19.711 144 36.863 c 114.297 54.012 
96 85.703 96 120 c 96 179.52 134.328 228.145 192 239.617 c 312 120 m 312
 188.09 269.062 245.449 203.52 261.625 c 209.375 273.312 l 210.859 276.281
 209.656 279.891 206.688 281.375 c 203.719 282.859 200.109 281.656 198.625
 278.688 c 198.434 278.281 l 198.625 280.922 198.914 283.129 199.32 285.242
 c 200.617 291.723 203.184 296.953 209.375 309.312 c 216.285 323.184 215.016
 336.914 211.199 348.41 c 207.43 359.668 201.07 369.219 197.086 375.172 
c 196.988 375.34 l 196.992 375.336 l 195.148 378.094 191.422 378.836 188.664
 376.992 c 185.906 375.148 185.164 371.422 187.008 368.664 c 191.039 362.617
 196.609 354.266 199.801 344.594 c 202.992 335.09 203.711 324.816 198.625
 314.691 c 198.312 314.02 l 192.551 302.5 189.191 295.828 187.559 287.57
 c 187.559 287.566 l 186.871 284.004 186.457 280.395 186.312 276.77 c 185.352
 278.691 l 185.352 278.688 l 184.648 280.125 183.398 281.219 181.883 281.727
 c 180.367 282.238 178.707 282.121 177.277 281.406 c 175.848 280.688 174.766
 279.43 174.266 277.91 c 173.766 276.391 173.895 274.734 174.625 273.312
 c 180.48 261.625 l 114.938 245.449 72 188.09 72 120 c 72 77.129 94.871 
37.512 132 16.078 c 169.129 -5.359 214.871 -5.359 252 16.078 c 289.129 37.512
 312 77.129 312 120 c 145.488 108.121 m 147.621 99.77 151.961 92.148 158.055
 86.055 c 164.148 79.961 171.77 75.621 180.121 73.488 c 186.551 71.855 192
 66.625 192 60 c 192 53.375 186.574 47.902 180.047 48.984 c 165.289 51.473
 151.672 58.496 141.09 69.082 c 130.508 79.668 123.488 93.289 121.008 108.047
 c 119.902 114.574 125.375 120 132 120 c 138.625 120 143.855 114.551 145.488
 108.121 c f*
Q Q
showpage
%%Trailer
%%EOF
