%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 36 2 156 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 36 2 156 192
192 192 cairo_set_page_size
%%EndPageSetup
q 36 2 120 190 rectclip
1 0 0 -1 0 192 cm q
0 g
96 119.809 m 124.836 114.07 144 89.762 144 60 c 144 42.852 134.852 27.004
 120 18.43 c 105.148 9.855 86.852 9.855 72 18.43 c 57.148 27.004 48 42.852
 48 60 c 48 89.762 67.164 114.07 96 119.809 c 156 60 m 156 94.043 134.531
 122.723 101.762 130.812 c 104.691 136.656 l 104.688 136.656 l 105.43 138.141
 104.828 139.945 103.344 140.688 c 101.859 141.43 100.055 140.828 99.312
 139.344 c 99.215 139.141 l 99.312 140.461 99.453 141.566 99.66 142.621 
c 100.309 145.859 101.594 148.477 104.688 154.656 c 108.145 161.594 107.508
 168.457 105.598 174.203 c 103.715 179.832 100.535 184.605 98.543 187.582
 c 98.496 187.668 l 97.574 189.047 95.711 189.418 94.332 188.496 c 92.953
 187.574 92.582 185.711 93.504 184.332 c 95.52 181.309 98.305 177.133 99.898
 172.297 c 101.496 167.543 101.855 162.41 99.309 157.344 c 99.152 157.008
 l 96.273 151.246 94.594 147.91 93.777 143.785 c 93.781 143.785 l 93.438
 142.004 93.227 140.195 93.156 138.383 c 92.676 139.344 l 92.324 140.062
 91.699 140.609 90.941 140.863 c 90.184 141.117 89.355 141.062 88.641 140.703
 c 87.926 140.344 87.383 139.715 87.133 138.957 c 86.883 138.195 86.949 
137.367 87.312 136.656 c 90.242 130.812 l 57.469 122.723 36 94.043 36 60
 c 36 38.562 47.438 18.758 66 8.039 c 84.562 -2.68 107.438 -2.68 126 8.039
 c 144.562 18.758 156 38.562 156 60 c 72.742 54.059 m 73.809 49.887 75.98
 46.074 79.027 43.027 c 82.074 39.98 85.887 37.809 90.059 36.742 c 93.277
 35.93 96 33.312 96 30 c 96 26.688 93.289 23.953 90.023 24.492 c 82.645 
25.734 75.836 29.246 70.547 34.539 c 65.254 39.832 61.746 46.645 60.504 
54.023 c 59.953 57.289 62.688 60 66 60 c 69.312 60 71.93 57.277 72.742 54.059
 c f*
Q Q
showpage
%%Trailer
%%EOF
