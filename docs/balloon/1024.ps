%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 11 624 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 11 624 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 11 480 757 rectclip
1 0 0 -1 0 768 cm q
0 g
384 479.23 m 499.344 456.289 576 359.039 576 240 c 576 189.078 555.773 
140.242 519.766 104.234 c 483.758 68.227 434.922 48 384 48 c 333.078 48 
284.242 68.227 248.234 104.234 c 212.227 140.242 192 189.078 192 240 c 192
 359.039 268.656 456.289 384 479.23 c 624 240 m 624 376.176 538.129 490.895
 407.039 523.246 c 418.75 546.621 l 418.754 546.625 l 421.723 552.562 419.312
 559.781 413.375 562.754 c 407.438 565.723 400.219 563.312 397.246 557.375
 c 396.863 556.559 l 397.246 561.84 397.824 566.254 398.641 570.48 c 401.234
 583.441 406.367 593.906 418.754 618.625 c 432.578 646.367 430.035 673.824
 422.402 696.816 c 414.867 719.328 402.145 738.434 394.18 750.336 c 393.988
 750.672 l 393.984 750.672 l 390.301 756.188 382.844 757.668 377.328 753.984
 c 371.812 750.301 370.332 742.844 374.016 737.328 c 382.078 725.23 393.215
 708.527 399.602 689.184 c 405.984 670.176 407.426 649.633 397.25 629.375
 c 396.625 628.031 l 385.105 604.992 378.387 591.648 375.121 575.137 c 373.746
 568.008 372.91 560.789 372.625 553.535 c 370.703 557.375 l 369.293 560.246
 366.793 562.434 363.762 563.457 c 360.73 564.477 357.418 564.246 354.559
 562.812 c 351.699 561.379 349.527 558.863 348.531 555.824 c 347.535 552.785
 347.793 549.473 349.246 546.625 c 360.957 523.25 l 229.871 490.895 144 
376.176 144 240 c 144 176.348 169.285 115.305 214.293 70.293 c 259.305 25.285
 320.348 0 384 0 c 447.652 0 508.695 25.285 553.707 70.293 c 598.715 115.305
 624 176.348 624 240 c 290.977 216.238 m 295.242 199.539 303.922 184.297
 316.109 172.109 c 328.297 159.922 343.539 151.242 360.238 146.977 c 373.105
 143.711 384 133.246 384 120 c 384 106.754 373.152 95.809 360.098 97.969
 c 330.578 102.941 303.344 116.992 282.18 138.164 c 261.016 159.336 246.977
 186.574 242.016 216.098 c 239.809 229.152 250.75 240 264 240 c 277.246 
240 287.711 229.105 290.977 216.238 c f*
Q Q
showpage
%%Trailer
%%EOF
