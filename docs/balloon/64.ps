%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 9 0 39 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 9 0 39 48
48 48 cairo_set_page_size
%%EndPageSetup
q 9 0 30 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 29.953 m 31.211 28.52 36 22.441 36 15 c 36 8.371 30.629 3 24 3 c 17.371
 3 12 8.371 12 15 c 12 22.441 16.789 28.52 24 29.953 c 39 15 m 39 23.512
 33.633 30.68 25.441 32.703 c 26.172 34.164 l 26.359 34.535 26.207 34.988
 25.836 35.172 c 25.465 35.359 25.012 35.207 24.828 34.836 c 24.805 34.785
 l 24.828 35.113 24.863 35.391 24.914 35.656 c 25.074 36.465 25.398 37.121
 26.172 38.664 c 27.035 40.398 26.875 42.113 26.398 43.551 c 25.926 44.957
 25.133 46.152 24.633 46.895 c 24.621 46.914 l 24.625 46.918 l 24.395 47.262
 23.926 47.355 23.582 47.125 c 23.238 46.895 23.145 46.426 23.375 46.082
 c 23.879 45.324 24.574 44.281 24.973 43.074 c 25.371 41.887 25.461 40.602
 24.824 39.336 c 24.785 39.25 l 24.066 37.809 23.645 36.977 23.441 35.945
 c 23.445 35.945 l 23.359 35.5 23.309 35.051 23.289 34.598 c 23.168 34.836
 l 23.082 35.016 22.926 35.152 22.734 35.215 c 22.547 35.281 22.34 35.266
 22.16 35.176 c 21.98 35.086 21.844 34.93 21.785 34.738 c 21.723 34.551 
21.738 34.344 21.828 34.164 c 22.559 32.703 l 14.367 30.68 9 23.512 9 15
 c 9 9.641 11.859 4.688 16.5 2.008 c 21.141 -0.668 26.859 -0.668 31.5 2.008
 c 36.141 4.688 39 9.641 39 15 c 18.188 13.516 m 18.73 11.391 20.391 9.73
 22.516 9.188 c 23.32 8.98 24 8.328 24 7.5 c 24 6.672 23.32 5.988 22.508
 6.121 c 18.723 6.762 15.762 9.723 15.125 13.508 c 14.988 14.324 15.672 
15 16.5 15 c 17.328 15 17.98 14.32 18.188 13.516 c f*
Q Q
showpage
%%Trailer
%%EOF
