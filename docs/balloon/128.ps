%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 18 1 78 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 18 1 78 96
96 96 cairo_set_page_size
%%EndPageSetup
q 18 1 60 95 rectclip
1 0 0 -1 0 96 cm q
0 g
48 59.902 m 62.418 57.035 72 44.879 72 30 c 72 21.426 67.426 13.504 60 
9.215 c 52.574 4.93 43.426 4.93 36 9.215 c 28.574 13.504 24 21.426 24 30
 c 24 44.879 33.582 57.035 48 59.902 c 78 30 m 78 47.023 67.266 61.363 50.879
 65.406 c 52.344 68.328 l 52.715 69.07 52.414 69.973 51.672 70.344 c 50.93
 70.715 50.027 70.414 49.656 69.672 c 49.609 69.57 l 49.656 70.23 49.73 
70.781 49.832 71.309 c 50.156 72.93 50.797 74.238 52.348 77.328 c 54.074
 80.797 53.758 84.227 52.805 87.102 c 51.863 89.914 50.273 92.305 49.277
 93.793 c 49.254 93.836 l 49.246 93.836 l 48.789 94.523 47.855 94.707 47.164
 94.246 c 46.477 93.789 46.293 92.855 46.754 92.164 c 47.762 90.652 49.152
 88.562 49.953 86.145 c 50.75 83.77 50.93 81.199 49.66 78.668 c 49.582 78.5
 l 48.141 75.621 47.301 73.953 46.895 71.887 c 46.891 71.891 l 46.719 71
 46.613 70.098 46.578 69.191 c 46.34 69.672 l 46.16 70.031 45.848 70.305
 45.469 70.434 c 45.09 70.559 44.676 70.531 44.32 70.352 c 43.961 70.172
 43.691 69.859 43.566 69.477 c 43.441 69.098 43.473 68.684 43.656 68.328
 c 45.121 65.406 l 28.734 61.363 18 47.023 18 30 c 18 19.281 23.719 9.379
 33 4.02 c 42.281 -1.34 53.719 -1.34 63 4.02 c 72.281 9.379 78 19.281 78
 30 c 36.371 27.031 m 37.457 22.777 40.777 19.457 45.031 18.371 c 46.637
 17.965 48 16.656 48 15 c 48 13.344 46.645 11.977 45.012 12.246 c 41.32 
12.867 37.918 14.625 35.273 17.27 c 32.629 19.918 30.871 23.32 30.254 27.012
 c 29.977 28.645 31.348 30 33 30 c 34.656 30 35.965 28.637 36.371 27.031
 c f*
Q Q
showpage
%%Trailer
%%EOF
