%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
51 33 m 51 31.344 49.656 30 48 30 c 46.344 30 45 31.344 45 33 c 45 53.172
 l 36.426 67.453 l 35.574 68.875 36.035 70.719 37.453 71.57 c 38.875 72.426
 40.723 71.965 41.574 70.543 c 50.574 55.543 l 50.852 55.074 51 54.543 51
 54 c h
51 33 m f
39 0 m 37.344 0 36 1.344 36 3 c 36 4.656 37.344 6 39 6 c 42 6 l 42 12.422
 l 31.043 14.004 21.156 19.844 14.484 28.68 c 7.816 37.512 4.898 48.621 
6.375 59.59 c 7.852 70.562 13.594 80.508 22.363 87.266 c 18.75 90.879 l 
18.75 90.875 l 18.188 91.438 17.871 92.203 17.871 92.996 c 17.867 93.793
 18.184 94.559 18.746 95.121 c 19.918 96.293 21.82 96.297 22.992 95.125 
c 27.469 90.648 l 33.738 94.168 40.809 96.012 48 96 c 55.191 96.012 62.262
 94.168 68.531 90.648 c 73.008 95.125 l 74.18 96.297 76.082 96.293 77.254
 95.121 c 78.426 93.949 78.422 92.047 77.25 90.875 c 73.645 87.262 l 73.645
 87.266 l 82.41 80.508 88.156 70.559 89.629 59.59 c 91.105 48.617 88.188
 37.508 81.516 28.676 c 74.844 19.844 64.957 14 54 12.422 c 54 6 l 57 6 
l 58.656 6 60 4.656 60 3 c 60 1.344 58.656 0 57 0 c h
45.227 18.109 m 47.074 17.965 48.926 17.965 50.773 18.109 c 63.266 19.074
 74.359 26.465 80.059 37.625 c 85.762 48.785 85.246 62.109 78.703 72.797
 c 72.16 83.484 60.531 90 48 90 c 35.469 90 23.84 83.484 17.297 72.797 c
 10.754 62.109 10.238 48.785 15.941 37.625 c 21.641 26.465 32.734 19.074
 45.227 18.109 c 0 21 m 0 25.52 1.996 29.574 5.16 32.32 c 9.793 23.203 17.203
 15.793 26.32 11.16 c 23.633 8.066 19.793 6.207 15.699 6.016 c 11.605 5.824
 7.609 7.316 4.645 10.148 c 1.676 12.98 0 16.898 0 21 c 81 6 m 76.48 6 72.426
 7.996 69.68 11.16 c 78.797 15.793 86.207 23.203 90.84 32.32 c 93.934 29.633
 95.793 25.793 95.984 21.699 c 96.176 17.605 94.684 13.609 91.852 10.645
 c 89.02 7.676 85.102 6 81 6 c f
Q Q
showpage
%%Trailer
%%EOF
