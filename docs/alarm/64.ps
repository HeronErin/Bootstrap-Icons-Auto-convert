%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
25.5 16.5 m 25.5 15.672 24.828 15 24 15 c 23.172 15 22.5 15.672 22.5 16.5
 c 22.5 26.586 l 18.215 33.727 l 17.785 34.438 18.016 35.359 18.727 35.785
 c 19.438 36.211 20.359 35.98 20.785 35.27 c 25.285 27.77 l 25.426 27.539
 25.5 27.273 25.5 27 c h
25.5 16.5 m f
19.5 0 m 18.672 0 18 0.672 18 1.5 c 18 2.328 18.672 3 19.5 3 c 21 3 l 21
 6.211 l 15.523 7 10.578 9.922 7.242 14.34 c 3.906 18.758 2.449 24.309 3.188
 29.797 c 3.926 35.281 6.797 40.254 11.18 43.633 c 9.375 45.438 l 9.094 
45.719 8.934 46.102 8.934 46.5 c 8.934 46.898 9.094 47.277 9.375 47.559 
c 9.961 48.148 10.91 48.148 11.496 47.562 c 13.734 45.324 l 16.867 47.082
 20.406 48.004 24 48 c 27.594 48.004 31.133 47.082 34.266 45.324 c 36.504
 47.562 l 37.09 48.148 38.039 48.148 38.625 47.559 c 39.211 46.973 39.211
 46.023 38.625 45.438 c 36.82 43.633 l 41.207 40.254 44.078 35.281 44.816
 29.793 c 45.551 24.309 44.094 18.754 40.758 14.34 c 37.422 9.922 32.477
 7 27 6.211 c 27 3 l 28.5 3 l 29.328 3 30 2.328 30 1.5 c 30 0.672 29.328
 0 28.5 0 c h
22.613 9.055 m 23.535 8.984 24.465 8.984 25.387 9.055 c 31.633 9.535 37.18
 13.234 40.031 18.812 c 42.879 24.395 42.625 31.055 39.352 36.398 c 36.082
 41.742 30.266 45 24 45 c 17.734 45 11.918 41.742 8.648 36.398 c 5.375 31.055
 5.121 24.395 7.969 18.812 c 10.82 13.234 16.367 9.535 22.613 9.055 c 0 
10.5 m 0 12.758 1 14.785 2.578 16.16 c 4.895 11.602 8.602 7.895 13.16 5.578
 c 11.109 3.219 7.805 2.379 4.875 3.473 c 1.941 4.57 0 7.371 0 10.5 c 40.5
 3 m 38.242 3 36.215 4 34.84 5.578 c 39.398 7.895 43.105 11.602 45.422 16.16
 c 47.781 14.109 48.621 10.805 47.527 7.875 c 46.43 4.941 43.629 3 40.5 
3 c f
Q Q
showpage
%%Trailer
%%EOF
