%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 168 rectclip
1 0 0 -1 0 192 cm q
0 g
0 48 m 0 41.637 2.527 35.531 7.031 31.031 c 11.531 26.527 17.637 24 24 
24 c 168 24 l 174.363 24 180.469 26.527 184.969 31.031 c 189.473 35.531 
192 41.637 192 48 c 192 102 l 192 105.312 189.312 108 186 108 c 182.688 
108 180 105.312 180 102 c 180 64.598 l 96 114.996 l 80.09 105.457 l 12.41
 147.098 l 12.406 147.098 l 13.809 152.348 18.566 156 24 156 c 90 156 l 
93.312 156 96 158.688 96 162 c 96 165.312 93.312 168 90 168 c 24 168 l 17.656
 168 11.57 165.488 7.07 161.012 c 2.574 156.539 0.031 150.465 0 144.121 
c h
12 133.262 m 68.496 98.496 l 12 64.598 l h
12 48 m 12 50.605 l 96 101.004 l 180 50.605 l 180 48 l 180 44.816 178.734
 41.766 176.484 39.516 c 174.234 37.266 171.184 36 168 36 c 24 36 l 17.371
 36 12 41.371 12 48 c f
150 192 m 165.004 192 178.871 183.996 186.375 171 c 193.875 158.004 193.875
 141.996 186.375 129 c 178.871 116.004 165.004 108 150 108 c 134.996 108
 121.129 116.004 113.625 129 c 106.125 141.996 106.125 158.004 113.625 171
 c 121.129 183.996 134.996 192 150 192 c 154.246 172.246 m 153.09 173.402
 151.512 174.039 149.875 174 c 148.238 173.965 146.688 173.262 145.586 172.055
 c 131.797 157.055 l 129.555 154.613 129.719 150.816 132.16 148.578 c 134.605
 146.34 138.398 146.5 140.641 148.945 c 144 152.605 l 144 132 l 144 128.688
 146.688 126 150 126 c 153.312 126 156 128.688 156 132 c 156 153.516 l 160.754
 148.75 l 160.754 148.754 l 163.098 146.406 166.902 146.406 169.246 148.754
 c 171.594 151.098 171.594 154.902 169.246 157.246 c h
154.246 172.246 m f
Q Q
showpage
%%Trailer
%%EOF
