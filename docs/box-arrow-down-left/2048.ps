%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
706.945 1200 m 706.945 1212.73 712 1224.938 721.004 1233.941 c 730.004 
1242.941 742.215 1248 754.945 1248 c 1392 1248 l 1430.191 1248 1466.816 
1232.828 1493.824 1205.824 c 1520.828 1178.816 1536 1142.191 1536 1104 c
 1536 144 l 1536 105.809 1520.828 69.184 1493.824 42.176 c 1466.816 15.172
 1430.191 0 1392 0 c 432 0 l 393.809 0 357.184 15.172 330.176 42.176 c 303.172
 69.184 288 105.809 288 144 c 288 781.055 l 288 798.203 297.148 814.051 
312 822.625 c 326.852 831.199 345.148 831.199 360 822.625 c 374.852 814.051
 384 798.203 384 781.055 c 384 144 l 384 131.27 389.059 119.062 398.059 
110.059 c 407.062 101.059 419.27 96 432 96 c 1392 96 l 1404.73 96 1416.938
 101.059 1425.941 110.059 c 1434.941 119.062 1440 131.27 1440 144 c 1440
 1104 l 1440 1116.73 1434.941 1128.938 1425.941 1137.941 c 1416.938 1146.941
 1404.73 1152 1392 1152 c 754.945 1152 l 742.215 1152 730.004 1157.059 721.004
 1166.059 c 712 1175.062 706.945 1187.27 706.945 1200 c f*
0 1488 m 0 1500.73 5.059 1512.938 14.059 1521.941 c 23.062 1530.941 35.27
 1536 48 1536 c 528 1536 l 545.148 1536 560.996 1526.852 569.57 1512 c 578.145
 1497.148 578.145 1478.852 569.57 1464 c 560.996 1449.148 545.148 1440 528
 1440 c 163.871 1440 l 945.984 657.984 l 958.125 645.844 962.867 628.145
 958.422 611.562 c 953.98 594.977 941.023 582.02 924.438 577.578 c 907.855
 573.133 890.156 577.875 878.016 590.016 c 96 1372.129 l 96 1008 l 96 990.852
 86.852 975.004 72 966.43 c 57.148 957.855 38.852 957.855 24 966.43 c 9.148
 975.004 0 990.852 0 1008 c h
0 1488 m f*
Q Q
showpage
%%Trailer
%%EOF
