%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
353.473 600 m 353.473 606.363 356 612.469 360.5 616.969 c 365.004 621.473
 371.105 624 377.473 624 c 696 624 l 715.094 624 733.41 616.414 746.91 602.91
 c 760.414 589.41 768 571.094 768 552 c 768 72 l 768 52.906 760.414 34.59
 746.91 21.09 c 733.41 7.586 715.094 0 696 0 c 216 0 l 196.906 0 178.59 
7.586 165.09 21.09 c 151.586 34.59 144 52.906 144 72 c 144 390.527 l 144
 399.102 148.574 407.027 156 411.312 c 163.426 415.602 172.574 415.602 180
 411.312 c 187.426 407.027 192 399.102 192 390.527 c 192 72 l 192 65.637
 194.527 59.531 199.031 55.031 c 203.531 50.527 209.637 48 216 48 c 696 
48 l 702.363 48 708.469 50.527 712.969 55.031 c 717.473 59.531 720 65.637
 720 72 c 720 552 l 720 558.363 717.473 564.469 712.969 568.969 c 708.469
 573.473 702.363 576 696 576 c 377.473 576 l 371.105 576 365.004 578.527
 360.5 583.031 c 356 587.531 353.473 593.637 353.473 600 c f*
0 744 m 0 750.363 2.527 756.469 7.031 760.969 c 11.531 765.473 17.637 768
 24 768 c 264 768 l 272.574 768 280.496 763.426 284.785 756 c 289.07 748.574
 289.07 739.426 284.785 732 c 280.496 724.574 272.574 720 264 720 c 81.938
 720 l 472.992 328.992 l 479.062 322.922 481.434 314.074 479.211 305.781
 c 476.988 297.488 470.512 291.012 462.219 288.789 c 453.926 286.566 445.078
 288.938 439.008 295.008 c 48 686.062 l 48 504 l 48 495.426 43.426 487.504
 36 483.215 c 28.574 478.93 19.426 478.93 12 483.215 c 4.574 487.504 0 495.426
 0 504 c h
0 744 m f*
Q Q
showpage
%%Trailer
%%EOF
