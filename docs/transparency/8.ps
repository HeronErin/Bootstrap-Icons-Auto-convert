%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0 2.438 m 0 1.301 0.781 0.316 1.891 0.062 c 2.996 -0.195 4.133 0.348 4.629
 1.371 c 5.34 1.715 5.836 2.383 5.965 3.16 c 6.098 3.938 5.844 4.727 5.285
 5.285 c 4.727 5.844 3.938 6.094 3.16 5.965 c 2.383 5.836 1.715 5.336 1.371
 4.629 c 0.531 4.223 0 3.371 0 2.438 c 1.93 4.82 m 2.293 5.293 2.84 5.582
 3.43 5.621 c 4.023 5.66 4.602 5.441 5.02 5.02 c 5.441 4.602 5.66 4.023 
5.621 3.43 c 5.582 2.84 5.293 2.293 4.82 1.93 c 4.996 2.738 4.746 3.578 
4.16 4.16 c 3.578 4.746 2.738 4.996 1.93 4.82 c 1.656 4.344 m 1.793 4.398
 1.938 4.441 2.086 4.469 c 1.531 3.914 l 1.559 4.062 1.598 4.207 1.656 4.344
 c 2.637 4.488 m 2.633 4.492 l 2.785 4.477 2.93 4.445 3.074 4.398 c 1.641
 2.965 l 1.59 3.102 1.551 3.242 1.527 3.387 c h
3.445 4.234 m 3.559 4.172 3.66 4.102 3.758 4.02 c 2.031 2.297 l 1.949 2.395
 1.875 2.496 1.812 2.605 c h
4.023 3.754 m 4.105 3.656 4.176 3.551 4.238 3.441 c 2.605 1.812 l 2.496
 1.875 2.395 1.949 2.297 2.031 c 4.023 3.758 l h
4.402 3.07 m 4.449 2.93 4.477 2.785 4.492 2.629 c 3.387 1.527 l 3.242 1.551
 3.102 1.59 2.969 1.637 c h
4.473 2.078 m 4.469 2.082 l 4.445 1.938 4.402 1.793 4.348 1.652 c 4.207
 1.598 4.062 1.555 3.918 1.531 c h
4.473 2.078 m f
Q Q
showpage
%%Trailer
%%EOF
