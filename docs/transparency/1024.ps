%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 312 m -0.047 241.398 23.852 172.867 67.793 117.605 c 111.734 62.344 173.117
 23.617 241.914 7.758 c 310.715 -8.102 382.855 -0.156 446.555 30.293 c 510.254
 60.738 561.742 111.895 592.609 175.391 c 652.398 204.539 701.305 252.031
 732.199 310.938 c 763.09 369.844 774.348 437.078 764.332 502.836 c 754.312
 568.594 723.539 629.426 676.508 676.461 c 629.473 723.492 568.641 754.266
 502.883 764.281 c 437.129 774.301 369.891 763.043 310.984 732.152 c 252.078
 701.258 204.586 652.348 175.441 592.559 c 122.832 566.949 78.484 527.062
 47.461 477.453 c 16.441 427.844 -0.008 370.512 0 312 c 246.91 617.184 m
 277.555 656.926 318.891 687.109 366.074 704.199 c 413.258 721.289 464.336
 724.574 513.32 713.676 c 562.305 702.777 607.168 678.141 642.656 642.656
 c 678.141 607.168 702.777 562.305 713.676 513.32 c 724.574 464.336 721.289
 413.258 704.199 366.074 c 687.109 318.891 656.926 277.555 617.184 246.91
 c 631.734 315.055 623.055 386.109 592.527 448.746 c 562 511.387 511.387
 562 448.746 592.527 c 386.109 623.055 315.055 631.734 246.91 617.184 c 
211.727 556.273 m 229.199 563.504 247.504 568.785 266.637 572.113 c 195.883
 501.359 l 199.211 520.465 204.492 538.766 211.723 556.27 c 337.195 574.797
 m 337.199 574.801 l 356.336 572.988 375.215 569.094 393.504 563.184 c 209.953
 379.68 l 203.5 397.07 198.742 415.039 195.742 433.344 c h
440.73 542.539 m 455.004 534.539 468.41 525.324 480.953 514.891 c 260.062
 294.047 l 249.57 306.445 240.145 319.711 231.887 333.695 c h
514.891 480.906 m 525.289 468.426 534.508 455.035 542.539 440.73 c 333.742
 231.84 l 319.742 240.094 306.461 249.52 294.047 260.016 c 514.848 480.91
 l h
563.18 393.449 m 569.035 375.465 572.906 356.715 574.797 337.191 c 433.344
 195.742 l 414.785 198.812 396.895 203.551 379.68 209.949 c 563.184 393.5
 l h
572.109 266.633 m 572.113 266.641 l 568.836 247.816 563.523 229.406 556.273
 211.727 c 538.594 204.477 520.184 199.164 501.359 195.887 c h
572.109 266.633 m f
Q Q
showpage
%%Trailer
%%EOF
