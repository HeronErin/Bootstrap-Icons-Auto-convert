%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 624 m -0.098 482.797 47.699 345.73 135.582 235.207 c 223.465 124.684 
346.234 47.234 483.832 15.516 c 621.426 -16.203 765.715 -0.312 893.113 60.582
 c 1020.512 121.48 1123.488 223.785 1185.215 350.785 c 1304.793 409.078 
1402.613 504.062 1464.398 621.875 c 1526.184 739.684 1548.699 874.16 1528.66
 1005.672 c 1508.625 1137.184 1447.082 1258.852 1353.016 1352.918 c 1258.949
 1446.984 1137.281 1508.527 1005.77 1528.566 c 874.254 1548.602 739.781 
1526.086 621.969 1464.301 c 504.156 1402.516 409.172 1304.699 350.879 1185.121
 c 245.664 1133.902 156.969 1054.129 94.926 954.906 c 32.883 855.688 -0.012
 741.02 0 624 c 493.824 1234.367 m 555.109 1313.852 637.781 1374.219 732.148
 1408.398 c 826.516 1442.578 928.672 1449.152 1026.641 1427.352 c 1124.613
 1405.551 1214.34 1356.277 1285.309 1285.309 c 1356.277 1214.34 1405.551
 1124.613 1427.352 1026.641 c 1449.152 928.672 1442.578 826.516 1408.398
 732.148 c 1374.219 637.781 1313.852 555.109 1234.367 493.824 c 1263.469
 630.113 1246.109 772.219 1185.055 897.496 c 1124.004 1022.77 1022.77 1124.004
 897.496 1185.055 c 772.219 1246.109 630.113 1263.469 493.824 1234.367 c
 423.457 1112.543 m 458.402 1127.008 495.008 1137.566 533.281 1144.223 c
 391.777 1002.719 l 398.434 1040.926 408.992 1077.535 423.457 1112.543 c
 674.402 1149.598 m 674.398 1149.602 l 712.668 1145.977 750.43 1138.188 
787.008 1126.367 c 419.902 759.359 l 407 794.137 397.48 830.082 391.488 
866.688 c h
881.473 1085.086 m 910.016 1069.086 936.832 1050.652 961.922 1029.789 c
 520.129 588.098 l 499.141 612.891 480.289 639.418 463.777 667.391 c h
1029.793 961.82 m 1050.594 936.859 1069.023 910.078 1085.09 881.469 c 667.488
 463.68 l 639.48 480.191 612.922 499.043 588.098 520.031 c 1029.699 961.824
 l h
1126.367 786.91 m 1138.078 750.941 1145.824 713.438 1149.598 674.398 c 
866.688 391.488 l 829.566 397.633 793.793 407.105 759.359 419.902 c 1126.367
 787.008 l h
1144.223 533.277 m 1144.223 533.281 l 1137.668 495.633 1127.047 458.809
 1112.543 423.457 c 1077.191 408.953 1040.367 398.332 1002.719 391.777 c
 h
1144.223 533.277 m f
Q Q
showpage
%%Trailer
%%EOF
