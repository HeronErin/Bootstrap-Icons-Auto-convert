%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
0 156 m -0.031 108.578 21.508 63.719 58.531 34.09 c 95.559 4.461 144.051
 -6.719 190.309 3.711 c 236.57 14.141 275.574 45.047 296.305 87.695 c 341.629
 109.789 373.477 152.43 381.805 202.16 c 390.129 251.887 373.906 302.574
 338.254 338.23 c 302.602 373.883 251.914 390.105 202.184 381.777 c 152.453
 373.453 109.816 341.602 87.719 296.281 c 61.414 283.477 39.242 263.531 
23.73 238.727 c 8.219 213.922 -0.004 185.254 0 156 c 123.457 308.594 m 146.633
 338.652 181.633 357.277 219.512 359.715 c 257.391 362.156 294.488 348.168
 321.328 321.328 c 348.168 294.488 362.156 257.391 359.715 219.512 c 357.277
 181.633 338.652 146.633 308.594 123.457 c 319.633 175.168 303.73 228.949
 266.34 266.34 c 228.949 303.73 175.168 319.633 123.457 308.594 c 105.863
 278.137 m 114.598 281.754 123.75 284.395 133.32 286.059 c 97.945 250.684
 l 99.609 260.234 102.25 269.387 105.867 278.141 c 168.602 287.406 m 168.602
 287.398 l 178.168 286.496 187.605 284.547 196.754 281.594 c 104.977 189.84
 l 101.75 198.535 99.371 207.52 97.871 216.672 c h
220.371 271.277 m 227.508 267.277 234.211 262.668 240.484 257.453 c 130.031
 147.023 l 124.785 153.223 120.074 159.855 115.945 166.848 c h
257.449 240.461 m 262.648 234.223 267.258 227.523 271.273 220.371 c 166.871
 115.922 l 159.871 120.047 153.23 124.762 147.023 130.008 c 257.422 240.457
 l h
281.594 196.734 m 284.523 187.742 286.457 178.367 287.402 168.605 c 216.672
 97.871 l 207.391 99.406 198.449 101.773 189.84 104.977 c 281.594 196.754
 l h
286.059 133.328 m 286.055 133.32 l 284.418 123.91 281.762 114.703 278.137
 105.863 c 269.297 102.238 260.09 99.582 250.68 97.945 c h
286.059 133.328 m f
Q Q
showpage
%%Trailer
%%EOF
