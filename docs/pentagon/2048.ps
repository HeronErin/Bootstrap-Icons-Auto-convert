%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 7 0 1529 1523
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 7 0 1529 1523
1536 1536 cairo_set_page_size
%%EndPageSetup
q 7 0 1522 1523 rectclip
1 0 0 -1 0 1536 cm q
0 g
737.762 148.32 m 746.312 141.383 756.988 137.598 768 137.598 c 779.012 
137.598 789.688 141.383 798.238 148.32 c 1399.484 636.77 l 1399.488 636.77
 l 1406.957 642.848 1412.426 651.031 1415.184 660.262 c 1417.938 669.488
 1417.855 679.332 1414.945 688.512 c 1188.191 1406.496 l 1185.117 1416.207
 1179.031 1424.688 1170.816 1430.711 c 1162.602 1436.734 1152.684 1439.988
 1142.496 1440 c 393.504 1440 l 383.305 1439.98 373.379 1436.711 365.164
 1430.672 c 356.945 1424.629 350.867 1416.129 347.809 1406.398 c 120.961
 688.609 l 118.027 679.414 117.934 669.551 120.691 660.305 c 123.445 651.055
 128.926 642.855 136.414 636.77 c 737.66 148.418 l h
1526.211 655.199 m 1526.207 655.199 l 1529.129 645.996 1529.211 636.129
 1526.434 626.879 c 1523.66 617.629 1518.16 609.434 1510.656 603.359 c 798.336
 24.672 l 789.777 17.711 779.082 13.91 768.047 13.91 c 757.016 13.91 746.32
 17.711 737.762 24.672 c 25.344 603.457 l 17.875 609.516 12.398 617.68 9.629
 626.891 c 6.855 636.098 6.91 645.93 9.793 655.105 c 277.441 1502.496 l 
280.516 1512.207 286.602 1520.688 294.816 1526.711 c 303.031 1532.734 312.949
 1535.988 323.137 1536 c 1212.863 1536 l 1223.062 1535.98 1232.988 1532.711
 1241.207 1526.672 c 1249.422 1520.629 1255.5 1512.129 1258.559 1502.398
 c 1526.207 655.102 l h
1526.211 655.199 m f
Q Q
showpage
%%Trailer
%%EOF
