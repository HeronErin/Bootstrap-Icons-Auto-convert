%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 3 0 765 762
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 3 0 765 762
768 768 cairo_set_page_size
%%EndPageSetup
q 3 0 762 762 rectclip
1 0 0 -1 0 768 cm q
0 g
368.879 74.16 m 373.156 70.691 378.496 68.797 384 68.797 c 389.504 68.797
 394.844 70.691 399.121 74.16 c 699.746 318.383 l 699.742 318.383 l 703.48
 321.422 706.215 325.516 707.59 330.129 c 708.969 334.742 708.93 339.664
 707.473 344.258 c 594.098 703.25 l 594.098 703.246 l 592.559 708.102 589.516
 712.344 585.406 715.355 c 581.301 718.367 576.34 719.992 571.246 720 c 
196.754 720 l 191.652 719.988 186.688 718.355 182.582 715.336 c 178.473 
712.316 175.434 708.062 173.902 703.199 c 60.48 344.305 l 59.012 339.707
 58.965 334.777 60.344 330.152 c 61.723 325.527 64.465 321.426 68.207 318.383
 c 368.832 74.207 l h
763.102 327.602 m 763.105 327.602 l 764.566 323 764.605 318.062 763.219
 313.441 c 761.832 308.816 759.082 304.719 755.328 301.68 c 399.168 12.336
 l 394.887 8.855 389.539 6.953 384.023 6.953 c 378.508 6.953 373.16 8.855
 368.879 12.336 c 12.672 301.727 l 8.938 304.758 6.199 308.84 4.812 313.445
 c 3.426 318.051 3.457 322.965 4.895 327.551 c 138.719 751.246 l 140.258
 756.102 143.301 760.344 147.41 763.355 c 151.516 766.367 156.477 767.992
 161.566 768 c 606.434 768 l 611.531 767.988 616.496 766.355 620.602 763.336
 c 624.711 760.316 627.75 756.062 629.281 751.199 c 763.105 327.551 l h
763.102 327.602 m f
Q Q
showpage
%%Trailer
%%EOF
