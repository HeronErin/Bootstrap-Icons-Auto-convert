%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
96 144 m 83.27 144 71.062 149.059 62.059 158.059 c 53.059 167.062 48 179.27
 48 192 c 48 576 l 48 588.73 53.059 600.938 62.059 609.941 c 71.062 618.941
 83.27 624 96 624 c 360 624 l 368.574 624 376.496 628.574 380.785 636 c 
385.07 643.426 385.07 652.574 380.785 660 c 376.496 667.426 368.574 672 
360 672 c 96 672 l 70.539 672 46.121 661.887 28.117 643.883 c 10.113 625.879
 0 601.461 0 576 c 0 192 l 0 166.539 10.113 142.121 28.117 124.117 c 46.121
 106.113 70.539 96 96 96 c 624 96 l 649.461 96 673.879 106.113 691.883 124.117
 c 709.887 142.121 720 166.539 720 192 c 720 384 l 720 392.574 715.426 400.496
 708 404.785 c 700.574 409.07 691.426 409.07 684 404.785 c 676.574 400.496
 672 392.574 672 384 c 672 192 l 672 179.27 666.941 167.062 657.941 158.059
 c 648.938 149.059 636.73 144 624 144 c h
96 144 m f
151.008 247.008 m 155.512 242.492 161.625 239.957 168 239.957 c 174.375
 239.957 180.488 242.492 184.992 247.008 c 248.496 310.559 l 255.238 317.309
 259.023 326.461 259.023 336 c 259.023 345.539 255.238 354.691 248.496 361.441
 c 184.992 424.992 l 178.922 431.062 170.074 433.434 161.781 431.211 c 153.488
 428.988 147.012 422.512 144.789 414.219 c 142.566 405.926 144.938 397.078
 151.008 391.008 c 206.062 336 l 151.008 280.992 l 146.492 276.488 143.957
 270.375 143.957 264 c 143.957 257.625 146.492 251.512 151.008 247.008 c
 264 432 m 264 425.637 266.527 419.531 271.031 415.031 c 275.531 410.527
 281.637 408 288 408 c 384 408 l 392.574 408 400.496 412.574 404.785 420
 c 409.07 427.426 409.07 436.574 404.785 444 c 400.496 451.426 392.574 456
 384 456 c 288 456 l 281.637 456 275.531 453.473 271.031 448.969 c 266.527
 444.469 264 438.363 264 432 c 768 600 m 768 644.555 750.301 687.289 718.793
 718.793 c 687.289 750.301 644.555 768 600 768 c 555.445 768 512.711 750.301
 481.207 718.793 c 449.699 687.289 432 644.555 432 600 c 432 555.445 449.699
 512.711 481.207 481.207 c 512.711 449.699 555.445 432 600 432 c 644.555
 432 687.289 449.699 718.793 481.207 c 750.301 512.711 768 555.445 768 600
 c 600 504 m 593.637 504 587.531 506.527 583.031 511.031 c 578.527 515.531
 576 521.637 576 528 c 576 576 l 528 576 l 519.426 576 511.504 580.574 507.215
 588 c 502.93 595.426 502.93 604.574 507.215 612 c 511.504 619.426 519.426
 624 528 624 c 576 624 l 576 672 l 576 680.574 580.574 688.496 588 692.785
 c 595.426 697.07 604.574 697.07 612 692.785 c 619.426 688.496 624 680.574
 624 672 c 624 624 l 672 624 l 680.574 624 688.496 619.426 692.785 612 c
 697.07 604.574 697.07 595.426 692.785 588 c 688.496 580.574 680.574 576
 672 576 c 624 576 l 624 528 l 624 521.637 621.473 515.531 616.969 511.031
 c 612.469 506.527 606.363 504 600 504 c f
Q Q
showpage
%%Trailer
%%EOF
