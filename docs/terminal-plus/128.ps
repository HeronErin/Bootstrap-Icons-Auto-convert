%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 84 rectclip
1 0 0 -1 0 96 cm q
0 g
12 18 m 8.688 18 6 20.688 6 24 c 6 72 l 6 73.59 6.633 75.117 7.758 76.242
 c 8.883 77.367 10.41 78 12 78 c 45 78 l 46.656 78 48 79.344 48 81 c 48 
82.656 46.656 84 45 84 c 12 84 l 5.371 84 0 78.629 0 72 c 0 24 l 0 17.371
 5.371 12 12 12 c 78 12 l 81.184 12 84.234 13.266 86.484 15.516 c 88.734
 17.766 90 20.816 90 24 c 90 48 l 90 49.656 88.656 51 87 51 c 85.344 51 
84 49.656 84 48 c 84 24 l 84 22.41 83.367 20.883 82.242 19.758 c 81.117 
18.633 79.59 18 78 18 c h
12 18 m f
18.875 30.875 m 19.438 30.312 20.203 29.996 21 29.996 c 21.797 29.996 22.562
 30.312 23.125 30.875 c 31.062 38.82 l 32.816 40.578 32.816 43.422 31.062
 45.18 c 23.125 53.125 l 21.949 54.297 20.051 54.297 18.875 53.125 c 17.703
 51.949 17.703 50.051 18.875 48.875 c 25.758 42 l 18.875 35.125 l 18.312
 34.562 17.996 33.797 17.996 33 c 17.996 32.203 18.312 31.438 18.875 30.875
 c 33 54 m 33 52.344 34.344 51 36 51 c 48 51 l 49.656 51 51 52.344 51 54
 c 51 55.656 49.656 57 48 57 c 36 57 l 34.344 57 33 55.656 33 54 c 96 75
 m 96 82.504 91.996 89.434 85.5 93.188 c 79.004 96.938 70.996 96.938 64.5
 93.188 c 58.004 89.434 54 82.504 54 75 c 54 67.496 58.004 60.566 64.5 56.812
 c 70.996 53.062 79.004 53.062 85.5 56.812 c 91.996 60.566 96 67.496 96 
75 c 75 63 m 73.344 63 72 64.344 72 66 c 72 72 l 66 72 l 64.344 72 63 73.344
 63 75 c 63 76.656 64.344 78 66 78 c 72 78 l 72 84 l 72 85.656 73.344 87
 75 87 c 76.656 87 78 85.656 78 84 c 78 78 l 84 78 l 85.656 78 87 76.656
 87 75 c 87 73.344 85.656 72 84 72 c 78 72 l 78 66 l 78 65.203 77.684 64.441
 77.121 63.879 c 76.559 63.316 75.797 63 75 63 c f
Q Q
showpage
%%Trailer
%%EOF
