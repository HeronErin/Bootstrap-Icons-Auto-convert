%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
190.246 1.754 m 191.945 3.453 192.465 6.004 191.566 8.23 c 156.312 96.359
 l 140.996 94.559 125.637 99.391 114.113 109.641 c 102.59 119.891 95.996
 134.578 96 150 c 96 156 96 168 86.723 154.32 c 67.645 124.344 l 7.727 86.207
 l 7.703 86.195 l 2.781 83.062 l 2.785 83.062 l 0.887 81.855 -0.176 79.684
 0.035 77.445 c 0.242 75.203 1.691 73.266 3.781 72.434 c 9.207 70.273 l 
9.219 70.262 l 183.77 0.422 l 186 -0.473 188.551 0.051 190.246 1.754 c 79.645
 120.84 m 169.574 30.91 l 175.227 16.773 l 161.09 22.426 l 71.16 112.355
 l 75.215 114.934 l 75.215 114.938 l 75.961 115.41 76.59 116.039 77.062 
116.785 c h
79.645 120.84 m f*
150 192 m 165.004 192 178.871 183.996 186.375 171 c 193.875 158.004 193.875
 141.996 186.375 129 c 178.871 116.004 165.004 108 150 108 c 134.996 108
 121.129 116.004 113.625 129 c 106.125 141.996 106.125 158.004 113.625 171
 c 121.129 183.996 134.996 192 150 192 c 154.246 127.754 m 153.09 126.598
 151.512 125.961 149.875 126 c 148.238 126.035 146.688 126.738 145.586 127.945
 c 131.797 142.945 l 129.555 145.387 129.719 149.184 132.16 151.422 c 134.605
 153.66 138.398 153.5 140.641 151.055 c 144 147.395 l 144 168 l 144 171.312
 146.688 174 150 174 c 153.312 174 156 171.312 156 168 c 156 146.484 l 160.754
 151.25 l 160.754 151.246 l 163.098 153.594 166.902 153.594 169.246 151.246
 c 171.594 148.902 171.594 145.098 169.246 142.754 c h
154.246 127.754 m f*
Q Q
showpage
%%Trailer
%%EOF
