%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
380.496 3.504 m 383.891 6.906 384.93 12.004 383.137 16.465 c 312.625 192.719
 l 281.988 189.113 251.277 198.781 228.227 219.277 c 205.18 239.777 191.996
 269.152 192 300 c 192 312 192 336 173.449 308.641 c 135.289 248.688 l 15.457
 172.414 l 15.41 172.391 l 5.57 166.125 l 5.566 166.129 l 1.77 163.711 -0.352
 159.371 0.066 154.887 c 0.488 150.406 3.379 146.535 7.559 144.863 c 18.406
 140.543 l 18.43 140.52 l 367.535 0.84 l 372 -0.949 377.102 0.098 380.496
 3.504 c 159.289 241.68 m 339.145 61.824 l 350.449 33.551 l 322.176 44.855
 l 142.32 224.711 l 150.434 229.871 l 151.922 230.816 153.184 232.078 154.129
 233.566 c h
159.289 241.68 m f*
300 384 m 330.012 384 357.742 367.988 372.746 342 c 387.75 316.012 387.75
 283.988 372.746 258 c 357.742 232.012 330.012 216 300 216 c 269.988 216
 242.258 232.012 227.254 258 c 212.25 283.988 212.25 316.012 227.254 342
 c 242.258 367.988 269.988 384 300 384 c 308.496 255.504 m 306.18 253.191
 303.023 251.926 299.75 251.996 c 296.48 252.07 293.379 253.477 291.168 
255.887 c 263.594 285.887 l 259.113 290.773 259.441 298.363 264.324 302.844
 c 269.207 307.324 276.801 306.996 281.281 302.113 c 288 294.793 l 288 336
 l 288 342.629 293.371 348 300 348 c 306.629 348 312 342.629 312 336 c 312
 292.969 l 321.504 302.496 l 326.195 307.188 333.805 307.188 338.496 302.496
 c 343.188 297.805 343.188 290.195 338.496 285.504 c h
308.496 255.504 m f*
Q Q
showpage
%%Trailer
%%EOF
