%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
204 108 m 204 101.371 198.629 96 192 96 c 185.371 96 180 101.371 180 108
 c 180 123.215 l 166.824 115.605 l 166.824 115.609 l 164.066 113.992 160.777
 113.543 157.688 114.359 c 154.598 115.176 151.961 117.191 150.363 119.961
 c 148.766 122.727 148.336 126.02 149.176 129.105 c 150.012 132.188 152.047
 134.812 154.824 136.391 c 168 144 l 154.824 151.609 l 152.047 153.188 150.012
 155.812 149.176 158.895 c 148.336 161.98 148.766 165.273 150.363 168.039
 c 151.961 170.809 154.598 172.824 157.688 173.641 c 160.777 174.457 164.066
 174.008 166.824 172.391 c 180 164.781 l 180 180 l 180 186.629 185.371 192
 192 192 c 198.629 192 204 186.629 204 180 c 204 164.785 l 217.176 172.395
 l 217.176 172.391 l 219.934 174.008 223.223 174.457 226.312 173.641 c 229.402
 172.824 232.039 170.809 233.637 168.039 c 235.234 165.273 235.664 161.98
 234.824 158.895 c 233.988 155.812 231.953 153.188 229.176 151.609 c 216
 144 l 229.176 136.391 l 231.953 134.812 233.988 132.188 234.824 129.105
 c 235.664 126.02 235.234 122.727 233.637 119.961 c 232.039 117.191 229.402
 115.176 226.312 114.359 c 223.223 113.543 219.934 113.992 217.176 115.609
 c 204 123.219 l h
132 216 m 125.371 216 120 221.371 120 228 c 120 234.629 125.371 240 132
 240 c 252 240 l 258.629 240 264 234.629 264 228 c 264 221.371 258.629 216
 252 216 c h
132 264 m 125.371 264 120 269.371 120 276 c 120 282.629 125.371 288 132
 288 c 252 288 l 258.629 288 264 282.629 264 276 c 264 269.371 258.629 264
 252 264 c h
132 264 m f
48 48 m 48 35.27 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 
0 c 288 0 l 300.73 0 312.938 5.059 321.941 14.059 c 330.941 23.062 336 35.27
 336 48 c 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 96 384 l 83.27 384 71.062 378.941 62.059 369.941
 c 53.059 360.938 48 348.73 48 336 c h
288 24 m 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531 
72 41.637 72 48 c 72 336 l 72 342.363 74.527 348.469 79.031 352.969 c 83.531
 357.473 89.637 360 96 360 c 288 360 l 294.363 360 300.469 357.473 304.969
 352.969 c 309.473 348.469 312 342.363 312 336 c 312 48 l 312 41.637 309.473
 35.531 304.969 31.031 c 300.469 26.527 294.363 24 288 24 c f
Q Q
showpage
%%Trailer
%%EOF
