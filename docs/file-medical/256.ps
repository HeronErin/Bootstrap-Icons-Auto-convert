%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
102 54 m 102 50.688 99.312 48 96 48 c 92.688 48 90 50.688 90 54 c 90 61.609
 l 83.41 57.805 l 82.035 56.996 80.391 56.77 78.844 57.18 c 77.297 57.59
 75.98 58.598 75.18 59.98 c 74.383 61.363 74.168 63.012 74.586 64.551 c 
75.008 66.094 76.023 67.406 77.41 68.195 c 84 72 l 77.41 75.805 l 76.023
 76.594 75.008 77.906 74.586 79.449 c 74.168 80.988 74.383 82.637 75.18 
84.02 c 75.98 85.402 77.297 86.41 78.844 86.82 c 80.391 87.23 82.035 87.004
 83.41 86.195 c 90 82.391 l 90 90 l 90 93.312 92.688 96 96 96 c 99.312 96
 102 93.312 102 90 c 102 82.391 l 108.59 86.195 l 109.965 87.004 111.609
 87.23 113.156 86.82 c 114.703 86.41 116.02 85.402 116.82 84.02 c 117.617
 82.637 117.832 80.988 117.414 79.449 c 116.992 77.906 115.977 76.594 114.59
 75.805 c 108 72 l 114.59 68.195 l 115.977 67.406 116.992 66.094 117.414
 64.551 c 117.832 63.012 117.617 61.363 116.82 59.98 c 116.02 58.598 114.703
 57.59 113.156 57.18 c 111.609 56.77 109.965 56.996 108.59 57.805 c 102 
61.609 l h
66 108 m 62.688 108 60 110.688 60 114 c 60 117.312 62.688 120 66 120 c 
126 120 l 129.312 120 132 117.312 132 114 c 132 110.688 129.312 108 126 
108 c h
66 132 m 62.688 132 60 134.688 60 138 c 60 141.312 62.688 144 66 144 c 
126 144 l 129.312 144 132 141.312 132 138 c 132 134.688 129.312 132 126 
132 c h
66 132 m f
24 24 m 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48
 0 c 144 0 l 150.363 0 156.469 2.527 160.969 7.031 c 165.473 11.531 168 
17.637 168 24 c 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 
156.469 189.473 150.363 192 144 192 c 48 192 l 41.637 192 35.531 189.473
 31.031 184.969 c 26.527 180.469 24 174.363 24 168 c h
144 12 m 48 12 l 41.371 12 36 17.371 36 24 c 36 168 l 36 171.184 37.266
 174.234 39.516 176.484 c 41.766 178.734 44.816 180 48 180 c 144 180 l 147.184
 180 150.234 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168
 c 156 24 l 156 20.816 154.734 17.766 152.484 15.516 c 150.234 13.266 147.184
 12 144 12 c f
Q Q
showpage
%%Trailer
%%EOF
