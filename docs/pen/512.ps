%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 377 377
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 377 377
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 377 377 rectclip
1 0 0 -1 0 384 cm q
0 g
323.953 19.078 m 327.527 15.504 l 334.852 8.188 345.52 5.328 355.52 8.012
 c 365.52 10.695 373.328 18.508 376.004 28.508 c 378.68 38.508 375.82 49.18
 368.496 56.496 c 364.922 60.047 l 371.039 66.91 374.297 75.848 374.035 
85.039 c 373.773 94.227 370.004 102.965 363.504 109.465 c 116.496 356.496
 l 114.953 358.031 113.02 359.117 110.902 359.641 c 14.902 383.641 l 10.816
 384.656 6.496 383.457 3.52 380.48 c 0.543 377.504 -0.656 373.184 0.359 
369.098 c 24.359 273.098 l 24.887 270.988 25.973 269.066 27.504 267.527 
c 258.91 36.121 l 254.133 32.758 247.629 33.324 243.504 37.465 c 164.496
 116.496 l 159.805 121.188 152.195 121.188 147.504 116.496 c 142.812 111.805
 142.812 104.195 147.504 99.504 c 226.559 20.496 l 233.062 13.992 241.809
 10.223 251.004 9.965 c 260.195 9.707 269.141 12.977 276 19.105 c 282.594
 13.211 291.129 9.949 299.973 9.945 c 308.816 9.941 317.352 13.191 323.953
 19.078 c 308.496 37.461 m 308.496 37.465 l 303.809 32.781 296.215 32.781
 291.527 37.465 c 46.801 282.145 l 28.465 355.512 l 101.832 337.176 l 346.559
 92.496 l 348.816 90.246 350.086 87.188 350.086 84 c 350.086 80.812 348.816
 77.754 346.559 75.504 c h
308.496 37.461 m f
Q Q
showpage
%%Trailer
%%EOF
