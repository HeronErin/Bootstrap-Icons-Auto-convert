%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 189 189
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 189 189
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 189 189 rectclip
1 0 0 -1 0 192 cm q
0 g
161.977 9.539 m 163.766 7.75 l 163.766 7.754 l 167.426 4.094 172.762 2.664
 177.762 4.008 c 182.758 5.348 186.664 9.254 188.004 14.254 c 189.34 19.254
 187.91 24.59 184.246 28.246 c 182.457 30.023 l 182.461 30.023 l 185.52 
33.453 187.148 37.926 187.02 42.52 c 186.887 47.113 185.004 51.484 181.754
 54.73 c 58.246 178.246 l 57.477 179.016 56.508 179.559 55.453 179.82 c 
7.453 191.82 l 5.41 192.328 3.25 191.73 1.758 190.242 c 0.27 188.75 -0.328
 186.59 0.18 184.547 c 12.18 136.547 l 12.441 135.496 12.984 134.531 13.754
 133.766 c 129.457 18.062 l 129.457 18.059 l 127.066 16.379 123.812 16.664
 121.754 18.73 c 82.246 58.246 l 79.902 60.594 76.098 60.594 73.754 58.246
 c 71.406 55.902 71.406 52.098 73.754 49.754 c 113.281 10.246 l 116.531 
6.996 120.906 5.113 125.5 4.984 c 130.098 4.852 134.57 6.488 138 9.551 c
 141.297 6.605 145.562 4.977 149.984 4.973 c 154.406 4.973 158.676 6.598
 161.977 9.539 c 154.25 18.73 m 154.246 18.73 l 151.906 16.391 148.105 16.391
 145.766 18.73 c 23.398 141.07 l 14.23 177.754 l 50.914 168.586 l 173.281
 46.246 l 174.41 45.121 175.043 43.594 175.043 42 c 175.043 40.406 174.41
 38.879 173.281 37.754 c h
154.25 18.73 m f
Q Q
showpage
%%Trailer
%%EOF
