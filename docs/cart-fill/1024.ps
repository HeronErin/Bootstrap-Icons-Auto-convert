%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 720 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 720 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 720 720 rectclip
1 0 0 -1 0 768 cm q
0 g
0 72 m 0 65.637 2.527 59.531 7.031 55.031 c 11.531 50.527 17.637 48 24 
48 c 96 48 l 101.352 48 106.555 49.793 110.77 53.09 c 114.988 56.387 117.984
 60.996 119.281 66.191 c 138.719 144 l 696 144 l 703.133 144.008 709.895
 147.188 714.449 152.68 c 719.004 158.172 720.879 165.402 719.566 172.414
 c 647.566 556.414 l 646.539 561.914 643.621 566.883 639.316 570.457 c 635.012
 574.035 629.594 575.996 624 576 c 192 576 l 186.406 575.996 180.988 574.035
 176.684 570.457 c 172.379 566.883 169.461 561.914 168.434 556.414 c 96.48
 173.137 l 77.281 96 l 24 96 l 17.637 96 11.531 93.473 7.031 88.969 c 2.527
 84.469 0 78.363 0 72 c 240 576 m 205.703 576 174.012 594.297 156.863 624
 c 139.711 653.703 139.711 690.297 156.863 720 c 174.012 749.703 205.703
 768 240 768 c 274.297 768 305.988 749.703 323.137 720 c 340.289 690.297
 340.289 653.703 323.137 624 c 305.988 594.297 274.297 576 240 576 c 576
 576 m 541.703 576 510.012 594.297 492.863 624 c 475.711 653.703 475.711
 690.297 492.863 720 c 510.012 749.703 541.703 768 576 768 c 610.297 768
 641.988 749.703 659.137 720 c 676.289 690.297 676.289 653.703 659.137 624
 c 641.988 594.297 610.297 576 576 576 c 240 624 m 257.148 624 272.996 633.148
 281.57 648 c 290.145 662.852 290.145 681.148 281.57 696 c 272.996 710.852
 257.148 720 240 720 c 222.852 720 207.004 710.852 198.43 696 c 189.855 
681.148 189.855 662.852 198.43 648 c 207.004 633.148 222.852 624 240 624
 c 576 624 m 593.148 624 608.996 633.148 617.57 648 c 626.145 662.852 626.145
 681.148 617.57 696 c 608.996 710.852 593.148 720 576 720 c 558.852 720 
543.004 710.852 534.43 696 c 525.855 681.148 525.855 662.852 534.43 648 
c 543.004 633.148 558.852 624 576 624 c f
Q Q
showpage
%%Trailer
%%EOF
