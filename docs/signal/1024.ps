%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
291.84 11.23 m 300.434 46.125 l 300.434 46.129 l 266.457 54.547 233.938
 68.008 203.953 86.062 c 185.57 55.199 l 185.566 55.199 l 218.535 35.23 
254.355 20.402 291.793 11.23 c h
476.16 11.23 m 467.617 46.078 l 501.59 54.5 534.109 67.961 564.098 86.016
 c 582.723 55.152 l 582.719 55.152 l 549.613 35.234 513.688 20.426 476.16
 11.23 c 55.199 185.469 m 55.199 185.473 l 35.289 218.504 20.465 254.344
 11.23 291.793 c 46.125 300.434 l 46.129 300.434 l 54.547 266.457 68.008
 233.938 86.062 203.953 c 55.199 185.426 l h
36 384 m 35.941 366.551 37.242 349.121 39.887 331.871 c 4.367 326.398 l
 -1.414 364.551 -1.414 403.355 4.367 441.504 c 39.887 436.129 l 37.242 418.879
 35.941 401.449 36 384 c 582.434 712.703 m 564 681.984 l 534.09 700.074 
501.609 713.523 467.664 721.871 c 476.305 756.816 l 513.691 747.52 549.469
 732.648 582.434 712.703 c 732.047 384 m 732.047 401.504 730.734 418.879
 728.109 436.129 c 763.629 441.504 l 763.633 441.504 l 769.414 403.355 769.414
 364.551 763.633 326.398 c 728.113 331.871 l 730.738 349.152 732.051 366.527
 732.051 384 c 756.82 476.062 m 721.875 467.422 l 721.871 467.426 l 713.461
 501.43 700 533.984 681.938 564 c 712.801 582.574 l 732.746 549.488 747.586
 513.582 756.816 476.062 c 436.176 728.062 m 401.617 733.344 366.434 733.344
 331.871 728.062 c 326.496 763.68 l 364.613 769.453 403.387 769.453 441.504
 763.68 c 436.129 728.113 l h
664.176 590.398 m 643.449 618.531 618.574 643.359 590.398 664.031 c 611.805
 693.07 l 611.809 693.07 l 642.84 670.281 670.266 642.949 693.168 612 c 
h
590.398 103.824 m 618.574 124.559 643.438 149.426 664.176 177.602 c 693.168
 156 l 670.348 125.035 643 97.672 612.047 74.832 c h
103.824 177.602 m 124.539 149.418 149.418 124.539 177.602 103.824 c 156
 74.832 l 125.035 97.652 97.672 125 74.832 155.953 c 103.824 177.555 l h
712.848 185.426 m 681.938 204 l 700.035 233.902 713.523 266.398 721.875
 300.336 c 756.82 291.695 l 756.816 291.695 l 747.578 254.266 732.754 218.441
 712.848 185.426 c 331.824 39.887 m 366.383 34.688 401.523 34.688 436.078
 39.887 c 441.453 4.367 l 441.457 4.367 l 403.336 -1.406 364.566 -1.406 
326.449 4.367 c h
122.258 702.719 m 48 720 l 65.281 645.648 l 30.289 637.488 l 12.961 711.793
 l 10.113 723.91 13.73 736.641 22.523 745.449 c 31.316 754.262 44.035 757.906
 56.16 755.09 c 130.465 737.953 l h
37.727 605.375 m 72.863 613.438 l 84.863 561.934 l 84.863 561.938 l 67.336
 532.559 54.262 500.738 46.078 467.52 c 11.184 476.16 l 19.016 507.973 30.891
 538.656 46.512 567.457 c 37.68 605.379 l h
205.727 683.277 m 154.223 695.277 l 162.383 730.367 l 200.305 721.535 l
 229.105 737.23 259.777 749.086 291.602 756.91 c 300.242 721.965 l 300.238
 721.969 l 267.098 713.719 235.359 700.598 206.062 683.039 c h
384 72 m 329.234 72.016 275.434 86.449 228.012 113.848 c 180.59 141.246
 141.219 180.645 113.848 228.082 c 86.48 275.523 72.078 329.328 72.098 384.098
 c 72.148 442.781 88.754 500.262 120 549.938 c 90 678 l 217.922 648 l 287.891
 689.996 371.523 702.914 450.902 683.988 c 530.281 665.066 599.094 615.805
 642.59 546.762 c 686.09 477.715 700.812 394.383 683.609 314.609 c 666.41
 234.84 618.648 164.98 550.559 120 c 500.688 88.59 442.938 71.945 384 72
 c f
Q Q
showpage
%%Trailer
%%EOF
