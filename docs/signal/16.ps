%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
4.559 0.176 m 4.691 0.723 l 4.695 0.723 l 4.164 0.852 3.656 1.062 3.188
 1.344 c 2.898 0.863 l 3.414 0.551 3.973 0.32 4.559 0.176 c h
7.438 0.176 m 7.305 0.719 l 7.836 0.852 8.344 1.062 8.812 1.344 c 9.102
 0.863 l 9.105 0.863 l 8.586 0.551 8.027 0.32 7.441 0.176 c 0.863 2.898 
m 0.551 3.414 0.32 3.973 0.176 4.559 c 0.723 4.695 l 0.852 4.164 1.062 3.656
 1.344 3.188 c h
0.562 6 m 0.562 5.727 0.582 5.453 0.625 5.184 c 0.066 5.102 l -0.023 5.695
 -0.023 6.301 0.066 6.898 c 0.621 6.812 l 0.625 6.816 l 0.582 6.547 0.562
 6.273 0.562 6 c 9.102 11.137 m 8.812 10.656 l 8.344 10.938 7.836 11.148
 7.309 11.277 c 7.445 11.824 l 7.441 11.824 l 8.027 11.68 8.586 11.449 9.102
 11.137 c 11.438 6 m 11.438 6.273 11.418 6.547 11.375 6.816 c 11.93 6.902
 l 11.934 6.898 l 12.023 6.301 12.023 5.695 11.934 5.102 c 11.379 5.188 
l 11.418 5.457 11.441 5.73 11.441 6.004 c 11.828 7.441 m 11.281 7.305 l 
11.277 7.305 l 11.148 7.836 10.938 8.344 10.656 8.812 c 11.137 9.102 l 11.449
 8.586 11.68 8.023 11.824 7.438 c 6.812 11.375 m 6.273 11.457 5.723 11.457
 5.184 11.375 c 5.098 11.93 l 5.102 11.934 l 5.695 12.023 6.305 12.023 6.898
 11.934 c 6.812 11.379 l h
10.375 9.223 m 10.379 9.227 l 10.055 9.664 9.664 10.051 9.227 10.375 c 
9.562 10.828 l 9.559 10.828 l 10.043 10.473 10.473 10.047 10.832 9.562 c
 h
9.227 1.621 m 9.668 1.945 10.055 2.332 10.379 2.773 c 10.832 2.438 l 10.473
 1.953 10.047 1.527 9.562 1.168 c h
1.621 2.773 m 1.945 2.336 2.336 1.945 2.773 1.621 c 2.438 1.168 l 1.953
 1.527 1.527 1.953 1.168 2.438 c h
11.137 2.895 m 10.652 3.184 l 10.934 3.652 11.145 4.16 11.277 4.688 c 11.824
 4.551 l 11.824 4.559 l 11.68 3.973 11.449 3.414 11.137 2.898 c 5.184 0.625
 m 5.727 0.543 6.273 0.543 6.812 0.625 c 6.898 0.07 l 6.898 0.066 l 6.301
 -0.023 5.695 -0.023 5.102 0.066 c h
1.91 10.98 m 0.75 11.25 l 1.02 10.09 l 0.473 9.961 l 0.203 11.121 l 0.156
 11.312 0.215 11.512 0.352 11.648 c 0.488 11.785 0.688 11.844 0.879 11.797
 c 2.039 11.527 l h
0.59 9.461 m 1.141 9.586 l 1.328 8.781 l 1.324 8.781 l 1.051 8.32 0.848
 7.824 0.719 7.305 c 0.172 7.441 l 0.176 7.441 l 0.297 7.938 0.484 8.418
 0.727 8.867 c h
3.215 10.68 m 2.41 10.867 l 2.539 11.414 l 3.133 11.277 l 3.582 11.523 
4.062 11.707 4.559 11.832 c 4.695 11.285 l 4.691 11.281 l 4.172 11.152 3.676
 10.945 3.219 10.672 c h
6 1.125 m 4.707 1.125 3.469 1.641 2.555 2.555 c 1.641 3.469 1.125 4.707
 1.125 6 c 1.129 6.918 1.387 7.816 1.875 8.594 c 1.406 10.594 l 3.406 10.125
 l 5.68 11.488 8.625 10.785 10.039 8.543 c 11.453 6.301 10.816 3.336 8.602
 1.875 c 7.824 1.383 6.922 1.125 6 1.125 c f
Q Q
showpage
%%Trailer
%%EOF
