%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.281 0.086 m 2.348 0.359 l 2.082 0.426 1.828 0.531 1.594 0.672 c 1.449
 0.43 l 1.707 0.273 1.988 0.16 2.281 0.086 c h
3.723 0.086 m 3.652 0.359 l 3.918 0.426 4.172 0.531 4.406 0.672 c 4.551
 0.43 l 4.293 0.273 4.012 0.16 3.719 0.086 c 0.43 1.445 m 0.43 1.449 l 0.277
 1.707 0.16 1.988 0.086 2.281 c 0.359 2.348 l 0.426 2.082 0.531 1.828 0.672
 1.594 c 0.43 1.449 l h
0.281 3 m 0.281 2.863 0.289 2.727 0.312 2.594 c 0.035 2.551 l -0.012 2.848
 -0.012 3.152 0.035 3.449 c 0.312 3.406 l 0.289 3.273 0.281 3.137 0.281 
3 c 4.551 5.566 m 4.406 5.328 l 4.172 5.469 3.918 5.574 3.652 5.641 c 3.719
 5.914 l 3.723 5.914 l 4.012 5.84 4.293 5.723 4.551 5.566 c 5.719 3 m 5.719
 3.137 5.707 3.273 5.688 3.406 c 5.965 3.449 l 6.012 3.152 6.012 2.848 5.965
 2.551 c 5.688 2.594 l 5.707 2.73 5.719 2.863 5.719 3 c 5.914 3.719 m 5.641
 3.652 l 5.574 3.918 5.469 4.172 5.328 4.406 c 5.57 4.551 l 5.723 4.293 
5.84 4.012 5.914 3.719 c 3.41 5.688 m 3.141 5.73 2.867 5.73 2.594 5.688 
c 2.551 5.965 l 2.848 6.012 3.152 6.012 3.449 5.965 c 3.406 5.688 l h
5.191 4.613 m 5.188 4.613 l 5.027 4.832 4.832 5.027 4.613 5.188 c 4.781
 5.414 l 5.023 5.238 5.238 5.023 5.414 4.781 c h
4.613 0.812 m 4.832 0.973 5.027 1.168 5.191 1.391 c 5.418 1.223 l 5.414
 1.219 l 5.238 0.977 5.023 0.762 4.781 0.586 c h
0.812 1.387 m 0.973 1.168 1.168 0.973 1.387 0.812 c 1.219 0.586 l 0.977
 0.762 0.762 0.977 0.586 1.219 c h
5.57 1.449 m 5.328 1.594 l 5.469 1.828 5.574 2.082 5.641 2.348 c 5.914 
2.281 l 5.914 2.277 l 5.84 1.988 5.727 1.707 5.57 1.449 c 2.594 0.312 m 
2.863 0.27 3.137 0.27 3.406 0.312 c 3.449 0.035 l 3.152 -0.012 2.848 -0.012
 2.551 0.035 c h
0.957 5.488 m 0.375 5.625 l 0.512 5.043 l 0.238 4.98 l 0.102 5.562 l 0.078
 5.656 0.105 5.754 0.176 5.824 c 0.246 5.895 0.344 5.922 0.438 5.898 c 1.02
 5.766 l h
0.293 4.73 m 0.566 4.793 l 0.66 4.391 l 0.664 4.391 l 0.527 4.16 0.426 
3.91 0.359 3.652 c 0.086 3.719 l 0.148 3.969 0.242 4.207 0.363 4.434 c h
1.605 5.34 m 1.203 5.434 l 1.266 5.707 l 1.562 5.637 l 1.789 5.758 2.027
 5.852 2.277 5.914 c 2.344 5.641 l 2.086 5.574 1.84 5.473 1.609 5.336 c 
h
3 0.562 m 2.355 0.562 1.734 0.82 1.277 1.277 c 0.82 1.734 0.562 2.355 0.562
 3 c 0.562 3.461 0.695 3.91 0.938 4.297 c 0.703 5.297 l 1.703 5.062 l 2.84
 5.746 4.312 5.395 5.02 4.273 c 5.727 3.148 5.406 1.668 4.301 0.938 c 3.91
 0.691 3.461 0.562 3 0.562 c f
Q Q
showpage
%%Trailer
%%EOF
