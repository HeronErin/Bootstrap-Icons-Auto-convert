%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
36.48 1.402 m 37.555 5.766 l 33.309 6.816 29.242 8.5 25.492 10.758 c 23.195
 6.898 l 27.316 4.402 31.793 2.551 36.473 1.402 c h
59.52 1.402 m 58.453 5.762 l 62.699 6.812 66.766 8.496 70.512 10.754 c 
72.84 6.895 l 68.703 4.406 64.211 2.555 59.52 1.402 c 6.898 23.184 m 4.41
 27.312 2.559 31.793 1.402 36.473 c 5.766 37.551 l 5.766 37.555 l 6.816 
33.309 8.5 29.242 10.758 25.492 c 6.898 23.176 l h
4.5 48 m 4.492 45.82 4.656 43.641 4.984 41.484 c 0.547 40.801 l -0.176 
45.57 -0.176 50.418 0.547 55.188 c 4.988 54.516 l 4.984 54.516 l 4.656 52.359
 4.492 50.18 4.5 48 c 72.805 89.09 m 70.5 85.25 l 70.5 85.246 l 66.762 87.508
 62.699 89.191 58.457 90.234 c 59.535 94.602 l 59.539 94.602 l 64.211 93.441
 68.684 91.582 72.805 89.09 c 91.508 48 m 91.508 50.188 91.344 52.359 91.016
 54.516 c 95.457 55.188 l 95.453 55.188 l 96.176 50.418 96.176 45.57 95.453
 40.801 c 91.012 41.484 l 91.34 43.645 91.504 45.816 91.504 48 c 94.602 
59.508 m 90.234 58.43 l 89.184 62.68 87.5 66.75 85.242 70.5 c 89.102 72.82
 l 91.594 68.688 93.449 64.199 94.602 59.508 c 54.523 91.008 m 50.203 91.668
 45.805 91.668 41.484 91.008 c 40.812 95.461 l 45.578 96.184 50.422 96.184
 55.188 95.461 c 54.516 91.016 l h
83.023 73.801 m 80.43 77.316 77.32 80.418 73.801 83.004 c 76.477 86.633
 l 80.355 83.785 83.785 80.367 86.645 76.5 c h
73.801 12.977 m 77.324 15.57 80.43 18.676 83.023 22.199 c 86.648 19.5 l
 86.645 19.5 l 83.793 15.629 80.375 12.211 76.508 9.355 c h
12.977 22.199 m 15.566 18.676 18.676 15.566 22.199 12.977 c 19.5 9.352 
l 19.5 9.355 l 15.629 12.207 12.211 15.625 9.355 19.492 c 12.98 22.191 l
 h
89.105 23.176 m 85.242 25.496 l 87.504 29.234 89.191 33.297 90.234 37.539
 c 94.602 36.461 l 93.445 31.785 91.594 27.305 89.105 23.18 c 41.477 4.984
 m 45.797 4.336 50.191 4.336 54.512 4.984 c 55.184 0.543 l 55.184 0.547 
l 50.418 -0.176 45.57 -0.176 40.805 0.547 c h
15.281 87.84 m 6 90 l 8.16 80.707 l 3.785 79.688 l 1.621 88.977 l 1.621
 88.973 l 1.266 90.488 1.715 92.078 2.816 93.18 c 3.914 94.281 5.504 94.738
 7.02 94.387 c 16.309 92.246 l h
4.715 75.672 m 9.105 76.68 l 10.605 70.242 l 10.609 70.242 l 8.418 66.57
 6.781 62.594 5.762 58.441 c 1.398 59.52 l 2.379 63.496 3.859 67.332 5.812
 70.934 c 4.707 75.672 l h
25.715 85.41 m 19.277 86.91 l 20.297 91.297 l 25.035 90.191 l 28.637 92.152
 32.469 93.637 36.445 94.613 c 37.523 90.246 l 37.531 90.246 l 33.387 89.215
 29.422 87.574 25.758 85.379 c h
48 9 m 37.656 9.004 27.738 13.113 20.426 20.43 c 13.113 27.746 9.008 37.668
 9.012 48.012 c 9.02 55.348 11.094 62.531 15 68.742 c 11.25 84.75 l 27.238
 81 l 39.02 88.07 53.645 88.422 65.754 81.93 c 77.859 75.438 85.66 63.059
 86.289 49.336 c 86.918 35.613 80.281 22.57 68.82 15 c 62.586 11.074 55.367
 8.992 48 9 c f
Q Q
showpage
%%Trailer
%%EOF
