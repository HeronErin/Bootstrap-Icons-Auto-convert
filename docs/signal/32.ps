%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
9.121 0.352 m 9.391 1.441 l 9.387 1.441 l 8.328 1.703 7.309 2.125 6.375
 2.691 c 5.801 1.727 l 6.828 1.102 7.949 0.637 9.117 0.352 c h
14.883 0.352 m 14.613 1.441 l 15.676 1.703 16.691 2.125 17.629 2.688 c 
18.211 1.723 l 17.176 1.102 16.051 0.637 14.879 0.352 c 1.723 5.797 m 1.727
 5.797 l 1.102 6.828 0.641 7.949 0.352 9.117 c 1.441 9.387 l 1.703 8.328
 2.125 7.309 2.691 6.375 c 1.727 5.797 l h
1.125 12 m 1.125 11.453 1.164 10.91 1.246 10.371 c 0.137 10.199 l -0.043
 11.391 -0.043 12.605 0.137 13.797 c 1.246 13.629 l 1.164 13.09 1.125 12.547
 1.125 12 c 18.199 22.273 m 17.625 21.312 l 16.691 21.879 15.676 22.297 
14.613 22.559 c 14.883 23.652 l 16.055 23.359 17.172 22.895 18.199 22.273
 c 22.875 12 m 22.875 12.547 22.836 13.09 22.754 13.629 c 23.863 13.797 
l 24.043 12.605 24.043 11.391 23.863 10.199 c 22.754 10.371 l 22.836 10.91
 22.875 11.453 22.875 12 c 23.648 14.879 m 22.555 14.609 l 22.559 14.605
 l 22.297 15.668 21.875 16.688 21.309 17.625 c 22.273 18.207 l 22.898 17.172
 23.363 16.051 23.652 14.879 c 13.633 22.754 m 12.555 22.918 11.453 22.918
 10.375 22.754 c 10.207 23.867 l 10.203 23.863 l 11.395 24.047 12.605 24.047
 13.797 23.863 c 13.629 22.75 l h
20.758 18.453 m 20.754 18.449 l 20.109 19.328 19.332 20.105 18.449 20.75
 c 19.117 21.656 l 19.117 21.66 l 20.09 20.945 20.945 20.094 21.66 19.125
 c h
18.449 3.246 m 19.328 3.895 20.105 4.672 20.754 5.551 c 21.66 4.875 l 20.949
 3.906 20.094 3.051 19.125 2.34 c h
3.246 5.551 m 3.891 4.668 4.668 3.891 5.551 3.246 c 4.875 2.34 l 3.906 
3.051 3.051 3.906 2.34 4.875 c h
22.277 5.797 m 21.312 6.379 l 21.879 7.312 22.301 8.328 22.559 9.391 c 
23.652 9.121 l 23.652 9.117 l 23.363 7.945 22.898 6.828 22.277 5.793 c 10.371
 1.246 m 11.449 1.086 12.547 1.086 13.629 1.246 c 13.797 0.137 l 12.605 
-0.043 11.395 -0.043 10.203 0.137 c h
3.82 21.961 m 1.5 22.5 l 2.039 20.176 l 0.945 19.922 l 0.402 22.242 l 0.406
 22.242 l 0.316 22.621 0.43 23.02 0.703 23.297 c 0.98 23.57 1.375 23.684
 1.754 23.598 c 4.074 23.062 l h
1.18 18.918 m 2.277 19.172 l 2.652 17.562 l 2.652 17.559 l 2.105 16.641
 1.695 15.648 1.441 14.609 c 0.352 14.879 l 0.348 14.879 l 0.594 15.875 
0.965 16.832 1.453 17.734 c 1.176 18.918 l h
6.43 21.352 m 4.82 21.727 l 5.074 22.824 l 6.258 22.547 l 7.156 23.039 
8.117 23.406 9.109 23.652 c 9.379 22.559 l 9.383 22.562 l 8.348 22.305 7.355
 21.895 6.441 21.344 c h
12 2.25 m 9.414 2.25 6.934 3.277 5.105 5.109 c 3.277 6.938 2.254 9.418 
2.254 12.004 c 2.254 13.836 2.773 15.633 3.75 17.184 c 2.812 21.188 l 6.809
 20.25 l 11.359 22.98 17.254 21.574 20.082 17.086 c 22.91 12.598 21.629 
6.672 17.203 3.75 c 15.648 2.77 13.844 2.25 12 2.25 c f
Q Q
showpage
%%Trailer
%%EOF
