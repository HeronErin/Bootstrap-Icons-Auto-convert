%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
18.238 0.703 m 18.773 2.883 l 18.777 2.883 l 16.652 3.41 14.621 4.25 12.746
 5.379 c 11.598 3.449 l 13.66 2.203 15.898 1.273 18.238 0.703 c h
29.758 0.703 m 29.227 2.879 l 31.348 3.406 33.383 4.246 35.258 5.375 c 
36.422 3.445 l 34.352 2.203 32.105 1.277 29.762 0.703 c 3.453 11.594 m 3.449
 11.594 l 2.207 13.656 1.277 15.898 0.703 18.238 c 2.883 18.777 l 3.41 16.652
 4.25 14.621 5.379 12.746 c 3.449 11.59 l h
2.25 24 m 2.246 22.91 2.328 21.82 2.492 20.742 c 0.273 20.398 l -0.09 22.785
 -0.09 25.211 0.273 27.594 c 2.492 27.258 l 2.328 26.18 2.246 25.09 2.25
 24 c 36.402 44.543 m 35.25 42.621 l 35.25 42.625 l 33.379 43.754 31.352
 44.594 29.23 45.117 c 29.77 47.301 l 32.105 46.719 34.344 45.789 36.402
 44.543 c 45.754 24 m 45.754 25.094 45.672 26.18 45.508 27.258 c 47.727 
27.594 l 48.09 25.211 48.09 22.785 47.727 20.398 c 45.508 20.742 l 45.672
 21.82 45.754 22.906 45.754 24 c 47.301 29.754 m 45.117 29.215 l 44.59 31.34
 43.75 33.375 42.621 35.25 c 44.551 36.41 l 45.797 34.344 46.723 32.098 
47.301 29.754 c 27.262 45.504 m 25.102 45.832 22.902 45.832 20.742 45.504
 c 20.406 47.73 l 22.789 48.09 25.211 48.09 27.594 47.73 c 27.258 45.508
 l h
41.512 36.898 m 40.215 38.66 38.66 40.211 36.898 41.504 c 38.238 43.32 
l 38.238 43.316 l 40.176 41.891 41.891 40.184 43.324 38.25 c h
36.898 6.488 m 38.66 7.785 40.215 9.34 41.508 11.098 c 43.32 9.746 l 43.324
 9.75 l 41.898 7.816 40.188 6.105 38.254 4.676 c h
6.488 11.102 m 7.785 9.34 9.34 7.785 11.102 6.488 c 9.75 4.676 l 7.816 
6.102 6.105 7.812 4.676 9.746 c 6.488 11.098 l h
44.551 11.59 m 42.617 12.75 l 43.75 14.617 44.59 16.648 45.113 18.77 c 
47.297 18.23 l 47.301 18.23 l 46.723 15.891 45.797 13.652 44.555 11.59 c
 20.738 2.492 m 22.898 2.168 25.094 2.168 27.254 2.492 c 27.59 0.273 l 25.207
 -0.086 22.785 -0.086 20.402 0.273 c h
7.641 43.922 m 3 45 l 4.078 40.352 l 1.891 39.84 l 0.809 44.484 l 0.809
 44.488 l 0.633 45.246 0.859 46.039 1.406 46.59 c 1.957 47.141 2.754 47.371
 3.512 47.191 c 8.156 46.121 l h
2.359 37.836 m 4.555 38.34 l 5.305 35.121 l 4.207 33.285 3.391 31.297 2.879
 29.219 c 0.699 29.758 l 0.699 29.762 l 1.188 31.75 1.93 33.664 2.906 35.465
 c 2.355 37.836 l h
12.859 42.703 m 9.641 43.453 l 10.152 45.645 l 12.523 45.094 l 14.324 46.074
 16.242 46.816 18.23 47.305 c 18.77 45.121 l 18.766 45.121 l 16.695 44.605
 14.711 43.789 12.879 42.691 c h
24 4.5 m 18.828 4.5 13.867 6.559 10.215 10.215 c 6.559 13.875 4.504 18.836
 4.508 24.008 c 4.508 27.672 5.547 31.266 7.5 34.371 c 5.625 42.375 l 13.621
 40.5 l 19.508 44.035 26.824 44.211 32.875 40.965 c 38.93 37.719 42.828 
31.531 43.145 24.668 c 43.457 17.809 40.141 11.285 34.41 7.5 c 31.293 5.535
 27.684 4.496 24 4.5 c f
Q Q
showpage
%%Trailer
%%EOF
