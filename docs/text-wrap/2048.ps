%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 239 1344 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 239 1344 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 239 1152 1009 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 336 m 192 323.27 197.059 311.062 206.059 302.059 c 215.062 293.059 
227.27 288 240 288 c 1296 288 l 1313.148 288 1328.996 297.148 1337.57 312
 c 1346.145 326.852 1346.145 345.148 1337.57 360 c 1328.996 374.852 1313.148
 384 1296 384 c 240 384 l 227.27 384 215.062 378.941 206.059 369.941 c 197.059
 360.938 192 348.73 192 336 c 192 720 m 192 707.27 197.059 695.062 206.059
 686.059 c 215.062 677.059 227.27 672 240 672 c 1104 672 l 1167.652 672 
1228.695 697.285 1273.707 742.293 c 1318.715 787.305 1344 848.348 1344 912
 c 1344 975.652 1318.715 1036.695 1273.707 1081.707 c 1228.695 1126.715 
1167.652 1152 1104 1152 c 979.871 1152 l 1041.984 1214.016 l 1054.125 1226.156
 1058.867 1243.855 1054.422 1260.438 c 1049.98 1277.023 1037.023 1289.98
 1020.438 1294.422 c 1003.855 1298.867 986.156 1294.125 974.016 1281.984
 c 830.016 1137.984 l 820.988 1128.98 815.914 1116.75 815.914 1104 c 815.914
 1091.25 820.988 1079.02 830.016 1070.016 c 974.016 926.016 l 986.156 913.875
 1003.855 909.133 1020.438 913.578 c 1037.023 918.02 1049.98 930.977 1054.422
 947.562 c 1058.867 964.145 1054.125 981.844 1041.984 993.984 c 979.871 
1056 l 1104 1056 l 1155.445 1056 1202.984 1028.555 1228.707 984 c 1254.43
 939.445 1254.43 884.555 1228.707 840 c 1202.984 795.445 1155.445 768 1104
 768 c 240 768 l 227.27 768 215.062 762.941 206.059 753.941 c 197.059 744.938
 192 732.73 192 720 c 192 1104 m 192 1091.27 197.059 1079.062 206.059 1070.059
 c 215.062 1061.059 227.27 1056 240 1056 c 672 1056 l 689.148 1056 704.996
 1065.148 713.57 1080 c 722.145 1094.852 722.145 1113.148 713.57 1128 c 
704.996 1142.852 689.148 1152 672 1152 c 240 1152 l 227.27 1152 215.062 
1146.941 206.059 1137.941 c 197.059 1128.938 192 1116.73 192 1104 c f*
Q Q
showpage
%%Trailer
%%EOF
