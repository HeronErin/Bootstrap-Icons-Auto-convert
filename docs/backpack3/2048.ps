%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 149 0 1387 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 149 0 1387 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 149 0 1238 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
387.84 713.281 m 400.883 621.746 446.512 537.992 516.352 477.402 c 586.188
 416.809 675.543 383.449 768 383.449 c 860.457 383.449 949.812 416.809 1019.648
 477.402 c 1089.488 537.992 1135.117 621.746 1148.16 713.281 c 1150.184 
725.996 1147.016 738.988 1139.363 749.344 c 1131.715 759.699 1120.227 766.547
 1107.477 768.352 c 1094.73 770.152 1081.793 766.758 1071.57 758.93 c 1061.352
 751.102 1054.703 739.496 1053.121 726.719 c 1043.336 658.07 1009.113 595.254
 956.738 549.809 c 904.359 504.367 837.344 479.348 768 479.348 c 698.656
 479.348 631.641 504.367 579.262 549.809 c 526.887 595.254 492.664 658.07
 482.879 726.719 c 481.297 739.496 474.648 751.102 464.43 758.93 c 454.207
 766.758 441.27 770.152 428.523 768.352 c 415.773 766.547 404.285 759.699
 396.637 749.344 c 388.984 738.988 385.816 725.996 387.84 713.281 c 384 
912 m 384 899.27 389.059 887.062 398.059 878.059 c 407.062 869.059 419.27
 864 432 864 c 1104 864 l 1116.73 864 1128.938 869.059 1137.941 878.059 
c 1146.941 887.062 1152 899.27 1152 912 c 1152 1296 l 1152 1308.73 1146.941
 1320.938 1137.941 1329.941 c 1128.938 1338.941 1116.73 1344 1104 1344 c
 432 1344 l 419.27 1344 407.062 1338.941 398.059 1329.941 c 389.059 1320.938
 384 1308.73 384 1296 c h
480 960 m 480 1248 l 1056 1248 l 1056 960 l 960 960 l 960 1008 l 960 1025.148
 950.852 1040.996 936 1049.57 c 921.148 1058.145 902.852 1058.145 888 1049.57
 c 873.148 1040.996 864 1025.148 864 1008 c 864 960 l h
480 960 m f
576 224.734 m 576 192 l 576 141.078 596.227 92.242 632.234 56.234 c 668.242
 20.227 717.078 0 768 0 c 818.922 0 867.758 20.227 903.766 56.234 c 939.773
 92.242 960 141.078 960 192 c 960 224.734 l 1004.641 240.574 1046.785 261.695
 1085.566 287.422 c 1125.504 167.711 l 1132.934 145.461 1148.25 126.703 
1168.566 114.977 c 1188.879 103.246 1212.785 99.363 1235.77 104.055 c 1258.754
 108.75 1279.223 121.695 1293.312 140.449 c 1367.234 239.043 l 1367.23 239.039
 l 1386.203 264.238 1391.586 297.145 1381.633 327.07 c 1304.543 558.141 
l 1329.984 623.039 1344 693.984 1344 768 c 1344 1296 l 1344 1338.129 1332.91
 1379.516 1311.848 1416 c 1290.781 1452.484 1260.484 1482.781 1224 1503.848
 c 1187.516 1524.91 1146.129 1536 1104 1536 c 432 1536 l 368.348 1536 307.305
 1510.715 262.293 1465.707 c 217.285 1420.695 192 1359.652 192 1296 c 192
 768 l 192 693.984 206.016 623.137 231.359 558.145 c 154.367 327.074 l 154.367
 327.07 l 144.414 297.145 149.797 264.238 168.77 239.039 c 242.691 140.445
 l 242.688 140.449 l 256.777 121.695 277.246 108.75 300.23 104.055 c 323.215
 99.363 347.121 103.246 367.434 114.977 c 387.75 126.703 403.066 145.461
 410.496 167.711 c 450.434 287.422 l 450.434 287.426 l 489.57 261.453 531.742
 240.371 576 224.641 c h
672 192 m 672 199.969 l 735.551 189.227 800.449 189.227 864 199.969 c 864
 192 l 864 157.703 845.703 126.012 816 108.863 c 786.297 91.711 749.703 
91.711 720 108.863 c 690.297 126.012 672 157.703 672 192 c 1242.336 441.121
 m 1290.527 296.641 l 1216.605 198.047 l 1165.535 351.168 l 1194.145 378.496
 1219.742 408.48 1242.336 441.121 c 370.559 351.168 m 319.488 198.047 l 
245.566 296.641 l 293.758 441.121 l 316.285 408.48 341.887 378.496 370.559
 351.168 c 768 288 m 640.695 288 518.605 338.57 428.59 428.59 c 338.57 518.605
 288 640.695 288 768 c 288 1296 l 288 1334.191 303.172 1370.816 330.176 
1397.824 c 357.184 1424.828 393.809 1440 432 1440 c 1104 1440 l 1142.191
 1440 1178.816 1424.828 1205.824 1397.824 c 1232.828 1370.816 1248 1334.191
 1248 1296 c 1248 768 l 1248 683.742 1225.82 600.969 1183.691 528 c 1141.562
 455.031 1080.969 394.438 1008 352.309 c 935.031 310.18 852.258 288 768 
288 c f
Q Q
showpage
%%Trailer
%%EOF
