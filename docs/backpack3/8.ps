%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.516 2.785 m 1.621 2.047 2.254 1.496 3 1.496 c 3.746 1.496 4.379 2.047
 4.484 2.785 c 4.5 2.891 4.43 2.988 4.324 3 c 4.223 3.016 4.125 2.941 4.113
 2.84 c 4.035 2.285 3.559 1.871 3 1.871 c 2.441 1.871 1.965 2.285 1.887 
2.84 c 1.875 2.941 1.777 3.016 1.676 3 c 1.57 2.988 1.5 2.891 1.516 2.785
 c 1.5 3.562 m 1.5 3.457 1.582 3.375 1.688 3.375 c 4.312 3.375 l 4.418 3.375
 4.5 3.457 4.5 3.562 c 4.5 5.062 l 4.5 5.168 4.418 5.25 4.312 5.25 c 1.688
 5.25 l 1.582 5.25 1.5 5.168 1.5 5.062 c h
1.875 3.75 m 1.875 4.875 l 4.125 4.875 l 4.125 3.75 l 3.75 3.75 l 3.75 
3.938 l 3.75 4.188 3.375 4.188 3.375 3.938 c 3.375 3.75 l h
1.875 3.75 m f
2.25 0.879 m 2.25 0.75 l 2.25 0.336 2.586 0 3 0 c 3.414 0 3.75 0.336 3.75
 0.75 c 3.75 0.879 l 3.926 0.941 4.09 1.023 4.242 1.125 c 4.398 0.656 l 
4.441 0.523 4.555 0.426 4.691 0.402 c 4.828 0.383 4.969 0.438 5.051 0.547
 c 5.34 0.934 l 5.414 1.031 5.438 1.16 5.398 1.277 c 5.098 2.18 l 5.195 
2.434 5.25 2.711 5.25 3 c 5.25 5.062 l 5.25 5.312 5.152 5.551 4.977 5.727
 c 4.801 5.902 4.562 6 4.312 6 c 1.688 6 l 1.168 6 0.75 5.582 0.75 5.062
 c 0.75 3 l 0.75 2.711 0.805 2.434 0.902 2.18 c 0.602 1.277 l 0.562 1.16
 0.586 1.031 0.66 0.934 c 0.949 0.547 l 1.031 0.438 1.172 0.383 1.309 0.402
 c 1.445 0.426 1.559 0.523 1.602 0.656 c 1.758 1.125 l 1.758 1.121 l 1.914
 1.02 2.078 0.938 2.25 0.879 c h
2.625 0.75 m 2.625 0.781 l 2.875 0.738 3.125 0.738 3.375 0.781 c 3.375 
0.75 l 3.375 0.543 3.207 0.375 3 0.375 c 2.793 0.375 2.625 0.543 2.625 0.75
 c 4.852 1.723 m 5.039 1.16 l 4.75 0.773 l 4.551 1.371 l 4.664 1.477 4.762
 1.594 4.852 1.723 c 1.449 1.371 m 1.25 0.773 l 0.961 1.16 l 1.148 1.723
 l 1.238 1.594 1.336 1.477 1.449 1.371 c 3 1.125 m 1.965 1.125 1.125 1.965
 1.125 3 c 1.125 5.062 l 1.125 5.375 1.375 5.625 1.688 5.625 c 4.312 5.625
 l 4.625 5.625 4.875 5.375 4.875 5.062 c 4.875 3 l 4.875 2.504 4.676 2.027
 4.324 1.676 c 3.973 1.324 3.496 1.125 3 1.125 c f
Q Q
showpage
%%Trailer
%%EOF
