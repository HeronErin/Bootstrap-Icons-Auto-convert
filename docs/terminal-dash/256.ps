%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 168 rectclip
1 0 0 -1 0 192 cm q
0 g
24 36 m 17.371 36 12 41.371 12 48 c 12 144 l 12 147.184 13.266 150.234 
15.516 152.484 c 17.766 154.734 20.816 156 24 156 c 90 156 l 93.312 156 
96 158.688 96 162 c 96 165.312 93.312 168 90 168 c 24 168 l 17.637 168 11.531
 165.473 7.031 160.969 c 2.527 156.469 0 150.363 0 144 c 0 48 l 0 41.637
 2.527 35.531 7.031 31.031 c 11.531 26.527 17.637 24 24 24 c 156 24 l 162.363
 24 168.469 26.527 172.969 31.031 c 177.473 35.531 180 41.637 180 48 c 180
 96 l 180 99.312 177.312 102 174 102 c 170.688 102 168 99.312 168 96 c 168
 48 l 168 44.816 166.734 41.766 164.484 39.516 c 162.234 37.266 159.184 
36 156 36 c h
24 36 m f
37.754 61.754 m 38.879 60.625 40.406 59.988 42 59.988 c 43.594 59.988 45.121
 60.625 46.246 61.754 c 62.125 77.641 l 65.633 81.152 65.633 86.848 62.125
 90.359 c 46.246 106.246 l 43.902 108.594 40.098 108.594 37.754 106.246 
c 35.406 103.902 35.406 100.098 37.754 97.754 c 51.516 84 l 37.754 70.246
 l 36.625 69.121 35.988 67.594 35.988 66 c 35.988 64.406 36.625 62.879 37.754
 61.754 c 66 108 m 66 104.688 68.688 102 72 102 c 96 102 l 99.312 102 102
 104.688 102 108 c 102 111.312 99.312 114 96 114 c 72 114 l 68.688 114 66
 111.312 66 108 c 192 150 m 192 165.004 183.996 178.871 171 186.375 c 158.004
 193.875 141.996 193.875 129 186.375 c 116.004 178.871 108 165.004 108 150
 c 108 134.996 116.004 121.129 129 113.625 c 141.996 106.125 158.004 106.125
 171 113.625 c 183.996 121.129 192 134.996 192 150 c 126 150 m 126 151.59
 126.633 153.117 127.758 154.242 c 128.883 155.367 130.41 156 132 156 c 
168 156 l 171.312 156 174 153.312 174 150 c 174 146.688 171.312 144 168 
144 c 132 144 l 128.688 144 126 146.688 126 150 c f
Q Q
showpage
%%Trailer
%%EOF
