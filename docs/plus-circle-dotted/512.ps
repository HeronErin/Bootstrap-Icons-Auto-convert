%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 187.777 0 183.594 0.137 179.449 0.406 c 180.984 24.359 l 188.32
 23.879 195.68 23.879 203.016 24.359 c 204.551 0.406 l 200.375 0.137 196.188
 0 192 0 c 154.559 3.648 m 146.238 5.312 138.145 7.473 130.27 10.129 c 137.973
 32.883 l 144.852 30.531 151.926 28.637 159.188 27.195 c 154.559 3.672 l
 h
253.727 10.152 m 245.789 7.465 237.684 5.301 229.465 3.672 c 224.809 27.191
 l 232.055 28.633 239.129 30.527 246.023 32.879 c h
298.68 32.352 m 291.715 27.691 284.449 23.488 276.938 19.777 c 266.305 
41.281 l 272.914 44.562 279.258 48.234 285.336 52.297 c h
107.039 19.777 m 99.504 23.504 92.262 27.699 85.32 32.352 c 98.664 52.273
 l 104.762 48.195 111.117 44.523 117.695 41.281 c h
65.398 47.641 m 59.094 53.176 53.176 59.098 47.637 65.402 c 65.684 81.242
 l 70.531 75.723 75.715 70.539 81.234 65.691 c h
336.359 65.402 m 336.359 65.398 l 330.832 59.098 324.902 53.168 318.602
 47.641 c 302.762 65.688 l 308.297 70.535 313.48 75.719 318.312 81.238 c
 h
364.223 107.043 m 364.223 107.039 l 360.512 99.535 356.309 92.277 351.648
 85.32 c 331.727 98.664 l 335.789 104.742 339.453 111.09 342.719 117.695
 c 364.223 107.062 l h
32.352 85.32 m 27.68 92.25 23.488 99.496 19.777 107.062 c 41.281 117.695
 l 44.562 111.086 48.234 104.742 52.297 98.664 c h
10.152 130.273 m 7.465 138.211 5.301 146.316 3.672 154.535 c 27.191 159.191
 l 28.633 151.945 30.527 144.871 32.879 137.977 c h
380.352 154.559 m 378.727 146.332 376.559 138.219 373.871 130.273 c 351.117
 137.977 l 353.469 144.855 355.363 151.93 356.805 159.191 c h
0.406 179.449 m -0.141 187.809 -0.141 196.191 0.406 204.551 c 24.359 203.016
 l 23.879 195.68 23.879 188.32 24.359 180.984 c h
384 192 m 384 187.812 383.863 183.625 383.594 179.449 c 359.641 180.984
 l 360.121 188.32 360.121 195.68 359.641 203.016 c 383.594 204.551 l 383.863
 200.375 384 196.188 384 192 c 3.648 229.441 m 5.312 237.762 7.473 245.855
 10.129 253.73 c 32.883 246.027 l 32.879 246.023 l 30.523 239.082 28.625
 231.996 27.191 224.809 c 3.672 229.465 l h
373.848 253.73 m 376.535 245.844 378.695 237.754 380.328 229.465 c 356.809
 224.809 l 355.367 232.055 353.473 239.129 351.121 246.023 c h
19.777 276.961 m 23.488 284.465 27.691 291.723 32.352 298.68 c 52.273 285.336
 l 48.195 279.238 44.523 272.883 41.281 266.305 c h
351.648 298.68 m 356.32 291.734 360.512 284.488 364.223 276.938 c 342.719
 266.305 l 339.438 272.914 335.766 279.258 331.703 285.336 c h
47.641 318.602 m 53.176 324.906 59.098 330.824 65.402 336.363 c 81.242 
318.316 l 81.238 318.312 l 75.723 313.473 70.527 308.277 65.688 302.762 
c h
318.602 336.363 m 324.906 330.828 330.824 324.906 336.363 318.602 c 318.316
 302.762 l 313.484 308.297 308.301 313.48 302.766 318.312 c h
276.961 364.227 m 284.496 360.5 291.738 356.305 298.68 351.652 c 285.336
 331.73 l 285.336 331.727 l 279.238 335.805 272.883 339.477 266.305 342.719
 c h
85.32 351.652 m 92.266 356.324 99.512 360.516 107.062 364.227 c 117.695
 342.723 l 117.695 342.719 l 111.117 339.469 104.762 335.789 98.664 331.703
 c h
130.273 373.852 m 138.16 376.539 146.25 378.699 154.539 380.332 c 159.195
 356.812 l 159.191 356.809 l 152.004 355.375 144.918 353.477 137.977 351.121
 c h
229.441 380.355 m 229.441 380.352 l 237.668 378.727 245.781 376.559 253.727
 373.871 c 246.023 351.117 l 246.023 351.121 l 239.082 353.477 231.996 355.375
 224.809 356.809 c 229.465 380.328 l h
179.449 383.594 m 187.809 384.141 196.191 384.141 204.551 383.594 c 203.016
 359.641 l 195.68 360.121 188.32 360.121 180.984 359.641 c h
204 108 m 204 101.371 198.629 96 192 96 c 185.371 96 180 101.371 180 108
 c 180 180 l 108 180 l 101.371 180 96 185.371 96 192 c 96 198.629 101.371
 204 108 204 c 180 204 l 180 276 l 180 282.629 185.371 288 192 288 c 198.629
 288 204 282.629 204 276 c 204 204 l 276 204 l 282.629 204 288 198.629 288
 192 c 288 185.371 282.629 180 276 180 c 204 180 l h
204 108 m f
Q Q
showpage
%%Trailer
%%EOF
