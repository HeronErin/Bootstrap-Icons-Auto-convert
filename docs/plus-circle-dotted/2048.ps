%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 751.105 0 734.367 0.543 717.793 1.633 c 723.938 97.441 l 753.281
 95.512 782.719 95.512 812.062 97.441 c 818.207 1.633 l 801.496 0.539 784.75
 -0.004 768 0 c 618.238 14.594 m 584.957 21.25 552.574 29.891 521.086 40.516
 c 551.902 131.523 l 579.422 122.117 607.711 114.531 636.766 108.77 c 618.238
 14.688 l h
1014.91 40.609 m 983.16 29.859 950.738 21.199 917.855 14.688 c 899.23 108.766
 l 928.223 114.527 956.512 122.109 984.094 131.52 c h
1194.719 129.41 m 1194.719 129.406 l 1166.855 110.758 1137.805 93.957 1107.742
 79.105 c 1065.215 165.121 l 1091.648 178.242 1117.023 192.93 1141.344 209.184
 c h
428.16 79.105 m 398.016 94.016 369.055 110.785 341.281 129.41 c 394.656
 209.09 l 419.047 192.785 444.477 178.098 470.785 165.121 c h
261.602 190.559 m 236.387 212.703 212.707 236.383 190.562 261.598 c 262.754
 324.957 l 282.145 302.879 302.883 282.141 324.961 262.75 c h
1345.441 261.598 m 1345.441 261.602 l 1323.336 236.395 1299.605 212.664
 1274.398 190.559 c 1211.039 262.75 l 1233.184 282.141 1253.918 302.879 
1273.246 324.957 c h
1456.898 428.156 m 1456.895 428.16 l 1442.039 398.133 1425.238 369.113 
1406.594 341.281 c 1326.914 394.656 l 1343.172 418.977 1357.824 444.352 
1370.883 470.785 c 1456.898 428.258 l h
129.406 341.281 m 110.719 368.992 93.949 397.984 79.102 428.258 c 165.117
 470.785 l 178.238 444.352 192.926 418.977 209.18 394.656 c h
40.609 521.09 m 29.859 552.84 21.199 585.262 14.688 618.145 c 108.766 636.77
 l 114.527 607.777 122.109 579.488 131.52 551.906 c h
1521.406 618.238 m 1514.898 585.324 1506.242 552.871 1495.488 521.09 c 
1404.48 551.906 l 1413.887 579.426 1421.473 607.715 1427.234 636.77 c h
1.633 717.793 m -0.559 751.227 -0.559 784.773 1.633 818.207 c 97.441 812.062
 l 95.512 782.719 95.512 753.281 97.441 723.938 c h
1536 768 m 1536.004 751.25 1535.461 734.504 1534.367 717.793 c 1438.559
 723.938 l 1440.488 753.281 1440.488 782.719 1438.559 812.062 c 1534.367
 818.207 l 1535.461 801.496 1536.004 784.75 1536 768 c 14.594 917.762 m 
21.25 951.043 29.891 983.426 40.516 1014.914 c 131.523 984.098 l 131.52 
984.098 l 122.094 956.336 114.492 927.984 108.77 899.23 c 14.691 917.855
 l h
1495.395 1014.914 m 1506.148 983.363 1514.785 951.012 1521.316 917.859 
c 1427.238 899.234 l 1421.477 928.227 1413.895 956.516 1404.484 984.098 
c h
79.105 1107.84 m 93.961 1137.867 110.762 1166.887 129.406 1194.719 c 209.086
 1141.344 l 209.09 1141.344 l 192.785 1116.953 178.098 1091.523 165.121 
1065.215 c h
1406.594 1194.719 m 1425.281 1166.941 1442.051 1137.949 1456.898 1107.742
 c 1370.883 1065.215 l 1357.762 1091.648 1343.074 1117.023 1326.82 1141.344
 c h
190.562 1274.398 m 212.707 1299.613 236.387 1323.293 261.602 1345.438 c
 324.961 1273.246 l 302.887 1253.895 282.105 1233.113 262.754 1211.039 c
 h
1274.402 1345.438 m 1299.617 1323.293 1323.297 1299.613 1345.441 1274.398
 c 1273.25 1211.039 l 1253.922 1233.184 1233.188 1253.918 1211.043 1273.246
 c h
1107.844 1456.895 m 1137.988 1441.984 1166.949 1425.215 1194.723 1406.59
 c 1141.348 1326.91 l 1141.344 1326.91 l 1116.953 1343.215 1091.523 1357.902
 1065.215 1370.879 c h
341.285 1406.59 m 369.062 1425.277 398.055 1442.047 428.262 1456.895 c 
470.789 1370.879 l 470.785 1370.879 l 444.473 1357.871 419.043 1343.152 
394.656 1326.816 c h
521.094 1495.391 m 552.645 1506.145 584.996 1514.781 618.148 1521.312 c
 636.773 1427.234 l 636.77 1427.23 l 608.016 1421.508 579.664 1413.906 551.902
 1404.48 c h
917.766 1521.406 m 917.762 1521.406 l 950.676 1514.898 983.129 1506.242
 1014.91 1495.488 c 984.094 1404.48 l 984.098 1404.48 l 956.336 1413.906
 927.984 1421.508 899.23 1427.23 c 917.855 1521.309 l h
717.797 1534.367 m 717.793 1534.367 l 751.227 1536.559 784.773 1536.559
 818.207 1534.367 c 812.062 1438.559 l 782.719 1440.488 753.281 1440.488
 723.938 1438.559 c h
816 432 m 816 414.852 806.852 399.004 792 390.43 c 777.148 381.855 758.852
 381.855 744 390.43 c 729.148 399.004 720 414.852 720 432 c 720 720 l 432
 720 l 414.852 720 399.004 729.148 390.43 744 c 381.855 758.852 381.855 
777.148 390.43 792 c 399.004 806.852 414.852 816 432 816 c 720 816 l 720
 1104 l 720 1121.148 729.148 1136.996 744 1145.57 c 758.852 1154.145 777.148
 1154.145 792 1145.57 c 806.852 1136.996 816 1121.148 816 1104 c 816 816
 l 1104 816 l 1121.148 816 1136.996 806.852 1145.57 792 c 1154.145 777.148
 1154.145 758.852 1145.57 744 c 1136.996 729.148 1121.148 720 1104 720 c
 816 720 l h
816 432 m f
Q Q
showpage
%%Trailer
%%EOF
