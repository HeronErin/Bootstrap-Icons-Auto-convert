%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 36 384 277
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 36 384 277
384 384 cairo_set_page_size
%%EndPageSetup
q 0 36 384 241 rectclip
1 0 0 -1 0 384 cm q
0 g
321.719 204.648 m 315.031 170.926 294.203 141.691 264.512 124.355 c 234.824
 107.02 199.129 103.246 166.473 113.992 c 133.816 124.738 107.336 148.973
 93.742 180.551 c 70.793 177.906 47.766 184.832 30.082 199.699 c 12.398 
214.562 1.613 236.059 0.273 259.121 c -1.07 282.184 7.148 304.781 22.988
 321.598 c 38.828 338.414 60.898 347.965 84 348 c 312 348 l 336.586 348.027
 359.484 335.512 372.734 314.801 c 385.98 294.09 387.746 268.051 377.414
 245.742 c 367.086 223.434 346.082 207.938 321.719 204.648 c 204 132 m 227.613
 131.996 250.402 140.695 268.008 156.434 c 285.613 172.176 296.797 193.852
 299.426 217.32 c 300.102 223.426 305.281 228.039 311.426 228 c 312 228 
l 329.148 228.004 344.992 237.156 353.562 252.012 c 362.133 266.863 362.129
 285.16 353.551 300.012 c 344.973 314.859 329.125 324.004 311.977 324 c 
84 324 l 66.816 323.992 50.465 316.617 39.082 303.746 c 27.699 290.875 22.383
 273.738 24.477 256.688 c 26.57 239.633 35.879 224.293 50.035 214.559 c 
64.195 204.824 81.848 201.625 98.52 205.777 c 104.621 207.297 110.859 203.852
 112.824 197.879 c 119.16 178.703 131.383 162.016 147.754 150.188 c 164.121
 138.359 183.805 131.996 204 132 c f
Q Q
showpage
%%Trailer
%%EOF
