%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 144 1536 1105
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 144 1536 1105
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 144 1536 961 rectclip
1 0 0 -1 0 1536 cm q
0 g
1286.879 818.594 m 1266.945 718.094 1215.383 626.613 1139.73 557.52 c 1064.082
 488.422 968.312 445.344 866.422 434.574 c 764.535 423.805 661.875 445.914
 573.453 497.664 c 485.027 549.418 415.48 628.102 374.977 722.207 c 314.246
 715.211 252.762 724.918 197.141 750.273 c 141.516 775.633 93.867 815.688
 59.32 866.121 c 24.773 916.551 4.641 975.453 1.09 1036.48 c -2.461 1097.508
 10.703 1158.348 39.168 1212.445 c 67.629 1266.547 110.312 1311.855 162.617
 1343.496 c 214.926 1375.133 274.871 1391.906 336 1392 c 1248 1392 l 1321.066
 1392.082 1391.434 1364.391 1444.848 1314.535 c 1498.262 1264.68 1530.727
 1196.383 1535.668 1123.484 c 1540.613 1050.586 1517.664 978.531 1471.469
 921.922 c 1425.273 865.309 1359.289 828.371 1286.879 818.594 c 816 528 
m 910.461 527.98 1001.613 562.777 1072.031 625.738 c 1142.445 688.699 1187.188
 775.406 1197.695 869.281 c 1199 881.074 1204.629 891.969 1213.492 899.855
 c 1222.355 907.746 1233.828 912.07 1245.695 912 c 1248 912 l 1298.922 912.012
 1347.754 932.254 1383.75 968.27 c 1419.75 1004.285 1439.965 1053.125 1439.953
 1104.047 c 1439.938 1154.969 1419.699 1203.801 1383.684 1239.797 c 1347.668
 1275.797 1298.824 1296.012 1247.902 1296 c 336 1296 l 290.566 1295.977 
246.07 1283.059 207.688 1258.746 c 169.305 1234.43 138.613 1199.723 119.18
 1158.652 c 99.746 1117.582 92.371 1071.84 97.91 1026.742 c 103.449 981.648
 121.672 939.051 150.469 903.902 c 179.262 868.758 217.441 842.508 260.566
 828.203 c 303.691 813.898 349.988 812.133 394.078 823.105 c 405.844 826.039
 418.281 824.414 428.895 818.555 c 439.508 812.695 447.512 803.035 451.297
 791.52 c 476.641 714.816 525.531 648.059 591.008 600.75 c 656.488 553.438
 735.219 527.98 816 528 c f
Q Q
showpage
%%Trailer
%%EOF
