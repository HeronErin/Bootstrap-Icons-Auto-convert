%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 72 768 553
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 72 768 553
768 768 cairo_set_page_size
%%EndPageSetup
q 0 72 768 481 rectclip
1 0 0 -1 0 768 cm q
0 g
643.441 409.297 m 633.473 359.047 607.691 313.305 569.867 278.758 c 532.039
 244.211 484.156 222.672 433.211 217.285 c 382.27 211.902 330.938 222.957
 286.727 248.832 c 242.516 274.707 207.742 314.051 187.488 361.105 c 157.125
 357.605 126.379 362.457 98.57 375.137 c 70.758 387.816 46.934 407.844 29.66
 433.059 c 12.387 458.277 2.32 487.727 0.547 518.242 c -1.23 548.754 5.352
 579.172 19.582 606.223 c 33.816 633.273 55.156 655.93 81.309 671.746 c 
107.461 687.566 137.434 695.953 168 696 c 624 696 l 673.172 696.055 718.969
 671.02 745.469 629.602 c 771.965 588.18 775.496 536.102 754.832 491.484
 c 734.168 446.867 692.168 415.879 643.441 409.297 c 408 264 m 455.23 263.988
 500.805 281.391 536.016 312.871 c 571.223 344.352 593.594 387.703 598.848
 434.641 c 599.5 440.539 602.312 445.984 606.746 449.93 c 611.18 453.871
 616.914 456.035 622.848 456 c 624 456 l 658.297 456.008 689.984 474.312
 707.125 504.02 c 724.27 533.727 724.258 570.324 707.102 600.02 c 689.945
 629.719 658.25 648.008 623.953 648 c 168 648 l 133.637 647.984 100.926 
633.234 78.164 607.492 c 55.398 581.746 44.766 547.48 48.953 513.371 c 53.145
 479.266 71.754 448.59 100.07 429.117 c 128.387 409.648 163.691 403.254 
197.039 411.551 c 202.922 413.02 209.141 412.207 214.445 409.277 c 219.754
 406.348 223.754 401.52 225.648 395.762 c 238.32 357.41 262.766 324.031 
295.504 300.375 c 328.242 276.719 367.609 263.988 408 264 c f
Q Q
showpage
%%Trailer
%%EOF
