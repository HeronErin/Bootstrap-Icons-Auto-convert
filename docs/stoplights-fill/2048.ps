%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 96 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 96 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 96 1152 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 0 m 525.078 0 476.242 20.227 440.234 56.234 c 404.227 92.242 384 141.078
 384 192 c 192 192 l 208.031 240 268.801 345.602 384 384 c 384 576 l 192
 576 l 208.031 624 268.801 729.602 384 768 c 384 960 l 192 960 l 208.031
 1008 268.801 1113.602 384 1152 c 384 1248 l 384 1281.703 392.871 1314.812
 409.723 1344 c 426.574 1373.188 450.812 1397.426 480 1414.277 c 509.188
 1431.129 542.297 1440 576 1440 c 960 1440 l 993.703 1440 1026.812 1431.129
 1056 1414.277 c 1085.188 1397.426 1109.426 1373.188 1126.277 1344 c 1143.129
 1314.812 1152 1281.703 1152 1248 c 1152 1152 l 1267.199 1113.602 1327.969
 1008 1344 960 c 1152 960 l 1152 768 l 1267.199 729.602 1327.969 624 1344
 576 c 1152 576 l 1152 384 l 1267.199 345.602 1327.969 240 1344 192 c 1152
 192 l 1152 158.297 1143.129 125.188 1126.277 96 c 1109.426 66.812 1085.188
 42.574 1056 25.723 c 1026.812 8.871 993.703 0 960 0 c h
912 336 m 912 387.445 884.555 434.984 840 460.707 c 795.445 486.43 740.555
 486.43 696 460.707 c 651.445 434.984 624 387.445 624 336 c 624 284.555 
651.445 237.016 696 211.293 c 740.555 185.57 795.445 185.57 840 211.293 
c 884.555 237.016 912 284.555 912 336 c 912 720 m 912 771.445 884.555 818.984
 840 844.707 c 795.445 870.43 740.555 870.43 696 844.707 c 651.445 818.984
 624 771.445 624 720 c 624 668.555 651.445 621.016 696 595.293 c 740.555
 569.57 795.445 569.57 840 595.293 c 884.555 621.016 912 668.555 912 720
 c 768 1248 m 716.555 1248 669.016 1220.555 643.293 1176 c 617.57 1131.445
 617.57 1076.555 643.293 1032 c 669.016 987.445 716.555 960 768 960 c 819.445
 960 866.984 987.445 892.707 1032 c 918.43 1076.555 918.43 1131.445 892.707
 1176 c 866.984 1220.555 819.445 1248 768 1248 c f*
Q Q
showpage
%%Trailer
%%EOF
