%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536 971.688 1455.086 1167.031 1311.059 1311.059 c 1167.031 
1455.086 971.688 1536 768 1536 c 564.312 1536 368.969 1455.086 224.941 1311.059
 c 80.914 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969 224.941 224.941
 c 368.969 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914 1311.059 224.941
 c 1455.086 368.969 1536 564.312 1536 768 c 768 1440 m 750.852 1440 735.004
 1430.852 726.43 1416 c 717.855 1401.148 717.855 1382.852 726.43 1368 c 
735.004 1353.148 750.852 1344 768 1344 c 1104 1344 l 1107.07 1344 1110.047
 1344.289 1112.93 1344.863 c 1158.426 1317.641 1200.543 1285.125 1238.398
 1248 c 768 1248 l 750.852 1248 735.004 1238.852 726.43 1224 c 717.855 1209.148
 717.855 1190.852 726.43 1176 c 735.004 1161.148 750.852 1152 768 1152 c
 1319.52 1152 l 1340.703 1121.664 1359.297 1089.664 1375.297 1056 c 768 
1056 l 750.852 1056 735.004 1046.852 726.43 1032 c 717.855 1017.148 717.855
 998.852 726.43 984 c 735.004 969.148 750.852 960 768 960 c 1412.16 960 
l 1421.535 928.559 1428.594 896.473 1433.281 864 c 768 864 l 750.852 864
 735.004 854.852 726.43 840 c 717.855 825.148 717.855 806.852 726.43 792
 c 735.004 777.148 750.852 768 768 768 c 1440 768 l 1440 735.359 1437.762
 703.359 1433.281 672 c 768 672 l 750.852 672 735.004 662.852 726.43 648
 c 717.855 633.148 717.855 614.852 726.43 600 c 735.004 585.148 750.852 
576 768 576 c 1412.16 576 l 1402.344 543.105 1390.02 511.012 1375.297 480
 c 768 480 l 750.852 480 735.004 470.852 726.43 456 c 717.855 441.148 717.855
 422.852 726.43 408 c 735.004 393.148 750.852 384 768 384 c 1319.52 384 
l 1295.508 349.531 1268.316 317.391 1238.305 288 c 768 288 l 750.852 288
 735.004 278.852 726.43 264 c 717.855 249.148 717.855 230.852 726.43 216
 c 735.004 201.148 750.852 192 768 192 c 1114.367 192 l 995.598 120.629 
857.672 87.719 719.473 97.77 c 581.277 107.824 449.566 160.355 342.379 248.164
 c 235.191 335.973 157.766 454.77 120.711 588.289 c 83.656 721.805 88.777
 863.512 135.379 994.004 c 181.98 1124.496 267.777 1237.391 381.027 1317.23
 c 494.277 1397.07 629.438 1439.953 768 1440 c f
Q Q
showpage
%%Trailer
%%EOF
