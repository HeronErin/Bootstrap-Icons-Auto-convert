%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
768 384 m 768 485.844 727.543 583.516 655.527 655.527 c 583.516 727.543
 485.844 768 384 768 c 282.156 768 184.484 727.543 112.473 655.527 c 40.457
 583.516 0 485.844 0 384 c 0 282.156 40.457 184.484 112.473 112.473 c 184.484
 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527 112.473 c 727.543
 184.484 768 282.156 768 384 c 384 720 m 375.426 720 367.504 715.426 363.215
 708 c 358.93 700.574 358.93 691.426 363.215 684 c 367.504 676.574 375.426
 672 384 672 c 552 672 l 553.535 672 555.023 672.145 556.465 672.434 c 579.215
 658.82 600.273 642.562 619.199 624 c 384 624 l 375.426 624 367.504 619.426
 363.215 612 c 358.93 604.574 358.93 595.426 363.215 588 c 367.504 580.574
 375.426 576 384 576 c 659.762 576 l 670.355 560.832 679.648 544.832 687.648
 528 c 384 528 l 375.426 528 367.504 523.426 363.215 516 c 358.93 508.574
 358.93 499.426 363.215 492 c 367.504 484.574 375.426 480 384 480 c 706.078
 480 l 710.766 464.277 714.297 448.238 716.641 432 c 384 432 l 375.426 432
 367.504 427.426 363.215 420 c 358.93 412.574 358.93 403.426 363.215 396
 c 367.504 388.574 375.426 384 384 384 c 720 384 l 720 367.68 718.879 351.68
 716.641 336 c 384 336 l 375.426 336 367.504 331.426 363.215 324 c 358.93
 316.574 358.93 307.426 363.215 300 c 367.504 292.574 375.426 288 384 288
 c 706.078 288 l 701.172 271.551 695.008 255.504 687.648 240 c 384 240 l
 375.426 240 367.504 235.426 363.215 228 c 358.93 220.574 358.93 211.426
 363.215 204 c 367.504 196.574 375.426 192 384 192 c 659.762 192 l 647.754
 174.766 634.16 158.695 619.152 144 c 384 144 l 375.426 144 367.504 139.426
 363.215 132 c 358.93 124.574 358.93 115.426 363.215 108 c 367.504 100.574
 375.426 96 384 96 c 557.184 96 l 497.801 60.316 428.836 43.859 359.738 
48.887 c 290.637 53.914 224.781 80.176 171.188 124.082 c 117.594 167.988
 78.883 227.387 60.355 294.145 c 41.828 360.902 44.391 431.754 67.691 497
 c 90.988 562.246 133.891 618.695 190.516 658.617 c 247.137 698.535 314.719
 719.977 384 720 c f
Q Q
showpage
%%Trailer
%%EOF
