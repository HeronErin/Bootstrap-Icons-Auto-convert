%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
384 192 m 384 242.922 363.773 291.758 327.766 327.766 c 291.758 363.773
 242.922 384 192 384 c 141.078 384 92.242 363.773 56.234 327.766 c 20.227
 291.758 0 242.922 0 192 c 0 141.078 20.227 92.242 56.234 56.234 c 92.242
 20.227 141.078 0 192 0 c 242.922 0 291.758 20.227 327.766 56.234 c 363.773
 92.242 384 141.078 384 192 c 192 360 m 185.371 360 180 354.629 180 348 
c 180 341.371 185.371 336 192 336 c 276 336 l 276.77 336 277.512 336.07 
278.23 336.215 c 289.605 329.41 300.137 321.281 309.602 312 c 192 312 l 
185.371 312 180 306.629 180 300 c 180 293.371 185.371 288 192 288 c 329.879
 288 l 335.176 280.414 339.824 272.414 343.824 264 c 192 264 l 185.371 264
 180 258.629 180 252 c 180 245.371 185.371 240 192 240 c 353.039 240 l 355.383
 232.141 357.148 224.117 358.32 216 c 192 216 l 185.371 216 180 210.629 
180 204 c 180 197.371 185.371 192 192 192 c 360 192 l 360 183.84 359.441
 175.84 358.32 168 c 192 168 l 185.371 168 180 162.629 180 156 c 180 149.371
 185.371 144 192 144 c 353.039 144 l 350.586 135.777 347.504 127.754 343.824
 120 c 192 120 l 185.371 120 180 114.629 180 108 c 180 101.371 185.371 96
 192 96 c 329.879 96 l 323.879 87.383 317.078 79.348 309.574 72 c 192 72
 l 185.371 72 180 66.629 180 60 c 180 53.371 185.371 48 192 48 c 278.594
 48 l 248.898 30.156 214.418 21.93 179.867 24.441 c 145.32 26.957 112.391
 40.09 85.594 62.039 c 58.797 83.992 39.441 113.691 30.18 147.07 c 20.914
 180.449 22.195 215.879 33.844 248.5 c 45.496 281.125 66.945 309.348 95.258
 329.309 c 123.57 349.27 157.359 359.988 192 360 c f
Q Q
showpage
%%Trailer
%%EOF
