%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
96 0 m 70.539 0 46.121 10.113 28.117 28.117 c 10.113 46.121 0 70.539 0 
96 c 0 672 l 0 697.461 10.113 721.879 28.117 739.883 c 46.121 757.887 70.539
 768 96 768 c 672 768 l 697.461 768 721.879 757.887 739.883 739.883 c 757.887
 721.879 768 697.461 768 672 c 768 96 l 768 70.539 757.887 46.121 739.883
 28.117 c 721.879 10.113 697.461 0 672 0 c h
120 240 m 648 240 l 656.574 240 664.496 244.574 668.785 252 c 673.07 259.426
 673.07 268.574 668.785 276 c 664.496 283.426 656.574 288 648 288 c 120 
288 l 111.426 288 103.504 283.426 99.215 276 c 94.93 268.574 94.93 259.426
 99.215 252 c 103.504 244.574 111.426 240 120 240 c 192 408 m 192 401.637
 194.527 395.531 199.031 391.031 c 203.531 386.527 209.637 384 216 384 c
 552 384 l 560.574 384 568.496 388.574 572.785 396 c 577.07 403.426 577.07
 412.574 572.785 420 c 568.496 427.426 560.574 432 552 432 c 216 432 l 209.637
 432 203.531 429.473 199.031 424.969 c 194.527 420.469 192 414.363 192 408
 c 288 552 m 288 545.637 290.527 539.531 295.031 535.031 c 299.531 530.527
 305.637 528 312 528 c 456 528 l 464.574 528 472.496 532.574 476.785 540
 c 481.07 547.426 481.07 556.574 476.785 564 c 472.496 571.426 464.574 576
 456 576 c 312 576 l 305.637 576 299.531 573.473 295.031 568.969 c 290.527
 564.469 288 558.363 288 552 c f
Q Q
showpage
%%Trailer
%%EOF
