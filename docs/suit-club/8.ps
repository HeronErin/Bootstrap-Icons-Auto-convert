%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0.375 m 2.328 0.375 1.781 0.922 1.781 1.594 c 1.781 1.664 1.781 1.703
 1.789 1.746 c 1.793 1.793 1.805 1.848 1.836 1.945 c 1.906 2.195 l 1.648
 2.184 l 1.645 2.184 l 1.223 2.168 0.824 2.367 0.586 2.715 c 0.348 3.062
 0.309 3.508 0.48 3.895 c 0.648 4.281 1.008 4.551 1.422 4.609 c 1.84 4.668
 2.258 4.508 2.527 4.184 c 2.668 4.016 2.93 4.18 2.844 4.379 c 2.84 4.383
 l 2.832 4.402 l 2.832 4.406 l 2.781 4.523 2.727 4.637 2.668 4.75 c 2.527
 5.035 2.367 5.309 2.191 5.574 c 2.188 5.582 2.184 5.594 2.191 5.609 c 2.195
 5.617 2.199 5.621 2.203 5.621 c 2.207 5.625 2.211 5.625 2.211 5.625 c 3.785
 5.625 l 3.789 5.625 3.793 5.625 3.793 5.621 c 3.797 5.621 l 3.801 5.621
 3.805 5.613 3.805 5.609 c 3.812 5.594 3.809 5.582 3.805 5.574 c 3.809 5.574
 l 3.562 5.203 3.352 4.812 3.168 4.406 c 3.16 4.387 l 3.156 4.383 l 3.156
 4.379 l 3.07 4.184 3.332 4.02 3.469 4.184 c 3.695 4.445 4.039 4.621 4.406
 4.621 c 4.73 4.617 5.043 4.484 5.27 4.25 c 5.496 4.016 5.621 3.703 5.613
 3.375 c 5.605 3.051 5.469 2.742 5.234 2.516 c 4.996 2.293 4.68 2.172 4.355
 2.184 c 4.094 2.195 l 4.168 1.945 l 4.219 1.77 4.219 1.664 4.219 1.598 
c 4.219 1.594 l 4.219 0.922 3.672 0.375 3 0.375 c 3.828 4.883 m 3.914 5.035
 4.012 5.199 4.121 5.367 c 4.289 5.625 4.117 6 3.789 6 c 2.211 6 l 1.883
 6 1.711 5.625 1.879 5.367 c 1.988 5.203 2.086 5.039 2.168 4.887 c 2.172
 4.887 l 1.742 5.055 1.266 5.027 0.859 4.816 c 0.453 4.602 0.156 4.227 0.047
 3.781 c -0.062 3.336 0.027 2.863 0.289 2.488 c 0.551 2.113 0.961 1.867 
1.418 1.816 c 1.414 1.793 l 1.406 1.723 1.406 1.664 1.406 1.598 c 1.406 
1.594 l 1.406 0.715 2.121 0 3 0 c 3.879 0 4.594 0.715 4.594 1.594 c 4.594
 1.645 4.594 1.719 4.578 1.816 c 5.422 1.906 6.047 2.641 6 3.488 c 5.957
 4.336 5.254 4.996 4.406 4.996 c 4.207 4.996 4.012 4.957 3.828 4.883 c f
Q Q
showpage
%%Trailer
%%EOF
