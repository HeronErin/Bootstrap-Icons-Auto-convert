%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 6 m 42.828 6 37.867 8.055 34.211 11.711 c 30.555 15.367 28.5 20.328 
28.5 25.5 c 28.5 26.617 28.5 27.238 28.598 27.961 c 28.684 28.68 28.867 
29.582 29.316 31.121 c 30.457 35.109 l 26.305 34.941 l 26.305 34.945 l 19.574
 34.664 13.176 37.879 9.383 43.449 c 5.59 49.016 4.938 56.148 7.66 62.309
 c 10.383 68.473 16.094 72.793 22.766 73.734 c 29.434 74.68 36.121 72.113
 40.445 66.949 c 41.398 65.793 43.055 65.52 44.328 66.301 c 45.605 67.082
 46.109 68.684 45.512 70.055 c 45.492 70.086 l 45.457 70.176 l 45.312 70.504
 l 45.312 70.508 l 44.48 72.367 43.602 74.207 42.684 76.027 c 40.406 80.562
 37.871 84.965 35.09 89.207 c 35.012 89.316 34.969 89.508 35.098 89.746 
c 35.16 89.863 35.223 89.934 35.277 89.961 c 35.273 89.965 l 35.312 89.988
 35.355 90 35.398 90 c 60.598 90 l 60.652 90 60.699 89.988 60.73 89.965 
c 60.805 89.91 60.863 89.836 60.906 89.754 c 61.027 89.516 60.992 89.316
 60.914 89.207 c 60.91 89.207 l 57.027 83.246 53.609 76.996 50.688 70.508
 c 50.543 70.184 l 50.508 70.094 l 50.496 70.07 l 50.496 70.066 l 49.91 
68.707 50.406 67.125 51.66 66.34 c 52.918 65.555 54.559 65.805 55.523 66.926
 c 59.129 71.125 64.621 73.934 70.5 73.934 c 75.715 73.887 80.691 71.754
 84.324 68.012 c 87.953 64.27 89.934 59.23 89.824 54.016 c 89.711 48.801
 87.516 43.852 83.73 40.27 c 79.941 36.684 74.879 34.766 69.664 34.945 c
 65.469 35.125 l 66.664 31.098 l 67.504 28.277 67.504 26.629 67.5 25.535
 c 67.5 25.5 l 67.5 20.328 65.445 15.367 61.789 11.711 c 58.133 8.055 53.172
 6 48 6 c 61.242 78.145 m 62.594 80.574 64.164 83.234 65.922 85.91 c 68.621
 90 65.852 96 60.602 96 c 35.398 96 l 30.141 96 27.371 90 30.078 85.902 
c 31.824 83.25 33.391 80.621 34.734 78.203 c 27.895 80.852 20.246 80.426
 13.742 77.035 c 7.238 73.645 2.508 67.617 0.762 60.496 c -0.984 53.371 
0.422 45.84 4.621 39.828 c 8.816 33.812 15.402 29.898 22.691 29.082 c 22.637
 28.699 l 22.5 27.578 22.5 26.609 22.5 25.578 c 22.5 25.5 l 22.5 16.391 
27.359 7.973 35.25 3.418 c 43.141 -1.141 52.859 -1.141 60.75 3.418 c 68.641
 7.973 73.5 16.391 73.5 25.5 c 73.5 26.34 73.5 27.496 73.262 29.074 c 82.004
 30.008 89.652 35.383 93.492 43.293 c 97.336 51.207 96.828 60.539 92.152
 67.988 c 87.477 75.438 79.293 79.949 70.5 79.934 c 67.328 79.922 64.188
 79.316 61.242 78.145 c f
Q Q
showpage
%%Trailer
%%EOF
