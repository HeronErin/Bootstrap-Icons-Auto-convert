%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 12 m 85.656 12 75.738 16.109 68.422 23.422 c 61.109 30.738 57 40.656
 57 51 c 57 53.23 57 54.48 57.191 55.922 c 57.359 57.363 57.73 59.16 58.633
 62.246 c 60.914 70.227 l 52.609 69.891 l 52.609 69.887 l 39.145 69.332 
26.348 75.762 18.762 86.895 c 11.176 98.031 9.875 112.293 15.32 124.617 
c 20.766 136.941 32.188 145.582 45.527 147.469 c 58.871 149.359 72.242 144.227
 80.891 133.895 c 82.797 131.59 86.109 131.035 88.656 132.602 c 91.207 134.168
 92.215 137.371 91.02 140.113 c 90.984 140.172 l 90.914 140.352 l 90.625
 141.012 l 88.957 144.73 87.203 148.414 85.367 152.051 c 80.816 161.125 
75.742 169.926 70.176 178.414 c 70.02 178.629 69.938 179.016 70.188 179.492
 c 70.316 179.723 70.434 179.867 70.547 179.926 c 70.547 179.93 l 70.625
 179.977 70.711 180 70.801 180 c 121.199 180 l 121.312 180 121.398 179.977
 121.465 179.93 c 121.609 179.816 121.73 179.672 121.812 179.508 c 122.051
 179.027 121.98 178.633 121.824 178.414 c 114.055 166.492 107.219 153.988
 101.375 141.012 c 101.086 140.363 l 101.016 140.184 l 100.992 140.137 l
 99.824 137.414 100.812 134.25 103.324 132.68 c 105.832 131.109 109.113 
131.605 111.047 133.848 c 118.258 142.246 129.238 147.863 141 147.863 c 
151.43 147.773 161.387 143.508 168.648 136.023 c 175.91 128.539 179.871 
118.457 179.648 108.031 c 179.426 97.605 175.035 87.703 167.461 80.535 c
 159.883 73.367 149.754 69.535 139.332 69.887 c 130.945 70.246 l 133.332
 62.195 l 135.012 56.555 135.012 53.254 135 51.07 c 135 51 l 135 40.656 
130.891 30.738 123.578 23.422 c 116.262 16.109 106.344 12 96 12 c 122.484
 156.289 m 125.184 161.148 128.328 166.465 131.844 171.816 c 137.242 180
 131.699 192 121.199 192 c 70.801 192 l 60.289 192 54.746 180 60.156 171.805
 c 63.648 166.5 66.781 161.246 69.469 156.41 c 69.469 156.406 l 55.789 161.703
 40.488 160.852 27.48 154.074 c 14.473 147.293 5.016 135.238 1.523 120.992
 c -1.969 106.742 0.84 91.68 9.238 79.652 c 17.637 67.625 30.805 59.797 
45.383 58.164 c 45.273 57.395 l 44.996 55.152 44.996 53.219 44.996 51.156
 c 45 51 l 45 32.781 54.719 15.941 70.5 6.832 c 86.281 -2.277 105.719 -2.277
 121.5 6.832 c 137.281 15.941 147 32.781 147 51 c 147 52.68 147 54.996 146.52
 58.152 c 164.012 60.02 179.305 70.766 186.988 86.59 c 194.668 102.41 193.656
 121.074 184.305 135.973 c 174.957 150.871 158.59 159.902 141 159.863 c 
134.656 159.848 128.375 158.633 122.484 156.289 c f
Q Q
showpage
%%Trailer
%%EOF
