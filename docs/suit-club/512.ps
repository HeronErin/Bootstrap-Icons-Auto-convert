%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 24 m 171.312 24 151.473 32.219 136.844 46.844 c 122.219 61.473 114 
81.312 114 102 c 114 106.465 114 108.961 114.383 111.84 c 114.719 114.719
 115.461 118.32 117.262 124.488 c 121.82 140.449 l 105.211 139.777 l 105.215
 139.777 l 78.293 138.66 52.699 151.523 37.527 173.793 c 22.352 196.062 
19.75 224.586 30.641 249.234 c 41.535 273.883 64.375 291.164 91.059 294.941
 c 117.742 298.715 144.48 288.449 161.785 267.793 c 165.594 263.18 172.219
 262.074 177.316 265.203 c 182.414 268.332 184.43 274.738 182.039 280.223
 c 181.969 280.344 l 181.824 280.703 l 181.25 282.023 l 181.246 282.023 
l 177.914 289.465 174.41 296.824 170.734 304.105 c 161.629 322.25 151.484
 339.855 140.352 356.832 c 140.039 357.266 139.871 358.031 140.375 358.992
 c 140.633 359.457 140.871 359.746 141.094 359.855 c 141.098 359.855 l 141.246
 359.949 141.422 360 141.602 360 c 242.402 360 l 242.625 360 242.801 359.953
 242.93 359.855 c 243.223 359.633 243.461 359.348 243.625 359.016 c 244.105
 358.055 243.961 357.262 243.648 356.832 c 228.109 332.988 214.434 307.977
 202.754 282.023 c 202.18 280.727 l 202.035 280.367 l 201.988 280.27 l 201.984
 280.273 l 199.645 274.832 201.625 268.5 206.645 265.359 c 211.668 262.219
 218.227 263.211 222.098 267.695 c 236.523 284.496 258.48 295.727 282 295.727
 c 302.855 295.543 322.77 287.016 337.293 272.047 c 351.816 257.078 359.742
 236.914 359.293 216.062 c 358.848 195.211 350.07 175.406 334.918 161.07
 c 319.77 146.738 299.508 139.066 278.664 139.777 c 261.887 140.496 l 266.664
 124.391 l 270.023 113.109 270.023 106.512 270 102.145 c 270 102 l 270 81.312
 261.781 61.473 247.156 46.844 c 232.527 32.219 212.688 24 192 24 c 244.969
 312.574 m 250.367 322.293 256.656 332.926 263.688 343.629 c 274.488 360
 263.398 384 242.398 384 c 141.602 384 l 120.578 384 109.488 360 120.312
 343.609 c 127.297 333 133.559 322.488 138.938 312.816 c 111.574 323.406
 80.98 321.707 54.965 308.145 c 28.945 294.582 10.031 270.477 3.043 241.98
 c -3.941 213.484 1.684 183.363 18.477 159.305 c 35.27 135.25 61.609 119.59
 90.77 116.328 c 90.555 114.793 l 90.004 110.305 90.004 106.441 90.004 102.312
 c 90 102 l 90 65.559 109.441 31.887 141 13.664 c 172.559 -4.555 211.441
 -4.555 243 13.664 c 274.559 31.887 294 65.559 294 102 c 294 105.359 294
 109.992 293.039 116.305 c 328.02 120.035 358.609 141.531 373.973 173.176
 c 389.34 204.82 387.312 242.152 368.613 271.949 c 349.914 301.746 317.18
 319.805 282 319.727 c 269.316 319.695 256.754 317.27 244.969 312.574 c f
Q Q
showpage
%%Trailer
%%EOF
