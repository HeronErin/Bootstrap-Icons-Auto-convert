%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 4 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 4 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 4 96 92 rectclip
1 0 0 -1 0 96 cm q
0 g
12 6 m 8.688 6 6 8.688 6 12 c 6 60 l 6 61.59 6.633 63.117 7.758 64.242 
c 8.883 65.367 10.41 66 12 66 c 69.516 66 l 72.699 66 75.75 67.266 78 69.516
 c 90 81.516 l 90 12 l 90 10.41 89.367 8.883 88.242 7.758 c 87.117 6.633
 85.59 6 84 6 c h
84 0 m 87.184 0 90.234 1.266 92.484 3.516 c 94.734 5.766 96 8.816 96 12
 c 96 88.758 l 96 89.973 95.27 91.066 94.145 91.531 c 93.023 91.992 91.734
 91.734 90.875 90.875 c 73.758 73.758 l 72.633 72.633 71.105 72 69.516 72
 c 12 72 l 5.371 72 0 66.629 0 60 c 0 12 l 0 5.371 5.371 0 12 0 c h
84 0 m f
42.395 28.559 m 39.996 24.82 35.414 23.117 31.152 24.379 c 26.895 25.641
 23.977 29.566 24 34.008 c 24.004 37.656 25.992 41.016 29.188 42.77 c 32.387
 44.523 36.285 44.402 39.367 42.445 c 38.582 44.781 37.117 47.27 34.707 
49.766 c 34.703 49.766 l 33.742 50.758 33.77 52.344 34.766 53.305 c 35.758
 54.266 37.344 54.238 38.305 53.242 c 47.219 44.004 46.062 33.957 42.398
 28.57 c h
66.395 28.559 m 63.996 24.82 59.414 23.117 55.152 24.379 c 50.895 25.641
 47.977 29.566 48 34.008 c 48.004 37.656 49.992 41.016 53.188 42.77 c 56.387
 44.523 60.285 44.402 63.367 42.445 c 62.582 44.781 61.117 47.27 58.707 
49.766 c 58.703 49.766 l 57.742 50.758 57.77 52.344 58.766 53.305 c 59.758
 54.266 61.344 54.238 62.305 53.242 c 71.219 44.004 70.062 33.957 66.398
 28.57 c h
66.395 28.559 m f
Q Q
showpage
%%Trailer
%%EOF
