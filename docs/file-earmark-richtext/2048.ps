%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 384 1536 l 333.078 1536 284.242 1515.773 248.234 1479.766
 c 212.227 1443.758 192 1394.922 192 1344 c 192 192 l 192 141.078 212.227
 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 l h
1056 432 m 1017.809 432 981.184 416.828 954.176 389.824 c 927.172 362.816
 912 326.191 912 288 c 912 96 l 384 96 l 358.539 96 334.121 106.113 316.117
 124.117 c 298.113 142.121 288 166.539 288 192 c 288 1344 l 288 1369.461
 298.113 1393.879 316.117 1411.883 c 334.121 1429.887 358.539 1440 384 1440
 c 1152 1440 l 1177.461 1440 1201.879 1429.887 1219.883 1411.883 c 1237.887
 1393.879 1248 1369.461 1248 1344 c 1248 432 l h
1056 432 m f
432 1200 m 432 1187.27 437.059 1175.062 446.059 1166.059 c 455.062 1157.059
 467.27 1152 480 1152 c 768 1152 l 785.148 1152 800.996 1161.148 809.57 
1176 c 818.145 1190.852 818.145 1209.148 809.57 1224 c 800.996 1238.852 
785.148 1248 768 1248 c 480 1248 l 467.27 1248 455.062 1242.941 446.059 
1233.941 c 437.059 1224.938 432 1212.73 432 1200 c 432 1008 m 432 995.27
 437.059 983.062 446.059 974.059 c 455.062 965.059 467.27 960 480 960 c 
1056 960 l 1073.148 960 1088.996 969.148 1097.57 984 c 1106.145 998.852 
1106.145 1017.148 1097.57 1032 c 1088.996 1046.852 1073.148 1056 1056 1056
 c 480 1056 l 467.27 1056 455.062 1050.941 446.059 1041.941 c 437.059 1032.938
 432 1020.73 432 1008 c 589.344 652.031 m 717.023 737.086 l 895.008 559.008
 l 898.57 555.434 903.168 553.074 908.148 552.266 c 913.133 551.457 918.242
 552.234 922.754 554.496 c 1104 648 l 1104 816 l 1104 828.73 1098.941 840.938
 1089.941 849.941 c 1080.938 858.941 1068.73 864 1056 864 c 480 864 l 467.27
 864 455.062 858.941 446.059 849.941 c 437.059 840.938 432 828.73 432 816
 c 432 768 l 432 768 579.84 645.695 589.344 652.031 c 600 576 m 625.723 
576 649.492 562.277 662.355 540 c 675.215 517.723 675.215 490.277 662.355
 468 c 649.492 445.723 625.723 432 600 432 c 574.277 432 550.508 445.723
 537.645 468 c 524.785 490.277 524.785 517.723 537.645 540 c 550.508 562.277
 574.277 576 600 576 c f
Q Q
showpage
%%Trailer
%%EOF
