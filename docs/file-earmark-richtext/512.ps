%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 96 384 l 83.27 384 71.062 378.941 62.059 369.941
 c 53.059 360.938 48 348.73 48 336 c 48 48 l 48 35.27 53.059 23.062 62.059
 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
264 108 m 254.453 108 245.297 104.207 238.543 97.457 c 231.793 90.703 228
 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031 31.031 
c 74.527 35.531 72 41.637 72 48 c 72 336 l 72 342.363 74.527 348.469 79.031
 352.969 c 83.531 357.473 89.637 360 96 360 c 288 360 l 294.363 360 300.469
 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 312 108
 l h
264 108 m f
108 300 m 108 293.371 113.371 288 120 288 c 192 288 l 198.629 288 204 293.371
 204 300 c 204 306.629 198.629 312 192 312 c 120 312 l 113.371 312 108 306.629
 108 300 c 108 252 m 108 245.371 113.371 240 120 240 c 264 240 l 270.629
 240 276 245.371 276 252 c 276 258.629 270.629 264 264 264 c 120 264 l 113.371
 264 108 258.629 108 252 c 147.336 163.008 m 179.258 184.273 l 223.754 139.754
 l 225.578 137.918 228.375 137.465 230.688 138.625 c 276 162 l 276 204 l
 276 207.184 274.734 210.234 272.484 212.484 c 270.234 214.734 267.184 216
 264 216 c 120 216 l 113.371 216 108 210.629 108 204 c 108 192 l 108 192
 144.961 161.426 147.336 163.008 c 150 144 m 156.43 144 162.375 140.57 165.59
 135 c 168.805 129.43 168.805 122.57 165.59 117 c 162.375 111.43 156.43 
108 150 108 c 143.57 108 137.625 111.43 134.41 117 c 131.195 122.57 131.195
 129.43 134.41 135 c 137.625 140.57 143.57 144 150 144 c f
Q Q
showpage
%%Trailer
%%EOF
