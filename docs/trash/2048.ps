%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 96 1392 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 96 1392 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 96 1248 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
528 528 m 540.73 528 552.938 533.059 561.941 542.059 c 570.941 551.062 
576 563.27 576 576 c 576 1152 l 576 1169.148 566.852 1184.996 552 1193.57
 c 537.148 1202.145 518.852 1202.145 504 1193.57 c 489.148 1184.996 480 
1169.148 480 1152 c 480 576 l 480 563.27 485.059 551.062 494.059 542.059
 c 503.062 533.059 515.27 528 528 528 c 768 528 m 780.73 528 792.938 533.059
 801.941 542.059 c 810.941 551.062 816 563.27 816 576 c 816 1152 l 816 1169.148
 806.852 1184.996 792 1193.57 c 777.148 1202.145 758.852 1202.145 744 1193.57
 c 729.148 1184.996 720 1169.148 720 1152 c 720 576 l 720 563.27 725.059
 551.062 734.059 542.059 c 743.062 533.059 755.27 528 768 528 c 1056 576
 m 1056 558.852 1046.852 543.004 1032 534.43 c 1017.148 525.855 998.852 
525.855 984 534.43 c 969.148 543.004 960 558.852 960 576 c 960 1152 l 960
 1169.148 969.148 1184.996 984 1193.57 c 998.852 1202.145 1017.148 1202.145
 1032 1193.57 c 1046.852 1184.996 1056 1169.148 1056 1152 c h
1056 576 m f
1392 288 m 1392 313.461 1381.887 337.879 1363.883 355.883 c 1345.879 373.887
 1321.461 384 1296 384 c 1248 384 l 1248 1248 l 1248 1281.703 1239.129 1314.812
 1222.277 1344 c 1205.426 1373.188 1181.188 1397.426 1152 1414.277 c 1122.812
 1431.129 1089.703 1440 1056 1440 c 480 1440 l 429.078 1440 380.242 1419.773
 344.234 1383.766 c 308.227 1347.758 288 1298.922 288 1248 c 288 384 l 240
 384 l 214.539 384 190.121 373.887 172.117 355.883 c 154.113 337.879 144
 313.461 144 288 c 144 192 l 144 166.539 154.113 142.121 172.117 124.117
 c 190.121 106.113 214.539 96 240 96 c 576 96 l 576 70.539 586.113 46.121
 604.117 28.117 c 622.121 10.113 646.539 0 672 0 c 864 0 l 889.461 0 913.879
 10.113 931.883 28.117 c 949.887 46.121 960 70.539 960 96 c 1296 96 l 1321.461
 96 1345.879 106.113 1363.883 124.117 c 1381.887 142.121 1392 166.539 1392
 192 c h
395.328 384 m 384 389.664 l 384 1248 l 384 1273.461 394.113 1297.879 412.117
 1315.883 c 430.121 1333.887 454.539 1344 480 1344 c 1056 1344 l 1081.461
 1344 1105.879 1333.887 1123.883 1315.883 c 1141.887 1297.879 1152 1273.461
 1152 1248 c 1152 389.664 l 1140.672 384 l h
240 288 m 1296 288 l 1296 192 l 240 192 l h
240 288 m f
Q Q
showpage
%%Trailer
%%EOF
