%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 48 696 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 48 696 768
768 768 cairo_set_page_size
%%EndPageSetup
q 72 48 624 720 rectclip
1 0 0 -1 0 768 cm q
0 g
264 264 m 270.363 264 276.469 266.527 280.969 271.031 c 285.473 275.531
 288 281.637 288 288 c 288 576 l 288 584.574 283.426 592.496 276 596.785
 c 268.574 601.07 259.426 601.07 252 596.785 c 244.574 592.496 240 584.574
 240 576 c 240 288 l 240 281.637 242.527 275.531 247.031 271.031 c 251.531
 266.527 257.637 264 264 264 c 384 264 m 390.363 264 396.469 266.527 400.969
 271.031 c 405.473 275.531 408 281.637 408 288 c 408 576 l 408 584.574 403.426
 592.496 396 596.785 c 388.574 601.07 379.426 601.07 372 596.785 c 364.574
 592.496 360 584.574 360 576 c 360 288 l 360 281.637 362.527 275.531 367.031
 271.031 c 371.531 266.527 377.637 264 384 264 c 528 288 m 528 279.426 523.426
 271.504 516 267.215 c 508.574 262.93 499.426 262.93 492 267.215 c 484.574
 271.504 480 279.426 480 288 c 480 576 l 480 584.574 484.574 592.496 492
 596.785 c 499.426 601.07 508.574 601.07 516 596.785 c 523.426 592.496 528
 584.574 528 576 c h
528 288 m f
696 144 m 696 156.73 690.941 168.938 681.941 177.941 c 672.938 186.941 
660.73 192 648 192 c 624 192 l 624 624 l 624 649.461 613.887 673.879 595.883
 691.883 c 577.879 709.887 553.461 720 528 720 c 240 720 l 214.539 720 190.121
 709.887 172.117 691.883 c 154.113 673.879 144 649.461 144 624 c 144 192
 l 120 192 l 107.27 192 95.062 186.941 86.059 177.941 c 77.059 168.938 72
 156.73 72 144 c 72 96 l 72 83.27 77.059 71.062 86.059 62.059 c 95.062 53.059
 107.27 48 120 48 c 288 48 l 288 35.27 293.059 23.062 302.059 14.059 c 311.062
 5.059 323.27 0 336 0 c 432 0 l 444.73 0 456.938 5.059 465.941 14.059 c 
474.941 23.062 480 35.27 480 48 c 648 48 l 660.73 48 672.938 53.059 681.941
 62.059 c 690.941 71.062 696 83.27 696 96 c h
197.664 192 m 192 194.832 l 192 624 l 192 636.73 197.059 648.938 206.059
 657.941 c 215.062 666.941 227.27 672 240 672 c 528 672 l 540.73 672 552.938
 666.941 561.941 657.941 c 570.941 648.938 576 636.73 576 624 c 576 194.832
 l 570.336 192 l h
120 144 m 648 144 l 648 96 l 120 96 l h
120 144 m f
Q Q
showpage
%%Trailer
%%EOF
