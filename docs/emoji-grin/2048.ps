%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1242.816 1094.207 m 1156.555 1219.668 1024.145 1305.883 874.516 1334.023
 c 724.887 1362.164 570.199 1329.934 444.258 1244.383 c 318.312 1158.832
 231.352 1026.91 202.367 877.441 c 191.422 820.32 243.262 774.914 301.055
 781.73 c 422.879 795.742 622.078 816 768 816 c 913.922 816 1113.121 795.84
 1234.945 781.633 c 1292.738 774.914 1344.578 820.227 1333.633 877.441 c
 1318.715 955.211 1287.785 1029.027 1242.816 1094.207 c 1235.328 878.207
 m 1112.449 892.32 915.742 912 768 912 c 620.258 912 423.457 892.32 300.672
 878.207 c 311.23 923.137 328.129 965.566 350.305 1004.641 c 488.879 1021.965
 628.352 1031.098 768 1032 c 907.648 1031.098 1047.121 1021.965 1185.695
 1004.641 c 1207.871 965.57 1224.766 923.039 1235.328 878.207 c 1104.77 
1110.145 m 1006.848 1119.746 888.289 1128 768 1128 c 647.711 1128 529.152
 1119.742 431.328 1110.145 c 521.117 1198.492 642.035 1248.004 768 1248 
c 893.965 1248.004 1014.883 1198.492 1104.672 1110.145 c h
622.848 672 m 633.793 643.777 640.031 610.945 640.031 576 c 640.031 469.922
 582.719 384 511.969 384 c 441.312 384 384 469.922 384 576 c 384 610.945
 390.238 643.777 401.09 672 c 423.168 614.594 464.641 576 511.969 576 c 
559.395 576 600.77 614.594 622.848 672 c 1152 576 m 1152 610.945 1145.762
 643.777 1134.91 672 c 1112.832 614.594 1071.359 576 1024.031 576 c 976.605
 576 935.23 614.594 913.152 672 c 901.617 641.316 895.793 608.781 895.969
 576 c 895.969 469.922 953.281 384 1024.031 384 c 1094.688 384 1152 469.922
 1152 576 c f
768 1536 m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 
1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 
224.941 c 1167.031 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941
 224.941 c 80.914 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941
 1311.059 c 368.969 1455.086 564.312 1536 768 1536 c 768 1440 m 589.773 
1440 418.848 1369.199 292.824 1243.176 c 166.801 1117.152 96 946.227 96 
768 c 96 589.773 166.801 418.848 292.824 292.824 c 418.848 166.801 589.773
 96 768 96 c 946.227 96 1117.152 166.801 1243.176 292.824 c 1369.199 418.848
 1440 589.773 1440 768 c 1440 946.227 1369.199 1117.152 1243.176 1243.176
 c 1117.152 1369.199 946.227 1440 768 1440 c f
Q Q
showpage
%%Trailer
%%EOF
