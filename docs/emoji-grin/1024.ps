%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
621.406 547.105 m 578.277 609.832 512.07 652.941 437.258 667.012 c 362.441
 681.082 285.102 664.969 222.129 622.191 c 159.156 579.414 115.676 513.453
 101.184 438.719 c 95.711 410.16 121.633 387.453 150.527 390.863 c 211.441
 397.871 311.039 408 384 408 c 456.961 408 556.559 397.922 617.473 390.816
 c 646.367 387.457 672.289 410.113 666.816 438.719 c 659.355 477.605 643.895
 514.516 621.406 547.105 c 617.664 439.105 m 556.223 446.16 457.871 456 
384 456 c 310.129 456 211.727 446.16 150.336 439.105 c 155.617 461.57 164.062
 482.785 175.152 502.32 c 244.438 510.98 314.176 515.551 384 516 c 453.824
 515.551 523.562 510.98 592.848 502.32 c 603.938 482.785 612.383 461.52 
617.664 439.105 c 552.383 555.074 m 503.422 559.875 444.145 564.004 384 
564.004 c 323.855 564.004 264.574 559.875 215.664 555.074 c 215.664 555.07
 l 260.559 599.246 321.016 624.004 384 624 c 446.984 624.004 507.441 599.246
 552.336 555.07 c h
311.426 336 m 316.898 321.887 320.02 305.473 320.02 288 c 320.02 234.961
 291.363 192 255.988 192 c 220.656 192 192 234.961 192 288 c 192 305.473
 195.121 321.887 200.543 336 c 211.582 307.297 232.32 288 255.984 288 c 
279.695 288 300.383 307.297 311.426 336 c 576 288 m 576 305.473 572.879 
321.887 567.457 336 c 556.418 307.297 535.68 288 512.016 288 c 488.305 288
 467.617 307.297 456.574 336 c 450.809 320.656 447.898 304.391 447.984 288
 c 447.984 234.961 476.641 192 512.016 192 c 547.344 192 576 234.961 576
 288 c f
384 768 m 485.844 768 583.516 727.543 655.527 655.527 c 727.543 583.516
 768 485.844 768 384 c 768 282.156 727.543 184.484 655.527 112.473 c 583.516
 40.457 485.844 0 384 0 c 282.156 0 184.484 40.457 112.473 112.473 c 40.457
 184.484 0 282.156 0 384 c 0 485.844 40.457 583.516 112.473 655.527 c 184.484
 727.543 282.156 768 384 768 c 384 720 m 294.887 720 209.426 684.602 146.414
 621.586 c 83.398 558.574 48 473.113 48 384 c 48 294.887 83.398 209.426 
146.414 146.414 c 209.426 83.398 294.887 48 384 48 c 473.113 48 558.574 
83.398 621.586 146.414 c 684.602 209.426 720 294.887 720 384 c 720 473.113
 684.602 558.574 621.586 621.586 c 558.574 684.602 473.113 720 384 720 c
 f
Q Q
showpage
%%Trailer
%%EOF
