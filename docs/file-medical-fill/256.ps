%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
144 0 m 48 0 l 41.637 0 35.531 2.527 31.031 7.031 c 26.527 11.531 24 17.637
 24 24 c 24 168 l 24 174.363 26.527 180.469 31.031 184.969 c 35.531 189.473
 41.637 192 48 192 c 144 192 l 150.363 192 156.469 189.473 160.969 184.969
 c 165.473 180.469 168 174.363 168 168 c 168 24 l 168 17.637 165.473 11.531
 160.969 7.031 c 156.469 2.527 150.363 0 144 0 c 102 54 m 102 61.609 l 108.59
 57.805 l 109.965 56.996 111.609 56.77 113.156 57.18 c 114.703 57.59 116.02
 58.598 116.82 59.98 c 117.617 61.363 117.832 63.012 117.414 64.551 c 116.992
 66.094 115.977 67.406 114.59 68.195 c 108 72 l 114.59 75.805 l 115.977 
76.594 116.992 77.906 117.414 79.449 c 117.832 80.988 117.617 82.637 116.82
 84.02 c 116.02 85.402 114.703 86.41 113.156 86.82 c 111.609 87.23 109.965
 87.004 108.59 86.195 c 102 82.391 l 102 90 l 102 93.312 99.312 96 96 96
 c 92.688 96 90 93.312 90 90 c 90 82.391 l 83.41 86.195 l 82.035 87.004 
80.391 87.23 78.844 86.82 c 77.297 86.41 75.98 85.402 75.18 84.02 c 74.383
 82.637 74.168 80.988 74.586 79.449 c 75.008 77.906 76.023 76.594 77.41 
75.805 c 84 72 l 77.41 68.195 l 74.566 66.527 73.602 62.875 75.25 60.02 
c 76.898 57.164 80.543 56.176 83.41 57.805 c 90 61.609 l 90 54 l 90 50.688
 92.688 48 96 48 c 99.312 48 102 50.688 102 54 c 66 108 m 126 108 l 129.312
 108 132 110.688 132 114 c 132 117.312 129.312 120 126 120 c 66 120 l 62.688
 120 60 117.312 60 114 c 60 110.688 62.688 108 66 108 c 66 132 m 126 132
 l 129.312 132 132 134.688 132 138 c 132 141.312 129.312 144 126 144 c 66
 144 l 62.688 144 60 141.312 60 138 c 60 134.688 62.688 132 66 132 c f
Q Q
showpage
%%Trailer
%%EOF
