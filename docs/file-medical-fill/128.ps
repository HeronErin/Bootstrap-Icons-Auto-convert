%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
72 0 m 24 0 l 17.371 0 12 5.371 12 12 c 12 84 l 12 87.184 13.266 90.234
 15.516 92.484 c 17.766 94.734 20.816 96 24 96 c 72 96 l 75.184 96 78.234
 94.734 80.484 92.484 c 82.734 90.234 84 87.184 84 84 c 84 12 l 84 8.816
 82.734 5.766 80.484 3.516 c 78.234 1.266 75.184 0 72 0 c 51 27 m 51 30.805
 l 54.293 28.902 l 54.984 28.496 55.805 28.387 56.578 28.59 c 57.352 28.793
 58.008 29.297 58.41 29.988 c 58.809 30.684 58.914 31.504 58.707 32.277 
c 58.496 33.047 57.988 33.703 57.293 34.098 c 54 36 l 57.293 37.902 l 57.988
 38.297 58.496 38.953 58.707 39.723 c 58.914 40.496 58.809 41.316 58.41 
42.012 c 58.008 42.703 57.352 43.207 56.578 43.41 c 55.805 43.613 54.984
 43.504 54.293 43.098 c 51 41.195 l 51 45 l 51 46.656 49.656 48 48 48 c 
46.344 48 45 46.656 45 45 c 45 41.195 l 41.707 43.098 l 41.016 43.504 40.195
 43.613 39.422 43.41 c 38.648 43.207 37.992 42.703 37.59 42.012 c 37.191
 41.316 37.086 40.496 37.293 39.723 c 37.504 38.953 38.012 38.297 38.707
 37.902 c 42 36 l 38.707 34.098 l 37.285 33.266 36.801 31.438 37.625 30.012
 c 38.449 28.582 40.273 28.086 41.707 28.902 c 45 30.805 l 45 27 l 45 25.344
 46.344 24 48 24 c 49.656 24 51 25.344 51 27 c 33 54 m 63 54 l 64.656 54
 66 55.344 66 57 c 66 58.656 64.656 60 63 60 c 33 60 l 31.344 60 30 58.656
 30 57 c 30 55.344 31.344 54 33 54 c 33 66 m 63 66 l 64.656 66 66 67.344
 66 69 c 66 70.656 64.656 72 63 72 c 33 72 l 31.344 72 30 70.656 30 69 c
 30 67.344 31.344 66 33 66 c f
Q Q
showpage
%%Trailer
%%EOF
