%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
108 264 m 114.629 264 120 258.629 120 252 c 120 245.371 114.629 240 108
 240 c 101.371 240 96 245.371 96 252 c 96 258.629 101.371 264 108 264 c 
72 252 m 72 258.629 66.629 264 60 264 c 53.371 264 48 258.629 48 252 c 48
 245.371 53.371 240 60 240 c 66.629 240 72 245.371 72 252 c f
384 264 m 384 276.73 378.941 288.938 369.941 297.941 c 360.938 306.941 
348.73 312 336 312 c 48 312 l 35.27 312 23.062 306.941 14.059 297.941 c 
5.059 288.938 0 276.73 0 264 c 0 228.238 l 0 218.207 2.52 208.316 7.32 199.512
 c 66.648 90.77 l 69.746 85.09 74.312 80.348 79.875 77.047 c 85.438 73.742
 91.789 72 98.258 72 c 285.746 72 l 285.742 72 l 292.211 72 298.562 73.742
 304.125 77.047 c 309.688 80.348 314.254 85.09 317.352 90.77 c 376.68 199.488
 l 381.48 208.32 384 218.207 384 228.242 c h
87.719 102.238 m 38.207 193.031 l 41.375 192.344 44.641 192 48 192 c 336
 192 l 339.359 192 342.625 192.336 345.793 193.008 c 296.281 102.238 l 294.172
 98.391 290.133 95.996 285.742 96 c 98.258 96 l 93.859 95.988 89.809 98.383
 87.695 102.238 c h
24 240 m 24 264 l 24 270.363 26.527 276.469 31.031 280.969 c 35.531 285.473
 41.637 288 48 288 c 336 288 l 342.363 288 348.469 285.473 352.969 280.969
 c 357.473 276.469 360 270.363 360 264 c 360 240 l 360 233.637 357.473 227.531
 352.969 223.031 c 348.469 218.527 342.363 216 336 216 c 48 216 l 41.637
 216 35.531 218.527 31.031 223.031 c 26.527 227.531 24 233.637 24 240 c f
Q Q
showpage
%%Trailer
%%EOF
