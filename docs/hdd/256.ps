%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 36 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 36 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 36 192 120 rectclip
1 0 0 -1 0 192 cm q
0 g
54 132 m 57.312 132 60 129.312 60 126 c 60 122.688 57.312 120 54 120 c 
50.688 120 48 122.688 48 126 c 48 129.312 50.688 132 54 132 c 36 126 m 36
 129.312 33.312 132 30 132 c 26.688 132 24 129.312 24 126 c 24 122.688 26.688
 120 30 120 c 33.312 120 36 122.688 36 126 c f
192 132 m 192 138.363 189.473 144.469 184.969 148.969 c 180.469 153.473
 174.363 156 168 156 c 24 156 l 17.637 156 11.531 153.473 7.031 148.969 
c 2.527 144.469 0 138.363 0 132 c 0 114.121 l 0 109.105 1.262 104.16 3.66
 99.758 c 33.324 45.387 l 33.324 45.383 l 34.871 42.543 37.156 40.176 39.938
 38.523 c 42.719 36.871 45.895 36 49.129 36 c 142.871 36 l 146.105 36 149.281
 36.871 152.062 38.523 c 154.844 40.176 157.129 42.543 158.676 45.383 c 
188.34 99.742 l 190.738 104.156 192 109.102 192 114.117 c h
43.859 51.121 m 19.105 96.516 l 20.688 96.172 22.32 96 24 96 c 168 96 l
 169.68 96 171.312 96.168 172.895 96.504 c 148.141 51.121 l 147.086 49.195
 145.066 48 142.871 48 c 49.129 48 l 46.93 47.992 44.902 49.191 43.848 51.121
 c h
12 120 m 12 132 l 12 135.184 13.266 138.234 15.516 140.484 c 17.766 142.734
 20.816 144 24 144 c 168 144 l 171.184 144 174.234 142.734 176.484 140.484
 c 178.734 138.234 180 135.184 180 132 c 180 120 l 180 116.816 178.734 113.766
 176.484 111.516 c 174.234 109.266 171.184 108 168 108 c 24 108 l 17.371
 108 12 113.371 12 120 c f
Q Q
showpage
%%Trailer
%%EOF
