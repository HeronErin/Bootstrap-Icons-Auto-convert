%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 18 96 78
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 18 96 78
96 96 cairo_set_page_size
%%EndPageSetup
q 0 18 96 60 rectclip
1 0 0 -1 0 96 cm q
0 g
27 66 m 28.656 66 30 64.656 30 63 c 30 61.344 28.656 60 27 60 c 25.344 
60 24 61.344 24 63 c 24 64.656 25.344 66 27 66 c 18 63 m 18 64.656 16.656
 66 15 66 c 13.344 66 12 64.656 12 63 c 12 61.344 13.344 60 15 60 c 16.656
 60 18 61.344 18 63 c f
96 66 m 96 69.184 94.734 72.234 92.484 74.484 c 90.234 76.734 87.184 78
 84 78 c 12 78 l 5.371 78 0 72.629 0 66 c 0 57.059 l 0 54.551 0.629 52.078
 1.828 49.875 c 16.66 22.688 l 16.66 22.691 l 18.238 19.801 21.27 18 24.562
 18 c 71.438 18 l 74.73 18 77.762 19.801 79.34 22.691 c 94.172 49.871 l 
95.371 52.078 96 54.551 96 57.059 c h
21.93 25.559 m 9.551 48.258 l 10.344 48.086 11.16 48 12 48 c 84 48 l 84.84
 48 85.656 48.086 86.449 48.254 c 74.07 25.559 l 73.543 24.598 72.535 24
 71.438 24 c 24.562 24 l 23.465 23.996 22.453 24.594 21.926 25.559 c h
6 60 m 6 66 l 6 67.59 6.633 69.117 7.758 70.242 c 8.883 71.367 10.41 72
 12 72 c 84 72 l 85.59 72 87.117 71.367 88.242 70.242 c 89.367 69.117 90
 67.59 90 66 c 90 60 l 90 58.41 89.367 56.883 88.242 55.758 c 87.117 54.633
 85.59 54 84 54 c 12 54 l 8.688 54 6 56.688 6 60 c f
Q Q
showpage
%%Trailer
%%EOF
