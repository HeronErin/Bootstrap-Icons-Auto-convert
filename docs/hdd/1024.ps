%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
216 528 m 224.574 528 232.496 523.426 236.785 516 c 241.07 508.574 241.07
 499.426 236.785 492 c 232.496 484.574 224.574 480 216 480 c 207.426 480
 199.504 484.574 195.215 492 c 190.93 499.426 190.93 508.574 195.215 516
 c 199.504 523.426 207.426 528 216 528 c 144 504 m 144 512.574 139.426 520.496
 132 524.785 c 124.574 529.07 115.426 529.07 108 524.785 c 100.574 520.496
 96 512.574 96 504 c 96 495.426 100.574 487.504 108 483.215 c 115.426 478.93
 124.574 478.93 132 483.215 c 139.426 487.504 144 495.426 144 504 c f
768 528 m 768 553.461 757.887 577.879 739.883 595.883 c 721.879 613.887
 697.461 624 672 624 c 96 624 l 70.539 624 46.121 613.887 28.117 595.883
 c 10.113 577.879 0 553.461 0 528 c 0 456.48 l 0 436.418 5.039 416.641 14.641
 399.023 c 133.297 181.535 l 139.488 170.176 148.629 160.695 159.75 154.09
 c 170.875 147.484 183.574 144 196.512 144 c 571.488 144 l 584.426 144 597.125
 147.484 608.25 154.09 c 619.371 160.695 628.512 170.176 634.703 181.535
 c 753.359 398.977 l 762.961 416.641 768 436.418 768 456.48 c h
175.441 204.48 m 76.414 386.062 l 82.754 384.688 89.281 384 96 384 c 672
 384 l 678.719 384 685.246 384.672 691.586 386.016 c 592.559 204.48 l 590.492
 200.699 587.445 197.547 583.734 195.352 c 580.027 193.152 575.797 191.996
 571.488 192 c 196.512 192 l 192.195 191.988 187.953 193.141 184.238 195.336
 c 180.52 197.535 177.465 200.691 175.391 204.48 c h
48 480 m 48 528 l 48 540.73 53.059 552.938 62.059 561.941 c 71.062 570.941
 83.27 576 96 576 c 672 576 l 684.73 576 696.938 570.941 705.941 561.941
 c 714.941 552.938 720 540.73 720 528 c 720 480 l 720 467.27 714.941 455.062
 705.941 446.059 c 696.938 437.059 684.73 432 672 432 c 96 432 l 83.27 432
 71.062 437.059 62.059 446.059 c 53.059 455.062 48 467.27 48 480 c f
Q Q
showpage
%%Trailer
%%EOF
