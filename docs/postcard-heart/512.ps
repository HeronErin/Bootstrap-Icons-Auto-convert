%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
192 108 m 192 101.371 186.629 96 180 96 c 173.371 96 168 101.371 168 108
 c 168 276 l 168 282.629 173.371 288 180 288 c 186.629 288 192 282.629 192
 276 c h
276 129.07 m 311.566 94.992 391.078 162.477 276 240 c 160.922 162.48 240.434
 94.969 276 129.07 c 60 120 m 53.371 120 48 125.371 48 132 c 48 138.629 
53.371 144 60 144 c 132 144 l 138.629 144 144 138.629 144 132 c 144 125.371
 138.629 120 132 120 c h
60 168 m 53.371 168 48 173.371 48 180 c 48 186.629 53.371 192 60 192 c 
132 192 l 138.629 192 144 186.629 144 180 c 144 173.371 138.629 168 132 
168 c h
60 216 m 53.371 216 48 221.371 48 228 c 48 234.629 53.371 240 60 240 c 
132 240 l 138.629 240 144 234.629 144 228 c 144 221.371 138.629 216 132 
216 c h
60 216 m f
0 96 m 0 83.27 5.059 71.062 14.059 62.059 c 23.062 53.059 35.27 48 48 48
 c 336 48 l 348.73 48 360.938 53.059 369.941 62.059 c 378.941 71.062 384
 83.27 384 96 c 384 288 l 384 300.73 378.941 312.938 369.941 321.941 c 360.938
 330.941 348.73 336 336 336 c 48 336 l 35.27 336 23.062 330.941 14.059 321.941
 c 5.059 312.938 0 300.73 0 288 c h
48 72 m 41.637 72 35.531 74.527 31.031 79.031 c 26.527 83.531 24 89.637
 24 96 c 24 288 l 24 294.363 26.527 300.469 31.031 304.969 c 35.531 309.473
 41.637 312 48 312 c 336 312 l 342.363 312 348.469 309.473 352.969 304.969
 c 357.473 300.469 360 294.363 360 288 c 360 96 l 360 89.637 357.473 83.531
 352.969 79.031 c 348.469 74.527 342.363 72 336 72 c h
48 72 m f*
Q Q
showpage
%%Trailer
%%EOF
