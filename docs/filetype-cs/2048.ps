%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 768 1536 l 768 1440 l 1152 1440 l 1177.461 1440 1201.879
 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248 1369.461 1248 1344 
c 1248 432 l 1056 432 l 1017.809 432 981.184 416.828 954.176 389.824 c 927.172
 362.816 912 326.191 912 288 c 912 96 l 384 96 l 358.539 96 334.121 106.113
 316.117 124.117 c 298.113 142.121 288 166.539 288 192 c 288 1056 l 192 
1056 l 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227
 333.078 0 384 0 c 912 0 l h
348.383 1467.84 m 342.039 1454.305 338.387 1439.664 337.633 1424.734 c 
411.074 1424.734 l 411.07 1424.734 l 413.789 1439.879 422.648 1453.223 435.551
 1461.602 c 442.27 1466.273 450.238 1469.922 459.453 1472.547 c 468.668 
1475.172 478.91 1476.484 490.172 1476.484 c 505.852 1476.484 519.035 1474.246
 529.723 1469.766 c 529.727 1469.762 l 539.516 1466.094 548.023 1459.656
 554.207 1451.23 c 559.734 1443.016 562.586 1433.293 562.367 1423.391 c 
562.891 1411.207 557.449 1399.527 547.777 1392.098 c 537.984 1384.418 523.168
 1378.242 503.328 1373.57 c 444 1359.844 l 444 1359.84 l 425.668 1356.016
 408.133 1349.066 392.16 1339.297 c 378.117 1330.633 366.547 1318.5 358.559
 1304.062 c 350.484 1288.543 346.395 1271.254 346.656 1253.762 c 346.656
 1230.336 352.734 1209.891 364.895 1192.418 c 377.117 1175.012 394.016 1161.508
 415.582 1151.906 c 437.148 1142.305 461.98 1137.539 490.078 1137.602 c 
519.391 1137.602 544.352 1142.465 564.957 1152.195 c 585.691 1161.988 601.691
 1175.105 612.957 1191.555 c 624.477 1207.875 630.879 1225.988 632.156 1245.891
 c 560.156 1245.891 l 560.16 1245.887 l 558.516 1236.777 554.547 1228.246
 548.641 1221.121 c 542.398 1213.387 534.262 1207.402 525.023 1203.742 c
 513.777 1199.09 501.672 1196.867 489.504 1197.215 c 468.77 1197.215 452.383
 1202.078 440.352 1211.809 c 428.879 1220.551 422.281 1234.25 422.594 1248.672
 c 422.594 1260.191 427.203 1269.793 436.418 1277.473 c 436.414 1277.473
 l 447.934 1285.883 461.184 1291.621 475.199 1294.273 c 534.816 1308 l 555.617
 1312.801 573.727 1319.551 589.152 1328.258 c 604.578 1336.961 616.578 1348.418
 625.152 1362.625 c 633.727 1376.832 638.016 1394.754 638.016 1416.387 c
 638.016 1440.066 632.031 1461.059 620.062 1479.363 c 620.062 1479.359 l
 607.328 1498.219 589.289 1512.887 568.223 1521.504 c 545.758 1531.617 518.301
 1536.672 485.855 1536.672 c 464.258 1537.074 442.73 1534.16 422.016 1528.031
 c 405.328 1523.012 389.773 1514.797 376.223 1503.84 c 364.438 1494.008 
354.938 1481.723 348.383 1467.84 c 87.262 1253.762 m 87.266 1253.762 l 80.141
 1273.207 76.785 1293.828 77.375 1314.527 c 77.375 1362.047 l 77.375 1385.664
 80.641 1405.727 87.168 1422.238 c 92.703 1437.402 102.715 1450.523 115.871
 1459.871 c 129.57 1468.562 145.543 1472.977 161.762 1472.543 c 175.055 
1472.863 188.227 1469.965 200.16 1464.098 c 210.879 1458.617 219.93 1450.363
 226.367 1440.191 c 232.902 1429.66 236.785 1417.703 237.695 1405.344 c 
311.039 1405.344 l 311.039 1412.641 l 310.145 1435.824 302.648 1458.27 289.441
 1477.344 c 276.32 1495.902 258.688 1510.434 236.547 1520.93 c 236.543 1520.93
 l 212.926 1531.777 187.168 1537.156 161.184 1536.672 c 126.625 1536.672
 97.375 1529.727 73.441 1515.84 c 49.363 1501.965 30.18 1480.973 18.527 
1455.742 c 6.176 1429.633 0 1398.398 0 1362.047 c 0 1314.238 l 0 1277.824
 6.273 1246.496 18.816 1220.254 c 18.816 1220.258 l 30.562 1194.918 49.707
 1173.73 73.727 1159.488 c 97.918 1145.281 127.039 1138.176 161.086 1138.176
 c 182.207 1138.176 201.629 1141.281 219.359 1147.488 c 237.344 1153.441
 253.023 1162.145 266.398 1173.602 c 293.68 1196.762 309.895 1230.375 311.039
 1266.145 c 311.039 1273.152 l 237.695 1273.152 l 236.801 1260.25 232.852
 1247.746 226.176 1236.672 c 219.902 1226.078 210.836 1217.41 199.969 1211.617
 c 188.258 1205.25 175.09 1202.039 161.762 1202.305 c 145.543 1201.793 129.578
 1206.43 116.16 1215.551 c 102.969 1225.18 92.887 1238.465 87.168 1253.762
 c h
87.262 1253.762 m f*
Q Q
showpage
%%Trailer
%%EOF
