%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 384 768 l 384 720 l 576 720 l 588.73 720 
600.938 714.941 609.941 705.941 c 618.941 696.938 624 684.73 624 672 c 624
 216 l 528 216 l 508.906 216 490.59 208.414 477.09 194.91 c 463.586 181.41
 456 163.094 456 144 c 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059
 62.059 c 149.059 71.062 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96
 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c
 456 0 l h
174.191 733.922 m 171.02 727.152 169.191 719.832 168.816 712.367 c 205.535
 712.367 l 206.895 719.938 211.324 726.609 217.777 730.801 c 221.137 733.137
 225.121 734.961 229.73 736.273 c 234.34 737.586 239.457 738.242 245.09 
738.242 c 252.93 738.242 259.523 737.121 264.867 734.883 c 264.863 734.879
 l 269.758 733.047 274.012 729.828 277.105 725.617 c 279.867 721.508 281.293
 716.645 281.184 711.695 c 281.445 705.602 278.723 699.766 273.887 696.047
 c 268.992 692.207 261.582 689.117 251.664 686.781 c 222 679.918 l 222 679.922
 l 212.836 678.008 204.066 674.535 196.078 669.648 c 189.059 665.316 183.273
 659.25 179.281 652.031 c 175.242 644.27 173.199 635.629 173.328 626.879
 c 173.328 615.168 176.367 604.941 182.449 596.207 c 188.562 587.504 197.008
 580.75 207.793 575.949 c 218.578 571.148 230.992 568.766 245.039 568.797
 c 259.695 568.797 272.176 571.23 282.48 576.094 c 292.848 580.988 300.848
 587.551 306.48 595.773 c 312.242 603.934 315.441 612.988 316.082 622.941
 c 280.082 622.941 l 280.078 622.945 l 279.258 618.391 277.273 614.125 274.32
 610.559 c 271.199 606.695 267.133 603.699 262.512 601.871 c 256.887 599.547
 250.836 598.434 244.754 598.609 c 234.387 598.609 226.195 601.043 220.18
 605.906 c 220.176 605.902 l 214.441 610.277 211.141 617.125 211.297 624.336
 c 211.297 630.098 213.602 634.895 218.207 638.734 c 223.969 642.941 230.594
 645.812 237.602 647.137 c 267.41 654 l 277.809 656.398 286.867 659.777 
294.578 664.129 c 302.289 668.48 308.289 674.207 312.578 681.312 c 316.867
 688.418 319.012 697.375 319.012 708.191 c 319.012 720.031 316.02 730.527
 310.035 739.68 c 310.031 739.68 l 303.664 749.109 294.645 756.441 284.113
 760.754 c 272.883 765.809 259.152 768.34 242.93 768.34 c 242.93 768.336
 l 232.129 768.535 221.363 767.078 211.008 764.016 c 202.664 761.508 194.887
 757.398 188.113 751.922 c 182.219 747.004 177.469 740.859 174.191 733.922
 c 43.633 626.883 m 43.633 626.879 l 40.07 636.602 38.395 646.914 38.688
 657.266 c 38.688 681.027 l 38.688 692.836 40.32 702.867 43.582 711.125 
c 43.586 711.121 l 46.352 718.699 51.355 725.262 57.938 729.938 c 64.785
 734.281 72.773 736.488 80.879 736.273 c 87.527 736.43 94.113 734.98 100.078
 732.047 c 105.441 729.309 109.965 725.184 113.184 720.098 c 116.449 714.828
 118.395 708.852 118.848 702.672 c 155.52 702.672 l 155.52 706.32 l 155.07
 717.91 151.324 729.137 144.719 738.672 c 138.16 747.953 129.344 755.215
 118.27 760.465 c 118.273 760.465 l 106.465 765.887 93.586 768.578 80.594
 768.336 c 63.312 768.336 48.691 764.863 36.723 757.922 c 36.719 757.922
 l 24.684 750.984 15.09 740.484 9.266 727.871 c 3.09 714.816 0 699.199 0
 681.023 c 0 657.121 l 0 638.914 3.137 623.25 9.406 610.129 c 15.281 597.461
 24.852 586.867 36.863 579.742 c 48.961 572.637 63.52 569.086 80.543 569.086
 c 91.102 569.086 100.816 570.637 109.68 573.742 c 118.672 576.719 126.512
 581.07 133.199 586.797 c 133.199 586.801 l 146.84 598.379 154.949 615.188
 155.52 633.07 c 155.52 636.574 l 118.848 636.574 l 118.402 630.125 116.426
 623.875 113.09 618.336 c 109.949 613.039 105.418 608.703 99.984 605.809
 c 94.129 602.625 87.543 601.02 80.879 601.152 c 72.77 600.895 64.789 603.215
 58.078 607.777 c 51.484 612.59 46.445 619.23 43.586 626.879 c h
43.633 626.883 m f*
Q Q
showpage
%%Trailer
%%EOF
