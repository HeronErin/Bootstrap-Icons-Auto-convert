%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 192 384 l 192 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
87.098 366.961 m 85.508 363.578 84.598 359.918 84.406 356.184 c 102.77 
356.184 l 103.445 359.969 105.664 363.305 108.887 365.398 c 110.566 366.566
 112.559 367.477 114.863 368.133 c 117.168 368.789 119.727 369.117 122.543
 369.117 c 126.465 369.117 129.758 368.559 132.43 367.438 c 132.434 367.441
 l 134.879 366.523 137.004 364.914 138.551 362.809 c 139.934 360.754 140.645
 358.324 140.594 355.848 c 140.723 352.801 139.363 349.883 136.945 348.023
 c 134.496 346.102 130.793 344.559 125.832 343.391 c 111 339.957 l 111 339.961
 l 106.418 339.004 102.035 337.266 98.039 334.824 c 94.531 332.66 91.637
 329.625 89.641 326.016 c 87.621 322.137 86.598 317.812 86.664 313.441 c
 86.664 307.586 88.184 302.473 91.223 298.105 c 94.277 293.754 98.504 290.379
 103.895 287.977 c 109.285 285.578 115.496 284.383 122.52 284.402 c 129.848
 284.402 136.086 285.617 141.238 288.051 c 146.422 290.5 150.422 293.777
 153.238 297.891 c 156.117 301.969 157.719 306.5 158.039 311.477 c 140.039
 311.477 l 140.039 311.473 l 139.629 309.195 138.637 307.062 137.16 305.281
 c 135.602 303.348 133.566 301.852 131.258 300.938 c 128.445 299.773 125.418
 299.215 122.375 299.305 c 117.191 299.305 113.094 300.52 110.086 302.953
 c 110.09 302.953 l 107.219 305.137 105.57 308.562 105.648 312.168 c 105.648
 315.047 106.801 317.449 109.105 319.367 c 111.984 321.473 115.297 322.906
 118.801 323.566 c 133.703 327 l 138.902 328.199 143.43 329.887 147.289 
332.062 c 151.145 334.238 154.145 337.102 156.289 340.656 c 158.434 344.207
 159.504 348.688 159.504 354.098 c 159.504 360.02 158.008 365.266 155.016
 369.84 c 151.832 374.555 147.32 378.223 142.055 380.375 c 136.438 382.902
 129.574 384.168 121.461 384.168 c 121.465 384.168 l 116.066 384.27 110.684
 383.539 105.504 382.008 c 101.332 380.754 97.445 378.699 94.055 375.961
 c 91.109 373.5 88.734 370.43 87.098 366.961 c 21.816 313.441 m 20.035 318.301
 19.195 323.457 19.344 328.633 c 19.344 340.512 l 19.344 346.414 20.16 351.434
 21.793 355.559 c 23.176 359.352 25.68 362.633 28.969 364.969 c 32.391 367.141
 36.387 368.242 40.441 368.137 c 43.762 368.215 47.059 367.492 50.039 366.023
 c 52.719 364.656 54.984 362.59 56.594 360.047 c 58.227 357.414 59.195 354.426
 59.426 351.336 c 77.762 351.336 l 77.762 353.16 l 77.535 358.957 75.664
 364.566 72.359 369.336 c 69.078 373.977 64.672 377.609 59.137 380.23 c 
53.23 382.945 46.793 384.289 40.297 384.168 c 31.656 384.168 24.344 382.434
 18.359 378.961 c 12.34 375.492 7.543 370.242 4.633 363.938 c 1.543 357.406
 0 349.602 0 340.512 c 0 328.559 l 0 319.453 1.566 311.621 4.703 305.062
 c 7.641 298.73 12.426 293.434 18.434 289.871 c 24.48 286.32 31.762 284.543
 40.273 284.543 c 45.555 284.543 50.41 285.32 54.84 286.871 c 59.336 288.359
 63.254 290.535 66.602 293.398 c 73.422 299.191 77.473 307.594 77.762 316.535
 c 77.762 318.289 l 59.426 318.289 l 59.199 315.062 58.215 311.938 56.543
 309.168 c 54.977 306.52 52.707 304.352 49.992 302.902 c 47.062 301.312 
43.773 300.512 40.441 300.574 c 36.387 300.449 32.395 301.609 29.039 303.887
 c 25.742 306.293 23.223 309.617 21.793 313.441 c h
21.816 313.441 m f*
Q Q
showpage
%%Trailer
%%EOF
