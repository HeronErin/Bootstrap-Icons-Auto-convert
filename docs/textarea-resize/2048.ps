%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 432 m 0 368.348 25.285 307.305 70.293 262.293 c 115.305 217.285 176.348
 192 240 192 c 1296 192 l 1338.129 192 1379.516 203.09 1416 224.152 c 1452.484
 245.219 1482.781 275.516 1503.848 312 c 1524.91 348.484 1536 389.871 1536
 432 c 1536 1104 l 1536 1146.129 1524.91 1187.516 1503.848 1224 c 1482.781
 1260.484 1452.484 1290.781 1416 1311.848 c 1379.516 1332.91 1338.129 1344
 1296 1344 c 240 1344 l 176.348 1344 115.305 1318.715 70.293 1273.707 c 
25.285 1228.695 0 1167.652 0 1104 c h
240 288 m 201.809 288 165.184 303.172 138.176 330.176 c 111.172 357.184
 96 393.809 96 432 c 96 1104 l 96 1142.191 111.172 1178.816 138.176 1205.824
 c 165.184 1232.828 201.809 1248 240 1248 c 1296 1248 l 1334.191 1248 1370.816
 1232.828 1397.824 1205.824 c 1424.828 1178.816 1440 1142.191 1440 1104 
c 1440 432 l 1440 393.809 1424.828 357.184 1397.824 330.176 c 1370.816 303.172
 1334.191 288 1296 288 c h
1281.984 734.016 m 1291.012 743.02 1296.086 755.25 1296.086 768 c 1296.086
 780.75 1291.012 792.98 1281.984 801.984 c 993.984 1089.984 l 981.844 1102.125
 964.145 1106.867 947.562 1102.422 c 930.977 1097.98 918.02 1085.023 913.578
 1068.438 c 909.133 1051.855 913.875 1034.156 926.016 1022.016 c 1214.016
 734.016 l 1223.02 724.988 1235.25 719.914 1248 719.914 c 1260.75 719.914
 1272.98 724.988 1281.984 734.016 c 1281.984 974.016 m 1291.012 983.02 1296.086
 995.25 1296.086 1008 c 1296.086 1020.75 1291.012 1032.98 1281.984 1041.984
 c 1233.984 1089.984 l 1221.844 1102.125 1204.145 1106.867 1187.562 1102.422
 c 1170.977 1097.98 1158.02 1085.023 1153.578 1068.438 c 1149.133 1051.855
 1153.875 1034.156 1166.016 1022.016 c 1214.016 974.016 l 1223.02 964.988
 1235.25 959.914 1248 959.914 c 1260.75 959.914 1272.98 964.988 1281.984
 974.016 c f
Q Q
showpage
%%Trailer
%%EOF
