%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 216 0 552 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 216 0 552 768
768 768 cairo_set_page_size
%%EndPageSetup
q 216 0 336 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 672 m 409.723 672 433.492 658.277 446.355 636 c 459.215 613.723 459.215
 586.277 446.355 564 c 433.492 541.723 409.723 528 384 528 c 358.277 528
 334.508 541.723 321.645 564 c 308.785 586.277 308.785 613.723 321.645 636
 c 334.508 658.277 358.277 672 384 672 c f
384 0 m 352.176 0 321.652 12.645 299.148 35.148 c 276.645 57.652 264 88.176
 264 120 c 264 482.398 l 232.957 514.086 215.703 556.762 216.004 601.117
 c 216.305 645.477 234.137 687.914 265.609 719.172 c 297.082 750.434 339.641
 767.977 384 767.977 c 428.359 767.977 470.918 750.434 502.391 719.172 c
 533.863 687.914 551.695 645.477 551.996 601.117 c 552.297 556.762 535.043
 514.086 504 482.398 c 504 120 l 504 88.176 491.355 57.652 468.852 35.148
 c 446.348 12.645 415.824 0 384 0 c 312 120 m 312 94.277 325.723 70.508 
348 57.645 c 370.277 44.785 397.723 44.785 420 57.645 c 442.277 70.508 456
 94.277 456 120 c 456 503.375 l 464.016 510.574 l 488.316 532.309 502.73
 562.988 503.941 595.566 c 505.152 628.145 493.059 659.812 470.438 683.285
 c 447.82 706.762 416.625 720.027 384.023 720.027 c 351.426 720.027 320.227
 706.762 297.609 683.285 c 274.988 659.812 262.895 628.145 264.105 595.566
 c 265.32 562.988 279.73 532.309 304.031 510.574 c 312 503.375 l h
312 120 m f
Q Q
showpage
%%Trailer
%%EOF
