%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 1 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 3 12 l 2.172 12 1.5 11.328 1.5 10.5 c 1.5 1.5 l 
1.5 0.672 2.172 0 3 0 c 7.125 0 l h
8.25 3.375 m 7.629 3.375 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l
 2.586 0.75 2.25 1.086 2.25 1.5 c 2.25 10.5 l 2.25 10.699 2.328 10.891 2.469
 11.031 c 2.609 11.172 2.801 11.25 3 11.25 c 9 11.25 l 9.199 11.25 9.391
 11.172 9.531 11.031 c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l
 h
8.25 3.375 m f
6.484 4.984 m 6.555 4.914 6.648 4.875 6.75 4.875 c 6.852 4.875 6.945 4.914
 7.016 4.984 c 8.516 6.484 l 8.586 6.555 8.625 6.648 8.625 6.75 c 8.625 
6.852 8.586 6.945 8.516 7.016 c 7.016 8.516 l 6.867 8.664 6.633 8.664 6.484
 8.516 c 6.336 8.367 6.336 8.133 6.484 7.984 c 7.719 6.75 l 6.484 5.516 
l 6.414 5.445 6.375 5.352 6.375 5.25 c 6.375 5.148 6.414 5.055 6.484 4.984
 c 5.516 4.984 m 5.445 4.914 5.352 4.875 5.25 4.875 c 5.148 4.875 5.055 
4.914 4.984 4.984 c 3.484 6.484 l 3.414 6.555 3.375 6.648 3.375 6.75 c 3.375
 6.852 3.414 6.945 3.484 7.016 c 4.984 8.516 l 5.133 8.664 5.367 8.664 5.516
 8.516 c 5.664 8.367 5.664 8.133 5.516 7.984 c 4.281 6.75 l 5.516 5.516 
l 5.586 5.445 5.625 5.352 5.625 5.25 c 5.625 5.148 5.586 5.055 5.516 4.984
 c f
Q Q
showpage
%%Trailer
%%EOF
