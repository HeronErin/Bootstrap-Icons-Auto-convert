%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.375 0 m 0 0.375 l 0.824 1.531 l 0.895 1.629 1.008 1.688 1.129 1.688 c
 1.156 1.688 l 1.258 1.688 1.352 1.727 1.422 1.797 c 2.426 2.801 l 1.445
 3.797 l 1.105 3.695 0.734 3.762 0.453 3.973 c 0.168 4.188 0 4.52 0 4.875
 c 0 5.203 0.141 5.512 0.391 5.723 c 0.637 5.938 0.965 6.035 1.285 5.988
 c 1.609 5.941 1.895 5.754 2.07 5.48 c 2.246 5.207 2.297 4.867 2.203 4.555
 c 3.199 3.574 l 3.562 3.938 l 3.449 4.281 l 3.402 4.414 3.438 4.562 3.539
 4.664 c 4.766 5.891 l 4.836 5.961 4.93 6 5.031 6 c 5.129 6 5.227 5.961 
5.297 5.891 c 5.891 5.297 l 5.961 5.227 6 5.129 6 5.031 c 6 4.93 5.961 4.836
 5.891 4.766 c 4.664 3.539 l 4.562 3.438 4.414 3.402 4.281 3.449 c 3.938
 3.562 l 3.578 3.203 l 4.582 2.211 l 4.922 2.301 5.281 2.23 5.559 2.016 
c 5.836 1.805 6 1.477 6 1.125 c 6 1.023 5.988 0.926 5.961 0.832 c 5.16 1.637
 l 4.5 1.5 l 4.363 0.84 l 5.168 0.039 l 4.777 -0.066 4.363 0.043 4.078 0.328
 c 3.793 0.613 3.684 1.031 3.789 1.418 c 2.797 2.422 l 1.797 1.422 l 1.727
 1.352 1.688 1.258 1.688 1.156 c 1.688 1.129 l 1.688 1.008 1.629 0.895 1.531
 0.824 c h
3.992 3.992 m 4.066 3.918 4.184 3.918 4.258 3.992 c 5.352 5.086 l 5.52 
5.262 5.262 5.52 5.086 5.352 c 3.992 4.258 l 3.918 4.184 3.918 4.066 3.992
 3.992 c 1.125 4.125 m 1.301 4.215 l 1.5 4.223 l 1.609 4.391 l 1.777 4.5
 l 1.785 4.699 l 1.875 4.875 l 1.785 5.051 l 1.777 5.25 l 1.609 5.359 l 
1.5 5.527 l 1.301 5.535 l 1.125 5.625 l 0.949 5.535 l 0.75 5.523 l 0.641
 5.355 l 0.477 5.25 l 0.469 5.051 l 0.375 4.875 l 0.465 4.699 l 0.473 4.5
 l 0.641 4.391 l 0.75 4.223 l 0.949 4.215 l h
1.125 4.125 m f
Q Q
showpage
%%Trailer
%%EOF
