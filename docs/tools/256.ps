%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
12 0 m 0 12 l 26.398 48.973 l 28.656 52.133 32.297 54.004 36.18 54 c 37.02
 54 l 40.207 53.996 43.262 55.262 45.516 57.516 c 77.617 89.617 l 46.215
 121.465 l 46.211 121.465 l 35.32 118.258 23.559 120.371 14.465 127.168 
c 5.371 133.965 0.012 144.648 0 156 c 0.016 166.438 4.559 176.359 12.457
 183.184 c 20.355 190.012 30.828 193.074 41.156 191.578 c 51.488 190.082
 60.664 184.176 66.301 175.391 c 71.938 166.602 73.484 155.801 70.535 145.789
 c 102.383 114.387 l 114 126.004 l 110.34 136.973 l 110.34 136.969 l 108.906
 141.281 110.031 146.031 113.242 149.242 c 152.484 188.484 l 154.73 190.742
 157.781 192.012 160.969 192.012 c 164.152 192.012 167.207 190.742 169.453
 188.484 c 188.484 169.453 l 190.742 167.207 192.012 164.152 192.012 160.969
 c 192.012 157.781 190.742 154.73 188.484 152.484 c 149.242 113.242 l 146.031
 110.031 141.281 108.906 136.969 110.34 c 126 114 l 114.48 102.48 l 146.641
 70.766 l 157.453 73.648 168.992 71.352 177.875 64.547 c 186.758 57.738 
191.977 47.191 192 36 c 192 32.762 191.594 29.652 190.777 26.676 c 165.098
 52.367 l 144 48 l 139.633 26.914 l 165.324 1.223 l 157.137 -0.977 148.438
 -0.219 140.758 3.363 c 133.074 6.949 126.906 13.129 123.332 20.812 c 119.758
 28.5 119.012 37.203 121.223 45.383 c 89.543 77.52 l 57.516 45.516 l 55.266
 43.266 54 40.215 54 37.031 c 54 36.18 l 54 32.305 52.129 28.664 48.973 
26.41 c h
127.754 127.754 m 128.879 126.625 130.406 125.988 132 125.988 c 133.594
 125.988 135.121 126.625 136.246 127.754 c 171.215 162.734 l 171.215 162.73
 l 173.488 165.086 173.457 168.828 171.145 171.145 c 168.828 173.457 165.086
 173.488 162.73 171.215 c 127.75 136.246 l 127.754 136.246 l 126.625 135.121
 125.988 133.594 125.988 132 c 125.988 130.406 126.625 128.879 127.754 127.754
 c 36 132 m 41.652 134.902 l 48 135.215 l 51.445 140.555 l 56.785 144 l 
57.098 150.348 l 60 156 l 57.098 161.652 l 56.785 168 l 51.445 171.445 l
 48 176.785 l 41.652 177.098 l 36 180 l 30.348 177.098 l 24 176.785 l 20.555
 171.445 l 15.215 168 l 14.902 161.652 l 12 156 l 14.902 150.348 l 15.215
 144 l 20.555 140.555 l 24 135.215 l 30.348 134.902 l h
36 132 m f
Q Q
showpage
%%Trailer
%%EOF
