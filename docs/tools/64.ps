%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
3 0 m 0 3 l 6.602 12.242 l 7.164 13.031 8.074 13.5 9.047 13.5 c 9.258 13.5
 l 9.254 13.5 l 10.051 13.5 10.816 13.816 11.379 14.379 c 19.402 22.402 
l 11.551 30.363 l 11.555 30.367 l 8.832 29.566 5.891 30.094 3.617 31.793
 c 1.344 33.492 0.004 36.16 0 39 c 0.004 41.609 1.141 44.09 3.113 45.797
 c 5.09 47.504 7.707 48.27 10.289 47.895 c 12.871 47.52 15.164 46.043 16.574
 43.848 c 17.984 41.652 18.371 38.949 17.633 36.445 c 25.594 28.594 l 28.496
 31.496 l 27.582 34.238 l 27.586 34.242 l 27.227 35.32 27.508 36.508 28.312
 37.312 c 38.121 47.121 l 38.684 47.688 39.445 48.004 40.242 48.004 c 41.039
 48.004 41.801 47.688 42.363 47.121 c 47.121 42.363 l 47.688 41.801 48.004
 41.039 48.004 40.242 c 48.004 39.445 47.688 38.684 47.121 38.121 c 37.312
 28.312 l 36.508 27.508 35.32 27.227 34.242 27.586 c 31.5 28.5 l 28.621 
25.621 l 36.66 17.691 l 39.363 18.414 42.25 17.84 44.469 16.137 c 46.691
 14.434 47.992 11.797 48 9 c 48 8.191 47.898 7.414 47.695 6.668 c 41.273
 13.09 l 36 12 l 34.906 6.73 l 41.332 0.305 l 38.223 -0.531 34.902 0.359
 32.625 2.637 c 30.352 4.918 29.465 8.238 30.305 11.348 c 22.387 19.379 
l 14.379 11.379 l 13.816 10.816 13.5 10.055 13.5 9.258 c 13.5 9.043 l 13.5
 9.047 l 13.5 8.074 13.031 7.168 12.242 6.602 c h
31.938 31.938 m 32.219 31.656 32.602 31.496 33 31.496 c 33.398 31.496 33.781
 31.656 34.062 31.938 c 42.805 40.684 l 43.371 41.273 43.363 42.207 42.785
 42.785 c 42.207 43.363 41.273 43.371 40.684 42.805 c 31.938 34.062 l 31.656
 33.781 31.496 33.398 31.496 33 c 31.496 32.602 31.656 32.219 31.938 31.938
 c 9 33 m 10.414 33.727 l 12 33.805 l 12.859 35.141 l 14.195 36 l 14.273
 37.586 l 15 39 l 14.273 40.414 l 14.195 42 l 12.859 42.859 l 12 44.195 
l 10.414 44.273 l 9 45 l 7.586 44.273 l 6 44.195 l 5.141 42.859 l 3.805 
42 l 3.727 40.414 l 3 39 l 3.727 37.586 l 3.805 36 l 5.141 35.141 l 6 33.805
 l 7.586 33.727 l h
9 33 m f
Q Q
showpage
%%Trailer
%%EOF
