%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 84 90 rectclip
1 0 0 -1 0 96 cm q
0 g
75 96 m 82.504 96 89.434 91.996 93.188 85.5 c 96.938 79.004 96.938 70.996
 93.188 64.5 c 89.434 58.004 82.504 54 75 54 c 67.496 54 60.566 58.004 56.812
 64.5 c 53.062 70.996 53.062 79.004 56.812 85.5 c 60.566 91.996 67.496 96
 75 96 c 78 66 m 78 72 l 84 72 l 85.656 72 87 73.344 87 75 c 87 76.656 85.656
 78 84 78 c 78 78 l 78 84 l 78 85.656 76.656 87 75 87 c 73.344 87 72 85.656
 72 84 c 72 78 l 66 78 l 64.344 78 63 76.656 63 75 c 63 73.344 64.344 72
 66 72 c 72 72 l 72 66 l 72 64.344 73.344 63 75 63 c 76.656 63 78 64.344
 78 66 c 48 6 m 38.562 6 29.867 7.734 23.426 10.66 c 17.25 13.469 12 17.957
 12 24 c 12 30.043 17.25 34.531 23.426 37.34 c 29.867 40.266 38.562 42 48
 42 c 57.438 42 66.133 40.266 72.574 37.34 c 78.75 34.531 84 30.043 84 24
 c 84 17.957 78.75 13.469 72.574 10.66 c 66.133 7.734 57.438 6 48 6 c f
12 42 m 12 36.965 l 14.742 39.559 18.023 41.473 20.941 42.797 c 28.332 
46.156 37.906 48 48 48 c 58.094 48 67.668 46.156 75.059 42.797 c 77.973 
41.477 81.258 39.559 84 36.965 c 84 42 l 84 44.543 83.07 46.812 81.535 48.797
 c 76.164 47.469 70.52 47.816 65.352 49.793 c 60.188 51.77 55.754 55.281
 52.645 59.855 c 51.098 59.953 49.551 60.004 48 60 c 38.562 60 29.867 58.266
 23.426 55.34 c 17.25 52.531 12 48.043 12 42 c 49.543 65.988 m 48 66 l 37.906
 66 28.332 64.156 20.941 60.797 c 18.027 59.477 14.742 57.559 12 54.965 
c 12 60 l 12 66.043 17.25 70.531 23.426 73.34 c 29.867 76.266 38.562 78 
48 78 c 48.16 78 l 47.719 73.941 48.191 69.84 49.543 65.988 c 49.531 83.988
 m 48 84 l 37.906 84 28.332 82.156 20.941 78.797 c 18.027 77.477 14.742 
75.559 12 72.965 c 12 78 l 12 84.043 17.25 88.531 23.426 91.34 c 29.867 
94.266 38.562 96 48 96 c 51.215 96 54.348 95.797 57.328 95.418 c 53.781 
92.352 51.094 88.41 49.531 83.988 c f
Q Q
showpage
%%Trailer
%%EOF
