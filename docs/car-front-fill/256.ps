%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
30.238 42.18 m 32.555 36.781 36.406 32.18 41.312 28.945 c 46.219 25.715
 51.965 23.996 57.84 24 c 134.184 24 l 146.184 24 157.031 31.152 161.758
 42.18 c 171.262 64.355 l 172.16 66.457 173.781 68.184 175.82 69.203 c 181.82
 72.203 186.082 77.781 187.398 84.348 c 191.418 104.496 l 191.816 106.434
 192.016 108.391 192.008 110.375 c 192.008 115.332 l 192.008 125.102 187.328
 133.848 180.008 139.297 c 180.012 162 l 180.012 163.59 179.379 165.117 
178.254 166.242 c 177.129 167.367 175.602 168 174.012 168 c 150.012 168 
l 146.699 168 144.012 165.312 144.012 162 c 144.012 145.945 l 128.508 146.52
 111.07 147 96.012 147 c 80.953 147 63.516 146.52 48.012 145.945 c 48.012
 162 l 48.012 163.59 47.379 165.117 46.254 166.242 c 45.129 167.367 43.602
 168 42.012 168 c 18.012 168 l 14.699 168 12.012 165.312 12.012 162 c 12.012
 139.297 l 4.691 133.848 0.012 125.102 0.012 115.332 c 0.012 110.375 l 0.016
 108.402 0.211 106.434 0.602 104.496 c 4.621 84.336 l 5.941 77.785 10.199
 72.191 16.188 69.203 c 18.242 68.188 19.863 66.465 20.762 64.355 c 30.266
 42.18 l h
36 120 m 42.629 120 48 114.629 48 108 c 48 101.371 42.629 96 36 96 c 29.371
 96 24 101.371 24 108 c 24 114.629 29.371 120 36 120 c 156 120 m 162.629
 120 168 114.629 168 108 c 168 101.371 162.629 96 156 96 c 149.371 96 144
 101.371 144 108 c 144 114.629 149.371 120 156 120 c 72 96 m 65.371 96 60
 101.371 60 108 c 60 114.629 65.371 120 72 120 c 120 120 l 126.629 120 132
 114.629 132 108 c 132 101.371 126.629 96 120 96 c h
34.871 62.27 m 33.918 64.238 34.086 66.566 35.316 68.379 c 36.551 70.188
 38.652 71.203 40.836 71.039 c 51.758 70.164 81.035 69 96 69 c 110.965 69
 140.258 70.164 151.164 71.039 c 153.348 71.203 155.449 70.188 156.684 68.379
 c 157.914 66.566 158.082 64.238 157.129 62.27 c 145.656 39.312 l 144.641
 37.281 142.562 36 140.293 36 c 51.707 36 l 49.438 36 47.359 37.281 46.344
 39.312 c 34.871 62.281 l h
34.871 62.27 m f
Q Q
showpage
%%Trailer
%%EOF
