%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1440 m 755.27 1440 743.062 1434.941 734.059 1425.941 c 725.059 1416.938
 720 1404.73 720 1392 c 720 144 l 720 126.852 729.148 111.004 744 102.43
 c 758.852 93.855 777.148 93.855 792 102.43 c 806.852 111.004 816 126.852
 816 144 c 816 1392 l 816 1404.73 810.941 1416.938 801.941 1425.941 c 792.938
 1434.941 780.73 1440 768 1440 c 0 768 m 0 755.27 5.059 743.062 14.059 734.059
 c 23.062 725.059 35.27 720 48 720 c 412.129 720 l 302.016 609.984 l 289.875
 597.844 285.133 580.145 289.578 563.562 c 294.02 546.977 306.977 534.02
 323.562 529.578 c 340.145 525.133 357.844 529.875 369.984 542.016 c 561.984
 734.016 l 571.012 743.02 576.086 755.25 576.086 768 c 576.086 780.75 571.012
 792.98 561.984 801.984 c 369.984 993.984 l 357.844 1006.125 340.145 1010.867
 323.562 1006.422 c 306.977 1001.98 294.02 989.023 289.578 972.438 c 285.133
 955.855 289.875 938.156 302.016 926.016 c 412.129 816 l 48 816 l 35.27 
816 23.062 810.941 14.059 801.941 c 5.059 792.938 0 780.73 0 768 c 1123.871
 816 m 1233.984 926.016 l 1246.125 938.156 1250.867 955.855 1246.422 972.438
 c 1241.98 989.023 1229.023 1001.98 1212.438 1006.422 c 1195.855 1010.867
 1178.156 1006.125 1166.016 993.984 c 974.016 801.984 l 964.988 792.98 959.914
 780.75 959.914 768 c 959.914 755.25 964.988 743.02 974.016 734.016 c 1166.016
 542.016 l 1178.156 529.875 1195.855 525.133 1212.438 529.578 c 1229.023
 534.02 1241.98 546.977 1246.422 563.562 c 1250.867 580.145 1246.125 597.844
 1233.984 609.984 c 1123.871 720 l 1488 720 l 1505.148 720 1520.996 729.148
 1529.57 744 c 1538.145 758.852 1538.145 777.148 1529.57 792 c 1520.996 
806.852 1505.148 816 1488 816 c h
1123.871 816 m f
Q Q
showpage
%%Trailer
%%EOF
