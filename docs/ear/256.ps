%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 36 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 36 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 36 0 132 192 rectclip
1 0 0 -1 0 192 cm q
0 g
102 12 m 87.68 12 73.941 17.688 63.816 27.816 c 53.688 37.941 48 51.68 
48 66 c 48 150.562 l 48 159.832 52.363 168.562 59.781 174.121 c 67.199 179.68
 76.801 181.422 85.699 178.82 c 94.598 176.215 101.746 169.574 105 160.895
 c 111.145 144.539 l 113.512 138.242 116.812 132.336 120.938 127.02 c 145.035
 96.047 l 145.031 96.047 l 153.051 85.734 156.902 72.781 155.82 59.762 c
 154.734 46.742 148.797 34.605 139.184 25.758 c 129.57 16.91 116.984 12 
103.922 12 c h
36 66 m 36 48.496 42.953 31.707 55.332 19.332 c 67.707 6.953 84.496 0 102
 0 c 103.922 0 l 119.996 0 135.48 6.043 147.309 16.93 c 159.137 27.816 166.441
 42.75 167.773 58.77 c 169.105 74.789 164.367 90.727 154.5 103.414 c 130.402
 134.387 l 127.02 138.746 124.312 143.59 122.363 148.754 c 116.242 165.109
 l 111.668 177.332 101.602 186.688 89.074 190.355 c 76.547 194.02 63.023
 191.57 52.582 183.738 c 42.137 175.91 35.992 163.617 36 150.562 c h
102 48 m 97.227 48 92.648 49.895 89.273 53.273 c 85.895 56.648 84 61.227
 84 66 c 84 98.34 l 85.344 97.621 86.672 96.852 87.984 96.035 c 91.91 93.539
 94.91 90.754 96.625 87.312 c 98.109 84.348 101.715 83.145 104.684 84.629
 c 107.648 86.113 108.848 89.723 107.363 92.688 c 104.293 98.844 99.289 
103.066 94.414 106.164 c 91.047 108.215 87.57 110.082 84 111.758 c 84 138
 l 84 141.312 81.312 144 78 144 c 74.688 144 72 141.312 72 138 c 72 66 l
 72 55.281 77.719 45.379 87 40.02 c 96.281 34.66 107.719 34.66 117 40.02
 c 126.281 45.379 132 55.281 132 66 c 132 72 l 132 75.312 129.312 78 126
 78 c 122.688 78 120 75.312 120 72 c 120 66 l 120 61.227 118.105 56.648 
114.727 53.273 c 111.352 49.895 106.773 48 102 48 c f
Q Q
showpage
%%Trailer
%%EOF
