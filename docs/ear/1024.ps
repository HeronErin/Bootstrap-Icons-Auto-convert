%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 0 528 768 rectclip
1 0 0 -1 0 768 cm q
0 g
408 48 m 350.715 48 295.773 70.758 255.266 111.266 c 214.758 151.773 192
 206.715 192 264 c 192 602.258 l 191.996 639.332 209.461 674.246 239.129
 696.484 c 268.797 718.719 307.211 725.684 342.797 715.273 c 378.383 704.867
 406.988 678.305 420 643.586 c 444.574 578.16 l 454.051 552.973 467.254 
529.348 483.742 508.078 c 580.125 384.191 l 580.129 384.191 l 612.207 342.938
 627.605 291.133 623.273 239.051 c 618.941 186.973 595.195 138.422 556.742
 103.035 c 518.289 67.645 467.938 48.004 415.68 48 c h
144 264 m 144 193.984 171.812 126.832 221.324 77.324 c 270.832 27.812 337.984
 0 408 0 c 415.68 0 l 479.98 0.004 541.93 24.18 589.242 67.723 c 636.551
 111.27 665.77 171.004 671.094 235.086 c 676.422 299.164 657.473 362.906
 618 413.664 c 521.617 537.551 l 508.086 554.988 497.242 574.355 489.457
 595.008 c 464.977 660.434 l 451.363 696.816 425.402 727.258 391.625 746.449
 c 357.852 765.641 318.41 772.359 280.184 765.434 c 241.961 758.504 207.387
 738.371 182.496 708.547 c 157.605 678.723 143.98 641.102 144 602.258 c 
h
408 192 m 388.906 192 370.59 199.586 357.09 213.09 c 343.586 226.59 336
 244.906 336 264 c 336 393.359 l 341.375 390.48 346.688 387.406 351.938 
384.145 c 367.633 374.16 379.633 363.023 386.496 349.25 c 386.496 349.246
 l 390.336 341.574 397.98 336.531 406.547 336.023 c 415.113 335.512 423.301
 339.609 428.027 346.773 c 432.754 353.938 433.297 363.078 429.457 370.754
 c 417.168 395.379 397.152 412.273 377.664 424.656 c 364.195 432.867 350.285
 440.336 336 447.023 c 336 552 l 336 560.574 331.426 568.496 324 572.785
 c 316.574 577.07 307.426 577.07 300 572.785 c 292.574 568.496 288 560.574
 288 552 c 288 264 l 288 221.129 310.871 181.512 348 160.078 c 385.129 138.641
 430.871 138.641 468 160.078 c 505.129 181.512 528 221.129 528 264 c 528
 288 l 528 296.574 523.426 304.496 516 308.785 c 508.574 313.07 499.426 
313.07 492 308.785 c 484.574 304.496 480 296.574 480 288 c 480 264 l 480
 244.906 472.414 226.59 458.91 213.09 c 445.41 199.586 427.094 192 408 192
 c f
Q Q
showpage
%%Trailer
%%EOF
