%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 94 115 630 663
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 94 115 630 663
768 768 cairo_set_page_size
%%EndPageSetup
q 94 115 536 548 rectclip
1 0 0 -1 0 768 cm q
0 g
629.09 346.656 m 629.09 204.242 521.137 105.121 365.953 105.121 c 205.152
 105.121 94.945 216.387 94.945 378.816 c 94.945 546.48 202.227 652.801 371.52
 652.801 c 412.895 652.801 452.59 646.898 482.113 636.723 c 482.113 595.348
 l 461.473 604.898 417.121 611.09 372.191 611.09 c 231.742 611.09 141.168
 520.852 141.168 380.785 c 141.168 244.273 233.375 146.496 361.68 146.496
 c 492.961 146.496 582.863 227.52 582.863 345.984 c 582.863 426.719 556.27
 478.895 514.895 478.895 c 491.277 478.895 477.84 465.453 477.84 442.414
 c 477.84 249.887 l 428.305 249.887 l 428.305 289.918 l 423.023 289.918 
l 410.254 261.359 380.734 243.645 346.223 243.645 c 279.023 243.645 232.078
 299.422 232.078 379.148 c 232.078 462.523 278.016 518.637 346.27 518.637
 c 384.668 518.637 414.191 499.918 428.301 466.461 c 433.582 466.461 l 437.469
 498.621 467.324 521.566 505.727 521.566 c 581.184 521.566 629.086 453.645
 629.086 346.703 c h
284.594 380.449 m 284.594 322.992 310.516 288.914 354.48 288.914 c 399.121
 288.914 427.633 324.34 427.633 380.449 c 427.633 436.559 398.785 472.32
 353.809 472.32 c 310.848 472.32 284.594 437.52 284.594 380.449 c f
Q Q
showpage
%%Trailer
%%EOF
