%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 47 57 315 332
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 47 57 315 332
384 384 cairo_set_page_size
%%EndPageSetup
q 47 57 268 275 rectclip
1 0 0 -1 0 384 cm q
0 g
314.543 173.328 m 314.543 102.121 260.566 52.559 182.977 52.559 c 102.578
 52.559 47.473 108.191 47.473 189.406 c 47.473 273.238 101.113 326.398 185.762
 326.398 c 206.449 326.398 226.297 323.445 241.059 318.359 c 241.059 297.672
 l 230.738 302.449 208.562 305.543 186.098 305.543 c 115.875 305.543 70.586
 260.422 70.586 190.391 c 70.586 122.133 116.691 73.246 180.844 73.246 c
 246.484 73.246 291.438 113.758 291.438 172.988 c 291.438 213.355 278.141
 239.445 257.453 239.445 c 245.645 239.445 238.926 232.727 238.926 221.207
 c 238.922 124.945 l 214.152 124.945 l 214.152 144.961 l 211.512 144.961
 l 205.129 130.68 190.367 121.824 173.113 121.824 c 139.512 121.824 116.043
 149.711 116.043 189.578 c 116.043 231.266 139.012 259.32 173.141 259.32
 c 192.34 259.32 207.102 249.961 214.156 233.23 c 216.797 233.23 l 218.742
 249.309 233.668 260.781 252.867 260.781 c 290.594 260.781 314.547 226.82
 314.547 173.348 c h
142.297 190.223 m 142.297 161.496 155.258 144.453 177.242 144.453 c 199.562
 144.453 213.816 162.164 213.816 190.223 c 213.816 218.281 199.391 236.16
 176.902 236.16 c 155.422 236.16 142.293 218.762 142.293 190.223 c f
Q Q
showpage
%%Trailer
%%EOF
