%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 189 230 1259 1326
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 189 230 1259 1326
1536 1536 cairo_set_page_size
%%EndPageSetup
q 189 230 1070 1096 rectclip
1 0 0 -1 0 1536 cm q
0 g
1258.176 693.312 m 1258.176 408.48 1042.273 210.242 731.902 210.242 c 410.301
 210.242 189.887 432.77 189.887 757.633 c 189.887 1092.961 404.445 1305.602
 743.039 1305.602 c 825.793 1305.602 905.184 1293.793 964.223 1273.441 c
 964.223 1190.688 l 922.941 1209.793 834.238 1222.176 744.383 1222.176 c
 463.488 1222.176 282.336 1041.695 282.336 761.566 c 282.336 488.543 466.75
 292.992 723.359 292.992 c 985.918 292.992 1165.727 455.039 1165.727 691.969
 c 1165.727 853.441 1112.543 957.793 1029.789 957.793 c 982.559 957.793 
955.676 930.914 955.676 884.832 c 955.68 499.777 l 856.609 499.777 l 856.609
 579.84 l 846.051 579.84 l 820.516 522.719 761.477 487.297 692.449 487.297
 c 558.051 487.297 464.16 598.848 464.16 758.305 c 464.16 925.059 556.031
 1037.281 692.543 1037.281 c 769.344 1037.281 828.383 999.84 856.605 932.93
 c 867.164 932.93 l 874.941 997.25 934.652 1043.137 1011.453 1043.137 c 
1162.363 1043.137 1258.172 907.297 1258.172 693.41 c h
569.184 760.898 m 569.184 645.988 621.023 577.828 708.961 577.828 c 798.242
 577.828 855.266 648.676 855.266 760.898 c 855.266 873.121 797.566 944.641
 707.617 944.641 c 621.695 944.641 569.184 875.039 569.184 760.898 c f
Q Q
showpage
%%Trailer
%%EOF
