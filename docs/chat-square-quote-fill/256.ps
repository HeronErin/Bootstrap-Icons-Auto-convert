%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 8 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 8 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 8 192 184 rectclip
1 0 0 -1 0 192 cm q
0 g
0 24 m 0 17.637 2.527 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c
 168 0 l 174.363 0 180.469 2.527 184.969 7.031 c 189.473 11.531 192 17.637
 192 24 c 192 120 l 192 126.363 189.473 132.469 184.969 136.969 c 180.469
 141.473 174.363 144 168 144 c 138 144 l 134.223 144 130.668 145.777 128.398
 148.801 c 105.598 179.195 l 105.602 179.195 l 103.332 182.219 99.777 183.996
 96 183.996 c 92.223 183.996 88.668 182.219 86.398 179.195 c 63.602 148.801
 l 61.332 145.777 57.777 144 54 144 c 24 144 l 17.637 144 11.531 141.473
 7.031 136.969 c 2.527 132.469 0 126.363 0 120 c h
86.328 57.191 m 85.535 56.012 84.625 54.918 83.605 53.93 c 81.992 52.285
 80.082 50.965 77.977 50.039 c 77.879 49.992 l 75.035 48.68 71.941 48 68.809
 48 c 57.312 48 48 56.953 48 68.004 c 48 79.043 57.312 87.996 68.809 87.996
 c 72.926 87.996 76.754 86.855 79.98 84.875 c 78.336 89.543 75.301 94.523
 70.262 99.516 c 69.301 100.453 68.77 101.742 68.797 103.086 c 68.82 104.426
 69.398 105.695 70.391 106.598 c 72.465 108.52 75.754 108.457 77.758 106.477
 c 93.766 90.527 94.199 73.379 89.051 62.004 c 88.293 60.324 87.383 58.719
 86.328 57.203 c h
132 84.875 m 130.367 89.543 127.32 94.523 122.281 99.516 c 121.32 100.453
 120.793 101.746 120.82 103.086 c 120.848 104.43 121.43 105.699 122.426 
106.598 c 124.488 108.52 127.777 108.457 129.781 106.477 c 145.789 90.527
 146.223 73.379 141.086 62.004 c 140.32 60.324 139.406 58.715 138.348 57.203
 c 137.559 56.02 136.645 54.922 135.625 53.93 c 134.016 52.285 132.102 50.965
 129.996 50.039 c 129.898 49.992 l 127.059 48.68 123.969 48 120.84 48 c 
109.355 48 100.031 56.953 100.031 68.004 c 100.031 79.043 109.355 87.996
 120.84 87.996 c 124.957 87.996 128.785 86.855 132.012 84.875 c h
132 84.875 m f
Q Q
showpage
%%Trailer
%%EOF
