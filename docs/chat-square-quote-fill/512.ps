%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 16 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 16 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 16 384 368 rectclip
1 0 0 -1 0 384 cm q
0 g
0 48 m 0 35.27 5.059 23.062 14.059 14.059 c 23.062 5.059 35.27 0 48 0 c
 336 0 l 348.73 0 360.938 5.059 369.941 14.059 c 378.941 23.062 384 35.27
 384 48 c 384 240 l 384 252.73 378.941 264.938 369.941 273.941 c 360.938
 282.941 348.73 288 336 288 c 276 288 l 268.445 288 261.332 291.559 256.801
 297.602 c 211.199 358.395 l 211.199 358.391 l 206.668 364.434 199.555 367.992
 192 367.992 c 184.445 367.992 177.332 364.434 172.801 358.391 c 127.199
 297.602 l 122.668 291.559 115.555 288 108 288 c 48 288 l 35.27 288 23.062
 282.941 14.059 273.941 c 5.059 264.938 0 252.73 0 240 c h
172.656 114.383 m 171.074 112.023 169.246 109.836 167.207 107.855 c 163.988
 104.566 160.168 101.93 155.953 100.078 c 155.762 99.98 l 155.762 99.984
 l 150.074 97.355 143.883 95.996 137.617 96 c 114.625 96 96 113.902 96 136.008
 c 96 158.086 114.625 175.992 137.617 175.992 c 145.848 175.992 153.504 
173.711 159.961 169.754 c 156.672 179.09 150.602 189.051 140.52 199.035 
c 140.52 199.031 l 138.602 200.906 137.539 203.488 137.59 206.168 c 137.641
 208.852 138.797 211.391 140.785 213.191 c 144.938 217.031 151.512 216.91
 155.52 212.953 c 187.535 181.059 188.398 146.762 178.105 124.008 c 176.586
 120.648 174.762 117.434 172.656 114.406 c h
264 169.754 m 260.734 179.09 254.641 189.051 244.559 199.035 c 244.559 
199.031 l 242.645 200.91 241.59 203.492 241.645 206.176 c 241.699 208.855
 242.855 211.395 244.848 213.191 c 248.977 217.031 255.551 216.91 259.559
 212.953 c 291.574 181.059 292.438 146.762 282.168 124.008 c 280.645 120.648
 278.812 117.434 276.695 114.406 c 275.113 112.039 273.289 109.844 271.246
 107.855 c 268.027 104.566 264.207 101.93 259.992 100.078 c 259.801 99.98
 l 259.801 99.984 l 254.121 97.359 247.938 96 241.68 96 c 218.711 96 200.062
 113.902 200.062 136.008 c 200.062 158.086 218.711 175.992 241.68 175.992
 c 249.91 175.992 257.566 173.711 264.023 169.754 c h
264 169.754 m f
Q Q
showpage
%%Trailer
%%EOF
