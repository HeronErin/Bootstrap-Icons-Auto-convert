%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 1 0 5 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 1 0 5 6
6 6 cairo_set_page_size
%%EndPageSetup
q 1 0 4 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.922 0.117 m 2.348 0.98 l 2.305 1.043 2.352 1.125 2.426 1.125 c 2.812 
1.125 l 2.812 3.871 l 2.754 3.824 2.688 3.789 2.621 3.758 c 2.215 3.586 
l 2.008 3.496 1.875 3.293 1.875 3.066 c 1.875 2.965 l 1.875 2.969 l 2.133
 2.875 2.289 2.613 2.242 2.344 c 2.195 2.074 1.961 1.875 1.688 1.875 c 1.414
 1.875 1.18 2.074 1.133 2.344 c 1.086 2.613 1.242 2.875 1.5 2.969 c 1.5 
3.07 l 1.5 3.066 l 1.5 3.441 1.723 3.781 2.066 3.93 c 2.469 4.102 l 2.473
 4.102 l 2.648 4.176 2.773 4.336 2.805 4.527 c 2.441 4.625 2.207 4.977 2.258
 5.352 c 2.309 5.723 2.629 6.004 3.004 6 c 3.383 6 3.699 5.715 3.746 5.344
 c 3.793 4.969 3.551 4.617 3.188 4.523 c 3.188 4.184 l 3.188 3.984 3.297
 3.797 3.473 3.695 c 4.027 3.379 l 4.301 3.223 4.477 2.938 4.5 2.625 c 4.781
 2.625 l 4.832 2.625 4.875 2.582 4.875 2.531 c 4.875 1.594 l 4.875 1.543
 4.832 1.5 4.781 1.5 c 3.844 1.5 l 3.793 1.5 3.75 1.543 3.75 1.594 c 3.75
 2.531 l 3.75 2.582 3.793 2.625 3.844 2.625 c 4.121 2.625 l 4.102 2.805 
4 2.965 3.84 3.055 c 3.285 3.371 l 3.25 3.391 3.219 3.41 3.188 3.434 c 3.188
 1.125 l 3.574 1.125 l 3.648 1.125 3.695 1.043 3.652 0.98 c 3.078 0.117 
l 3.039 0.062 2.961 0.062 2.922 0.117 c f
Q Q
showpage
%%Trailer
%%EOF
