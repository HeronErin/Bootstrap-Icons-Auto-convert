%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 18 0 78 95
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 18 0 78 95
96 96 cairo_set_page_size
%%EndPageSetup
q 18 0 60 95 rectclip
1 0 0 -1 0 96 cm q
0 g
46.754 1.871 m 37.555 15.672 l 37.25 16.133 37.223 16.723 37.484 17.207
 c 37.742 17.695 38.25 18 38.801 18 c 45 18 l 45 61.914 l 44.043 61.195 
43.008 60.598 41.91 60.125 c 35.453 57.359 l 32.141 55.941 29.996 52.684
 30 49.078 c 30 47.48 l 30 47.484 l 34.133 46.023 36.613 41.797 35.871 37.477
 c 35.129 33.156 31.383 30 27 30 c 22.617 30 18.871 33.156 18.129 37.477
 c 17.387 41.797 19.867 46.023 24 47.484 c 24 49.082 l 24 49.078 l 24 52.016
 24.859 54.887 26.477 57.336 c 28.094 59.789 30.391 61.711 33.09 62.867 
c 39.547 65.633 l 42.359 66.84 44.363 69.391 44.875 72.406 c 39.051 73.98
 35.297 79.633 36.109 85.613 c 36.918 91.59 42.043 96.039 48.074 96.004 
c 54.109 95.969 59.18 91.461 59.922 85.473 c 60.66 79.484 56.844 73.879 
51 72.371 c 51 66.961 l 51 63.73 52.73 60.746 55.535 59.141 c 64.438 54.051
 l 64.441 54.055 l 68.816 51.555 71.645 47.027 71.969 42 c 76.5 42 l 76.898
 42 77.281 41.844 77.562 41.562 c 77.844 41.281 78 40.898 78 40.5 c 78 25.5
 l 78 25.102 77.844 24.719 77.562 24.438 c 77.281 24.156 76.898 24 76.5 
24 c 61.5 24 l 60.672 24 60 24.672 60 25.5 c 60 40.5 l 60 41.328 60.672 
42 61.5 42 c 65.945 42 l 65.637 44.871 63.969 47.418 61.465 48.852 c 52.559
 53.941 l 52.023 54.254 51.504 54.594 51 54.961 c 51 18 l 57.199 18 l 57.75
 18 58.262 17.695 58.523 17.207 c 58.781 16.719 58.754 16.125 58.445 15.664
 c 49.246 1.871 l 48.969 1.453 48.5 1.203 48 1.203 c 47.5 1.203 47.031 1.453
 46.754 1.871 c f
Q Q
showpage
%%Trailer
%%EOF
