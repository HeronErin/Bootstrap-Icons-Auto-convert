%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 0 312 380
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 0 312 380
384 384 cairo_set_page_size
%%EndPageSetup
q 72 0 240 380 rectclip
1 0 0 -1 0 384 cm q
0 g
187.008 7.488 m 150.215 62.688 l 148.996 64.527 148.887 66.891 149.93 68.836
 c 150.973 70.781 153 71.996 155.207 72 c 180 72 l 180 247.656 l 176.18 
244.789 172.031 242.387 167.641 240.504 c 141.816 229.441 l 135.336 226.664
 129.812 222.043 125.938 216.156 c 122.059 210.266 119.992 203.371 120 196.32
 c 120 189.938 l 130.762 186.133 139.082 177.445 142.422 166.531 c 145.766
 155.617 143.73 143.762 136.941 134.586 c 130.152 125.41 119.414 119.996
 108 119.996 c 96.586 119.996 85.848 125.41 79.059 134.586 c 72.27 143.762
 70.234 155.617 73.578 166.531 c 76.918 177.445 85.238 186.133 96 189.938
 c 96 196.32 l 96 208.062 99.445 219.547 105.906 229.352 c 112.371 239.152
 121.566 246.844 132.359 251.473 c 158.184 262.535 l 169.434 267.359 177.461
 277.566 179.496 289.633 c 164.348 293.723 152.156 304.957 146.84 319.719
 c 141.52 334.48 143.75 350.91 152.809 363.719 c 161.867 376.531 176.613
 384.109 192.305 384.016 c 207.992 383.926 222.648 376.176 231.555 363.258
 c 240.465 350.34 242.5 333.887 237.008 319.188 c 231.52 304.492 219.195
 293.402 204 289.488 c 204 267.84 l 203.996 261.492 205.676 255.254 208.863
 249.762 c 212.047 244.27 216.629 239.719 222.145 236.566 c 257.762 216.215
 l 275.262 206.223 286.574 188.109 287.879 168 c 306 168 l 307.59 168 309.117
 167.367 310.242 166.242 c 311.367 165.117 312 163.59 312 162 c 312 102 
l 312 100.41 311.367 98.883 310.242 97.758 c 309.117 96.633 307.59 96 306
 96 c 246 96 l 242.688 96 240 98.688 240 102 c 240 162 l 240 165.312 242.688
 168 246 168 c 263.785 168 l 262.551 179.484 255.883 189.676 245.855 195.406
 c 210.238 215.762 l 208.09 217.012 206.008 218.375 204 219.84 c 204 72 
l 228.793 72 l 231.008 72 233.043 70.781 234.09 68.828 c 235.133 66.875 
235.016 64.504 233.785 62.664 c 196.992 7.488 l 195.879 5.82 194.008 4.816
 192 4.816 c 189.992 4.816 188.121 5.82 187.008 7.488 c f
Q Q
showpage
%%Trailer
%%EOF
