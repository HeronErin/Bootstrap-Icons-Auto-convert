%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48 6 m 48 2.688 45.312 0 42 0 c 38.688 0 36 2.688 36 6 c 36 12 l 24 12 
l 17.637 12 11.531 14.527 7.031 19.031 c 2.527 23.531 0 29.637 0 36 c 0 
48 l 192 48 l 192 36 l 192 29.637 189.473 23.531 184.969 19.031 c 180.469
 14.527 174.363 12 168 12 c 156 12 l 156 6 l 156 2.688 153.312 0 150 0 c
 146.688 0 144 2.688 144 6 c 144 12 l 48 12 l h
112.824 122.953 m 120.324 122.953 127.031 117.145 127.031 108.793 c 127.031
 98.809 120.707 94.031 113.109 94.031 c 106.078 94.031 99.094 98.676 99.094
 108.551 c 99.094 118.355 105.609 122.949 112.82 122.949 c f
192 168 m 192 60 l 0 60 l 0 168 l 0 174.363 2.527 180.469 7.031 184.969
 c 11.531 189.473 17.637 192 24 192 c 168 192 l 174.363 192 180.469 189.473
 184.969 184.969 c 189.473 180.469 192 174.363 192 168 c 112.031 153.48 
m 98.711 153.48 92.16 144.277 91.594 136.598 c 99.789 136.598 l 100.305 
141.039 104.434 146.438 112.402 146.438 c 122.531 146.438 128.016 136.262
 128.062 120.469 c 127.738 120.469 l 125.902 125.438 120.094 129.949 111.141
 129.949 c 100.918 129.949 91.027 122.629 91.027 108.711 c 91.027 95.066
 101.48 87.004 112.59 87.004 c 126.652 87.004 136.027 95.812 136.027 119.02
 c 136.027 140.68 127.125 153.473 112.027 153.473 c h
77.352 88.262 m 77.352 152.246 l 69.238 152.242 l 69.238 96.949 l 69.094
 96.949 l 65.613 98.82 58.496 103.188 53.996 106.273 c 54 97.922 l 59.055
 94.391 64.316 91.164 69.758 88.262 c h
77.352 88.262 m f
Q Q
showpage
%%Trailer
%%EOF
