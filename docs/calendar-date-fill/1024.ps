%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
192 24 m 192 15.426 187.426 7.504 180 3.215 c 172.574 -1.07 163.426 -1.07
 156 3.215 c 148.574 7.504 144 15.426 144 24 c 144 48 l 96 48 l 70.539 48
 46.121 58.113 28.117 76.117 c 10.113 94.121 0 118.539 0 144 c 0 192 l 768
 192 l 768 144 l 768 118.539 757.887 94.121 739.883 76.117 c 721.879 58.113
 697.461 48 672 48 c 624 48 l 624 24 l 624 15.426 619.426 7.504 612 3.215
 c 604.574 -1.07 595.426 -1.07 588 3.215 c 580.574 7.504 576 15.426 576 
24 c 576 48 l 192 48 l h
451.297 491.809 m 481.297 491.809 508.129 468.578 508.129 435.168 c 508.129
 395.23 482.832 376.129 452.449 376.129 c 424.32 376.129 396.387 394.703
 396.387 434.207 c 396.387 473.422 422.449 491.809 451.297 491.809 c f
768 672 m 768 240 l 0 240 l 0 672 l 0 697.461 10.113 721.879 28.117 739.883
 c 46.121 757.887 70.539 768 96 768 c 672 768 l 697.461 768 721.879 757.887
 739.883 739.883 c 757.887 721.879 768 697.461 768 672 c 448.129 613.922
 m 394.848 613.922 368.641 577.105 366.387 546.387 c 399.172 546.387 l 401.234
 564.148 417.746 585.746 449.621 585.746 c 490.133 585.746 512.07 545.043
 512.262 481.875 c 510.965 481.875 l 503.621 501.746 480.391 519.797 444.582
 519.797 c 403.688 519.797 364.133 490.516 364.133 434.836 c 364.133 380.262
 405.941 348.004 450.391 348.004 c 506.648 348.004 544.133 383.234 544.133
 476.066 c 544.133 562.707 508.516 613.875 448.133 613.875 c h
309.41 353.043 m 309.41 608.98 l 276.961 608.977 l 276.961 387.793 l 276.387
 387.793 l 262.465 395.281 234.004 412.754 216.004 425.09 c 216 391.68 l
 236.227 377.566 257.27 364.664 279.023 353.039 c 309.359 353.039 l h
309.41 353.043 m f
Q Q
showpage
%%Trailer
%%EOF
