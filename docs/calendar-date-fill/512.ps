%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
96 12 m 96 5.371 90.629 0 84 0 c 77.371 0 72 5.371 72 12 c 72 24 l 48 24
 l 35.27 24 23.062 29.059 14.059 38.059 c 5.059 47.062 0 59.27 0 72 c 0 
96 l 384 96 l 384 72 l 384 59.27 378.941 47.062 369.941 38.059 c 360.938
 29.059 348.73 24 336 24 c 312 24 l 312 12 l 312 5.371 306.629 0 300 0 c
 293.371 0 288 5.371 288 12 c 288 24 l 96 24 l h
225.648 245.902 m 240.648 245.902 254.062 234.285 254.062 217.582 c 254.062
 197.613 241.414 188.062 226.223 188.062 c 212.16 188.062 198.191 197.352
 198.191 217.102 c 198.191 236.711 211.223 245.902 225.648 245.902 c f
384 336 m 384 120 l 0 120 l 0 336 l 0 348.73 5.059 360.938 14.059 369.941
 c 23.062 378.941 35.27 384 48 384 c 336 384 l 348.73 384 360.938 378.941
 369.941 369.941 c 378.941 360.938 384 348.73 384 336 c 224.062 306.961 
m 197.422 306.961 184.32 288.555 183.191 273.191 c 199.582 273.191 l 200.613
 282.07 208.871 292.871 224.805 292.871 c 245.062 292.871 256.027 272.52
 256.125 240.934 c 255.477 240.934 l 251.805 250.871 240.188 259.895 222.285
 259.895 c 201.836 259.895 182.062 245.254 182.062 217.414 c 182.062 190.125
 202.965 174 225.191 174 c 253.32 174 272.062 191.617 272.062 238.031 c 
272.062 281.352 254.254 306.934 224.062 306.934 c h
154.703 176.52 m 154.703 304.488 l 138.48 304.488 l 138.48 193.895 l 138.191
 193.895 l 131.23 197.637 117 206.375 108 212.543 c 108 195.84 l 118.113
 188.781 128.637 182.332 139.512 176.52 c h
154.703 176.52 m f
Q Q
showpage
%%Trailer
%%EOF
