%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 336 360 rectclip
1 0 0 -1 0 384 cm q
0 g
290.305 149.352 m 297.957 145.922 305.227 141.699 312 136.754 c 312 168
 l 312 174.938 306.887 183.695 293.93 192.168 c 308.211 191.363 322.512 
193.402 336 198.168 c 336 96 l 336 71.832 315 53.879 290.305 42.648 c 264.527
 30.938 229.754 24 192 24 c 154.246 24 119.473 30.938 93.695 42.648 c 69
 53.879 48 71.832 48 96 c 48 312 l 48 336.168 69 354.121 93.695 365.352 
c 119.473 377.039 154.246 384 192 384 c 204.863 384 217.391 383.184 229.32
 381.672 c 221.824 375.188 215.262 367.699 209.809 359.426 c 203.984 359.809
 198.047 360 192 360 c 156.863 360 125.617 353.52 103.633 343.512 c 80.543
 333 72 320.953 72 312 c 72 280.754 l 78.504 285.602 85.922 289.824 93.695
 293.355 c 119.473 305.039 154.246 312 192 312 c 192.648 312 l 191.777 304.023
 191.777 295.977 192.648 288 c 192 288 l 156.863 288 125.617 281.52 103.633
 271.512 c 80.543 261 72 248.953 72 240 c 72 208.754 l 78.504 213.602 85.922
 217.824 93.695 221.355 c 119.473 233.039 154.246 240 192 240 c 198.289 
240 204.48 239.809 210.574 239.426 c 217.723 228.879 226.676 219.68 237.023
 212.258 c 223.152 214.656 207.984 216 192 216 c 156.863 216 125.617 209.52
 103.633 199.512 c 80.543 189 72 176.953 72 168 c 72 136.754 l 78.504 141.602
 85.922 145.824 93.695 149.355 c 119.473 161.062 154.246 168 192 168 c 229.754
 168 264.527 161.062 290.305 149.352 c 72 96 m 72 87.023 80.543 75 103.633
 64.488 c 125.617 54.504 156.863 48 192 48 c 227.137 48 258.383 54.48 280.367
 64.488 c 303.457 75 312 87.047 312 96 c 312 104.977 303.457 117 280.367
 127.512 c 258.383 137.496 227.137 144 192 144 c 156.863 144 125.617 137.52
 103.633 127.512 c 80.543 117 72 104.953 72 96 c f
300 384 m 330.012 384 357.742 367.988 372.746 342 c 387.75 316.012 387.75
 283.988 372.746 258 c 357.742 232.012 330.012 216 300 216 c 269.988 216
 242.258 232.012 227.254 258 c 212.25 283.988 212.25 316.012 227.254 342
 c 242.258 367.988 269.988 384 300 384 c 284.496 267.504 m 300 283.031 l
 315.504 267.504 l 320.195 262.812 327.805 262.812 332.496 267.504 c 337.188
 272.195 337.188 279.805 332.496 284.496 c 316.969 300 l 332.496 315.504
 l 337.188 320.195 337.188 327.805 332.496 332.496 c 327.805 337.188 320.195
 337.188 315.504 332.496 c 300 316.969 l 284.496 332.496 l 279.805 337.188
 272.195 337.188 267.504 332.496 c 262.812 327.805 262.812 320.195 267.504
 315.504 c 283.031 300 l 267.504 284.496 l 262.812 279.805 262.812 272.195
 267.504 267.504 c 272.195 262.812 279.805 262.812 284.496 267.504 c f
Q Q
showpage
%%Trailer
%%EOF
