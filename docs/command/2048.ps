%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 96 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 96 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 96 1344 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 192 m 374.191 192 410.816 207.172 437.824 234.176 c 464.828 261.184
 480 297.809 480 336 c 480 480 l 336 480 l 284.555 480 237.016 452.555 211.293
 408 c 185.57 363.445 185.57 308.555 211.293 264 c 237.016 219.445 284.555
 192 336 192 c 576 480 m 576 336 l 576 272.348 550.715 211.305 505.707 166.293
 c 460.695 121.285 399.652 96 336 96 c 272.348 96 211.305 121.285 166.293
 166.293 c 121.285 211.305 96 272.348 96 336 c 96 399.652 121.285 460.695
 166.293 505.707 c 211.305 550.715 272.348 576 336 576 c 480 576 l 480 960
 l 336 960 l 272.348 960 211.305 985.285 166.293 1030.293 c 121.285 1075.305
 96 1136.348 96 1200 c 96 1263.652 121.285 1324.695 166.293 1369.707 c 211.305
 1414.715 272.348 1440 336 1440 c 399.652 1440 460.695 1414.715 505.707 
1369.707 c 550.715 1324.695 576 1263.652 576 1200 c 576 1056 l 960 1056 
l 960 1200 l 960 1263.652 985.285 1324.695 1030.293 1369.707 c 1075.305 
1414.715 1136.348 1440 1200 1440 c 1263.652 1440 1324.695 1414.715 1369.707
 1369.707 c 1414.715 1324.695 1440 1263.652 1440 1200 c 1440 1136.348 1414.715
 1075.305 1369.707 1030.293 c 1324.695 985.285 1263.652 960 1200 960 c 1056
 960 l 1056 576 l 1200 576 l 1263.652 576 1324.695 550.715 1369.707 505.707
 c 1414.715 460.695 1440 399.652 1440 336 c 1440 272.348 1414.715 211.305
 1369.707 166.293 c 1324.695 121.285 1263.652 96 1200 96 c 1136.348 96 1075.305
 121.285 1030.293 166.293 c 985.285 211.305 960 272.348 960 336 c 960 480
 l h
960 576 m 960 960 l 576 960 l 576 576 l h
1056 480 m 1056 336 l 1056 297.809 1071.172 261.184 1098.176 234.176 c 
1125.184 207.172 1161.809 192 1200 192 c 1238.191 192 1274.816 207.172 1301.824
 234.176 c 1328.828 261.184 1344 297.809 1344 336 c 1344 374.191 1328.828
 410.816 1301.824 437.824 c 1274.816 464.828 1238.191 480 1200 480 c h
1056 1056 m 1200 1056 l 1238.191 1056 1274.816 1071.172 1301.824 1098.176
 c 1328.828 1125.184 1344 1161.809 1344 1200 c 1344 1238.191 1328.828 1274.816
 1301.824 1301.824 c 1274.816 1328.828 1238.191 1344 1200 1344 c 1161.809
 1344 1125.184 1328.828 1098.176 1301.824 c 1071.172 1274.816 1056 1238.191
 1056 1200 c h
480 1056 m 480 1200 l 480 1238.191 464.828 1274.816 437.824 1301.824 c 
410.816 1328.828 374.191 1344 336 1344 c 297.809 1344 261.184 1328.828 234.176
 1301.824 c 207.172 1274.816 192 1238.191 192 1200 c 192 1161.809 207.172
 1125.184 234.176 1098.176 c 261.184 1071.172 297.809 1056 336 1056 c h
480 1056 m f
Q Q
showpage
%%Trailer
%%EOF
