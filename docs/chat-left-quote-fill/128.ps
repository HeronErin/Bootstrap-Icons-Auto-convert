%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 4 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 4 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 4 96 92 rectclip
1 0 0 -1 0 96 cm q
0 g
0 12 m 0 5.371 5.371 0 12 0 c 84 0 l 87.184 0 90.234 1.266 92.484 3.516
 c 94.734 5.766 96 8.816 96 12 c 96 60 l 96 63.184 94.734 66.234 92.484 
68.484 c 90.234 70.734 87.184 72 84 72 c 26.484 72 l 24.895 72 23.367 72.633
 22.242 73.758 c 5.125 90.875 l 4.266 91.734 2.977 91.992 1.855 91.531 c
 0.73 91.066 0 89.973 0 88.758 c h
43.164 28.598 m 42.77 28.008 42.312 27.461 41.801 26.965 c 40.996 26.141
 40.043 25.48 38.988 25.02 c 38.941 24.996 l 37.52 24.34 35.969 24 34.402
 24 c 28.656 24 24 28.477 24 34.004 c 24 39.523 28.656 44 34.402 44 c 36.461
 44 38.375 43.43 39.988 42.441 c 39.168 44.777 37.648 47.266 35.129 49.762
 c 35.129 49.758 l 34.648 50.227 34.387 50.871 34.398 51.543 c 34.41 52.211
 34.699 52.848 35.195 53.297 c 36.234 54.258 37.879 54.227 38.879 53.238
 c 46.883 45.266 47.098 36.691 44.523 31.004 c 44.527 31.004 l 44.148 30.16
 43.691 29.359 43.164 28.602 c h
66 42.438 m 65.184 44.773 63.66 47.262 61.141 49.758 c 60.66 50.227 60.398
 50.875 60.41 51.543 c 60.426 52.215 60.715 52.848 61.211 53.297 c 62.242
 54.258 63.887 54.227 64.891 53.238 c 72.895 45.266 73.109 36.691 70.543
 31.004 c 70.16 30.16 69.703 29.359 69.176 28.602 c 68.777 28.012 68.32 
27.461 67.812 26.965 c 67.008 26.141 66.051 25.48 64.996 25.02 c 64.949 
24.996 l 63.531 24.34 61.984 24 60.422 24 c 54.68 24 50.02 28.477 50.02 
34.004 c 50.02 39.523 54.68 44 60.422 44 c 62.48 44 64.395 43.43 66.008 
42.441 c h
66 42.438 m f
Q Q
showpage
%%Trailer
%%EOF
