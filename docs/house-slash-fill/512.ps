%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 11 0 384 356
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 11 0 384 356
384 384 cairo_set_page_size
%%EndPageSetup
q 11 0 373 356 rectclip
1 0 0 -1 0 384 cm q
0 g
208.969 36 m 204.469 31.5 198.363 28.973 192 28.973 c 185.637 28.973 179.531
 31.5 175.031 36 c 15.504 195.504 l 10.812 200.195 10.812 207.805 15.504
 212.496 c 20.195 217.188 27.805 217.188 32.496 212.496 c 192 52.969 l 351.504
 212.496 l 356.195 217.188 363.805 217.188 368.496 212.496 c 373.188 207.805
 373.188 200.195 368.496 195.504 c 312 139.031 l 312 60 l 312 56.816 310.734
 53.766 308.484 51.516 c 306.234 49.266 303.184 48 300 48 c 276 48 l 269.371
 48 264 53.371 264 60 c 264 91.031 l h
208.969 36 m f
192 79.031 m 305.09 192.121 l 278.332 190.855 252.059 199.582 231.371 216.602
 c 210.688 233.621 197.066 257.719 193.152 284.219 c 189.238 310.719 195.309
 337.727 210.191 360 c 84 360 l 74.453 360 65.297 356.207 58.543 349.457
 c 51.793 342.703 48 333.547 48 324 c 48 223.031 l h
192 79.031 m f
333.098 249.938 m 317.59 239.66 298.199 237.156 280.59 243.156 c 262.984
 249.156 249.156 262.984 243.156 280.59 c 237.156 298.199 239.66 317.59 
249.938 333.098 c h
350.066 266.906 m 266.906 350.066 l 266.902 350.062 l 282.41 360.297 301.785
 362.773 319.367 356.77 c 336.953 350.762 350.762 336.953 356.77 319.367
 c 362.773 301.785 360.297 282.41 350.062 266.902 c 240.621 240.598 m 240.625
 240.602 l 256.324 224.586 277.77 215.516 300.195 215.406 c 322.617 215.297
 344.156 224.156 360.008 240.016 c 375.863 255.871 384.719 277.41 384.605
 299.836 c 384.492 322.258 375.414 343.703 359.398 359.398 c 338.18 380.621
 307.246 388.91 278.258 381.141 c 249.27 373.375 226.625 350.73 218.859 
321.742 c 211.09 292.754 219.379 261.82 240.602 240.602 c h
240.621 240.598 m f
Q Q
showpage
%%Trailer
%%EOF
