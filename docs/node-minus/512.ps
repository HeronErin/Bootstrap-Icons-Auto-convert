%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
264 96 m 229.703 96 198.012 114.297 180.863 144 c 163.711 173.703 163.711
 210.297 180.863 240 c 198.012 269.703 229.703 288 264 288 c 298.297 288
 329.988 269.703 347.137 240 c 364.289 210.297 364.289 173.703 347.137 144
 c 329.988 114.297 298.297 96 264 96 c 144.602 180 m 148.746 138.766 173.871
 102.586 211.066 84.305 c 248.262 66.023 292.254 68.23 327.434 90.137 c 
362.613 112.047 384 150.555 384 192 c 384 233.445 362.613 271.953 327.434
 293.863 c 292.254 315.77 248.262 317.977 211.066 299.695 c 173.871 281.414
 148.746 245.234 144.602 204 c 96 204 l 96 213.547 92.207 222.703 85.457
 229.457 c 78.703 236.207 69.547 240 60 240 c 36 240 l 26.453 240 17.297
 236.207 10.543 229.457 c 3.793 222.703 0 213.547 0 204 c 0 180 l 0 170.453
 3.793 161.297 10.543 154.543 c 17.297 147.793 26.453 144 36 144 c 60 144
 l 69.547 144 78.703 147.793 85.457 154.543 c 92.207 161.297 96 170.453 
96 180 c h
36 168 m 29.371 168 24 173.371 24 180 c 24 204 l 24 207.184 25.266 210.234
 27.516 212.484 c 29.766 214.734 32.816 216 36 216 c 60 216 l 63.184 216
 66.234 214.734 68.484 212.484 c 70.734 210.234 72 207.184 72 204 c 72 180
 l 72 176.816 70.734 173.766 68.484 171.516 c 66.234 169.266 63.184 168 
60 168 c h
192 192 m 192 185.371 197.371 180 204 180 c 324 180 l 330.629 180 336 185.371
 336 192 c 336 198.629 330.629 204 324 204 c 204 204 l 197.371 204 192 198.629
 192 192 c f*
Q Q
showpage
%%Trailer
%%EOF
