%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 13 48 39
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 13 48 39
48 48 cairo_set_page_size
%%EndPageSetup
q 0 13 48 26 rectclip
1 0 0 -1 0 48 cm q
0 g
24 9 m 24.398 9 24.781 9.156 25.062 9.438 c 25.344 9.719 25.5 10.102 25.5
 10.5 c 25.5 16.5 l 25.5 17.328 24.828 18 24 18 c 23.172 18 22.5 17.328 
22.5 16.5 c 22.5 10.5 l 22.5 9.672 23.172 9 24 9 c 48 33 m 48 33.398 47.844
 33.781 47.562 34.062 c 47.281 34.344 46.898 34.5 46.5 34.5 c 40.5 34.5 
l 39.672 34.5 39 33.828 39 33 c 39 32.172 39.672 31.5 40.5 31.5 c 46.5 31.5
 l 46.898 31.5 47.281 31.656 47.562 31.938 c 47.844 32.219 48 32.602 48 
33 c 7.5 34.5 m 8.328 34.5 9 33.828 9 33 c 9 32.172 8.328 31.5 7.5 31.5 
c 1.5 31.5 l 0.672 31.5 0 32.172 0 33 c 0 33.828 0.672 34.5 1.5 34.5 c h
40.973 16.027 m 41.555 16.613 41.555 17.562 40.973 18.148 c 36.73 22.391
 l 36.449 22.68 36.066 22.848 35.664 22.852 c 35.262 22.852 34.875 22.695
 34.59 22.41 c 34.305 22.125 34.148 21.738 34.148 21.336 c 34.152 20.934
 34.32 20.551 34.609 20.27 c 38.852 16.027 l 39.438 15.445 40.387 15.445
 40.973 16.027 c 11.273 22.391 m 11.27 22.391 l 11.859 22.961 12.797 22.953
 13.375 22.375 c 13.953 21.797 13.961 20.859 13.391 20.27 c 9.148 16.027
 l 8.871 15.738 8.488 15.574 8.086 15.57 c 7.684 15.566 7.293 15.727 7.012
 16.012 c 6.727 16.293 6.566 16.684 6.57 17.086 c 6.574 17.488 6.738 17.871
 7.027 18.148 c h
24 21 m 17.371 21 12 26.371 12 33 c 12 33.398 12.156 33.781 12.438 34.062
 c 12.719 34.344 13.102 34.5 13.5 34.5 c 34.5 34.5 l 34.898 34.5 35.281 
34.344 35.562 34.062 c 35.844 33.781 36 33.398 36 33 c 36 29.816 34.734 
26.766 32.484 24.516 c 30.234 22.266 27.184 21 24 21 c 24 24 m 28.395 24
 32.145 27.168 32.879 31.5 c 15.121 31.5 l 15.852 27.168 19.605 23.996 24
 24 c f
Q Q
showpage
%%Trailer
%%EOF
