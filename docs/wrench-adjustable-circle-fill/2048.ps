%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
643.68 781.344 m 647.434 775.75 648.66 768.84 647.07 762.297 c 645.477 
755.754 641.207 750.18 635.305 746.938 c 629.402 743.695 622.41 743.082 
616.031 745.246 c 472.031 793.246 l 487.297 838.75 l 564.863 812.828 l 507.742
 898.652 l 507.742 898.656 l 504.016 904.238 502.797 911.129 504.383 917.652
 c 505.965 924.176 510.211 929.738 516.086 932.984 c 521.961 936.234 528.926
 936.875 535.297 934.754 c 612.863 908.832 l 555.742 994.656 l 552.016 1000.238
 550.797 1007.129 552.383 1013.652 c 553.965 1020.176 558.211 1025.738 564.086
 1028.984 c 569.961 1032.234 576.926 1032.875 583.297 1030.754 c 727.297
 982.754 l 712.031 937.25 l 634.465 963.172 l 691.68 877.348 l 691.68 877.344
 l 695.434 871.75 696.66 864.84 695.07 858.297 c 693.477 851.754 689.207
 846.18 683.305 842.938 c 677.402 839.695 670.41 839.082 664.031 841.246
 c 586.465 867.168 l h
643.68 781.344 m f
768 1536 m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 
1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 
224.941 c 1167.031 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941
 224.941 c 80.914 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941
 1311.059 c 368.969 1455.086 564.312 1536 768 1536 c 172.609 1079.902 m 
363.457 920.832 l 327.793 826.781 326.062 723.238 358.566 628.051 c 391.074
 532.863 455.773 452 541.516 399.41 c 627.254 346.82 728.66 325.797 828.242
 339.965 c 927.824 354.133 1019.34 402.605 1087.008 477.023 c 719.711 624
 l 815.711 864 l 943.68 1162.559 l 889.918 1186.656 830.398 1200 767.711
 1200 c 715.504 1200.031 663.723 1190.598 614.879 1172.16 c 455.711 1363.199
 l 334.852 1299.59 236.137 1200.809 172.609 1079.902 c 1199.617 768 m 1199.629
 833.094 1184.93 897.348 1156.621 955.961 c 1128.309 1014.578 1087.121 1066.035
 1036.129 1106.496 c 911.711 816 l 1195.773 709.441 l 1198.332 728.641 1199.613
 748.16 1199.613 768 c f
Q Q
showpage
%%Trailer
%%EOF
