%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 23 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 23 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 23 672 745 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 388.996 -0.004 393.871 1.555 397.941 4.453 c 402.012 7.352 405.074
 11.453 406.703 16.176 c 434.207 96 l 672 96 l 684.73 96 696.938 101.059
 705.941 110.059 c 714.941 119.062 720 131.27 720 144 c 720 480 l 720 492.73
 714.941 504.938 705.941 513.941 c 696.938 522.941 684.73 528 672 528 c 
583.199 528 l 646.703 712.176 l 649.5 720.289 647.754 729.273 642.129 735.75
 c 636.5 742.227 627.848 745.211 619.422 743.574 c 611 741.938 604.09 735.934
 601.297 727.824 c 532.414 528 l 408 528 l 408 672 l 408 680.574 403.426
 688.496 396 692.785 c 388.574 697.07 379.426 697.07 372 692.785 c 364.574
 688.496 360 680.574 360 672 c 360 528 l 235.586 528 l 166.707 727.824 l
 166.703 727.824 l 163.91 735.934 157 741.938 148.578 743.574 c 140.152 
745.211 131.5 742.227 125.871 735.75 c 120.246 729.273 118.5 720.289 121.297
 712.176 c 184.801 528 l 96 528 l 83.27 528 71.062 522.941 62.059 513.941
 c 53.059 504.938 48 492.73 48 480 c 48 144 l 48 131.27 53.059 119.062 62.059
 110.059 c 71.062 101.059 83.27 96 96 96 c 333.793 96 l 361.297 16.176 l
 362.926 11.453 365.988 7.352 370.059 4.453 c 374.129 1.555 379.004 -0.004
 384 0 c 96 144 m 96 480 l 672 480 l 672 144 l h
96 144 m f
Q Q
showpage
%%Trailer
%%EOF
