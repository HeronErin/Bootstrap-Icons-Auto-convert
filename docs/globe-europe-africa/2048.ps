%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 564.312 0 368.969 80.914 224.941 224.941 c 80.914 368.969 0 564.312
 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 368.969 1455.086 564.312
 1536 768 1536 c 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086
 1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059
 224.941 c 1167.031 80.914 971.688 0 768 0 c 352.129 240.098 m 324.48 302.113
 l 313.148 327.191 315.27 356.301 330.117 379.473 c 344.969 402.645 370.531
 416.73 398.051 416.906 c 425.574 417.086 451.316 403.328 466.465 380.352
 c 489.984 345.023 l 500.492 329.309 516.367 317.961 534.637 313.102 c 552.906
 308.242 572.32 310.207 589.246 318.625 c 611.125 329.555 636.875 329.555
 658.754 318.625 c 683.809 306.145 l 706.949 294.586 733.773 292.855 758.207
 301.344 c 852.672 333.984 l 860.223 336.543 868 338.273 876 339.168 c 951.266
 348.098 958.078 375.359 942.625 416.062 c 927.746 455.422 883.488 475.293
 843.266 462.816 c 842.305 462.527 l 794.305 447.648 743.809 432 576 432
 c 460.801 432 336 539.52 336 672 c 336 860.16 415.297 879.938 498.816 900.672
 c 542.977 911.711 588.578 923.039 624 960 c 667.105 1004.832 661.727 1073.375
 656.543 1140.191 c 648.48 1244.16 640.703 1344 816 1344 c 984 1344 1104
 1008 1104 912 c 1104 886.848 1123.969 867.07 1146.625 844.801 c 1184.641
 807.168 1230.145 762.242 1200 672 c 1190.688 644.062 1161.984 617.473 1138.465
 599.426 c 1121.762 586.656 1118.594 561.41 1133.473 546.531 c 1133.473 
546.527 l 1138.664 541.25 1145.539 537.961 1152.902 537.223 c 1160.27 536.484
 1167.66 538.352 1173.793 542.496 c 1277.953 612 l 1288.512 618.91 1302.434
 617.566 1311.359 608.641 c 1325.758 594.242 1351.199 600.672 1358.305 619.871
 c 1373.664 661.152 1401.023 720.672 1439.809 750.145 c 1440 768 l 1439.988
 920.461 1388.137 1068.387 1292.953 1187.488 c 1197.773 1306.586 1064.918
 1389.781 916.215 1423.406 c 767.508 1457.031 611.785 1439.09 474.621 1372.531
 c 337.457 1305.969 227.004 1194.746 161.398 1057.121 c 95.793 919.5 78.934
 763.656 113.594 615.188 c 148.254 466.719 232.371 334.449 352.129 240.098
 c f
Q Q
showpage
%%Trailer
%%EOF
