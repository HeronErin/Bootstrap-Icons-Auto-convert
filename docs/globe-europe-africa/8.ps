%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 1.344 0 0 1.344 0 3 c 0 4.656 1.344 6 3 6 c 4.656 6 6 4.656 6 3 c
 6 1.344 4.656 0 3 0 c 1.375 0.938 m 1.266 1.18 l 1.199 1.332 1.258 1.508
 1.402 1.59 c 1.547 1.668 1.73 1.625 1.82 1.484 c 1.914 1.348 l 2 1.223 
2.164 1.176 2.301 1.246 c 2.387 1.289 2.488 1.289 2.574 1.246 c 2.672 1.199
 l 2.672 1.195 l 2.762 1.152 2.867 1.145 2.961 1.176 c 3.328 1.305 l 3.359
 1.316 3.387 1.32 3.418 1.324 c 3.711 1.359 3.738 1.465 3.68 1.625 c 3.621
 1.777 3.449 1.855 3.293 1.809 c 3.289 1.809 l 3.102 1.75 2.906 1.688 2.25
 1.688 c 1.801 1.688 1.312 2.109 1.312 2.625 c 1.312 3.359 1.621 3.438 1.949
 3.52 c 2.121 3.562 2.301 3.605 2.438 3.75 c 2.605 3.926 2.586 4.191 2.566
 4.453 c 2.531 4.859 2.504 5.25 3.188 5.25 c 3.844 5.25 4.312 3.938 4.312
 3.562 c 4.312 3.465 4.391 3.387 4.48 3.301 c 4.629 3.152 4.809 2.977 4.688
 2.625 c 4.652 2.516 4.539 2.41 4.445 2.34 c 4.379 2.289 4.367 2.191 4.426
 2.133 c 4.426 2.137 l 4.469 2.094 4.535 2.086 4.586 2.117 c 4.992 2.391
 l 5.035 2.418 5.086 2.414 5.121 2.379 c 5.176 2.324 5.277 2.348 5.305 2.422
 c 5.363 2.582 5.473 2.816 5.625 2.93 c 5.625 3 l 5.625 3.902 5.16 4.746
 4.395 5.223 c 3.625 5.703 2.668 5.758 1.855 5.363 c 1.039 4.965 0.488 4.18
 0.391 3.281 c 0.293 2.383 0.664 1.496 1.375 0.938 c f
Q Q
showpage
%%Trailer
%%EOF
