%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 0 m 61.703 0 30.012 18.297 12.863 48 c -4.289 77.703 -4.289 114.297 
12.863 144 c 30.012 173.703 61.703 192 96 192 c 130.297 192 161.988 173.703
 179.137 144 c 196.289 114.297 196.289 77.703 179.137 48 c 161.988 18.297
 130.297 0 96 0 c 44.016 30.012 m 40.559 37.766 l 38.375 42.594 40.273 48.293
 44.918 50.852 c 49.559 53.41 55.391 51.969 58.309 47.543 c 61.25 43.129
 l 61.246 43.129 l 63.965 39.062 69.277 37.652 73.656 39.828 c 76.391 41.195
 79.609 41.195 82.344 39.828 c 85.477 38.27 l 88.367 36.824 91.723 36.605
 94.777 37.668 c 106.586 41.746 l 107.531 42.066 108.5 42.281 109.5 42.395
 c 118.906 43.512 119.762 46.918 117.828 52.008 c 115.969 56.93 110.438 
59.41 105.406 57.852 c 105.285 57.816 l 99.289 55.957 92.977 54 72 54 c 
57.602 54 42 67.441 42 84 c 42 107.52 51.91 109.992 62.352 112.586 c 67.871
 113.965 73.57 115.383 78 120 c 83.387 125.605 82.715 134.172 82.066 142.523
 c 81.059 155.52 80.09 168 102 168 c 123 168 138 126 138 114 c 138 110.855
 140.496 108.383 143.328 105.602 c 148.082 100.898 153.77 95.281 150 84 
c 148.836 80.508 145.246 77.184 142.309 74.93 c 140.219 73.332 139.824 70.176
 141.684 68.316 c 143.023 66.953 145.141 66.742 146.723 67.812 c 159.742
 76.5 l 161.062 77.363 162.801 77.195 163.918 76.078 c 165.719 74.277 168.898
 75.082 169.785 77.48 c 171.707 82.641 175.125 90.082 179.973 93.766 c 180
 96 l 179.996 124.934 165.105 151.832 140.582 167.188 c 116.059 182.543 
85.359 184.199 59.328 171.566 c 33.297 158.934 15.598 133.793 12.488 105.027
 c 9.375 76.262 21.289 47.918 44.016 30.012 c f
Q Q
showpage
%%Trailer
%%EOF
