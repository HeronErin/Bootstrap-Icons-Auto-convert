%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
960 288 m 985.461 288 1009.879 298.113 1027.883 316.117 c 1045.887 334.121
 1056 358.539 1056 384 c 1056 1152 l 1056 1177.461 1045.887 1201.879 1027.883
 1219.883 c 1009.879 1237.887 985.461 1248 960 1248 c 576 1248 l 550.539
 1248 526.121 1237.887 508.117 1219.883 c 490.113 1201.879 480 1177.461 
480 1152 c 480 384 l 480 358.539 490.113 334.121 508.117 316.117 c 526.121
 298.113 550.539 288 576 288 c h
576 192 m 525.078 192 476.242 212.227 440.234 248.234 c 404.227 284.242
 384 333.078 384 384 c 384 1152 l 384 1185.703 392.871 1218.812 409.723 
1248 c 426.574 1277.188 450.812 1301.426 480 1318.277 c 509.188 1335.129
 542.297 1344 576 1344 c 960 1344 l 993.703 1344 1026.812 1335.129 1056 
1318.277 c 1085.188 1301.426 1109.426 1277.188 1126.277 1248 c 1143.129 
1218.812 1152 1185.703 1152 1152 c 1152 384 l 1152 350.297 1143.129 317.188
 1126.277 288 c 1109.426 258.812 1085.188 234.574 1056 217.723 c 1026.812
 200.871 993.703 192 960 192 c h
576 192 m f
768 1152 m 802.297 1152 833.988 1133.703 851.137 1104 c 868.289 1074.297
 868.289 1037.703 851.137 1008 c 833.988 978.297 802.297 960 768 960 c 733.703
 960 702.012 978.297 684.863 1008 c 667.711 1037.703 667.711 1074.297 684.863
 1104 c 702.012 1133.703 733.703 1152 768 1152 c 153.504 389.566 m 164.762
 395.523 173.188 405.707 176.934 417.879 c 180.68 430.051 179.434 443.211
 173.473 454.465 c 122.543 551.125 95.953 658.742 96 768 c 96 881.281 124.031
 988.031 173.473 1081.535 c 181.496 1096.695 180.824 1114.984 171.711 1129.516
 c 162.594 1144.047 146.418 1152.609 129.277 1151.98 c 112.137 1151.352 
96.633 1141.625 88.609 1126.465 c 30.359 1015.961 -0.055 892.914 0 768 c
 0 638.688 32.062 516.574 88.609 409.535 c 94.562 398.281 104.746 389.852
 116.918 386.105 c 129.09 382.363 142.25 383.605 153.504 389.566 c 1382.496
 389.566 m 1393.75 383.605 1406.91 382.363 1419.082 386.105 c 1431.254 389.852
 1441.438 398.281 1447.391 409.535 c 1505.641 520.039 1536.055 643.086 1536
 768 c 1536.055 892.914 1505.641 1015.961 1447.391 1126.465 c 1439.367 1141.625
 1423.863 1151.352 1406.723 1151.98 c 1389.582 1152.609 1373.406 1144.047
 1364.289 1129.516 c 1355.176 1114.984 1354.504 1096.695 1362.527 1081.535
 c 1413.457 984.875 1440.047 877.258 1440 768 c 1440 654.719 1411.969 547.969
 1362.527 454.465 c 1356.566 443.211 1355.32 430.051 1359.066 417.879 c 
1362.812 405.707 1371.238 395.523 1382.496 389.566 c 293.473 531.266 m 305.34
 535.891 314.883 545.047 319.996 556.719 c 325.113 568.387 325.379 581.609
 320.734 593.473 c 299.066 649.105 287.961 708.293 288 768 c 288 829.633
 299.52 888.48 320.641 942.527 c 326.055 954.52 326.309 968.203 321.348 
980.387 c 316.383 992.57 306.637 1002.184 294.387 1006.98 c 282.137 1011.773
 268.457 1011.332 256.539 1005.754 c 244.625 1000.176 235.523 989.953 231.359
 977.473 c 205.324 910.703 191.977 839.664 192 768 c 192 694.176 205.922
 623.52 231.359 558.527 c 235.988 546.684 245.129 537.156 256.773 532.047
 c 268.422 526.934 281.621 526.652 293.473 531.266 c 1242.527 531.266 m 
1254.391 526.621 1267.613 526.887 1279.281 532.004 c 1290.953 537.117 1300.109
 546.66 1304.734 558.527 c 1330.078 623.52 1344 694.176 1344 768 c 1344 
841.824 1330.078 912.48 1304.641 977.473 c 1297.824 992.57 1283.703 1003.086
 1267.281 1005.293 c 1250.863 1007.496 1234.469 1001.078 1223.906 988.316
 c 1213.348 975.551 1210.117 958.242 1215.359 942.527 c 1236.48 888.48 1248
 829.633 1248 768 c 1248 706.367 1236.48 647.52 1215.359 593.473 c 1210.715
 581.621 1210.965 568.406 1216.059 556.742 c 1221.156 545.074 1230.676 535.91
 1242.527 531.266 c f
Q Q
showpage
%%Trailer
%%EOF
