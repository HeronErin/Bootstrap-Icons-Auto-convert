%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
60 18 m 61.59 18 63.117 18.633 64.242 19.758 c 65.367 20.883 66 22.41 66
 24 c 66 72 l 66 73.59 65.367 75.117 64.242 76.242 c 63.117 77.367 61.59
 78 60 78 c 36 78 l 32.688 78 30 75.312 30 72 c 30 24 l 30 20.688 32.688
 18 36 18 c h
36 12 m 29.371 12 24 17.371 24 24 c 24 72 l 24 75.184 25.266 78.234 27.516
 80.484 c 29.766 82.734 32.816 84 36 84 c 60 84 l 63.184 84 66.234 82.734
 68.484 80.484 c 70.734 78.234 72 75.184 72 72 c 72 24 l 72 20.816 70.734
 17.766 68.484 15.516 c 66.234 13.266 63.184 12 60 12 c h
36 12 m f
48 72 m 51.312 72 54 69.312 54 66 c 54 62.688 51.312 60 48 60 c 44.688 
60 42 62.688 42 66 c 42 69.312 44.688 72 48 72 c 9.594 24.348 m 10.297 24.719
 10.824 25.355 11.059 26.117 c 11.293 26.879 11.215 27.699 10.844 28.402
 c 7.66 34.445 5.996 41.172 6 48 c 6 55.078 7.754 61.754 10.844 67.598 c
 11.617 69.062 11.059 70.875 9.594 71.652 c 8.129 72.426 6.312 71.867 5.539
 70.402 c 1.898 63.496 -0.004 55.809 0 48 c 0 39.918 2.004 32.285 5.539 
25.598 c 5.91 24.891 6.547 24.367 7.309 24.133 c 8.066 23.898 8.891 23.977
 9.594 24.348 c 86.406 24.348 m 87.109 23.977 87.934 23.898 88.691 24.133
 c 89.453 24.367 90.09 24.891 90.461 25.598 c 94.102 32.504 96.004 40.191
 96 48 c 96.004 55.809 94.102 63.496 90.461 70.402 c 89.688 71.867 87.871
 72.426 86.406 71.652 c 84.941 70.875 84.383 69.062 85.156 67.598 c 88.34
 61.555 90.004 54.828 90 48 c 90 40.922 88.246 34.246 85.156 28.402 c 84.785
 27.699 84.707 26.879 84.941 26.117 c 85.176 25.355 85.703 24.719 86.406
 24.348 c 18.344 33.203 m 19.082 33.492 19.68 34.066 20 34.793 c 20.32 35.523
 20.336 36.352 20.047 37.094 c 18.691 40.57 17.996 44.27 18 48 c 18 51.852
 18.719 55.531 20.039 58.906 c 20.379 59.656 20.395 60.512 20.086 61.273
 c 19.773 62.035 19.164 62.637 18.398 62.938 c 17.633 63.234 16.777 63.207
 16.035 62.859 c 15.289 62.512 14.719 61.871 14.461 61.094 c 12.832 56.918
 12 52.48 12 48 c 12 43.387 12.871 38.969 14.461 34.906 c 15.062 33.367 
16.801 32.605 18.344 33.203 c 77.66 33.203 m 77.656 33.203 l 78.398 32.914
 79.227 32.93 79.957 33.25 c 80.684 33.57 81.258 34.168 81.547 34.906 c 
83.129 38.969 84 43.387 84 48 c 84 52.613 83.129 57.031 81.539 61.094 c 
80.883 62.547 79.199 63.234 77.711 62.652 c 76.227 62.07 75.453 60.422 75.961
 58.906 c 77.281 55.531 78 51.852 78 48 c 78 44.148 77.281 40.469 75.961
 37.094 c 75.355 35.551 76.117 33.809 77.656 33.203 c f
Q Q
showpage
%%Trailer
%%EOF
