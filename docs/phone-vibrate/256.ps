%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
120 36 m 123.184 36 126.234 37.266 128.484 39.516 c 130.734 41.766 132 
44.816 132 48 c 132 144 l 132 147.184 130.734 150.234 128.484 152.484 c 
126.234 154.734 123.184 156 120 156 c 72 156 l 65.371 156 60 150.629 60 
144 c 60 48 l 60 41.371 65.371 36 72 36 c h
72 24 m 65.637 24 59.531 26.527 55.031 31.031 c 50.527 35.531 48 41.637
 48 48 c 48 144 l 48 150.363 50.527 156.469 55.031 160.969 c 59.531 165.473
 65.637 168 72 168 c 120 168 l 126.363 168 132.469 165.473 136.969 160.969
 c 141.473 156.469 144 150.363 144 144 c 144 48 l 144 41.637 141.473 35.531
 136.969 31.031 c 132.469 26.527 126.363 24 120 24 c h
72 24 m f
96 144 m 102.629 144 108 138.629 108 132 c 108 125.371 102.629 120 96 120
 c 89.371 120 84 125.371 84 132 c 84 138.629 89.371 144 96 144 c 19.188 
48.695 m 20.594 49.441 21.648 50.715 22.117 52.234 c 22.586 53.758 22.43
 55.402 21.684 56.809 c 15.316 68.891 11.992 82.344 12 96 c 12 110.16 15.504
 123.504 21.684 135.191 c 23.234 138.121 22.117 141.754 19.188 143.305 c
 16.258 144.855 12.625 143.738 11.074 140.809 c 3.793 126.996 -0.008 111.613
 0 96 c 0 79.836 4.008 64.57 11.074 51.191 c 11.82 49.785 13.094 48.73 14.613
 48.262 c 16.137 47.797 17.781 47.949 19.188 48.695 c 172.812 48.695 m 174.219
 47.949 175.863 47.797 177.387 48.262 c 178.906 48.73 180.18 49.785 180.926
 51.191 c 188.207 65.004 192.008 80.387 192 96 c 192.008 111.613 188.207
 126.996 180.926 140.809 c 179.375 143.738 175.742 144.855 172.812 143.305
 c 169.883 141.754 168.766 138.121 170.316 135.191 c 176.684 123.109 180.008
 109.656 180 96 c 180 81.84 176.496 68.496 170.316 56.809 c 169.57 55.402
 169.414 53.758 169.883 52.234 c 170.352 50.715 171.406 49.441 172.812 48.695
 c 36.684 66.406 m 38.168 66.988 39.359 68.133 40 69.59 c 40.641 71.047 
40.672 72.699 40.094 74.184 c 37.383 81.137 35.996 88.535 36 96 c 36 103.703
 37.441 111.059 40.078 117.816 c 40.758 119.316 40.789 121.027 40.168 122.547
 c 39.547 124.07 38.328 125.273 36.797 125.871 c 35.266 126.473 33.559 126.418
 32.066 125.719 c 30.578 125.023 29.441 123.742 28.922 122.184 c 25.664 
113.84 23.996 104.957 24 96 c 24 86.773 25.738 77.941 28.922 69.816 c 30.125
 66.734 33.598 65.207 36.684 66.406 c 155.316 66.406 m 156.801 65.828 158.453
 65.859 159.91 66.5 c 161.367 67.141 162.512 68.332 163.094 69.816 c 166.262
 77.941 168 86.773 168 96 c 168 105.227 166.262 114.059 163.078 122.184 
c 161.766 125.094 158.398 126.465 155.426 125.301 c 152.449 124.137 150.91
 120.848 151.922 117.816 c 154.559 111.059 156 103.703 156 96 c 156 88.297
 154.559 80.941 151.922 74.184 c 150.711 71.098 152.23 67.617 155.316 66.406
 c f
Q Q
showpage
%%Trailer
%%EOF
