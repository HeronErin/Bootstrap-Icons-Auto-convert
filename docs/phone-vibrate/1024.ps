%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
480 144 m 492.73 144 504.938 149.059 513.941 158.059 c 522.941 167.062 
528 179.27 528 192 c 528 576 l 528 588.73 522.941 600.938 513.941 609.941
 c 504.938 618.941 492.73 624 480 624 c 288 624 l 275.27 624 263.062 618.941
 254.059 609.941 c 245.059 600.938 240 588.73 240 576 c 240 192 l 240 179.27
 245.059 167.062 254.059 158.059 c 263.062 149.059 275.27 144 288 144 c 
h
288 96 m 262.539 96 238.121 106.113 220.117 124.117 c 202.113 142.121 192
 166.539 192 192 c 192 576 l 192 601.461 202.113 625.879 220.117 643.883
 c 238.121 661.887 262.539 672 288 672 c 480 672 l 505.461 672 529.879 661.887
 547.883 643.883 c 565.887 625.879 576 601.461 576 576 c 576 192 l 576 166.539
 565.887 142.121 547.883 124.117 c 529.879 106.113 505.461 96 480 96 c h
288 96 m f
384 576 m 401.148 576 416.996 566.852 425.57 552 c 434.145 537.148 434.145
 518.852 425.57 504 c 416.996 489.148 401.148 480 384 480 c 366.852 480 
351.004 489.148 342.43 504 c 333.855 518.852 333.855 537.148 342.43 552 
c 351.004 566.852 366.852 576 384 576 c 76.754 194.785 m 82.379 197.762 
86.594 202.855 88.465 208.941 c 90.34 215.023 89.715 221.605 86.734 227.23
 c 61.273 275.562 47.977 329.371 48 384 c 48 440.641 62.016 494.016 86.734
 540.77 c 90.75 548.348 90.414 557.492 85.855 564.758 c 81.297 572.023 73.211
 576.305 64.641 575.988 c 56.07 575.676 48.316 570.812 44.305 563.23 c 15.18
 507.98 -0.027 446.457 0 384 c 0 319.344 16.031 258.289 44.305 204.77 c 
47.281 199.141 52.375 194.926 58.461 193.055 c 64.547 191.18 71.125 191.805
 76.754 194.785 c 691.25 194.785 m 691.246 194.785 l 696.875 191.805 703.453
 191.18 709.539 193.055 c 715.625 194.926 720.719 199.141 723.695 204.77
 c 752.82 260.02 768.027 321.543 768 384 c 768.027 446.457 752.82 507.98
 723.695 563.23 c 719.684 570.812 711.93 575.676 703.359 575.988 c 694.789
 576.305 686.703 572.023 682.145 564.758 c 677.586 557.492 677.25 548.348
 681.266 540.77 c 706.727 492.438 720.023 438.629 720 384 c 720 327.359 
705.984 273.984 681.266 227.23 c 678.285 221.605 677.66 215.023 679.535 
208.941 c 681.406 202.855 685.621 197.762 691.246 194.785 c 146.734 265.633
 m 152.672 267.945 157.441 272.523 160 278.359 c 162.555 284.191 162.688
 290.805 160.367 296.734 c 149.531 324.555 143.98 354.148 144 384 c 144 
414.816 149.762 444.238 160.32 471.266 c 163.027 477.258 163.156 484.102
 160.672 490.195 c 158.191 496.285 153.32 501.094 147.195 503.488 c 141.07
 505.887 134.227 505.664 128.27 502.875 c 122.312 500.086 117.762 494.977
 115.68 488.734 c 102.66 455.352 95.988 419.832 96 384 c 96 347.09 102.961
 311.762 115.68 279.266 c 117.996 273.34 122.566 268.578 128.387 266.023
 c 134.211 263.469 140.809 263.328 146.734 265.633 c 621.262 265.633 m 621.266
 265.633 l 627.195 263.312 633.809 263.445 639.641 266 c 645.477 268.559
 650.055 273.328 652.367 279.266 c 665.039 311.762 672 347.09 672 384 c 
672 420.91 665.039 456.238 652.32 488.734 c 648.91 496.285 641.852 501.543
 633.641 502.645 c 625.434 503.75 617.234 500.539 611.953 494.156 c 606.676
 487.773 605.059 479.121 607.68 471.266 c 618.238 444.238 624 414.816 624
 384 c 624 353.184 618.238 323.762 607.68 296.734 c 605.355 290.809 605.484
 284.203 608.031 278.371 c 610.578 272.539 615.34 267.957 621.266 265.633
 c f
Q Q
showpage
%%Trailer
%%EOF
