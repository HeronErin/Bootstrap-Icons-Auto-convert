%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 19 192 173
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 19 192 173
192 192 cairo_set_page_size
%%EndPageSetup
q 0 19 192 154 rectclip
1 0 0 -1 0 192 cm q
0 g
160.309 134.855 m 180.719 116.641 192 96 192 96 c 192 96 156 30 96 30 c
 84.473 30.031 73.078 32.434 62.52 37.055 c 71.758 46.309 l 71.762 46.309
 l 79.531 43.492 87.734 42.035 96 42 c 121.441 42 142.547 56.016 158.016
 71.484 c 165.469 78.961 172.145 87.176 177.938 96 c 177.25 97.039 176.469
 98.191 175.598 99.457 c 171.578 105.219 165.637 112.898 158.02 120.516 
c 156.043 122.5 153.977 124.445 151.816 126.348 c h
160.309 134.855 m f
135.562 110.113 m 139.152 100.074 138.789 89.047 134.551 79.266 c 130.309
 69.484 122.504 61.68 112.723 57.438 c 102.941 53.199 91.914 52.836 81.875
 56.426 c 91.75 66.301 l 91.754 66.301 l 101.102 64.961 110.535 68.105 117.215
 74.785 c 123.895 81.465 127.039 90.898 125.699 100.246 c h
100.246 125.703 m 110.109 135.566 l 110.113 135.562 l 100.074 139.152 89.047
 138.789 79.266 134.551 c 69.484 130.309 61.68 122.504 57.438 112.723 c 
53.199 102.941 52.836 91.914 56.426 81.875 c 66.301 91.75 l 66.301 91.754
 l 64.961 101.102 68.105 110.535 74.785 117.215 c 81.465 123.895 90.898 
127.039 100.246 125.699 c f
40.199 65.641 m 38.039 67.562 35.969 69.508 33.984 71.484 c 26.531 78.961
 19.855 87.176 14.062 96 c 16.402 99.457 l 20.422 105.219 26.363 112.898
 33.98 120.516 c 49.453 135.984 70.57 150 96 150 c 104.594 150 112.68 148.402
 120.238 145.68 c 129.477 154.945 l 129.48 154.945 l 118.922 159.566 107.527
 161.969 96 162 c 36 162 0 96 0 96 c 0 96 11.27 75.348 31.691 57.145 c 40.188
 65.652 l h
163.75 172.25 m 19.75 28.25 l 28.246 19.754 l 172.246 163.754 l h
163.75 172.25 m f
Q Q
showpage
%%Trailer
%%EOF
