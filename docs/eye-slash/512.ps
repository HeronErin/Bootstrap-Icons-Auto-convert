%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 39 384 345
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 39 384 345
384 384 cairo_set_page_size
%%EndPageSetup
q 0 39 384 306 rectclip
1 0 0 -1 0 384 cm q
0 g
320.617 269.711 m 361.441 233.281 384 192 384 192 c 384 192 312 60 192 
60 c 168.949 60.059 146.156 64.863 125.039 74.113 c 143.52 92.617 l 159.066
 86.98 175.465 84.066 192 84 c 242.879 84 285.098 112.031 316.031 142.969
 c 330.938 157.922 344.285 174.352 355.871 192 c 354.496 194.078 352.934
 196.383 351.191 198.91 c 343.152 210.43 331.27 225.789 316.031 241.031 
c 312.078 245 307.941 248.887 303.625 252.695 c h
320.617 269.711 m f
271.129 220.223 m 278.305 200.145 277.582 178.09 269.098 158.527 c 260.617
 138.965 245.012 123.359 225.449 114.879 c 205.887 106.395 183.828 105.668
 163.754 112.848 c 183.508 132.602 l 183.504 132.602 l 202.203 129.922 221.074
 136.211 234.434 149.566 c 247.789 162.926 254.078 181.797 251.398 200.496
 c h
200.496 251.398 m 220.223 271.125 l 220.223 271.129 l 200.145 278.305 178.09
 277.582 158.527 269.098 c 138.965 260.617 123.359 245.012 114.879 225.449
 c 106.395 205.887 105.668 183.828 112.848 163.754 c 132.602 183.508 l 132.602
 183.504 l 129.922 202.203 136.211 221.074 149.566 234.434 c 162.926 247.789
 181.797 254.078 200.496 251.398 c f
80.398 131.281 m 76.078 135.121 71.934 139.016 67.965 142.969 c 67.969 
142.969 l 53.062 157.922 39.715 174.352 28.129 192 c 32.809 198.91 l 40.848
 210.43 52.73 225.789 67.969 241.031 c 98.902 271.969 141.145 300 192 300
 c 209.184 300 225.359 296.809 240.48 291.359 c 258.961 309.887 l 237.844
 319.137 215.051 323.941 192 324 c 72 324 0 192 0 192 c 0 192 22.535 150.695
 63.383 114.289 c 80.375 131.305 l h
327.504 344.496 m 39.504 56.496 l 56.496 39.504 l 344.496 327.504 l h
327.504 344.496 m f
Q Q
showpage
%%Trailer
%%EOF
