%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 288 1344 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 288 1344 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 288 1152 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 1200 m 576 1187.27 581.059 1175.062 590.059 1166.059 c 599.062 1157.059
 611.27 1152 624 1152 c 1296 1152 l 1313.148 1152 1328.996 1161.148 1337.57
 1176 c 1346.145 1190.852 1346.145 1209.148 1337.57 1224 c 1328.996 1238.852
 1313.148 1248 1296 1248 c 624 1248 l 611.27 1248 599.062 1242.941 590.059
 1233.941 c 581.059 1224.938 576 1212.73 576 1200 c 192 912 m 192 899.27
 197.059 887.062 206.059 878.059 c 215.062 869.059 227.27 864 240 864 c 
1296 864 l 1313.148 864 1328.996 873.148 1337.57 888 c 1346.145 902.852 
1346.145 921.148 1337.57 936 c 1328.996 950.852 1313.148 960 1296 960 c 
240 960 l 227.27 960 215.062 954.941 206.059 945.941 c 197.059 936.938 192
 924.73 192 912 c 576 624 m 576 611.27 581.059 599.062 590.059 590.059 c
 599.062 581.059 611.27 576 624 576 c 1296 576 l 1313.148 576 1328.996 585.148
 1337.57 600 c 1346.145 614.852 1346.145 633.148 1337.57 648 c 1328.996 
662.852 1313.148 672 1296 672 c 624 672 l 611.27 672 599.062 666.941 590.059
 657.941 c 581.059 648.938 576 636.73 576 624 c 192 336 m 192 323.27 197.059
 311.062 206.059 302.059 c 215.062 293.059 227.27 288 240 288 c 1296 288
 l 1313.148 288 1328.996 297.148 1337.57 312 c 1346.145 326.852 1346.145
 345.148 1337.57 360 c 1328.996 374.852 1313.148 384 1296 384 c 240 384 
l 227.27 384 215.062 378.941 206.059 369.941 c 197.059 360.938 192 348.73
 192 336 c f*
Q Q
showpage
%%Trailer
%%EOF
