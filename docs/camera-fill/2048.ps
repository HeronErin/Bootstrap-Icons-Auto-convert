%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
1008 816 m 1008 879.652 982.715 940.695 937.707 985.707 c 892.695 1030.715
 831.652 1056 768 1056 c 704.348 1056 643.305 1030.715 598.293 985.707 c
 553.285 940.695 528 879.652 528 816 c 528 752.348 553.285 691.305 598.293
 646.293 c 643.305 601.285 704.348 576 768 576 c 831.652 576 892.695 601.285
 937.707 646.293 c 982.715 691.305 1008 752.348 1008 816 c f
192 384 m 141.078 384 92.242 404.227 56.234 440.234 c 20.227 476.242 0 
525.078 0 576 c 0 1152 l 0 1185.703 8.871 1218.812 25.723 1248 c 42.574 
1277.188 66.812 1301.426 96 1318.277 c 125.188 1335.129 158.297 1344 192
 1344 c 1344 1344 l 1377.703 1344 1410.812 1335.129 1440 1318.277 c 1469.188
 1301.426 1493.426 1277.188 1510.277 1248 c 1527.129 1218.812 1536 1185.703
 1536 1152 c 1536 576 l 1536 542.297 1527.129 509.188 1510.277 480 c 1493.426
 450.812 1469.188 426.574 1440 409.723 c 1410.812 392.871 1377.703 384 1344
 384 c 1231.488 384 l 1180.57 383.988 1131.742 363.754 1095.742 327.742 
c 1016.254 248.254 l 1016.258 248.258 l 980.258 212.246 931.43 192.012 880.512
 192 c 655.488 192 l 604.57 192.012 555.742 212.246 519.742 248.258 c 440.254
 327.746 l 440.258 327.742 l 404.258 363.754 355.43 383.988 304.512 384 
c h
240 576 m 222.852 576 207.004 566.852 198.43 552 c 189.855 537.148 189.855
 518.852 198.43 504 c 207.004 489.148 222.852 480 240 480 c 257.148 480 
272.996 489.148 281.57 504 c 290.145 518.852 290.145 537.148 281.57 552 
c 272.996 566.852 257.148 576 240 576 c 1104 816 m 1104 905.113 1068.602
 990.574 1005.586 1053.586 c 942.574 1116.602 857.113 1152 768 1152 c 678.887
 1152 593.426 1116.602 530.414 1053.586 c 467.398 990.574 432 905.113 432
 816 c 432 726.887 467.398 641.426 530.414 578.414 c 593.426 515.398 678.887
 480 768 480 c 857.113 480 942.574 515.398 1005.586 578.414 c 1068.602 641.426
 1104 726.887 1104 816 c f
Q Q
showpage
%%Trailer
%%EOF
