%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 528 m 240 545.148 230.852 560.996 216 569.57 c 201.148 578.145 182.852
 578.145 168 569.57 c 153.148 560.996 144 545.148 144 528 c 144 510.852 
153.148 495.004 168 486.43 c 182.852 477.855 201.148 477.855 216 486.43 
c 230.852 495.004 240 510.852 240 528 c 624 528 m 624 545.148 614.852 560.996
 600 569.57 c 585.148 578.145 566.852 578.145 552 569.57 c 537.148 560.996
 528 545.148 528 528 c 528 510.852 537.148 495.004 552 486.43 c 566.852 
477.855 585.148 477.855 600 486.43 c 614.852 495.004 624 510.852 624 528
 c 336 480 m 318.852 480 303.004 489.148 294.43 504 c 285.855 518.852 285.855
 537.148 294.43 552 c 303.004 566.852 318.852 576 336 576 c 432 576 l 449.148
 576 464.996 566.852 473.57 552 c 482.145 537.148 482.145 518.852 473.57
 504 c 464.996 489.148 449.148 480 432 480 c h
384 192 m 293.953 192 219.551 197.23 165.504 202.848 c 159.605 203.465 
154.145 206.242 150.172 210.648 c 146.203 215.055 144.004 220.773 144 226.703
 c 144 397.297 l 144.004 403.227 146.203 408.945 150.172 413.352 c 154.145
 417.758 159.605 420.535 165.504 421.152 c 219.551 426.77 293.953 432 384
 432 c 474.047 432 548.449 426.77 602.496 421.152 c 608.395 420.535 613.855
 417.758 617.828 413.352 c 621.797 408.945 623.996 403.227 624 397.297 c
 624 226.703 l 623.996 220.773 621.797 215.055 617.828 210.648 c 613.855
 206.242 608.395 203.465 602.496 202.848 c 529.898 195.461 456.969 191.84
 384 192 c 384 144 m 295.824 144 223.055 149.137 170.496 154.559 c 164.051
 155.457 157.52 153.695 152.398 149.688 c 147.273 145.676 144 139.758 143.32
 133.285 c 142.645 126.816 144.625 120.348 148.805 115.363 c 152.988 110.379
 159.016 107.305 165.504 106.848 c 238.102 99.461 311.031 95.84 384 96 c
 474.047 96 548.449 101.23 602.496 106.848 c 608.984 107.305 615.012 110.379
 619.195 115.363 c 623.375 120.348 625.355 126.816 624.68 133.285 c 624 
139.758 620.727 145.676 615.602 149.688 c 610.48 153.695 603.949 155.457
 597.504 154.559 c 526.566 147.355 455.301 143.828 384 144 c f
720 384 m 732.73 384 744.938 378.941 753.941 369.941 c 762.941 360.938 
768 348.73 768 336 c 768 240 l 768 227.27 762.941 215.062 753.941 206.059
 c 744.938 197.059 732.73 192 720 192 c 720 126.719 l 720 69.695 679.441
 19.582 620.93 12.863 c 542.254 4.141 463.156 -0.156 384 0 c 283.199 0 201.984
 6.527 147.07 12.863 c 88.559 19.586 48 69.695 48 126.719 c 48 192 l 35.27
 192 23.062 197.059 14.059 206.059 c 5.059 215.062 0 227.27 0 240 c 0 336
 l 0 348.73 5.059 360.938 14.059 369.941 c 23.062 378.941 35.27 384 48 384
 c 48 552 l 48 591.266 66.863 626.113 96 648 c 96 744 l 96 750.363 98.527
 756.469 103.031 760.969 c 107.531 765.473 113.637 768 120 768 c 216 768
 l 222.363 768 228.469 765.473 232.969 760.969 c 237.473 756.469 240 750.363
 240 744 c 240 672 l 528 672 l 528 744 l 528 750.363 530.527 756.469 535.031
 760.969 c 539.531 765.473 545.637 768 552 768 c 648 768 l 654.363 768 660.469
 765.473 664.969 760.969 c 669.473 756.469 672 750.363 672 744 c 672 648
 l 701.137 626.113 720 591.266 720 552 c h
384 48 m 482.688 48 562.078 54.434 615.457 60.527 c 647.906 64.27 672 92.207
 672 126.719 c 672 552 l 672 571.094 664.414 589.41 650.91 602.91 c 637.41
 616.414 619.094 624 600 624 c 168 624 l 148.906 624 130.59 616.414 117.09
 602.91 c 103.586 589.41 96 571.094 96 552 c 96 126.719 l 96 92.16 120.098
 64.27 152.543 60.527 c 229.402 52.02 306.676 47.836 384 48 c f
Q Q
showpage
%%Trailer
%%EOF
