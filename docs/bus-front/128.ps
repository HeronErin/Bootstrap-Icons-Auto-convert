%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
30 66 m 30 69.312 27.312 72 24 72 c 20.688 72 18 69.312 18 66 c 18 62.688
 20.688 60 24 60 c 27.312 60 30 62.688 30 66 c 78 66 m 78 69.312 75.312 
72 72 72 c 68.688 72 66 69.312 66 66 c 66 62.688 68.688 60 72 60 c 75.312
 60 78 62.688 78 66 c 42 60 m 38.688 60 36 62.688 36 66 c 36 69.312 38.688
 72 42 72 c 54 72 l 57.312 72 60 69.312 60 66 c 60 62.688 57.312 60 54 60
 c h
48 24 m 36.742 24 27.445 24.652 20.688 25.355 c 19.16 25.516 18 26.801 
18 28.34 c 18 49.664 l 18 49.66 l 18 51.199 19.16 52.484 20.688 52.645 c
 27.445 53.348 36.742 54 48 54 c 59.258 54 68.555 53.348 75.312 52.645 c
 76.84 52.484 78 51.199 78 49.66 c 78 28.34 l 78 26.801 76.84 25.516 75.312
 25.355 c 66.238 24.434 57.121 23.98 48 24 c 48 18 m 36.977 18 27.883 18.641
 21.312 19.32 c 20.508 19.434 19.691 19.211 19.051 18.711 c 18.41 18.211
 18 17.469 17.914 16.66 c 17.832 15.852 18.078 15.043 18.602 14.422 c 19.125
 13.797 19.875 13.414 20.688 13.355 c 29.762 12.434 38.879 11.98 48 12 c
 59.258 12 68.555 12.652 75.312 13.355 c 76.125 13.414 76.875 13.797 77.398
 14.422 c 77.922 15.043 78.168 15.852 78.086 16.66 c 78 17.469 77.59 18.211
 76.949 18.711 c 76.309 19.211 75.492 19.434 74.688 19.32 c 65.82 18.418
 56.914 17.98 48 18 c f
90 48 m 91.59 48 93.117 47.367 94.242 46.242 c 95.367 45.117 96 43.59 96
 42 c 96 30 l 96 28.41 95.367 26.883 94.242 25.758 c 93.117 24.633 91.59
 24 90 24 c 90 15.84 l 90 8.711 84.93 2.449 77.617 1.609 c 67.781 0.516 
57.895 -0.02 48 0 c 35.398 0 25.246 0.816 18.383 1.609 c 11.07 2.449 6 8.711
 6 15.84 c 6 24 l 2.688 24 0 26.688 0 30 c 0 42 l 0 43.59 0.633 45.117 1.758
 46.242 c 2.883 47.367 4.41 48 6 48 c 6 69 l 6 73.906 8.359 78.266 12 81
 c 12 93 l 12 93.797 12.316 94.559 12.879 95.121 c 13.441 95.684 14.203 
96 15 96 c 27 96 l 27.797 96 28.559 95.684 29.121 95.121 c 29.684 94.559
 30 93.797 30 93 c 30 84 l 66 84 l 66 93 l 66 93.797 66.316 94.559 66.879
 95.121 c 67.441 95.684 68.203 96 69 96 c 81 96 l 81.797 96 82.559 95.684
 83.121 95.121 c 83.684 94.559 84 93.797 84 93 c 84 81 l 87.641 78.266 90
 73.906 90 69 c h
48 6 m 60.336 6 70.262 6.805 76.934 7.566 c 80.988 8.035 84 11.527 84 15.84
 c 84 69 l 84 73.969 79.969 78 75 78 c 21 78 l 16.031 78 12 73.969 12 69
 c 12 15.84 l 12 11.52 15.012 8.035 19.066 7.566 c 28.676 6.504 38.336 5.98
 48 6 c f
Q Q
showpage
%%Trailer
%%EOF
