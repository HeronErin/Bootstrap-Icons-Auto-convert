%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
15 33 m 15 34.656 13.656 36 12 36 c 10.344 36 9 34.656 9 33 c 9 31.344 
10.344 30 12 30 c 13.656 30 15 31.344 15 33 c 39 33 m 39 34.656 37.656 36
 36 36 c 34.344 36 33 34.656 33 33 c 33 31.344 34.344 30 36 30 c 37.656 
30 39 31.344 39 33 c 21 30 m 19.344 30 18 31.344 18 33 c 18 34.656 19.344
 36 21 36 c 27 36 l 28.656 36 30 34.656 30 33 c 30 31.344 28.656 30 27 30
 c h
24 12 m 18.371 12 13.723 12.328 10.344 12.68 c 9.582 12.758 9 13.402 9 
14.168 c 9 24.832 l 9 25.598 9.582 26.242 10.344 26.32 c 13.723 26.672 18.371
 27 24 27 c 29.629 27 34.277 26.672 37.656 26.32 c 38.418 26.242 39 25.598
 39 24.832 c 39 14.168 l 39 13.402 38.418 12.758 37.656 12.68 c 33.117 12.215
 28.562 11.988 24 12 c 24 9 m 18.488 9 13.941 9.32 10.656 9.66 c 10.254 
9.715 9.844 9.605 9.523 9.355 c 9.203 9.105 9 8.734 8.957 8.332 c 8.914 
7.926 9.039 7.523 9.301 7.211 c 9.562 6.898 9.938 6.707 10.344 6.68 c 14.883
 6.215 19.438 5.988 24 6 c 29.629 6 34.277 6.328 37.656 6.68 c 38.062 6.707
 38.438 6.898 38.699 7.211 c 38.961 7.523 39.086 7.926 39.043 8.332 c 39
 8.734 38.797 9.105 38.477 9.355 c 38.156 9.605 37.746 9.715 37.344 9.66
 c 32.91 9.211 28.457 8.988 24 9 c f
45 24 m 45.797 24 46.559 23.684 47.121 23.121 c 47.684 22.559 48 21.797
 48 21 c 48 15 l 48 14.203 47.684 13.441 47.121 12.879 c 46.559 12.316 45.797
 12 45 12 c 45 7.922 l 45 4.359 42.465 1.227 38.809 0.805 c 33.891 0.258
 28.945 -0.008 24 0 c 17.699 0 12.625 0.406 9.191 0.805 c 5.535 1.223 3 
4.355 3 7.922 c 3 12 l 1.344 12 0 13.344 0 15 c 0 21 l 0 21.797 0.316 22.559
 0.879 23.121 c 1.441 23.684 2.203 24 3 24 c 3 34.5 l 3 36.953 4.18 39.133
 6 40.5 c 6 46.5 l 6 46.898 6.156 47.281 6.438 47.562 c 6.719 47.844 7.102
 48 7.5 48 c 13.5 48 l 13.898 48 14.281 47.844 14.562 47.562 c 14.844 47.281
 15 46.898 15 46.5 c 15 42 l 33 42 l 33 46.5 l 33 46.898 33.156 47.281 33.438
 47.562 c 33.719 47.844 34.102 48 34.5 48 c 40.5 48 l 40.898 48 41.281 47.844
 41.562 47.562 c 41.844 47.281 42 46.898 42 46.5 c 42 40.5 l 43.82 39.133
 45 36.953 45 34.5 c h
24 3 m 30.168 3 35.129 3.402 38.465 3.781 c 40.492 4.016 42 5.762 42 7.918
 c 42 34.5 l 42 36.984 39.984 39 37.5 39 c 10.5 39 l 8.016 39 6 36.984 6
 34.5 c 6 7.922 l 6 5.762 7.508 4.02 9.535 3.785 c 9.535 3.781 l 14.336 
3.25 19.168 2.988 24 3 c f
Q Q
showpage
%%Trailer
%%EOF
