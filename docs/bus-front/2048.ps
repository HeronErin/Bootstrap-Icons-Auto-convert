%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 1056 m 480 1090.297 461.703 1121.988 432 1139.137 c 402.297 1156.289
 365.703 1156.289 336 1139.137 c 306.297 1121.988 288 1090.297 288 1056 
c 288 1021.703 306.297 990.012 336 972.863 c 365.703 955.711 402.297 955.711
 432 972.863 c 461.703 990.012 480 1021.703 480 1056 c 1248 1056 m 1248 
1090.297 1229.703 1121.988 1200 1139.137 c 1170.297 1156.289 1133.703 1156.289
 1104 1139.137 c 1074.297 1121.988 1056 1090.297 1056 1056 c 1056 1021.703
 1074.297 990.012 1104 972.863 c 1133.703 955.711 1170.297 955.711 1200 
972.863 c 1229.703 990.012 1248 1021.703 1248 1056 c 672 960 m 637.703 960
 606.012 978.297 588.863 1008 c 571.711 1037.703 571.711 1074.297 588.863
 1104 c 606.012 1133.703 637.703 1152 672 1152 c 864 1152 l 898.297 1152
 929.988 1133.703 947.137 1104 c 964.289 1074.297 964.289 1037.703 947.137
 1008 c 929.988 978.297 898.297 960 864 960 c h
768 384 m 587.902 384 439.105 394.465 331.008 405.695 c 319.211 406.93 
308.289 412.488 300.348 421.297 c 292.406 430.109 288.008 441.547 288 453.406
 c 288 794.594 l 288.008 806.453 292.406 817.891 300.348 826.703 c 308.289
 835.512 319.211 841.07 331.008 842.305 c 439.105 853.535 587.902 864 768
 864 c 948.098 864 1096.895 853.535 1204.992 842.305 c 1216.789 841.07 1227.711
 835.512 1235.652 826.703 c 1243.594 817.891 1247.992 806.453 1248 794.594
 c 1248 453.406 l 1247.992 441.547 1243.594 430.109 1235.652 421.297 c 1227.711
 412.488 1216.789 406.93 1204.992 405.695 c 1059.801 390.918 913.941 383.68
 768 384 c 768 288 m 591.648 288 446.113 298.273 340.992 309.121 c 328.102
 310.91 315.039 307.395 304.793 299.371 c 294.547 291.352 287.996 279.516
 286.645 266.57 c 285.289 253.629 289.246 240.691 297.609 230.727 c 305.977
 220.758 318.027 214.609 331.008 213.695 c 476.199 198.918 622.059 191.68
 768 192 c 948.098 192 1096.895 202.465 1204.992 213.695 c 1217.973 214.609
 1230.023 220.758 1238.391 230.727 c 1246.754 240.691 1250.711 253.629 1249.355
 266.57 c 1248.004 279.516 1241.453 291.352 1231.207 299.371 c 1220.961 
307.395 1207.898 310.91 1195.008 309.121 c 1053.133 294.711 910.605 287.66
 768 288 c f
1440 768 m 1465.461 768 1489.879 757.887 1507.883 739.883 c 1525.887 721.879
 1536 697.461 1536 672 c 1536 480 l 1536 454.539 1525.887 430.121 1507.883
 412.117 c 1489.879 394.113 1465.461 384 1440 384 c 1440 253.441 l 1440 
139.395 1358.879 39.168 1241.855 25.73 c 1241.855 25.727 l 1084.512 8.277
 926.309 -0.309 768 0 c 566.398 0 403.969 13.055 294.145 25.727 c 177.121
 39.168 96 139.391 96 253.441 c 96 384 l 70.539 384 46.121 394.113 28.117
 412.117 c 10.113 430.121 0 454.539 0 480 c 0 672 l 0 697.461 10.113 721.879
 28.117 739.883 c 46.121 757.887 70.539 768 96 768 c 96 1104 l 96 1182.527
 133.727 1252.223 192 1296 c 192 1488 l 192 1500.73 197.059 1512.938 206.059
 1521.941 c 215.062 1530.941 227.27 1536 240 1536 c 432 1536 l 444.73 1536
 456.938 1530.941 465.941 1521.941 c 474.941 1512.938 480 1500.73 480 1488
 c 480 1344 l 1056 1344 l 1056 1488 l 1056 1500.73 1061.059 1512.938 1070.059
 1521.941 c 1079.062 1530.941 1091.27 1536 1104 1536 c 1296 1536 l 1308.73
 1536 1320.938 1530.941 1329.941 1521.941 c 1338.941 1512.938 1344 1500.73
 1344 1488 c 1344 1296 l 1402.273 1252.223 1440 1182.527 1440 1104 c h
768 96 m 965.375 96 1124.16 108.863 1230.91 121.055 c 1295.805 128.543 
1344 184.414 1344 253.438 c 1344 1104 l 1344 1142.191 1328.828 1178.816 
1301.824 1205.824 c 1274.816 1232.828 1238.191 1248 1200 1248 c 336 1248
 l 297.809 1248 261.184 1232.828 234.176 1205.824 c 207.172 1178.816 192
 1142.191 192 1104 c 192 253.441 l 192 184.32 240.191 128.547 305.09 121.059
 c 305.09 121.055 l 458.801 104.039 613.348 95.676 768 96 c f
Q Q
showpage
%%Trailer
%%EOF
