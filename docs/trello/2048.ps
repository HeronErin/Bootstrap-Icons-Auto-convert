%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1353.602 0 m 182.688 0 l 81.793 0 0.191 81.602 0 182.398 c 0 1352.641 l
 -0.168 1384.789 8.16 1416.41 24.148 1444.301 c 40.133 1472.195 63.207 1495.363
 91.031 1511.469 c 118.855 1527.57 150.445 1536.035 182.594 1536 c 1353.699
 1536 l 1353.695 1536 l 1385.812 1535.984 1417.355 1527.488 1445.133 1511.371
 c 1472.914 1495.254 1495.945 1472.09 1511.898 1444.219 c 1527.855 1416.348
 1536.168 1384.754 1536 1352.641 c 1536 182.398 l 1536 134.023 1516.781 
87.629 1482.578 53.422 c 1448.371 19.219 1401.977 0 1353.602 0 c 672 1091.23
 m 671.926 1107.441 665.406 1122.957 653.879 1134.355 c 642.355 1145.754
 626.77 1152.102 610.559 1152 c 344.93 1152 l 328.859 1151.926 313.48 1145.488
 302.145 1134.102 c 290.812 1122.711 284.449 1107.301 284.449 1091.23 c 
284.449 343.969 l 284.449 310.562 311.426 283.395 344.93 283.199 c 610.371
 283.199 l 643.973 283.391 671.043 310.465 671.141 343.969 c h
1252.992 755.23 m 1252.992 771.465 1246.5 787.023 1234.957 798.441 c 1223.414
 809.855 1207.785 816.18 1191.551 816 c 924.672 816 l 908.594 815.898 893.207
 809.461 881.848 798.086 c 870.488 786.707 864.074 771.309 864 755.23 c 
864 343.969 l 864.074 327.875 870.504 312.461 881.883 301.082 c 893.262 
289.703 908.676 283.277 924.77 283.199 c 1191.457 283.199 l 1225.059 283.391
 1252.031 310.559 1252.031 343.969 c h
1252.992 755.23 m f
Q Q
showpage
%%Trailer
%%EOF
