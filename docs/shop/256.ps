%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 180 rectclip
1 0 0 -1 0 192 cm q
0 g
35.641 16.199 m 37.922 13.535 41.254 12 44.762 12 c 147.242 12 l 147.238
 12 l 150.746 12 154.078 13.535 156.359 16.199 c 187.668 52.727 l 190.465
 55.988 192 60.145 192 64.441 c 192 67.5 l 192 75.469 188.664 83.074 182.801
 88.473 c 176.938 93.871 169.078 96.566 161.137 95.906 c 153.195 95.246 
145.891 91.289 141 84.996 c 135.605 91.945 127.297 96.012 118.5 96 c 109.703
 96.012 101.395 91.945 96 84.996 c 90.605 91.945 82.297 96.012 73.5 96 c
 64.703 96.012 56.395 91.945 51 84.996 c 46.109 91.289 38.805 95.246 30.863
 95.906 c 22.922 96.566 15.062 93.871 9.199 88.473 c 3.336 83.074 0 75.469
 0 67.5 c 0 64.441 l 0 60.145 1.535 55.988 4.332 52.727 c h
57 67.5 m 57 73.395 60.145 78.844 65.25 81.789 c 70.355 84.738 76.645 84.738
 81.75 81.789 c 86.855 78.844 90 73.395 90 67.5 c 90 64.188 92.688 61.5 
96 61.5 c 99.312 61.5 102 64.188 102 67.5 c 102 73.395 105.145 78.844 110.25
 81.789 c 115.355 84.738 121.645 84.738 126.75 81.789 c 131.855 78.844 135
 73.395 135 67.5 c 135 64.188 137.688 61.5 141 61.5 c 144.312 61.5 147 64.188
 147 67.5 c 147 73.395 150.145 78.844 155.25 81.789 c 160.355 84.738 166.645
 84.738 171.75 81.789 c 176.855 78.844 180 73.395 180 67.5 c 180 64.441 
l 180 63.012 179.488 61.625 178.559 60.539 c 147.238 24 l 44.762 24 l 13.441
 60.539 l 12.512 61.625 12 63.012 12 64.441 c 12 67.5 l 12 73.395 15.145
 78.844 20.25 81.789 c 25.355 84.738 31.645 84.738 36.75 81.789 c 41.855
 78.844 45 73.395 45 67.5 c 45 64.188 47.688 61.5 51 61.5 c 54.312 61.5 
57 64.188 57 67.5 c 18 102 m 19.59 102 21.117 102.633 22.242 103.758 c 23.367
 104.883 24 106.41 24 108 c 24 180 l 36 180 l 36 120 l 36 113.371 41.371
 108 48 108 c 84 108 l 87.184 108 90.234 109.266 92.484 111.516 c 94.734
 113.766 96 116.816 96 120 c 96 180 l 168 180 l 168 108 l 168 104.688 170.688
 102 174 102 c 177.312 102 180 104.688 180 108 c 180 180 l 186 180 l 189.312
 180 192 182.688 192 186 c 192 189.312 189.312 192 186 192 c 6 192 l 2.688
 192 0 189.312 0 186 c 0 182.688 2.688 180 6 180 c 12 180 l 12 108 l 12 
104.688 14.688 102 18 102 c 48 180 m 84 180 l 84 120 l 48 120 l h
108 120 m 108 113.371 113.371 108 120 108 c 144 108 l 147.184 108 150.234
 109.266 152.484 111.516 c 154.734 113.766 156 116.816 156 120 c 156 156
 l 156 159.184 154.734 162.234 152.484 164.484 c 150.234 166.734 147.184
 168 144 168 c 120 168 l 113.371 168 108 162.629 108 156 c h
144 120 m 120 120 l 120 156 l 144 156 l h
144 120 m f
Q Q
showpage
%%Trailer
%%EOF
