%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 384 576 384 re f
384 0 m 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242 192 141.078
 192 192 c 192 1344 l 192 1377.703 200.871 1410.812 217.723 1440 c 234.574
 1469.188 258.812 1493.426 288 1510.277 c 317.188 1527.129 350.297 1536 
384 1536 c 1152 1536 l 1185.703 1536 1218.812 1527.129 1248 1510.277 c 1277.188
 1493.426 1301.426 1469.188 1318.277 1440 c 1335.129 1410.812 1344 1377.703
 1344 1344 c 1344 192 l 1344 158.297 1335.129 125.188 1318.277 96 c 1301.426
 66.812 1277.188 42.574 1248 25.723 c 1218.812 8.871 1185.703 0 1152 0 c
 h
384 144 m 384 161.148 374.852 176.996 360 185.57 c 345.148 194.145 326.852
 194.145 312 185.57 c 297.148 176.996 288 161.148 288 144 c 288 126.852 
297.148 111.004 312 102.43 c 326.852 93.855 345.148 93.855 360 102.43 c 
374.852 111.004 384 126.852 384 144 c 1248 144 m 1248 161.148 1238.852 176.996
 1224 185.57 c 1209.148 194.145 1190.852 194.145 1176 185.57 c 1161.148 
176.996 1152 161.148 1152 144 c 1152 126.852 1161.148 111.004 1176 102.43
 c 1190.852 93.855 1209.148 93.855 1224 102.43 c 1238.852 111.004 1248 126.852
 1248 144 c 336 1056 m 353.148 1056 368.996 1046.852 377.57 1032 c 386.145
 1017.148 386.145 998.852 377.57 984 c 368.996 969.148 353.148 960 336 960
 c 318.852 960 303.004 969.148 294.43 984 c 285.855 998.852 285.855 1017.148
 294.43 1032 c 303.004 1046.852 318.852 1056 336 1056 c 1248 1008 m 1248
 1025.148 1238.852 1040.996 1224 1049.57 c 1209.148 1058.145 1190.852 1058.145
 1176 1049.57 c 1161.148 1040.996 1152 1025.148 1152 1008 c 1152 990.852
 1161.148 975.004 1176 966.43 c 1190.852 957.855 1209.148 957.855 1224 966.43
 c 1238.852 975.004 1248 990.852 1248 1008 c 456 288 m 1080 288 l 1099.094
 288 1117.41 295.586 1130.91 309.09 c 1144.414 322.59 1152 340.906 1152 
360 c 1152 792 l 1152 811.094 1144.414 829.41 1130.91 842.91 c 1117.41 856.414
 1099.094 864 1080 864 c 456 864 l 436.906 864 418.59 856.414 405.09 842.91
 c 391.586 829.41 384 811.094 384 792 c 384 360 l 384 340.906 391.586 322.59
 405.09 309.09 c 418.59 295.586 436.906 288 456 288 c 480 1152 m 1056 1152
 l 1081.461 1152 1105.879 1162.113 1123.883 1180.117 c 1141.887 1198.121
 1152 1222.539 1152 1248 c 1152 1440 l 1056 1440 l 1056 1248 l 984 1248 
l 984 1440 l 888 1440 l 888 1248 l 816 1248 l 816 1440 l 720 1440 l 720 
1248 l 648 1248 l 648 1440 l 552 1440 l 552 1248 l 480 1248 l 480 1440 l
 384 1440 l 384 1248 l 384 1222.539 394.113 1198.121 412.117 1180.117 c 
430.121 1162.113 454.539 1152 480 1152 c f
Q Q
showpage
%%Trailer
%%EOF
