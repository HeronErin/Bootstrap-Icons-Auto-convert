%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
768 384 m 768 485.844 727.543 583.516 655.527 655.527 c 583.516 727.543
 485.844 768 384 768 c 282.156 768 184.484 727.543 112.473 655.527 c 40.457
 583.516 0 485.844 0 384 c 0 282.156 40.457 184.484 112.473 112.473 c 184.484
 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527 112.473 c 727.543
 184.484 768 282.156 768 384 c 533.566 193.055 m 542.797 197.07 551.371 
202.441 559.008 208.992 c 565.078 215.062 573.926 217.434 582.219 215.211
 c 590.512 212.988 596.988 206.512 599.211 198.219 c 601.434 189.926 599.062
 181.078 592.992 175.008 c 592.945 175.008 l 592.945 174.961 l 589.402 171.52
 585.598 168.359 581.566 165.504 c 572.547 158.871 562.785 153.316 552.48
 148.945 c 519.469 134.773 482.352 133.457 448.414 145.246 c 442.152 147.074
 436.906 151.371 433.879 157.148 c 430.852 162.926 430.305 169.688 432.367
 175.879 c 434.43 182.066 438.922 187.148 444.812 189.953 c 450.699 192.762
 457.477 193.047 463.586 190.754 c 486.371 182.68 511.363 183.504 533.566
 193.055 c 304.414 190.75 m 304.414 190.754 l 312.441 193.094 321.102 191.09
 327.285 185.465 c 333.469 179.844 336.281 171.406 334.707 163.199 c 333.137
 154.988 327.406 148.191 319.586 145.246 c 285.664 133.469 248.566 134.785
 215.566 148.945 c 202.141 154.727 189.637 162.457 178.465 171.887 c 177.312
 172.848 176.191 173.871 175.105 174.957 c 175.008 175.004 l 175.008 175.008
 l 169.102 181.25 166.973 190.168 169.422 198.406 c 171.875 206.645 178.535
 212.949 186.895 214.941 c 195.254 216.938 204.043 214.32 209.953 208.078
 c 217.312 201.871 225.566 196.809 234.434 193.055 c 256.637 183.504 281.629
 182.68 304.414 190.754 c 336 312 m 336 272.258 314.496 240 288 240 c 261.504
 240 240 272.258 240 312 c 240 351.742 261.504 384 288 384 c 314.496 384
 336 351.742 336 312 c 528 312 m 528 272.258 506.496 240 480 240 c 453.504
 240 432 272.258 432 312 c 432 351.742 453.504 384 480 384 c 506.496 384
 528 351.742 528 312 c 276.145 539.809 m 257.762 562.754 279.984 590.688
 309.121 586.848 c 359.043 580.383 408.961 580.383 458.883 586.848 c 487.973
 590.688 510.242 562.75 491.859 539.809 c 467.855 509.902 431.902 480 384
 480 c 336.098 480 300.145 509.902 276.145 539.809 c f
Q Q
showpage
%%Trailer
%%EOF
