%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
192 96 m 192 130.297 173.703 161.988 144 179.137 c 114.297 196.289 77.703
 196.289 48 179.137 c 18.297 161.988 0 130.297 0 96 c 0 61.703 18.297 30.012
 48 12.863 c 77.703 -4.289 114.297 -4.289 144 12.863 c 173.703 30.012 192
 61.703 192 96 c 133.391 48.266 m 135.699 49.266 137.844 50.609 139.754 
52.246 c 142.098 54.594 145.902 54.594 148.246 52.246 c 150.594 49.902 150.594
 46.098 148.246 43.754 c 148.234 43.754 l 148.234 43.738 l 147.352 42.879
 146.398 42.09 145.391 41.375 c 143.137 39.719 140.695 38.328 138.121 37.234
 c 129.867 33.695 120.586 33.363 112.105 36.312 c 110.539 36.77 109.227 
37.844 108.469 39.289 c 107.711 40.73 107.578 42.422 108.094 43.969 c 108.609
 45.516 109.73 46.785 111.203 47.488 c 112.676 48.191 114.371 48.262 115.895
 47.688 c 121.594 45.672 127.84 45.875 133.391 48.266 c 76.102 47.691 m 
76.105 47.688 l 79.199 48.59 82.457 46.887 83.477 43.824 c 84.496 40.766
 82.914 37.445 79.895 36.312 c 71.414 33.367 62.141 33.695 53.891 37.234
 c 50.535 38.684 47.41 40.613 44.617 42.973 c 44.328 43.211 44.051 43.469
 43.777 43.742 c 43.754 43.754 l 41.469 46.164 41.574 49.973 43.984 52.254
 c 46.398 54.539 50.203 54.434 52.488 52.02 c 54.328 50.469 56.391 49.203
 58.609 48.266 c 64.16 45.875 70.406 45.672 76.105 47.688 c 84 78 m 84 68.062
 78.625 60 72 60 c 65.375 60 60 68.062 60 78 c 60 87.938 65.375 96 72 96
 c 78.625 96 84 87.938 84 78 c 132 78 m 132 68.062 126.625 60 120 60 c 113.375
 60 108 68.062 108 78 c 108 87.938 113.375 96 120 96 c 126.625 96 132 87.938
 132 78 c 69.035 134.953 m 64.438 140.688 69.996 147.672 77.277 146.715 
c 89.758 145.098 102.238 145.098 114.719 146.715 c 121.992 147.676 127.559
 140.691 122.961 134.953 c 116.965 127.477 107.977 120 96 120 c 84.023 120
 75.035 127.477 69.035 134.953 c f
Q Q
showpage
%%Trailer
%%EOF
