%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
384 192 m 384 242.922 363.773 291.758 327.766 327.766 c 291.758 363.773
 242.922 384 192 384 c 141.078 384 92.242 363.773 56.234 327.766 c 20.227
 291.758 0 242.922 0 192 c 0 141.078 20.227 92.242 56.234 56.234 c 92.242
 20.227 141.078 0 192 0 c 242.922 0 291.758 20.227 327.766 56.234 c 363.773
 92.242 384 141.078 384 192 c 266.785 96.527 m 271.398 98.535 275.684 101.219
 279.504 104.496 c 284.195 109.188 291.805 109.188 296.496 104.496 c 301.188
 99.805 301.188 92.195 296.496 87.504 c 296.473 87.504 l 296.473 87.48 l
 294.699 85.762 292.797 84.18 290.785 82.754 c 286.273 79.438 281.395 76.656
 276.238 74.473 c 259.734 67.387 241.176 66.727 224.207 72.625 c 221.078
 73.539 218.453 75.688 216.938 78.574 c 215.426 81.465 215.152 84.844 216.184
 87.938 c 217.215 91.031 219.461 93.574 222.406 94.977 c 225.352 96.379 
228.738 96.523 231.793 95.375 c 243.184 91.34 255.68 91.754 266.785 96.527
 c 152.211 95.375 m 152.207 95.375 l 158.398 97.184 164.914 93.77 166.953
 87.652 c 168.992 81.531 165.828 74.895 159.793 72.625 c 142.832 66.734 
124.285 67.395 107.785 74.473 c 101.07 77.363 94.82 81.23 89.23 85.945 c
 88.656 86.426 88.094 86.938 87.551 87.48 c 87.504 87.504 l 82.938 92.328
 83.148 99.941 87.973 104.508 c 92.797 109.074 100.41 108.863 104.977 104.039
 c 108.656 100.938 112.781 98.402 117.215 96.527 c 128.32 91.754 140.816
 91.34 152.207 95.375 c 168 156 m 168 136.129 157.246 120 144 120 c 130.754
 120 120 136.129 120 156 c 120 175.871 130.754 192 144 192 c 157.246 192
 168 175.871 168 156 c 264 156 m 264 136.129 253.246 120 240 120 c 226.754
 120 216 136.129 216 156 c 216 175.871 226.754 192 240 192 c 253.246 192
 264 175.871 264 156 c 138.07 269.902 m 128.879 281.375 139.992 295.344 
154.559 293.422 c 179.52 290.191 204.48 290.191 229.438 293.422 c 243.98
 295.344 255.117 281.375 245.926 269.902 c 233.93 254.953 215.953 240 192
 240 c 168.047 240 150.07 254.953 138.07 269.902 c f
Q Q
showpage
%%Trailer
%%EOF
