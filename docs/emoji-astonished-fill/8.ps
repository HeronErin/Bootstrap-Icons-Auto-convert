%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
6 3 m 6 4.656 4.656 6 3 6 c 1.344 6 0 4.656 0 3 c 0 1.344 1.344 0 3 0 c
 4.656 0 6 1.344 6 3 c 4.168 1.508 m 4.242 1.539 4.309 1.582 4.367 1.633
 c 4.543 1.809 4.809 1.543 4.633 1.367 c 4.605 1.34 4.574 1.316 4.543 1.293
 c 4.473 1.242 4.398 1.199 4.316 1.164 c 4.059 1.055 3.77 1.043 3.504 1.133
 c 3.402 1.164 3.344 1.273 3.379 1.375 c 3.41 1.477 3.523 1.527 3.621 1.492
 c 3.801 1.426 3.996 1.434 4.168 1.508 c 2.379 1.488 m 2.379 1.492 l 2.609
 1.559 2.723 1.219 2.496 1.133 c 2.23 1.043 1.941 1.055 1.684 1.164 c 1.578
 1.207 1.48 1.27 1.395 1.344 c 1.387 1.352 1.375 1.359 1.367 1.367 c 1.195
 1.551 1.469 1.809 1.641 1.625 c 1.699 1.578 1.762 1.539 1.832 1.508 c 2.004
 1.434 2.199 1.426 2.379 1.492 c 2.625 2.438 m 2.625 2.129 2.457 1.875 2.25
 1.875 c 2.043 1.875 1.875 2.129 1.875 2.438 c 1.875 2.746 2.043 3 2.25 
3 c 2.457 3 2.625 2.746 2.625 2.438 c 4.125 2.438 m 4.125 2.129 3.957 1.875
 3.75 1.875 c 3.543 1.875 3.375 2.129 3.375 2.438 c 3.375 2.746 3.543 3 
3.75 3 c 3.957 3 4.125 2.746 4.125 2.438 c 2.156 4.219 m 2.012 4.398 2.188
 4.617 2.414 4.586 c 2.805 4.535 3.195 4.535 3.586 4.586 c 3.812 4.617 3.988
 4.398 3.844 4.219 c 3.656 3.984 3.375 3.75 3 3.75 c 2.625 3.75 2.344 3.984
 2.156 4.219 c f
Q Q
showpage
%%Trailer
%%EOF
