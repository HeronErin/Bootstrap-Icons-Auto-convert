%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
157.512 192 m 120.84 192 l 122.852 178.105 128.312 164.938 136.727 153.695
 c 162.648 179.617 l 160.375 183.457 158.664 187.586 157.512 192 c 179.617
 162.648 m 153.695 136.727 l 164.938 128.312 178.105 122.852 192 120.84 
c 192 157.512 l 187.566 158.664 183.441 160.375 179.617 162.648 c 216 157.512
 m 216 120.84 l 229.895 122.852 243.062 128.312 254.305 136.727 c 228.383
 162.648 l 224.516 160.363 220.348 158.637 216 157.512 c 245.352 179.617
 m 271.273 153.695 l 279.504 164.688 285.121 177.766 287.16 192 c 250.488
 192 l 249.363 187.652 247.637 183.484 245.352 179.617 c 250.488 216 m 287.16
 216 l 285.148 229.895 279.688 243.062 271.273 254.305 c 245.352 228.383
 l 247.625 224.543 249.336 220.414 250.488 216 c 228.383 245.352 m 254.305
 271.273 l 243.062 279.688 229.895 285.148 216 287.16 c 216 250.488 l 220.434
 249.336 224.559 247.625 228.383 245.352 c 192 250.488 m 192 287.16 l 178.105
 285.148 164.938 279.688 153.695 271.273 c 179.617 245.352 l 183.457 247.625
 187.586 249.336 192 250.488 c 162.648 228.383 m 136.727 254.305 l 128.312
 243.062 122.852 229.895 120.84 216 c 157.512 216 l 158.664 220.434 160.375
 224.559 162.648 228.383 c 180 204 m 180 195.426 184.574 187.504 192 183.215
 c 199.426 178.93 208.574 178.93 216 183.215 c 223.426 187.504 228 195.426
 228 204 c 228 212.574 223.426 220.496 216 224.785 c 208.574 229.07 199.426
 229.07 192 224.785 c 184.574 220.496 180 212.574 180 204 c f
60 24 m 50.453 24 41.297 27.793 34.543 34.543 c 27.793 41.297 24 50.453
 24 60 c 24 72 l 12 72 l 5.371 72 0 77.371 0 84 c 0 90.629 5.371 96 12 96
 c 24 96 l 24 192 l 12 192 l 5.371 192 0 197.371 0 204 c 0 210.629 5.371
 216 12 216 c 24 216 l 24 312 l 12 312 l 5.371 312 0 317.371 0 324 c 0 330.629
 5.371 336 12 336 c 24 336 l 24 348 l 24 357.547 27.793 366.703 34.543 373.457
 c 41.297 380.207 50.453 384 60 384 c 348 384 l 357.547 384 366.703 380.207
 373.457 373.457 c 380.207 366.703 384 357.547 384 348 c 384 60 l 384 50.453
 380.207 41.297 373.457 34.543 c 366.703 27.793 357.547 24 348 24 c h
204 96 m 242.586 96 278.238 116.586 297.531 150 c 316.824 183.414 316.824
 224.586 297.531 258 c 278.238 291.414 242.586 312 204 312 c 165.414 312
 129.762 291.414 110.469 258 c 91.176 224.586 91.176 183.414 110.469 150
 c 129.762 116.586 165.414 96 204 96 c f
Q Q
showpage
%%Trailer
%%EOF
