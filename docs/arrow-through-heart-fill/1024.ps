%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
136.992 760.992 m 132.492 765.504 126.379 768.043 120.008 768.043 c 113.633
 768.043 107.52 765.512 103.016 761 c 98.512 756.488 95.988 750.375 96 744
 c 96 672 l 24 672 l 17.625 672.012 11.512 669.488 7 664.984 c 2.488 660.48
 -0.043 654.367 -0.043 647.992 c -0.043 641.621 2.496 635.508 7.008 631.008
 c 79.008 559.008 l 83.52 554.508 89.629 551.988 96 552 c 182.062 552 l 
331.008 403.008 l 337.078 396.938 345.926 394.566 354.219 396.789 c 362.512
 399.012 368.988 405.488 371.211 413.781 c 373.434 422.074 371.062 430.922
 364.992 436.992 c 216 585.938 l 216 672 l 216.012 678.371 213.492 684.48
 208.992 688.992 c h
768 168 m 768.012 174.375 765.488 180.488 760.984 185 c 756.48 189.512 
750.367 192.043 743.992 192.043 c 737.621 192.043 731.508 189.504 727.008
 184.992 c 672 129.938 l 623.711 178.227 l 635.039 190.129 644.832 203.715
 652.512 218.785 c 679.488 271.395 680.59 339.602 642.289 415.199 c 604.227
 490.223 527.328 573.023 397.25 659.039 c 384 667.777 l 370.754 659.043 
l 370.754 659.039 l 338.867 638.07 308.047 615.531 278.398 591.504 c 398.879
 470.879 l 417.074 452.684 424.18 426.164 417.52 401.312 c 410.859 376.457
 391.449 357.043 366.594 350.383 c 341.738 343.723 315.219 350.828 297.023
 369.023 c 175.535 490.559 l 156.324 467.254 139.609 441.996 125.664 415.199
 c 87.359 339.551 88.465 271.344 115.441 218.734 c 164.449 123.121 296.641
 86.832 384 155.184 c 444 108.145 525.312 110.641 586.176 147.887 c 638.016
 96 l 583.055 40.992 l 578.547 36.496 576.012 30.391 576.004 24.023 c 576
 17.652 578.523 11.543 583.023 7.039 c 587.523 2.535 593.633 0 600 0 c 744
 0 l 750.363 0 756.469 2.527 760.969 7.031 c 765.473 11.531 768 17.637 768
 24 c h
768 168 m f*
Q Q
showpage
%%Trailer
%%EOF
