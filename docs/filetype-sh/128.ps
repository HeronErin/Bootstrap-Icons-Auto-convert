%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 48 96 l 48 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
0.664 91.738 m 0.27 90.891 0.043 89.977 0 89.039 c 4.59 89.039 l 4.762 
89.988 5.312 90.82 6.121 91.344 c 6.543 91.637 7.039 91.863 7.613 92.027
 c 8.184 92.191 8.824 92.273 9.527 92.273 c 10.512 92.273 11.336 92.133 
12.004 91.852 c 12.008 91.855 l 12.617 91.625 13.148 91.223 13.535 90.695
 c 13.883 90.184 14.059 89.574 14.047 88.957 c 14.078 88.191 13.734 87.465
 13.129 87 c 12.523 86.52 11.602 86.133 10.355 85.844 c 6.641 84.984 l 5.5
 84.746 4.406 84.309 3.406 83.699 c 2.527 83.16 1.805 82.402 1.301 81.496
 c 0.801 80.527 0.547 79.445 0.562 78.355 c 0.562 76.891 0.941 75.613 1.703
 74.52 c 2.465 73.43 3.52 72.586 4.871 71.988 c 6.215 71.387 7.766 71.09
 9.527 71.094 c 11.355 71.094 12.914 71.398 14.207 72.004 c 15.504 72.617
 16.504 73.438 17.207 74.465 c 17.926 75.484 18.328 76.617 18.406 77.859
 c 13.906 77.859 l 13.906 77.863 l 13.805 77.293 13.559 76.758 13.188 76.312
 c 12.797 75.828 12.285 75.457 11.707 75.227 c 11.004 74.938 10.25 74.801
 9.492 74.82 c 8.188 74.82 7.164 75.125 6.414 75.73 c 5.699 76.281 5.289
 77.137 5.309 78.035 c 5.309 78.754 5.594 79.355 6.168 79.836 c 6.891 80.363
 7.719 80.723 8.598 80.887 c 12.316 81.746 l 13.625 82.047 14.758 82.469
 15.711 83.012 c 16.672 83.555 17.422 84.273 17.961 85.16 c 18.5 86.047 
18.77 87.168 18.77 88.52 c 18.77 90 18.395 91.312 17.641 92.457 c 17.645
 92.453 l 16.852 93.633 15.727 94.547 14.41 95.09 c 13.008 95.723 11.289
 96.039 9.262 96.039 c 7.738 96.039 6.406 95.859 5.273 95.5 c 5.273 95.496
 l 4.23 95.184 3.254 94.668 2.406 93.984 c 1.668 93.371 1.074 92.602 0.664
 91.734 c h
40.684 71.59 m 40.684 95.59 l 35.945 95.59 l 35.945 85.301 l 25.848 85.301
 l 25.848 95.586 l 21.094 95.586 l 21.094 71.594 l 25.848 71.594 l 25.848
 81.352 l 35.941 81.348 l 35.941 71.59 l h
40.684 71.59 m f*
Q Q
showpage
%%Trailer
%%EOF
