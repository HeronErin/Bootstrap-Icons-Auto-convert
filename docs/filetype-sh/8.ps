%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 3 6 l 3 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766
 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 
l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 
0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75
 0.336 1.086 0 1.5 0 c 3.562 0 l h
0.043 5.734 m 0.016 5.68 0.004 5.625 0 5.566 c 0.285 5.566 l 0.297 5.625
 0.332 5.676 0.383 5.711 c 0.41 5.73 0.441 5.742 0.477 5.754 c 0.512 5.766
 0.551 5.77 0.598 5.77 c 0.66 5.77 0.711 5.762 0.754 5.742 c 0.75 5.742 
l 0.789 5.727 0.82 5.703 0.848 5.668 c 0.867 5.637 0.879 5.598 0.879 5.559
 c 0.879 5.512 0.859 5.465 0.82 5.438 c 0.781 5.406 0.727 5.383 0.648 5.363
 c 0.418 5.309 l 0.414 5.312 l 0.344 5.297 0.273 5.27 0.215 5.23 c 0.156
 5.199 0.113 5.148 0.082 5.094 c 0.051 5.031 0.035 4.965 0.035 4.898 c 0.035
 4.809 0.059 4.727 0.105 4.66 c 0.152 4.594 0.219 4.539 0.305 4.5 c 0.391
 4.461 0.484 4.445 0.594 4.445 c 0.707 4.445 0.805 4.465 0.887 4.504 c 0.969
 4.543 1.031 4.594 1.074 4.656 c 1.121 4.719 1.145 4.789 1.148 4.867 c 0.867
 4.867 l 0.871 4.867 l 0.863 4.832 0.848 4.797 0.824 4.77 c 0.801 4.738 
0.77 4.715 0.73 4.703 c 0.688 4.684 0.641 4.676 0.594 4.676 c 0.512 4.676
 0.449 4.695 0.402 4.734 c 0.355 4.766 0.332 4.82 0.332 4.879 c 0.332 4.926
 0.352 4.961 0.387 4.992 c 0.387 4.988 l 0.43 5.023 0.484 5.047 0.539 5.055
 c 0.773 5.109 l 0.855 5.129 0.926 5.156 0.984 5.188 c 1.043 5.223 1.09 
5.266 1.125 5.32 c 1.16 5.375 1.176 5.445 1.176 5.531 c 1.176 5.625 1.152
 5.707 1.105 5.777 c 1.102 5.777 l 1.055 5.852 0.984 5.91 0.902 5.941 c 
0.816 5.98 0.707 6 0.582 6 c 0.488 6 0.402 5.988 0.332 5.965 c 0.328 5.969
 l 0.266 5.949 0.203 5.918 0.148 5.875 c 0.105 5.836 0.066 5.789 0.043 5.734
 c h
2.543 4.477 m 2.543 5.977 l 2.246 5.977 l 2.246 5.332 l 1.617 5.332 l 1.617
 5.977 l 1.32 5.977 l 1.32 4.477 l 1.617 4.477 l 1.617 5.086 l 2.246 5.086
 l 2.246 4.477 l h
2.543 4.477 m f*
Q Q
showpage
%%Trailer
%%EOF
