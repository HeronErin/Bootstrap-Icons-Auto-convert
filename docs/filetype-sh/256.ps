%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 96 192 l 96 180 l 144 180 l 147.184 180 150.234
 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168 c 156 54 
l 132 54 l 127.227 54 122.648 52.105 119.273 48.727 c 115.895 45.352 114
 40.773 114 36 c 114 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132 l 24
 132 l 24 24 l 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637
 0 48 0 c 114 0 l h
1.332 183.48 m 0.543 181.785 0.09 179.949 0 178.078 c 9.18 178.078 l 9.52
 179.973 10.629 181.641 12.238 182.688 c 13.078 183.273 14.074 183.727 15.227
 184.055 c 16.371 184.383 17.648 184.547 19.055 184.547 c 21.023 184.547
 22.676 184.266 24.012 183.707 c 25.234 183.25 26.297 182.445 27.07 181.391
 c 27.762 180.363 28.117 179.148 28.094 177.91 c 28.156 176.387 27.469 174.926
 26.258 174 c 25.051 173.039 23.203 172.27 20.715 171.684 c 13.285 169.969
 l 10.996 169.488 8.809 168.621 6.816 167.398 c 5.055 166.32 3.605 164.801
 2.605 162.996 c 1.598 161.055 1.09 158.895 1.129 156.707 c 1.129 153.777
 1.891 151.223 3.41 149.039 c 4.93 146.863 7.043 145.176 9.746 143.977 c
 12.434 142.777 15.539 142.18 19.059 142.188 c 22.715 142.188 25.836 142.797
 28.418 144.012 c 31.012 145.234 33.012 146.875 34.418 148.934 c 35.859 
150.973 36.656 153.238 36.816 155.727 c 27.816 155.727 l 27.816 155.723 
l 27.609 154.586 27.113 153.52 26.375 152.629 c 25.594 151.66 24.57 150.91
 23.41 150.457 c 22.008 149.875 20.5 149.598 18.984 149.641 c 16.375 149.641
 14.324 150.25 12.828 151.465 c 11.398 152.559 10.578 154.273 10.621 156.07
 c 10.621 157.512 11.191 158.711 12.336 159.672 c 13.781 160.727 15.441 
161.441 17.195 161.773 c 24.637 163.488 l 27.254 164.09 29.516 164.934 31.43
 166.02 c 33.352 167.109 34.852 168.539 35.93 170.316 c 37.008 172.094 37.551
 174.332 37.551 177.035 c 37.551 179.996 36.797 182.621 35.293 184.906 c
 33.703 187.266 31.453 189.098 28.824 190.176 c 26.016 191.441 22.586 192.07
 18.527 192.07 c 15.48 192.07 12.82 191.711 10.547 190.992 c 8.457 190.367
 6.508 189.34 4.812 187.969 c 3.34 186.738 2.152 185.203 1.332 183.469 c
 h
81.371 143.184 m 81.371 191.184 l 71.891 191.184 l 71.891 170.605 l 51.695
 170.605 l 51.695 191.172 l 42.191 191.172 l 42.191 143.184 l 51.695 143.184
 l 51.695 162.695 l 71.879 162.695 l 71.879 143.184 l h
81.371 143.184 m f*
Q Q
showpage
%%Trailer
%%EOF
