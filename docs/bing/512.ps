%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 0 327 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 0 327 384
384 384 cairo_set_page_size
%%EndPageSetup
q 72 0 255 384 rectclip
1 0 0 -1 0 384 cm q
0 g
200.398 121.105 m 196.965 121.52 193.785 123.129 191.418 125.652 c 189.047
 128.176 187.641 131.449 187.441 134.902 c 187.227 138.023 187.297 138.262
 194.379 156.477 c 210.457 197.926 214.371 207.883 215.02 209.277 c 216.637
 212.719 218.852 215.879 221.668 218.758 c 223.805 220.965 225.219 222.141
 227.598 223.75 c 231.82 226.559 233.887 227.352 250.254 232.176 c 266.191
 236.902 274.879 240.023 282.367 243.742 c 292.086 248.566 298.879 254.062
 303.152 260.543 c 306.223 265.223 308.961 273.598 310.137 282.047 c 310.617
 285.336 310.617 292.605 310.137 295.582 c 309.152 302.062 307.16 307.461
 304.09 311.996 c 302.48 314.395 303.035 314.012 305.41 311.059 c 312.082
 302.754 318.898 288.547 322.379 275.66 c 322.367 275.664 l 328.574 252.703
 326.883 228.324 317.57 206.441 c 308.258 184.555 291.855 166.438 271.008
 154.992 c 263.93 151.223 256.828 147.5 249.695 143.832 c 236.977 137.184
 l 228.504 132.77 l 224.664 130.801 222.121 129.457 220.223 128.449 c 211.391
 123.84 207.672 121.969 206.59 121.656 c 206.594 121.656 l 205.066 121.266
 203.508 121.023 201.938 120.938 c h
200.398 121.105 m f
219.648 275.832 m 218.551 276.469 217.469 277.133 216.406 277.824 c 204.285
 285.262 192.18 292.734 180.098 300.238 c 160.898 312.141 l 160.609 312.379
 146.809 320.949 139.875 325.172 c 139.871 325.176 l 134.504 328.418 128.523
 330.52 122.305 331.344 c 119.426 331.75 113.93 331.75 111.023 331.344 c
 103.336 330.332 96.035 327.375 89.809 322.754 c 86.594 320.148 83.66 317.223
 81.047 314.016 c 77.012 308.613 74.227 302.383 72.887 295.777 c 72.73 294.797
 72.516 293.824 72.238 292.871 c 72.117 292.727 72.336 295.078 72.766 298.152
 c 73.199 301.32 74.133 305.93 75.117 309.887 c 75.121 309.887 l 83.055 
340.562 105.27 365.539 134.809 376.992 c 143.426 380.398 152.09 382.512 
161.543 383.594 c 165.07 383.977 175.129 384.145 178.824 383.859 c 178.824
 383.855 l 195.57 382.66 211.73 377.199 225.77 367.992 c 231.41 364.418 
l 240.867 358.465 l 247.059 354.555 l 274.996 336.891 l 287.234 329.211 
290.906 326.5 296.598 320.93 c 298.973 318.602 302.551 314.641 302.719 314.137
 c 302.766 314.016 303.391 313.031 304.133 311.953 c 304.129 311.953 l 307.328
 307.012 309.375 301.418 310.129 295.586 c 310.609 292.609 310.609 285.34
 310.129 282.027 c 310.129 282.023 l 309.23 275.762 307.512 269.645 305.016
 263.832 c 301.414 256.297 293.734 249.434 282.742 243.91 c 280.633 242.789
 278.445 241.828 276.191 241.031 c 276.047 241.031 265.801 247.27 253.438
 254.953 c 226.727 271.441 l h
219.648 275.832 m f
72.098 292.414 m 72.816 295.512 l 74.953 305.16 78.695 312.145 85.176 318.625
 c 93.477 327.051 104.836 331.754 116.664 331.656 c 125.328 331.656 132.816
 329.496 140.52 324.77 c 151.848 317.809 l 160.801 312.289 l 160.801 128.016
 l 160.801 91.129 160.73 69.215 160.609 67.512 c 159.93 56.844 155.359 46.793
 147.77 39.266 c 145.441 36.961 143.449 35.426 137.523 31.344 c 100.391 
5.762 l 94.656 1.852 94.199 1.562 92.469 0.961 c 92.473 0.961 l 88.32 -0.625
 83.68 -0.301 79.789 1.844 c 75.895 3.992 73.145 7.738 72.266 12.098 c 72.051
 13.105 72.027 26.57 72.027 99.602 c 72.098 292.441 l h
72.098 292.414 m f
Q Q
showpage
%%Trailer
%%EOF
