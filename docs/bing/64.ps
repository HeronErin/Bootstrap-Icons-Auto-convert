%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 9 0 41 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 9 0 41 48
48 48 cairo_set_page_size
%%EndPageSetup
q 9 0 32 48 rectclip
1 0 0 -1 0 48 cm q
0 g
25.051 15.137 m 24.164 15.246 23.48 15.973 23.43 16.863 c 23.402 17.254
 23.41 17.285 24.297 19.559 c 26.309 24.738 26.797 25.984 26.875 26.16 c
 27.078 26.59 27.355 26.984 27.707 27.344 c 27.973 27.621 28.152 27.766 
28.449 27.969 c 28.977 28.32 29.234 28.418 31.281 29.023 c 33.273 29.613
 34.359 30.004 35.297 30.469 c 36.512 31.07 37.359 31.758 37.895 32.57 c
 38.277 33.156 38.621 34.203 38.766 35.258 c 38.824 35.668 38.824 36.578
 38.766 36.949 c 38.645 37.758 38.395 38.434 38.008 39 c 37.809 39.301 37.875
 39.254 38.172 38.883 c 39.008 37.844 39.859 36.07 40.293 34.457 c 40.297
 34.457 l 41.895 28.551 39.238 22.32 33.875 19.375 c 32.992 18.902 32.102
 18.438 31.211 17.98 c 29.621 17.148 l 28.562 16.598 l 28.082 16.352 27.766
 16.184 27.527 16.059 c 26.422 15.484 25.957 15.25 25.824 15.211 c 25.824
 15.207 l 25.633 15.156 25.438 15.129 25.242 15.117 c h
25.051 15.137 m f
27.457 34.48 m 27.32 34.559 27.184 34.641 27.051 34.727 c 25.535 35.656
 24.023 36.594 22.512 37.531 c 20.113 39.02 l 20.078 39.051 18.352 40.121
 17.484 40.648 c 16.812 41.051 16.066 41.316 15.289 41.418 c 14.93 41.469
 14.242 41.469 13.879 41.418 c 12.918 41.293 12.004 40.922 11.227 40.344
 c 10.824 40.02 10.457 39.652 10.133 39.254 c 9.625 38.578 9.277 37.797 
9.109 36.973 c 9.09 36.848 9.066 36.727 9.031 36.609 c 9.016 36.59 9.043
 36.887 9.098 37.27 c 9.152 37.664 9.27 38.242 9.391 38.738 c 9.391 38.734
 l 10.383 42.57 13.16 45.691 16.852 47.125 c 17.93 47.551 19.012 47.816 
20.195 47.949 c 20.637 47.996 21.895 48.02 22.355 47.98 c 22.352 47.98 l
 24.445 47.832 26.465 47.148 28.223 46 c 28.926 45.555 l 30.109 44.812 l
 30.883 44.324 l 34.375 42.117 l 35.906 41.156 36.363 40.816 37.074 40.121
 c 37.371 39.832 37.816 39.336 37.84 39.273 c 37.848 39.258 37.926 39.137
 38.016 39 c 38.016 38.992 l 38.414 38.375 38.672 37.676 38.766 36.949 c
 38.824 36.578 38.824 35.668 38.766 35.254 c 38.652 34.469 38.438 33.707
 38.129 32.98 c 37.68 32.039 36.719 31.18 35.344 30.492 c 35.344 30.488 
l 35.078 30.348 34.805 30.227 34.523 30.129 c 34.504 30.129 33.223 30.91
 31.68 31.867 c 28.34 33.93 l h
27.457 34.48 m f
9.012 36.551 m 9.102 36.938 l 9.367 38.145 9.836 39.016 10.648 39.828 c
 11.684 40.883 13.105 41.469 14.582 41.457 c 15.664 41.457 16.602 41.188
 17.562 40.598 c 18.977 39.727 l 20.094 39.035 l 20.102 16.004 l 20.102 
11.395 20.094 8.652 20.078 8.441 c 20.074 8.438 l 19.992 7.105 19.422 5.848
 18.473 4.906 c 18.184 4.617 17.934 4.426 17.191 3.918 c 12.551 0.719 l 
11.832 0.23 11.777 0.195 11.562 0.117 c 11.559 0.121 l 11.039 -0.078 10.461
 -0.039 9.973 0.23 c 9.488 0.5 9.145 0.969 9.031 1.512 c 9.004 1.637 9 3.32
 9 12.449 c 9.008 36.555 l h
9.012 36.551 m f
Q Q
showpage
%%Trailer
%%EOF
