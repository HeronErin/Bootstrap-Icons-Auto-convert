%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 2 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 2 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 2 0 9 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6.262 3.785 m 6.039 3.812 5.871 3.992 5.859 4.215 c 5.852 4.312 5.855 4.32
 6.074 4.891 c 6.578 6.188 6.699 6.496 6.719 6.539 c 6.77 6.648 6.84 6.746
 6.926 6.836 c 6.992 6.906 7.035 6.941 7.109 6.992 c 7.242 7.078 7.305 7.105
 7.816 7.254 c 8.312 7.402 8.586 7.5 8.82 7.617 c 9.125 7.77 9.336 7.941
 9.469 8.141 c 9.566 8.285 9.648 8.547 9.688 8.812 c 9.703 8.914 9.703 9.141
 9.688 9.234 c 9.656 9.438 9.594 9.605 9.5 9.746 c 9.449 9.82 9.469 9.809
 9.543 9.719 c 9.75 9.461 9.965 9.016 10.074 8.613 c 10.473 7.137 9.809 
5.578 8.469 4.844 c 8.246 4.727 8.027 4.609 7.805 4.496 c 7.406 4.289 l 
7.141 4.152 l 7.02 4.09 6.941 4.051 6.883 4.016 c 6.605 3.871 6.492 3.812
 6.457 3.805 c 6.457 3.801 l 6.41 3.789 6.359 3.781 6.309 3.777 c h
6.262 3.785 m f
6.863 8.621 m 6.828 8.641 6.797 8.66 6.762 8.684 c 6.383 8.914 6.004 9.148
 5.629 9.383 c 5.027 9.754 l 5.02 9.762 4.586 10.027 4.371 10.16 c 4.203
 10.262 4.016 10.328 3.82 10.355 c 3.73 10.367 3.559 10.367 3.469 10.355
 c 3.23 10.324 3 10.23 2.805 10.086 c 2.707 10.004 2.613 9.914 2.531 9.812
 c 2.406 9.645 2.32 9.449 2.277 9.242 c 2.273 9.211 2.266 9.184 2.258 9.152
 c 2.254 9.148 2.262 9.223 2.273 9.316 c 2.285 9.414 2.316 9.559 2.348 9.684
 c 2.594 10.641 3.289 11.422 4.211 11.781 c 4.48 11.887 4.75 11.953 5.047
 11.988 c 5.156 12 5.473 12.004 5.586 11.996 c 5.59 11.996 l 6.113 11.957
 6.617 11.789 7.055 11.5 c 7.23 11.387 l 7.527 11.199 l 7.723 11.078 l 8.594
 10.527 l 8.977 10.289 9.09 10.203 9.27 10.027 c 9.344 9.953 9.457 9.832
 9.461 9.816 c 9.461 9.812 9.48 9.781 9.504 9.75 c 9.605 9.594 9.668 9.418
 9.691 9.238 c 9.707 9.145 9.707 8.918 9.691 8.816 c 9.691 8.812 l 9.664
 8.617 9.609 8.426 9.531 8.246 c 9.418 8.012 9.18 7.797 8.836 7.625 c 8.836
 7.621 l 8.77 7.586 8.703 7.559 8.633 7.531 c 8.629 7.531 8.309 7.727 7.922
 7.965 c 7.086 8.48 l h
6.863 8.621 m f
2.254 9.137 m 2.277 9.234 l 2.344 9.535 2.461 9.754 2.664 9.957 c 2.66 
9.957 l 2.922 10.219 3.277 10.367 3.645 10.363 c 3.914 10.363 4.148 10.297
 4.391 10.148 c 4.746 9.93 l 5.027 9.758 l 5.023 4 l 5.023 2.848 5.02 2.164
 5.016 2.109 c 5.02 2.109 l 4.996 1.777 4.855 1.461 4.617 1.227 c 4.543 
1.156 4.48 1.105 4.297 0.98 c 3.137 0.18 l 2.957 0.059 2.941 0.047 2.891
 0.031 c 2.762 -0.02 2.613 -0.008 2.492 0.059 c 2.371 0.125 2.285 0.242 
2.258 0.379 c 2.25 0.41 2.25 0.832 2.25 3.113 c 2.254 9.141 l h
2.254 9.137 m f
Q Q
showpage
%%Trailer
%%EOF
