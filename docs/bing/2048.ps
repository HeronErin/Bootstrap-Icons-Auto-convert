%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1305 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1305 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 1017 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
801.602 484.414 m 787.859 486.082 775.141 492.52 765.664 502.609 c 756.188
 512.699 750.559 525.797 749.762 539.617 c 748.898 552.098 749.188 553.059
 777.504 625.922 c 841.824 791.715 857.473 831.555 860.062 837.121 c 866.527
 850.883 875.391 863.52 886.656 875.043 c 895.199 883.875 900.863 888.578
 910.367 895.012 c 927.262 906.242 935.52 909.41 1000.992 928.707 c 1064.734
 947.617 1099.488 960.098 1129.441 974.98 c 1168.32 994.277 1195.488 1016.262
 1212.578 1042.18 c 1224.867 1060.898 1235.809 1094.402 1240.516 1128.195
 c 1242.438 1141.348 1242.438 1170.434 1240.516 1182.34 c 1236.578 1208.262
 1228.613 1229.859 1216.324 1248.004 c 1209.891 1257.605 1212.102 1256.066
 1221.605 1244.262 c 1248.293 1211.047 1275.559 1154.215 1289.477 1102.66
 c 1289.473 1102.656 l 1314.297 1010.816 1307.539 913.297 1270.281 825.762
 c 1233.023 738.223 1167.43 665.746 1084.031 619.969 c 1055.723 604.883 
1027.305 590.004 998.785 575.328 c 947.906 548.734 l 914.02 531.07 l 898.66
 523.199 888.484 517.824 880.898 513.789 c 845.57 495.355 830.691 487.867
 826.371 486.621 c 826.367 486.625 l 820.27 485.055 814.031 484.09 807.742
 483.742 c h
801.602 484.414 m f
878.594 1103.328 m 874.203 1105.871 869.883 1108.527 865.633 1111.297 c
 817.133 1141.051 768.719 1170.938 720.383 1200.961 c 643.582 1248.578 l
 642.43 1249.539 587.23 1283.809 559.484 1300.707 c 559.488 1300.703 l 538.012
 1313.672 514.086 1322.074 489.215 1325.375 c 477.695 1327.008 455.711 1327.008
 444.094 1325.375 c 444.098 1325.375 l 413.348 1321.32 384.137 1309.492 
359.23 1291.008 c 346.379 1280.598 334.637 1268.887 324.191 1256.062 c 308.051
 1234.457 296.902 1209.539 291.551 1183.105 c 290.93 1179.184 290.062 1175.301
 288.961 1171.488 c 288.48 1170.914 289.344 1180.32 291.074 1192.609 c 292.801
 1205.281 296.547 1223.715 300.48 1239.555 c 300.48 1239.551 l 316.121 1300.027
 345.934 1355.914 387.449 1402.586 c 428.965 1449.262 480.992 1485.383 539.23
 1507.969 c 573.695 1521.602 608.352 1530.047 646.176 1534.367 c 660.289
 1535.902 700.512 1536.574 715.297 1535.422 c 715.297 1535.426 l 782.277
 1530.637 846.918 1508.793 903.07 1471.969 c 925.629 1457.664 l 963.453 
1433.855 l 988.223 1418.207 l 1099.965 1347.551 l 1148.926 1316.832 1163.613
 1305.984 1186.363 1283.711 c 1195.867 1274.398 1210.172 1258.559 1210.844
 1256.543 c 1211.035 1256.062 1213.531 1252.129 1216.508 1247.809 c 1216.512
 1247.809 l 1229.305 1228.051 1237.508 1205.68 1240.512 1182.336 c 1242.434
 1170.434 1242.434 1141.344 1240.512 1128.098 c 1236.922 1103.047 1230.047
 1078.582 1220.062 1055.328 c 1205.664 1025.184 1174.941 997.727 1130.973
 975.648 c 1130.977 975.648 l 1122.539 971.16 1113.777 967.309 1104.77 964.129
 c 1104.195 964.129 1063.203 989.09 1013.762 1019.809 c 906.914 1085.762
 l h
878.594 1103.328 m f
288.383 1169.664 m 291.262 1182.047 l 299.805 1220.641 314.781 1248.574
 340.703 1274.496 c 357.133 1291.184 376.75 1304.395 398.387 1313.352 c 
420.023 1322.305 443.238 1326.82 466.656 1326.625 c 501.312 1326.625 531.266
 1317.984 562.082 1299.074 c 607.395 1271.234 l 643.203 1249.156 l 643.199
 512.062 l 643.199 364.512 642.91 276.863 642.43 270.047 c 642.434 270.047
 l 639.719 227.367 621.445 187.164 591.07 157.055 c 581.758 147.84 573.789
 141.695 550.078 125.375 c 401.566 23.039 l 378.621 7.391 376.797 6.238 
369.887 3.84 c 353.277 -2.492 334.719 -1.199 319.148 7.383 c 303.582 15.961
 292.574 30.957 289.055 48.383 c 288.191 52.414 288.094 106.27 288.094 398.398
 c 288.383 1169.758 l h
288.383 1169.664 m f
Q Q
showpage
%%Trailer
%%EOF
