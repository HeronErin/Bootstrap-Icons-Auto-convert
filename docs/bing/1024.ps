%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 0 653 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 0 653 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 0 509 768 rectclip
1 0 0 -1 0 768 cm q
0 g
400.801 242.207 m 393.93 243.039 387.57 246.262 382.832 251.305 c 378.094
 256.352 375.281 262.898 374.879 269.809 c 374.445 276.047 374.59 276.527
 388.75 312.961 c 420.91 395.855 428.734 415.777 430.031 418.562 c 433.262
 425.441 437.695 431.762 443.328 437.523 c 447.602 441.938 450.434 444.293
 455.184 447.508 c 463.633 453.125 467.758 454.707 500.496 464.355 c 532.367
 473.812 549.742 480.051 564.719 487.492 c 584.16 497.141 597.742 508.133
 606.285 521.094 c 612.43 530.453 617.902 547.207 620.254 564.102 c 621.215
 570.676 621.215 585.223 620.254 591.172 c 618.285 604.133 614.301 614.934
 608.156 624.004 c 604.941 628.805 606.043 628.035 610.797 622.133 c 624.141
 605.523 637.773 577.109 644.734 551.332 c 644.734 551.328 l 657.148 505.406
 653.77 456.648 635.141 412.879 c 616.512 369.113 583.715 332.875 542.016
 309.984 c 527.863 302.441 513.652 295.004 499.391 287.664 c 473.949 274.367
 l 457.004 265.535 l 449.324 261.598 444.234 258.91 440.445 256.895 c 422.781
 247.68 415.34 243.934 413.18 243.309 c 413.184 243.312 l 410.133 242.527
 407.016 242.047 403.871 241.871 c h
400.801 242.207 m f
439.297 551.664 m 437.102 552.934 434.941 554.262 432.816 555.648 c 408.566
 570.523 384.359 585.469 360.191 600.48 c 321.793 624.289 l 321.219 624.77
 293.617 641.906 279.746 650.352 c 279.742 650.352 l 269.004 656.836 257.043
 661.035 244.609 662.688 c 238.848 663.504 227.855 663.504 222.051 662.688
 c 222.047 662.688 l 206.672 660.66 192.07 654.746 179.617 645.504 c 173.191
 640.301 167.32 634.445 162.098 628.031 c 154.027 617.227 148.453 604.77
 145.777 591.551 c 145.465 589.59 145.031 587.652 144.48 585.742 c 144.242
 585.453 144.672 590.156 145.535 596.301 c 146.398 602.637 148.27 611.852
 150.238 619.773 c 150.238 619.777 l 158.062 650.016 172.965 677.957 193.723
 701.293 c 214.48 724.629 240.496 742.691 269.617 753.984 c 286.848 760.801
 304.176 765.023 323.09 767.184 c 330.145 767.953 350.258 768.289 357.648
 767.711 c 391.137 765.316 423.457 754.395 451.535 735.984 c 462.816 728.832
 l 481.727 716.93 l 494.109 709.105 l 549.98 673.777 l 574.461 658.418 581.805
 652.992 593.18 641.855 c 597.934 637.199 605.082 629.281 605.418 628.27
 c 605.516 628.031 606.762 626.062 608.25 623.902 c 608.258 623.902 l 614.652
 614.027 618.754 602.84 620.258 591.168 c 621.219 585.215 621.219 570.672
 620.258 564.047 c 618.461 551.523 615.023 539.289 610.031 527.664 c 602.832
 512.594 587.473 498.863 565.488 487.824 c 561.27 485.582 556.891 483.656
 552.383 482.062 c 552.094 482.062 531.598 494.543 506.879 509.902 c 453.453
 542.879 l h
439.297 551.664 m f
144.191 584.832 m 145.633 591.023 l 149.906 610.32 157.395 624.289 170.352
 637.246 c 186.949 654.105 209.672 663.508 233.328 663.312 c 250.656 663.312
 265.633 658.992 281.039 649.535 c 303.695 635.613 l 321.598 624.574 l 321.602
 256.031 l 321.602 182.254 321.457 138.43 321.219 135.023 c 321.215 135.023
 l 319.859 113.684 310.723 93.582 295.535 78.527 c 290.879 73.918 286.895
 70.848 275.039 62.688 c 200.785 11.52 l 189.312 3.695 188.402 3.121 184.945
 1.918 c 184.945 1.922 l 176.637 -1.246 167.359 -0.598 159.574 3.691 c 151.789
 7.98 146.285 15.48 144.527 24.191 c 144.094 26.207 144.047 53.137 144.047
 199.199 c 144.191 584.879 l h
144.191 584.832 m f
Q Q
showpage
%%Trailer
%%EOF
