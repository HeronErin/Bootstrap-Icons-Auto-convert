%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 84 rectclip
1 0 0 -1 0 96 cm q
0 g
12.875 18.875 m 13.438 18.312 14.203 17.996 15 17.996 c 15.797 17.996 16.562
 18.312 17.125 18.875 c 22.062 23.82 l 23.816 25.578 23.816 28.422 22.062
 30.18 c 17.125 35.125 l 15.949 36.297 14.051 36.297 12.875 35.125 c 11.703
 33.949 11.703 32.051 12.875 30.875 c 16.758 27 l 12.875 23.125 l 12.312
 22.562 11.996 21.797 11.996 21 c 11.996 20.203 12.312 19.438 12.875 18.875
 c 24 36 m 24 34.344 25.344 33 27 33 c 33 33 l 34.656 33 36 34.344 36 36
 c 36 37.656 34.656 39 33 39 c 27 39 l 25.344 39 24 37.656 24 36 c 62.125
 18.875 m 60.949 17.703 59.051 17.703 57.875 18.875 c 56.703 20.051 56.703
 21.949 57.875 23.125 c 61.758 27 l 57.875 30.875 l 56.703 32.051 56.703
 33.949 57.875 35.125 c 59.051 36.297 60.949 36.297 62.125 35.125 c 67.062
 30.18 l 68.816 28.422 68.816 25.578 67.062 23.82 c h
72 33 m 70.344 33 69 34.344 69 36 c 69 37.656 70.344 39 72 39 c 78 39 l
 79.656 39 81 37.656 81 36 c 81 34.344 79.656 33 78 33 c h
72 33 m f
0 18 m 0 11.371 5.371 6 12 6 c 84 6 l 87.184 6 90.234 7.266 92.484 9.516
 c 94.734 11.766 96 14.816 96 18 c 96 78 l 96 81.184 94.734 84.234 92.484
 86.484 c 90.234 88.734 87.184 90 84 90 c 12 90 l 5.371 90 0 84.629 0 78
 c h
12 12 m 8.688 12 6 14.688 6 18 c 6 78 l 6 79.59 6.633 81.117 7.758 82.242
 c 8.883 83.367 10.41 84 12 84 c 45 84 l 45 12 l h
51 12 m 51 84 l 84 84 l 85.59 84 87.117 83.367 88.242 82.242 c 89.367 81.117
 90 79.59 90 78 c 90 18 l 90 16.41 89.367 14.883 88.242 13.758 c 87.117 
12.633 85.59 12 84 12 c h
51 12 m f
Q Q
showpage
%%Trailer
%%EOF
