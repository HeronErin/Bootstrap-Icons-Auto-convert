%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
51.504 75.504 m 53.754 73.246 56.812 71.98 60 71.98 c 63.188 71.98 66.246
 73.246 68.496 75.504 c 88.25 95.281 l 88.246 95.281 l 91.617 98.656 93.512
 103.23 93.512 108 c 93.512 112.77 91.617 117.344 88.246 120.719 c 68.492
 140.496 l 68.496 140.496 l 63.805 145.188 56.195 145.188 51.504 140.496
 c 46.812 135.805 46.812 128.195 51.504 123.504 c 67.031 108 l 51.504 92.496
 l 49.246 90.246 47.98 87.188 47.98 84 c 47.98 80.812 49.246 77.754 51.504
 75.504 c 96 144 m 96 137.371 101.371 132 108 132 c 132 132 l 138.629 132
 144 137.371 144 144 c 144 150.629 138.629 156 132 156 c 108 156 l 101.371
 156 96 150.629 96 144 c 248.496 75.504 m 243.805 70.812 236.195 70.812 
231.504 75.504 c 226.812 80.195 226.812 87.805 231.504 92.496 c 247.031 
108 l 231.504 123.504 l 226.812 128.195 226.812 135.805 231.504 140.496 
c 236.195 145.188 243.805 145.188 248.496 140.496 c 268.25 120.719 l 268.246
 120.719 l 271.617 117.344 273.512 112.77 273.512 108 c 273.512 103.23 271.617
 98.656 268.246 95.281 c h
288 132 m 281.371 132 276 137.371 276 144 c 276 150.629 281.371 156 288
 156 c 312 156 l 318.629 156 324 150.629 324 144 c 324 137.371 318.629 132
 312 132 c h
288 132 m f
0 72 m 0 59.27 5.059 47.062 14.059 38.059 c 23.062 29.059 35.27 24 48 24
 c 336 24 l 348.73 24 360.938 29.059 369.941 38.059 c 378.941 47.062 384
 59.27 384 72 c 384 312 l 384 324.73 378.941 336.938 369.941 345.941 c 360.938
 354.941 348.73 360 336 360 c 48 360 l 35.27 360 23.062 354.941 14.059 345.941
 c 5.059 336.938 0 324.73 0 312 c h
48 48 m 41.637 48 35.531 50.527 31.031 55.031 c 26.527 59.531 24 65.637
 24 72 c 24 312 l 24 318.363 26.527 324.469 31.031 328.969 c 35.531 333.473
 41.637 336 48 336 c 180 336 l 180 48 l h
204 48 m 204 336 l 336 336 l 342.363 336 348.469 333.473 352.969 328.969
 c 357.473 324.469 360 318.363 360 312 c 360 72 l 360 65.637 357.473 59.531
 352.969 55.031 c 348.469 50.527 342.363 48 336 48 c h
204 48 m f
Q Q
showpage
%%Trailer
%%EOF
