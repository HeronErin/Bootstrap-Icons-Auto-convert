%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 96 384 288
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 96 384 288
384 384 cairo_set_page_size
%%EndPageSetup
q 0 96 384 192 rectclip
1 0 0 -1 0 384 cm q
0 g
336 180 m 336 192.863 329.137 204.746 318 211.176 c 306.863 217.609 293.137
 217.609 282 211.176 c 270.863 204.746 264 192.863 264 180 c 264 167.137
 270.863 155.254 282 148.824 c 293.137 142.391 306.863 142.391 318 148.824
 c 329.137 155.254 336 167.137 336 180 c 60 144 m 53.371 144 48 149.371 
48 156 c 48 162.629 53.371 168 60 168 c 156 168 l 162.629 168 168 162.629
 168 156 c 168 149.371 162.629 144 156 144 c h
60 192 m 53.371 192 48 197.371 48 204 c 48 210.629 53.371 216 60 216 c 
156 216 l 162.629 216 168 210.629 168 204 c 168 197.371 162.629 192 156 
192 c h
60 192 m f
0 144 m 0 131.27 5.059 119.062 14.059 110.059 c 23.062 101.059 35.27 96
 48 96 c 336 96 l 348.73 96 360.938 101.059 369.941 110.059 c 378.941 119.062
 384 131.27 384 144 c 384 216 l 384 228.73 378.941 240.938 369.941 249.941
 c 360.938 258.941 348.73 264 336 264 c 336 270.363 333.473 276.469 328.969
 280.969 c 324.469 285.473 318.363 288 312 288 c 288 288 l 281.637 288 275.531
 285.473 271.031 280.969 c 266.527 276.469 264 270.363 264 264 c 120 264
 l 120 270.363 117.473 276.469 112.969 280.969 c 108.469 285.473 102.363
 288 96 288 c 72 288 l 65.637 288 59.531 285.473 55.031 280.969 c 50.527
 276.469 48 270.363 48 264 c 35.27 264 23.062 258.941 14.059 249.941 c 5.059
 240.938 0 228.73 0 216 c h
48 120 m 41.637 120 35.531 122.527 31.031 127.031 c 26.527 131.531 24 137.637
 24 144 c 24 216 l 24 222.363 26.527 228.469 31.031 232.969 c 35.531 237.473
 41.637 240 48 240 c 336 240 l 342.363 240 348.469 237.473 352.969 232.969
 c 357.473 228.469 360 222.363 360 216 c 360 144 l 360 137.637 357.473 131.531
 352.969 127.031 c 348.469 122.527 342.363 120 336 120 c h
48 120 m f
Q Q
showpage
%%Trailer
%%EOF
