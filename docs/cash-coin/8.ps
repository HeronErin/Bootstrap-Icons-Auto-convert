%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.125 5.625 m 4.953 5.625 5.625 4.953 5.625 4.125 c 5.625 3.297 4.953 2.625
 4.125 2.625 c 3.297 2.625 2.625 3.297 2.625 4.125 c 2.625 4.953 3.297 5.625
 4.125 5.625 c 6 4.125 m 6 5.16 5.16 6 4.125 6 c 3.09 6 2.25 5.16 2.25 4.125
 c 2.25 3.09 3.09 2.25 4.125 2.25 c 5.16 2.25 6 3.09 6 4.125 c f*
3.539 4.48 m 3.559 4.703 3.734 4.879 4.051 4.898 c 4.051 5.062 l 4.191 
5.062 l 4.191 4.895 l 4.52 4.871 4.711 4.695 4.711 4.441 c 4.711 4.211 4.566
 4.09 4.301 4.027 c 4.191 4 l 4.191 3.551 l 4.332 3.566 4.422 3.645 4.441
 3.75 c 4.688 3.75 l 4.668 3.535 4.484 3.367 4.188 3.348 c 4.191 3.188 l
 4.051 3.188 l 4.051 3.355 l 3.77 3.383 3.582 3.551 3.582 3.789 c 3.582 
4 3.723 4.133 3.961 4.188 c 4.055 4.211 l 4.055 4.688 l 3.91 4.664 3.816
 4.586 3.793 4.477 c 3.543 4.477 l h
4.051 3.973 m 3.914 3.941 3.836 3.875 3.836 3.777 c 3.836 3.668 3.918 3.586
 4.051 3.562 c 4.051 3.977 l h
4.211 4.254 m 4.379 4.293 4.457 4.355 4.457 4.469 c 4.457 4.598 4.359 4.684
 4.191 4.699 c 4.191 4.25 l h
4.211 4.254 m f
0.375 0 m 0.168 0 0 0.168 0 0.375 c 0 3.375 l 0 3.473 0.039 3.57 0.109 
3.641 c 0.18 3.711 0.277 3.75 0.375 3.75 c 1.906 3.75 l 1.93 3.621 1.961
 3.496 2.004 3.375 c 1.125 3.375 l 1.125 3.176 1.047 2.984 0.906 2.844 c
 0.766 2.703 0.574 2.625 0.375 2.625 c 0.375 1.125 l 0.574 1.125 0.766 1.047
 0.906 0.906 c 1.047 0.766 1.125 0.574 1.125 0.375 c 4.875 0.375 l 4.875
 0.574 4.953 0.766 5.094 0.906 c 5.234 1.047 5.426 1.125 5.625 1.125 c 5.625
 2.449 l 5.766 2.578 5.895 2.723 6 2.883 c 6 0.375 l 6 0.277 5.961 0.18 
5.891 0.109 c 5.82 0.039 5.723 0 5.625 0 c h
0.375 0 m f
3.75 1.906 m 3.75 1.875 l 3.75 1.613 3.613 1.367 3.387 1.234 c 3.164 1.098
 2.883 1.09 2.652 1.211 c 2.418 1.336 2.266 1.57 2.25 1.832 c 2.234 2.094
 2.359 2.344 2.574 2.492 c 2.898 2.188 3.309 1.98 3.75 1.906 c f
Q Q
showpage
%%Trailer
%%EOF
