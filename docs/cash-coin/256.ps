%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
132 180 m 149.148 180 164.996 170.852 173.57 156 c 182.145 141.148 182.145
 122.852 173.57 108 c 164.996 93.148 149.148 84 132 84 c 114.852 84 99.004
 93.148 90.43 108 c 81.855 122.852 81.855 141.148 90.43 156 c 99.004 170.852
 114.852 180 132 180 c 192 132 m 192 153.438 180.562 173.242 162 183.961
 c 143.438 194.68 120.562 194.68 102 183.961 c 83.438 173.242 72 153.438
 72 132 c 72 110.562 83.438 90.758 102 80.039 c 120.562 69.32 143.438 69.32
 162 80.039 c 180.562 90.758 192 110.562 192 132 c f*
113.258 143.328 m 113.82 150.48 119.473 156.047 129.613 156.719 c 129.613
 162 l 134.113 162 l 134.113 156.684 l 144.613 155.953 150.746 150.336 150.746
 142.199 c 150.746 134.785 146.066 130.969 137.668 129 c 134.117 128.16 
l 134.117 113.762 l 138.629 114.277 141.484 116.738 142.168 120.145 c 150.062
 120.145 l 149.5 113.246 143.582 107.855 134.113 107.27 c 134.113 102 l 
129.613 102 l 129.613 107.398 l 120.648 108.273 114.555 113.664 114.555 
121.293 c 114.555 128.035 119.09 132.332 126.641 134.086 c 129.617 134.816
 l 129.617 150.082 l 125.008 149.387 121.949 146.844 121.266 143.324 c 113.25
 143.324 l h
129.578 127.082 m 125.148 126.062 122.75 123.961 122.75 120.816 c 122.75
 117.289 125.344 114.648 129.613 113.879 c 129.613 127.078 l h
134.762 136.035 m 140.148 137.281 142.621 139.301 142.621 142.863 c 142.621
 146.93 139.535 149.715 134.113 150.23 c 134.113 135.891 l h
134.762 136.035 m f
12 0 m 5.371 0 0 5.371 0 12 c 0 108 l 0 111.184 1.266 114.234 3.516 116.484
 c 5.766 118.734 8.816 120 12 120 c 60.996 120 l 61.699 115.863 62.73 111.863
 64.094 108 c 36 108 l 36 101.637 33.473 95.531 28.969 91.031 c 24.469 86.527
 18.363 84 12 84 c 12 36 l 18.363 36 24.469 33.473 28.969 28.969 c 33.473
 24.469 36 18.363 36 12 c 156 12 l 156 18.363 158.527 24.469 163.031 28.969
 c 167.531 33.473 173.637 36 180 36 c 180 78.336 l 184.559 82.414 188.605
 87.07 192 92.184 c 192 12 l 192 8.816 190.734 5.766 188.484 3.516 c 186.234
 1.266 183.184 0 180 0 c h
12 0 m f
119.977 60.996 m 120 60 l 119.996 51.594 115.594 43.805 108.395 39.461 
c 101.195 35.121 92.25 34.863 84.812 38.781 c 77.375 42.699 72.531 50.223
 72.039 58.613 c 71.551 67.004 75.484 75.043 82.414 79.801 c 92.789 69.938
 105.867 63.391 119.977 60.996 c f
Q Q
showpage
%%Trailer
%%EOF
