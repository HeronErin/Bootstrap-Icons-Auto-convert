%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 1440 m 1157.844 1440 1255.516 1399.543 1327.527 1327.527 c 1399.543
 1255.516 1440 1157.844 1440 1056 c 1440 954.156 1399.543 856.484 1327.527
 784.473 c 1255.516 712.457 1157.844 672 1056 672 c 954.156 672 856.484 
712.457 784.473 784.473 c 712.457 856.484 672 954.156 672 1056 c 672 1157.844
 712.457 1255.516 784.473 1327.527 c 856.484 1399.543 954.156 1440 1056 
1440 c 1536 1056 m 1536 1183.305 1485.43 1305.395 1395.41 1395.41 c 1305.395
 1485.43 1183.305 1536 1056 1536 c 928.695 1536 806.605 1485.43 716.59 1395.41
 c 626.57 1305.395 576 1183.305 576 1056 c 576 928.695 626.57 806.605 716.59
 716.59 c 806.605 626.57 928.695 576 1056 576 c 1183.305 576 1305.395 626.57
 1395.41 716.59 c 1485.43 806.605 1536 928.695 1536 1056 c f*
906.047 1146.625 m 910.559 1203.84 955.773 1248.387 1036.895 1253.762 c
 1036.895 1296 l 1072.895 1296 l 1072.895 1253.473 l 1156.895 1247.617 1205.949
 1202.688 1205.949 1137.602 c 1205.949 1078.273 1168.508 1047.746 1101.309
 1032 c 1072.895 1025.281 l 1072.895 910.082 l 1108.992 914.211 1131.84 
933.891 1137.309 961.152 c 1200.477 961.152 l 1195.965 905.953 1148.637 
862.848 1072.891 858.145 c 1072.895 816 l 1036.895 816 l 1036.895 859.199
 l 965.184 866.207 916.414 909.312 916.414 970.367 c 916.414 1024.32 952.703
 1058.688 1013.086 1072.703 c 1036.895 1078.559 l 1036.895 1200.672 l 1000.031
 1195.105 975.551 1174.75 970.078 1146.625 c 905.949 1146.625 l h
1036.605 1016.641 m 1001.18 1008.48 981.98 991.68 981.98 966.527 c 981.98
 938.305 1002.715 917.184 1036.891 911.039 c 1036.891 1016.641 l h
1078.078 1088.258 m 1121.184 1098.242 1140.957 1114.371 1140.957 1142.883
 c 1140.957 1175.426 1116.285 1197.699 1072.895 1201.828 c 1072.895 1087.109
 l h
1078.078 1088.258 m f
96 0 m 70.539 0 46.121 10.113 28.117 28.117 c 10.113 46.121 0 70.539 0 
96 c 0 864 l 0 889.461 10.113 913.879 28.117 931.883 c 46.121 949.887 70.539
 960 96 960 c 487.969 960 l 493.602 926.91 501.855 894.91 512.738 864 c 
288 864 l 288 830.297 279.129 797.188 262.277 768 c 245.426 738.812 221.188
 714.574 192 697.723 c 162.812 680.871 129.703 672 96 672 c 96 288 l 129.703
 288 162.812 279.129 192 262.277 c 221.188 245.426 245.426 221.188 262.277
 192 c 279.129 162.812 288 129.703 288 96 c 1248 96 l 1248 129.703 1256.871
 162.812 1273.723 192 c 1290.574 221.188 1314.812 245.426 1344 262.277 c
 1373.188 279.129 1406.297 288 1440 288 c 1440 626.688 l 1476.48 659.328
 1508.832 696.574 1536 737.473 c 1536 96 l 1536 70.539 1525.887 46.121 1507.883
 28.117 c 1489.879 10.113 1465.461 0 1440 0 c h
96 0 m f
959.809 487.969 m 960 480 l 959.973 435.727 944.645 392.82 916.613 358.551
 c 888.582 324.277 849.566 300.75 806.172 291.945 c 762.781 283.145 717.68
 289.609 678.508 310.246 c 639.336 330.883 608.5 364.422 591.223 405.188
 c 573.945 445.953 571.285 491.434 583.699 533.934 c 596.109 576.434 622.828
 613.34 659.328 638.398 c 742.309 559.504 846.922 507.133 959.809 487.969
 c f
Q Q
showpage
%%Trailer
%%EOF
