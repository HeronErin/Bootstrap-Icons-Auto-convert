%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
0 192 m 0 166.539 10.113 142.121 28.117 124.117 c 46.121 106.113 70.539
 96 96 96 c 672 96 l 697.461 96 721.879 106.113 739.883 124.117 c 757.887
 142.121 768 166.539 768 192 c 768 576 l 768 601.461 757.887 625.879 739.883
 643.883 c 721.879 661.887 697.461 672 672 672 c 96 672 l 70.539 672 46.121
 661.887 28.117 643.883 c 10.113 625.879 0 601.461 0 576 c h
120 240 m 113.637 240 107.531 242.527 103.031 247.031 c 98.527 251.531 
96 257.637 96 264 c 96 312 l 96 318.363 98.527 324.469 103.031 328.969 c
 107.531 333.473 113.637 336 120 336 c 216 336 l 222.363 336 228.469 333.473
 232.969 328.969 c 237.473 324.469 240 318.363 240 312 c 240 264 l 240 257.637
 237.473 251.531 232.969 247.031 c 228.469 242.527 222.363 240 216 240 c
 h
120 384 m 111.426 384 103.504 388.574 99.215 396 c 94.93 403.426 94.93 
412.574 99.215 420 c 103.504 427.426 111.426 432 120 432 c 360 432 l 368.574
 432 376.496 427.426 380.785 420 c 385.07 412.574 385.07 403.426 380.785
 396 c 376.496 388.574 368.574 384 360 384 c h
120 480 m 111.426 480 103.504 484.574 99.215 492 c 94.93 499.426 94.93 
508.574 99.215 516 c 103.504 523.426 111.426 528 120 528 c 168 528 l 176.574
 528 184.496 523.426 188.785 516 c 193.07 508.574 193.07 499.426 188.785
 492 c 184.496 484.574 176.574 480 168 480 c h
264 480 m 255.426 480 247.504 484.574 243.215 492 c 238.93 499.426 238.93
 508.574 243.215 516 c 247.504 523.426 255.426 528 264 528 c 312 528 l 320.574
 528 328.496 523.426 332.785 516 c 337.07 508.574 337.07 499.426 332.785
 492 c 328.496 484.574 320.574 480 312 480 c h
408 480 m 399.426 480 391.504 484.574 387.215 492 c 382.93 499.426 382.93
 508.574 387.215 516 c 391.504 523.426 399.426 528 408 528 c 456 528 l 464.574
 528 472.496 523.426 476.785 516 c 481.07 508.574 481.07 499.426 476.785
 492 c 472.496 484.574 464.574 480 456 480 c h
552 480 m 543.426 480 535.504 484.574 531.215 492 c 526.93 499.426 526.93
 508.574 531.215 516 c 535.504 523.426 543.426 528 552 528 c 600 528 l 608.574
 528 616.496 523.426 620.785 516 c 625.07 508.574 625.07 499.426 620.785
 492 c 616.496 484.574 608.574 480 600 480 c h
552 480 m f
Q Q
showpage
%%Trailer
%%EOF
