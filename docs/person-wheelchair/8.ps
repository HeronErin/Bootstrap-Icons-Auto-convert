%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.5 1.125 m 4.812 1.125 5.062 0.875 5.062 0.562 c 5.062 0.25 4.812 0 4.5
 0 c 4.188 0 3.938 0.25 3.938 0.562 c 3.938 0.875 4.188 1.125 4.5 1.125 
c 4.25 1.93 m 4.336 1.801 4.367 1.645 4.332 1.496 c 4.301 1.348 4.207 1.215
 4.074 1.137 c 3.137 0.57 l 2.941 0.453 2.691 0.465 2.508 0.602 c 1.633 
1.258 l 1.637 1.258 l 1.5 1.371 1.48 1.57 1.586 1.707 c 1.691 1.844 1.887
 1.875 2.031 1.773 c 2.762 1.266 l 3.109 1.531 l 2.344 2.449 l 2.344 2.445
 l 1.852 2.395 1.359 2.551 0.984 2.875 c 1.383 3.273 l 1.383 3.277 l 1.867
 2.879 2.574 2.914 3.02 3.355 c 3.461 3.801 3.496 4.508 3.102 4.992 c 3.5
 5.391 l 3.859 4.98 4.008 4.426 3.906 3.891 c 4.297 3.781 l 4.227 4.902 
l 4.223 4.988 4.25 5.074 4.309 5.141 c 4.367 5.207 4.449 5.246 4.535 5.254
 c 4.625 5.258 4.711 5.227 4.773 5.168 c 4.84 5.109 4.879 5.027 4.883 4.938
 c 4.961 3.391 l 4.957 3.395 l 4.965 3.293 4.926 3.191 4.855 3.117 c 4.785
 3.043 4.688 3 4.586 3 c 3.539 3 l h
1.133 3.555 m 0.82 4.039 0.887 4.676 1.293 5.082 c 1.699 5.488 2.336 5.555
 2.82 5.242 c 3.223 5.645 l 2.516 6.176 1.523 6.105 0.895 5.48 c 0.27 4.852
 0.199 3.859 0.73 3.152 c h
1.133 3.555 m f
Q Q
showpage
%%Trailer
%%EOF
