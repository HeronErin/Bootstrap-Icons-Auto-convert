%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 5 0 81 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 5 0 81 96
96 96 cairo_set_page_size
%%EndPageSetup
q 5 0 76 96 rectclip
1 0 0 -1 0 96 cm q
0 g
72 18 m 76.969 18 81 13.969 81 9 c 81 4.031 76.969 0 72 0 c 67.031 0 63
 4.031 63 9 c 63 13.969 67.031 18 72 18 c 68.023 30.875 m 69.383 28.836 
69.852 26.324 69.32 23.93 c 68.789 21.531 67.301 19.457 65.203 18.188 c 
50.203 9.141 l 50.203 9.137 l 47.059 7.242 43.078 7.449 40.145 9.652 c 26.172
 20.152 l 24.023 21.934 23.664 25.094 25.359 27.312 c 27.055 29.527 30.195
 30.012 32.477 28.402 c 44.164 20.219 l 49.695 24.48 l 37.469 39.152 l 37.469
 39.148 l 29.594 38.312 21.727 40.801 15.77 46.02 c 22.152 52.41 l 27.188
 48.281 33.949 46.934 40.184 48.824 c 46.414 50.715 51.289 55.594 53.18 
61.824 c 55.07 68.055 53.727 74.82 49.598 79.855 c 55.98 86.234 l 55.98 
86.23 l 61.734 79.668 64.145 70.82 62.52 62.242 c 68.777 60.488 l 67.656
 78.434 l 67.656 78.438 l 67.555 79.836 68.02 81.219 68.945 82.273 c 69.871
 83.328 71.18 83.965 72.578 84.043 c 73.98 84.121 75.355 83.637 76.391 82.691
 c 77.43 81.75 78.047 80.426 78.102 79.027 c 79.336 54.301 l 79.34 54.301
 l 79.422 52.66 78.824 51.055 77.691 49.863 c 76.559 48.672 74.988 48 73.344
 48 c 56.605 48 l h
18.137 56.879 m 14.867 61.914 14.098 68.176 16.051 73.852 c 18.004 79.527
 22.465 83.988 28.141 85.941 c 33.82 87.898 40.078 87.129 45.113 83.855 
c 51.574 90.316 l 44.195 95.852 34.594 97.473 25.805 94.668 c 17.02 91.859
 10.133 84.977 7.328 76.188 c 4.52 67.398 6.141 57.797 11.676 50.418 c h
18.137 56.879 m f
Q Q
showpage
%%Trailer
%%EOF
