%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 11 0 162 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 11 0 162 192
192 192 cairo_set_page_size
%%EndPageSetup
q 11 0 151 192 rectclip
1 0 0 -1 0 192 cm q
0 g
144 36 m 150.43 36 156.375 32.57 159.59 27 c 162.805 21.43 162.805 14.57
 159.59 9 c 156.375 3.43 150.43 0 144 0 c 137.57 0 131.625 3.43 128.41 9
 c 125.195 14.57 125.195 21.43 128.41 27 c 131.625 32.57 137.57 36 144 36
 c 136.043 61.754 m 138.77 57.668 139.707 52.648 138.641 47.859 c 137.578
 43.066 134.602 38.918 130.402 36.371 c 100.402 18.273 l 100.402 18.277 
l 97.332 16.422 93.773 15.531 90.191 15.715 c 86.605 15.898 83.16 17.152
 80.293 19.309 c 52.344 40.309 l 48.047 43.867 47.328 50.188 50.719 54.621
 c 54.105 59.055 60.395 60.02 64.957 56.809 c 88.332 40.441 l 99.395 48.961
 l 74.938 78.301 l 74.941 78.301 l 59.188 76.621 43.453 81.605 31.535 92.039
 c 44.305 104.82 l 54.371 96.559 67.902 93.871 80.363 97.652 c 92.828 101.434
 102.582 111.184 106.363 123.648 c 110.145 136.109 107.453 149.641 99.191
 159.707 c 111.961 172.465 l 123.465 159.336 128.289 141.641 125.039 124.488
 c 137.555 120.984 l 135.312 156.875 l 135.109 159.676 136.035 162.438 137.887
 164.543 c 139.738 166.652 142.359 167.93 145.16 168.086 c 147.961 168.242
 150.707 167.27 152.785 165.383 c 154.859 163.496 156.094 160.855 156.203
 158.051 c 158.676 108.598 l 158.676 108.602 l 158.84 105.316 157.652 102.109
 155.387 99.727 c 153.117 97.348 149.977 96 146.688 96 c 113.207 96 l h
36.277 113.762 m 29.734 123.828 28.195 136.352 32.102 147.703 c 36.012 
159.059 44.93 167.977 56.285 171.887 c 67.637 175.793 80.16 174.254 90.227
 167.711 c 103.152 180.637 l 88.391 191.707 69.188 194.945 51.613 189.336
 c 34.039 183.723 20.266 169.949 14.652 152.375 c 9.039 134.801 12.281 115.594
 23.352 100.836 c h
36.277 113.762 m f
Q Q
showpage
%%Trailer
%%EOF
