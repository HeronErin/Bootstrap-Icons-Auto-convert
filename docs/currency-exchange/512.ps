%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
0 120 m -0.004 147.773 9.629 174.691 27.254 196.16 c 44.879 217.625 69.402
 232.316 96.648 237.719 c 98.219 220.527 102.629 203.715 109.703 187.969
 c 88.68 180.863 75.168 164.734 72 141.84 c 60 141.84 l 60 131.617 l 71.184
 131.617 l 71.184 121.199 l 71.168 120.078 71.199 119 71.281 117.961 c 60
 117.961 l 60 107.715 l 72.266 107.715 l 77.664 77.762 101.113 60 136.344
 60 c 143.93 60 150.504 60.742 156 62.039 c 156 79.633 l 149.578 78.211 
143.016 77.551 136.441 77.664 c 114.387 77.664 99.531 88.848 94.824 107.711
 c 140.832 107.711 l 140.832 117.957 l 93.312 117.957 l 93.25 119.078 93.223
 120.254 93.242 121.484 c 93.242 131.613 l 140.836 131.613 l 140.836 141.859
 l 94.32 141.863 l 97.152 156.312 105.551 166.582 118.441 171.359 c 144.066
 128.914 188.348 101.18 237.719 96.648 c 229.801 57.434 202.871 24.742 165.898
 9.465 c 128.926 -5.816 86.773 -1.676 53.484 20.508 c 20.191 42.688 0.137
 79.996 0 120 c 384 252 m 384 299.16 358.84 342.734 318 366.316 c 277.16
 389.895 226.84 389.895 186 366.316 c 145.16 342.734 120 299.16 120 252 
c 120 204.84 145.16 161.266 186 137.684 c 226.84 114.105 277.16 114.105 
318 137.684 c 358.84 161.266 384 204.84 384 252 c 198 283.727 m 199.656 
303.766 215.902 319.367 245.137 321.215 c 245.137 336 l 258.098 336 l 258.098
 321.121 l 288.312 319.059 306 303.359 306 280.562 c 306 259.801 292.488
 249.121 268.32 243.602 c 258.098 241.203 l 258.098 200.977 l 271.059 202.418
 279.312 209.305 281.281 218.855 c 304.035 218.855 l 302.355 199.559 285.34
 184.465 258.098 182.809 c 258.098 168 l 245.137 168 l 245.137 183.098 l
 219.312 185.57 201.746 200.664 201.746 222.027 c 201.746 240.914 214.801
 252.938 236.547 257.859 c 245.141 259.898 l 245.141 302.617 l 231.844 300.695
 223.062 293.594 221.07 283.73 c h
245.039 238.246 m 232.27 235.367 225.359 229.512 225.359 220.68 c 225.359
 210.84 232.824 203.422 245.137 201.266 c 245.137 238.227 l 245.016 238.227
 l h
259.969 263.301 m 275.449 266.781 282.602 272.422 282.602 282.406 c 282.602
 293.781 273.723 301.605 258.121 303.047 c 258.121 262.871 l h
259.969 263.301 m f
Q Q
showpage
%%Trailer
%%EOF
