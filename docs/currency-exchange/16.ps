%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
0 3.75 m 0 5.539 1.266 7.082 3.02 7.43 c 3.07 6.891 3.207 6.367 3.43 5.875
 c 2.77 5.652 2.348 5.148 2.25 4.434 c 1.875 4.434 l 1.875 4.113 l 2.223
 4.113 l 2.223 3.789 l 2.223 3.754 2.223 3.719 2.227 3.688 c 1.875 3.688
 l 1.875 3.367 l 2.258 3.367 l 2.426 2.43 3.16 1.875 4.262 1.875 c 4.5 1.875
 4.703 1.898 4.875 1.938 c 4.875 2.488 l 4.676 2.445 4.469 2.422 4.266 2.426
 c 3.578 2.426 3.113 2.773 2.965 3.363 c 4.402 3.363 l 4.402 3.684 l 2.918
 3.684 l 2.914 3.719 2.914 3.754 2.914 3.793 c 2.914 4.109 l 4.402 4.109
 l 4.402 4.43 l 2.949 4.434 l 3.039 4.887 3.301 5.207 3.703 5.355 c 4.504
 4.027 5.887 3.16 7.43 3.02 c 7.047 1.133 5.301 -0.16 3.383 0.031 c 1.469
 0.219 0.008 1.824 0 3.75 c 12 7.875 m 12 10.152 10.152 12 7.875 12 c 5.598
 12 3.75 10.152 3.75 7.875 c 3.75 5.598 5.598 3.75 7.875 3.75 c 10.152 3.75
 12 5.598 12 7.875 c 6.188 8.867 m 6.238 9.492 6.746 9.98 7.66 10.039 c 
7.66 10.5 l 8.066 10.5 l 8.066 10.035 l 9.012 9.969 9.562 9.48 9.562 8.77
 c 9.562 8.121 9.141 7.785 8.387 7.613 c 8.066 7.539 l 8.066 6.281 l 8.473
 6.328 8.73 6.543 8.789 6.84 c 9.5 6.84 l 9.449 6.238 8.914 5.766 8.066 
5.715 c 8.066 5.25 l 7.66 5.25 l 7.66 5.723 l 6.852 5.801 6.305 6.273 6.305
 6.938 c 6.305 7.527 6.711 7.902 7.391 8.059 c 7.66 8.121 l 7.66 9.457 l
 7.246 9.398 6.969 9.176 6.906 8.867 c h
7.656 7.445 m 7.258 7.355 7.043 7.172 7.043 6.895 c 7.043 6.586 7.277 6.355
 7.66 6.289 c 7.66 7.445 l h
8.121 8.227 m 8.605 8.336 8.828 8.512 8.828 8.824 c 8.828 9.18 8.551 9.426
 8.062 9.469 c 8.062 8.215 l h
8.121 8.227 m f
Q Q
showpage
%%Trailer
%%EOF
