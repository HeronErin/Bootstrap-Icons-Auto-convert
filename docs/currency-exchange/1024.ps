%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 240 m -0.008 295.551 19.258 349.383 54.508 392.316 c 89.754 435.254 138.809
 464.629 193.297 475.441 c 196.434 441.055 205.258 407.43 219.406 375.938
 c 177.359 361.727 150.336 329.473 144 283.68 c 120 283.68 l 120 263.23 
l 142.367 263.23 l 142.367 242.398 l 142.336 240.16 142.398 238 142.559 
235.918 c 120 235.922 l 120 215.426 l 144.527 215.426 l 155.328 155.52 202.223
 120 272.688 120 c 287.855 120 301.008 121.488 312 124.078 c 312 159.266
 l 299.16 156.426 286.027 155.105 272.879 155.328 c 228.766 155.328 199.055
 177.695 189.648 215.426 c 281.664 215.426 l 281.664 235.922 l 186.625 235.922
 l 186.496 238.16 186.449 240.516 186.48 242.977 c 186.48 263.234 l 281.664
 263.234 l 281.664 283.73 l 188.641 283.727 l 194.305 312.621 211.105 333.168
 236.879 342.719 c 262.152 300.863 296.91 265.531 338.352 239.574 c 379.789
 213.621 426.75 197.766 475.441 193.297 c 463.668 135 430.68 83.148 382.863
 47.785 c 335.047 12.422 275.809 -3.938 216.621 1.875 c 157.434 7.688 102.512
 35.262 62.492 79.254 c 22.473 123.25 0.203 180.527 0 240 c 768 504 m 768
 574.016 740.188 641.168 690.676 690.676 c 641.168 740.188 574.016 768 504
 768 c 433.984 768 366.832 740.188 317.324 690.676 c 267.812 641.168 240
 574.016 240 504 c 240 433.984 267.812 366.832 317.324 317.324 c 366.832
 267.812 433.984 240 504 240 c 574.016 240 641.168 267.812 690.676 317.324
 c 740.188 366.832 768 433.984 768 504 c 396 567.457 m 399.312 607.535 431.809
 638.738 490.273 642.434 c 490.273 672 l 516.195 672 l 516.195 642.238 l
 576.629 638.109 612.004 606.719 612.004 561.117 c 612.004 519.598 584.98
 498.238 536.645 487.195 c 516.195 482.395 l 516.191 401.953 l 542.113 404.832
 558.625 418.609 562.559 437.715 c 608.062 437.715 l 604.703 399.121 570.672
 368.93 516.191 365.617 c 516.191 336 l 490.27 336 l 490.27 366.191 l 438.621
 371.137 403.484 401.328 403.484 444.047 c 403.484 481.824 429.598 505.871
 473.086 515.711 c 490.27 519.789 l 490.27 605.23 l 463.676 601.391 446.109
 587.184 442.125 567.453 c h
490.078 476.496 m 464.543 470.734 450.719 459.023 450.719 441.359 c 450.719
 421.68 465.648 406.848 490.27 402.527 c 490.27 476.449 l 490.031 476.449
 l h
519.934 526.609 m 550.895 533.57 565.199 544.848 565.199 564.816 c 565.199
 587.57 547.438 603.215 516.238 606.098 c 516.238 525.746 l h
519.934 526.609 m f
Q Q
showpage
%%Trailer
%%EOF
