%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 768 m 485.844 768 583.516 727.543 655.527 655.527 c 727.543 583.516
 768 485.844 768 384 c 768 282.156 727.543 184.484 655.527 112.473 c 583.516
 40.457 485.844 0 384 0 c 282.156 0 184.484 40.457 112.473 112.473 c 40.457
 184.484 0 282.156 0 384 c 0 485.844 40.457 583.516 112.473 655.527 c 184.484
 727.543 282.156 768 384 768 c 194.543 205.246 m 197.395 199.57 202.383 
195.254 208.41 193.25 c 214.441 191.242 221.02 191.707 226.703 194.543 c
 322.703 242.543 l 329.188 245.793 333.855 251.797 335.402 258.879 c 336.949
 265.965 335.211 273.367 330.672 279.023 c 334.078 288.91 336 300.145 336
 312 c 336 351.742 314.496 384 288 384 c 261.504 384 240 351.742 240 312
 c 240 292.414 245.23 274.656 253.68 261.648 c 205.246 237.457 l 199.57 
234.605 195.254 229.617 193.25 223.59 c 191.242 217.559 191.707 210.98 194.543
 205.297 c h
205.68 596.781 m 205.68 596.785 l 200.168 593.602 196.145 588.359 194.5
 582.211 c 192.852 576.062 193.715 569.512 196.895 564 c 215.859 531.156
 243.133 503.887 275.977 484.93 c 308.82 465.969 346.078 455.992 384 456
 c 421.922 455.992 459.18 465.969 492.023 484.93 c 524.867 503.887 552.141
 531.156 571.105 564 c 574.336 569.516 575.238 576.094 573.602 582.273 c
 571.969 588.453 567.938 593.727 562.398 596.922 c 556.863 600.117 550.281
 600.973 544.113 599.301 c 537.941 597.625 532.695 593.559 529.535 588 c
 514.789 562.453 493.574 541.242 468.023 526.496 c 442.477 511.75 413.496
 503.992 384 504 c 354.504 503.992 325.523 511.75 299.977 526.496 c 274.426
 541.242 253.211 562.453 238.465 588 c 235.281 593.512 230.039 597.535 223.891
 599.18 c 217.742 600.828 211.191 599.965 205.68 596.785 c 480 384 m 453.504
 384 432 351.742 432 312 c 432 300.145 433.922 288.961 437.281 279.07 c 
432.758 273.402 431.031 266 432.578 258.914 c 434.121 251.828 438.777 245.816
 445.246 242.543 c 541.246 194.543 l 546.945 191.633 553.566 191.117 559.648
 193.113 c 565.727 195.105 570.758 199.445 573.621 205.164 c 576.488 210.883
 576.953 217.512 574.91 223.574 c 572.871 229.637 568.492 234.633 562.754
 237.457 c 514.32 261.648 l 522.77 274.609 528 292.367 528 312 c 528 351.742
 506.496 384 480 384 c f
Q Q
showpage
%%Trailer
%%EOF
