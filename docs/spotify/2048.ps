%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 564.312 0 368.969 80.914 224.941 224.941 c 80.914 368.969 0 564.312
 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 368.969 1455.086 564.312
 1536 768 1536 c 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086
 1167.031 1536 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059
 224.941 c 1167.031 80.914 971.688 0 768 0 c 1120.223 1107.648 m 1113.574
 1118.461 1102.91 1126.195 1090.566 1129.164 c 1078.223 1132.133 1065.207
 1130.094 1054.367 1123.488 c 873.984 1013.375 647.039 988.418 379.68 1049.566
 c 367.293 1052.395 354.293 1050.184 343.535 1043.422 c 332.777 1036.664
 325.145 1025.906 322.32 1013.52 c 319.492 1001.133 321.703 988.133 328.465
 977.375 c 335.227 966.617 345.98 958.984 358.367 956.16 c 650.977 889.344
 901.918 918.047 1104.289 1041.793 c 1115.117 1048.43 1122.871 1059.086 
1125.859 1071.43 c 1128.848 1083.773 1126.82 1096.797 1120.223 1107.648 
c 1214.207 898.559 m 1205.891 912.09 1192.543 921.762 1177.098 925.449 c
 1161.652 929.141 1145.375 926.547 1131.84 918.238 c 925.441 791.422 610.75
 754.652 366.527 828.766 c 366.527 828.77 l 346.52 833.523 325.469 827.699
 310.75 813.336 c 296.031 798.973 289.695 778.07 293.961 757.953 c 298.227
 737.832 312.496 721.301 331.777 714.145 c 610.656 629.57 957.41 670.559
 1194.434 816.191 c 1207.977 824.492 1217.668 837.836 1221.375 853.281 c
 1225.086 868.727 1222.508 885.016 1214.207 898.559 c 1222.27 680.832 m 
974.785 533.762 566.398 520.223 330.047 591.938 c 305.492 599.379 278.828
 593.156 260.105 575.609 c 241.383 558.062 233.441 531.859 239.273 506.871
 c 245.105 481.887 263.828 461.906 288.383 454.465 c 559.582 372.191 1010.59
 388.031 1295.613 557.184 c 1295.617 557.184 l 1317.703 570.285 1331.125
 594.176 1330.82 619.855 c 1330.52 645.535 1316.539 669.102 1294.148 681.68
 c 1271.758 694.258 1244.359 693.934 1222.273 680.832 c f
Q Q
showpage
%%Trailer
%%EOF
