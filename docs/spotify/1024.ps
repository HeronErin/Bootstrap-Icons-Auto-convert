%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 282.156 0 184.484 40.457 112.473 112.473 c 40.457 184.484 0 282.156
 0 384 c 0 485.844 40.457 583.516 112.473 655.527 c 184.484 727.543 282.156
 768 384 768 c 485.844 768 583.516 727.543 655.527 655.527 c 727.543 583.516
 768 485.844 768 384 c 768 282.156 727.543 184.484 655.527 112.473 c 583.516
 40.457 485.844 0 384 0 c 560.113 553.824 m 556.785 559.23 551.453 563.098
 545.285 564.582 c 539.113 566.066 532.605 565.047 527.184 561.742 c 436.992
 506.688 323.52 494.207 189.84 524.781 c 189.84 524.785 l 183.648 526.195
 177.145 525.094 171.766 521.711 c 166.387 518.332 162.574 512.953 161.16
 506.762 c 159.746 500.566 160.852 494.066 164.23 488.688 c 167.613 483.309
 172.992 479.492 179.184 478.078 c 325.488 444.672 450.961 459.023 552.145
 520.895 c 557.559 524.215 561.438 529.543 562.93 535.715 c 564.422 541.887
 563.41 548.398 560.113 553.824 c 607.105 449.281 m 602.945 456.043 596.273
 460.879 588.551 462.727 c 580.828 464.57 572.688 463.273 565.922 459.121
 c 462.723 395.715 305.379 377.328 183.266 414.387 c 183.266 414.383 l 173.262
 416.762 162.734 413.848 155.375 406.668 c 148.016 399.484 144.848 389.035
 146.98 378.977 c 149.113 368.918 156.246 360.652 165.887 357.07 c 305.328
 314.781 478.703 335.277 597.215 408.094 c 597.215 408.098 l 603.988 412.246
 608.836 418.918 610.688 426.641 c 612.543 434.363 611.254 442.508 607.105
 449.281 c 611.137 340.418 m 487.391 266.879 283.199 260.113 165.023 295.969
 c 152.746 299.688 139.414 296.578 130.051 287.805 c 120.691 279.031 116.719
 265.93 119.637 253.438 c 122.555 240.941 131.914 230.953 144.191 227.23
 c 279.793 186.094 505.297 194.016 647.809 278.59 c 647.809 278.594 l 658.852
 285.145 665.562 297.086 665.41 309.926 c 665.258 322.766 658.27 334.551
 647.074 340.84 c 635.879 347.129 622.18 346.969 611.137 340.414 c f
Q Q
showpage
%%Trailer
%%EOF
