%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 168 168 rectclip
1 0 0 -1 0 192 cm q
0 g
132 60 m 132 72.863 125.137 84.746 114 91.176 c 102.863 97.609 89.137 97.609
 78 91.176 c 66.863 84.746 60 72.863 60 60 c 60 47.137 66.863 35.254 78 
28.824 c 89.137 22.391 102.863 22.391 114 28.824 c 125.137 35.254 132 47.137
 132 60 c 96 84 m 104.574 84 112.496 79.426 116.785 72 c 121.07 64.574 121.07
 55.426 116.785 48 c 112.496 40.574 104.574 36 96 36 c 87.426 36 79.504 
40.574 75.215 48 c 70.93 55.426 70.93 64.574 75.215 72 c 79.504 79.426 87.426
 84 96 84 c 99.07 168 m 97.699 164.102 96.777 160.059 96.324 155.953 c 36
 155.953 l 36.012 153 37.848 144.121 45.984 135.984 c 53.809 128.16 68.531
 120 96 120 c 99.121 120 102.078 120.102 104.879 120.301 c 107.59 116.207
 110.832 112.5 114.527 109.285 c 108.93 108.445 102.754 108.016 96 108 c
 36 108 24 144 24 156 c 24 168 36 168 36 168 c h
142.629 113.52 m 144.789 106.164 155.203 106.164 157.375 113.52 c 157.891
 115.297 l 157.895 115.297 l 158.547 117.527 160.176 119.344 162.324 120.234
 c 164.473 121.125 166.906 120.996 168.949 119.879 c 170.582 118.992 l 177.312
 115.32 184.684 122.688 181.023 129.422 c 180.125 131.055 l 180.121 131.051
 l 179.012 133.09 178.883 135.523 179.773 137.668 c 180.664 139.812 182.477
 141.438 184.703 142.094 c 186.492 142.633 l 193.836 144.793 193.836 155.207
 186.492 157.379 c 184.691 157.895 l 182.465 158.555 180.656 160.184 179.77
 162.332 c 178.883 164.48 179.016 166.91 180.133 168.949 c 181.02 170.582
 l 184.68 177.312 177.312 184.684 170.578 181.023 c 168.945 180.125 l 168.949
 180.121 l 166.91 179.012 164.477 178.883 162.332 179.773 c 160.188 180.664
 158.562 182.477 157.906 184.703 c 157.367 186.492 l 155.207 193.836 144.793
 193.836 142.621 186.492 c 142.105 184.691 l 141.445 182.465 139.816 180.656
 137.668 179.77 c 135.52 178.883 133.09 179.016 131.051 180.133 c 129.418
 181.02 l 122.688 184.68 115.316 177.312 118.977 170.578 c 119.875 168.945
 l 119.879 168.949 l 120.988 166.91 121.117 164.477 120.227 162.332 c 119.336
 160.188 117.523 158.562 115.297 157.906 c 113.52 157.367 l 106.164 155.207
 106.164 144.793 113.52 142.621 c 115.297 142.105 l 117.527 141.453 119.344
 139.824 120.234 137.676 c 121.125 135.527 120.996 133.094 119.879 131.051
 c 118.992 129.418 l 115.32 122.688 122.688 115.316 129.422 118.977 c 131.055
 119.875 l 131.051 119.879 l 133.09 120.988 135.523 121.117 137.668 120.227
 c 139.812 119.336 141.438 117.523 142.094 115.297 c h
168 150 m 168 143.57 164.57 137.625 159 134.41 c 153.43 131.195 146.57 
131.195 141 134.41 c 135.43 137.625 132 143.57 132 150 c 132 156.43 135.43
 162.375 141 165.59 c 146.57 168.805 153.43 168.805 159 165.59 c 164.57 
162.375 168 156.43 168 150 c f
Q Q
showpage
%%Trailer
%%EOF
