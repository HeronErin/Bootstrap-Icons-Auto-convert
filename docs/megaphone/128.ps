%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 5 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 5 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 5 96 85 rectclip
1 0 0 -1 0 96 cm q
0 g
78 15 m 78 10.031 82.031 6 87 6 c 91.969 6 96 10.031 96 15 c 96 81 l 96
 85.969 91.969 90 87 90 c 82.031 90 78 85.969 78 81 c 78 79.715 l 65.027
 72.27 51.059 68.656 36.527 67.219 c 38.957 83.492 l 38.957 83.488 l 39.289
 85.246 38.82 87.055 37.68 88.43 c 36.539 89.805 34.848 90.602 33.059 90.602
 c 29.77 90.602 l 29.773 90.602 l 27.391 90.602 25.23 89.188 24.277 87.008
 c 13.176 66.066 l 11.965 66.047 l 5.352 65.98 0.02 60.613 0 54 c 0 42 l
 0.023 35.387 5.34 30.012 11.953 29.922 c 16.922 29.855 21.887 29.703 26.852
 29.473 c 45.109 28.547 63.738 24.379 78 16.277 c h
84 15 m 84 81 l 84 82.656 85.344 84 87 84 c 88.656 84 90 82.656 90 81 c
 90 15 l 90 13.344 88.656 12 87 12 c 85.344 12 84 13.344 84 15 c 78 23.102
 m 63.938 30.332 46.746 34.152 30 35.301 c 30 60.699 l 31.078 60.758 32.152
 60.832 33.223 60.914 c 48.629 62.047 63.781 65.379 78 72.871 c h
24 60.391 m 24 35.609 l 20.016 35.754 16.031 35.859 12.047 35.922 c 8.711
 35.961 6.023 38.664 6 42 c 6 54 l 6 57.301 8.688 60.012 12.035 60.055 c
 16.027 60.102 20.016 60.211 24 60.391 c 20.059 66.242 m 29.711 84.465 l
 29.77 84.609 l 33.059 84.609 l 33.047 84.523 l 30.391 66.727 l 26.949 66.52
 23.504 66.355 20.059 66.234 c h
20.059 66.242 m f
Q Q
showpage
%%Trailer
%%EOF
