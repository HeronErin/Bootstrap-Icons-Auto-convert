%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 43 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 43 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 43 768 677 rectclip
1 0 0 -1 0 768 cm q
0 g
624 120 m 624 94.277 637.723 70.508 660 57.645 c 682.277 44.785 709.723
 44.785 732 57.645 c 754.277 70.508 768 94.277 768 120 c 768 648 l 768 673.723
 754.277 697.492 732 710.355 c 709.723 723.215 682.277 723.215 660 710.355
 c 637.723 697.492 624 673.723 624 648 c 624 637.727 l 520.223 578.16 408.48
 549.262 292.223 537.742 c 311.664 667.918 l 311.664 667.922 l 314.309 681.961
 310.559 696.449 301.438 707.445 c 292.312 718.441 278.766 724.805 264.48
 724.801 c 238.176 724.801 l 228.848 724.801 219.719 722.078 211.91 716.973
 c 204.102 711.867 197.949 704.594 194.207 696.047 c 105.406 528.527 l 95.711
 528.383 l 70.289 528.133 45.988 517.875 28.074 499.836 c 10.16 481.793 
0.074 457.422 0 432 c 0 336 l 0.086 310.574 10.156 286.199 28.039 268.125
 c 45.926 250.055 70.191 239.727 95.617 239.375 c 135.359 238.836 175.094
 237.633 214.801 235.777 c 360.863 228.387 509.906 195.023 624 130.227 c
 h
672 120 m 672 648 l 672 656.574 676.574 664.496 684 668.785 c 691.426 673.07
 700.574 673.07 708 668.785 c 715.426 664.496 720 656.574 720 648 c 720 
120 l 720 111.426 715.426 103.504 708 99.215 c 700.574 94.93 691.426 94.93
 684 99.215 c 676.574 103.504 672 111.426 672 120 c 624 184.801 m 511.488
 242.641 373.969 273.215 240 282.387 c 240 485.57 l 248.641 486.051 257.23
 486.625 265.777 487.297 c 389.043 496.367 510.242 523.008 624 582.961 c
 h
192 483.121 m 192 284.879 l 160.137 286.047 128.266 286.879 96.383 287.375
 c 83.559 287.527 71.301 292.707 62.254 301.797 c 53.207 310.891 48.086 
323.172 48 336 c 48 432 l 48 458.398 69.504 480.098 96.289 480.434 c 128.203
 480.805 160.113 481.703 192 483.121 c 160.465 529.922 m 237.695 675.699
 l 238.176 676.852 l 264.48 676.852 l 264.383 676.18 l 243.117 533.812 l
 243.121 533.809 l 215.586 532.148 188.031 530.836 160.465 529.871 c h
160.465 529.922 m f
Q Q
showpage
%%Trailer
%%EOF
