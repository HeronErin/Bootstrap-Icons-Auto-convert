%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 21 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 21 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 21 384 339 rectclip
1 0 0 -1 0 384 cm q
0 g
312 60 m 312 47.137 318.863 35.254 330 28.824 c 341.137 22.391 354.863 
22.391 366 28.824 c 377.137 35.254 384 47.137 384 60 c 384 324 l 384 336.863
 377.137 348.746 366 355.176 c 354.863 361.609 341.137 361.609 330 355.176
 c 318.863 348.746 312 336.863 312 324 c 312 318.863 l 260.113 289.078 204.238
 274.633 146.113 268.871 c 155.832 333.961 l 157.152 340.98 155.277 348.227
 150.719 353.723 c 146.156 359.223 139.383 362.402 132.238 362.398 c 119.086
 362.398 l 119.09 362.398 l 114.422 362.398 109.859 361.039 105.953 358.488
 c 102.051 355.934 98.977 352.297 97.105 348.023 c 52.707 264.262 l 47.859
 264.191 l 47.855 264.191 l 35.145 264.066 22.996 258.938 14.039 249.918
 c 5.082 240.898 0.039 228.711 0 216 c 0 168 l 0.043 155.285 5.078 143.098
 14.02 134.062 c 22.961 125.027 35.098 119.863 47.809 119.688 c 67.68 119.418
 87.547 118.816 107.398 117.887 c 180.43 114.191 254.949 97.512 312 65.109
 c h
336 60 m 336 324 l 336 330.629 341.371 336 348 336 c 354.629 336 360 330.629
 360 324 c 360 60 l 360 53.371 354.629 48 348 48 c 341.371 48 336 53.371
 336 60 c 312 92.398 m 255.742 121.32 186.984 136.605 120 141.191 c 120 
242.785 l 124.32 243.023 128.617 243.312 132.887 243.648 c 194.52 248.184
 255.117 261.504 312 291.48 c h
96 241.559 m 96 142.438 l 96 142.441 l 80.07 143.023 64.133 143.438 48.191
 143.688 c 41.777 143.762 35.652 146.352 31.125 150.898 c 26.602 155.445
 24.043 161.586 24 168 c 24 216 l 24 229.199 34.754 240.047 48.145 240.215
 c 64.102 240.402 80.055 240.852 96 241.559 c 80.23 264.957 m 118.848 337.844
 l 119.086 338.418 l 132.238 338.418 l 132.191 338.082 l 121.559 266.898
 l 121.559 266.902 l 107.793 266.074 94.016 265.418 80.23 264.938 c h
80.23 264.957 m f
Q Q
showpage
%%Trailer
%%EOF
