%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.875 0.938 m 4.875 0.625 5.125 0.375 5.438 0.375 c 5.75 0.375 6 0.625 
6 0.938 c 6 5.062 l 6 5.375 5.75 5.625 5.438 5.625 c 5.125 5.625 4.875 5.375
 4.875 5.062 c 4.875 4.98 l 4.062 4.516 3.191 4.289 2.281 4.199 c 2.434 
5.215 l 2.434 5.219 l 2.457 5.328 2.426 5.441 2.355 5.527 c 2.285 5.613 
2.18 5.664 2.066 5.664 c 1.859 5.664 l 1.711 5.664 1.578 5.574 1.516 5.438
 c 0.82 4.129 l 0.746 4.129 l 0.336 4.125 0 3.789 0 3.375 c 0 2.625 l 0 
2.211 0.332 1.875 0.746 1.871 c 1.059 1.867 1.367 1.855 1.68 1.844 c 2.82
 1.785 3.984 1.523 4.875 1.02 c h
5.25 0.938 m 5.25 5.062 l 5.25 5.312 5.625 5.312 5.625 5.062 c 5.625 0.938
 l 5.625 0.688 5.25 0.688 5.25 0.938 c 4.875 1.445 m 3.996 1.898 2.922 2.137
 1.875 2.207 c 1.875 3.793 l 1.941 3.797 2.008 3.801 2.078 3.805 c 3.043
 3.875 3.988 4.082 4.875 4.551 c h
1.5 3.777 m 1.5 2.227 l 1.25 2.234 1.004 2.242 0.754 2.246 c 0.543 2.246
 0.375 2.418 0.375 2.625 c 0.375 3.375 l 0.375 3.582 0.543 3.75 0.754 3.754
 c 1 3.758 1.25 3.762 1.5 3.773 c 1.254 4.141 m 1.855 5.281 l 1.859 5.289
 l 2.066 5.289 l 2.066 5.285 l 1.898 4.172 l 1.684 4.156 1.469 4.148 1.254
 4.141 c h
1.254 4.141 m f
Q Q
showpage
%%Trailer
%%EOF
