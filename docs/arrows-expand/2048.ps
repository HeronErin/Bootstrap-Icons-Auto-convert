%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 768 m 96 755.27 101.059 743.062 110.059 734.059 c 119.062 725.059 131.27
 720 144 720 c 1392 720 l 1409.148 720 1424.996 729.148 1433.57 744 c 1442.145
 758.852 1442.145 777.148 1433.57 792 c 1424.996 806.852 1409.148 816 1392
 816 c 144 816 l 131.27 816 119.062 810.941 110.059 801.941 c 101.059 792.938
 96 780.73 96 768 c 734.016 14.016 m 743.02 4.988 755.25 -0.086 768 -0.086
 c 780.75 -0.086 792.98 4.988 801.984 14.016 c 993.984 206.016 l 1006.125
 218.156 1010.867 235.855 1006.422 252.438 c 1001.98 269.023 989.023 281.98
 972.438 286.422 c 955.855 290.867 938.156 286.125 926.016 273.984 c 816
 163.871 l 816 528 l 816 545.148 806.852 560.996 792 569.57 c 777.148 578.145
 758.852 578.145 744 569.57 c 729.148 560.996 720 545.148 720 528 c 720 
163.871 l 609.984 273.984 l 597.844 286.125 580.145 290.867 563.562 286.422
 c 546.977 281.98 534.02 269.023 529.578 252.438 c 525.133 235.855 529.875
 218.156 542.016 206.016 c h
768 960 m 780.73 960 792.938 965.059 801.941 974.059 c 810.941 983.062 
816 995.27 816 1008 c 816 1372.129 l 926.016 1262.016 l 938.156 1249.875
 955.855 1245.133 972.438 1249.578 c 989.023 1254.02 1001.98 1266.977 1006.422
 1283.562 c 1010.867 1300.145 1006.125 1317.844 993.984 1329.984 c 801.984
 1521.984 l 792.98 1531.012 780.75 1536.086 768 1536.086 c 755.25 1536.086
 743.02 1531.012 734.016 1521.984 c 542.016 1329.984 l 529.875 1317.844 
525.133 1300.145 529.578 1283.562 c 534.02 1266.977 546.977 1254.02 563.562
 1249.578 c 580.145 1245.133 597.844 1249.875 609.984 1262.016 c 720 1372.129
 l 720 1008 l 720 995.27 725.059 983.062 734.059 974.059 c 743.062 965.059
 755.27 960 768 960 c f*
Q Q
showpage
%%Trailer
%%EOF
