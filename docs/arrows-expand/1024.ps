%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
48 384 m 48 377.637 50.527 371.531 55.031 367.031 c 59.531 362.527 65.637
 360 72 360 c 696 360 l 704.574 360 712.496 364.574 716.785 372 c 721.07
 379.426 721.07 388.574 716.785 396 c 712.496 403.426 704.574 408 696 408
 c 72 408 l 65.637 408 59.531 405.473 55.031 400.969 c 50.527 396.469 48
 390.363 48 384 c 367.008 7.008 m 371.512 2.492 377.625 -0.043 384 -0.043
 c 390.375 -0.043 396.488 2.492 400.992 7.008 c 496.992 103.008 l 503.062
 109.078 505.434 117.926 503.211 126.219 c 500.988 134.512 494.512 140.988
 486.219 143.211 c 477.926 145.434 469.078 143.062 463.008 136.992 c 408
 81.938 l 408 264 l 408 272.574 403.426 280.496 396 284.785 c 388.574 289.07
 379.426 289.07 372 284.785 c 364.574 280.496 360 272.574 360 264 c 360 
81.938 l 304.992 136.992 l 298.922 143.062 290.074 145.434 281.781 143.211
 c 273.488 140.988 267.012 134.512 264.789 126.219 c 262.566 117.926 264.938
 109.078 271.008 103.008 c h
384 480 m 390.363 480 396.469 482.527 400.969 487.031 c 405.473 491.531
 408 497.637 408 504 c 408 686.062 l 463.008 631.008 l 469.078 624.938 477.926
 622.566 486.219 624.789 c 494.512 627.012 500.988 633.488 503.211 641.781
 c 505.434 650.074 503.062 658.922 496.992 664.992 c 400.992 760.992 l 396.488
 765.508 390.375 768.043 384 768.043 c 377.625 768.043 371.512 765.508 367.008
 760.992 c 271.008 664.992 l 264.938 658.922 262.566 650.074 264.789 641.781
 c 267.012 633.488 273.488 627.012 281.781 624.789 c 290.074 622.566 298.922
 624.938 304.992 631.008 c 360 686.062 l 360 504 l 360 497.637 362.527 491.531
 367.031 487.031 c 371.531 482.527 377.637 480 384 480 c f*
Q Q
showpage
%%Trailer
%%EOF
