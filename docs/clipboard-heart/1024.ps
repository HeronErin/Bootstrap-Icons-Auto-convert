%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 72 m 240 52.906 247.586 34.59 261.09 21.09 c 274.59 7.586 292.906 0
 312 0 c 456 0 l 475.094 0 493.41 7.586 506.91 21.09 c 520.414 34.59 528
 52.906 528 72 c 528 120 l 528 139.094 520.414 157.41 506.91 170.91 c 493.41
 184.414 475.094 192 456 192 c 312 192 l 292.906 192 274.59 184.414 261.09
 170.91 c 247.586 157.41 240 139.094 240 120 c h
480 72 m 480 65.637 477.473 59.531 472.969 55.031 c 468.469 50.527 462.363
 48 456 48 c 312 48 l 305.637 48 299.531 50.527 295.031 55.031 c 290.527
 59.531 288 65.637 288 72 c 288 120 l 288 126.363 290.527 132.469 295.031
 136.969 c 299.531 141.473 305.637 144 312 144 c 456 144 l 462.363 144 468.469
 141.473 472.969 136.969 c 477.473 132.469 480 126.363 480 120 c h
480 72 m f*
144 72 m 192 72 l 192 120 l 144 120 l 131.27 120 119.062 125.059 110.059
 134.059 c 101.059 143.062 96 155.27 96 168 c 96 672 l 96 684.73 101.059
 696.938 110.059 705.941 c 119.062 714.941 131.27 720 144 720 c 624 720 
l 636.73 720 648.938 714.941 657.941 705.941 c 666.941 696.938 672 684.73
 672 672 c 672 168 l 672 155.27 666.941 143.062 657.941 134.059 c 648.938
 125.059 636.73 120 624 120 c 576 120 l 576 72 l 624 72 l 649.461 72 673.879
 82.113 691.883 100.117 c 709.887 118.121 720 142.539 720 168 c 720 672 
l 720 697.461 709.887 721.879 691.883 739.883 c 673.879 757.887 649.461 
768 624 768 c 144 768 l 118.539 768 94.121 757.887 76.117 739.883 c 58.113
 721.879 48 697.461 48 672 c 48 168 l 48 142.539 58.113 118.121 76.117 100.117
 c 94.121 82.113 118.539 72 144 72 c f
384 335.137 m 463.871 254.832 663.602 395.328 384 576 c 104.398 395.328
 304.129 254.879 384 335.137 c f
Q Q
showpage
%%Trailer
%%EOF
