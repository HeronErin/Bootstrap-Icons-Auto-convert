%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 144 m 480 105.809 495.172 69.184 522.176 42.176 c 549.184 15.172 585.809
 0 624 0 c 912 0 l 950.191 0 986.816 15.172 1013.824 42.176 c 1040.828 69.184
 1056 105.809 1056 144 c 1056 240 l 1056 278.191 1040.828 314.816 1013.824
 341.824 c 986.816 368.828 950.191 384 912 384 c 624 384 l 585.809 384 549.184
 368.828 522.176 341.824 c 495.172 314.816 480 278.191 480 240 c h
960 144 m 960 131.27 954.941 119.062 945.941 110.059 c 936.938 101.059 
924.73 96 912 96 c 624 96 l 611.27 96 599.062 101.059 590.059 110.059 c 
581.059 119.062 576 131.27 576 144 c 576 240 l 576 252.73 581.059 264.938
 590.059 273.941 c 599.062 282.941 611.27 288 624 288 c 912 288 l 924.73
 288 936.938 282.941 945.941 273.941 c 954.941 264.938 960 252.73 960 240
 c h
960 144 m f*
288 144 m 384 144 l 384 240 l 288 240 l 262.539 240 238.121 250.113 220.117
 268.117 c 202.113 286.121 192 310.539 192 336 c 192 1344 l 192 1369.461
 202.113 1393.879 220.117 1411.883 c 238.121 1429.887 262.539 1440 288 1440
 c 1248 1440 l 1273.461 1440 1297.879 1429.887 1315.883 1411.883 c 1333.887
 1393.879 1344 1369.461 1344 1344 c 1344 336 l 1344 310.539 1333.887 286.121
 1315.883 268.117 c 1297.879 250.113 1273.461 240 1248 240 c 1152 240 l 
1152 144 l 1248 144 l 1281.703 144 1314.812 152.871 1344 169.723 c 1373.188
 186.574 1397.426 210.812 1414.277 240 c 1431.129 269.188 1440 302.297 1440
 336 c 1440 1344 l 1440 1377.703 1431.129 1410.812 1414.277 1440 c 1397.426
 1469.188 1373.188 1493.426 1344 1510.277 c 1314.812 1527.129 1281.703 1536
 1248 1536 c 288 1536 l 237.078 1536 188.242 1515.773 152.234 1479.766 c
 116.227 1443.758 96 1394.922 96 1344 c 96 336 l 96 285.078 116.227 236.242
 152.234 200.234 c 188.242 164.227 237.078 144 288 144 c f
768 670.273 m 927.742 509.664 1327.199 790.656 768 1152 c 208.801 790.656
 608.258 509.762 768 670.273 c f
Q Q
showpage
%%Trailer
%%EOF
