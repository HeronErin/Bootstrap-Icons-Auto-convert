%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.02 1.277 m 5.219 1.379 5.477 1.711 5.602 2.012 c 5.602 2.016 l 5.785 
2.477 5.852 2.98 5.793 3.477 c 5.789 3.504 l 5.781 3.59 l 5.777 3.59 l 5.52
 5.074 4.168 6.117 2.664 5.992 c 1.16 5.863 0.004 4.605 0.004 3.098 c 0.004
 3.082 l 0.012 2.945 0.023 2.809 0.047 2.676 c 0.051 2.648 0.074 2.52 0.082
 2.492 c 0.086 2.473 l 0.082 2.473 l 0.152 2.156 0.285 1.855 0.473 1.594
 c 0.555 1.477 0.645 1.367 0.746 1.266 c 0.832 1.176 0.93 1.094 1.031 1.023
 c 1.027 1.023 l 1.059 1 1.094 0.984 1.125 0.969 c 1.117 1.07 1.109 1.551
 1.227 1.699 c 1.422 1.473 1.66 1.289 1.93 1.156 c 1.867 1.391 1.871 1.637
 1.938 1.867 c 1.965 1.883 1.988 1.902 2.012 1.926 c 2.051 1.961 2.098 2.004
 2.184 2.09 c 2.211 2.113 l 2.215 2.117 l 2.211 2.117 l 2.234 2.141 2.262
 2.164 2.289 2.184 c 2.434 2.293 2.645 2.395 2.777 2.461 c 2.852 2.5 2.906
 2.523 2.91 2.535 c 2.91 2.539 l 2.906 2.613 2.648 2.859 2.559 2.859 c 1.73
 2.859 1.598 3.359 1.598 3.359 c 1.629 3.734 1.867 4.051 2.168 4.242 c 2.176
 4.242 l 2.227 4.277 2.281 4.309 2.34 4.332 c 2.367 4.344 2.398 4.355 2.426
 4.367 c 2.547 4.41 2.676 4.434 2.805 4.441 c 3.945 4.496 4.363 3.391 3.977
 2.66 c 3.977 2.664 l 3.906 2.531 3.812 2.418 3.703 2.324 c 3.637 2.27 3.562
 2.223 3.488 2.188 c 3.488 2.184 l 3.734 2.152 3.984 2.215 4.188 2.355 c
 3.926 1.898 3.441 1.613 2.914 1.613 c 2.887 1.613 2.855 1.613 2.828 1.617
 c 2.812 1.617 l 2.711 1.625 2.609 1.641 2.512 1.668 c 2.473 1.629 2.43 
1.59 2.387 1.551 c 2.363 1.531 2.34 1.512 2.312 1.492 c 2.297 1.445 2.289
 1.398 2.277 1.352 c 2.441 1.289 2.613 1.254 2.785 1.242 c 2.805 1.242 l
 2.824 1.242 2.852 1.238 2.883 1.238 c 3 0.828 3.273 0.316 3.812 0 c 3.82
 0 l 3.824 0 3.824 0.004 3.824 0.004 c 3.844 0.066 3.871 0.125 3.902 0.184
 c 3.926 0.223 3.949 0.258 3.973 0.297 c 4.156 0.586 4.355 0.812 4.551 1.035
 c 4.84 1.363 5.117 1.68 5.312 2.168 c 5.312 2.16 l 5.262 1.852 5.164 1.555
 5.02 1.277 c f
Q Q
showpage
%%Trailer
%%EOF
