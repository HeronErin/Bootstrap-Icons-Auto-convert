%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 93 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 93 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 93 96 rectclip
1 0 0 -1 0 96 cm q
0 g
80.305 20.449 m 83.516 22.105 87.625 27.359 89.641 32.227 c 92.574 39.648
 93.613 47.684 92.656 55.609 c 92.602 56.07 l 92.445 57.414 l 92.449 57.414
 l 89.77 72.855 79.504 85.914 65.129 92.16 c 50.75 98.402 34.199 96.992 
21.086 88.406 c 7.973 79.824 0.062 65.215 0.035 49.543 c 0.035 49.305 l 
0.137 47.125 0.363 44.961 0.719 42.812 c 0.777 42.367 1.168 40.293 1.258
 39.879 c 1.316 39.574 l 1.32 39.57 l 2.457 34.508 4.582 29.715 7.566 25.469
 c 8.875 23.609 10.324 21.867 11.918 20.25 c 13.316 18.816 14.832 17.52 
16.465 16.352 c 16.957 16.027 17.477 15.75 18.023 15.527 c 17.914 17.137
 17.785 24.844 19.633 27.184 c 19.652 27.184 l 19.648 27.188 l 22.742 23.551
 26.559 20.602 30.859 18.527 c 29.883 22.262 29.926 26.191 30.984 29.902
 c 31.406 30.184 31.805 30.488 32.184 30.812 c 32.824 31.352 33.539 32.055
 34.906 33.41 c 35.312 33.805 l 35.371 33.863 l 35.77 34.254 36.199 34.613
 36.648 34.945 c 38.945 36.668 42.305 38.324 44.484 39.391 c 45.691 39.992
 46.535 40.398 46.637 40.547 c 46.66 40.594 l 46.59 41.75 42.488 45.742 
41.062 45.742 c 27.828 45.742 25.68 53.754 25.68 53.754 c 26.203 59.734 
29.965 64.789 34.781 67.895 c 35.629 68.434 36.508 68.914 37.414 69.344 
c 37.871 69.543 38.324 69.73 38.781 69.906 c 40.73 70.598 42.77 70.984 44.84
 71.07 c 63.098 71.93 69.77 54.246 63.613 42.602 c 63.613 42.594 l 63.617
 42.594 l 62.52 40.527 61.031 38.691 59.23 37.195 c 58.18 36.328 57.027 
35.582 55.805 34.973 c 55.785 34.961 l 55.789 34.961 l 59.734 34.449 63.734
 35.422 67.008 37.688 c 64.961 34.082 61.996 31.086 58.422 28.996 c 54.844
 26.906 50.773 25.801 46.633 25.789 c 46.168 25.793 45.707 25.812 45.254
 25.848 c 45 25.867 l 45 25.859 l 44.988 25.859 l 43.363 25.977 41.754 26.258
 40.188 26.699 c 39.543 26.051 38.875 25.422 38.191 24.816 c 37.809 24.488
 37.41 24.184 36.988 23.902 c 36.777 23.148 36.602 22.379 36.461 21.605 
c 39.074 20.656 41.805 20.07 44.574 19.871 c 44.875 19.852 l 45.188 19.828
 45.625 19.793 46.105 19.781 c 47.977 13.273 52.398 5.059 61.02 0.012 c 
61 0.043 l 61.02 0.035 l 61.031 0.023 l 61.043 0.023 l 61.055 0.012 l 61.145
 0.012 l 61.176 0.016 61.199 0.031 61.219 0.055 c 61.523 1.055 61.938 2.023
 62.453 2.934 c 62.812 3.547 63.18 4.141 63.551 4.715 c 66.492 9.359 69.688
 12.988 72.809 16.523 c 77.434 21.766 81.879 26.812 85.023 34.645 c 85.016
 34.566 l 85.02 34.566 l 84.191 29.645 82.602 24.879 80.305 20.449 c f
Q Q
showpage
%%Trailer
%%EOF
