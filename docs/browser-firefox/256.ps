%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 187 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 187 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 187 192 rectclip
1 0 0 -1 0 192 cm q
0 g
160.609 40.895 m 167.031 44.207 175.25 54.719 179.281 64.449 c 179.281 
64.453 l 185.148 79.297 187.223 95.367 185.316 111.215 c 185.207 112.141
 l 184.895 114.828 l 179.543 145.715 159.004 171.832 130.254 184.316 c 101.504
 196.805 68.398 193.984 42.172 176.816 c 15.949 159.645 0.125 130.43 0.07
 99.086 c 0.07 98.605 l 0.27 94.246 0.727 89.918 1.438 85.621 c 1.559 84.734
 2.336 80.582 2.516 79.754 c 2.637 79.141 l 2.641 79.141 l 4.914 69.012 
9.16 59.43 15.133 50.941 c 17.75 47.223 20.648 43.742 23.832 40.5 c 26.633
 37.637 29.664 35.035 32.93 32.699 c 33.91 32.051 34.957 31.5 36.047 31.055
 c 35.832 34.27 35.566 49.691 39.262 54.371 c 39.301 54.371 l 45.48 47.098
 53.117 41.199 61.715 37.055 c 59.766 44.527 59.852 52.383 61.969 59.809
 c 62.809 60.367 63.609 60.977 64.367 61.633 c 65.652 62.711 67.078 64.117
 69.816 66.828 c 70.633 67.621 l 70.742 67.73 l 70.738 67.727 l 71.539 68.508
 72.395 69.227 73.297 69.887 c 77.895 73.332 84.613 76.645 88.969 78.777
 c 91.379 79.977 93.074 80.793 93.277 81.094 c 93.324 81.191 l 93.18 83.508
 84.984 91.488 82.129 91.488 c 55.656 91.488 51.359 107.508 51.359 107.508
 c 52.402 119.473 59.926 129.574 69.562 135.793 c 71.258 136.863 73.016 
137.832 74.832 138.684 c 75.742 139.082 76.656 139.461 77.566 139.812 c 
81.465 141.191 85.547 141.973 89.688 142.141 c 126.203 143.855 139.547 108.492
 127.234 85.199 c 127.234 85.188 l 125.043 81.051 122.062 77.383 118.465
 74.387 c 116.355 72.652 114.059 71.164 111.613 69.949 c 111.578 69.926 
l 111.574 69.926 l 119.473 68.898 127.469 70.84 134.016 75.371 c 129.922
 68.168 123.996 62.172 116.84 57.992 c 109.684 53.816 101.551 51.602 93.266
 51.574 c 92.336 51.582 91.418 51.621 90.504 51.695 c 90 51.73 l 90 51.719
 l 89.977 51.719 l 86.727 51.953 83.512 52.516 80.375 53.398 c 79.086 52.102
 77.754 50.844 76.379 49.633 c 75.617 48.973 74.816 48.363 73.98 47.809 
c 73.555 46.293 73.199 44.762 72.926 43.211 c 78.145 41.309 83.605 40.145
 89.148 39.742 c 89.75 39.707 l 90.375 39.66 91.25 39.586 92.211 39.562 
c 95.953 26.543 104.797 10.117 122.039 0.023 c 122.004 0.082 l 122.039 0.07
 l 122.062 0.047 l 122.086 0.047 l 122.109 0.023 l 122.293 0.023 l 122.348
 0.035 122.398 0.062 122.438 0.109 c 123.047 2.113 123.875 4.043 124.906
 5.867 c 125.625 7.09 126.359 8.277 127.102 9.43 c 132.98 18.719 139.379
 25.977 145.617 33.047 c 154.871 43.535 163.762 53.625 170.051 69.285 c 
170.039 69.129 l 170.039 69.133 l 168.383 59.285 165.199 49.762 160.609 
40.895 c f
Q Q
showpage
%%Trailer
%%EOF
