%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 745 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 745 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 745 768 rectclip
1 0 0 -1 0 768 cm q
0 g
642.434 163.586 m 668.113 176.832 700.992 218.883 717.121 257.809 c 740.594
 317.184 748.891 381.473 741.266 444.863 c 740.832 448.559 l 739.586 459.312
 l 723.668 551.125 673.91 633.637 600.129 690.555 c 526.352 747.473 433.91
 774.66 341.066 766.75 c 248.219 758.844 161.711 716.41 98.621 647.836 c
 35.531 579.258 0.445 489.52 0.289 396.336 c 0.289 394.414 l 1.09 376.973
 2.914 359.66 5.762 342.477 c 6.242 338.926 9.363 322.316 10.082 319.004
 c 10.562 316.555 l 10.559 316.559 l 19.664 276.047 36.641 237.723 60.527
 203.762 c 70.992 188.883 82.59 174.961 95.328 162 c 106.527 150.543 118.656
 140.145 131.711 130.801 c 135.648 128.203 139.828 126.004 144.191 124.223
 c 143.328 137.086 142.27 198.766 157.055 217.488 c 157.199 217.488 l 181.926
 188.398 212.469 164.805 246.863 148.223 c 239.062 178.105 239.41 209.531
 247.871 239.23 c 251.23 241.469 254.43 243.902 257.473 246.527 c 262.609
 250.848 268.32 256.465 279.266 267.312 c 282.531 270.48 l 282.965 270.914
 l 282.961 270.91 l 286.164 274.027 289.578 276.914 293.184 279.551 c 311.566
 293.328 338.449 306.574 355.871 315.117 c 365.52 319.918 372.285 323.18
 373.102 324.383 c 373.293 324.766 l 372.719 334.031 339.934 365.949 328.508
 365.949 c 222.621 365.949 205.438 430.027 205.438 430.027 c 209.613 477.883
 239.711 518.301 278.254 543.164 c 278.258 543.168 l 285.031 547.461 292.07
 551.324 299.328 554.734 c 302.977 556.336 306.625 557.84 310.273 559.246
 c 325.875 564.766 342.195 567.887 358.754 568.559 c 504.816 575.422 558.195
 433.965 508.945 340.797 c 508.945 340.75 l 508.945 340.754 l 500.168 324.207
 488.25 309.535 473.855 297.551 c 465.422 290.613 456.227 284.652 446.449
 279.793 c 446.305 279.695 l 477.891 275.598 509.875 283.363 536.062 301.488
 c 519.684 272.672 495.984 248.691 467.359 231.977 c 438.734 215.262 406.203
 206.406 373.055 206.305 c 369.344 206.336 365.664 206.496 362.016 206.785
 c 360 206.93 l 360 206.879 l 359.902 206.879 l 346.91 207.812 334.043 210.062
 321.504 213.602 c 316.34 208.402 311.012 203.375 305.52 198.527 c 302.477
 195.898 299.27 193.461 295.922 191.23 c 294.211 185.176 292.801 179.043
 291.695 172.848 c 312.582 165.242 334.422 160.574 356.594 158.977 c 358.992
 158.832 l 361.488 158.641 364.992 158.352 368.832 158.258 c 383.809 106.176
 419.184 40.465 488.16 0.098 c 488.016 0.336 l 488.16 0.289 l 488.258 0.191
 l 488.355 0.191 l 488.453 0.094 l 489.172 0.094 l 489.168 0.098 l 489.395
 0.137 489.598 0.254 489.742 0.434 c 492.191 8.449 495.508 16.176 499.633
 23.473 c 502.512 28.367 505.441 33.121 508.418 37.73 c 531.938 74.883 557.523
 103.922 582.48 132.195 c 619.488 174.148 655.055 214.516 680.207 277.156
 c 680.16 276.531 l 680.16 276.527 l 673.535 237.148 660.805 199.043 642.434
 163.586 c f
Q Q
showpage
%%Trailer
%%EOF
