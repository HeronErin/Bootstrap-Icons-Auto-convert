%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 6 m 4.656 6 6 4.656 6 3 c 6 1.344 4.656 0 3 0 c 1.344 0 0 1.344 0 3 c
 0 4.656 1.344 6 3 6 c 3.094 0.469 m 3.094 1.031 l 3.094 1.156 2.906 1.156
 2.906 1.031 c 2.906 0.469 l 2.906 0.344 3.094 0.344 3.094 0.469 c 3.094
 4.969 m 3.094 5.531 l 3.094 5.656 2.906 5.656 2.906 5.531 c 2.906 4.969
 l 2.906 4.844 3.094 4.844 3.094 4.969 c 1.688 0.727 m 1.73 0.699 1.789 
0.715 1.816 0.762 c 2.098 1.25 l 2.16 1.355 1.996 1.449 1.934 1.344 c 1.652
 0.855 l 1.629 0.809 1.645 0.754 1.688 0.727 c 3.938 4.625 m 3.98 4.598 
4.039 4.613 4.066 4.66 c 4.348 5.148 l 4.348 5.145 l 4.375 5.191 4.363 5.25
 4.316 5.277 c 4.27 5.305 4.207 5.289 4.184 5.238 c 3.902 4.75 l 3.879 4.707
 3.895 4.648 3.938 4.625 c h
0.855 1.652 m 1.344 1.934 l 1.34 1.934 l 1.449 1.996 1.355 2.16 1.246 2.098
 c 0.758 1.816 l 0.762 1.816 l 0.652 1.754 0.746 1.59 0.855 1.652 c h
4.754 3.902 m 5.242 4.184 l 5.238 4.184 l 5.348 4.246 5.254 4.41 5.145 
4.348 c 4.656 4.066 l 4.551 4.004 4.645 3.84 4.75 3.902 c h
0.375 3 m 0.375 2.949 0.418 2.906 0.469 2.906 c 1.031 2.906 l 1.156 2.906
 1.156 3.094 1.031 3.094 c 0.469 3.094 l 0.418 3.094 0.375 3.051 0.375 3
 c 4.875 3 m 4.875 2.949 4.918 2.906 4.969 2.906 c 5.531 2.906 l 5.656 2.906
 5.656 3.094 5.531 3.094 c 4.969 3.094 l 4.918 3.094 4.875 3.051 4.875 3
 c 0.762 4.184 m 1.25 3.902 l 1.246 3.902 l 1.352 3.852 1.441 4 1.34 4.066
 c 0.852 4.348 l 0.855 4.348 l 0.75 4.398 0.664 4.25 0.762 4.184 c h
4.66 1.934 m 5.148 1.652 l 5.145 1.652 l 5.191 1.629 5.246 1.641 5.273 
1.688 c 5.301 1.734 5.285 1.789 5.238 1.816 c 4.75 2.098 l 4.645 2.16 4.551
 1.996 4.656 1.934 c h
1.688 5.273 m 1.645 5.246 1.629 5.191 1.652 5.145 c 1.934 4.656 l 1.996
 4.551 2.16 4.645 2.098 4.75 c 1.816 5.238 l 1.789 5.285 1.73 5.301 1.688
 5.273 c 3.938 1.375 m 3.895 1.352 3.879 1.293 3.902 1.246 c 4.184 0.758
 l 4.184 0.762 l 4.207 0.711 4.27 0.695 4.316 0.723 c 4.363 0.75 4.375 0.809
 4.348 0.855 c 4.066 1.344 l 4.066 1.34 l 4.039 1.387 3.98 1.402 3.938 1.375
 c h
2.434 0.531 m 2.48 0.711 l 2.484 0.711 l 2.516 0.832 2.336 0.883 2.305 
0.762 c 2.258 0.582 l 2.254 0.578 l 2.242 0.531 2.27 0.477 2.32 0.465 c 
2.371 0.449 2.422 0.48 2.434 0.531 c 3.699 5.238 m 3.746 5.418 l 3.746 5.422
 l 3.777 5.543 3.598 5.59 3.566 5.469 c 3.52 5.289 l 3.516 5.289 l 3.504
 5.238 3.531 5.188 3.582 5.172 c 3.633 5.16 3.684 5.191 3.699 5.238 c 1.145
 1.145 m 1.18 1.105 1.238 1.105 1.277 1.145 c 1.41 1.277 l 1.488 1.363 1.363
 1.488 1.277 1.41 c 1.145 1.277 l 1.105 1.238 1.105 1.18 1.145 1.145 c 4.594
 4.594 m 4.59 4.59 l 4.629 4.555 4.688 4.555 4.723 4.59 c 4.855 4.723 l 
4.945 4.812 4.812 4.945 4.723 4.855 c 4.59 4.723 l 4.555 4.688 4.555 4.629
 4.59 4.59 c 0.578 2.254 m 0.758 2.301 l 0.762 2.301 l 0.883 2.336 0.832
 2.516 0.711 2.484 c 0.531 2.438 l 0.531 2.434 l 0.477 2.422 0.445 2.371
 0.461 2.32 c 0.473 2.266 0.527 2.238 0.578 2.254 c h
5.285 3.516 m 5.465 3.562 l 5.469 3.562 l 5.59 3.598 5.543 3.777 5.422 
3.746 c 5.242 3.699 l 5.238 3.695 l 5.117 3.664 5.168 3.484 5.289 3.516 
c 0.465 3.68 m 0.453 3.629 0.48 3.578 0.531 3.562 c 0.711 3.516 l 0.832 
3.484 0.883 3.664 0.762 3.695 c 0.582 3.742 l 0.578 3.746 l 0.531 3.758 
0.477 3.73 0.465 3.68 c 5.172 2.418 m 5.16 2.367 5.191 2.316 5.238 2.301
 c 5.418 2.254 l 5.422 2.254 l 5.543 2.223 5.59 2.402 5.469 2.434 c 5.289
 2.48 l 5.289 2.484 l 5.238 2.496 5.188 2.469 5.172 2.418 c 1.141 4.855 
m 1.105 4.816 1.102 4.758 1.133 4.715 c 2.594 2.617 l 2.598 2.605 2.605 
2.598 2.617 2.594 c 4.719 1.137 l 4.715 1.137 l 4.816 1.051 4.949 1.184 
4.863 1.285 c 3.406 3.383 l 3.402 3.395 3.395 3.402 3.383 3.406 c 1.285 
4.867 l 1.242 4.898 1.184 4.895 1.145 4.855 c h
2.32 5.535 m 2.27 5.523 2.242 5.469 2.254 5.422 c 2.301 5.242 l 2.305 5.238
 l 2.336 5.117 2.516 5.168 2.484 5.289 c 2.438 5.469 l 2.434 5.469 l 2.422
 5.52 2.371 5.547 2.32 5.535 c 3.582 0.828 m 3.531 0.812 3.504 0.762 3.516
 0.711 c 3.562 0.531 l 3.566 0.531 l 3.598 0.41 3.777 0.457 3.746 0.578 
c 3.699 0.758 l 3.695 0.762 l 3.684 0.809 3.633 0.84 3.582 0.828 c f
Q Q
showpage
%%Trailer
%%EOF
