%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 96 192 l 96 180 l 144 180 l 147.184 180 150.234
 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168 c 156 54 
l 132 54 l 127.227 54 122.648 52.105 119.273 48.727 c 115.895 45.352 114
 40.773 114 36 c 114 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132 l 24
 132 l 24 24 l 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637
 0 48 0 c 114 0 l h
0 142.199 m 19.164 142.199 l 22.73 142.199 25.766 142.832 28.262 144.094
 c 30.781 145.332 32.695 147.094 33.996 149.375 c 35.332 151.648 36 154.32
 36 157.391 c 36.16 163.254 32.691 168.605 27.277 170.855 c 36.914 190.188
 l 26.293 190.188 l 17.895 172.297 l 9.383 172.297 l 9.383 190.188 l 0 190.188
 l h
9.383 149.652 m 9.383 165.156 l 17.652 165.156 l 20.27 165.156 22.34 164.523
 23.867 163.262 c 25.426 161.988 26.203 160.09 26.195 157.562 c 26.195 155.004
 25.418 153.047 23.867 151.695 c 23.867 151.691 l 22.164 150.277 19.996 
149.551 17.785 149.652 c h
62.496 190.188 m 42.527 190.188 l 42.527 142.199 l 62.566 142.199 l 66.855
 142.199 70.285 143.238 72.863 145.32 c 75.438 147.418 76.727 150.312 76.727
 154.008 c 76.766 155.758 76.395 157.492 75.648 159.07 c 74.969 160.461 
73.965 161.668 72.719 162.59 c 71.453 163.5 70.023 164.156 68.508 164.52
 c 68.508 164.941 l 70.453 165.133 72.23 165.699 73.848 166.633 c 75.469
 167.555 76.805 168.902 77.711 170.531 c 78.738 172.402 79.25 174.516 79.188
 176.652 c 79.188 179.508 78.477 181.949 77.051 183.973 c 75.609 185.973
 73.645 187.516 71.148 188.605 c 68.395 189.688 65.457 190.227 62.496 190.188
 c 60.348 149.34 m 51.949 149.34 l 51.949 162.18 l 58.203 162.18 l 60.34
 162.18 62.074 161.918 63.41 161.398 c 63.406 161.398 l 64.613 160.996 65.66
 160.219 66.395 159.18 c 67.09 158.129 67.434 156.887 67.379 155.629 c 67.473
 153.895 66.789 152.207 65.52 151.02 c 64.297 149.898 62.574 149.34 60.359
 149.34 c h
60.949 168.781 m 51.949 168.781 l 51.949 183.062 l 59.016 183.062 l 62.742
 183.062 65.422 182.473 67.055 181.297 c 68.715 180.094 69.648 178.133 69.527
 176.09 c 69.578 174.723 69.234 173.367 68.543 172.188 c 67.887 171.055 
66.875 170.172 65.664 169.668 c 64.172 169.039 62.566 168.738 60.949 168.781
 c f*
Q Q
showpage
%%Trailer
%%EOF
