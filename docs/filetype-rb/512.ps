%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 192 384 l 192 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
0 284.398 m 38.328 284.398 l 45.465 284.398 51.527 285.664 56.52 288.191
 c 61.559 290.672 65.383 294.191 67.992 298.75 c 70.664 303.293 72 308.637
 72 314.781 c 72 314.785 l 72.156 320.512 70.574 326.148 67.457 330.957 
c 64.344 335.766 59.844 339.516 54.551 341.711 c 73.824 380.375 l 52.586
 380.375 l 35.785 344.59 l 18.77 344.594 l 18.77 380.379 l 0 380.375 l h
18.77 299.301 m 18.77 330.309 l 35.305 330.309 l 40.535 330.309 44.68 329.043
 47.738 326.516 c 50.859 323.973 52.41 320.172 52.395 315.117 c 52.395 309.996
 50.844 306.086 47.738 303.383 c 47.734 303.383 l 44.332 300.555 39.992 
299.102 35.566 299.305 c h
124.992 380.371 m 85.055 380.375 l 85.055 284.398 l 125.133 284.398 l 133.707
 284.398 140.574 286.477 145.727 290.637 c 150.879 294.828 153.453 300.621
 153.453 308.012 c 153.457 308.016 l 153.531 311.516 152.793 314.98 151.297
 318.145 c 149.938 320.926 147.93 323.34 145.441 325.176 c 142.91 327 140.047
 328.312 137.016 329.039 c 137.016 329.879 l 140.902 330.262 144.465 331.391
 147.695 333.262 c 147.695 333.266 l 150.938 335.109 153.609 337.805 155.426
 341.062 c 157.48 344.809 158.5 349.035 158.375 353.305 c 158.375 359.016
 156.949 363.898 154.102 367.945 c 151.223 371.945 147.285 375.035 142.293
 377.211 c 142.297 377.207 l 136.789 379.379 130.91 380.453 124.992 380.375
 c 120.695 298.68 m 103.895 298.68 l 103.895 324.359 l 116.398 324.359 l
 120.672 324.359 124.141 323.84 126.812 322.801 c 126.816 322.801 l 129.227
 321.992 131.32 320.438 132.793 318.359 c 134.176 316.258 134.867 313.773
 134.762 311.258 c 134.941 307.785 133.582 304.41 131.039 302.039 c 128.59
 299.801 125.152 298.68 120.719 298.68 c h
121.895 337.559 m 103.895 337.559 l 103.895 366.117 l 118.031 366.117 l
 125.488 366.117 130.848 364.941 134.109 362.59 c 134.113 362.594 l 137.43
 360.191 139.293 356.266 139.055 352.176 c 139.156 349.441 138.473 346.734
 137.09 344.375 c 135.77 342.113 133.746 340.344 131.328 339.336 c 128.344
 338.082 125.129 337.477 121.895 337.559 c f*
Q Q
showpage
%%Trailer
%%EOF
