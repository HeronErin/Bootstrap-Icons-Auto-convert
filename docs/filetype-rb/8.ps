%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 3 6 l 3 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766
 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 
l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 
0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75
 0.336 1.086 0 1.5 0 c 3.562 0 l h
0 4.445 m 0.598 4.445 l 0.711 4.445 0.805 4.465 0.883 4.504 c 0.961 4.543
 1.02 4.598 1.062 4.668 c 1.105 4.738 1.125 4.824 1.125 4.918 c 1.129 5.102
 1.023 5.27 0.852 5.34 c 1.152 5.945 l 0.82 5.945 l 0.559 5.387 l 0.293 
5.383 l 0.293 5.941 l 0 5.945 l h
0.293 4.68 m 0.293 5.164 l 0.551 5.164 l 0.633 5.164 0.699 5.145 0.746 
5.105 c 0.793 5.066 0.82 5.008 0.82 4.926 c 0.82 4.848 0.797 4.785 0.746
 4.742 c 0.691 4.695 0.625 4.672 0.555 4.676 c h
1.953 5.945 m 1.328 5.945 l 1.328 4.445 l 1.953 4.445 l 2.086 4.445 2.195
 4.477 2.273 4.543 c 2.355 4.609 2.395 4.699 2.395 4.816 c 2.398 4.812 l
 2.398 4.867 2.387 4.922 2.363 4.973 c 2.344 5.016 2.312 5.051 2.273 5.082
 c 2.234 5.109 2.188 5.129 2.141 5.141 c 2.141 5.152 l 2.203 5.16 2.258 
5.176 2.309 5.207 c 2.359 5.234 2.398 5.277 2.43 5.328 c 2.461 5.387 2.477
 5.453 2.477 5.52 c 2.477 5.609 2.453 5.684 2.41 5.75 c 2.363 5.812 2.305
 5.859 2.227 5.895 c 2.223 5.895 l 2.137 5.93 2.047 5.945 1.953 5.945 c 
1.887 4.668 m 1.625 4.668 l 1.625 5.07 l 1.82 5.07 l 1.887 5.07 1.941 5.062
 1.984 5.047 c 1.98 5.043 l 2.02 5.031 2.051 5.008 2.074 4.973 c 2.098 4.941
 2.105 4.902 2.105 4.863 c 2.109 4.809 2.086 4.758 2.047 4.719 c 2.008 4.684
 1.953 4.668 1.887 4.668 c h
1.906 5.277 m 1.625 5.277 l 1.625 5.723 l 1.848 5.723 l 1.965 5.723 2.047
 5.703 2.098 5.668 c 2.094 5.664 l 2.148 5.629 2.176 5.566 2.172 5.504 c
 2.176 5.461 2.164 5.418 2.141 5.383 c 2.121 5.344 2.09 5.316 2.051 5.301
 c 2.004 5.281 1.957 5.273 1.906 5.273 c f*
Q Q
showpage
%%Trailer
%%EOF
