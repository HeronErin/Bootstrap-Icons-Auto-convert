%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 336 0 1152 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 336 0 1152 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 336 0 816 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 595.871 m 576 1464 l 576 1489.723 589.723 1513.492 612 1526.355 c 634.277
 1539.215 661.723 1539.215 684 1526.355 c 706.277 1513.492 720 1489.723 
720 1464 c 720 1008 l 720 990.852 729.148 975.004 744 966.43 c 758.852 957.855
 777.148 957.855 792 966.43 c 806.852 975.004 816 990.852 816 1008 c 816
 1464 l 816 1489.723 829.723 1513.492 852 1526.355 c 874.277 1539.215 901.723
 1539.215 924 1526.355 c 946.277 1513.492 960 1489.723 960 1464 c 960 648
 l 960 639.426 964.574 631.504 972 627.215 c 979.426 622.93 988.574 622.93
 996 627.215 c 1003.426 631.504 1008 639.426 1008 648 c 1008 888 l 1008 
913.723 1021.723 937.492 1044 950.355 c 1066.277 963.215 1093.723 963.215
 1116 950.355 c 1138.277 937.492 1152 913.723 1152 888 c 1152 624 l 1152
 547.617 1121.656 474.363 1067.648 420.352 c 1013.637 366.344 940.383 336
 864 336 c 598.656 336 l 583.758 335.984 569.066 332.5 555.742 325.824 c
 524.062 309.984 l 510.844 303.379 499.723 293.227 491.941 280.664 c 484.16
 268.105 480.027 253.625 480 238.848 c 480 72 l 480 46.277 466.277 22.508
 444 9.645 c 421.723 -3.215 394.277 -3.215 372 9.645 c 349.723 22.508 336
 46.277 336 72 c 336 271.969 l 336 340.609 374.785 403.488 436.223 434.113
 c 528 480 l 558.719 510.719 576 552.383 576 595.871 c f
768 288 m 819.445 288 866.984 260.555 892.707 216 c 918.43 171.445 918.43
 116.555 892.707 72 c 866.984 27.445 819.445 0 768 0 c 716.555 0 669.016
 27.445 643.293 72 c 617.57 116.555 617.57 171.445 643.293 216 c 669.016
 260.555 716.555 288 768 288 c f
Q Q
showpage
%%Trailer
%%EOF
