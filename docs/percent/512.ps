%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 48 336 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 48 336 336
384 384 cairo_set_page_size
%%EndPageSetup
q 48 48 288 288 rectclip
1 0 0 -1 0 384 cm q
0 g
322.609 61.391 m 325.422 64.207 327.004 68.02 327.004 72 c 327.004 75.98
 325.422 79.793 322.609 82.609 c 82.609 322.609 l 78.816 326.398 73.293 
327.879 68.117 326.492 c 62.941 325.105 58.895 321.059 57.508 315.883 c 
56.121 310.707 57.602 305.184 61.391 301.391 c 301.391 61.391 l 304.207 
58.578 308.02 56.996 312 56.996 c 315.98 56.996 319.793 58.578 322.609 61.391
 c 108 144 m 95.137 144 83.254 137.137 76.824 126 c 70.391 114.863 70.391
 101.137 76.824 90 c 83.254 78.863 95.137 72 108 72 c 120.863 72 132.746
 78.863 139.176 90 c 145.609 101.137 145.609 114.863 139.176 126 c 132.746
 137.137 120.863 144 108 144 c 108 168 m 129.438 168 149.242 156.562 159.961
 138 c 170.68 119.438 170.68 96.562 159.961 78 c 149.242 59.438 129.438 
48 108 48 c 86.562 48 66.758 59.438 56.039 78 c 45.32 96.562 45.32 119.438
 56.039 138 c 66.758 156.562 86.562 168 108 168 c 276 312 m 263.137 312 
251.254 305.137 244.824 294 c 238.391 282.863 238.391 269.137 244.824 258
 c 251.254 246.863 263.137 240 276 240 c 288.863 240 300.746 246.863 307.176
 258 c 313.609 269.137 313.609 282.863 307.176 294 c 300.746 305.137 288.863
 312 276 312 c 276 336 m 297.438 336 317.242 324.562 327.961 306 c 338.68
 287.438 338.68 264.562 327.961 246 c 317.242 227.438 297.438 216 276 216
 c 254.562 216 234.758 227.438 224.039 246 c 213.32 264.562 213.32 287.438
 224.039 306 c 234.758 324.562 254.562 336 276 336 c f
Q Q
showpage
%%Trailer
%%EOF
