%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1521.984 14.016 m 1528.629 20.672 1533.172 29.133 1535.051 38.352 c 1536.93
 47.566 1536.055 57.133 1532.543 65.855 c 1250.496 770.879 l 1169.484 761.344
 1087.43 774.941 1013.824 810.094 c 940.219 845.246 878.07 900.523 834.566
 969.523 c 791.062 1038.523 767.984 1118.43 768 1200 c 768 1248 768 1344
 693.793 1234.559 c 541.152 994.75 l 61.824 689.664 l 61.633 689.566 l 22.273
 664.512 l 12.289 658.156 5.008 648.332 1.828 636.934 c -1.355 625.535 -0.215
 613.363 5.027 602.754 c 10.273 592.148 19.25 583.848 30.238 579.457 c 73.629
 562.176 l 73.727 562.078 l 1470.145 3.359 l 1478.879 -0.141 1488.449 -0.996
 1497.664 0.898 c 1506.883 2.793 1515.34 7.355 1521.984 14.016 c 637.152
 966.719 m 1356.578 247.293 l 1401.793 134.203 l 1288.703 179.418 l 569.281
 898.848 l 601.73 919.488 l 601.727 919.488 l 607.684 923.27 612.73 928.316
 616.512 934.273 c h
637.152 966.719 m f*
1200 1536 m 1289.113 1536 1374.574 1500.602 1437.586 1437.586 c 1500.602
 1374.574 1536 1289.113 1536 1200 c 1536 1110.887 1500.602 1025.426 1437.586
 962.414 c 1374.574 899.398 1289.113 864 1200 864 c 1110.887 864 1025.426
 899.398 962.414 962.414 c 899.398 1025.426 864 1110.887 864 1200 c 864 
1289.113 899.398 1374.574 962.414 1437.586 c 1025.426 1500.602 1110.887 
1536 1200 1536 c 1233.984 1377.984 m 1224.723 1387.234 1212.086 1392.301
 1199 1392.012 c 1185.914 1391.719 1173.516 1386.098 1164.672 1376.449 c
 1054.367 1256.449 l 1042.777 1243.809 1038.805 1225.945 1043.957 1209.586
 c 1049.105 1193.23 1062.59 1180.859 1079.332 1177.141 c 1096.074 1173.418
 1113.527 1178.914 1125.121 1191.551 c 1152 1220.832 l 1152 1056 l 1152 
1038.852 1161.148 1023.004 1176 1014.43 c 1190.852 1005.855 1209.148 1005.855
 1224 1014.43 c 1238.852 1023.004 1248 1038.852 1248 1056 c 1248 1228.129
 l 1286.016 1190.016 l 1298.156 1177.875 1315.855 1173.133 1332.438 1177.578
 c 1349.023 1182.02 1361.98 1194.977 1366.422 1211.562 c 1370.867 1228.145
 1366.125 1245.844 1353.984 1257.984 c h
1233.984 1377.984 m f*
Q Q
showpage
%%Trailer
%%EOF
