%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 96 1392 1441
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 96 1392 1441
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 96 1248 1345 rectclip
1 0 0 -1 0 1536 cm q
0 g
801.984 110.016 m 792.98 100.988 780.75 95.914 768 95.914 c 755.25 95.914
 743.02 100.988 734.016 110.016 c 158.016 686.016 l 149.02 695.035 143.977
 707.262 144 720 c 144 1392 l 144 1404.73 149.059 1416.938 158.059 1425.941
 c 167.062 1434.941 179.27 1440 192 1440 c 624 1440 l 636.73 1440 648.938
 1434.941 657.941 1425.941 c 666.941 1416.938 672 1404.73 672 1392 c 672
 1008 l 864 1008 l 864 1392 l 864 1404.73 869.059 1416.938 878.059 1425.941
 c 887.062 1434.941 899.27 1440 912 1440 c 1344 1440 l 1356.73 1440 1368.938
 1434.941 1377.941 1425.941 c 1386.941 1416.938 1392 1404.73 1392 1392 c
 1392 720 l 1392.023 707.262 1386.98 695.035 1377.984 686.016 c 1248 556.129
 l 1248 240 l 1248 227.27 1242.941 215.062 1233.941 206.059 c 1224.938 197.059
 1212.73 192 1200 192 c 1104 192 l 1091.27 192 1079.062 197.059 1070.059
 206.059 c 1061.059 215.062 1056 227.27 1056 240 c 1056 364.129 l h
240 1344 m 240 739.871 l 768 211.871 l 1296 739.871 l 1296 1344 l 960 1344
 l 960 960 l 960 947.27 954.941 935.062 945.941 926.059 c 936.938 917.059
 924.73 912 912 912 c 624 912 l 611.27 912 599.062 917.059 590.059 926.059
 c 581.059 935.062 576 947.27 576 960 c 576 1344 l h
240 1344 m f
Q Q
showpage
%%Trailer
%%EOF
