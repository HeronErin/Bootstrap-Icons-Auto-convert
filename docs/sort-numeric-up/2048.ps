%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 143 182 1297 1376
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 143 182 1297 1376
1536 1536 cairo_set_page_size
%%EndPageSetup
q 143 182 1154 1194 rectclip
1 0 0 -1 0 1536 cm q
0 g
1194.047 160.129 m 1194.047 672 l 1093.441 672 l 1093.441 257.664 l 1088.547
 257.664 l 972.289 340.129 l 972.289 247.105 l 1093.441 160.129 l h
1194.047 160.129 m f
1090.559 1353.406 m 981.406 1353.406 926.59 1290.336 921.406 1230.719 c
 1017.789 1230.719 l 1023.355 1252.125 1050.719 1273.918 1091.996 1273.918
 c 1171.102 1273.918 1203.738 1194.332 1200.766 1095.742 c 1195.102 1095.742
 l 1180.895 1133.184 1140.383 1166.973 1074.047 1166.973 c 986.688 1166.973
 908.926 1108.125 908.926 998.203 c 908.926 887.996 990.332 822.043 1098.332
 822.043 c 1202.973 822.043 1296.379 883.098 1296.379 1079.996 c 1296.379
 1259.227 1226.973 1353.402 1090.457 1353.402 c h
1096.512 1090.848 m 1144.895 1090.848 1186.078 1058.59 1186.078 997.535
 c 1186.078 936.766 1147.871 900.766 1095.84 900.766 c 1045.918 900.766 
1006.848 936.766 1006.848 996.766 c 1006.848 1058.207 1046.977 1090.844 
1096.512 1090.844 c f*
432 1296 m 432 1313.148 422.852 1328.996 408 1337.57 c 393.148 1346.145
 374.852 1346.145 360 1337.57 c 345.148 1328.996 336 1313.148 336 1296 c
 336 355.871 l 225.984 465.984 l 213.844 478.125 196.145 482.867 179.562
 478.422 c 162.977 473.98 150.02 461.023 145.578 444.438 c 141.133 427.855
 145.875 410.156 158.016 398.016 c 350.016 206.113 l 350.688 205.441 l 359.734
 196.723 371.84 191.898 384.406 192.008 c 396.969 192.113 408.992 197.145
 417.887 206.016 c 609.887 398.016 l 622.031 410.141 626.781 427.82 622.352
 444.398 c 617.922 460.973 604.984 473.93 588.414 478.383 c 571.844 482.836
 554.156 478.109 542.016 465.984 c 432 355.871 l h
432 1296 m f
Q Q
showpage
%%Trailer
%%EOF
