%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 192 1440 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 192 1440 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 192 1248 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
816 192 m 828.73 192 840.938 197.059 849.941 206.059 c 858.941 215.062 
864 227.27 864 240 c 864 1296 l 864 1313.148 854.852 1328.996 840 1337.57
 c 825.148 1346.145 806.852 1346.145 792 1337.57 c 777.148 1328.996 768 
1313.148 768 1296 c 768 240 l 768 227.27 773.059 215.062 782.059 206.059
 c 791.062 197.059 803.27 192 816 192 c 624 384 m 636.73 384 648.938 389.059
 657.941 398.059 c 666.941 407.062 672 419.27 672 432 c 672 1104 l 672 1121.148
 662.852 1136.996 648 1145.57 c 633.148 1154.145 614.852 1154.145 600 1145.57
 c 585.148 1136.996 576 1121.148 576 1104 c 576 432 l 576 419.27 581.059
 407.062 590.059 398.059 c 599.062 389.059 611.27 384 624 384 c 1008 384
 m 1020.73 384 1032.938 389.059 1041.941 398.059 c 1050.941 407.062 1056
 419.27 1056 432 c 1056 1104 l 1056 1121.148 1046.852 1136.996 1032 1145.57
 c 1017.148 1154.145 998.852 1154.145 984 1145.57 c 969.148 1136.996 960
 1121.148 960 1104 c 960 432 l 960 419.27 965.059 407.062 974.059 398.059
 c 983.062 389.059 995.27 384 1008 384 c 432 528 m 444.73 528 456.938 533.059
 465.941 542.059 c 474.941 551.062 480 563.27 480 576 c 480 960 l 480 977.148
 470.852 992.996 456 1001.57 c 441.148 1010.145 422.852 1010.145 408 1001.57
 c 393.148 992.996 384 977.148 384 960 c 384 576 l 384 563.27 389.059 551.062
 398.059 542.059 c 407.062 533.059 419.27 528 432 528 c 1200 528 m 1212.73
 528 1224.938 533.059 1233.941 542.059 c 1242.941 551.062 1248 563.27 1248
 576 c 1248 960 l 1248 977.148 1238.852 992.996 1224 1001.57 c 1209.148 
1010.145 1190.852 1010.145 1176 1001.57 c 1161.148 992.996 1152 977.148 
1152 960 c 1152 576 l 1152 563.27 1157.059 551.062 1166.059 542.059 c 1175.062
 533.059 1187.27 528 1200 528 c 240 624 m 252.73 624 264.938 629.059 273.941
 638.059 c 282.941 647.062 288 659.27 288 672 c 288 864 l 288 881.148 278.852
 896.996 264 905.57 c 249.148 914.145 230.852 914.145 216 905.57 c 201.148
 896.996 192 881.148 192 864 c 192 672 l 192 659.27 197.059 647.062 206.059
 638.059 c 215.062 629.059 227.27 624 240 624 c 1392 624 m 1404.73 624 1416.938
 629.059 1425.941 638.059 c 1434.941 647.062 1440 659.27 1440 672 c 1440
 864 l 1440 881.148 1430.852 896.996 1416 905.57 c 1401.148 914.145 1382.852
 914.145 1368 905.57 c 1353.148 896.996 1344 881.148 1344 864 c 1344 672
 l 1344 659.27 1349.059 647.062 1358.059 638.059 c 1367.062 629.059 1379.27
 624 1392 624 c f*
Q Q
showpage
%%Trailer
%%EOF
