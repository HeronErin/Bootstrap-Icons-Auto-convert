%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 48 360 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 48 360 336
384 384 cairo_set_page_size
%%EndPageSetup
q 48 48 312 288 rectclip
1 0 0 -1 0 384 cm q
0 g
204 48 m 207.184 48 210.234 49.266 212.484 51.516 c 214.734 53.766 216 
56.816 216 60 c 216 324 l 216 330.629 210.629 336 204 336 c 197.371 336 
192 330.629 192 324 c 192 60 l 192 53.371 197.371 48 204 48 c 156 96 m 159.184
 96 162.234 97.266 164.484 99.516 c 166.734 101.766 168 104.816 168 108 
c 168 276 l 168 282.629 162.629 288 156 288 c 149.371 288 144 282.629 144
 276 c 144 108 l 144 101.371 149.371 96 156 96 c 252 96 m 255.184 96 258.234
 97.266 260.484 99.516 c 262.734 101.766 264 104.816 264 108 c 264 276 l
 264 282.629 258.629 288 252 288 c 245.371 288 240 282.629 240 276 c 240
 108 l 240 101.371 245.371 96 252 96 c 108 132 m 111.184 132 114.234 133.266
 116.484 135.516 c 118.734 137.766 120 140.816 120 144 c 120 240 l 120 246.629
 114.629 252 108 252 c 101.371 252 96 246.629 96 240 c 96 144 l 96 137.371
 101.371 132 108 132 c 300 132 m 303.184 132 306.234 133.266 308.484 135.516
 c 310.734 137.766 312 140.816 312 144 c 312 240 l 312 246.629 306.629 252
 300 252 c 293.371 252 288 246.629 288 240 c 288 144 l 288 137.371 293.371
 132 300 132 c 60 156 m 63.184 156 66.234 157.266 68.484 159.516 c 70.734
 161.766 72 164.816 72 168 c 72 216 l 72 222.629 66.629 228 60 228 c 53.371
 228 48 222.629 48 216 c 48 168 l 48 161.371 53.371 156 60 156 c 348 156
 m 351.184 156 354.234 157.266 356.484 159.516 c 358.734 161.766 360 164.816
 360 168 c 360 216 l 360 222.629 354.629 228 348 228 c 341.371 228 336 222.629
 336 216 c 336 168 l 336 161.371 341.371 156 348 156 c f*
Q Q
showpage
%%Trailer
%%EOF
