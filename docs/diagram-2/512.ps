%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 48 312 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 48 312 336
384 384 cairo_set_page_size
%%EndPageSetup
q 72 48 240 288 rectclip
1 0 0 -1 0 384 cm q
0 g
144 84 m 144 74.453 147.793 65.297 154.543 58.543 c 161.297 51.793 170.453
 48 180 48 c 204 48 l 213.547 48 222.703 51.793 229.457 58.543 c 236.207
 65.297 240 74.453 240 84 c 240 108 l 240 117.547 236.207 126.703 229.457
 133.457 c 222.703 140.207 213.547 144 204 144 c 204 168 l 264 168 l 267.184
 168 270.234 169.266 272.484 171.516 c 274.734 173.766 276 176.816 276 180
 c 276 204 l 276 210.629 270.629 216 264 216 c 257.371 216 252 210.629 252
 204 c 252 192 l 132 192 l 132 204 l 132 210.629 126.629 216 120 216 c 113.371
 216 108 210.629 108 204 c 108 180 l 108 173.371 113.371 168 120 168 c 180
 168 l 180 144 l 170.453 144 161.297 140.207 154.543 133.457 c 147.793 126.703
 144 117.547 144 108 c h
204 120 m 207.184 120 210.234 118.734 212.484 116.484 c 214.734 114.234
 216 111.184 216 108 c 216 84 l 216 80.816 214.734 77.766 212.484 75.516
 c 210.234 73.266 207.184 72 204 72 c 180 72 l 173.371 72 168 77.371 168
 84 c 168 108 l 168 111.184 169.266 114.234 171.516 116.484 c 173.766 118.734
 176.816 120 180 120 c h
72 276 m 72 266.453 75.793 257.297 82.543 250.543 c 89.297 243.793 98.453
 240 108 240 c 132 240 l 141.547 240 150.703 243.793 157.457 250.543 c 164.207
 257.297 168 266.453 168 276 c 168 300 l 168 309.547 164.207 318.703 157.457
 325.457 c 150.703 332.207 141.547 336 132 336 c 108 336 l 98.453 336 89.297
 332.207 82.543 325.457 c 75.793 318.703 72 309.547 72 300 c h
108 264 m 101.371 264 96 269.371 96 276 c 96 300 l 96 303.184 97.266 306.234
 99.516 308.484 c 101.766 310.734 104.816 312 108 312 c 132 312 l 135.184
 312 138.234 310.734 140.484 308.484 c 142.734 306.234 144 303.184 144 300
 c 144 276 l 144 272.816 142.734 269.766 140.484 267.516 c 138.234 265.266
 135.184 264 132 264 c h
216 276 m 216 266.453 219.793 257.297 226.543 250.543 c 233.297 243.793
 242.453 240 252 240 c 276 240 l 285.547 240 294.703 243.793 301.457 250.543
 c 308.207 257.297 312 266.453 312 276 c 312 300 l 312 309.547 308.207 318.703
 301.457 325.457 c 294.703 332.207 285.547 336 276 336 c 252 336 l 242.453
 336 233.297 332.207 226.543 325.457 c 219.793 318.703 216 309.547 216 300
 c h
252 264 m 245.371 264 240 269.371 240 276 c 240 300 l 240 303.184 241.266
 306.234 243.516 308.484 c 245.766 310.734 248.816 312 252 312 c 276 312
 l 279.184 312 282.234 310.734 284.484 308.484 c 286.734 306.234 288 303.184
 288 300 c 288 276 l 288 272.816 286.734 269.766 284.484 267.516 c 282.234
 265.266 279.184 264 276 264 c h
252 264 m f*
Q Q
showpage
%%Trailer
%%EOF
