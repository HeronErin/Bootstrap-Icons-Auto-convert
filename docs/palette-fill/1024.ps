%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
596.785 483.359 m 678.383 508.078 768 535.199 768 384 c 768 282.156 727.543
 184.484 655.527 112.473 c 583.516 40.457 485.844 0 384 0 c 282.156 0 184.484
 40.457 112.473 112.473 c 40.457 184.484 0 282.156 0 384 c 0 485.844 40.457
 583.516 112.473 655.527 c 184.484 727.543 282.156 768 384 768 c 479.809
 768 471.648 695.809 463.152 620.16 c 457.199 567.312 451.055 512.785 480
 480 c 502.32 454.703 548.16 468.625 596.785 483.359 c 384 240 m 358.277
 240 334.508 226.277 321.645 204 c 308.785 181.723 308.785 154.277 321.645
 132 c 334.508 109.723 358.277 96 384 96 c 409.723 96 433.492 109.723 446.355
 132 c 459.215 154.277 459.215 181.723 446.355 204 c 433.492 226.277 409.723
 240 384 240 c 600 384 m 574.277 384 550.508 370.277 537.645 348 c 524.785
 325.723 524.785 298.277 537.645 276 c 550.508 253.723 574.277 240 600 240
 c 625.723 240 649.492 253.723 662.355 276 c 675.215 298.277 675.215 325.723
 662.355 348 c 649.492 370.277 625.723 384 600 384 c 240 312 m 240 337.723
 226.277 361.492 204 374.355 c 181.723 387.215 154.277 387.215 132 374.355
 c 109.723 361.492 96 337.723 96 312 c 96 286.277 109.723 262.508 132 249.645
 c 154.277 236.785 181.723 236.785 204 249.645 c 226.277 262.508 240 286.277
 240 312 c 264 624 m 238.277 624 214.508 610.277 201.645 588 c 188.785 565.723
 188.785 538.277 201.645 516 c 214.508 493.723 238.277 480 264 480 c 289.723
 480 313.492 493.723 326.355 516 c 339.215 538.277 339.215 565.723 326.355
 588 c 313.492 610.277 289.723 624 264 624 c f
Q Q
showpage
%%Trailer
%%EOF
