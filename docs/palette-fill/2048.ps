%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1193.566 966.719 m 1356.77 1016.16 1536 1070.398 1536 768 c 1536 564.312
 1455.086 368.969 1311.059 224.941 c 1167.031 80.914 971.688 0 768 0 c 564.312
 0 368.969 80.914 224.941 224.941 c 80.914 368.969 0 564.312 0 768 c 0 971.688
 80.914 1167.031 224.941 1311.059 c 368.969 1455.086 564.312 1536 768 1536
 c 959.617 1536 943.297 1391.617 926.305 1240.32 c 914.402 1134.625 902.113
 1025.566 960 960 c 1004.641 909.406 1096.32 937.246 1193.566 966.719 c 
768 480 m 716.555 480 669.016 452.555 643.293 408 c 617.57 363.445 617.57
 308.555 643.293 264 c 669.016 219.445 716.555 192 768 192 c 819.445 192
 866.984 219.445 892.707 264 c 918.43 308.555 918.43 363.445 892.707 408
 c 866.984 452.555 819.445 480 768 480 c 1200 768 m 1148.555 768 1101.016
 740.555 1075.293 696 c 1049.57 651.445 1049.57 596.555 1075.293 552 c 1101.016
 507.445 1148.555 480 1200 480 c 1251.445 480 1298.984 507.445 1324.707 
552 c 1350.43 596.555 1350.43 651.445 1324.707 696 c 1298.984 740.555 1251.445
 768 1200 768 c 480 624 m 480 675.445 452.555 722.984 408 748.707 c 363.445
 774.43 308.555 774.43 264 748.707 c 219.445 722.984 192 675.445 192 624
 c 192 572.555 219.445 525.016 264 499.293 c 308.555 473.57 363.445 473.57
 408 499.293 c 452.555 525.016 480 572.555 480 624 c 528 1248 m 476.555 
1248 429.016 1220.555 403.293 1176 c 377.57 1131.445 377.57 1076.555 403.293
 1032 c 429.016 987.445 476.555 960 528 960 c 579.445 960 626.984 987.445
 652.707 1032 c 678.43 1076.555 678.43 1131.445 652.707 1176 c 626.984 1220.555
 579.445 1248 528 1248 c f
Q Q
showpage
%%Trailer
%%EOF
