%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 26 1390 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 26 1390 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 26 1198 1510 rectclip
1 0 0 -1 0 1536 cm q
0 g
850.945 4.414 m 759.168 -18.527 673.922 50.879 667.777 140.734 c 660.867
 241.629 645.699 334.27 626.688 389.375 c 614.688 423.934 580.703 486.621
 526.848 546.719 c 473.375 606.527 403.777 659.809 322.273 682.078 c 257.762
 699.648 192 755.52 192 837.121 c 192 1221.219 l 192 1302.34 257.473 1361.762
 331.008 1369.539 c 433.727 1380.484 481.152 1409.379 529.535 1438.945 c
 534.145 1441.824 l 560.258 1457.664 589.633 1475.23 627.266 1488.289 c 
665.379 1501.344 709.922 1509.121 768 1509.121 c 1104 1509.121 l 1193.953
 1509.121 1257.504 1463.328 1289.664 1406.977 c 1305.207 1380.383 1313.609
 1350.223 1314.047 1319.426 c 1314.047 1304.832 1311.84 1289.473 1306.656
 1274.883 c 1325.953 1249.637 1343.137 1219.395 1353.504 1188.387 c 1364.062
 1156.707 1370.016 1115.234 1353.887 1078.082 c 1360.512 1065.602 1365.406
 1052.258 1369.152 1039.395 c 1376.543 1013.473 1380 984.867 1380 957.121
 c 1380 929.473 1376.543 900.961 1369.152 874.945 c 1365.871 862.957 1361.434
 851.32 1355.902 840.191 c 1372.715 816.277 1383.527 788.668 1387.438 759.699
 c 1391.348 730.73 1388.238 701.246 1378.367 673.727 c 1358.59 616.895 1312.895
 568.125 1263.168 551.613 c 1181.855 524.543 1090.078 525.117 1021.633 531.355
 c 1021.633 531.359 l 1007.422 532.645 993.242 534.246 979.105 536.16 c 
1012.27 393.527 1010.23 244.965 973.152 103.297 c 966.68 80.602 954.258 
60.047 937.18 43.758 c 920.098 27.473 898.977 16.043 876 10.656 c h
1104 1413.215 m 768 1413.215 l 719.039 1413.215 685.152 1406.59 658.559
 1397.473 c 631.582 1388.16 609.984 1375.586 584.062 1359.746 c 580.223 
1357.441 l 526.941 1324.898 465.215 1287.266 341.184 1274.113 c 309.215 
1270.656 288 1246.273 288 1221.312 c 288 837.121 l 288 812.738 309.695 784.992
 347.52 774.723 c 452.641 745.922 537.312 679.105 598.465 610.754 c 659.426
 542.594 700.609 469.152 717.312 420.867 c 740.641 353.668 756.383 251.141
 763.586 147.266 c 765.984 112.512 798.145 90.242 827.617 97.539 c 852.77
 103.875 l 868.129 107.715 877.539 117.602 880.418 128.355 c 880.414 128.352
 l 919.621 277.73 914.785 435.258 866.496 581.953 c 862.836 592.883 863.227
 604.762 867.605 615.426 c 871.98 626.09 880.051 634.82 890.332 640.027 
c 900.617 645.234 912.43 646.562 923.617 643.777 c 923.906 643.68 l 925.25
 643.391 l 930.816 642.047 l 963.648 635.098 996.855 630.062 1030.273 626.977
 c 1093.922 621.215 1170.145 621.793 1232.832 642.719 c 1249.633 648.285
 1276.031 671.52 1287.551 705.117 c 1297.824 734.684 1295.902 769.438 1262.016
 803.23 c 1228.129 837.117 l 1262.016 871.102 l 1266.145 875.23 1272.094
 884.637 1276.801 901.34 c 1281.41 917.371 1284 936.859 1284 957.117 c 1284
 977.469 1281.406 996.859 1276.801 1012.988 c 1272 1029.691 1266.145 1039.102
 1262.016 1043.227 c 1228.129 1077.113 l 1262.016 1111.098 l 1266.527 1115.609
 1272.48 1128.09 1262.496 1157.945 c 1262.496 1157.953 l 1252.16 1186.938
 1235.613 1213.312 1214.016 1235.23 c 1180.129 1269.117 l 1214.016 1303.102
 l 1214.59 1303.582 1217.953 1307.902 1217.953 1319.422 c 1217.953 1319.426
 l 1217.391 1333.484 1213.402 1347.191 1206.336 1359.359 c 1190.496 1387.008
 1158.047 1413.121 1104 1413.121 c h
1104 1413.215 m f
Q Q
showpage
%%Trailer
%%EOF
