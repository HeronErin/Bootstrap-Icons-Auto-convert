%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 13 695 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 13 695 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 13 599 755 rectclip
1 0 0 -1 0 768 cm q
0 g
425.473 2.207 m 379.586 -9.266 336.961 25.441 333.887 70.367 c 330.43 120.816
 322.848 167.137 313.344 194.688 c 307.344 211.969 290.352 243.312 263.422
 273.359 c 236.688 303.262 201.887 329.902 161.133 341.039 c 128.879 349.824
 96 377.762 96 418.559 c 96 610.605 l 96 651.164 128.734 680.879 165.504
 684.766 c 216.863 690.238 240.574 704.688 264.77 719.469 c 267.074 720.91
 l 280.129 728.832 294.816 737.613 313.633 744.141 c 332.688 750.668 354.961
 754.555 384 754.555 c 552 754.555 l 596.977 754.555 628.754 731.66 644.832
 703.484 c 644.832 703.488 l 652.605 690.191 656.805 675.109 657.023 659.711
 c 657.023 652.414 655.918 644.734 653.328 637.438 c 662.977 624.812 671.566
 609.695 676.754 594.191 c 682.035 578.352 685.012 557.617 676.945 539.039
 c 680.258 532.801 682.707 526.129 684.578 519.695 c 688.273 506.734 690.004
 492.43 690.004 478.559 c 690.004 464.734 688.277 450.48 684.578 437.469
 c 684.574 437.473 l 682.934 431.48 680.719 425.66 677.953 420.098 c 695.008
 395.828 699.199 364.785 689.184 336.863 c 679.297 308.449 656.449 284.062
 631.582 275.809 c 590.926 262.273 545.039 262.562 510.812 265.68 c 510.816
 265.68 l 503.711 266.32 496.621 267.121 489.551 268.078 c 506.137 196.762
 505.113 122.48 486.574 51.648 c 483.34 40.301 477.129 30.023 468.59 21.879
 c 460.051 13.738 449.488 8.023 438 5.328 c h
552 706.609 m 384 706.609 l 359.52 706.609 342.574 703.297 329.281 698.738
 c 315.793 694.082 304.992 687.793 292.035 679.875 c 290.113 678.723 l 263.473
 662.449 232.609 643.633 170.594 637.059 c 154.609 635.332 144 623.137 144
 610.66 c 144 418.559 l 144 406.367 154.848 392.496 173.762 387.359 c 226.32
 372.961 268.656 339.551 299.234 305.375 c 329.715 271.297 350.305 234.574
 358.66 210.43 c 370.324 176.828 378.195 125.566 381.797 73.629 c 382.996
 56.254 399.078 45.117 413.812 48.766 c 426.387 51.934 l 434.066 53.855 
438.77 58.797 440.211 64.172 c 440.207 64.176 l 459.809 138.863 457.395 
217.629 433.246 290.977 c 431.418 296.441 431.613 302.383 433.801 307.715
 c 435.992 313.047 440.023 317.41 445.168 320.012 c 450.309 322.617 456.215
 323.281 461.809 321.887 c 461.953 321.84 l 462.625 321.695 l 465.41 321.023
 l 465.406 321.023 l 481.824 317.547 498.426 315.031 515.137 313.488 c 546.961
 310.609 585.074 310.895 616.418 321.359 c 624.816 324.145 638.02 335.758
 643.777 352.559 c 648.914 367.344 647.953 384.719 631.008 401.613 c 614.062
 418.559 l 631.008 435.551 l 633.07 437.613 636.047 442.32 638.398 450.672
 c 640.703 458.688 642 468.434 642 478.559 c 642 488.734 640.703 498.43 
638.398 506.496 c 636 514.848 633.07 519.551 631.008 521.617 c 614.062 538.562
 l 631.008 555.555 l 633.266 557.812 636.238 564.051 631.246 578.98 c 631.246
 578.977 l 626.078 593.469 617.805 606.656 607.008 617.617 c 590.062 634.562
 l 607.008 651.555 l 607.297 651.793 608.977 653.953 608.977 659.715 c 608.977
 659.711 l 608.695 666.742 606.699 673.598 603.168 679.68 c 595.246 693.504
 579.023 706.559 552 706.559 c h
552 706.609 m f
Q Q
showpage
%%Trailer
%%EOF
