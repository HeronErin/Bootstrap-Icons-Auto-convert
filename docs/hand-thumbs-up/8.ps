%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.324 0.016 m 2.965 -0.074 2.633 0.199 2.609 0.551 c 2.582 0.945 2.523 
1.309 2.449 1.523 c 2.402 1.66 2.27 1.902 2.059 2.137 c 1.852 2.371 1.578
 2.578 1.258 2.664 c 1.008 2.734 0.75 2.953 0.75 3.27 c 0.75 4.77 l 0.75
 5.086 1.004 5.32 1.293 5.348 c 1.695 5.391 1.879 5.504 2.07 5.617 c 2.09
 5.629 l 2.191 5.691 2.305 5.758 2.453 5.809 c 2.602 5.859 2.777 5.891 3.004
 5.891 c 4.316 5.891 l 4.668 5.891 4.918 5.711 5.043 5.492 c 5.039 5.496
 l 5.098 5.391 5.133 5.273 5.133 5.152 c 5.133 5.094 5.125 5.035 5.105 4.977
 c 5.18 4.879 5.246 4.762 5.289 4.641 c 5.332 4.516 5.355 4.355 5.289 4.211
 c 5.316 4.164 5.336 4.109 5.348 4.059 c 5.375 3.957 5.391 3.844 5.391 3.738
 c 5.391 3.629 5.379 3.52 5.348 3.418 c 5.336 3.371 5.316 3.324 5.297 3.281
 c 5.43 3.094 5.461 2.852 5.383 2.633 c 5.305 2.41 5.129 2.219 4.934 2.156
 c 4.617 2.051 4.258 2.055 3.988 2.078 c 3.992 2.074 l 3.934 2.082 3.879
 2.086 3.824 2.094 c 3.953 1.539 3.945 0.957 3.801 0.402 c 3.75 0.223 3.605
 0.086 3.422 0.043 c h
4.312 5.52 m 3 5.52 l 2.809 5.52 2.676 5.492 2.574 5.457 c 2.469 5.422 
2.383 5.371 2.285 5.309 c 2.27 5.301 l 2.062 5.172 1.82 5.027 1.336 4.977
 c 1.211 4.965 1.129 4.867 1.129 4.77 c 1.125 3.27 l 1.125 3.176 1.211 3.066
 1.359 3.027 c 1.77 2.914 2.102 2.652 2.34 2.387 c 2.578 2.121 2.738 1.832
 2.805 1.645 c 2.895 1.383 2.957 0.98 2.984 0.574 c 2.992 0.438 3.121 0.352
 3.234 0.379 c 3.332 0.402 l 3.391 0.418 3.43 0.457 3.441 0.496 c 3.438 
0.5 l 3.594 1.086 3.574 1.699 3.383 2.273 c 3.336 2.414 3.465 2.551 3.609
 2.516 c 3.613 2.516 l 3.637 2.512 l 3.637 2.508 l 3.766 2.48 3.895 2.461
 4.023 2.449 c 4.273 2.426 4.57 2.43 4.816 2.512 c 4.883 2.535 4.984 2.625
 5.031 2.754 c 5.07 2.871 5.062 3.004 4.93 3.137 c 4.797 3.27 l 4.93 3.402
 l 4.945 3.418 4.969 3.457 4.988 3.52 c 5.008 3.582 5.016 3.66 5.016 3.738
 c 5.016 3.816 5.004 3.895 4.988 3.957 c 4.969 4.023 4.945 4.059 4.93 4.074
 c 4.797 4.207 l 4.93 4.34 l 4.949 4.359 4.969 4.406 4.93 4.523 c 4.891 
4.637 4.828 4.738 4.742 4.824 c 4.609 4.957 l 4.742 5.09 l 4.746 5.09 4.758
 5.109 4.758 5.152 c 4.754 5.207 4.738 5.262 4.711 5.309 c 4.648 5.418 4.523
 5.52 4.312 5.52 c h
4.312 5.52 m f
Q Q
showpage
%%Trailer
%%EOF
