%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 1 87 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 1 87 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 1 75 95 rectclip
1 0 0 -1 0 96 cm q
0 g
53.184 0.277 m 47.449 -1.156 42.121 3.18 41.734 8.797 c 41.301 15.102 40.355
 20.895 39.168 24.336 c 38.418 26.496 36.293 30.414 32.93 34.172 c 29.586
 37.91 25.238 41.238 20.145 42.633 c 16.109 43.727 12 47.219 12 52.32 c 
12 76.328 l 12 81.398 16.094 85.113 20.688 85.598 c 27.109 86.281 30.07 
88.086 33.094 89.938 c 33.383 90.117 l 35.016 91.105 36.852 92.207 39.203
 93.02 c 41.586 93.836 44.367 94.32 48 94.32 c 69 94.32 l 74.621 94.32 78.594
 91.457 80.605 87.938 c 81.574 86.273 82.102 84.391 82.129 82.465 c 82.129
 81.555 81.992 80.594 81.668 79.68 c 82.875 78.102 83.949 76.211 84.598 
74.273 c 85.258 72.293 85.629 69.703 84.621 67.379 c 85.035 66.598 85.34
 65.766 85.574 64.961 c 86.035 63.34 86.254 61.555 86.254 59.82 c 86.254
 58.094 86.039 56.309 85.574 54.684 c 85.57 54.684 l 85.367 53.934 85.09
 53.207 84.742 52.512 c 86.875 49.48 87.398 45.598 86.148 42.109 c 84.914
 38.559 82.055 35.508 78.949 34.477 c 73.867 32.785 68.133 32.82 63.852 
33.211 c 62.965 33.289 62.078 33.391 61.195 33.512 c 63.266 24.594 63.141
 15.309 60.82 6.457 c 59.996 3.566 57.676 1.352 54.75 0.664 c h
69 88.324 m 48 88.324 l 44.941 88.324 42.82 87.91 41.16 87.34 c 39.473 
86.758 38.125 85.973 36.504 84.98 c 36.266 84.836 l 32.938 82.801 29.078
 80.449 21.324 79.629 c 19.328 79.414 18 77.891 18 76.328 c 18 52.32 l 18
 50.797 19.355 49.062 21.719 48.422 c 28.289 46.621 33.582 42.445 37.402
 38.176 c 41.211 33.914 43.785 29.324 44.832 26.309 c 46.289 22.109 47.273
 15.699 47.723 9.207 c 47.871 7.035 49.883 5.645 51.727 6.098 c 53.297 6.492
 l 54.258 6.73 54.844 7.352 55.023 8.023 c 55.027 8.023 l 57.477 17.359 
57.176 27.203 54.156 36.371 c 53.809 37.41 54.055 38.555 54.797 39.359 c
 55.539 40.164 56.664 40.5 57.727 40.234 c 57.746 40.227 l 57.832 40.207
 l 58.18 40.121 l 58.176 40.129 l 60.227 39.695 62.305 39.379 64.391 39.188
 c 68.367 38.828 73.133 38.863 77.051 40.172 c 78.102 40.52 79.75 41.973
 80.473 44.07 c 81.113 45.918 80.996 48.09 78.875 50.203 c 76.758 52.32 
l 78.875 54.445 l 79.133 54.703 79.504 55.293 79.801 56.336 c 80.09 57.34
 80.25 58.555 80.25 59.82 c 80.25 61.094 80.09 62.305 79.801 63.312 c 79.5
 64.355 79.137 64.945 78.875 65.203 c 76.758 67.32 l 78.875 69.445 l 79.156
 69.727 79.527 70.508 78.906 72.375 c 78.906 72.371 l 78.262 74.184 77.227
 75.832 75.875 77.203 c 73.758 79.32 l 75.875 81.445 l 75.91 81.477 76.121
 81.746 76.121 82.465 c 76.086 83.344 75.836 84.199 75.395 84.961 c 74.406
 86.688 72.375 88.32 69 88.32 c h
69 88.324 m f
Q Q
showpage
%%Trailer
%%EOF
