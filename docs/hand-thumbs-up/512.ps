%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 6 348 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 6 348 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 6 300 378 rectclip
1 0 0 -1 0 384 cm q
0 g
212.734 1.105 m 189.793 -4.633 168.48 12.719 166.945 35.184 c 165.219 60.406
 161.426 83.566 156.672 97.344 c 153.672 105.984 145.176 121.656 131.711
 136.68 c 118.344 151.633 100.941 164.953 80.566 170.52 c 64.441 174.91 
48 188.879 48 209.281 c 48 305.305 l 48 325.586 64.367 340.441 82.754 342.383
 c 108.434 345.117 120.289 352.344 132.387 359.734 c 133.539 360.453 l 140.066
 364.414 147.41 368.805 156.82 372.07 c 166.348 375.336 177.484 377.277 
192.004 377.277 c 276.004 377.277 l 298.492 377.277 314.379 365.828 322.418
 351.742 c 322.414 351.742 l 326.301 345.098 328.402 337.555 328.512 329.855
 c 328.512 326.207 327.961 322.367 326.664 318.719 c 331.488 312.406 335.785
 304.848 338.375 297.094 c 341.016 289.172 342.504 278.805 338.473 269.52
 c 340.129 266.398 341.352 263.062 342.289 259.848 c 344.137 253.367 345
 246.215 345 239.281 c 345 232.371 344.137 225.242 342.289 218.738 c 342.289
 218.734 l 341.469 215.738 340.359 212.828 338.977 210.047 c 347.504 197.914
 349.598 182.391 344.594 168.434 c 339.648 154.227 328.227 142.035 315.793
 137.906 c 295.465 131.137 272.52 131.281 255.41 132.844 c 255.406 132.84
 l 251.855 133.16 248.312 133.562 244.777 134.039 c 253.066 98.383 252.559
 61.242 243.289 25.824 c 241.668 20.148 238.566 15.012 234.293 10.941 c 
230.023 6.867 224.746 4.012 219 2.664 c h
276 353.305 m 192 353.305 l 179.762 353.305 171.289 351.648 164.641 349.367
 c 157.898 347.039 152.496 343.895 146.016 339.934 c 145.055 339.359 l 131.734
 331.223 116.301 321.816 85.293 318.527 c 77.301 317.664 71.996 311.566 
71.996 305.328 c 72 209.281 l 72 203.184 77.426 196.25 86.879 193.68 c 113.16
 186.48 134.328 169.777 149.613 152.688 c 164.852 135.648 175.148 117.289
 179.324 105.215 c 185.156 88.414 189.094 62.781 190.891 36.816 c 191.492
 28.129 199.531 22.559 206.898 24.383 c 213.188 25.969 l 217.027 26.93 219.379
 29.402 220.098 32.09 c 220.105 32.09 l 229.906 69.434 228.695 108.816 216.625
 145.488 c 215.23 149.641 216.215 154.227 219.188 157.445 c 222.16 160.66
 226.652 162.004 230.902 160.945 c 230.973 160.922 l 231.309 160.852 l 232.699
 160.516 l 232.703 160.512 l 240.91 158.773 249.215 157.516 257.566 156.742
 c 273.477 155.301 292.535 155.445 308.207 160.68 c 312.406 162.07 319.008
 167.879 321.887 176.281 c 324.453 183.672 323.977 192.359 315.504 200.809
 c 307.031 209.281 l 315.504 217.777 l 316.535 218.809 318.023 221.16 319.199
 225.336 c 320.352 229.344 321 234.215 321 239.281 c 321 244.371 320.352
 249.219 319.199 253.25 c 318 257.426 316.535 259.777 315.504 260.809 c 
307.031 269.281 l 315.504 277.777 l 316.633 278.906 318.121 282.023 315.625
 289.488 c 313.039 296.734 308.902 303.328 303.504 308.809 c 295.031 317.281
 l 303.504 325.777 l 303.648 325.898 304.488 326.977 304.488 329.855 c 304.348
 333.371 303.352 336.797 301.586 339.84 c 297.625 346.75 289.516 353.281
 276 353.281 c h
276 353.305 m f
Q Q
showpage
%%Trailer
%%EOF
