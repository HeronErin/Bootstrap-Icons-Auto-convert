%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
528 576 m 515.27 576 503.062 581.059 494.059 590.059 c 485.059 599.062 
480 611.27 480 624 c 480 1008 l 480 1025.148 489.148 1040.996 504 1049.57
 c 518.852 1058.145 537.148 1058.145 552 1049.57 c 566.852 1040.996 576 
1025.148 576 1008 c 576 864 l 604.129 864 l 796.129 1056 l 686.016 1166.016
 l 673.875 1178.156 669.133 1195.855 673.578 1212.438 c 678.02 1229.023 
690.977 1241.98 707.562 1246.422 c 724.145 1250.867 741.844 1246.125 753.984
 1233.984 c 864 1123.871 l 974.016 1233.984 l 986.156 1246.125 1003.855 
1250.867 1020.438 1246.422 c 1037.023 1241.98 1049.98 1229.023 1054.422 
1212.438 c 1058.867 1195.855 1054.125 1178.156 1041.984 1166.016 c 931.871
 1056 l 1041.984 945.984 l 1054.125 933.844 1058.867 916.145 1054.422 899.562
 c 1049.98 882.977 1037.023 870.02 1020.438 865.578 c 1003.855 861.133 986.156
 865.875 974.016 878.016 c 864 988.129 l 738.719 862.754 l 787.465 856.293
 829.543 825.41 850.32 780.844 c 871.094 736.277 867.695 684.191 841.301
 642.703 c 814.906 601.219 769.172 576.066 720 576 c h
576 672 m 720 672 l 737.148 672 752.996 681.148 761.57 696 c 770.145 710.852
 770.145 729.148 761.57 744 c 752.996 758.852 737.148 768 720 768 c 576 
768 l h
576 672 m f
192 96 m 192 70.539 202.113 46.121 220.117 28.117 c 238.121 10.113 262.539
 0 288 0 c 1248 0 l 1273.461 0 1297.879 10.113 1315.883 28.117 c 1333.887
 46.121 1344 70.539 1344 96 c 1344 288 l 1344 313.461 1333.887 337.879 1315.883
 355.883 c 1297.879 373.887 1273.461 384 1248 384 c 1248 1392 l 1248 1430.191
 1232.828 1466.816 1205.824 1493.824 c 1178.816 1520.828 1142.191 1536 1104
 1536 c 432 1536 l 393.809 1536 357.184 1520.828 330.176 1493.824 c 303.172
 1466.816 288 1430.191 288 1392 c 288 384 l 262.539 384 238.121 373.887 
220.117 355.883 c 202.113 337.879 192 313.461 192 288 c h
384 384 m 384 1392 l 384 1404.73 389.059 1416.938 398.059 1425.941 c 407.062
 1434.941 419.27 1440 432 1440 c 1104 1440 l 1116.73 1440 1128.938 1434.941
 1137.941 1425.941 c 1146.941 1416.938 1152 1404.73 1152 1392 c 1152 384
 l h
288 288 m 1248 288 l 1248 96 l 288 96 l h
288 288 m f
Q Q
showpage
%%Trailer
%%EOF
