%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
264 288 m 257.637 288 251.531 290.527 247.031 295.031 c 242.527 299.531
 240 305.637 240 312 c 240 504 l 240 512.574 244.574 520.496 252 524.785
 c 259.426 529.07 268.574 529.07 276 524.785 c 283.426 520.496 288 512.574
 288 504 c 288 432 l 302.062 432 l 398.062 528 l 343.008 583.008 l 336.938
 589.078 334.566 597.926 336.789 606.219 c 339.012 614.512 345.488 620.988
 353.781 623.211 c 362.074 625.434 370.922 623.062 376.992 616.992 c 432
 561.938 l 487.008 616.992 l 493.078 623.062 501.926 625.434 510.219 623.211
 c 518.512 620.988 524.988 614.512 527.211 606.219 c 529.434 597.926 527.062
 589.078 520.992 583.008 c 465.938 528 l 520.992 472.992 l 527.062 466.922
 529.434 458.074 527.211 449.781 c 524.988 441.488 518.512 435.012 510.219
 432.789 c 501.926 430.566 493.078 432.938 487.008 439.008 c 432 494.062
 l 369.359 431.375 l 393.73 428.145 414.773 412.703 425.16 390.422 c 435.547
 368.137 433.848 342.094 420.648 321.352 c 407.453 300.609 384.586 288.035
 360 288 c h
288 336 m 360 336 l 368.574 336 376.496 340.574 380.785 348 c 385.07 355.426
 385.07 364.574 380.785 372 c 376.496 379.426 368.574 384 360 384 c 288 
384 l h
288 336 m f
96 48 m 96 35.27 101.059 23.062 110.059 14.059 c 119.062 5.059 131.27 0
 144 0 c 624 0 l 636.73 0 648.938 5.059 657.941 14.059 c 666.941 23.062 
672 35.27 672 48 c 672 144 l 672 156.73 666.941 168.938 657.941 177.941 
c 648.938 186.941 636.73 192 624 192 c 624 696 l 624 715.094 616.414 733.41
 602.91 746.91 c 589.41 760.414 571.094 768 552 768 c 216 768 l 196.906 
768 178.59 760.414 165.09 746.91 c 151.586 733.41 144 715.094 144 696 c 
144 192 l 131.27 192 119.062 186.941 110.059 177.941 c 101.059 168.938 96
 156.73 96 144 c h
192 192 m 192 696 l 192 702.363 194.527 708.469 199.031 712.969 c 203.531
 717.473 209.637 720 216 720 c 552 720 l 558.363 720 564.469 717.473 568.969
 712.969 c 573.473 708.469 576 702.363 576 696 c 576 192 l h
144 144 m 624 144 l 624 48 l 144 48 l h
144 144 m f
Q Q
showpage
%%Trailer
%%EOF
