%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
66 72 m 62.688 72 60 74.688 60 78 c 60 126 l 60 129.312 62.688 132 66 132
 c 69.312 132 72 129.312 72 126 c 72 108 l 75.516 108 l 99.516 132 l 85.75
 145.754 l 85.754 145.754 l 83.406 148.098 83.406 151.902 85.754 154.246
 c 88.098 156.594 91.902 156.594 94.246 154.246 c 108 140.484 l 121.754 
154.25 l 121.754 154.246 l 124.098 156.594 127.902 156.594 130.246 154.246
 c 132.594 151.902 132.594 148.098 130.246 145.754 c 116.484 132 l 130.25
 118.246 l 130.246 118.246 l 132.594 115.902 132.594 112.098 130.246 109.754
 c 127.902 107.406 124.098 107.406 121.754 109.754 c 108 123.516 l 92.34
 107.844 l 98.434 107.035 103.691 103.176 106.289 97.605 c 108.887 92.035
 108.461 85.523 105.164 80.34 c 101.863 75.152 96.145 72.008 90 72 c h
72 84 m 90 84 l 93.312 84 96 86.688 96 90 c 96 93.312 93.312 96 90 96 c
 72 96 l h
72 84 m f
24 12 m 24 5.371 29.371 0 36 0 c 156 0 l 159.184 0 162.234 1.266 164.484
 3.516 c 166.734 5.766 168 8.816 168 12 c 168 36 l 168 39.184 166.734 42.234
 164.484 44.484 c 162.234 46.734 159.184 48 156 48 c 156 174 l 156 178.773
 154.105 183.352 150.727 186.727 c 147.352 190.105 142.773 192 138 192 c
 54 192 l 49.227 192 44.648 190.105 41.273 186.727 c 37.895 183.352 36 178.773
 36 174 c 36 48 l 29.371 48 24 42.629 24 36 c h
48 48 m 48 174 l 48 175.59 48.633 177.117 49.758 178.242 c 50.883 179.367
 52.41 180 54 180 c 138 180 l 139.59 180 141.117 179.367 142.242 178.242
 c 143.367 177.117 144 175.59 144 174 c 144 48 l h
36 36 m 156 36 l 156 12 l 36 12 l h
36 36 m f
Q Q
showpage
%%Trailer
%%EOF
