%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 47 192 1440 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 47 192 1440 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 47 192 1393 1056 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 1296 m 336 1313.148 326.852 1328.996 312 1337.57 c 297.148 1346.145
 278.852 1346.145 264 1337.57 c 249.148 1328.996 240 1313.148 240 1296 c
 240 451.871 l 129.984 561.984 l 117.844 574.125 100.145 578.867 83.562 
574.422 c 66.977 569.98 54.02 557.023 49.578 540.438 c 45.133 523.855 49.875
 506.156 62.016 494.016 c 254.016 302.113 l 254.688 301.441 l 263.734 292.723
 275.84 287.898 288.406 288.008 c 300.969 288.113 312.992 293.145 321.887
 302.016 c 513.887 494.016 l 526.031 506.141 530.781 523.82 526.352 540.398
 c 521.922 556.973 508.984 569.93 492.414 574.383 c 475.844 578.836 458.156
 574.109 446.016 561.984 c 336 451.871 l h
720 384 m 702.852 384 687.004 374.852 678.43 360 c 669.855 345.148 669.855
 326.852 678.43 312 c 687.004 297.148 702.852 288 720 288 c 816 288 l 833.148
 288 848.996 297.148 857.57 312 c 866.145 326.852 866.145 345.148 857.57
 360 c 848.996 374.852 833.148 384 816 384 c h
720 672 m 702.852 672 687.004 662.852 678.43 648 c 669.855 633.148 669.855
 614.852 678.43 600 c 687.004 585.148 702.852 576 720 576 c 1008 576 l 1025.148
 576 1040.996 585.148 1049.57 600 c 1058.145 614.852 1058.145 633.148 1049.57
 648 c 1040.996 662.852 1025.148 672 1008 672 c h
720 960 m 702.852 960 687.004 950.852 678.43 936 c 669.855 921.148 669.855
 902.852 678.43 888 c 687.004 873.148 702.852 864 720 864 c 1200 864 l 1217.148
 864 1232.996 873.148 1241.57 888 c 1250.145 902.852 1250.145 921.148 1241.57
 936 c 1232.996 950.852 1217.148 960 1200 960 c h
672 1200 m 672 1212.73 677.059 1224.938 686.059 1233.941 c 695.062 1242.941
 707.27 1248 720 1248 c 1392 1248 l 1409.148 1248 1424.996 1238.852 1433.57
 1224 c 1442.145 1209.148 1442.145 1190.852 1433.57 1176 c 1424.996 1161.148
 1409.148 1152 1392 1152 c 720 1152 l 707.27 1152 695.062 1157.059 686.059
 1166.059 c 677.059 1175.062 672 1187.27 672 1200 c f
Q Q
showpage
%%Trailer
%%EOF
