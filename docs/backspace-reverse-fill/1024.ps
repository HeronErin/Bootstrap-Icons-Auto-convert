%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 753 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 753 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 753 672 rectclip
1 0 0 -1 0 768 cm q
0 g
0 144 m 0 118.539 10.113 94.121 28.117 76.117 c 46.121 58.113 70.539 48
 96 48 c 435.84 48 l 463.871 47.988 490.504 60.227 508.754 81.504 c 741.219
 352.75 l 741.215 352.754 l 748.68 361.453 752.781 372.539 752.781 384 c
 752.781 395.461 748.68 406.547 741.215 415.246 c 508.801 686.398 l 490.559
 707.727 463.902 720 435.84 720 c 96 720 l 70.539 720 46.121 709.887 28.117
 691.883 c 10.113 673.879 0 649.461 0 624 c h
472.992 280.992 m 479.062 274.922 481.434 266.074 479.211 257.781 c 476.988
 249.488 470.512 243.012 462.219 240.789 c 453.926 238.566 445.078 240.938
 439.008 247.008 c 336 350.062 l 232.992 247.008 l 226.922 240.938 218.074
 238.566 209.781 240.789 c 201.488 243.012 195.012 249.488 192.789 257.781
 c 190.566 266.074 192.938 274.922 199.008 280.992 c 302.062 384 l 199.008
 487.008 l 192.938 493.078 190.566 501.926 192.789 510.219 c 195.012 518.512
 201.488 524.988 209.781 527.211 c 218.074 529.434 226.922 527.062 232.992
 520.992 c 336 417.938 l 439.008 520.992 l 445.078 527.062 453.926 529.434
 462.219 527.211 c 470.512 524.988 476.988 518.512 479.211 510.219 c 481.434
 501.926 479.062 493.078 472.992 487.008 c 369.938 384 l h
472.992 280.992 m f
Q Q
showpage
%%Trailer
%%EOF
