%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1506 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1506 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1506 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 288 m 0 237.078 20.227 188.242 56.234 152.234 c 92.242 116.227 141.078
 96 192 96 c 871.68 96 l 899.383 95.988 926.758 101.973 951.93 113.539 c
 977.102 125.105 999.469 141.98 1017.504 163.008 c 1482.434 705.504 l 1497.355
 722.906 1505.559 745.074 1505.559 768 c 1505.559 790.926 1497.355 813.094
 1482.434 830.496 c 1017.602 1372.801 l 999.574 1393.875 977.195 1410.793
 952.008 1422.395 c 926.816 1433.996 899.414 1440 871.68 1440 c 192 1440
 l 141.078 1440 92.242 1419.773 56.234 1383.766 c 20.227 1347.758 0 1298.922
 0 1248 c h
945.984 561.984 m 958.125 549.844 962.867 532.145 958.422 515.562 c 953.98
 498.977 941.023 486.02 924.438 481.578 c 907.855 477.133 890.156 481.875
 878.016 494.016 c 672 700.129 l 465.984 494.016 l 453.844 481.875 436.145
 477.133 419.562 481.578 c 402.977 486.02 390.02 498.977 385.578 515.562
 c 381.133 532.145 385.875 549.844 398.016 561.984 c 604.129 768 l 398.016
 974.016 l 385.875 986.156 381.133 1003.855 385.578 1020.438 c 390.02 1037.023
 402.977 1049.98 419.562 1054.422 c 436.145 1058.867 453.844 1054.125 465.984
 1041.984 c 672 835.871 l 878.016 1041.984 l 890.156 1054.125 907.855 1058.867
 924.438 1054.422 c 941.023 1049.98 953.98 1037.023 958.422 1020.438 c 962.867
 1003.855 958.125 986.156 945.984 974.016 c 739.871 768 l h
945.984 561.984 m f
Q Q
showpage
%%Trailer
%%EOF
