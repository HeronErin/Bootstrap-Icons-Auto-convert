%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 624 m 528 624 l 528 480 l 480 480 l 480 504 l 480 512.574 475.426 520.496
 468 524.785 c 460.574 529.07 451.426 529.07 444 524.785 c 436.574 520.496
 432 512.574 432 504 c 432 480 l 240 480 l h
240 624 m f
288 96 m 288 112.367 l 176.16 151.922 96 258.625 96 384 c 96 441.168 l 
39.84 469.246 l 27.871 475.223 17.801 484.418 10.766 495.793 c 3.727 507.172
 0 520.285 0 533.664 c 0 648 l 0 667.094 7.586 685.41 21.09 698.91 c 34.59
 712.414 52.906 720 72 720 c 120 720 l 141.887 749.137 176.734 768 216 768
 c 552 768 l 591.266 768 626.113 749.137 648 720 c 696 720 l 715.094 720
 733.41 712.414 746.91 698.91 c 760.414 685.41 768 667.094 768 648 c 768
 533.664 l 768 520.285 764.273 507.172 757.234 495.793 c 750.199 484.418
 740.129 475.223 728.16 469.246 c 672 441.168 l 672 384 l 672.02 324.426
 653.566 266.312 619.18 217.664 c 584.793 169.016 536.168 132.227 480 112.367
 c 480 96 l 480 61.703 461.703 30.012 432 12.863 c 402.297 -4.289 365.703
 -4.289 336 12.863 c 306.297 30.012 288 61.703 288 96 c 384 48 m 396.73 
48 408.938 53.059 417.941 62.059 c 426.941 71.062 432 83.27 432 96 c 432
 99.984 l 400.227 94.613 367.773 94.613 336 99.984 c 336 96 l 336 83.27 
341.059 71.062 350.059 62.059 c 359.062 53.059 371.27 48 384 48 c 384 192
 m 430.188 191.992 474.832 208.633 509.746 238.871 c 544.656 269.113 567.5
 310.922 574.078 356.641 c 575.09 362.996 573.508 369.496 569.684 374.672
 c 565.855 379.852 560.113 383.273 553.738 384.176 c 547.363 385.078 540.895
 383.379 535.785 379.465 c 530.676 375.551 527.352 369.75 526.559 363.359
 c 519.984 317.203 491.469 277.09 450.039 255.711 c 408.609 234.328 359.391
 234.328 317.961 255.711 c 276.531 277.09 248.016 317.203 241.441 363.359
 c 240.648 369.75 237.324 375.551 232.215 379.465 c 227.105 383.379 220.637
 385.078 214.262 384.176 c 207.887 383.273 202.145 379.852 198.316 374.672
 c 194.492 369.496 192.91 362.996 193.922 356.641 c 200.5 310.922 223.344
 269.113 258.254 238.871 c 293.168 208.633 337.812 191.992 384 192 c 216
 432 m 552 432 l 558.363 432 564.469 434.527 568.969 439.031 c 573.473 443.531
 576 449.637 576 456 c 576 648 l 576 654.363 573.473 660.469 568.969 664.969
 c 564.469 669.473 558.363 672 552 672 c 216 672 l 209.637 672 203.531 669.473
 199.031 664.969 c 194.527 660.469 192 654.363 192 648 c 192 456 l 192 449.637
 194.527 443.531 199.031 439.031 c 203.531 434.527 209.637 432 216 432 c
 f
Q Q
showpage
%%Trailer
%%EOF
