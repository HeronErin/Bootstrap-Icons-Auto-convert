%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 1248 m 1056 1248 l 1056 960 l 960 960 l 960 1008 l 960 1025.148 950.852
 1040.996 936 1049.57 c 921.148 1058.145 902.852 1058.145 888 1049.57 c 
873.148 1040.996 864 1025.148 864 1008 c 864 960 l 480 960 l h
480 1248 m f
576 192 m 576 224.734 l 352.32 303.84 192 517.246 192 768 c 192 882.336
 l 79.68 938.496 l 55.742 950.449 35.605 968.832 21.531 991.59 c 7.457 1014.344
 0 1040.57 0 1067.328 c 0 1296 l 0 1334.191 15.172 1370.816 42.176 1397.824
 c 69.184 1424.828 105.809 1440 144 1440 c 240 1440 l 283.777 1498.273 353.473
 1536 432 1536 c 1104 1536 l 1182.527 1536 1252.223 1498.273 1296 1440 c
 1392 1440 l 1430.191 1440 1466.816 1424.828 1493.824 1397.824 c 1520.828
 1370.816 1536 1334.191 1536 1296 c 1536 1067.328 l 1536 1040.57 1528.543
 1014.344 1514.469 991.59 c 1500.395 968.832 1480.258 950.449 1456.32 938.496
 c 1344 882.336 l 1344 768 l 1344.043 648.852 1307.133 532.621 1238.363 
435.324 c 1169.59 338.027 1072.336 264.453 960 224.734 c 960 192 l 960 141.078
 939.773 92.242 903.766 56.234 c 867.758 20.227 818.922 0 768 0 c 717.078
 0 668.242 20.227 632.234 56.234 c 596.227 92.242 576 141.078 576 192 c 
768 96 m 793.461 96 817.879 106.113 835.883 124.117 c 853.887 142.121 864
 166.539 864 192 c 864 199.969 l 800.449 189.227 735.551 189.227 672 199.969
 c 672 192 l 672 166.539 682.113 142.121 700.117 124.117 c 718.121 106.113
 742.539 96 768 96 c 768 384 m 860.375 383.98 949.664 417.262 1019.488 477.742
 c 1089.312 538.223 1134.996 621.848 1148.16 713.281 c 1150.184 725.996 
1147.016 738.988 1139.363 749.344 c 1131.715 759.699 1120.227 766.547 1107.477
 768.352 c 1094.73 770.152 1081.793 766.758 1071.57 758.93 c 1061.352 751.102
 1054.703 739.496 1053.121 726.719 c 1043.336 658.07 1009.113 595.254 956.738
 549.809 c 904.359 504.367 837.344 479.348 768 479.348 c 698.656 479.348
 631.641 504.367 579.262 549.809 c 526.887 595.254 492.664 658.07 482.879
 726.719 c 481.297 739.496 474.648 751.102 464.43 758.93 c 454.207 766.758
 441.27 770.152 428.523 768.352 c 415.773 766.547 404.285 759.699 396.637
 749.344 c 388.984 738.988 385.816 725.996 387.84 713.281 c 401.004 621.848
 446.688 538.223 516.512 477.742 c 586.336 417.262 675.625 383.98 768 384
 c 432 864 m 1104 864 l 1116.73 864 1128.938 869.059 1137.941 878.059 c 
1146.941 887.062 1152 899.27 1152 912 c 1152 1296 l 1152 1308.73 1146.941
 1320.938 1137.941 1329.941 c 1128.938 1338.941 1116.73 1344 1104 1344 c
 432 1344 l 419.27 1344 407.062 1338.941 398.059 1329.941 c 389.059 1320.938
 384 1308.73 384 1296 c 384 912 l 384 899.27 389.059 887.062 398.059 878.059
 c 407.062 869.059 419.27 864 432 864 c f
Q Q
showpage
%%Trailer
%%EOF
