%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 24 90 673 745
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 24 90 673 745
768 768 cairo_set_page_size
%%EndPageSetup
q 24 90 649 655 rectclip
1 0 0 -1 0 768 cm q
0 g
297.215 133.441 m 275.23 100.945 252.719 73.539 232.414 54.578 c 232.414
 54.574 l 222.328 44.711 210.848 36.383 198.336 29.855 c 187.922 24.863 
171.457 20.016 156 28.895 c 138.383 39.117 135.504 59.133 135.359 71.902
 c 135.215 86.496 138.43 103.773 143.664 122.016 c 153.07 154.992 170.352
 195.359 193.344 237.312 c 36.098 394.559 l 22.801 407.855 23.188 426.047
 25.633 438.621 c 28.273 452.207 34.609 467.086 42.914 481.965 c 59.617 
512.062 87.074 547.293 120.961 581.23 c 154.898 615.168 190.129 642.574 
220.227 659.277 c 235.105 667.582 249.988 673.918 263.57 676.559 c 276.145
 678.957 294.289 679.391 307.633 666.094 c 577.152 396.574 l 582.816 408.91
 581.566 421.148 579.551 441.645 c 578.109 455.66 576.285 473.566 576.047
 498.094 c 576.047 503.996 l 576.191 503.996 l 576.191 504 l 577.547 520.141
 586.945 534.508 601.191 542.211 c 615.438 549.914 632.609 549.914 646.855
 542.211 c 661.102 534.508 670.504 520.141 671.855 504 c 672 504 l 672 501.266
 l 672.047 499.391 671.98 497.516 671.809 495.648 c 669.168 435.648 638.207
 364.223 582.527 327.938 c 579.574 320.793 576.191 313.836 572.398 307.105
 c 555.645 277.059 528.238 241.824 494.301 207.891 c 460.367 173.953 425.137
 146.496 395.039 129.793 c 380.16 121.535 365.277 115.199 351.695 112.512
 c 339.121 110.113 320.977 109.727 307.633 123.023 c h
199.68 89.617 m 217.969 106.707 240.191 133.875 262.609 167.953 c 228.816
 201.793 l 210.48 166.898 197.137 134.496 189.793 108.77 c 186.578 98.246
 184.473 87.422 183.504 76.465 c 187.887 79.344 193.281 83.73 199.68 89.617
 c 218.59 279.938 m 244.512 320.832 271.727 355.152 295.727 377.523 c 295.727
 377.52 l 302.004 383.367 310.926 385.422 319.125 382.91 c 327.328 380.398
 333.566 373.703 335.496 365.344 c 337.422 356.984 334.742 348.23 328.465
 342.383 c 306.723 322.125 279.648 287.855 253.395 245.086 c 305.617 192.863
 l 308.211 198.656 311.137 204.496 314.402 210.383 c 331.156 240.48 358.562
 275.711 392.5 309.648 c 426.387 343.586 461.621 370.992 491.766 387.695
 c 497.621 390.992 503.461 393.918 509.285 396.48 c 275.957 629.855 l 272.691
 629.375 l 266.117 628.078 256.277 624.383 243.508 617.277 c 218.355 603.262
 186.578 578.879 154.898 547.199 c 123.219 515.52 98.836 483.84 84.82 458.59
 c 77.766 445.871 74.02 436.031 72.773 429.453 c 72.293 426.188 l h
356.352 187.059 m 356.352 187.055 l 351.367 178.609 347.477 169.559 344.785
 160.129 c 351.266 161.715 360.336 165.41 371.762 171.695 c 396.914 185.711
 428.691 210.094 460.371 241.773 c 481.973 263.375 500.211 285.02 514.035
 304.652 c 514.031 304.656 l 496.852 303.48 479.594 304.953 462.863 309.023
 c 450.191 298.496 438.02 287.379 426.383 275.711 c 394.703 244.031 370.367
 212.254 356.398 187.055 c h
356.352 187.059 m f
Q Q
showpage
%%Trailer
%%EOF
