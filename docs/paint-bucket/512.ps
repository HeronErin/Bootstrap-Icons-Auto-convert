%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 12 45 337 373
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 12 45 337 373
384 384 cairo_set_page_size
%%EndPageSetup
q 12 45 325 328 rectclip
1 0 0 -1 0 384 cm q
0 g
148.609 66.719 m 137.617 50.473 126.363 36.766 116.211 27.285 c 116.207
 27.289 l 111.164 22.355 105.422 18.191 99.168 14.93 c 93.961 12.434 85.727
 10.008 78 14.449 c 69.191 19.562 67.754 29.57 67.68 35.953 c 67.609 43.25
 69.215 51.891 71.832 61.008 c 76.535 77.496 85.176 97.68 96.672 118.656
 c 18.047 197.281 l 11.398 203.93 11.59 213.023 12.816 219.312 c 14.137 
226.105 17.305 233.543 21.457 240.984 c 29.809 256.031 43.535 273.648 60.48
 290.617 c 77.449 307.586 95.066 321.289 110.113 329.641 c 117.555 333.793
 124.992 336.961 131.785 338.281 c 138.074 339.48 147.145 339.695 153.816
 333.051 c 288.578 198.289 l 291.41 204.457 290.785 210.578 289.777 220.824
 c 289.059 227.832 288.145 236.785 288.023 249.047 c 288.023 252 l 288.098
 252 l 288.773 260.07 293.473 267.254 300.598 271.105 c 307.719 274.957 
316.305 274.957 323.426 271.105 c 330.551 267.254 335.25 260.07 335.93 252
 c 336 252 l 336 250.633 l 336.023 249.695 335.992 248.758 335.902 247.824
 c 334.582 217.824 319.102 182.113 291.262 163.969 c 291.266 163.969 l 289.789
 160.398 288.098 156.918 286.199 153.551 c 277.824 138.527 264.121 120.91
 247.152 103.941 c 230.184 86.977 212.566 73.246 197.52 64.895 c 190.078
 60.766 182.641 57.598 175.848 56.254 c 169.559 55.055 160.488 54.863 153.816
 61.512 c h
99.84 44.809 m 108.984 53.352 120.098 66.938 131.305 83.977 c 114.41 100.898
 l 105.242 83.449 98.57 67.25 94.898 54.387 c 94.895 54.383 l 93.289 49.125
 92.238 43.711 91.754 38.23 c 93.945 39.672 96.641 41.863 99.844 44.805 
c 109.301 139.965 m 122.262 160.414 135.867 177.574 147.867 188.758 c 147.863
 188.762 l 152.715 193.281 160.312 193.012 164.832 188.16 c 169.352 183.309
 169.082 175.711 164.23 171.191 c 153.359 161.062 139.824 143.926 126.695
 122.543 c 152.809 96.43 l 154.105 99.324 155.57 102.246 157.199 105.191
 c 165.574 120.238 179.277 137.855 196.246 154.824 c 213.191 171.793 230.805
 185.496 245.879 193.848 c 248.809 195.496 251.727 196.961 254.641 198.238
 c 137.977 314.926 l 136.344 314.688 l 133.055 314.039 128.137 312.191 121.75
 308.641 c 109.176 301.633 93.285 289.441 77.445 273.602 c 61.605 257.762
 49.414 241.922 42.406 229.297 c 38.879 222.938 37.008 218.016 36.383 214.73
 c 36.145 213.098 l h
178.18 93.523 m 178.176 93.527 l 175.684 89.305 173.738 84.781 172.391 
80.062 c 175.629 80.855 180.168 82.703 185.879 85.848 c 198.453 92.855 214.344
 105.047 230.184 120.887 c 240.984 131.688 250.105 142.512 257.016 152.328
 c 248.426 151.742 239.797 152.477 231.434 154.512 c 225.094 149.246 219.008
 143.691 213.191 137.855 c 197.352 122.016 185.184 106.129 178.199 93.527
 c h
178.18 93.523 m f
Q Q
showpage
%%Trailer
%%EOF
