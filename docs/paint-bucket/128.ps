%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 3 11 84 94
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 3 11 84 94
96 96 cairo_set_page_size
%%EndPageSetup
q 3 11 81 83 rectclip
1 0 0 -1 0 96 cm q
0 g
37.152 16.68 m 34.406 12.617 31.59 9.191 29.051 6.82 c 27.793 5.59 26.355
 4.547 24.793 3.73 c 23.492 3.105 21.434 2.5 19.5 3.609 c 17.297 4.887 16.938
 7.391 16.922 8.984 c 16.902 10.809 17.305 12.969 17.961 15.25 c 19.137 
19.371 21.297 24.418 24.172 29.66 c 4.512 49.32 l 2.852 50.98 2.898 53.258
 3.203 54.828 c 3.531 56.527 4.324 58.387 5.363 60.246 c 7.453 64.008 10.883
 68.41 15.121 72.652 c 19.363 76.895 23.766 80.32 27.527 82.41 c 29.387 
83.449 31.246 84.238 32.945 84.57 c 34.516 84.871 36.785 84.926 38.453 83.262
 c 72.145 49.57 l 72.852 51.113 72.695 52.641 72.445 55.203 c 72.266 56.957
 72.039 59.191 72.008 62.258 c 72.008 62.996 l 72.027 62.996 l 72.023 63
 l 72.285 66.109 74.883 68.5 78.004 68.5 c 81.121 68.5 83.723 66.109 83.98
 63 c 84 63 l 84 62.656 l 84.004 62.422 83.996 62.188 83.977 61.957 c 83.648
 54.457 79.777 45.527 72.816 40.992 c 72.445 40.098 72.023 39.23 71.551 
38.387 c 69.457 34.629 66.031 30.227 61.789 25.984 c 57.547 21.742 53.141
 18.312 49.379 16.223 c 47.52 15.191 45.66 14.398 43.961 14.062 c 42.391
 13.762 40.121 13.715 38.453 15.375 c h
24.961 11.203 m 27.246 13.34 30.023 16.734 32.828 20.996 c 28.605 25.227
 l 26.312 20.863 24.645 16.816 23.727 13.598 c 23.723 13.598 l 23.324 12.281
 23.059 10.926 22.938 9.559 c 23.484 9.918 24.16 10.465 24.961 11.203 c 
27.324 34.992 m 30.562 40.105 33.965 44.395 36.965 47.191 c 38.18 48.32 
40.078 48.254 41.207 47.039 c 42.34 45.828 42.27 43.93 41.059 42.797 c 38.34
 40.266 34.957 35.98 31.676 30.637 c 38.203 24.109 l 38.527 24.832 38.895
 25.562 39.301 26.301 c 41.395 30.062 44.82 34.465 49.062 38.707 c 53.297
 42.949 57.703 46.375 61.469 48.465 c 62.199 48.875 62.93 49.242 63.66 49.562
 c 34.496 78.734 l 34.09 78.676 l 33.27 78.516 32.039 78.051 30.441 77.164
 c 27.297 75.41 23.324 72.363 19.367 68.402 c 15.406 64.441 12.359 60.48
 10.605 57.328 c 9.723 55.738 9.254 54.508 9.098 53.688 c 9.039 53.281 l
 h
44.543 23.383 m 43.922 22.324 43.434 21.195 43.098 20.016 c 43.906 20.215
 45.043 20.676 46.469 21.461 c 49.613 23.215 53.586 26.262 57.543 30.223
 c 60.242 32.922 62.523 35.629 64.25 38.082 c 64.254 38.082 l 62.105 37.934
 59.949 38.121 57.859 38.629 c 56.273 37.312 54.754 35.922 53.297 34.465
 c 49.336 30.504 46.293 26.531 44.551 23.383 c h
44.543 23.383 m f
Q Q
showpage
%%Trailer
%%EOF
