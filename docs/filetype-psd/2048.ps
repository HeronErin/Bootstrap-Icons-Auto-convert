%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1104 1536 l 1104 1440 l 1152 1440 l 1177.461 1440 1201.879
 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248 1369.461 1248 1344 
c 1248 432 l 1056 432 l 1017.809 432 981.184 416.828 954.176 389.824 c 927.172
 362.816 912 326.191 912 288 c 912 96 l 384 96 l 358.539 96 334.121 106.113
 316.117 124.117 c 298.113 142.121 288 166.539 288 192 c 288 1056 l 192 
1056 l 192 192 l 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227
 333.078 0 384 0 c 912 0 l h
299.137 1424.734 m 300.246 1455.324 314.23 1484.02 337.633 1503.742 c 350.047
 1514.109 365.344 1522.176 383.52 1527.934 c 401.695 1533.758 422.977 1536.668
 447.359 1536.668 c 479.809 1536.668 507.262 1531.613 529.727 1521.5 c 552.445
 1511.387 569.727 1497.309 581.566 1479.262 c 581.566 1479.266 l 593.676
 1460.52 599.926 1438.598 599.52 1416.289 c 599.52 1394.785 595.199 1376.863
 586.559 1362.527 c 577.777 1348.141 565.359 1336.32 550.559 1328.258 c 
533.602 1318.836 515.316 1312.039 496.32 1308.098 c 436.703 1294.273 l 422.648
 1291.609 409.363 1285.836 397.824 1277.375 c 388.98 1270.508 383.891 1259.867
 384.098 1248.672 c 384.098 1233.695 389.984 1221.406 401.762 1211.809 c
 413.793 1202.082 430.211 1197.215 451.008 1197.215 c 464.703 1197.215 476.543
 1199.391 486.527 1203.742 c 495.73 1207.418 503.832 1213.402 510.047 1221.121
 c 515.957 1228.246 519.926 1236.777 521.566 1245.887 c 593.566 1245.887
 l 592.359 1226.355 585.742 1207.543 574.465 1191.551 c 562.367 1174.289
 545.766 1160.672 526.465 1152.191 c 502.902 1141.809 477.32 1136.824 451.586
 1137.602 c 423.426 1137.602 398.594 1142.402 377.09 1152 c 355.523 1161.535
 338.625 1175.008 326.402 1192.414 c 314.242 1209.887 308.164 1230.336 308.164
 1253.758 c 308.164 1273.086 312.102 1289.855 319.973 1304.062 c 327.844
 1318.27 339.078 1330.016 353.668 1339.293 c 368.324 1348.445 385.605 1355.262
 405.508 1359.742 c 464.836 1373.566 l 484.676 1378.238 499.461 1384.414
 509.188 1392.094 c 509.184 1392.098 l 518.891 1399.508 524.375 1411.188
 523.871 1423.391 c 524.09 1433.293 521.238 1443.016 515.711 1451.23 c 509.527
 1459.656 501.02 1466.094 491.23 1469.762 c 480.543 1474.242 467.328 1476.48
 451.582 1476.48 c 440.316 1476.48 430.078 1475.199 420.863 1472.641 c 412.352
 1470.352 404.301 1466.617 397.055 1461.602 c 384.152 1453.223 375.293 1439.879
 372.574 1424.734 c h
153.602 1145.473 m 0 1145.473 l 0 1529.473 l 75.938 1529.473 l 75.938 1400.543
 l 153.027 1400.543 l 180.547 1400.543 203.973 1395.008 223.301 1383.934
 c 242.82 1372.734 257.637 1357.566 267.75 1338.43 c 267.742 1338.434 l 
278.285 1318.414 283.602 1296.059 283.199 1273.441 c 283.199 1249.441 278.145
 1227.777 268.031 1208.449 c 257.902 1189.34 242.598 1173.473 223.871 1162.656
 c 204.672 1151.137 181.246 1145.41 153.598 1145.473 c 205.918 1273.441 
m 205.922 1273.441 l 206.246 1286.086 203.441 1298.617 197.762 1309.922 
c 192.664 1319.77 184.695 1327.836 174.91 1333.055 c 163.73 1338.562 151.371
 1341.266 138.91 1340.93 c 75.648 1340.93 l 75.648 1205.953 l 139.008 1205.953
 l 159.938 1205.953 176.32 1211.777 188.16 1223.426 c 200 1235.012 205.922
 1251.684 205.922 1273.441 c 648.387 1529.379 m 648.387 1145.477 l 788.449
 1145.477 l 827.426 1145.477 859.555 1152.965 884.832 1167.941 c 910.176
 1182.98 929.055 1204.742 941.473 1233.223 c 953.953 1261.703 960.191 1296.102
 960.191 1336.422 c 960.191 1376.996 953.918 1411.688 941.375 1440.484 c
 928.832 1469.285 909.824 1491.332 884.352 1506.629 c 859.008 1521.797 827.008
 1529.383 788.352 1529.383 c 648.48 1529.375 l h
778.273 1207.395 m 724.32 1207.395 l 724.32 1467.266 l 778.273 1467.266
 l 796.129 1467.266 811.586 1464.641 824.641 1459.395 c 824.641 1459.391
 l 837.285 1454.316 848.352 1445.965 856.703 1435.199 c 865.828 1423.199
 872.277 1409.387 875.617 1394.688 c 879.906 1378.559 882.051 1359.617 882.051
 1337.855 c 882.047 1337.855 l 882.742 1313.277 878.938 1288.777 870.816
 1265.566 c 864.539 1247.695 852.566 1232.383 836.734 1221.984 c 821.629
 1212.258 802.141 1207.391 778.27 1207.391 c f*
Q Q
showpage
%%Trailer
%%EOF
