%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 276 384 l 276 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
74.785 356.184 m 75.062 363.832 78.559 371.004 84.406 375.938 c 87.512 
378.531 91.336 380.547 95.879 381.984 c 100.422 383.441 105.742 384.168 
111.84 384.168 c 119.953 384.168 126.816 382.902 132.434 380.375 c 138.113
 377.848 142.434 374.328 145.395 369.816 c 145.391 369.816 l 148.418 365.129
 149.98 359.648 149.879 354.07 c 149.879 348.695 148.801 344.215 146.641
 340.629 c 146.641 340.633 l 144.445 337.035 141.34 334.082 137.641 332.062
 c 133.402 329.707 128.828 328.008 124.078 327.023 c 109.176 323.566 l 105.66
 322.902 102.34 321.457 99.457 319.344 c 97.246 317.625 95.973 314.969 96.023
 312.168 c 96.023 308.426 97.496 305.352 100.438 302.953 c 103.445 300.52
 107.551 299.305 112.75 299.305 c 116.176 299.305 119.133 299.848 121.629
 300.938 c 121.633 300.938 l 123.934 301.855 125.957 303.352 127.512 305.281
 c 128.988 307.062 129.98 309.195 130.391 311.473 c 148.391 311.473 l 148.09
 306.59 146.438 301.887 143.617 297.887 c 140.59 293.57 136.441 290.168 
131.617 288.047 c 125.727 285.453 119.328 284.207 112.895 284.398 c 105.855
 284.398 99.648 285.598 94.27 288 c 88.879 290.383 84.652 293.754 81.598
 298.105 c 78.559 302.473 77.039 307.586 77.039 313.441 c 77.039 318.273
 78.023 322.465 79.992 326.016 c 81.961 329.566 84.77 332.504 88.418 334.824
 c 92.082 337.113 96.402 338.816 101.379 339.938 c 116.211 343.395 l 121.172
 344.562 124.867 346.105 127.301 348.027 c 127.297 348.023 l 129.723 349.875
 131.094 352.797 130.969 355.848 c 131.023 358.324 130.309 360.754 128.93
 362.809 c 127.383 364.914 125.254 366.523 122.809 367.441 c 120.137 368.562
 116.832 369.121 112.898 369.121 c 110.082 369.121 107.523 368.801 105.219
 368.16 c 105.215 368.16 l 103.09 367.59 101.074 366.656 99.266 365.398 
c 96.039 363.305 93.824 359.969 93.145 356.184 c h
38.398 286.367 m 0 286.367 l 0 382.367 l 18.984 382.367 l 18.984 350.137
 l 38.258 350.137 l 45.137 350.137 50.992 348.754 55.824 345.984 c 60.703
 343.184 64.41 339.391 66.938 334.609 c 69.57 329.605 70.898 324.016 70.801
 318.359 c 70.801 312.359 69.535 306.945 67.008 302.113 c 64.477 297.336
 60.648 293.367 55.969 290.664 c 51.168 287.785 45.312 286.352 38.402 286.367
 c 51.48 318.359 m 51.562 321.523 50.859 324.656 49.441 327.48 c 48.168 
329.941 46.176 331.961 43.727 333.266 c 40.934 334.641 37.844 335.316 34.727
 335.23 c 18.91 335.23 l 18.91 301.488 l 34.75 301.488 l 39.98 301.488 44.078
 302.945 47.039 305.855 c 50 308.75 51.48 312.918 51.48 318.359 c 162.098
 382.344 m 162.098 286.367 l 197.113 286.367 l 206.855 286.367 214.891 288.238
 221.211 291.984 c 227.547 295.746 232.266 301.184 235.371 308.305 c 238.492
 315.426 240.051 324.023 240.051 334.105 c 240.051 344.25 238.484 352.922
 235.348 360.121 c 232.211 367.32 227.461 372.832 221.09 376.656 c 214.754
 380.449 206.754 382.344 197.09 382.344 c h
194.57 301.848 m 181.082 301.848 l 181.082 366.816 l 194.57 366.816 l 199.035
 366.816 202.898 366.16 206.164 364.848 c 206.16 364.848 l 209.32 363.578
 212.086 361.492 214.176 358.801 c 216.457 355.801 218.07 352.348 218.902
 348.672 c 219.973 344.641 220.512 339.902 220.512 334.465 c 220.688 328.32
 219.734 322.195 217.703 316.391 c 216.137 311.926 213.141 308.098 209.184
 305.496 c 205.406 303.062 200.535 301.848 194.566 301.848 c f*
Q Q
showpage
%%Trailer
%%EOF
