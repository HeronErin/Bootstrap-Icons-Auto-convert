%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 552 768 l 552 720 l 576 720 l 588.73 720 
600.938 714.941 609.941 705.941 c 618.941 696.938 624 684.73 624 672 c 624
 216 l 528 216 l 508.906 216 490.59 208.414 477.09 194.91 c 463.586 181.41
 456 163.094 456 144 c 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059
 62.059 c 149.059 71.062 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96
 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c
 456 0 l h
149.566 712.367 m 150.125 727.66 157.113 742.008 168.816 751.871 c 175.023
 757.055 182.672 761.086 191.762 763.969 c 200.852 766.879 211.488 768.336
 223.684 768.336 c 239.906 768.336 253.637 765.809 264.867 760.75 c 276.227
 755.695 284.867 748.652 290.789 739.629 c 290.785 739.633 l 296.836 730.262
 299.961 719.297 299.762 708.145 c 299.762 697.391 297.602 688.434 293.281
 681.266 c 288.887 674.07 282.68 668.16 275.281 664.129 c 266.801 659.418
 257.656 656.02 248.16 654.047 c 218.352 647.137 l 211.324 645.805 204.68
 642.918 198.91 638.688 c 194.488 635.254 191.945 629.934 192.047 624.336
 c 192.047 616.848 194.992 610.703 200.879 605.902 c 206.895 601.039 215.102
 598.605 225.504 598.605 c 232.352 598.605 238.273 599.695 243.266 601.871
 c 247.867 603.707 251.918 606.699 255.023 610.559 c 257.977 614.125 259.961
 618.391 260.785 622.945 c 296.785 622.945 l 296.18 613.18 292.871 603.773
 287.23 595.777 c 281.184 587.145 272.883 580.336 263.23 576.098 c 251.453
 570.906 238.66 568.414 225.793 568.801 c 211.715 568.801 199.297 571.199
 188.547 576 c 177.762 580.77 169.316 587.504 163.203 596.207 c 157.125 
604.941 154.082 615.168 154.082 626.879 c 154.082 636.543 156.051 644.926
 159.984 652.031 c 163.922 659.137 169.535 665.008 176.832 669.648 c 184.16
 674.223 192.801 677.633 202.754 679.871 c 232.418 686.781 l 242.34 689.117
 249.73 692.207 254.594 696.047 c 259.445 699.754 262.188 705.594 261.938
 711.695 c 262.043 716.645 260.621 721.508 257.855 725.617 c 254.762 729.828
 250.508 733.047 245.617 734.879 c 240.273 737.117 233.664 738.238 225.793
 738.238 c 220.16 738.238 215.039 737.598 210.434 736.316 c 210.434 736.32
 l 206.176 735.176 202.148 733.309 198.527 730.801 c 192.078 726.609 187.648
 719.938 186.289 712.367 c h
76.801 572.734 m 0 572.734 l 0 764.734 l 37.969 764.734 l 37.969 700.27
 l 76.512 700.27 l 90.273 700.27 101.984 697.5 111.648 691.965 c 121.41 
686.363 128.816 678.781 133.871 669.211 c 133.871 669.215 l 139.141 659.207
 141.801 648.031 141.602 636.719 c 141.602 624.719 139.074 613.887 134.016
 604.223 c 128.949 594.672 121.301 586.734 111.938 581.328 c 102.336 575.566
 90.625 572.703 76.801 572.734 c 102.961 636.719 m 103.121 643.043 101.723
 649.309 98.879 654.961 c 96.332 659.883 92.348 663.918 87.457 666.527 c
 81.863 669.281 75.688 670.633 69.457 670.465 c 37.824 670.465 l 37.824 
602.977 l 69.504 602.977 l 79.969 602.977 88.16 605.887 94.078 611.711 c
 100 617.504 102.957 625.84 102.957 636.719 c 324.188 764.688 m 324.188 
572.734 l 394.219 572.734 l 413.707 572.734 429.77 576.477 442.41 583.965
 c 455.082 591.484 464.523 602.363 470.73 616.605 c 476.969 630.844 480.09
 648.047 480.09 668.207 c 480.09 688.496 476.953 705.84 470.684 720.238 
c 464.41 734.637 454.906 745.664 442.172 753.309 c 429.5 760.895 413.5 764.684
 394.172 764.684 c 324.238 764.688 l h
389.133 603.695 m 362.156 603.695 l 362.156 733.633 l 389.133 733.633 l
 398.062 733.633 405.789 732.32 412.316 729.695 c 412.32 729.695 l 418.641
 727.156 424.176 722.984 428.352 717.602 c 432.914 711.602 436.137 704.695
 437.809 697.344 c 439.953 689.281 441.023 679.809 441.023 668.93 c 441.371
 656.637 439.469 644.391 435.406 632.785 c 432.27 623.848 426.281 616.191
 418.367 610.992 c 410.816 606.129 401.07 603.695 389.137 603.695 c f*
Q Q
showpage
%%Trailer
%%EOF
