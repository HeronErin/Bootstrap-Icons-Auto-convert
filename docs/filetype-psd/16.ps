%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 8.625 12 l 8.625 11.25 l 9 11.25 l 9.199 11.25 9.391
 11.172 9.531 11.031 c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l
 8.25 3.375 l 7.629 3.375 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l
 2.586 0.75 2.25 1.086 2.25 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672
 2.172 0 3 0 c 7.125 0 l h
2.336 11.129 m 2.344 11.371 2.453 11.594 2.637 11.746 c 2.734 11.828 2.852
 11.891 2.996 11.934 c 3.137 11.98 3.305 12 3.496 12 c 3.75 12 3.965 11.961
 4.141 11.883 c 4.316 11.805 4.453 11.695 4.547 11.555 c 4.543 11.559 l 
4.637 11.41 4.688 11.238 4.684 11.066 c 4.684 10.898 4.648 10.758 4.582 
10.645 c 4.516 10.531 4.418 10.441 4.301 10.379 c 4.168 10.305 4.027 10.25
 3.879 10.219 c 3.414 10.109 l 3.41 10.113 l 3.301 10.09 3.199 10.047 3.109
 9.98 c 3.039 9.926 3 9.844 3 9.754 c 3 9.637 3.047 9.539 3.137 9.465 c 
3.23 9.391 3.359 9.352 3.52 9.352 c 3.625 9.352 3.719 9.367 3.797 9.402 
c 3.801 9.402 l 3.871 9.434 3.938 9.48 3.984 9.539 c 4.031 9.594 4.062 9.664
 4.074 9.734 c 4.637 9.734 l 4.629 9.582 4.574 9.434 4.488 9.309 c 4.395
 9.176 4.266 9.066 4.113 9 c 3.93 8.922 3.73 8.883 3.527 8.887 c 3.309 8.887
 3.113 8.926 2.945 9 c 2.777 9.074 2.645 9.18 2.551 9.316 c 2.457 9.453 
2.41 9.613 2.41 9.797 c 2.41 9.949 2.441 10.078 2.504 10.191 c 2.566 10.301
 2.652 10.395 2.766 10.465 c 2.879 10.535 3.016 10.59 3.172 10.625 c 3.637
 10.734 l 3.793 10.77 3.906 10.82 3.984 10.879 c 3.977 10.875 l 4.055 10.934
 4.098 11.023 4.094 11.121 c 4.094 11.199 4.07 11.273 4.027 11.336 c 3.98
 11.402 3.914 11.453 3.836 11.484 c 3.754 11.52 3.648 11.535 3.527 11.535
 c 3.438 11.535 3.359 11.523 3.289 11.504 c 3.223 11.488 3.16 11.457 3.102
 11.418 c 3 11.352 2.934 11.25 2.91 11.129 c h
1.199 8.949 m 0 8.949 l 0 11.949 l 0.594 11.949 l 0.594 10.941 l 1.195 
10.941 l 1.41 10.941 1.594 10.898 1.746 10.812 c 1.898 10.727 2.016 10.605
 2.094 10.457 c 2.09 10.457 l 2.176 10.301 2.215 10.125 2.211 9.949 c 2.211
 9.762 2.172 9.594 2.094 9.441 c 2.016 9.293 1.895 9.168 1.75 9.082 c 1.602
 8.992 1.418 8.949 1.199 8.949 c 1.609 9.949 m 1.609 10.047 1.59 10.145 
1.547 10.234 c 1.504 10.312 1.441 10.375 1.367 10.414 c 1.277 10.457 1.184
 10.48 1.086 10.477 c 0.59 10.477 l 0.59 9.422 l 1.086 9.422 l 1.25 9.422
 1.379 9.469 1.469 9.559 c 1.562 9.648 1.609 9.781 1.609 9.949 c 5.066 11.949
 m 5.066 8.949 l 6.16 8.949 l 6.465 8.949 6.715 9.008 6.914 9.125 c 7.113
 9.242 7.258 9.414 7.355 9.637 c 7.453 9.859 7.5 10.129 7.5 10.441 c 7.5
 10.758 7.449 11.031 7.352 11.254 c 7.254 11.48 7.105 11.652 6.906 11.77
 c 6.707 11.887 6.457 11.949 6.156 11.949 c h
6.082 9.434 m 5.66 9.434 l 5.66 11.465 l 6.082 11.465 l 6.223 11.465 6.344
 11.445 6.445 11.402 c 6.441 11.402 l 6.543 11.363 6.629 11.297 6.691 11.211
 c 6.766 11.117 6.816 11.012 6.84 10.895 c 6.875 10.77 6.891 10.621 6.891
 10.449 c 6.891 10.453 l 6.895 10.262 6.867 10.07 6.805 9.887 c 6.754 9.746
 6.66 9.629 6.535 9.547 c 6.418 9.473 6.266 9.434 6.078 9.434 c f*
Q Q
showpage
%%Trailer
%%EOF
