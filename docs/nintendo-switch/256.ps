%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
112.078 96.059 m 112.078 43.5 112.199 0.395 112.355 0.273 c 112.477 0.121
 120.434 0 129.973 0 c 143.809 0 148.094 0.121 150.887 0.602 c 171.648 4.176
 187.426 19.801 191.363 40.512 c 191.914 43.414 192 50.219 192 95.832 c 
192 144.551 192.059 150.277 190.523 155.543 c 190.258 156.453 189.949 157.344
 189.562 158.445 c 189.562 158.449 l 186.531 167.289 181.062 175.098 173.789
 180.969 c 166.516 186.844 157.734 190.547 148.453 191.652 c 144.648 192.047
 113.785 192.203 112.719 191.809 c 112.117 191.57 112.082 182.785 112.082
 96.062 c 168.184 99.289 m 168.18 99.289 l 166.062 93.191 161.059 88.543
 154.824 86.879 c 150.035 85.641 144.957 86.289 140.629 88.684 c 136.305
 91.078 133.059 95.043 131.566 99.758 c 130.578 103.422 130.52 107.281 131.398
 110.977 c 132.859 115.77 136.105 119.82 140.461 122.289 c 144.82 124.762
 149.961 125.469 154.824 124.262 c 160.945 122.629 165.719 118.215 168.145
 111.926 c 169.465 108.504 169.5 103.023 168.18 99.289 c 44.52 39.805 m 
42.023 40.285 38.207 42.191 36.18 43.98 c 32.004 47.594 29.941 52.727 30.25
 58.766 c 30.406 61.91 30.609 62.75 31.883 65.293 c 33.742 69.145 36.562
 71.965 40.426 73.871 c 43.09 75.191 43.762 75.348 47.23 75.469 c 50.363
 75.59 51.477 75.469 53.59 74.75 c 62.219 71.848 67.426 63.469 65.949 54.879
 c 64.246 44.656 54.551 37.816 44.516 39.809 c f
41.102 0.637 m 31.773 2.285 23.113 6.57 16.137 12.98 c 9.164 19.391 4.168
 27.66 1.738 36.816 c 0 43.535 -0.121 47.473 0.059 99.602 c 0.18 147.48 
0.227 148.586 1.02 152.281 c 5.434 172.203 19.594 186.41 39.707 191.102 
c 42.348 191.703 45.672 191.82 67.188 191.941 c 89.461 192.086 91.762 192.051
 92.352 191.461 c 92.953 190.859 92.988 183.18 92.988 96.18 c 92.988 31.691
 92.867 1.309 92.594 0.754 c 92.199 0.035 91.516 -0.004 68.234 0.035 c 49.297
 0.082 43.609 0.203 41.113 0.637 c h
77.102 176.617 m 60.902 176.426 l 46 176.27 44.402 176.188 41.426 175.43
 c 35.23 173.898 29.598 170.645 25.18 166.039 c 20.758 161.438 17.738 155.676
 16.465 149.426 c 15.578 145.406 15.578 46.477 16.418 42.543 c 16.414 42.539
 l 18.77 31.43 26.484 22.211 37.008 17.941 c 42.266 15.828 44.688 15.59 
61.703 15.543 c 77.086 15.508 l 77.086 176.621 l h
77.102 176.617 m f
Q Q
showpage
%%Trailer
%%EOF
