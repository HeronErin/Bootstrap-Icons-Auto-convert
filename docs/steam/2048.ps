%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
31.586 991.969 m 79.758 1149.449 177.215 1287.309 309.613 1385.246 c 442.012
 1483.184 602.355 1536.027 767.039 1536 c 1191.742 1536 1536 1192.129 1536
 768 c 1536 343.871 1191.742 0 767.137 0 c 572.188 -0.074 384.492 73.934
 242.059 207.047 c 99.629 340.156 13.102 522.418 0 716.93 c 0.289 717.504
 l 413.473 887.328 l 450.742 862.668 494.875 850.469 539.52 852.48 c 727.68
 579.457 l 727.582 575.617 l 727.586 575.617 l 727.66 498.18 758.449 423.934
 813.195 369.168 c 867.945 314.402 942.18 283.59 1019.617 283.488 c 1097.055
 283.59 1171.289 314.402 1226.035 369.168 c 1280.781 423.934 1311.57 498.18
 1311.648 575.617 c 1311.609 627.633 1297.699 678.695 1271.352 723.547 c
 1245.008 768.398 1207.18 805.41 1161.766 830.773 c 1116.352 856.137 1064.996
 868.934 1012.992 867.84 c 743.809 1059.84 l 745.031 1107.453 730.289 1154.105
 701.934 1192.371 c 673.578 1230.641 633.238 1258.32 587.332 1271.012 c 
541.426 1283.699 492.594 1280.668 448.609 1262.398 c 417.086 1249.238 389.191
 1228.695 367.273 1202.5 c 345.352 1176.301 330.051 1145.219 322.656 1111.871
 c 31.68 991.969 l h
31.586 991.969 m f
467.328 1217.566 m 507.324 1232.836 551.695 1231.922 591.031 1215.023 c
 630.367 1198.125 661.57 1166.566 678.027 1127.047 c 694.488 1087.523 694.902
 1043.145 679.188 1003.32 c 663.477 963.5 632.867 931.363 593.855 913.727
 c 555.188 897.539 511.77 896.852 472.609 911.809 c 570.816 952.512 l 610.773
 969.145 638.82 1005.832 644.391 1048.754 c 649.965 1091.676 632.215 1134.309
 597.832 1160.594 c 563.449 1186.879 517.652 1192.828 477.695 1176.191 c
 382.656 1136.832 l 399.953 1173.246 430.113 1201.973 467.328 1217.473 c
 h
825.023 575.613 m 825.023 575.617 l 825.051 627.234 845.555 676.734 882.035
 713.254 c 918.516 749.77 967.996 770.324 1019.617 770.398 c 1071.234 770.324
 1120.715 749.77 1157.195 713.254 c 1193.68 676.734 1214.184 627.234 1214.207
 575.617 c 1214.133 524.031 1193.605 474.578 1157.129 438.102 c 1120.652
 401.625 1071.203 381.102 1019.617 381.023 c 968.031 381.102 918.578 401.625
 882.102 438.102 c 845.625 474.578 825.102 524.031 825.023 575.617 c 1019.902
 429.023 m 1072.172 429.059 1120.453 456.977 1146.559 502.258 c 1172.664
 547.543 1172.629 603.312 1146.465 648.562 c 1120.297 693.812 1071.98 721.668
 1019.711 721.633 c 967.441 721.598 919.16 693.68 893.059 648.398 c 866.953
 603.113 866.988 547.344 893.152 502.094 c 919.316 456.844 967.633 428.988
 1019.902 429.023 c f
Q Q
showpage
%%Trailer
%%EOF
