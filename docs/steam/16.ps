%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
0.246 7.75 m 1.02 10.277 3.352 12 5.992 12 c 9.309 12 12 9.312 12 6 c 12
 2.688 9.309 0 5.992 0 c 2.832 0 0.211 2.449 0 5.602 c 0.004 5.605 l 3.23
 6.934 l 3.52 6.738 3.867 6.645 4.215 6.66 c 5.684 4.527 l 5.684 4.496 l
 5.684 3.238 6.707 2.215 7.965 2.215 c 9.227 2.215 10.246 3.238 10.246 4.496
 c 10.246 5.109 10 5.699 9.559 6.129 c 9.121 6.559 8.527 6.793 7.914 6.781
 c 5.812 8.281 l 5.824 8.844 5.555 9.379 5.086 9.699 c 4.621 10.016 4.027
 10.078 3.504 9.863 c 3.004 9.652 2.637 9.215 2.52 8.688 c h
0.246 7.75 m f
3.652 9.512 m 4.301 9.762 5.031 9.445 5.297 8.805 c 5.562 8.164 5.273 7.426
 4.641 7.137 c 4.336 7.012 4 7.008 3.691 7.125 c 4.457 7.441 l 4.461 7.441
 l 4.941 7.641 5.172 8.195 4.969 8.68 c 4.77 9.16 4.215 9.391 3.73 9.188
 c 2.988 8.879 l 2.988 8.883 l 3.125 9.164 3.359 9.391 3.652 9.512 c h
6.445 4.496 m 6.445 5.336 7.125 6.016 7.965 6.02 c 8.805 6.016 9.484 5.336
 9.484 4.496 c 9.484 3.656 8.805 2.977 7.965 2.977 c 7.125 2.977 6.445 3.656
 6.445 4.496 c 7.969 3.352 m 8.598 3.352 9.109 3.863 9.109 4.496 c 9.109
 5.125 8.598 5.637 7.965 5.637 c 7.336 5.637 6.824 5.125 6.824 4.492 c 6.824
 3.863 7.336 3.352 7.969 3.352 c f
Q Q
showpage
%%Trailer
%%EOF
