%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
15.793 495.984 m 39.879 574.727 88.605 643.652 154.805 692.621 c 221.004
 741.59 301.176 768.016 383.52 768 c 595.871 768 768 596.062 768 384 c 768
 171.938 595.871 0 383.566 0 c 286.094 -0.039 192.246 36.969 121.031 103.523
 c 49.812 170.078 6.551 261.211 0 358.465 c 0.145 358.754 l 206.738 443.664
 l 206.734 443.664 l 225.371 431.336 247.438 425.234 269.762 426.238 c 363.84
 289.727 l 363.793 287.805 l 363.793 287.809 l 363.832 249.09 379.223 211.969
 406.598 184.586 c 433.973 157.203 471.09 141.793 509.809 141.742 c 548.527
 141.793 585.645 157.203 613.02 184.586 c 640.391 211.969 655.785 249.09
 655.824 287.809 c 655.793 327.109 639.945 364.746 611.855 392.234 c 583.762
 419.723 545.789 434.746 506.496 433.922 c 371.902 529.922 l 372.832 566.051
 355.406 600.191 325.605 620.641 c 295.805 641.09 257.68 645.062 224.305
 631.199 c 192.32 617.848 168.832 589.773 161.328 555.938 c 15.84 495.984
 l h
15.793 495.984 m f
233.664 608.785 m 260.594 619.062 290.938 614.508 313.66 596.777 c 336.387
 579.047 348.18 550.723 344.758 522.102 c 341.336 493.48 323.191 468.738
 296.93 456.863 c 277.594 448.77 255.887 448.426 236.305 455.902 c 285.41
 476.254 l 285.406 476.258 l 305.387 484.574 319.41 502.918 322.195 524.379
 c 324.984 545.836 316.109 567.152 298.918 580.297 c 281.723 593.441 258.828
 596.414 238.848 588.098 c 191.328 568.418 l 191.328 568.414 l 199.977 586.625
 215.055 600.984 233.664 608.734 c h
412.512 287.809 m 412.523 313.617 422.777 338.367 441.016 356.625 c 459.258
 374.887 484 385.16 509.809 385.199 c 535.617 385.16 560.359 374.887 578.598
 356.625 c 596.84 338.367 607.09 313.617 607.105 287.809 c 607.066 262.016
 596.805 237.289 578.566 219.051 c 560.328 200.812 535.602 190.551 509.809
 190.512 c 484.016 190.551 459.289 200.812 441.051 219.051 c 422.812 237.289
 412.551 262.016 412.512 287.809 c 509.953 214.512 m 536.086 214.527 560.227
 228.488 573.281 251.129 c 586.332 273.77 586.312 301.656 573.23 324.281
 c 560.148 346.906 535.992 360.832 509.855 360.816 c 483.723 360.801 459.582
 346.84 446.527 324.199 c 433.477 301.555 433.496 273.672 446.578 251.047
 c 459.66 228.422 483.816 214.496 509.953 214.512 c f
Q Q
showpage
%%Trailer
%%EOF
