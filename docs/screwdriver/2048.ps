%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 95.52 m 95.52 0 l 389.664 210.238 l 414.699 228.203 429.59 257.09 429.695
 287.902 c 429.695 294.621 l 429.695 319.965 439.773 344.254 457.633 362.207
 c 1002.625 907.102 l 1089.891 878.012 l 1089.887 878.016 l 1106.719 872.461
 1124.754 871.676 1142.004 875.742 c 1159.254 879.809 1175.039 888.57 1187.617
 901.055 c 1508.066 1221.598 l 1508.062 1221.602 l 1525.945 1239.508 1535.988
 1263.781 1535.988 1289.09 c 1535.988 1314.395 1525.945 1338.668 1508.062
 1356.574 c 1356.48 1508.16 l 1338.57 1526.039 1314.297 1536.082 1288.992
 1536.082 c 1263.684 1536.082 1239.414 1526.039 1221.504 1508.16 c 901.152
 1187.52 l 888.664 1174.945 879.902 1159.156 875.836 1141.91 c 871.77 1124.66
 872.559 1106.621 878.113 1089.793 c 907.105 1002.527 l 362.211 457.535 
l 362.207 457.535 l 344.246 439.672 319.957 429.629 294.625 429.602 c 288
 429.602 l 257.152 429.523 228.223 414.629 210.238 389.566 c h
1084.129 1016.641 m 1072.074 1004.586 1054.5 999.875 1038.031 1004.289 
c 1021.566 1008.703 1008.703 1021.566 1004.289 1038.031 c 999.875 1054.5
 1004.586 1072.074 1016.641 1084.129 c 1303.105 1370.594 l 1315.16 1382.648
 1332.73 1387.355 1349.199 1382.941 c 1365.668 1378.531 1378.531 1365.668
 1382.941 1349.199 c 1387.355 1332.73 1382.648 1315.16 1370.594 1303.105
 c h
1084.129 1016.641 m f
Q Q
showpage
%%Trailer
%%EOF
