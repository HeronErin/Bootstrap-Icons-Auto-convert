%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 381
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 381
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 381 rectclip
1 0 0 -1 0 384 cm q
0 g
254.902 12.359 m 207.527 0.48 176.473 0.48 129.121 12.359 c 106.945 17.879
 81.555 30.742 62.402 41.641 c 37.586 55.727 24 82.367 24 109.969 c 24 324
 l 24 339.914 30.32 355.176 41.574 366.426 c 52.824 377.68 68.086 384 84
 384 c 300 384 l 315.914 384 331.176 377.68 342.426 366.426 c 353.68 355.176
 360 339.914 360 324 c 360 109.992 l 360 82.391 346.441 55.754 321.602 41.617
 c 302.473 30.746 277.082 17.906 254.906 12.336 c h
156 48 m 228 48 l 234.629 48 240 53.371 240 60 c 240 66.629 234.629 72 
228 72 c 156 72 l 149.371 72 144 66.629 144 60 c 144 53.371 149.371 48 156
 48 c 108 96 m 276 96 l 285.547 96 294.703 99.793 301.457 106.543 c 308.207
 113.297 312 122.453 312 132 c 312 180 l 312 189.547 308.207 198.703 301.457
 205.457 c 294.703 212.207 285.547 216 276 216 c 108 216 l 98.453 216 89.297
 212.207 82.543 205.457 c 75.793 198.703 72 189.547 72 180 c 72 132 l 72
 122.453 75.793 113.297 82.543 106.543 c 89.297 99.793 98.453 96 108 96 
c 120 312 m 120 320.574 115.426 328.496 108 332.785 c 100.574 337.07 91.426
 337.07 84 332.785 c 76.574 328.496 72 320.574 72 312 c 72 303.426 76.574
 295.504 84 291.215 c 91.426 286.93 100.574 286.93 108 291.215 c 115.426
 295.504 120 303.426 120 312 c 120 312 m 120 303.426 124.574 295.504 132
 291.215 c 139.426 286.93 148.574 286.93 156 291.215 c 163.426 295.504 168
 303.426 168 312 c 168 320.574 163.426 328.496 156 332.785 c 148.574 337.07
 139.426 337.07 132 332.785 c 124.574 328.496 120 320.574 120 312 c 312 
312 m 312 320.574 307.426 328.496 300 332.785 c 292.574 337.07 283.426 337.07
 276 332.785 c 268.574 328.496 264 320.574 264 312 c 264 303.426 268.574
 295.504 276 291.215 c 283.426 286.93 292.574 286.93 300 291.215 c 307.426
 295.504 312 303.426 312 312 c 240 288 m 248.574 288 256.496 292.574 260.785
 300 c 265.07 307.426 265.07 316.574 260.785 324 c 256.496 331.426 248.574
 336 240 336 c 231.426 336 223.504 331.426 219.215 324 c 214.93 316.574 
214.93 307.426 219.215 300 c 223.504 292.574 231.426 288 240 288 c 96 132
 m 96 125.371 101.371 120 108 120 c 180 120 l 180 192 l 108 192 l 101.371
 192 96 186.629 96 180 c h
204 192 m 204 120 l 276 120 l 279.184 120 282.234 121.266 284.484 123.516
 c 286.734 125.766 288 128.816 288 132 c 288 180 l 288 183.184 286.734 186.234
 284.484 188.484 c 282.234 190.734 279.184 192 276 192 c h
204 192 m f
Q Q
showpage
%%Trailer
%%EOF
