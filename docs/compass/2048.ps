%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 47 0 1489 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 47 0 1489 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 47 0 1442 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1537.535 m 942.574 1537.637 1111.234 1474.309 1242.602 1359.336 c 1373.969
 1244.367 1459.09 1085.582 1482.125 912.535 c 1505.156 739.488 1464.535 
563.969 1367.816 418.637 c 1271.098 273.305 1124.871 168.062 956.352 122.496
 c 964.676 93.508 958.895 62.293 940.738 38.207 c 922.578 14.125 894.16 
-0.027 864 0 c 672 0 l 641.84 -0.027 613.422 14.125 595.262 38.207 c 577.105
 62.293 571.324 93.508 579.648 122.496 c 411.129 168.062 264.902 273.305
 168.184 418.637 c 71.465 563.969 30.844 739.488 53.875 912.535 c 76.91 
1085.582 162.031 1244.367 293.398 1359.336 c 424.766 1474.309 593.426 1537.637
 768 1537.535 c 1392 817.535 m 1392 983.031 1326.258 1141.746 1209.234 1258.77
 c 1092.211 1375.793 933.496 1441.535 768 1441.535 c 602.504 1441.535 443.789
 1375.793 326.766 1258.77 c 209.742 1141.746 144 983.031 144 817.535 c 144
 652.039 209.742 493.324 326.766 376.301 c 443.789 259.277 602.504 193.535
 768 193.535 c 933.496 193.535 1092.211 259.277 1209.234 376.301 c 1326.258
 493.324 1392 652.039 1392 817.535 c f
666.238 714.238 m 1141.438 442.559 l 869.758 917.758 l 394.652 1189.438
 l 666.141 714.238 l h
666.238 714.238 m f
Q Q
showpage
%%Trailer
%%EOF
