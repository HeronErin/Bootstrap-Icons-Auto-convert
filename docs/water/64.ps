%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 40
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 40
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 34 rectclip
1 0 0 -1 0 48 cm q
0 g
0.109 9.941 m 0.418 9.172 1.289 8.801 2.059 9.109 c 7.328 11.219 l 8.402
 11.645 9.598 11.645 10.672 11.219 c 13.715 10 l 15.5 9.285 17.496 9.285
 19.285 10 c 22.332 11.219 l 22.328 11.219 l 23.402 11.645 24.598 11.645
 25.672 11.219 c 28.715 10 l 30.5 9.285 32.496 9.285 34.285 10 c 37.332 
11.219 l 37.328 11.219 l 38.402 11.645 39.598 11.645 40.672 11.219 c 45.941
 9.109 l 46.312 8.949 46.73 8.949 47.105 9.102 c 47.477 9.258 47.77 9.555
 47.922 9.93 c 48.07 10.305 48.062 10.723 47.902 11.094 c 47.738 11.461 
47.434 11.75 47.059 11.891 c 41.785 14 l 39.996 14.715 38 14.715 36.215 
14 c 33.172 12.781 l 32.098 12.355 30.902 12.355 29.828 12.781 c 26.781 
14 l 26.785 14 l 24.996 14.715 23 14.715 21.215 14 c 18.172 12.781 l 17.098
 12.355 15.902 12.355 14.828 12.781 c 11.781 14 l 11.785 14 l 9.996 14.715
 8 14.715 6.215 14 c 0.941 11.891 l 0.172 11.582 -0.199 10.711 0.109 9.941
 c 0.109 18.941 m 0.418 18.172 1.289 17.801 2.059 18.109 c 7.328 20.219 
l 8.402 20.645 9.598 20.645 10.672 20.219 c 13.715 19 l 15.5 18.285 17.496
 18.285 19.285 19 c 22.332 20.219 l 22.328 20.219 l 23.402 20.645 24.598
 20.645 25.672 20.219 c 28.715 19 l 30.5 18.285 32.496 18.285 34.285 19 
c 37.332 20.219 l 37.328 20.219 l 38.402 20.645 39.598 20.645 40.672 20.219
 c 45.941 18.109 l 46.312 17.949 46.73 17.949 47.105 18.102 c 47.477 18.258
 47.77 18.555 47.922 18.93 c 48.07 19.305 48.062 19.723 47.902 20.094 c 
47.738 20.461 47.434 20.75 47.059 20.891 c 41.785 23 l 39.996 23.715 38 
23.715 36.215 23 c 33.172 21.781 l 32.098 21.355 30.902 21.355 29.828 21.781
 c 26.781 23 l 26.785 23 l 24.996 23.715 23 23.715 21.215 23 c 18.172 21.781
 l 17.098 21.355 15.902 21.355 14.828 21.781 c 11.781 23 l 11.785 23 l 9.996
 23.715 8 23.715 6.215 23 c 0.941 20.891 l 0.172 20.582 -0.199 19.711 0.109
 18.941 c 0.109 27.941 m 0.418 27.172 1.289 26.801 2.059 27.109 c 7.328 
29.219 l 8.402 29.645 9.598 29.645 10.672 29.219 c 13.715 28 l 15.5 27.285
 17.496 27.285 19.285 28 c 22.332 29.219 l 22.328 29.219 l 23.402 29.645
 24.598 29.645 25.672 29.219 c 28.715 28 l 30.5 27.285 32.496 27.285 34.285
 28 c 37.332 29.219 l 37.328 29.219 l 38.402 29.645 39.598 29.645 40.672
 29.219 c 45.941 27.109 l 46.312 26.949 46.73 26.949 47.105 27.102 c 47.477
 27.258 47.77 27.555 47.922 27.93 c 48.07 28.305 48.062 28.723 47.902 29.094
 c 47.738 29.461 47.434 29.75 47.059 29.891 c 41.785 32 l 39.996 32.715 
38 32.715 36.215 32 c 33.172 30.781 l 32.098 30.355 30.902 30.355 29.828
 30.781 c 26.781 32 l 26.785 32 l 24.996 32.715 23 32.715 21.215 32 c 18.172
 30.781 l 17.098 30.355 15.902 30.355 14.828 30.781 c 11.781 32 l 11.785
 32 l 9.996 32.715 8 32.715 6.215 32 c 0.941 29.891 l 0.172 29.582 -0.199
 28.711 0.109 27.941 c 0.109 36.941 m 0.418 36.172 1.289 35.801 2.059 36.109
 c 7.328 38.219 l 8.402 38.645 9.598 38.645 10.672 38.219 c 13.715 37 l 
15.5 36.285 17.496 36.285 19.285 37 c 22.332 38.219 l 22.328 38.219 l 23.402
 38.645 24.598 38.645 25.672 38.219 c 28.715 37 l 30.5 36.285 32.496 36.285
 34.285 37 c 37.332 38.219 l 37.328 38.219 l 38.402 38.645 39.598 38.645
 40.672 38.219 c 45.941 36.109 l 46.312 35.949 46.73 35.949 47.105 36.102
 c 47.477 36.258 47.77 36.555 47.922 36.93 c 48.07 37.305 48.062 37.723 
47.902 38.094 c 47.738 38.461 47.434 38.75 47.059 38.891 c 41.785 41 l 39.996
 41.715 38 41.715 36.215 41 c 33.172 39.781 l 32.098 39.355 30.902 39.355
 29.828 39.781 c 26.781 41 l 26.785 41 l 24.996 41.715 23 41.715 21.215 
41 c 18.172 39.781 l 17.098 39.355 15.902 39.355 14.828 39.781 c 11.781 
41 l 11.785 41 l 9.996 41.715 8 41.715 6.215 41 c 0.945 38.891 l 0.941 38.891
 l 0.172 38.582 -0.199 37.711 0.109 36.941 c f
Q Q
showpage
%%Trailer
%%EOF
