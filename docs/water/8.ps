%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 5 rectclip
1 0 0 -1 0 6 cm q
0 g
0.012 1.242 m 0.051 1.148 0.16 1.102 0.258 1.137 c 0.918 1.398 l 0.918 
1.402 l 1.051 1.457 1.199 1.457 1.332 1.402 c 1.711 1.25 l 1.715 1.25 l 
1.938 1.16 2.188 1.16 2.41 1.25 c 2.789 1.402 l 2.793 1.402 l 2.926 1.457
 3.074 1.457 3.207 1.402 c 3.586 1.25 l 3.59 1.25 l 3.812 1.16 4.062 1.16
 4.285 1.25 c 4.664 1.402 l 4.668 1.402 l 4.801 1.457 4.949 1.457 5.082 
1.402 c 5.742 1.141 l 5.742 1.137 l 5.84 1.098 5.949 1.145 5.988 1.242 c
 6.027 1.34 5.98 1.449 5.883 1.488 c 5.223 1.75 l 5 1.84 4.75 1.84 4.527
 1.75 c 4.148 1.598 l 4.145 1.598 l 4.012 1.543 3.863 1.543 3.73 1.598 c
 3.352 1.75 l 3.348 1.75 l 3.125 1.84 2.875 1.84 2.652 1.75 c 2.273 1.598
 l 2.27 1.598 l 2.137 1.543 1.988 1.543 1.855 1.598 c 1.477 1.75 l 1.473
 1.75 l 1.25 1.84 1 1.84 0.777 1.75 c 0.117 1.488 l 0.023 1.449 -0.023 1.34
 0.012 1.242 c 0.012 2.367 m 0.051 2.273 0.16 2.227 0.258 2.262 c 0.918 
2.523 l 0.918 2.527 l 1.051 2.582 1.199 2.582 1.332 2.527 c 1.711 2.375 
l 1.715 2.375 l 1.938 2.285 2.188 2.285 2.41 2.375 c 2.789 2.527 l 2.793
 2.527 l 2.926 2.582 3.074 2.582 3.207 2.527 c 3.586 2.375 l 3.59 2.375 
l 3.812 2.285 4.062 2.285 4.285 2.375 c 4.664 2.527 l 4.668 2.527 l 4.801
 2.582 4.949 2.582 5.082 2.527 c 5.742 2.266 l 5.742 2.262 l 5.84 2.223 
5.949 2.27 5.988 2.367 c 6.027 2.465 5.98 2.574 5.883 2.613 c 5.223 2.875
 l 5 2.965 4.75 2.965 4.527 2.875 c 4.148 2.723 l 4.145 2.723 l 4.012 2.668
 3.863 2.668 3.73 2.723 c 3.352 2.875 l 3.348 2.875 l 3.125 2.965 2.875 
2.965 2.652 2.875 c 2.273 2.723 l 2.27 2.723 l 2.137 2.668 1.988 2.668 1.855
 2.723 c 1.477 2.875 l 1.473 2.875 l 1.25 2.965 1 2.965 0.777 2.875 c 0.117
 2.613 l 0.023 2.574 -0.023 2.465 0.012 2.367 c 0.012 3.492 m 0.051 3.398
 0.16 3.352 0.258 3.387 c 0.918 3.648 l 0.918 3.652 l 1.051 3.707 1.199 
3.707 1.332 3.652 c 1.711 3.5 l 1.715 3.5 l 1.938 3.41 2.188 3.41 2.41 3.5
 c 2.789 3.652 l 2.793 3.652 l 2.926 3.707 3.074 3.707 3.207 3.652 c 3.586
 3.5 l 3.59 3.5 l 3.812 3.41 4.062 3.41 4.285 3.5 c 4.664 3.652 l 4.668 
3.652 l 4.801 3.707 4.949 3.707 5.082 3.652 c 5.742 3.391 l 5.742 3.387 
l 5.84 3.348 5.949 3.395 5.988 3.492 c 6.027 3.59 5.98 3.699 5.883 3.738
 c 5.223 4 l 5 4.09 4.75 4.09 4.527 4 c 4.148 3.848 l 4.145 3.848 l 4.012
 3.793 3.863 3.793 3.73 3.848 c 3.352 4 l 3.348 4 l 3.125 4.09 2.875 4.09
 2.652 4 c 2.273 3.848 l 2.27 3.848 l 2.137 3.793 1.988 3.793 1.855 3.848
 c 1.477 4 l 1.473 4 l 1.25 4.09 1 4.09 0.777 4 c 0.117 3.738 l 0.023 3.699
 -0.023 3.59 0.012 3.492 c 0.012 4.617 m 0.051 4.523 0.16 4.477 0.258 4.512
 c 0.918 4.773 l 0.918 4.777 l 1.051 4.832 1.199 4.832 1.332 4.777 c 1.711
 4.625 l 1.715 4.625 l 1.938 4.535 2.188 4.535 2.41 4.625 c 2.789 4.777 
l 2.793 4.777 l 2.926 4.832 3.074 4.832 3.207 4.777 c 3.586 4.625 l 3.59
 4.625 l 3.812 4.535 4.062 4.535 4.285 4.625 c 4.664 4.777 l 4.668 4.777
 l 4.801 4.832 4.949 4.832 5.082 4.777 c 5.742 4.516 l 5.742 4.512 l 5.84
 4.473 5.949 4.52 5.988 4.617 c 6.027 4.715 5.98 4.824 5.883 4.863 c 5.223
 5.125 l 5 5.215 4.75 5.215 4.527 5.125 c 4.148 4.973 l 4.145 4.973 l 4.012
 4.918 3.863 4.918 3.73 4.973 c 3.352 5.125 l 3.348 5.125 l 3.125 5.215 
2.875 5.215 2.652 5.125 c 2.273 4.973 l 2.27 4.973 l 2.137 4.918 1.988 4.918
 1.855 4.973 c 1.477 5.125 l 1.473 5.125 l 1.25 5.215 1 5.215 0.777 5.125
 c 0.117 4.863 l 0.023 4.824 -0.023 4.715 0.012 4.617 c f
Q Q
showpage
%%Trailer
%%EOF
