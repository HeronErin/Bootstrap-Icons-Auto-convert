%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
96 96 m 70.539 96 46.121 106.113 28.117 124.117 c 10.113 142.121 0 166.539
 0 192 c 0 240 l 0 265.461 10.113 289.879 28.117 307.883 c 46.121 325.887
 70.539 336 96 336 c 360 336 l 360 480 l 340.906 480 322.59 487.586 309.09
 501.09 c 295.586 514.59 288 532.906 288 552 c 24 552 l 15.426 552 7.504
 556.574 3.215 564 c -1.07 571.426 -1.07 580.574 3.215 588 c 7.504 595.426
 15.426 600 24 600 c 288 600 l 288 619.094 295.586 637.41 309.09 650.91 
c 322.59 664.414 340.906 672 360 672 c 408 672 l 427.094 672 445.41 664.414
 458.91 650.91 c 472.414 637.41 480 619.094 480 600 c 744 600 l 752.574 
600 760.496 595.426 764.785 588 c 769.07 580.574 769.07 571.426 764.785 
564 c 760.496 556.574 752.574 552 744 552 c 480 552 l 480 532.906 472.414
 514.59 458.91 501.09 c 445.41 487.586 427.094 480 408 480 c 408 336 l 672
 336 l 697.461 336 721.879 325.887 739.883 307.883 c 757.887 289.879 768
 265.461 768 240 c 768 192 l 768 166.539 757.887 142.121 739.883 124.117
 c 721.879 106.113 697.461 96 672 96 c h
120 240 m 111.426 240 103.504 235.426 99.215 228 c 94.93 220.574 94.93 
211.426 99.215 204 c 103.504 196.574 111.426 192 120 192 c 128.574 192 136.496
 196.574 140.785 204 c 145.07 211.426 145.07 220.574 140.785 228 c 136.496
 235.426 128.574 240 120 240 c 216 240 m 207.426 240 199.504 235.426 195.215
 228 c 190.93 220.574 190.93 211.426 195.215 204 c 199.504 196.574 207.426
 192 216 192 c 224.574 192 232.496 196.574 236.785 204 c 241.07 211.426 
241.07 220.574 236.785 228 c 232.496 235.426 224.574 240 216 240 c f
Q Q
showpage
%%Trailer
%%EOF
