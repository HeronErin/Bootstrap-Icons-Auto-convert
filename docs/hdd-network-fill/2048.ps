%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
192 192 m 141.078 192 92.242 212.227 56.234 248.234 c 20.227 284.242 0 
333.078 0 384 c 0 480 l 0 513.703 8.871 546.812 25.723 576 c 42.574 605.188
 66.812 629.426 96 646.277 c 125.188 663.129 158.297 672 192 672 c 720 672
 l 720 960 l 681.809 960 645.184 975.172 618.176 1002.176 c 591.172 1029.184
 576 1065.809 576 1104 c 48 1104 l 30.852 1104 15.004 1113.148 6.43 1128
 c -2.145 1142.852 -2.145 1161.148 6.43 1176 c 15.004 1190.852 30.852 1200
 48 1200 c 576 1200 l 576 1238.191 591.172 1274.816 618.176 1301.824 c 645.184
 1328.828 681.809 1344 720 1344 c 816 1344 l 854.191 1344 890.816 1328.828
 917.824 1301.824 c 944.828 1274.816 960 1238.191 960 1200 c 1488 1200 l
 1505.148 1200 1520.996 1190.852 1529.57 1176 c 1538.145 1161.148 1538.145
 1142.852 1529.57 1128 c 1520.996 1113.148 1505.148 1104 1488 1104 c 960
 1104 l 960 1065.809 944.828 1029.184 917.824 1002.176 c 890.816 975.172
 854.191 960 816 960 c 816 672 l 1344 672 l 1377.703 672 1410.812 663.129
 1440 646.277 c 1469.188 629.426 1493.426 605.188 1510.277 576 c 1527.129
 546.812 1536 513.703 1536 480 c 1536 384 l 1536 350.297 1527.129 317.188
 1510.277 288 c 1493.426 258.812 1469.188 234.574 1440 217.723 c 1410.812
 200.871 1377.703 192 1344 192 c h
240 480 m 222.852 480 207.004 470.852 198.43 456 c 189.855 441.148 189.855
 422.852 198.43 408 c 207.004 393.148 222.852 384 240 384 c 257.148 384 
272.996 393.148 281.57 408 c 290.145 422.852 290.145 441.148 281.57 456 
c 272.996 470.852 257.148 480 240 480 c 432 480 m 414.852 480 399.004 470.852
 390.43 456 c 381.855 441.148 381.855 422.852 390.43 408 c 399.004 393.148
 414.852 384 432 384 c 449.148 384 464.996 393.148 473.57 408 c 482.145 
422.852 482.145 441.148 473.57 456 c 464.996 470.852 449.148 480 432 480
 c f
Q Q
showpage
%%Trailer
%%EOF
