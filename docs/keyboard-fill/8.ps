%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
0 2.25 m 0 1.836 0.336 1.5 0.75 1.5 c 5.25 1.5 l 5.449 1.5 5.641 1.578 
5.781 1.719 c 5.922 1.859 6 2.051 6 2.25 c 6 4.125 l 6 4.324 5.922 4.516
 5.781 4.656 c 5.641 4.797 5.449 4.875 5.25 4.875 c 0.75 4.875 l 0.336 4.875
 0 4.539 0 4.125 c h
4.875 2.344 m 4.875 2.531 l 4.875 2.582 4.918 2.625 4.969 2.625 c 5.156
 2.625 l 5.207 2.625 5.25 2.582 5.25 2.531 c 5.25 2.344 l 5.25 2.293 5.207
 2.25 5.156 2.25 c 4.969 2.25 l 4.918 2.25 4.875 2.293 4.875 2.344 c 0.844
 3 m 0.793 3 0.75 3.043 0.75 3.094 c 0.75 3.281 l 0.75 3.332 0.793 3.375
 0.844 3.375 c 1.031 3.375 l 1.082 3.375 1.125 3.332 1.125 3.281 c 1.125
 3.094 l 1.125 3.043 1.082 3 1.031 3 c h
1.5 3.094 m 1.5 3.281 l 1.5 3.332 1.543 3.375 1.594 3.375 c 1.781 3.375
 l 1.832 3.375 1.875 3.332 1.875 3.281 c 1.875 3.094 l 1.875 3.043 1.832
 3 1.781 3 c 1.594 3 l 1.543 3 1.5 3.043 1.5 3.094 c 2.344 3 m 2.293 3 2.25
 3.043 2.25 3.094 c 2.25 3.281 l 2.25 3.332 2.293 3.375 2.344 3.375 c 2.531
 3.375 l 2.582 3.375 2.625 3.332 2.625 3.281 c 2.625 3.094 l 2.625 3.043
 2.582 3 2.531 3 c h
3 3.094 m 3 3.281 l 3 3.332 3.043 3.375 3.094 3.375 c 3.281 3.375 l 3.332
 3.375 3.375 3.332 3.375 3.281 c 3.375 3.094 l 3.375 3.043 3.332 3 3.281
 3 c 3.094 3 l 3.043 3 3 3.043 3 3.094 c 4.969 3 m 4.918 3 4.875 3.043 4.875
 3.094 c 4.875 3.281 l 4.875 3.332 4.918 3.375 4.969 3.375 c 5.156 3.375
 l 5.207 3.375 5.25 3.332 5.25 3.281 c 5.25 3.094 l 5.25 3.043 5.207 3 5.156
 3 c h
4.969 3.75 m 4.918 3.75 4.875 3.793 4.875 3.844 c 4.875 4.031 l 4.875 4.082
 4.918 4.125 4.969 4.125 c 5.156 4.125 l 5.207 4.125 5.25 4.082 5.25 4.031
 c 5.25 3.844 l 5.25 3.793 5.207 3.75 5.156 3.75 c h
3.844 3 m 3.793 3 3.75 3.043 3.75 3.094 c 3.75 3.281 l 3.75 3.332 3.793
 3.375 3.844 3.375 c 4.406 3.375 l 4.457 3.375 4.5 3.332 4.5 3.281 c 4.5
 3.094 l 4.5 3.043 4.457 3 4.406 3 c h
4.125 3.844 m 4.125 4.031 l 4.125 4.082 4.168 4.125 4.219 4.125 c 4.406
 4.125 l 4.457 4.125 4.5 4.082 4.5 4.031 c 4.5 3.844 l 4.5 3.793 4.457 3.75
 4.406 3.75 c 4.219 3.75 l 4.168 3.75 4.125 3.793 4.125 3.844 c 4.219 2.25
 m 4.168 2.25 4.125 2.293 4.125 2.344 c 4.125 2.531 l 4.125 2.582 4.168 
2.625 4.219 2.625 c 4.406 2.625 l 4.457 2.625 4.5 2.582 4.5 2.531 c 4.5 
2.344 l 4.5 2.293 4.457 2.25 4.406 2.25 c h
3.375 2.344 m 3.375 2.531 l 3.375 2.582 3.418 2.625 3.469 2.625 c 3.656
 2.625 l 3.707 2.625 3.75 2.582 3.75 2.531 c 3.75 2.344 l 3.75 2.293 3.707
 2.25 3.656 2.25 c 3.469 2.25 l 3.418 2.25 3.375 2.293 3.375 2.344 c 2.719
 2.25 m 2.668 2.25 2.625 2.293 2.625 2.344 c 2.625 2.531 l 2.625 2.582 2.668
 2.625 2.719 2.625 c 2.906 2.625 l 2.957 2.625 3 2.582 3 2.531 c 3 2.344
 l 3 2.293 2.957 2.25 2.906 2.25 c h
1.875 2.344 m 1.875 2.531 l 1.875 2.582 1.918 2.625 1.969 2.625 c 2.156
 2.625 l 2.207 2.625 2.25 2.582 2.25 2.531 c 2.25 2.344 l 2.25 2.293 2.207
 2.25 2.156 2.25 c 1.969 2.25 l 1.918 2.25 1.875 2.293 1.875 2.344 c 0.844
 2.25 m 0.793 2.25 0.75 2.293 0.75 2.344 c 0.75 2.531 l 0.75 2.582 0.793
 2.625 0.844 2.625 c 1.406 2.625 l 1.457 2.625 1.5 2.582 1.5 2.531 c 1.5
 2.344 l 1.5 2.293 1.457 2.25 1.406 2.25 c h
0.75 3.844 m 0.75 4.031 l 0.75 4.082 0.793 4.125 0.844 4.125 c 1.031 4.125
 l 1.082 4.125 1.125 4.082 1.125 4.031 c 1.125 3.844 l 1.125 3.793 1.082
 3.75 1.031 3.75 c 0.844 3.75 l 0.793 3.75 0.75 3.793 0.75 3.844 c 1.594
 3.75 m 1.543 3.75 1.5 3.793 1.5 3.844 c 1.5 4.031 l 1.5 4.082 1.543 4.125
 1.594 4.125 c 3.656 4.125 l 3.707 4.125 3.75 4.082 3.75 4.031 c 3.75 3.844
 l 3.75 3.793 3.707 3.75 3.656 3.75 c h
1.594 3.75 m f
Q Q
showpage
%%Trailer
%%EOF
