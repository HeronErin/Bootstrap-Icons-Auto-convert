%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
564.863 641.281 m 556.828 631.152 545.043 624.691 532.18 623.367 c 519.32
 622.043 506.469 625.961 496.535 634.242 c 486.602 642.52 480.426 654.453
 479.41 667.344 c 478.395 680.234 482.621 692.988 491.137 702.719 c 705.504
 960 l 491.137 1217.281 l 480.648 1230.5 477.871 1248.254 483.82 1264.043
 c 489.773 1279.836 503.582 1291.34 520.184 1294.348 c 536.789 1297.355 
553.754 1291.422 564.863 1278.719 c 768 1034.977 l 971.137 1278.816 l 982.129
 1291.984 999.312 1298.293 1016.215 1295.355 c 1033.117 1292.422 1047.168
 1280.695 1053.078 1264.59 c 1058.988 1248.484 1055.855 1230.449 1044.863
 1217.281 c 830.496 960 l 1044.863 702.719 l 1055.352 689.5 1058.129 671.746
 1052.18 655.957 c 1046.227 640.164 1032.418 628.66 1015.816 625.652 c 999.211
 622.645 982.246 628.578 971.137 641.281 c 768 885.023 l 564.863 641.184
 l h
564.863 641.281 m f
1344 1344 m 1344 432 l 912 0 l 384 0 l 333.078 0 284.242 20.227 248.234
 56.234 c 212.227 92.242 192 141.078 192 192 c 192 1344 l 192 1377.703 200.871
 1410.812 217.723 1440 c 234.574 1469.188 258.812 1493.426 288 1510.277 
c 317.188 1527.129 350.297 1536 384 1536 c 1152 1536 l 1185.703 1536 1218.812
 1527.129 1248 1510.277 c 1277.188 1493.426 1301.426 1469.188 1318.277 1440
 c 1335.129 1410.812 1344 1377.703 1344 1344 c 912 288 m 912 326.191 927.172
 362.816 954.176 389.824 c 981.184 416.828 1017.809 432 1056 432 c 1248 
432 l 1248 1344 l 1248 1369.461 1237.887 1393.879 1219.883 1411.883 c 1201.879
 1429.887 1177.461 1440 1152 1440 c 384 1440 l 358.539 1440 334.121 1429.887
 316.117 1411.883 c 298.113 1393.879 288 1369.461 288 1344 c 288 192 l 288
 166.539 298.113 142.121 316.117 124.117 c 334.121 106.113 358.539 96 384
 96 c 912 96 l h
912 288 m f
Q Q
showpage
%%Trailer
%%EOF
