%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
36 0 m 26.453 0 17.297 3.793 10.543 10.543 c 3.793 17.297 0 26.453 0 36
 c 0 84 l 0 93.547 3.793 102.703 10.543 109.457 c 17.297 116.207 26.453 
120 36 120 c 348 120 l 357.547 120 366.703 116.207 373.457 109.457 c 380.207
 102.703 384 93.547 384 84 c 384 36 l 384 26.453 380.207 17.297 373.457 
10.543 c 366.703 3.793 357.547 0 348 0 c h
60 48 m 132 48 l 138.629 48 144 53.371 144 60 c 144 66.629 138.629 72 132
 72 c 60 72 l 53.371 72 48 66.629 48 60 c 48 53.371 53.371 48 60 48 c 298.246
 58.246 m 296.527 56.531 296.012 53.949 296.941 51.703 c 297.875 49.457 
300.066 47.996 302.496 48 c 321.504 48 l 323.934 47.996 326.125 49.457 327.059
 51.703 c 327.988 53.949 327.473 56.531 325.754 58.246 c 316.246 67.754 
l 315.121 68.879 313.594 69.516 312 69.516 c 310.406 69.516 308.879 68.879
 307.754 67.754 c h
0 192 m 0 179.27 5.059 167.062 14.059 158.059 c 23.062 149.059 35.27 144
 48 144 c 336 144 l 348.73 144 360.938 149.059 369.941 158.059 c 378.941
 167.062 384 179.27 384 192 c 384 312 l 384 324.73 378.941 336.938 369.941
 345.941 c 360.938 354.941 348.73 360 336 360 c 48 360 l 35.27 360 23.062
 354.941 14.059 345.941 c 5.059 336.938 0 324.73 0 312 c h
24 264 m 24 312 l 24 318.363 26.527 324.469 31.031 328.969 c 35.531 333.473
 41.637 336 48 336 c 336 336 l 342.363 336 348.469 333.473 352.969 328.969
 c 357.473 324.469 360 318.363 360 312 c 360 264 l h
360 240 m 360 192 l 360 185.637 357.473 179.531 352.969 175.031 c 348.469
 170.527 342.363 168 336 168 c 48 168 l 41.637 168 35.531 170.527 31.031
 175.031 c 26.527 179.531 24 185.637 24 192 c 24 240 l h
48 204 m 48 197.371 53.371 192 60 192 c 276 192 l 282.629 192 288 197.371
 288 204 c 288 210.629 282.629 216 276 216 c 60 216 l 53.371 216 48 210.629
 48 204 c 48 300 m 48 293.371 53.371 288 60 288 c 204 288 l 210.629 288 
216 293.371 216 300 c 216 306.629 210.629 312 204 312 c 60 312 l 53.371 
312 48 306.629 48 300 c f
Q Q
showpage
%%Trailer
%%EOF
