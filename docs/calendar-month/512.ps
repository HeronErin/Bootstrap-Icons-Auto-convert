%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
61.441 271.969 m 74.398 233.52 l 122.016 233.52 l 134.977 271.969 l 152.207
 271.969 l 106.656 144 l 89.953 144 l 44.398 271.969 l h
98.496 163.32 m 117.602 220.32 l 78.816 220.32 l 98.016 163.32 l h
236.398 173.449 m 220.176 173.449 l 220.176 234.48 l 220.176 250.129 210.238
 259.031 196.078 259.031 c 183.141 259.031 172.559 253.129 172.559 234.742
 c 172.559 173.449 l 156.336 173.449 l 156.336 239.352 l 156.336 261.938
 170.879 273.551 191.207 273.551 c 206.949 273.551 216.238 266.832 219.719
 259.031 c 220.367 259.031 l 220.367 271.969 l 236.398 271.969 l h
290.59 294.555 m 277.078 294.555 268.75 287.258 266.949 279.289 c 250.461
 279.289 l 252.719 295.68 265.461 308.066 290.492 308.066 c 312.812 308.066
 332.395 295.418 332.395 270.195 c 332.398 173.449 l 316.824 173.449 l 316.824
 187.32 l 316.367 187.32 l 311.781 178.969 301.078 171.961 287.688 171.961
 c 264.527 171.961 248.328 188.258 248.328 217.227 c 248.328 225.387 l 248.328
 254.906 264.719 271.035 287.688 271.035 c 301.078 271.035 311.879 264.004
 315.816 255.484 c 316.297 255.484 l 316.297 270.004 l 316.297 285.484 306.145
 294.555 290.594 294.555 c 290.785 185.836 m 306.336 185.836 316.273 198.484
 316.273 218.453 c 316.273 224.523 l 316.273 244.875 306.914 257.258 290.785
 257.258 c 274.176 257.258 264.434 244.969 264.434 224.523 c 264.434 218.453
 l 264.434 197.621 274.176 185.812 290.785 185.812 c h
290.785 185.836 m f
84 0 m 87.184 0 90.234 1.266 92.484 3.516 c 94.734 5.766 96 8.816 96 12
 c 96 24 l 288 24 l 288 12 l 288 5.371 293.371 0 300 0 c 306.629 0 312 5.371
 312 12 c 312 24 l 336 24 l 348.73 24 360.938 29.059 369.941 38.059 c 378.941
 47.062 384 59.27 384 72 c 384 336 l 384 348.73 378.941 360.938 369.941 
369.941 c 360.938 378.941 348.73 384 336 384 c 48 384 l 35.27 384 23.062
 378.941 14.059 369.941 c 5.059 360.938 0 348.73 0 336 c 0 72 l 0 59.27 
5.059 47.062 14.059 38.059 c 23.062 29.059 35.27 24 48 24 c 72 24 l 72 12
 l 72 5.371 77.371 0 84 0 c 24 96 m 24 336 l 24 342.363 26.527 348.469 31.031
 352.969 c 35.531 357.473 41.637 360 48 360 c 336 360 l 342.363 360 348.469
 357.473 352.969 352.969 c 357.473 348.469 360 342.363 360 336 c 360 96 
l h
24 96 m f
Q Q
showpage
%%Trailer
%%EOF
