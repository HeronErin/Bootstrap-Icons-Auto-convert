%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
122.879 543.938 m 148.801 467.039 l 244.031 467.039 l 269.953 543.934 l
 304.418 543.934 l 213.312 288 l 179.906 288 l 88.801 543.938 l h
196.992 326.641 m 235.199 440.641 l 157.633 440.641 l 196.031 326.641 l
 h
472.801 346.898 m 440.352 346.898 l 440.352 468.961 l 440.352 500.258 420.48
 518.066 392.16 518.066 c 366.289 518.066 345.121 506.258 345.121 469.492
 c 345.121 346.895 l 312.672 346.895 l 312.672 478.703 l 312.672 523.871
 341.762 547.102 382.414 547.102 c 413.902 547.102 432.477 533.66 439.438
 518.062 c 440.734 518.062 l 440.734 543.934 l 472.797 543.934 l h
581.184 589.105 m 554.16 589.105 537.504 574.512 533.902 558.578 c 500.926
 558.578 l 505.438 591.363 530.926 616.129 580.988 616.129 c 625.629 616.129
 664.797 590.832 664.797 540.387 c 664.801 346.895 l 633.648 346.895 l 633.648
 374.637 l 632.738 374.637 l 623.57 357.934 602.164 343.918 575.379 343.918
 c 529.059 343.918 496.66 376.512 496.66 434.445 c 496.66 450.766 l 496.66
 509.805 529.445 542.062 575.379 542.062 c 602.164 542.062 623.762 528 631.637
 510.957 c 632.598 510.957 l 632.598 539.996 l 632.598 570.957 612.293 589.102
 581.191 589.102 c 581.574 371.66 m 612.68 371.66 632.551 396.957 632.551
 436.891 c 632.551 449.035 l 632.551 489.738 613.832 514.508 581.574 514.508
 c 548.359 514.508 528.871 489.934 528.871 449.035 c 528.871 436.891 l 528.871
 395.227 548.359 371.609 581.574 371.609 c h
581.574 371.66 m f
168 0 m 174.363 0 180.469 2.527 184.969 7.031 c 189.473 11.531 192 17.637
 192 24 c 192 48 l 576 48 l 576 24 l 576 15.426 580.574 7.504 588 3.215 
c 595.426 -1.07 604.574 -1.07 612 3.215 c 619.426 7.504 624 15.426 624 24
 c 624 48 l 672 48 l 697.461 48 721.879 58.113 739.883 76.117 c 757.887 
94.121 768 118.539 768 144 c 768 672 l 768 697.461 757.887 721.879 739.883
 739.883 c 721.879 757.887 697.461 768 672 768 c 96 768 l 70.539 768 46.121
 757.887 28.117 739.883 c 10.113 721.879 0 697.461 0 672 c 0 144 l 0 118.539
 10.113 94.121 28.117 76.117 c 46.121 58.113 70.539 48 96 48 c 144 48 l 
144 24 l 144 17.637 146.527 11.531 151.031 7.031 c 155.531 2.527 161.637
 0 168 0 c 48 192 m 48 672 l 48 684.73 53.059 696.938 62.059 705.941 c 71.062
 714.941 83.27 720 96 720 c 672 720 l 684.73 720 696.938 714.941 705.941
 705.941 c 714.941 696.938 720 684.73 720 672 c 720 192 l h
48 192 m f
Q Q
showpage
%%Trailer
%%EOF
