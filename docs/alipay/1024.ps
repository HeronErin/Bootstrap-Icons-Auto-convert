%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
121.969 0 m 648 0 l 680.488 0.129 711.594 13.164 734.461 36.238 c 757.328
 59.316 770.086 90.535 769.922 123.023 c 769.922 521.281 l 769.633 521.281
 744.434 519.074 626.977 482.258 c 607.199 475.539 583.008 466.562 555.984
 456.531 c 541.391 451.09 526.082 445.441 510.047 439.586 c 538.703 388.852
 560.109 334.352 573.648 277.68 c 423.457 277.68 l 423.457 223.152 l 607.344
 223.152 l 607.344 192.719 l 423.504 192.719 l 423.504 101.809 l 348.48 
101.809 l 335.328 101.809 335.328 114.914 335.328 114.914 c 335.328 192.723
 l 149.281 192.719 l 149.281 223.152 l 335.281 223.152 l 335.281 277.68 
l 181.68 277.68 l 181.68 308.113 l 479.52 308.113 l 468.625 345.984 453.984
 381.555 436.609 413.809 c 339.984 381.648 236.883 355.633 172.129 371.664
 c 130.656 381.938 103.969 400.32 88.32 419.566 c 16.367 507.887 67.969 
641.949 219.887 641.949 c 309.742 641.949 396.285 591.406 463.344 508.172
 c 563.184 556.555 769.105 639.598 769.918 639.934 c 769.918 644.973 l 769.922
 644.977 l 770.086 677.465 757.328 708.684 734.461 731.762 c 711.594 754.836
 680.488 767.871 648 768 c 121.969 768 l 89.473 767.887 58.355 754.855 35.477
 731.777 c 12.598 708.699 -0.164 677.473 0 644.977 c 0 123.023 l -0.164 
90.527 12.598 59.301 35.477 36.223 c 58.355 13.145 89.473 0.113 121.969 
0 c f
110.832 444.961 m 52.273 496.465 87.312 590.594 205.777 590.594 c 274.609
 590.594 343.441 546.195 397.488 475.105 c 320.594 437.234 255.457 410.16
 185.09 417.168 c 166.035 419.09 130.371 427.582 110.832 445.008 c h
110.832 444.961 m f
Q Q
showpage
%%Trailer
%%EOF
