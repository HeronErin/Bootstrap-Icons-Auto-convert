%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
60.984 0 m 324 0 l 340.242 0.062 355.797 6.582 367.23 18.121 c 378.664 
29.656 385.043 45.27 384.961 61.512 c 384.961 260.641 l 384.816 260.641 
372.219 259.535 313.488 241.129 c 303.602 237.77 291.504 233.281 277.992
 228.266 c 270.695 225.547 263.039 222.723 255.023 219.793 c 269.352 194.426
 280.055 167.176 286.824 138.84 c 211.727 138.84 l 211.727 111.574 l 303.672
 111.574 l 303.672 96.359 l 211.75 96.359 l 211.754 50.902 l 174.238 50.902
 l 167.664 50.902 167.664 57.453 167.664 57.453 c 167.664 96.355 l 74.641
 96.359 l 74.641 111.574 l 167.641 111.574 l 167.641 138.84 l 90.84 138.84
 l 90.84 154.055 l 239.762 154.055 l 234.312 172.992 226.992 190.773 218.305
 206.902 c 169.992 190.824 118.441 177.812 86.066 185.832 c 65.332 190.969
 51.988 200.16 44.164 209.785 c 8.188 253.945 33.988 320.977 109.949 320.977
 c 154.879 320.977 198.148 295.703 231.676 254.09 c 281.598 278.281 384.555
 319.801 384.965 319.969 c 384.965 322.488 l 384.961 322.488 l 385.043 338.73
 378.664 354.344 367.23 365.879 c 355.797 377.418 340.242 383.938 324 384
 c 60.984 384 l 44.734 383.941 29.176 377.426 17.738 365.887 c 6.297 354.352
 -0.082 338.734 0 322.488 c 0 61.512 l -0.082 45.266 6.297 29.648 17.738
 18.113 c 29.176 6.574 44.734 0.059 60.984 0 c f
55.414 222.48 m 26.133 248.234 43.652 295.297 102.887 295.297 c 137.301
 295.297 171.719 273.098 198.742 237.555 c 160.293 218.617 127.727 205.082
 92.543 208.586 c 83.016 209.547 65.184 213.793 55.414 222.508 c h
55.414 222.48 m f
Q Q
showpage
%%Trailer
%%EOF
