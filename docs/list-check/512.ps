%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 23 83 360 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 23 83 360 337
384 384 cairo_set_page_size
%%EndPageSetup
q 23 83 337 254 rectclip
1 0 0 -1 0 384 cm q
0 g
120 276 m 120 269.371 125.371 264 132 264 c 348 264 l 354.629 264 360 269.371
 360 276 c 360 282.629 354.629 288 348 288 c 132 288 l 125.371 288 120 282.629
 120 276 c 120 180 m 120 173.371 125.371 168 132 168 c 348 168 l 354.629
 168 360 173.371 360 180 c 360 186.629 354.629 192 348 192 c 132 192 l 125.371
 192 120 186.629 120 180 c 120 84 m 120 77.371 125.371 72 132 72 c 348 72
 l 354.629 72 360 77.371 360 84 c 360 90.629 354.629 96 348 96 c 132 96 
l 125.371 96 120 90.629 120 84 c 92.496 51.504 m 94.754 53.754 96.02 56.812
 96.02 60 c 96.02 63.188 94.754 66.246 92.496 68.496 c 56.496 104.496 l 
54.246 106.754 51.188 108.02 48 108.02 c 44.812 108.02 41.754 106.754 39.504
 104.496 c 27.504 92.496 l 22.812 87.805 22.812 80.195 27.504 75.504 c 32.195
 70.812 39.805 70.812 44.496 75.504 c 48 79.031 l 75.504 51.504 l 77.754
 49.246 80.812 47.98 84 47.98 c 87.188 47.98 90.246 49.246 92.496 51.504
 c 92.496 147.504 m 94.754 149.754 96.02 152.812 96.02 156 c 96.02 159.188
 94.754 162.246 92.496 164.496 c 56.496 200.496 l 54.246 202.754 51.188 
204.02 48 204.02 c 44.812 204.02 41.754 202.754 39.504 200.496 c 27.504 
188.496 l 22.812 183.805 22.812 176.195 27.504 171.504 c 32.195 166.812 
39.805 166.812 44.496 171.504 c 48 175.031 l 75.504 147.504 l 77.754 145.246
 80.812 143.98 84 143.98 c 87.188 143.98 90.246 145.246 92.496 147.504 c
 92.496 243.504 m 94.754 245.754 96.02 248.812 96.02 252 c 96.02 255.188
 94.754 258.246 92.496 260.496 c 56.496 296.496 l 54.246 298.754 51.188 
300.02 48 300.02 c 44.812 300.02 41.754 298.754 39.504 296.496 c 27.504 
284.496 l 22.812 279.805 22.812 272.195 27.504 267.504 c 32.195 262.812 
39.805 262.812 44.496 267.504 c 48 271.031 l 75.504 243.504 l 77.754 241.246
 80.812 239.98 84 239.98 c 87.188 239.98 90.246 241.246 92.496 243.504 c
 f*
Q Q
showpage
%%Trailer
%%EOF
