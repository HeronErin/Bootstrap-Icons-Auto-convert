%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 5 20 90 85
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 5 20 90 85
96 96 cairo_set_page_size
%%EndPageSetup
q 5 20 85 65 rectclip
1 0 0 -1 0 96 cm q
0 g
30 69 m 30 67.344 31.344 66 33 66 c 87 66 l 88.656 66 90 67.344 90 69 c
 90 70.656 88.656 72 87 72 c 33 72 l 31.344 72 30 70.656 30 69 c 30 45 m
 30 43.344 31.344 42 33 42 c 87 42 l 88.656 42 90 43.344 90 45 c 90 46.656
 88.656 48 87 48 c 33 48 l 31.344 48 30 46.656 30 45 c 30 21 m 30 19.344
 31.344 18 33 18 c 87 18 l 88.656 18 90 19.344 90 21 c 90 22.656 88.656 
24 87 24 c 33 24 l 31.344 24 30 22.656 30 21 c 23.125 12.875 m 23.688 13.438
 24.004 14.203 24.004 15 c 24.004 15.797 23.688 16.562 23.125 17.125 c 14.125
 26.125 l 13.562 26.688 12.797 27.004 12 27.004 c 11.203 27.004 10.438 26.688
 9.875 26.125 c 6.875 23.125 l 5.703 21.949 5.703 20.051 6.875 18.875 c 
8.051 17.703 9.949 17.703 11.125 18.875 c 12 19.758 l 18.875 12.875 l 19.438
 12.312 20.203 11.996 21 11.996 c 21.797 11.996 22.562 12.312 23.125 12.875
 c 23.125 36.875 m 23.688 37.438 24.004 38.203 24.004 39 c 24.004 39.797
 23.688 40.562 23.125 41.125 c 14.125 50.125 l 13.562 50.688 12.797 51.004
 12 51.004 c 11.203 51.004 10.438 50.688 9.875 50.125 c 6.875 47.125 l 5.703
 45.949 5.703 44.051 6.875 42.875 c 8.051 41.703 9.949 41.703 11.125 42.875
 c 12 43.758 l 18.875 36.875 l 19.438 36.312 20.203 35.996 21 35.996 c 21.797
 35.996 22.562 36.312 23.125 36.875 c 23.125 60.875 m 23.688 61.438 24.004
 62.203 24.004 63 c 24.004 63.797 23.688 64.562 23.125 65.125 c 14.125 74.125
 l 13.562 74.688 12.797 75.004 12 75.004 c 11.203 75.004 10.438 74.688 9.875
 74.125 c 6.875 71.125 l 5.703 69.949 5.703 68.051 6.875 66.875 c 8.051 
65.703 9.949 65.703 11.125 66.875 c 12 67.758 l 18.875 60.875 l 19.438 60.312
 20.203 59.996 21 59.996 c 21.797 59.996 22.562 60.312 23.125 60.875 c f*
Q Q
showpage
%%Trailer
%%EOF
