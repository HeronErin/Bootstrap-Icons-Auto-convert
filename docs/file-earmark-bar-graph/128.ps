%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
60 81 m 60 81.797 60.316 82.559 60.879 83.121 c 61.441 83.684 62.203 84
 63 84 c 69 84 l 69.797 84 70.559 83.684 71.121 83.121 c 71.684 82.559 72
 81.797 72 81 c 72 45 l 72 44.203 71.684 43.441 71.121 42.879 c 70.559 42.316
 69.797 42 69 42 c 63 42 l 61.344 42 60 43.344 60 45 c h
45 84 m 43.344 84 42 82.656 42 81 c 42 57 l 42 55.344 43.344 54 45 54 c
 51 54 l 51.797 54 52.559 54.316 53.121 54.879 c 53.684 55.441 54 56.203
 54 57 c 54 81 l 54 81.797 53.684 82.559 53.121 83.121 c 52.559 83.684 51.797
 84 51 84 c h
27 84 m 25.344 84 24 82.656 24 81 c 24 69 l 24 67.344 25.344 66 27 66 c
 33 66 l 33.797 66 34.559 66.316 35.121 66.879 c 35.684 67.441 36 68.203
 36 69 c 36 81 l 36 81.797 35.684 82.559 35.121 83.121 c 34.559 83.684 33.797
 84 33 84 c h
27 84 m f
84 84 m 84 27 l 57 0 l 24 0 l 17.371 0 12 5.371 12 12 c 12 84 l 12 87.184
 13.266 90.234 15.516 92.484 c 17.766 94.734 20.816 96 24 96 c 72 96 l 75.184
 96 78.234 94.734 80.484 92.484 c 82.734 90.234 84 87.184 84 84 c 57 18 
m 57 22.969 61.031 27 66 27 c 78 27 l 78 84 l 78 85.59 77.367 87.117 76.242
 88.242 c 75.117 89.367 73.59 90 72 90 c 24 90 l 20.688 90 18 87.312 18 
84 c 18 12 l 18 8.688 20.688 6 24 6 c 57 6 l h
57 18 m f
Q Q
showpage
%%Trailer
%%EOF
