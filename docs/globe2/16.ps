%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
0 6 m 0 2.688 2.688 0 6 0 c 9.312 0 12 2.688 12 6 c 12 9.312 9.312 12 6
 12 c 2.688 12 0 9.312 0 6 c 5.625 0.809 m 5.121 0.961 4.625 1.422 4.211
 2.199 c 4.102 2.402 4.004 2.617 3.914 2.852 c 4.441 2.969 5.02 3.043 5.625
 3.066 c h
3.188 2.652 m 3.293 2.363 3.414 2.094 3.547 1.844 c 3.547 1.848 l 3.68 
1.602 3.828 1.367 3.996 1.145 c 3.355 1.41 2.777 1.797 2.289 2.289 c 2.562
 2.426 2.859 2.551 3.188 2.656 c h
2.633 5.625 m 2.66 4.824 2.773 4.059 2.961 3.367 c 2.957 3.367 l 2.551 
3.238 2.16 3.07 1.785 2.867 c 1.188 3.672 0.832 4.629 0.762 5.625 c h
3.684 3.57 m 3.504 4.242 3.402 4.93 3.383 5.625 c 5.625 5.625 l 5.625 3.816
 l 4.941 3.793 4.289 3.707 3.684 3.566 c 6.375 3.816 m 6.375 5.625 l 8.617
 5.625 l 8.594 4.93 8.496 4.242 8.316 3.57 c 7.711 3.711 7.055 3.797 6.375
 3.82 c h
3.383 6.375 m 3.41 7.117 3.516 7.809 3.684 8.43 c 4.32 8.285 4.973 8.203
 5.625 8.184 c 5.625 6.375 l h
6.375 6.375 m 6.375 8.184 l 7.059 8.207 7.711 8.293 8.316 8.434 c 8.484
 7.812 8.59 7.117 8.617 6.379 c h
3.914 9.148 m 4.004 9.383 4.102 9.602 4.211 9.801 c 4.625 10.578 5.125 
11.039 5.625 11.191 c 5.625 8.934 l 5.016 8.957 4.441 9.031 3.914 9.148 
c h
3.996 10.855 m 3.828 10.633 3.68 10.398 3.547 10.152 c 3.41 9.895 3.289
 9.621 3.188 9.344 c 2.879 9.445 2.578 9.566 2.289 9.711 c 2.777 10.203 
3.355 10.59 3.996 10.855 c h
2.957 8.633 m 2.766 7.895 2.656 7.137 2.633 6.375 c 0.762 6.375 l 0.832
 7.371 1.188 8.328 1.785 9.133 c 2.137 8.938 2.531 8.77 2.957 8.633 c 8.004
 10.855 m 8.645 10.59 9.223 10.203 9.711 9.715 c 9.422 9.566 9.121 9.445
 8.812 9.348 c 8.711 9.621 8.59 9.895 8.453 10.152 c 8.32 10.398 8.172 10.633
 8.004 10.855 c 6.375 8.934 m 6.375 11.195 l 6.879 11.043 7.375 10.582 7.789
 9.805 c 7.898 9.602 7.996 9.387 8.086 9.152 c 8.086 9.148 l 7.523 9.023
 6.949 8.953 6.375 8.934 c h
9.043 8.633 m 9.469 8.773 9.863 8.941 10.215 9.133 c 10.812 8.328 11.168
 7.371 11.238 6.375 c 9.367 6.375 l 9.344 7.137 9.234 7.895 9.043 8.633 
c 11.238 5.625 m 11.168 4.629 10.812 3.672 10.215 2.867 c 9.863 3.062 9.469
 3.23 9.043 3.367 c 9.23 4.059 9.344 4.82 9.371 5.625 c h
8.453 1.848 m 8.586 2.098 8.707 2.367 8.816 2.656 c 8.812 2.652 l 9.121
 2.555 9.422 2.434 9.711 2.285 c 9.223 1.797 8.645 1.41 8.004 1.148 c 8.168
 1.359 8.316 1.598 8.453 1.848 c 8.086 2.855 m 8.086 2.852 l 8 2.629 7.902
 2.41 7.789 2.199 c 7.375 1.422 6.879 0.961 6.375 0.809 c 6.375 3.066 l 
6.984 3.043 7.559 2.969 8.086 2.852 c h
8.086 2.855 m f
Q Q
showpage
%%Trailer
%%EOF
