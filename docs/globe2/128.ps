%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
0 48 m 0 30.852 9.148 15.004 24 6.43 c 38.852 -2.145 57.148 -2.145 72 6.43
 c 86.852 15.004 96 30.852 96 48 c 96 65.148 86.852 80.996 72 89.57 c 57.148
 98.145 38.852 98.145 24 89.57 c 9.148 80.996 0 65.148 0 48 c 45 6.461 m
 40.98 7.684 36.988 11.383 33.68 17.59 c 32.82 19.203 32.031 20.945 31.309
 22.82 c 35.539 23.762 40.141 24.363 45 24.543 c h
25.492 21.234 m 26.348 18.926 27.309 16.77 28.379 14.766 c 29.426 12.809
 30.621 10.938 31.961 9.168 c 26.852 11.285 22.211 14.387 18.305 18.301 
c 20.48 19.41 22.875 20.391 25.492 21.242 c h
21.055 45 m 21.27 38.578 22.184 32.477 23.672 26.953 c 20.422 25.918 17.277
 24.578 14.281 22.949 c 9.5 29.367 6.664 37.02 6.109 45 c h
29.453 28.555 m 28.039 33.93 27.23 39.445 27.055 45 c 45 45 l 45 30.547
 l 39.539 30.367 34.301 29.676 29.453 28.555 c 51 30.539 m 51 45 l 68.941
 45 l 68.766 39.445 67.961 33.93 66.547 28.555 c 61.699 29.676 56.461 30.359
 51 30.547 c h
27.059 51 m 27.27 56.922 28.113 62.484 29.453 67.445 c 34.559 66.285 39.766
 65.621 45 65.461 c 45 51 l h
51 51 m 51 65.453 l 56.461 65.633 61.699 66.324 66.547 67.445 c 67.887 
62.484 68.73 56.922 68.945 51 c h
31.309 73.176 m 32.027 75.051 32.82 76.797 33.68 78.406 c 36.992 84.617
 40.988 88.305 45 89.535 c 45 71.461 l 40.141 71.641 35.539 72.242 31.309
 73.184 c h
31.969 86.832 m 30.625 85.062 29.426 83.191 28.379 81.234 c 27.277 79.141
 26.312 76.98 25.492 74.762 c 23.027 75.555 20.621 76.535 18.305 77.699 
c 22.211 81.613 26.852 84.715 31.961 86.832 c h
23.672 69.047 m 22.113 63.152 21.234 57.098 21.047 51 c 6.105 51 l 6.109
 51 l 6.664 58.98 9.5 66.633 14.281 73.051 c 17.102 71.504 20.25 70.16 23.672
 69.047 c 64.039 86.832 m 69.145 84.719 73.781 81.617 77.688 77.707 c 75.375
 76.543 72.973 75.559 70.508 74.766 c 69.688 76.984 68.723 79.145 67.621
 81.234 c 66.574 83.191 65.379 85.062 64.039 86.832 c 51 71.453 m 51 89.539
 l 55.02 88.316 59.012 84.617 62.32 78.41 c 63.184 76.797 63.973 75.055 
64.691 73.18 c 64.691 73.176 l 60.191 72.188 55.605 71.613 51 71.461 c h
72.328 69.047 m 75.75 70.156 78.898 71.5 81.719 73.051 c 86.5 66.633 89.336
 58.98 89.891 51 c 74.949 51 l 74.953 51 l 74.766 57.098 73.887 63.152 72.328
 69.047 c 89.891 45 m 89.336 37.02 86.5 29.367 81.719 22.949 c 78.898 24.496
 75.75 25.84 72.328 26.953 c 73.816 32.473 74.727 38.582 74.949 45 c h
67.621 14.766 m 68.684 16.773 69.648 18.93 70.512 21.234 c 72.977 20.441
 75.375 19.457 77.688 18.293 c 73.781 14.387 69.145 11.285 64.039 9.176 
c 65.348 10.875 66.547 12.758 67.621 14.77 c 64.691 22.828 m 64.691 22.824
 l 64.008 21.035 63.215 19.289 62.32 17.594 c 59.012 11.383 55.02 7.691 
51 6.461 c 51 24.539 l 55.859 24.359 60.461 23.758 64.691 22.816 c h
64.691 22.828 m f
Q Q
showpage
%%Trailer
%%EOF
