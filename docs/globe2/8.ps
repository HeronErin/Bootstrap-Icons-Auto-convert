%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0 3 m 0 1.344 1.344 0 3 0 c 4.656 0 6 1.344 6 3 c 6 4.656 4.656 6 3 6 c
 1.344 6 0 4.656 0 3 c 2.812 0.402 m 2.562 0.48 2.312 0.711 2.105 1.098 
c 2.051 1.199 2.004 1.309 1.957 1.426 c 2.223 1.484 2.508 1.523 2.812 1.535
 c h
1.594 1.328 m 1.648 1.184 1.707 1.051 1.773 0.926 c 1.773 0.922 l 1.84 
0.801 1.914 0.684 1.996 0.574 c 1.68 0.707 1.387 0.898 1.145 1.145 c 1.281
 1.215 1.43 1.273 1.594 1.328 c h
1.316 2.812 m 1.328 2.41 1.387 2.031 1.48 1.684 c 1.277 1.621 1.078 1.535
 0.891 1.434 c 0.594 1.836 0.418 2.312 0.383 2.812 c h
1.84 1.785 m 1.754 2.121 1.703 2.465 1.691 2.812 c 2.812 2.812 l 2.812 
1.91 l 2.473 1.898 2.145 1.855 1.84 1.785 c 3.188 1.91 m 3.188 2.812 l 4.309
 2.812 l 4.297 2.465 4.246 2.121 4.16 1.785 c 3.855 1.855 3.531 1.898 3.188
 1.91 c h
1.691 3.188 m 1.703 3.559 1.758 3.906 1.84 4.215 c 2.16 4.145 2.484 4.102
 2.812 4.09 c 2.812 3.188 l h
3.188 3.188 m 3.188 4.09 l 3.527 4.102 3.855 4.145 4.16 4.215 c 4.242 3.906
 4.297 3.559 4.309 3.188 c h
1.957 4.574 m 2.004 4.691 2.051 4.801 2.105 4.902 c 2.312 5.289 2.562 5.52
 2.812 5.598 c 2.812 4.465 l 2.508 4.477 2.223 4.512 1.957 4.574 c h
2 5.426 m 1.996 5.426 l 1.914 5.316 1.84 5.199 1.773 5.078 c 1.703 4.945
 1.645 4.812 1.594 4.672 c 1.438 4.723 1.289 4.785 1.145 4.855 c 1.387 5.102
 1.68 5.293 1.996 5.426 c h
1.48 4.312 m 1.48 4.316 l 1.383 3.945 1.328 3.57 1.316 3.188 c 0.383 3.188
 l 0.418 3.688 0.594 4.164 0.891 4.566 c 1.066 4.469 1.266 4.387 1.477 4.316
 c 4 5.43 m 4.004 5.426 l 4.32 5.293 4.613 5.102 4.855 4.855 c 4.711 4.785
 4.562 4.723 4.406 4.672 c 4.355 4.812 4.297 4.945 4.227 5.078 c 4.16 5.199
 4.086 5.316 4.004 5.426 c 3.188 4.465 m 3.188 5.594 l 3.438 5.516 3.688
 5.285 3.895 4.898 c 3.949 4.797 3.996 4.688 4.043 4.57 c 4.043 4.574 l 
3.762 4.512 3.477 4.477 3.188 4.465 c h
4.52 4.316 m 4.734 4.387 4.93 4.469 5.105 4.566 c 5.109 4.566 l 5.406 4.164
 5.582 3.688 5.617 3.188 c 4.684 3.188 l 4.672 3.57 4.617 3.945 4.52 4.316
 c 5.617 2.812 m 5.582 2.312 5.406 1.836 5.109 1.434 c 4.934 1.531 4.734
 1.613 4.523 1.684 c 4.617 2.027 4.672 2.41 4.688 2.812 c h
4.227 0.922 m 4.293 1.047 4.352 1.184 4.406 1.324 c 4.406 1.328 l 4.562
 1.277 4.711 1.215 4.855 1.145 c 4.613 0.898 4.32 0.707 4.004 0.574 c 4.086
 0.68 4.16 0.797 4.227 0.922 c 4.043 1.426 m 4 1.316 3.949 1.207 3.895 1.098
 c 3.688 0.711 3.438 0.48 3.188 0.402 c 3.188 1.535 l 3.492 1.523 3.777 
1.488 4.043 1.426 c h
4.043 1.426 m f
Q Q
showpage
%%Trailer
%%EOF
