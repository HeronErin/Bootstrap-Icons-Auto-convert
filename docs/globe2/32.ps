%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
0 12 m 0 5.371 5.371 0 12 0 c 18.629 0 24 5.371 24 12 c 24 18.629 18.629
 24 12 24 c 5.371 24 0 18.629 0 12 c 11.25 1.617 m 10.246 1.922 9.246 2.848
 8.418 4.398 c 8.203 4.801 8.004 5.238 7.824 5.707 c 8.883 5.941 10.031 
6.094 11.246 6.137 c h
6.375 5.309 m 6.59 4.73 6.828 4.191 7.098 3.691 c 7.094 3.691 l 7.355 3.203
 7.656 2.734 7.992 2.293 c 6.715 2.82 5.555 3.598 4.578 4.574 c 5.121 4.852
 5.723 5.098 6.375 5.309 c h
5.262 11.25 m 5.316 9.645 5.543 8.121 5.914 6.738 c 5.918 6.738 l 5.105
 6.48 4.32 6.145 3.57 5.738 c 2.375 7.34 1.664 9.254 1.527 11.25 c h
7.363 7.137 m 7.008 8.48 6.809 9.859 6.762 11.25 c 11.25 11.25 l 11.25 
7.637 l 9.887 7.59 8.574 7.418 7.363 7.141 c 12.75 7.637 m 12.75 11.25 l
 17.234 11.25 l 17.191 9.863 16.988 8.48 16.637 7.137 c 15.426 7.418 14.113
 7.59 12.75 7.633 c h
6.766 12.75 m 6.816 14.23 7.031 15.621 7.363 16.863 c 8.641 16.57 9.941
 16.406 11.25 16.363 c 11.25 12.75 l h
12.75 12.75 m 12.75 16.363 l 14.113 16.41 15.426 16.582 16.637 16.859 c
 16.973 15.617 17.184 14.227 17.238 12.746 c h
7.828 18.293 m 8.008 18.762 8.207 19.199 8.422 19.602 c 9.25 21.152 10.25
 22.078 11.254 22.383 c 11.25 17.863 l 10.035 17.91 8.883 18.059 7.828 18.293
 c h
7.992 21.707 m 7.656 21.266 7.355 20.797 7.094 20.309 c 6.82 19.785 6.578
 19.246 6.375 18.691 c 5.758 18.887 5.156 19.133 4.578 19.426 c 5.555 20.402
 6.715 21.18 7.992 21.707 c h
5.918 17.262 m 5.527 15.789 5.309 14.273 5.262 12.75 c 1.527 12.75 l 1.664
 14.746 2.375 16.66 3.57 18.262 c 4.273 17.875 5.062 17.539 5.918 17.262
 c 16.012 21.707 m 16.008 21.707 l 17.285 21.18 18.445 20.402 19.422 19.426
 c 18.844 19.137 18.242 18.891 17.625 18.691 c 17.422 19.246 17.18 19.785
 16.906 20.309 c 16.645 20.797 16.344 21.266 16.008 21.707 c 12.75 17.863
 m 12.75 22.383 l 13.754 22.078 14.754 21.152 15.582 19.602 c 15.797 19.199
 15.996 18.762 16.176 18.293 c 16.172 18.293 l 15.047 18.047 13.902 17.902
 12.75 17.863 c h
18.082 17.262 m 18.938 17.539 19.723 17.875 20.43 18.262 c 21.625 16.66
 22.336 14.746 22.473 12.75 c 18.738 12.75 l 18.691 14.273 18.473 15.789
 18.082 17.262 c 22.473 11.25 m 22.336 9.254 21.625 7.34 20.43 5.738 c 19.727
 6.125 18.938 6.461 18.082 6.738 c 18.453 8.117 18.684 9.645 18.738 11.25
 c h
16.906 3.691 m 17.172 4.195 17.414 4.73 17.629 5.309 c 18.242 5.109 18.844
 4.863 19.422 4.574 c 18.445 3.598 17.285 2.82 16.008 2.293 c 16.336 2.719
 16.637 3.188 16.902 3.691 c 16.172 5.707 m 16 5.258 15.805 4.82 15.582 
4.398 c 14.754 2.844 13.754 1.922 12.75 1.617 c 12.75 6.137 l 13.965 6.09
 15.117 5.941 16.172 5.707 c h
16.172 5.707 m f
Q Q
showpage
%%Trailer
%%EOF
