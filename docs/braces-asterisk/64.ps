%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 36 rectclip
1 0 0 -1 0 48 cm q
0 g
3.344 24.188 m 3.344 23.699 l 6.359 23.395 7.836 21.855 7.836 18.898 c 
7.832 13.508 l 7.832 10.227 9.004 8.895 11.895 8.895 c 12.715 8.895 l 12.715
 6 l 11.586 6 l 6.75 6 4.469 8.277 4.469 13.055 c 4.469 17.625 l 4.469 20.906
 3.34 21.992 0 21.992 c 0 25.891 l 3.344 25.891 4.469 26.977 4.469 30.258
 c 4.469 34.828 l 4.469 39.605 6.746 41.883 11.586 41.883 c 12.715 41.883
 l 12.715 38.992 l 11.895 38.992 l 9.004 38.992 7.832 37.66 7.832 34.379
 c 7.832 28.988 l 7.832 26.035 6.355 24.496 3.34 24.188 c 44.656 23.699 
m 44.656 24.191 l 41.641 24.5 40.164 26.039 40.164 28.992 c 40.164 34.387
 l 40.164 37.668 38.992 39 36.102 39 c 35.281 39 l 35.281 41.891 l 36.41
 41.891 l 41.25 41.891 43.527 39.613 43.527 34.836 c 43.527 30.266 l 43.527
 26.984 44.656 25.898 47.996 25.898 c 47.996 22 l 44.652 22 43.527 20.914
 43.527 17.633 c 43.531 13.055 l 43.531 8.277 41.25 6 36.414 6 c 35.285 
6 l 35.285 8.891 l 36.105 8.891 l 38.996 8.891 40.168 10.223 40.168 13.504
 c 40.168 18.898 l 40.168 21.852 41.645 23.391 44.66 23.699 c 22.5 34.5 
m 22.5 27.621 l 17.637 32.484 l 15.516 30.363 l 20.375 25.5 l 13.5 25.5 
l 13.5 22.5 l 20.379 22.5 l 15.516 17.637 l 17.637 15.516 l 22.5 20.375 
l 22.5 13.5 l 25.5 13.5 l 25.5 20.379 l 30.363 15.516 l 32.484 17.637 l 
27.625 22.5 l 34.5 22.5 l 34.5 25.5 l 27.621 25.5 l 32.484 30.363 l 30.363
 32.484 l 25.5 27.625 l 25.5 34.5 l h
22.5 34.5 m f*
Q Q
showpage
%%Trailer
%%EOF
