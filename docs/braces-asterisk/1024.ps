%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 97 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 97 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 97 768 575 rectclip
1 0 0 -1 0 768 cm q
0 g
53.473 387.023 m 53.473 379.199 l 101.711 374.305 125.328 349.68 125.328
 302.398 c 125.328 216.145 l 125.328 163.633 144.047 142.32 190.32 142.32
 c 203.426 142.32 l 203.426 96 l 185.379 96 l 108 96 71.52 132.434 71.52
 208.895 c 71.52 282.047 l 71.52 334.559 53.473 351.934 0 351.934 c 0 414.285
 l 53.473 414.285 71.52 431.66 71.52 484.172 c 71.52 557.324 l 71.52 633.789
 107.953 670.219 185.375 670.219 c 203.422 670.219 l 203.422 623.945 l 190.316
 623.945 l 144.043 623.945 125.324 602.633 125.324 550.121 c 125.328 463.824
 l 125.328 416.594 101.711 391.969 53.473 387.023 c 714.527 379.199 m 714.527
 387.07 l 666.289 392.016 642.672 416.637 642.672 463.871 c 642.672 550.176
 l 642.672 602.688 623.953 624 577.68 624 c 564.574 624 l 564.574 670.273
 l 582.621 670.273 l 660.047 670.273 696.477 633.84 696.477 557.379 c 696.477
 484.227 l 696.477 431.715 714.523 414.34 767.996 414.34 c 767.996 351.941
 l 714.523 351.941 696.477 334.566 696.477 282.055 c 696.48 208.895 l 696.48
 132.434 660 96 582.625 96 c 564.578 96 l 564.578 142.273 l 577.684 142.273
 l 623.957 142.273 642.676 163.586 642.676 216.098 c 642.672 302.398 l 642.672
 349.629 666.289 374.254 714.527 379.199 c 360 552 m 360 441.938 l 282.191
 519.746 l 248.254 485.809 l 326.016 408 l 216 408 l 216 360 l 326.062 360
 l 248.258 282.191 l 282.195 248.254 l 360 326.016 l 360 216 l 408 216 l
 408 326.062 l 485.809 248.254 l 519.746 282.191 l 441.984 360 l 552 360
 l 552 408 l 441.938 408 l 519.746 485.809 l 485.809 519.746 l 408 441.984
 l 408 552 l h
360 552 m f*
Q Q
showpage
%%Trailer
%%EOF
