%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
6.684 48.379 m 6.684 47.398 l 12.715 46.785 15.664 43.707 15.664 37.797
 c 15.664 27.02 l 15.664 20.457 18.004 17.793 23.789 17.793 c 25.426 17.793
 l 25.43 12 l 23.172 12 l 13.5 12 8.941 16.555 8.941 26.113 c 8.941 35.258
 l 8.941 41.82 6.684 43.992 0 43.992 c 0 51.785 l 6.684 51.785 8.941 53.957
 8.941 60.52 c 8.941 69.664 l 8.941 79.223 13.496 83.777 23.172 83.777 c
 25.43 83.777 l 25.43 77.992 l 23.793 77.992 l 18.008 77.992 15.668 75.328
 15.668 68.766 c 15.664 57.977 l 15.664 52.074 12.711 48.996 6.684 48.375
 c 89.316 47.398 m 89.316 48.383 l 83.285 49 80.336 52.078 80.336 57.984
 c 80.336 68.773 l 80.336 75.336 77.996 78 72.211 78 c 70.574 78 l 70.574
 83.785 l 72.832 83.785 l 82.512 83.785 87.062 79.23 87.062 69.672 c 87.062
 60.527 l 87.062 53.965 89.32 51.793 96.004 51.793 c 96.004 43.992 l 89.32
 43.992 87.062 41.82 87.062 35.258 c 87.059 26.113 l 87.059 16.555 82.5 
12 72.828 12 c 70.57 12 l 70.57 17.785 l 72.207 17.785 l 77.992 17.785 80.332
 20.449 80.332 27.012 c 80.336 37.801 l 80.336 43.703 83.289 46.781 89.316
 47.402 c 45 69 m 45 55.242 l 35.273 64.969 l 31.031 60.727 l 40.754 51 
l 27 51 l 27 45 l 40.758 45 l 31.031 35.273 l 35.273 31.031 l 45 40.754 
l 45 27 l 51 27 l 51 40.758 l 60.727 31.031 l 64.969 35.273 l 55.246 45 
l 69 45 l 69 51 l 55.242 51 l 64.969 60.727 l 60.727 64.969 l 51 55.246 
l 51 69 l h
45 69 m f*
Q Q
showpage
%%Trailer
%%EOF
