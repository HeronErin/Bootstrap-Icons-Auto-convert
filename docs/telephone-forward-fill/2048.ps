%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
180.961 49.055 m 203.422 26.629 231.793 11.043 262.773 4.117 c 293.75 -2.809
 326.059 -0.793 355.934 9.934 c 385.809 20.66 412.023 39.656 431.52 64.703
 c 603.84 286.078 l 635.426 326.688 646.559 379.582 634.078 429.504 c 581.566
 639.742 l 576.086 661.891 582.562 685.297 598.656 701.473 c 834.527 937.344
 l 850.723 953.469 874.172 959.949 896.352 954.434 c 1106.496 901.922 l 
1131.133 895.797 1156.84 895.336 1181.68 900.574 c 1206.52 905.812 1229.852
 916.609 1249.922 932.16 c 1471.297 1104.383 l 1550.883 1166.305 1558.176
 1283.902 1486.945 1355.039 c 1387.68 1454.305 l 1316.641 1525.344 1210.465
 1556.543 1111.488 1521.695 c 858.113 1432.664 628.082 1287.625 438.527 
1097.375 c 248.293 907.848 103.254 677.852 14.207 424.512 c -20.547 325.633
 10.656 219.359 81.695 148.32 c h
1214.016 62.016 m 1223.02 52.988 1235.25 47.914 1248 47.914 c 1260.75 47.914
 1272.98 52.988 1281.984 62.016 c 1521.984 302.016 l 1531.012 311.02 1536.086
 323.25 1536.086 336 c 1536.086 348.75 1531.012 360.98 1521.984 369.984 
c 1281.984 609.984 l 1269.844 622.125 1252.145 626.867 1235.562 622.422 
c 1218.977 617.98 1206.02 605.023 1201.578 588.438 c 1197.133 571.855 1201.875
 554.156 1214.016 542.016 c 1372.129 384 l 912 384 l 894.852 384 879.004
 374.852 870.43 360 c 861.855 345.148 861.855 326.852 870.43 312 c 879.004
 297.148 894.852 288 912 288 c 1372.129 288 l 1214.016 129.984 l 1204.988
 120.98 1199.914 108.75 1199.914 96 c 1199.914 83.25 1204.988 71.02 1214.016
 62.016 c f*
Q Q
showpage
%%Trailer
%%EOF
