%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
90.48 24.527 m 107.469 7.562 130.922 -1.293 154.883 0.203 c 178.844 1.699
 201.012 13.406 215.762 32.352 c 301.922 143.039 l 317.715 163.344 323.281
 189.793 317.043 214.75 c 290.785 319.871 l 288.043 330.945 291.281 342.648
 299.328 350.734 c 417.266 468.672 l 425.363 476.734 437.086 479.977 448.176
 477.215 c 553.246 450.957 l 553.246 450.961 l 578.207 444.758 604.633 450.328
 624.961 466.078 c 735.648 552.191 l 775.441 583.152 779.09 641.953 743.473
 677.52 c 693.84 727.152 l 658.32 762.672 605.23 778.273 555.742 760.848
 c 429.055 716.332 314.043 643.812 219.266 548.688 c 124.145 453.926 51.625
 338.926 7.105 212.258 c -10.27 162.816 5.328 109.684 40.848 74.16 c h
607.008 31.008 m 611.512 26.492 617.625 23.957 624 23.957 c 630.375 23.957
 636.488 26.492 640.992 31.008 c 760.992 151.008 l 765.508 155.512 768.043
 161.625 768.043 168 c 768.043 174.375 765.508 180.488 760.992 184.992 c
 640.992 304.992 l 634.922 311.062 626.074 313.434 617.781 311.211 c 609.488
 308.988 603.012 302.512 600.789 294.219 c 598.566 285.926 600.938 277.078
 607.008 271.008 c 686.062 192 l 456 192 l 447.426 192 439.504 187.426 435.215
 180 c 430.93 172.574 430.93 163.426 435.215 156 c 439.504 148.574 447.426
 144 456 144 c 686.062 144 l 607.008 64.992 l 602.492 60.488 599.957 54.375
 599.957 48 c 599.957 41.625 602.492 35.512 607.008 31.008 c f*
Q Q
showpage
%%Trailer
%%EOF
