%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 960 m 818.922 960 867.758 939.773 903.766 903.766 c 939.773 867.758
 960 818.922 960 768 c 960 717.078 939.773 668.242 903.766 632.234 c 867.758
 596.227 818.922 576 768 576 c 717.078 576 668.242 596.227 632.234 632.234
 c 596.227 668.242 576 717.078 576 768 c 576 818.922 596.227 867.758 632.234
 903.766 c 668.242 939.773 717.078 960 768 960 c f
0 384 m 0 358.539 10.113 334.121 28.117 316.117 c 46.121 298.113 70.539
 288 96 288 c 1440 288 l 1465.461 288 1489.879 298.113 1507.883 316.117 
c 1525.887 334.121 1536 358.539 1536 384 c 1536 1152 l 1536 1177.461 1525.887
 1201.879 1507.883 1219.883 c 1489.879 1237.887 1465.461 1248 1440 1248 
c 96 1248 l 70.539 1248 46.121 1237.887 28.117 1219.883 c 10.113 1201.879
 0 1177.461 0 1152 c h
288 384 m 288 417.703 279.129 450.812 262.277 480 c 245.426 509.188 221.188
 533.426 192 550.277 c 162.812 567.129 129.703 576 96 576 c 96 960 l 129.703
 960 162.812 968.871 192 985.723 c 221.188 1002.574 245.426 1026.812 262.277
 1056 c 279.129 1085.188 288 1118.297 288 1152 c 1248 1152 l 1248 1101.078
 1268.227 1052.242 1304.234 1016.234 c 1340.242 980.227 1389.078 960 1440
 960 c 1440 576 l 1389.078 576 1340.242 555.773 1304.234 519.766 c 1268.227
 483.758 1248 434.922 1248 384 c h
288 384 m f
Q Q
showpage
%%Trailer
%%EOF
