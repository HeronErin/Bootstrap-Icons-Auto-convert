%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 271 0 1264 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 271 0 1264 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 271 0 993 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 288 m 819.445 288 866.984 260.555 892.707 216 c 918.43 171.445 918.43
 116.555 892.707 72 c 866.984 27.445 819.445 0 768 0 c 716.555 0 669.016
 27.445 643.293 72 c 617.57 116.555 617.57 171.445 643.293 216 c 669.016
 260.555 716.555 288 768 288 c f
569.281 643.586 m 488.066 1454.883 l 488.062 1454.879 l 484.582 1480.996
 495.301 1506.988 516.176 1523.062 c 537.055 1539.137 564.922 1542.852 589.281
 1532.805 c 613.641 1522.762 630.789 1500.484 634.273 1474.367 c 712.035
 1007.328 l 712.031 1007.328 l 714.91 989.461 726.148 974.043 742.281 965.844
 c 758.414 957.641 777.492 957.641 793.625 965.844 c 809.754 974.043 820.996
 989.461 823.871 1007.328 c 901.633 1474.367 l 905.113 1500.484 922.262 
1522.762 946.621 1532.805 c 970.98 1542.852 998.848 1539.137 1019.727 1523.062
 c 1040.605 1506.988 1051.32 1480.996 1047.84 1454.879 c 966.719 643.582
 l 966.719 643.586 l 962.551 600.828 977.688 558.441 1008 528 c 1248 219.266
 l 1263.949 197.922 1267.629 169.816 1257.719 145.09 c 1247.805 120.359 
1225.73 102.578 1199.457 98.16 c 1173.188 93.746 1146.512 103.328 1129.055
 123.457 c 924.863 368.641 l 916.758 379.117 905.738 386.969 893.184 391.199
 c 871.105 398.305 829.344 408.094 768 408.094 c 706.559 408.094 664.895
 398.301 642.719 391.199 c 630.203 386.949 619.215 379.102 611.137 368.641
 c 406.945 123.457 l 389.652 102.766 362.734 92.719 336.113 97.02 c 309.496
 101.32 287.113 119.336 277.219 144.422 c 267.324 169.508 271.387 197.949
 287.902 219.266 c 527.902 528 l 558.336 558.336 573.504 600.77 569.184 
643.586 c h
569.281 643.586 m f
Q Q
showpage
%%Trailer
%%EOF
