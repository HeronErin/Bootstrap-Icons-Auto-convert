%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 4 0 20 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 4 0 20 24
24 24 cairo_set_page_size
%%EndPageSetup
q 4 0 16 24 rectclip
1 0 0 -1 0 24 cm q
0 g
12 4.5 m 13.242 4.5 14.25 3.492 14.25 2.25 c 14.25 1.008 13.242 0 12 0 
c 10.758 0 9.75 1.008 9.75 2.25 c 9.75 3.492 10.758 4.5 12 4.5 c f
8.895 10.055 m 7.625 22.73 l 7.625 22.734 l 7.543 23.363 7.984 23.941 8.617
 24.027 c 9.246 24.109 9.828 23.668 9.91 23.035 c 11.125 15.738 l 11.195
 15.312 11.566 14.996 12 14.996 c 12.434 14.996 12.805 15.312 12.871 15.738
 c 14.086 23.035 l 14.09 23.035 l 14.172 23.668 14.75 24.109 15.383 24.027
 c 16.012 23.941 16.457 23.363 16.371 22.734 c 15.105 10.059 l 15.105 10.055
 l 15.039 9.387 15.277 8.727 15.75 8.25 c 19.5 3.426 l 19.883 2.91 19.793
 2.184 19.293 1.781 c 18.793 1.379 18.062 1.445 17.641 1.93 c 14.449 5.762
 l 14.324 5.922 14.152 6.047 13.957 6.113 c 13.613 6.223 12.961 6.379 12
 6.379 c 11.039 6.379 10.391 6.227 10.043 6.113 c 9.848 6.047 9.676 5.922
 9.551 5.762 c 6.359 1.93 l 5.941 1.43 5.199 1.355 4.695 1.766 c 4.188 2.172
 4.102 2.91 4.5 3.426 c 8.25 8.25 l 8.727 8.723 8.961 9.387 8.895 10.055
 c h
8.895 10.055 m f
Q Q
showpage
%%Trailer
%%EOF
