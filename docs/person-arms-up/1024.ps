%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 135 0 632 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 135 0 632 768
768 768 cairo_set_page_size
%%EndPageSetup
q 135 0 497 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 144 m 409.723 144 433.492 130.277 446.355 108 c 459.215 85.723 459.215
 58.277 446.355 36 c 433.492 13.723 409.723 0 384 0 c 358.277 0 334.508 
13.723 321.645 36 c 308.785 58.277 308.785 85.723 321.645 108 c 334.508 
130.277 358.277 144 384 144 c f
284.641 321.793 m 244.031 727.441 l 242.293 740.5 247.648 753.496 258.09
 761.531 c 268.527 769.566 282.461 771.426 294.641 766.402 c 306.82 761.383
 315.395 750.242 317.137 737.184 c 356.016 503.664 l 357.453 494.73 363.074
 487.023 371.141 482.922 c 379.207 478.82 388.746 478.82 396.812 482.922
 c 404.879 487.023 410.496 494.73 411.938 503.664 c 450.816 737.184 l 452.555
 750.242 461.133 761.383 473.312 766.402 c 485.492 771.426 499.426 769.566
 509.863 761.531 c 520.301 753.496 525.66 740.5 523.922 727.441 c 483.363
 321.793 l 483.359 321.793 l 481.273 300.414 488.844 279.223 504 264 c 624
 109.633 l 631.973 98.961 633.816 84.91 628.859 72.543 c 623.902 60.18 612.867
 51.289 599.73 49.082 c 586.594 46.871 573.254 51.664 564.527 61.727 c 462.434
 184.32 l 458.379 189.559 452.867 193.484 446.594 195.602 c 435.555 199.152
 414.672 204.051 384 204.051 c 353.281 204.051 332.449 199.156 321.359 195.602
 c 315.102 193.477 309.609 189.551 305.566 184.32 c 203.473 61.727 l 194.828
 51.383 181.367 46.359 168.059 48.508 c 154.746 50.66 143.555 59.668 138.609
 72.211 c 133.664 84.754 135.691 98.973 143.953 109.633 c 263.953 264 l 
279.168 279.168 286.754 300.383 284.594 321.793 c h
284.641 321.793 m f
Q Q
showpage
%%Trailer
%%EOF
