%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 33 192 169
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 33 192 169
192 192 cairo_set_page_size
%%EndPageSetup
q 0 33 192 136 rectclip
1 0 0 -1 0 192 cm q
0 g
96.613 23.988 m 97.68 23.988 l 107.543 24.023 157.523 24.383 171 28.008
 c 179.289 30.258 185.758 36.75 187.98 45.047 c 189.191 49.605 190.043 55.645
 190.621 61.871 c 190.742 63.117 l 191.008 66.238 l 191.105 67.484 l 191.887
 78.453 191.98 88.723 191.992 90.969 c 191.992 91.867 l 191.98 94.195 191.871
 105.164 191.008 116.586 c 190.91 117.848 l 190.801 119.094 l 190.199 125.957
 189.312 132.773 187.98 137.789 c 187.98 137.797 l 185.758 146.094 179.289
 152.586 171 154.836 c 157.078 158.578 104.172 158.844 96.84 158.855 c 95.137
 158.855 l 91.43 158.855 76.094 158.785 60.012 158.23 c 57.973 158.16 l 
56.93 158.113 l 52.828 157.941 l 39.508 157.352 26.824 156.406 20.98 154.82
 c 20.977 154.824 l 12.688 152.574 6.223 146.09 3.996 137.797 c 2.664 132.793
 1.777 125.965 1.176 119.102 c 1.078 117.84 l 0.98 116.594 l 0.984 116.594
 l 0.387 108.461 0.059 100.312 0 92.16 c 0 90.684 l 0.023 88.105 0.121 79.188
 0.77 69.348 c 0.855 68.113 l 0.891 67.488 l 0.988 66.242 l 1.254 63.121
 l 1.375 61.875 l 1.949 55.648 2.805 49.598 4.016 45.051 c 4.008 45.047 
l 6.23 36.75 12.699 30.258 20.988 28.008 c 26.832 26.449 39.516 25.488 52.836
 24.887 c 54.875 24.801 l 57.969 24.695 l 60.02 24.609 l 60.023 24.613 l
 71.445 24.246 82.871 24.039 94.297 24 c h
76.801 62.508 m 76.801 120.324 l 126.684 91.43 l h
76.801 62.508 m f
Q Q
showpage
%%Trailer
%%EOF
