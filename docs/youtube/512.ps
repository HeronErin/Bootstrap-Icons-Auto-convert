%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 66 384 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 66 384 337
384 384 cairo_set_page_size
%%EndPageSetup
q 0 66 384 271 rectclip
1 0 0 -1 0 384 cm q
0 g
193.223 47.977 m 195.359 47.977 l 215.086 48.047 315.047 48.77 342 56.016
 c 358.582 60.52 371.516 73.5 375.961 90.098 c 378.387 99.219 380.09 111.289
 381.242 123.746 c 381.48 126.242 l 382.008 132.48 l 382.199 134.977 l 383.758
 156.914 383.953 177.457 383.977 181.945 c 383.977 183.746 l 383.953 188.402
 383.738 210.34 382.008 233.188 c 381.816 235.707 l 381.602 238.203 l 380.402
 251.93 378.625 265.562 375.961 275.594 c 371.516 292.188 358.582 305.172
 342 309.672 c 314.16 317.16 208.344 317.688 193.68 317.711 c 190.273 317.711
 l 182.859 317.711 152.184 317.566 120.027 316.465 c 115.949 316.32 l 113.859
 316.223 l 105.648 315.887 l 79.008 314.711 53.641 312.816 41.953 309.648
 c 25.375 305.152 12.441 292.18 7.992 275.594 c 5.328 265.586 3.551 251.93
 2.352 238.203 c 2.16 235.68 l 1.969 233.184 l 0.777 216.922 0.121 200.625
 0 184.32 c 0 181.367 l 0.047 176.207 0.238 158.375 1.535 138.695 c 1.703
 136.223 l 1.773 134.977 l 1.965 132.48 l 2.492 126.242 l 2.73 123.746 l
 3.883 111.289 5.586 99.195 8.012 90.098 c 8.016 90.098 l 12.461 73.5 25.395
 60.52 41.977 56.016 c 53.664 52.895 79.031 50.977 105.672 49.777 c 109.75
 49.609 l 113.879 49.465 l 115.941 49.395 l 120.047 49.227 l 120.047 49.223
 l 142.891 48.488 165.738 48.082 188.594 48 c h
153.602 125.016 m 153.602 240.648 l 253.371 182.855 l h
153.602 125.016 m f
Q Q
showpage
%%Trailer
%%EOF
