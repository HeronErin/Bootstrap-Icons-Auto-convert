%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 720 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 720 384
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 720 288 rectclip
1 0 0 -1 0 768 cm q
0 g
0 552 m 0 545.637 2.527 539.531 7.031 535.031 c 11.531 530.527 17.637 528
 24 528 c 120 528 l 126.363 528 132.469 530.527 136.969 535.031 c 141.473
 539.531 144 545.637 144 552 c 144 648 l 144 654.363 141.473 660.469 136.969
 664.969 c 132.469 669.473 126.363 672 120 672 c 24 672 l 17.637 672 11.531
 669.473 7.031 664.969 c 2.527 660.469 0 654.363 0 648 c h
192 408 m 192 401.637 194.527 395.531 199.031 391.031 c 203.531 386.527
 209.637 384 216 384 c 312 384 l 318.363 384 324.469 386.527 328.969 391.031
 c 333.473 395.531 336 401.637 336 408 c 336 648 l 336 654.363 333.473 660.469
 328.969 664.969 c 324.469 669.473 318.363 672 312 672 c 216 672 l 209.637
 672 203.531 669.473 199.031 664.969 c 194.527 660.469 192 654.363 192 648
 c h
384 648 m 384 641.637 386.527 635.531 391.031 631.031 c 395.531 626.527
 401.637 624 408 624 c 504 624 l 512.574 624 520.496 628.574 524.785 636
 c 529.07 643.426 529.07 652.574 524.785 660 c 520.496 667.426 512.574 672
 504 672 c 408 672 l 401.637 672 395.531 669.473 391.031 664.969 c 386.527
 660.469 384 654.363 384 648 c 576 648 m 576 641.637 578.527 635.531 583.031
 631.031 c 587.531 626.527 593.637 624 600 624 c 696 624 l 704.574 624 712.496
 628.574 716.785 636 c 721.07 643.426 721.07 652.574 716.785 660 c 712.496
 667.426 704.574 672 696 672 c 600 672 l 593.637 672 587.531 669.473 583.031
 664.969 c 578.527 660.469 576 654.363 576 648 c f
Q Q
showpage
%%Trailer
%%EOF
