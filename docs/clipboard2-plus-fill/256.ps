%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
120 6 m 120 4.41 119.367 2.883 118.242 1.758 c 117.117 0.633 115.59 0 114
 0 c 78 0 l 74.688 0 72 2.688 72 6 c 72 7.59 71.367 9.117 70.242 10.242 
c 69.117 11.367 67.59 12 66 12 c 62.688 12 60 14.688 60 18 c 60 24 l 60 
25.59 60.633 27.117 61.758 28.242 c 62.883 29.367 64.41 30 66 30 c 126 30
 l 127.59 30 129.117 29.367 130.242 28.242 c 131.367 27.117 132 25.59 132
 24 c 132 18 l 132 16.41 131.367 14.883 130.242 13.758 c 129.117 12.633 
127.59 12 126 12 c 122.688 12 120 9.312 120 6 c f
49.02 12 m 42 12 l 37.227 12 32.648 13.895 29.273 17.273 c 25.895 20.648
 24 25.227 24 30 c 24 174 l 24 178.773 25.895 183.352 29.273 186.727 c 32.648
 190.105 37.227 192 42 192 c 150 192 l 154.773 192 159.352 190.105 162.727
 186.727 c 166.105 183.352 168 178.773 168 174 c 168 30 l 168 25.227 166.105
 20.648 162.727 17.273 c 159.352 13.895 154.773 12 150 12 c 142.98 12 l 
143.652 13.887 143.992 15.887 144 18 c 144 24 l 144 28.773 142.105 33.352
 138.727 36.727 c 135.352 40.105 130.773 42 126 42 c 66 42 l 61.227 42 56.648
 40.105 53.273 36.727 c 49.895 33.352 48 28.773 48 24 c 48 18 l 48.008 15.887
 48.348 13.887 49.02 12 c 102 78 m 102 96 l 120 96 l 123.312 96 126 98.688
 126 102 c 126 105.312 123.312 108 120 108 c 102 108 l 102 126 l 102 129.312
 99.312 132 96 132 c 92.688 132 90 129.312 90 126 c 90 108 l 72 108 l 68.688
 108 66 105.312 66 102 c 66 98.688 68.688 96 72 96 c 90 96 l 90 78 l 90 
74.688 92.688 72 96 72 c 99.312 72 102 74.688 102 78 c f
Q Q
showpage
%%Trailer
%%EOF
