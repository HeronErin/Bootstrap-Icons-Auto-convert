%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1508 1508
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1508 1508
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1508 1508 rectclip
1 0 0 -1 0 1536 cm q
0 g
1281.984 62.016 m 1260.25 40.254 1230.754 28.027 1200 28.027 c 1169.246
 28.027 1139.75 40.254 1118.016 62.016 c 816 364.129 l 753.984 302.016 l
 741.844 289.875 724.145 285.133 707.562 289.578 c 690.977 294.02 678.02
 306.977 673.578 323.562 c 669.133 340.145 673.875 357.844 686.016 369.984
 c 796.129 480 l 110.016 1166.016 l 101.02 1175.035 95.977 1187.262 96 1200
 c 96 1372.129 l 14.016 1454.016 l 1.891 1466.156 -2.836 1483.844 1.617 
1500.414 c 6.07 1516.984 19.027 1529.922 35.602 1534.352 c 52.18 1538.781
 69.859 1534.031 81.984 1521.887 c 163.871 1440 l 336 1440 l 348.738 1440.023
 360.965 1434.98 369.984 1425.984 c 1056 739.871 l 1166.016 849.984 l 1178.156
 862.125 1195.855 866.867 1212.438 862.422 c 1229.023 857.98 1241.98 845.023
 1246.422 828.438 c 1250.867 811.855 1246.125 794.156 1233.984 782.016 c
 1171.871 720 l 1473.984 417.984 l 1495.746 396.25 1507.973 366.754 1507.973
 336 c 1507.973 305.246 1495.746 275.75 1473.984 254.016 c h
192 1219.871 m 864 547.871 l 988.129 672 l 316.129 1344 l 192 1344 l h
192 1219.871 m f
Q Q
showpage
%%Trailer
%%EOF
