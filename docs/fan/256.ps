%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
120 36 m 120 51.758 116.352 66.098 110.398 76.801 c 105.305 72.977 98.898
 71.336 92.594 72.238 c 89.234 60.453 81.672 47.758 70.539 36.609 c 70.535
 36.613 l 68.648 34.715 66.684 32.898 64.645 31.164 c 74.422 26.441 85.141
 23.992 96 24 c 104.293 24 112.262 25.402 119.676 27.984 c 119.891 30.617
 120 33.289 120 36 c 120 96 m 120 96.879 119.953 97.746 119.855 98.605 c
 132.07 98.379 146.254 94.371 159.828 86.535 c 159.828 86.531 l 162.168 
85.184 164.449 83.738 166.668 82.199 c 163.02 63.492 152.102 46.996 136.309
 36.324 c 135.82 38.906 135.242 41.465 134.566 44.004 c 130.488 59.23 123.238
 72.156 114.695 80.953 c 118.02 85.07 120 90.312 120 96 c 118.355 104.734
 m 116.027 110.711 111.402 115.5 105.516 118.043 c 111.816 128.484 122.375
 138.742 135.938 146.566 c 138.336 147.957 140.758 149.227 143.199 150.371
 c 143.195 150.371 l 157.629 137.848 166.492 120.102 167.832 101.039 c 165.344
 101.918 162.781 102.715 160.141 103.426 c 144.973 107.492 130.227 107.699
 118.355 104.746 c h
96 120 m 90.602 120 85.609 118.211 81.602 115.199 c 75.672 125.879 72.051
 140.184 72.051 155.891 c 72.051 158.66 72.16 161.371 72.375 164.027 c 72.371
 164.027 l 79.973 166.664 87.957 168.004 96 168 c 107.281 168 117.961 165.406
 127.477 160.777 c 125.41 159.027 123.422 157.195 121.512 155.281 c 110.41
 144.168 102.852 131.508 99.48 119.762 c 98.352 119.922 97.191 120 96 120
 c 72 96 m 72 95.039 72.055 94.086 72.168 93.133 c 59.93 93.336 45.707 97.344
 32.09 105.219 c 32.09 105.215 l 29.758 106.555 27.484 107.992 25.273 109.523
 c 28.859 128.293 39.758 144.863 55.57 155.594 c 56.055 152.957 56.648 150.344
 57.348 147.758 c 61.426 132.555 68.629 119.652 77.148 110.859 c 77.148 
110.855 l 73.812 106.621 72 101.391 72 96 c 31.836 88.414 m 47.039 84.336
 61.812 84.152 73.691 87.129 c 76.043 81.199 80.688 76.449 86.531 73.93 
c 80.242 63.441 69.66 53.133 56.039 45.273 c 56.039 45.277 l 53.719 43.93
 51.34 42.68 48.91 41.531 c 34.461 54.027 25.57 71.75 24.191 90.805 c 26.664
 89.926 29.211 89.129 31.836 88.418 c 96 108 m 102.629 108 108 102.629 108
 96 c 108 89.371 102.629 84 96 84 c 89.371 84 84 89.371 84 96 c 84 102.629
 89.371 108 96 108 c f
96 180 m 65.988 180 38.258 163.988 23.254 138 c 8.25 112.012 8.25 79.988
 23.254 54 c 38.258 28.012 65.988 12 96 12 c 126.012 12 153.742 28.012 168.746
 54 c 183.75 79.988 183.75 112.012 168.746 138 c 153.742 163.988 126.012
 180 96 180 c 96 192 m 130.297 192 161.988 173.703 179.137 144 c 196.289
 114.297 196.289 77.703 179.137 48 c 161.988 18.297 130.297 0 96 0 c 61.703
 0 30.012 18.297 12.863 48 c -4.289 77.703 -4.289 114.297 12.863 144 c 30.012
 173.703 61.703 192 96 192 c f
Q Q
showpage
%%Trailer
%%EOF
