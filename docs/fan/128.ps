%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
60 18 m 60 25.879 58.176 33.047 55.199 38.398 c 52.652 36.488 49.449 35.668
 46.297 36.121 c 44.617 30.23 40.836 23.883 35.27 18.309 c 35.27 18.305 
l 34.324 17.355 33.34 16.449 32.32 15.582 c 37.211 13.223 42.57 11.996 48
 12 c 52.145 12 56.129 12.703 59.84 13.992 c 59.945 15.309 60 16.645 60 
18 c 60 48 m 60 48.441 59.977 48.875 59.93 49.301 c 66.039 49.188 73.129
 47.184 79.914 43.266 c 81.082 42.594 82.227 41.871 83.336 41.102 c 81.508
 31.746 76.051 23.496 68.152 18.16 c 67.91 19.453 67.621 20.734 67.285 22.004
 c 65.246 29.617 61.621 36.078 57.348 40.477 c 59.008 42.535 60 45.156 60
 48 c 59.18 52.367 m 58.012 55.355 55.699 57.75 52.758 59.023 c 55.906 64.242
 61.188 69.375 67.969 73.285 c 69.168 73.98 70.379 74.613 71.598 75.188 
c 78.816 68.926 83.246 60.051 83.914 50.52 c 82.672 50.961 81.387 51.359
 80.066 51.715 c 72.48 53.75 65.109 53.852 59.176 52.375 c h
48 60 m 45.301 60 42.805 59.105 40.801 57.602 c 37.836 62.941 36.023 70.094
 36.023 77.949 c 36.023 79.332 36.078 80.688 36.184 82.016 c 36.188 82.016
 l 39.984 83.332 43.98 84.004 48 84 c 53.641 84 58.98 82.703 63.738 80.387
 c 62.707 79.516 61.711 78.598 60.758 77.641 c 55.207 72.086 51.43 65.754
 49.742 59.879 c 49.176 59.961 48.598 60 48 60 c 36 48 m 36 47.52 36.027
 47.043 36.086 46.566 c 29.965 46.668 22.855 48.672 16.047 52.609 c 16.043
 52.609 l 14.879 53.277 13.742 53.996 12.637 54.762 c 14.43 64.145 19.879
 72.434 27.785 77.797 c 28.027 76.477 28.324 75.172 28.676 73.879 c 30.715
 66.277 34.316 59.828 38.574 55.43 c 36.906 53.312 36 50.695 36 48 c 15.918
 44.207 m 23.52 42.168 30.906 42.078 36.848 43.566 c 38.023 40.602 40.344
 38.227 43.27 36.965 c 40.125 31.723 34.832 26.566 28.023 22.637 c 28.02
 22.637 l 26.859 21.965 25.668 21.34 24.457 20.766 c 17.23 27.012 12.785
 35.875 12.098 45.402 c 13.332 44.961 14.609 44.562 15.918 44.207 c 48 54
 m 51.312 54 54 51.312 54 48 c 54 44.688 51.312 42 48 42 c 44.688 42 42 
44.688 42 48 c 42 51.312 44.688 54 48 54 c f
48 90 m 32.996 90 19.129 81.996 11.625 69 c 4.125 56.004 4.125 39.996 11.625
 27 c 19.129 14.004 32.996 6 48 6 c 63.004 6 76.871 14.004 84.375 27 c 91.875
 39.996 91.875 56.004 84.375 69 c 76.871 81.996 63.004 90 48 90 c 48 96 
m 65.148 96 80.996 86.852 89.57 72 c 98.145 57.148 98.145 38.852 89.57 24
 c 80.996 9.148 65.148 0 48 0 c 30.852 0 15.004 9.148 6.43 24 c -2.145 38.852
 -2.145 57.148 6.43 72 c 15.004 86.852 30.852 96 48 96 c f
Q Q
showpage
%%Trailer
%%EOF
