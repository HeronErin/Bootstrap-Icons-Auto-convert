%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 45 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 45 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 45 48 rectclip
1 0 0 -1 0 48 cm q
0 g
15 0 m 39 0 l 40.59 0 42.117 0.633 43.242 1.758 c 44.367 2.883 45 4.41 
45 6 c 45 36 l 45 37.59 44.367 39.117 43.242 40.242 c 42.117 41.367 40.59
 42 39 42 c 39 43.59 38.367 45.117 37.242 46.242 c 36.117 47.367 34.59 48
 33 48 c 9 48 l 5.688 48 3 45.312 3 42 c 6 42 l 6 42.797 6.316 43.559 6.879
 44.121 c 7.441 44.684 8.203 45 9 45 c 33 45 l 33.797 45 34.559 44.684 35.121
 44.121 c 35.684 43.559 36 42.797 36 42 c 36 12 l 36 11.203 35.684 10.441
 35.121 9.879 c 34.559 9.316 33.797 9 33 9 c 9 9 l 7.344 9 6 10.344 6 12
 c 3 12 l 3 8.688 5.688 6 9 6 c 33 6 l 34.59 6 36.117 6.633 37.242 7.758
 c 38.367 8.883 39 10.41 39 12 c 39 39 l 39.797 39 40.559 38.684 41.121 
38.121 c 41.684 37.559 42 36.797 42 36 c 42 6 l 42 5.203 41.684 4.441 41.121
 3.879 c 40.559 3.316 39.797 3 39 3 c 15 3 l 13.344 3 12 4.344 12 6 c 9 
6 l 9 2.688 11.688 0 15 0 c f
3 18 m 3 16.5 l 3 15.672 3.672 15 4.5 15 c 5.328 15 6 15.672 6 16.5 c 6
 18 l 7.5 18 l 8.328 18 9 18.672 9 19.5 c 9 20.328 8.328 21 7.5 21 c 1.5
 21 l 0.672 21 0 20.328 0 19.5 c 0 18.672 0.672 18 1.5 18 c h
3 27 m 3 25.5 l 3 24.672 3.672 24 4.5 24 c 5.328 24 6 24.672 6 25.5 c 6
 27 l 7.5 27 l 8.328 27 9 27.672 9 28.5 c 9 29.328 8.328 30 7.5 30 c 1.5
 30 l 0.672 30 0 29.328 0 28.5 c 0 27.672 0.672 27 1.5 27 c h
3 34.5 m 3 36 l 1.5 36 l 0.672 36 0 36.672 0 37.5 c 0 38.328 0.672 39 1.5
 39 c 7.5 39 l 8.328 39 9 38.328 9 37.5 c 9 36.672 8.328 36 7.5 36 c 6 36
 l 6 34.5 l 6 33.672 5.328 33 4.5 33 c 3.672 33 3 33.672 3 34.5 c f
Q Q
showpage
%%Trailer
%%EOF
