%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 180 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 180 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 180 192 rectclip
1 0 0 -1 0 192 cm q
0 g
60 0 m 156 0 l 162.363 0 168.469 2.527 172.969 7.031 c 177.473 11.531 180
 17.637 180 24 c 180 144 l 180 150.363 177.473 156.469 172.969 160.969 c
 168.469 165.473 162.363 168 156 168 c 156 174.363 153.473 180.469 148.969
 184.969 c 144.469 189.473 138.363 192 132 192 c 36 192 l 29.637 192 23.531
 189.473 19.031 184.969 c 14.527 180.469 12 174.363 12 168 c 24 168 l 24
 171.184 25.266 174.234 27.516 176.484 c 29.766 178.734 32.816 180 36 180
 c 132 180 l 135.184 180 138.234 178.734 140.484 176.484 c 142.734 174.234
 144 171.184 144 168 c 144 48 l 144 44.816 142.734 41.766 140.484 39.516
 c 138.234 37.266 135.184 36 132 36 c 36 36 l 29.371 36 24 41.371 24 48 
c 12 48 l 12 41.637 14.527 35.531 19.031 31.031 c 23.531 26.527 29.637 24
 36 24 c 132 24 l 138.363 24 144.469 26.527 148.969 31.031 c 153.473 35.531
 156 41.637 156 48 c 156 156 l 159.184 156 162.234 154.734 164.484 152.484
 c 166.734 150.234 168 147.184 168 144 c 168 24 l 168 20.816 166.734 17.766
 164.484 15.516 c 162.234 13.266 159.184 12 156 12 c 60 12 l 53.371 12 48
 17.371 48 24 c 36 24 l 36 17.637 38.527 11.531 43.031 7.031 c 47.531 2.527
 53.637 0 60 0 c f
12 72 m 12 66 l 12 62.688 14.688 60 18 60 c 21.312 60 24 62.688 24 66 c
 24 72 l 30 72 l 33.312 72 36 74.688 36 78 c 36 81.312 33.312 84 30 84 c
 6 84 l 2.688 84 0 81.312 0 78 c 0 74.688 2.688 72 6 72 c h
12 108 m 12 102 l 12 98.688 14.688 96 18 96 c 21.312 96 24 98.688 24 102
 c 24 108 l 30 108 l 33.312 108 36 110.688 36 114 c 36 117.312 33.312 120
 30 120 c 6 120 l 2.688 120 0 117.312 0 114 c 0 110.688 2.688 108 6 108 
c h
12 138 m 12 144 l 6 144 l 2.688 144 0 146.688 0 150 c 0 153.312 2.688 156
 6 156 c 30 156 l 33.312 156 36 153.312 36 150 c 36 146.688 33.312 144 30
 144 c 24 144 l 24 138 l 24 134.688 21.312 132 18 132 c 14.688 132 12 134.688
 12 138 c f
Q Q
showpage
%%Trailer
%%EOF
