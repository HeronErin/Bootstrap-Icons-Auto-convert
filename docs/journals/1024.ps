%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 720 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 0 m 624 0 l 649.461 0 673.879 10.113 691.883 28.117 c 709.887 46.121
 720 70.539 720 96 c 720 576 l 720 601.461 709.887 625.879 691.883 643.883
 c 673.879 661.887 649.461 672 624 672 c 624 697.461 613.887 721.879 595.883
 739.883 c 577.879 757.887 553.461 768 528 768 c 144 768 l 118.539 768 94.121
 757.887 76.117 739.883 c 58.113 721.879 48 697.461 48 672 c 96 672 l 96
 684.73 101.059 696.938 110.059 705.941 c 119.062 714.941 131.27 720 144
 720 c 528 720 l 540.73 720 552.938 714.941 561.941 705.941 c 570.941 696.938
 576 684.73 576 672 c 576 192 l 576 179.27 570.941 167.062 561.941 158.059
 c 552.938 149.059 540.73 144 528 144 c 144 144 l 131.27 144 119.062 149.059
 110.059 158.059 c 101.059 167.062 96 179.27 96 192 c 48 192 l 48 166.539
 58.113 142.121 76.117 124.117 c 94.121 106.113 118.539 96 144 96 c 528 
96 l 553.461 96 577.879 106.113 595.883 124.117 c 613.887 142.121 624 166.539
 624 192 c 624 624 l 636.73 624 648.938 618.941 657.941 609.941 c 666.941
 600.938 672 588.73 672 576 c 672 96 l 672 83.27 666.941 71.062 657.941 
62.059 c 648.938 53.059 636.73 48 624 48 c 240 48 l 227.27 48 215.062 53.059
 206.059 62.059 c 197.059 71.062 192 83.27 192 96 c 144 96 l 144 70.539 
154.113 46.121 172.117 28.117 c 190.121 10.113 214.539 0 240 0 c f
48 288 m 48 264 l 48 255.426 52.574 247.504 60 243.215 c 67.426 238.93 
76.574 238.93 84 243.215 c 91.426 247.504 96 255.426 96 264 c 96 288 l 120
 288 l 128.574 288 136.496 292.574 140.785 300 c 145.07 307.426 145.07 316.574
 140.785 324 c 136.496 331.426 128.574 336 120 336 c 24 336 l 15.426 336
 7.504 331.426 3.215 324 c -1.07 316.574 -1.07 307.426 3.215 300 c 7.504
 292.574 15.426 288 24 288 c h
48 432 m 48 408 l 48 399.426 52.574 391.504 60 387.215 c 67.426 382.93 
76.574 382.93 84 387.215 c 91.426 391.504 96 399.426 96 408 c 96 432 l 120
 432 l 128.574 432 136.496 436.574 140.785 444 c 145.07 451.426 145.07 460.574
 140.785 468 c 136.496 475.426 128.574 480 120 480 c 24 480 l 15.426 480
 7.504 475.426 3.215 468 c -1.07 460.574 -1.07 451.426 3.215 444 c 7.504
 436.574 15.426 432 24 432 c h
48 552 m 48 576 l 24 576 l 15.426 576 7.504 580.574 3.215 588 c -1.07 595.426
 -1.07 604.574 3.215 612 c 7.504 619.426 15.426 624 24 624 c 120 624 l 128.574
 624 136.496 619.426 140.785 612 c 145.07 604.574 145.07 595.426 140.785
 588 c 136.496 580.574 128.574 576 120 576 c 96 576 l 96 552 l 96 543.426
 91.426 535.504 84 531.215 c 76.574 526.93 67.426 526.93 60 531.215 c 52.574
 535.504 48 543.426 48 552 c f
Q Q
showpage
%%Trailer
%%EOF
