%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 360 384 rectclip
1 0 0 -1 0 384 cm q
0 g
120 0 m 312 0 l 324.73 0 336.938 5.059 345.941 14.059 c 354.941 23.062 
360 35.27 360 48 c 360 288 l 360 300.73 354.941 312.938 345.941 321.941 
c 336.938 330.941 324.73 336 312 336 c 312 348.73 306.941 360.938 297.941
 369.941 c 288.938 378.941 276.73 384 264 384 c 72 384 l 59.27 384 47.062
 378.941 38.059 369.941 c 29.059 360.938 24 348.73 24 336 c 48 336 l 48 
342.363 50.527 348.469 55.031 352.969 c 59.531 357.473 65.637 360 72 360
 c 264 360 l 270.363 360 276.469 357.473 280.969 352.969 c 285.473 348.469
 288 342.363 288 336 c 288 96 l 288 89.637 285.473 83.531 280.969 79.031
 c 276.469 74.527 270.363 72 264 72 c 72 72 l 65.637 72 59.531 74.527 55.031
 79.031 c 50.527 83.531 48 89.637 48 96 c 24 96 l 24 83.27 29.059 71.062
 38.059 62.059 c 47.062 53.059 59.27 48 72 48 c 264 48 l 276.73 48 288.938
 53.059 297.941 62.059 c 306.941 71.062 312 83.27 312 96 c 312 312 l 318.363
 312 324.469 309.473 328.969 304.969 c 333.473 300.469 336 294.363 336 288
 c 336 48 l 336 41.637 333.473 35.531 328.969 31.031 c 324.469 26.527 318.363
 24 312 24 c 120 24 l 113.637 24 107.531 26.527 103.031 31.031 c 98.527 
35.531 96 41.637 96 48 c 72 48 l 72 35.27 77.059 23.062 86.059 14.059 c 
95.062 5.059 107.27 0 120 0 c f
24 144 m 24 132 l 24 125.371 29.371 120 36 120 c 42.629 120 48 125.371 
48 132 c 48 144 l 60 144 l 66.629 144 72 149.371 72 156 c 72 162.629 66.629
 168 60 168 c 12 168 l 5.371 168 0 162.629 0 156 c 0 149.371 5.371 144 12
 144 c h
24 216 m 24 204 l 24 197.371 29.371 192 36 192 c 42.629 192 48 197.371 
48 204 c 48 216 l 60 216 l 66.629 216 72 221.371 72 228 c 72 234.629 66.629
 240 60 240 c 12 240 l 5.371 240 0 234.629 0 228 c 0 221.371 5.371 216 12
 216 c h
24 276 m 24 288 l 12 288 l 5.371 288 0 293.371 0 300 c 0 306.629 5.371 
312 12 312 c 60 312 l 66.629 312 72 306.629 72 300 c 72 293.371 66.629 288
 60 288 c 48 288 l 48 276 l 48 269.371 42.629 264 36 264 c 29.371 264 24
 269.371 24 276 c f
Q Q
showpage
%%Trailer
%%EOF
