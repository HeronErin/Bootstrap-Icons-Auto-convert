%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 673 rectclip
1 0 0 -1 0 768 cm q
0 g
284.594 84.336 m 289 76.98 289.148 67.828 284.98 60.336 c 280.812 52.84
 272.961 48.137 264.387 48 c 255.812 47.859 247.816 52.309 243.406 59.664
 c 106.414 288 l 24 288 l 17.637 288 11.531 290.527 7.031 295.031 c 2.527
 299.531 0 305.637 0 312 c 0 360 l 0 366.363 2.527 372.469 7.031 376.969
 c 11.531 381.473 17.637 384 24 384 c 53.902 384 l 142.414 693.887 l 144.57
 701.426 149.125 708.055 155.387 712.766 c 161.652 717.48 169.281 720.02
 177.121 720 c 590.977 720 l 598.805 720.008 606.426 717.465 612.68 712.754
 c 618.934 708.039 623.48 701.418 625.633 693.887 c 714.098 384 l 744 384
 l 750.363 384 756.469 381.473 760.969 376.969 c 765.473 372.469 768 366.363
 768 360 c 768 312 l 768 305.637 765.473 299.531 760.969 295.031 c 756.469
 290.527 750.363 288 744 288 c 661.586 288 l 524.641 59.664 l 520.234 52.309
 512.234 47.859 503.66 48 c 495.086 48.137 487.234 52.84 483.07 60.336 c
 478.902 67.828 479.047 76.98 483.457 84.336 c 605.617 288 l 162.383 288
 l h
192 480 m 192 462.852 201.148 447.004 216 438.43 c 230.852 429.855 249.148
 429.855 264 438.43 c 278.852 447.004 288 462.852 288 480 c 288 576 l 288
 593.148 278.852 608.996 264 617.57 c 249.148 626.145 230.852 626.145 216
 617.57 c 201.148 608.996 192 593.148 192 576 c h
336 480 m 336 462.852 345.148 447.004 360 438.43 c 374.852 429.855 393.148
 429.855 408 438.43 c 422.852 447.004 432 462.852 432 480 c 432 576 l 432
 593.148 422.852 608.996 408 617.57 c 393.148 626.145 374.852 626.145 360
 617.57 c 345.148 608.996 336 593.148 336 576 c h
528 432 m 540.73 432 552.938 437.059 561.941 446.059 c 570.941 455.062 
576 467.27 576 480 c 576 576 l 576 593.148 566.852 608.996 552 617.57 c 
537.148 626.145 518.852 626.145 504 617.57 c 489.148 608.996 480 593.148
 480 576 c 480 480 l 480 467.27 485.059 455.062 494.059 446.059 c 503.062
 437.059 515.27 432 528 432 c f
Q Q
showpage
%%Trailer
%%EOF
