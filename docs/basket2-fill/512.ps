%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 361
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 361
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 337 rectclip
1 0 0 -1 0 384 cm q
0 g
142.297 42.168 m 145.703 36.48 143.855 29.109 138.168 25.703 c 132.48 22.297
 125.109 24.145 121.703 29.832 c 53.207 144 l 12 144 l 5.371 144 0 149.371
 0 156 c 0 180 l 0 183.184 1.266 186.234 3.516 188.484 c 5.766 190.734 8.816
 192 12 192 c 26.953 192 l 71.211 346.945 l 71.207 346.945 l 72.285 350.711
 74.562 354.027 77.695 356.383 c 80.824 358.738 84.641 360.008 88.559 360
 c 295.488 360 l 299.402 360.004 303.215 358.73 306.34 356.375 c 309.469
 354.02 311.742 350.707 312.816 346.945 c 357.047 192 l 372 192 l 375.184
 192 378.234 190.734 380.484 188.484 c 382.734 186.234 384 183.184 384 180
 c 384 156 l 384 152.816 382.734 149.766 380.484 147.516 c 378.234 145.266
 375.184 144 372 144 c 330.793 144 l 262.32 29.832 l 258.914 24.145 251.543
 22.297 245.855 25.703 c 240.168 29.109 238.32 36.48 241.727 42.168 c 302.809
 144 l 81.191 144 l h
96 240 m 96 231.426 100.574 223.504 108 219.215 c 115.426 214.93 124.574
 214.93 132 219.215 c 139.426 223.504 144 231.426 144 240 c 144 288 l 144
 296.574 139.426 304.496 132 308.785 c 124.574 313.07 115.426 313.07 108
 308.785 c 100.574 304.496 96 296.574 96 288 c h
168 240 m 168 231.426 172.574 223.504 180 219.215 c 187.426 214.93 196.574
 214.93 204 219.215 c 211.426 223.504 216 231.426 216 240 c 216 288 l 216
 296.574 211.426 304.496 204 308.785 c 196.574 313.07 187.426 313.07 180
 308.785 c 172.574 304.496 168 296.574 168 288 c h
264 216 m 270.363 216 276.469 218.527 280.969 223.031 c 285.473 227.531
 288 233.637 288 240 c 288 288 l 288 296.574 283.426 304.496 276 308.785
 c 268.574 313.07 259.426 313.07 252 308.785 c 244.574 304.496 240 296.574
 240 288 c 240 240 l 240 233.637 242.527 227.531 247.031 223.031 c 251.531
 218.527 257.637 216 264 216 c f
Q Q
showpage
%%Trailer
%%EOF
