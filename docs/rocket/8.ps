%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 3 m 3.309 3 3.562 2.664 3.562 2.25 c 3.562 1.836 3.309 1.5 3 1.5 c 2.691
 1.5 2.438 1.836 2.438 2.25 c 2.438 2.664 2.691 3 3 3 c f
4.48 3.305 m 4.406 2.035 4.117 1.238 3.812 0.746 c 3.641 0.461 3.461 0.281
 3.32 0.172 c 3.266 0.125 3.207 0.086 3.148 0.051 c 3.129 0.043 3.113 0.031
 3.094 0.023 c 3.066 0.008 3.031 0 3 0 c 2.965 0 2.93 0.012 2.898 0.027 
c 2.883 0.035 2.863 0.047 2.848 0.059 c 2.785 0.094 2.73 0.137 2.676 0.18
 c 2.535 0.297 2.359 0.48 2.184 0.77 c 1.883 1.266 1.594 2.059 1.52 3.305
 c 0.957 3.988 l 0.824 4.156 0.75 4.363 0.75 4.574 c 0.75 5.812 l 0.75 5.992
 0.98 6.07 1.086 5.926 c 1.508 5.363 l 1.57 5.281 1.664 5.215 1.789 5.148
 c 1.871 5.109 1.945 5.078 2.023 5.043 c 2.098 5.012 l 2.359 5.172 2.68 
5.25 2.996 5.25 c 3.316 5.25 3.633 5.172 3.895 5.012 c 3.918 5.023 3.945
 5.031 3.969 5.043 c 4.047 5.078 4.125 5.109 4.203 5.148 c 4.328 5.211 4.422
 5.277 4.484 5.363 c 4.906 5.926 l 4.914 5.926 l 5.02 6.07 5.25 5.992 5.25
 5.812 c 5.25 4.574 l 5.25 4.363 5.176 4.156 5.043 3.988 c h
4.5 3.918 m 4.5 3.938 l 4.5 4.262 4.395 4.531 4.219 4.738 c 4.273 4.762
 4.328 4.785 4.379 4.812 c 4.523 4.887 4.68 4.984 4.793 5.137 c 4.875 5.25
 l 4.875 4.574 l 4.875 4.449 4.832 4.324 4.754 4.227 c h
1.781 4.738 m 1.605 4.531 1.5 4.262 1.5 3.938 c 1.5 3.918 l 1.246 4.227
 l 1.168 4.324 1.125 4.449 1.125 4.574 c 1.125 5.25 l 1.211 5.137 l 1.324
 4.988 1.477 4.887 1.625 4.812 c 1.676 4.785 1.73 4.762 1.785 4.738 c 3.004
 0.402 m 3.027 0.418 3.055 0.438 3.09 0.465 c 3.195 0.551 3.348 0.699 3.5
 0.945 c 3.801 1.438 4.125 2.34 4.125 3.938 c 4.125 4.258 3.984 4.492 3.77
 4.648 c 3.57 4.793 3.293 4.875 3 4.875 c 2.707 4.875 2.43 4.793 2.23 4.648
 c 2.016 4.492 1.875 4.258 1.875 3.938 c 1.875 2.371 2.199 1.469 2.504 0.965
 c 2.656 0.715 2.809 0.559 2.914 0.469 c 2.949 0.441 2.977 0.418 3.004 0.402
 c h
3.004 0.402 m f
3.555 5.387 m 3.375 5.422 3.188 5.438 3 5.438 c 2.812 5.438 2.625 5.422
 2.445 5.387 c 2.852 5.926 l 2.926 6.023 3.074 6.023 3.148 5.926 c h
3.555 5.387 m f
Q Q
showpage
%%Trailer
%%EOF
