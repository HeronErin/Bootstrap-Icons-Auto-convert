%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 96 m 105.938 96 114 85.262 114 72 c 114 58.738 105.938 48 96 48 c 86.062
 48 78 58.738 78 72 c 78 85.262 86.062 96 96 96 c f
143.438 105.719 m 141.098 65.062 131.82 39.633 122.113 23.891 c 116.484
 14.797 110.762 9.012 106.285 5.449 c 104.535 4.043 102.68 2.777 100.727
 1.668 c 100.164 1.344 99.59 1.043 99 0.77 c 98.074 0.277 97.047 0.016 96
 0 c 94.879 0.016 93.781 0.316 92.809 0.875 c 92.227 1.172 91.66 1.492 91.105
 1.836 c 89.176 3.023 87.336 4.348 85.598 5.797 c 81.156 9.492 75.469 15.434
 69.879 24.637 c 60.219 40.5 50.953 65.832 48.59 105.707 c 30.625 127.617
 l 30.578 127.676 l 30.574 127.68 l 26.32 133 24 139.609 24 146.426 c 24
 186 l 24 188.582 25.652 190.875 28.102 191.691 c 30.551 192.508 33.25 191.668
 34.801 189.602 c 48.301 171.602 l 50.293 168.938 53.34 166.801 57.324 164.762
 c 59.891 163.465 62.293 162.457 64.824 161.391 c 67.199 160.383 l 75.598
 165.52 85.801 168.004 96 168.004 c 106.199 168.004 116.398 165.52 124.801
 160.383 c 125.602 160.734 126.387 161.066 127.152 161.379 c 129.707 162.457
 132.109 163.469 134.676 164.762 c 138.66 166.801 141.707 168.938 143.699
 171.602 c 157.199 189.602 l 158.75 191.668 161.449 192.508 163.898 191.691
 c 166.348 190.875 168 188.582 168 186 c 168 146.426 l 168 139.609 165.68
 133 161.426 127.68 c h
144 125.34 m 144 126 l 144 136.391 140.594 145.02 135 151.68 c 136.754 
152.449 138.504 153.238 140.102 154.066 c 144.781 156.43 149.703 159.586
 153.301 164.387 c 156 168 l 156 146.426 l 156 142.348 154.617 138.391 152.074
 135.203 c h
57 151.68 m 51.406 145.02 48 136.391 48 126 c 48 125.352 l 39.926 135.191
 l 37.379 138.383 35.996 142.344 36 146.426 c 36 168 l 38.699 164.398 l 
42.301 159.598 47.219 156.43 51.898 154.066 c 53.496 153.25 55.246 152.445
 57 151.68 c 96.109 12.875 m 96.879 13.355 97.781 14.008 98.82 14.832 c 
102.227 17.543 107.016 22.285 111.898 30.191 c 121.645 46.031 132 74.844
 132 126 c 132 136.297 127.512 143.762 120.684 148.715 c 114.203 153.434
 105.371 156 96 156 c 86.629 156 77.797 153.434 71.316 148.715 c 64.477 
143.746 60 136.297 60 126 c 60 75.816 70.32 46.969 80.125 30.863 c 85.031
 22.824 89.844 17.879 93.277 15.023 c 94.367 14.121 95.309 13.398 96.109
 12.863 c h
96.109 12.875 m f
113.746 172.332 m 107.984 173.449 101.984 174 96 174 c 90.012 174 84.012
 173.449 78.254 172.332 c 91.199 189.602 l 92.332 191.109 94.113 192 96 
192 c 97.887 192 99.668 191.109 100.801 189.602 c h
113.746 172.332 m f
Q Q
showpage
%%Trailer
%%EOF
