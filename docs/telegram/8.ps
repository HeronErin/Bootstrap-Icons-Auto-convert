%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
6 3 m 6 4.656 4.656 6 3 6 c 1.344 6 0 4.656 0 3 c 0 1.344 1.344 0 3 0 c
 4.656 0 6 1.344 6 3 c 3.109 2.215 m 2.816 2.336 2.234 2.586 1.359 2.969
 c 1.219 3.023 1.145 3.082 1.137 3.133 c 1.125 3.223 1.238 3.262 1.395 3.309
 c 1.461 3.328 l 1.613 3.379 1.82 3.438 1.926 3.438 c 2.023 3.441 2.133 
3.398 2.25 3.316 c 3.066 2.766 3.488 2.484 3.516 2.48 c 3.535 2.477 3.562
 2.473 3.578 2.488 c 3.594 2.504 3.594 2.535 3.594 2.543 c 3.582 2.59 3.133
 3.008 2.902 3.223 c 2.828 3.289 2.777 3.336 2.77 3.348 c 2.766 3.352 l 
2.742 3.375 2.719 3.398 2.695 3.422 c 2.555 3.559 2.445 3.66 2.699 3.828
 c 2.82 3.91 2.922 3.977 3.02 4.043 c 3.125 4.117 3.234 4.188 3.371 4.277
 c 3.406 4.301 3.441 4.324 3.473 4.348 c 3.598 4.438 3.707 4.516 3.848 4.504
 c 3.93 4.496 4.012 4.422 4.055 4.195 c 4.152 3.664 4.348 2.512 4.395 2.039
 c 4.391 2.039 l 4.395 2 4.391 1.961 4.387 1.922 c 4.383 1.891 4.367 1.863
 4.344 1.84 c 4.309 1.816 4.27 1.805 4.227 1.805 c 4.113 1.805 3.941 1.867
 3.109 2.215 c f
Q Q
showpage
%%Trailer
%%EOF
