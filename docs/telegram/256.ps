%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
192 96 m 192 130.297 173.703 161.988 144 179.137 c 114.297 196.289 77.703
 196.289 48 179.137 c 18.297 161.988 0 130.297 0 96 c 0 61.703 18.297 30.012
 48 12.863 c 77.703 -4.289 114.297 -4.289 144 12.863 c 173.703 30.012 192
 61.703 192 96 c 99.445 70.871 m 90.102 74.758 71.438 82.801 43.453 94.992
 c 38.918 96.793 36.539 98.559 36.312 100.297 c 35.953 103.211 39.613 104.363
 44.594 105.938 c 46.695 106.598 l 51.59 108.195 58.191 110.055 61.609 110.125
 c 64.73 110.203 68.203 108.926 72.023 106.285 c 98.176 88.637 111.672 79.719
 112.512 79.523 c 113.113 79.379 113.953 79.211 114.504 79.715 c 115.055
 80.219 115.008 81.156 114.949 81.406 c 114.59 82.953 100.227 96.297 92.797
 103.211 c 90.48 105.371 88.836 106.895 88.5 107.242 c 87.762 108 87.008
 108.746 86.242 109.477 c 81.684 113.867 78.273 117.156 86.422 122.531 c
 90.348 125.125 93.488 127.246 96.621 129.383 c 100.027 131.711 103.438 
134.027 107.852 136.93 c 108.973 137.664 110.051 138.414 111.09 139.172 
c 115.062 142.004 118.648 144.547 123.055 144.141 c 125.621 143.902 128.273
 141.5 129.617 134.301 c 132.797 117.297 139.051 80.469 140.488 65.289 c
 140.496 65.293 l 140.586 64.031 140.535 62.762 140.34 61.512 c 140.223 
60.504 139.734 59.574 138.973 58.906 c 137.879 58.156 136.578 57.766 135.254
 57.793 c 131.652 57.852 126.098 59.785 99.445 70.871 c f
Q Q
showpage
%%Trailer
%%EOF
