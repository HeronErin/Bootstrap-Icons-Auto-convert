%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 180 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 180 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 180 180 rectclip
1 0 0 -1 0 192 cm q
0 g
108 66 m 108 62.688 105.312 60 102 60 c 98.688 60 96 62.688 96 66 c 96 
84 l 78 84 l 74.688 84 72 86.688 72 90 c 72 93.312 74.688 96 78 96 c 96 
96 l 96 114 l 96 117.312 98.688 120 102 120 c 105.312 120 108 117.312 108
 114 c 108 96 l 126 96 l 129.312 96 132 93.312 132 90 c 132 86.688 129.312
 84 126 84 c 108 84 l h
108 66 m f
6 12 m 2.688 12 0 14.688 0 18 c 0 21.312 2.688 24 6 24 c 19.32 24 l 24.133
 43.285 l 42.109 139.105 l 42.641 141.941 45.113 143.996 48 144 c 60 144
 l 51.426 144 43.504 148.574 39.215 156 c 34.93 163.426 34.93 172.574 39.215
 180 c 43.504 187.426 51.426 192 60 192 c 68.574 192 76.496 187.426 80.785
 180 c 85.07 172.574 85.07 163.426 80.785 156 c 76.496 148.574 68.574 144
 60 144 c 144 144 l 135.426 144 127.504 148.574 123.215 156 c 118.93 163.426
 118.93 172.574 123.215 180 c 127.504 187.426 135.426 192 144 192 c 152.574
 192 160.496 187.426 164.785 180 c 169.07 172.574 169.07 163.426 164.785
 156 c 160.496 148.574 152.574 144 144 144 c 156 144 l 158.887 143.996 161.359
 141.941 161.891 139.105 c 179.891 43.105 l 180.219 41.352 179.75 39.543
 178.613 38.168 c 177.473 36.797 175.785 36 174 36 c 34.68 36 l 29.82 16.547
 l 29.152 13.875 26.754 12 24 12 c h
52.98 132 m 37.223 48 l 166.773 48 l 151.016 132 l h
72 168 m 72 174.629 66.629 180 60 180 c 53.371 180 48 174.629 48 168 c 
48 161.371 53.371 156 60 156 c 66.629 156 72 161.371 72 168 c 156 168 m 
156 174.629 150.629 180 144 180 c 137.371 180 132 174.629 132 168 c 132 
161.371 137.371 156 144 156 c 150.629 156 156 161.371 156 168 c f
Q Q
showpage
%%Trailer
%%EOF
