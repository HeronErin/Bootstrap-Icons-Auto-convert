%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
100.223 264.77 m 106.414 267.102 109.551 274.004 107.23 280.199 c 71.23
 376.199 l 70.207 379.293 67.965 381.84 65.023 383.246 c 62.082 384.652 
58.695 384.805 55.641 383.66 c 52.586 382.52 50.129 380.184 48.832 377.191
 c 47.535 374.199 47.512 370.809 48.77 367.801 c 84.77 271.801 l 85.883 
268.816 88.141 266.398 91.039 265.082 c 93.938 263.762 97.242 263.648 100.223
 264.77 c 172.223 264.77 m 178.414 267.102 181.551 274.004 179.23 280.199
 c 143.23 376.199 l 142.207 379.293 139.965 381.84 137.023 383.246 c 134.082
 384.652 130.695 384.805 127.641 383.66 c 124.586 382.52 122.129 380.184
 120.832 377.191 c 119.535 374.199 119.512 370.809 120.77 367.801 c 156.77
 271.801 l 157.883 268.816 160.141 266.398 163.039 265.082 c 165.938 263.762
 169.242 263.648 172.223 264.77 c 244.223 264.77 m 250.414 267.102 253.551
 274.004 251.23 280.199 c 215.23 376.199 l 214.207 379.293 211.965 381.84
 209.023 383.246 c 206.082 384.652 202.695 384.805 199.641 383.66 c 196.586
 382.52 194.129 380.184 192.832 377.191 c 191.535 374.199 191.512 370.809
 192.77 367.801 c 228.77 271.801 l 229.883 268.816 232.141 266.398 235.039
 265.082 c 237.938 263.762 241.242 263.648 244.223 264.77 c 316.223 264.77
 m 322.414 267.102 325.551 274.004 323.23 280.199 c 287.23 376.199 l 284.746
 382.156 278 385.078 271.953 382.82 c 265.91 380.559 262.734 373.926 264.77
 367.801 c 300.77 271.801 l 301.883 268.816 304.141 266.398 307.039 265.082
 c 309.938 263.762 313.242 263.648 316.223 264.77 c 321.719 96.648 m 315.031
 62.926 294.203 33.691 264.512 16.355 c 234.824 -0.98 199.129 -4.754 166.473
 5.992 c 133.816 16.738 107.336 40.973 93.742 72.551 c 70.793 69.906 47.766
 76.832 30.082 91.699 c 12.398 106.562 1.613 128.059 0.273 151.121 c -1.07
 174.184 7.148 196.781 22.988 213.598 c 38.828 230.414 60.898 239.965 84
 240 c 312 240 l 336.586 240.027 359.484 227.512 372.734 206.801 c 385.98
 186.09 387.746 160.051 377.414 137.742 c 367.086 115.434 346.082 99.938
 321.719 96.648 c 204 24 m 227.613 23.996 250.402 32.695 268.008 48.434 
c 285.613 64.176 296.797 85.852 299.426 109.32 c 300.102 115.426 305.281
 120.039 311.426 120 c 312 120 l 329.148 120 344.996 129.148 353.57 144 
c 362.145 158.852 362.145 177.148 353.57 192 c 344.996 206.852 329.148 216
 312 216 c 84 216 l 66.816 215.992 50.465 208.617 39.082 195.746 c 27.699
 182.875 22.383 165.738 24.477 148.688 c 26.57 131.633 35.879 116.293 50.035
 106.559 c 64.195 96.824 81.848 93.625 98.52 97.777 c 104.621 99.297 110.859
 95.852 112.824 89.879 c 119.16 70.703 131.383 54.016 147.754 42.188 c 164.121
 30.359 183.805 23.996 204 24 c f
Q Q
showpage
%%Trailer
%%EOF
