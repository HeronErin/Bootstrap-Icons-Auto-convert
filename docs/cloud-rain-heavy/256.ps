%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
50.113 132.383 m 53.207 133.551 54.773 137 53.617 140.102 c 35.617 188.102
 l 35.102 189.648 33.98 190.918 32.512 191.621 c 31.039 192.328 29.348 192.402
 27.82 191.832 c 26.293 191.258 25.062 190.09 24.414 188.598 c 23.77 187.102
 23.758 185.406 24.383 183.898 c 42.383 135.898 l 42.941 134.41 44.07 133.199
 45.52 132.539 c 46.969 131.879 48.621 131.824 50.113 132.383 c 86.113 132.383
 m 89.207 133.551 90.773 137 89.617 140.102 c 71.617 188.102 l 71.102 189.648
 69.98 190.918 68.512 191.621 c 67.039 192.328 65.348 192.402 63.82 191.832
 c 62.293 191.258 61.062 190.09 60.414 188.598 c 59.77 187.102 59.758 185.406
 60.383 183.898 c 78.383 135.898 l 78.941 134.41 80.07 133.199 81.52 132.539
 c 82.969 131.879 84.621 131.824 86.113 132.383 c 122.113 132.383 m 125.207
 133.551 126.773 137 125.617 140.102 c 107.617 188.102 l 107.102 189.648
 105.98 190.918 104.512 191.621 c 103.039 192.328 101.348 192.402 99.82 
191.832 c 98.293 191.258 97.062 190.09 96.414 188.598 c 95.77 187.102 95.758
 185.406 96.383 183.898 c 114.383 135.898 l 114.941 134.41 116.07 133.199
 117.52 132.539 c 118.969 131.879 120.621 131.824 122.113 132.383 c 158.113
 132.383 m 161.207 133.551 162.773 137 161.617 140.102 c 143.617 188.102
 l 142.375 191.078 139 192.539 135.977 191.41 c 132.957 190.281 131.367 
186.961 132.383 183.898 c 150.383 135.898 l 150.941 134.41 152.07 133.199
 153.52 132.539 c 154.969 131.879 156.621 131.824 158.113 132.383 c 160.859
 48.324 m 157.516 31.465 147.102 16.848 132.258 8.18 c 117.414 -0.488 99.562
 -2.375 83.234 2.996 c 66.906 8.371 53.668 20.488 46.871 36.277 c 35.398
 34.953 23.883 38.418 15.039 45.848 c 6.199 53.281 0.809 64.027 0.137 75.559
 c -0.535 87.094 3.574 98.391 11.492 106.801 c 19.414 115.207 30.449 119.98
 42 120 c 156 120 l 168.293 120.016 179.742 113.754 186.367 103.398 c 192.992
 93.047 193.875 80.027 188.707 68.871 c 183.543 57.719 173.043 49.969 160.859
 48.324 c 102 12 m 113.809 11.996 125.203 16.348 134.004 24.219 c 142.805
 32.086 148.398 42.926 149.711 54.66 c 150.051 57.715 152.641 60.02 155.711
 60 c 156 60 l 164.574 60 172.496 64.574 176.785 72 c 181.07 79.426 181.07
 88.574 176.785 96 c 172.496 103.426 164.574 108 156 108 c 42 108 l 33.41
 107.996 25.23 104.309 19.539 97.871 c 13.852 91.438 11.191 82.871 12.238
 74.344 c 13.285 65.816 17.938 58.148 25.02 53.281 c 32.098 48.414 40.922
 46.812 49.262 48.887 c 52.309 49.648 55.43 47.926 56.41 44.941 c 59.582
 35.352 65.691 27.008 73.875 21.094 c 82.062 15.18 91.902 11.996 102 12 
c f
Q Q
showpage
%%Trailer
%%EOF
