%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
400.895 1059.07 m 412.789 1063.555 422.418 1072.57 427.672 1084.141 c 432.93
 1095.711 433.379 1108.895 428.93 1120.801 c 284.93 1504.801 l 280.82 1517.18
 271.852 1527.352 260.09 1532.984 c 248.324 1538.613 234.773 1539.211 222.559
 1534.645 c 210.344 1530.074 200.512 1520.734 195.324 1508.766 c 190.141
 1496.797 190.051 1483.238 195.07 1471.199 c 339.07 1087.199 l 343.535 1075.266
 352.559 1065.598 364.152 1060.32 c 375.75 1055.047 388.969 1054.598 400.895
 1059.07 c 688.895 1059.07 m 700.789 1063.555 710.418 1072.57 715.672 1084.141
 c 720.93 1095.711 721.379 1108.895 716.93 1120.801 c 572.93 1504.801 l 
568.82 1517.18 559.852 1527.352 548.09 1532.984 c 536.324 1538.613 522.773
 1539.211 510.559 1534.645 c 498.344 1530.074 488.512 1520.734 483.324 1508.766
 c 478.141 1496.797 478.051 1483.238 483.07 1471.199 c 627.07 1087.199 l
 631.535 1075.266 640.559 1065.598 652.152 1060.32 c 663.75 1055.047 676.969
 1054.598 688.895 1059.07 c 976.895 1059.07 m 988.789 1063.555 998.418 1072.57
 1003.672 1084.141 c 1008.93 1095.711 1009.379 1108.895 1004.93 1120.801
 c 860.93 1504.801 l 856.82 1517.18 847.852 1527.352 836.09 1532.984 c 824.324
 1538.613 810.773 1539.211 798.559 1534.645 c 786.344 1530.074 776.512 1520.734
 771.324 1508.766 c 766.141 1496.797 766.051 1483.238 771.07 1471.199 c 
915.07 1087.199 l 919.535 1075.266 928.559 1065.598 940.152 1060.32 c 951.75
 1055.047 964.969 1054.598 976.895 1059.07 c 1264.895 1059.07 m 1276.789
 1063.555 1286.418 1072.57 1291.672 1084.141 c 1296.93 1095.711 1297.379
 1108.895 1292.93 1120.801 c 1148.93 1504.801 l 1142.488 1520.23 1128.484
 1531.199 1111.957 1533.754 c 1095.434 1536.305 1078.77 1530.074 1067.977
 1517.305 c 1057.18 1504.535 1053.805 1487.07 1059.07 1471.199 c 1203.07
 1087.199 l 1207.535 1075.266 1216.559 1065.598 1228.152 1060.32 c 1239.75
 1055.047 1252.969 1054.598 1264.895 1059.07 c 1286.879 386.59 m 1286.879
 386.594 l 1266.945 286.094 1215.383 194.613 1139.73 125.52 c 1064.082 56.422
 968.312 13.344 866.422 2.574 c 764.535 -8.195 661.875 13.914 573.453 65.664
 c 485.027 117.418 415.48 196.102 374.977 290.207 c 314.246 283.211 252.762
 292.918 197.141 318.273 c 141.516 343.633 93.867 383.688 59.32 434.121 
c 24.773 484.551 4.641 543.453 1.09 604.48 c -2.461 665.508 10.703 726.348
 39.168 780.445 c 67.629 834.547 110.312 879.855 162.617 911.496 c 214.926
 943.133 274.871 959.906 336 960 c 1248 960 l 1321.066 960.082 1391.434 
932.391 1444.848 882.535 c 1498.262 832.68 1530.727 764.383 1535.668 691.484
 c 1540.613 618.586 1517.664 546.531 1471.469 489.922 c 1425.273 433.309
 1359.289 396.371 1286.879 386.594 c 816 96 m 910.461 95.98 1001.613 130.777
 1072.031 193.738 c 1142.445 256.699 1187.188 343.406 1197.695 437.281 c
 1199 449.074 1204.629 459.969 1213.492 467.855 c 1222.355 475.746 1233.828
 480.07 1245.695 480 c 1248 480 l 1298.922 480 1347.758 500.227 1383.766
 536.234 c 1419.773 572.242 1440 621.078 1440 672 c 1440 722.922 1419.773
 771.758 1383.766 807.766 c 1347.758 843.773 1298.922 864 1248 864 c 336
 864 l 290.566 863.977 246.07 851.059 207.688 826.746 c 169.305 802.43 138.613
 767.723 119.18 726.652 c 99.746 685.582 92.371 639.84 97.91 594.742 c 103.449
 549.648 121.672 507.051 150.469 471.902 c 179.262 436.758 217.441 410.508
 260.566 396.203 c 303.691 381.898 349.988 380.133 394.078 391.105 c 405.844
 394.039 418.281 392.414 428.895 386.555 c 439.508 380.695 447.512 371.035
 451.297 359.52 c 476.641 282.816 525.531 216.059 591.008 168.75 c 656.488
 121.438 735.219 95.98 816 96 c f
Q Q
showpage
%%Trailer
%%EOF
