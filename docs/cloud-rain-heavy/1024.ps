%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
200.449 529.535 m 206.395 531.777 211.211 536.285 213.836 542.07 c 216.465
 547.855 216.691 554.449 214.465 560.398 c 142.465 752.398 l 140.41 758.59
 135.926 763.676 130.043 766.492 c 124.16 769.305 117.387 769.605 111.277
 767.32 c 105.172 765.039 100.254 760.367 97.664 754.383 c 95.07 748.398
 95.023 741.617 97.535 735.602 c 169.535 543.602 l 171.766 537.633 176.277
 532.797 182.078 530.16 c 187.875 527.523 194.484 527.297 200.449 529.535
 c 344.449 529.535 m 350.395 531.777 355.211 536.285 357.836 542.07 c 360.465
 547.855 360.691 554.449 358.465 560.398 c 286.465 752.398 l 284.41 758.59
 279.926 763.676 274.043 766.492 c 268.16 769.305 261.387 769.605 255.277
 767.32 c 249.172 765.039 244.254 760.367 241.664 754.383 c 239.07 748.398
 239.023 741.617 241.535 735.602 c 313.535 543.602 l 315.766 537.633 320.277
 532.797 326.078 530.16 c 331.875 527.523 338.484 527.297 344.449 529.535
 c 488.449 529.535 m 494.395 531.777 499.211 536.285 501.836 542.07 c 504.465
 547.855 504.691 554.449 502.465 560.398 c 430.465 752.398 l 428.41 758.59
 423.926 763.676 418.043 766.492 c 412.16 769.305 405.387 769.605 399.277
 767.32 c 393.172 765.039 388.254 760.367 385.664 754.383 c 383.07 748.398
 383.023 741.617 385.535 735.602 c 457.535 543.602 l 459.766 537.633 464.277
 532.797 470.078 530.16 c 475.875 527.523 482.484 527.297 488.449 529.535
 c 632.449 529.535 m 638.395 531.777 643.211 536.285 645.836 542.07 c 648.465
 547.855 648.691 554.449 646.465 560.398 c 574.465 752.398 l 571.246 760.117
 564.242 765.602 555.98 766.875 c 547.715 768.152 539.387 765.039 533.988
 758.652 c 528.59 752.27 526.902 743.535 529.535 735.602 c 601.535 543.602
 l 603.766 537.633 608.277 532.797 614.078 530.16 c 619.875 527.523 626.484
 527.297 632.449 529.535 c 643.441 193.297 m 633.473 143.047 607.691 97.305
 569.867 62.758 c 532.039 28.211 484.156 6.672 433.211 1.285 c 382.27 -4.098
 330.938 6.957 286.727 32.832 c 242.516 58.707 207.742 98.051 187.488 145.105
 c 157.125 141.605 126.379 146.457 98.57 159.137 c 70.758 171.816 46.934
 191.844 29.66 217.059 c 12.387 242.277 2.32 271.727 0.547 302.242 c -1.23
 332.754 5.352 363.172 19.582 390.223 c 33.816 417.273 55.156 439.93 81.309
 455.746 c 107.461 471.566 137.434 479.953 168 480 c 624 480 l 673.172 480.055
 718.969 455.02 745.469 413.602 c 771.965 372.18 775.496 320.102 754.832
 275.484 c 734.168 230.867 692.168 199.879 643.441 193.297 c 408 48 m 455.23
 47.988 500.805 65.391 536.016 96.871 c 571.223 128.352 593.594 171.703 
598.848 218.641 c 599.5 224.539 602.312 229.984 606.746 233.93 c 611.18 
237.871 616.914 240.035 622.848 240 c 624 240 l 658.297 240 689.988 258.297
 707.137 288 c 724.289 317.703 724.289 354.297 707.137 384 c 689.988 413.703
 658.297 432 624 432 c 168 432 l 133.637 431.984 100.926 417.234 78.164 
391.492 c 55.398 365.746 44.766 331.48 48.953 297.371 c 53.145 263.266 71.754
 232.59 100.07 213.117 c 128.387 193.648 163.691 187.254 197.039 195.551
 c 202.922 197.02 209.141 196.207 214.445 193.277 c 219.754 190.348 223.754
 185.52 225.648 179.762 c 238.32 141.41 262.766 108.031 295.504 84.375 c
 328.242 60.719 367.609 47.988 408 48 c f
Q Q
showpage
%%Trailer
%%EOF
