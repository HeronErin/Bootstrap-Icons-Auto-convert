%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
829.055 336 m 829.055 323.27 824 311.062 814.996 302.059 c 805.996 293.059
 793.785 288 781.055 288 c 144 288 l 105.809 288 69.184 303.172 42.176 330.176
 c 15.172 357.184 0 393.809 0 432 c 0 1392 l 0 1430.191 15.172 1466.816 
42.176 1493.824 c 69.184 1520.828 105.809 1536 144 1536 c 1104 1536 l 1142.191
 1536 1178.816 1520.828 1205.824 1493.824 c 1232.828 1466.816 1248 1430.191
 1248 1392 c 1248 754.945 l 1248 737.797 1238.852 721.949 1224 713.375 c
 1209.148 704.801 1190.852 704.801 1176 713.375 c 1161.148 721.949 1152 
737.797 1152 754.945 c 1152 1392 l 1152 1404.73 1146.941 1416.938 1137.941
 1425.941 c 1128.938 1434.941 1116.73 1440 1104 1440 c 144 1440 l 131.27
 1440 119.062 1434.941 110.059 1425.941 c 101.059 1416.938 96 1404.73 96
 1392 c 96 432 l 96 419.27 101.059 407.062 110.059 398.059 c 119.062 389.059
 131.27 384 144 384 c 781.055 384 l 793.785 384 805.996 378.941 814.996 
369.941 c 824 360.938 829.055 348.73 829.055 336 c f*
1536 48 m 1536 35.27 1530.941 23.062 1521.941 14.059 c 1512.938 5.059 1500.73
 0 1488 0 c 1008 0 l 990.852 0 975.004 9.148 966.43 24 c 957.855 38.852 
957.855 57.148 966.43 72 c 975.004 86.852 990.852 96 1008 96 c 1372.129 
96 l 590.016 878.016 l 577.875 890.156 573.133 907.855 577.578 924.438 c
 582.02 941.023 594.977 953.98 611.562 958.422 c 628.145 962.867 645.844
 958.125 657.984 945.984 c 1440 163.871 l 1440 528 l 1440 545.148 1449.148
 560.996 1464 569.57 c 1478.852 578.145 1497.148 578.145 1512 569.57 c 1526.852
 560.996 1536 545.148 1536 528 c h
1536 48 m f*
Q Q
showpage
%%Trailer
%%EOF
