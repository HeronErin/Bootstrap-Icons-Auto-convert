%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
414.527 168 m 414.527 161.637 412 155.531 407.5 151.031 c 402.996 146.527
 396.895 144 390.527 144 c 72 144 l 52.906 144 34.59 151.586 21.09 165.09
 c 7.586 178.59 0 196.906 0 216 c 0 696 l 0 715.094 7.586 733.41 21.09 746.91
 c 34.59 760.414 52.906 768 72 768 c 552 768 l 571.094 768 589.41 760.414
 602.91 746.91 c 616.414 733.41 624 715.094 624 696 c 624 377.473 l 624 
368.898 619.426 360.973 612 356.688 c 604.574 352.398 595.426 352.398 588
 356.688 c 580.574 360.973 576 368.898 576 377.473 c 576 696 l 576 702.363
 573.473 708.469 568.969 712.969 c 564.469 717.473 558.363 720 552 720 c
 72 720 l 65.637 720 59.531 717.473 55.031 712.969 c 50.527 708.469 48 702.363
 48 696 c 48 216 l 48 209.637 50.527 203.531 55.031 199.031 c 59.531 194.527
 65.637 192 72 192 c 390.527 192 l 396.895 192 402.996 189.473 407.5 184.969
 c 412 180.469 414.527 174.363 414.527 168 c f*
768 24 m 768 17.637 765.473 11.531 760.969 7.031 c 756.469 2.527 750.363
 0 744 0 c 504 0 l 495.426 0 487.504 4.574 483.215 12 c 478.93 19.426 478.93
 28.574 483.215 36 c 487.504 43.426 495.426 48 504 48 c 686.062 48 l 295.008
 439.008 l 288.938 445.078 286.566 453.926 288.789 462.219 c 291.012 470.512
 297.488 476.988 305.781 479.211 c 314.074 481.434 322.922 479.062 328.992
 472.992 c 720 81.938 l 720 264 l 720 272.574 724.574 280.496 732 284.785
 c 739.426 289.07 748.574 289.07 756 284.785 c 763.426 280.496 768 272.574
 768 264 c h
768 24 m f*
Q Q
showpage
%%Trailer
%%EOF
