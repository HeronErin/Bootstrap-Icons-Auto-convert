%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 23 768 744
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 23 768 744
768 768 cairo_set_page_size
%%EndPageSetup
q 0 23 768 721 rectclip
1 0 0 -1 0 768 cm q
0 g
256.992 245.711 m 361.824 38.016 l 363.855 33.852 367.004 30.336 370.922
 27.859 c 374.84 25.383 379.367 24.047 384 24 c 392.785 24 401.566 28.656
 406.32 38.016 c 511.152 245.711 l 746.258 279.117 l 746.258 279.121 l 752.105
 280.066 757.453 282.988 761.41 287.398 c 765.367 291.809 767.691 297.441
 768 303.359 c 768.664 311.352 765.664 319.207 759.84 324.719 c 590.734 
485.809 l 630.574 712.848 l 634.316 734.113 613.293 750.77 594.766 741.262
 c 384 632.977 l 173.328 741.266 l 171.129 742.422 168.766 743.23 166.32
 743.664 c 149.906 746.543 134.258 731.473 137.52 712.848 c 177.359 485.809
 l 8.305 324.719 l 2.992 319.695 0 312.688 0.047 305.375 c 0.098 300.27 
1.508 295.266 4.129 290.879 c 7.941 284.453 14.484 280.125 21.887 279.121
 c h
384 577.297 m 387.875 577.281 391.695 578.203 395.137 579.984 c 572.066
 670.895 l 538.754 480.957 l 538.754 480.961 l 537.109 472.086 540.031 462.984
 546.527 456.719 c 686.062 323.758 l 491.566 296.109 l 491.566 296.113 l
 483.41 294.84 476.375 289.684 472.703 282.289 c 384.047 106.703 l 384 106.848
 l h
384 577.297 m f
Q Q
showpage
%%Trailer
%%EOF
