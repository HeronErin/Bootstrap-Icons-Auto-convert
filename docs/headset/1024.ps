%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 48 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 48 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 48 576 720 rectclip
1 0 0 -1 0 768 cm q
0 g
384 48 m 320.348 48 259.305 73.285 214.293 118.293 c 169.285 163.305 144
 224.348 144 288 c 144 336 l 192 336 l 204.73 336 216.938 341.059 225.941
 350.059 c 234.941 359.062 240 371.27 240 384 c 240 528 l 240 540.73 234.941
 552.938 225.941 561.941 c 216.938 570.941 204.73 576 192 576 c 144 576 
l 131.27 576 119.062 570.941 110.059 561.941 c 101.059 552.938 96 540.73
 96 528 c 96 288 l 96 211.617 126.344 138.363 180.352 84.352 c 234.363 30.344
 307.617 0 384 0 c 460.383 0 533.637 30.344 587.648 84.352 c 641.656 138.363
 672 211.617 672 288 c 672 576 l 672 607.824 659.355 638.348 636.852 660.852
 c 614.348 683.355 583.824 696 552 696 c 449.566 696 l 440.992 710.852 425.148
 720 408 720 c 360 720 l 342.852 720 327.004 710.852 318.43 696 c 309.855
 681.148 309.855 662.852 318.43 648 c 327.004 633.148 342.852 624 360 624
 c 408 624 l 425.148 624 440.992 633.148 449.566 648 c 552 648 l 571.094
 648 589.41 640.414 602.91 626.91 c 616.414 613.41 624 595.094 624 576 c
 576 576 l 563.27 576 551.062 570.941 542.059 561.941 c 533.059 552.938 
528 540.73 528 528 c 528 384 l 528 371.27 533.059 359.062 542.059 350.059
 c 551.062 341.059 563.27 336 576 336 c 624 336 l 624 288 l 624 245.871 
612.91 204.484 591.848 168 c 570.781 131.516 540.484 101.219 504 80.152 
c 467.516 59.09 426.129 48 384 48 c f
Q Q
showpage
%%Trailer
%%EOF
