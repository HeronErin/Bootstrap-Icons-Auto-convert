%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 96 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 96 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 96 1152 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 96 m 640.695 96 518.605 146.57 428.59 236.59 c 338.57 326.605 288 448.695
 288 576 c 288 672 l 384 672 l 409.461 672 433.879 682.113 451.883 700.117
 c 469.887 718.121 480 742.539 480 768 c 480 1056 l 480 1081.461 469.887
 1105.879 451.883 1123.883 c 433.879 1141.887 409.461 1152 384 1152 c 288
 1152 l 262.539 1152 238.121 1141.887 220.117 1123.883 c 202.113 1105.879
 192 1081.461 192 1056 c 192 576 l 192 423.234 252.684 276.727 360.707 168.707
 c 468.727 60.684 615.234 0 768 0 c 920.766 0 1067.273 60.684 1175.293 168.707
 c 1283.316 276.727 1344 423.234 1344 576 c 1344 1152 l 1344 1194.129 1332.91
 1235.516 1311.848 1272 c 1290.781 1308.484 1260.484 1338.781 1224 1359.848
 c 1187.516 1380.91 1146.129 1392 1104 1392 c 899.137 1392 l 881.988 1421.703
 850.297 1440 816 1440 c 720 1440 l 685.703 1440 654.012 1421.703 636.863
 1392 c 619.711 1362.297 619.711 1325.703 636.863 1296 c 654.012 1266.297
 685.703 1248 720 1248 c 816 1248 l 850.297 1248 881.988 1266.297 899.137
 1296 c 1104 1296 l 1142.191 1296 1178.816 1280.828 1205.824 1253.824 c 
1232.828 1226.816 1248 1190.191 1248 1152 c 1152 1152 l 1126.539 1152 1102.121
 1141.887 1084.117 1123.883 c 1066.113 1105.879 1056 1081.461 1056 1056 
c 1056 768 l 1056 742.539 1066.113 718.121 1084.117 700.117 c 1102.121 682.113
 1126.539 672 1152 672 c 1248 672 l 1248 576 l 1248 491.742 1225.82 408.969
 1183.691 336 c 1141.562 263.031 1080.969 202.438 1008 160.309 c 935.031
 118.18 852.258 96 768 96 c f
Q Q
showpage
%%Trailer
%%EOF
