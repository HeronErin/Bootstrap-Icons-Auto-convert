%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 23 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 23 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 23 192 145 rectclip
1 0 0 -1 0 192 cm q
0 g
0 42 m 0 37.227 1.895 32.648 5.273 29.273 c 8.648 25.895 13.227 24 18 24
 c 126 24 l 130.773 24 135.352 25.895 138.727 29.273 c 142.105 32.648 144
 37.227 144 42 c 144 60 l 156.238 60 l 161.703 60.004 166.867 62.488 170.281
 66.758 c 188.055 88.957 l 188.051 88.957 l 190.609 92.148 192 96.121 192
 100.211 c 192 126 l 192 130.773 190.105 135.352 186.727 138.727 c 183.352
 142.105 178.773 144 174 144 c 168 144 l 168 152.574 163.426 160.496 156
 164.785 c 148.574 169.07 139.426 169.07 132 164.785 c 124.574 160.496 120
 152.574 120 144 c 60 144 l 60.016 150.461 57.422 156.656 52.809 161.184
 c 48.195 165.711 41.949 168.184 35.488 168.047 c 29.027 167.91 22.895 165.172
 18.48 160.453 c 14.062 155.734 11.734 149.438 12.023 142.98 c 8.508 141.742
 5.465 139.445 3.309 136.402 c 1.156 133.363 0 129.727 0 126 c h
15.527 131.473 m 19.945 124.25 27.844 119.895 36.305 120 c 44.77 120.109
 52.551 124.668 56.785 132 c 123.219 132 l 123.215 132 l 125.324 128.352
 128.352 125.324 132 123.215 c 132 42 l 132 40.41 131.367 38.883 130.242
 37.758 c 129.117 36.633 127.59 36 126 36 c 18 36 l 14.688 36 12 38.688 
12 42 c 12 126 l 12 128.359 13.379 130.5 15.527 131.473 c 144 120 m 152.574
 120 160.496 124.574 164.785 132 c 174 132 l 175.59 132 177.117 131.367 
178.242 130.242 c 179.367 129.117 180 127.59 180 126 c 180 100.199 l 179.996
 98.84 179.531 97.52 178.68 96.457 c 160.918 74.258 l 160.922 74.258 l 159.785
 72.832 158.062 72.004 156.238 72 c 144 72 l h
36 132 m 29.371 132 24 137.371 24 144 c 24 150.629 29.371 156 36 156 c 
42.629 156 48 150.629 48 144 c 48 137.371 42.629 132 36 132 c 144 132 m 
137.371 132 132 137.371 132 144 c 132 150.629 137.371 156 144 156 c 150.629
 156 156 150.629 156 144 c 156 137.371 150.629 132 144 132 c f
Q Q
showpage
%%Trailer
%%EOF
