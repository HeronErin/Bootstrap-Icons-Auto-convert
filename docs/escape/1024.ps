%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 48 720 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 48 720 720
768 768 cairo_set_page_size
%%EndPageSetup
q 48 48 672 672 rectclip
1 0 0 -1 0 768 cm q
0 g
409.824 48.961 m 401.266 48.309 393.012 52.27 388.168 59.355 c 383.324 
66.441 382.629 75.57 386.344 83.309 c 390.059 91.047 397.617 96.211 406.176
 96.863 c 479.777 102.559 548.379 136.297 597.82 191.113 c 647.262 245.93
 673.77 317.637 671.867 391.434 c 669.961 465.227 639.793 535.473 587.594
 587.668 c 535.391 639.863 465.137 670.02 391.344 671.91 c 317.547 673.805
 245.844 647.285 191.035 597.836 c 136.227 548.387 102.5 479.777 96.816 
406.176 c 96.047 397.719 90.867 390.301 83.195 386.664 c 75.523 383.027 
66.5 383.715 59.465 388.473 c 52.434 393.23 48.438 401.348 48.961 409.824
 c 55.59 495.695 94.938 575.742 158.887 633.434 c 222.832 691.129 306.492
 722.062 392.59 719.852 c 478.688 717.641 560.652 682.453 621.551 621.551
 c 682.453 560.652 717.641 478.688 719.852 392.59 c 722.062 306.492 691.129
 222.832 633.434 158.887 c 575.742 94.938 495.695 55.59 409.824 48.961 c
 f
340.609 375.742 m 346.703 381.633 355.453 383.867 363.625 381.625 c 371.801
 379.387 378.188 373 380.426 364.828 c 382.668 356.652 380.434 347.902 374.543
 341.809 c 129.938 97.199 l 262.801 97.199 l 271.375 97.199 279.297 92.625
 283.586 85.199 c 287.871 77.773 287.871 68.625 283.586 61.199 c 279.297
 53.773 271.375 49.199 262.801 49.199 c 72 49.199 l 65.637 49.199 59.531
 51.73 55.031 56.23 c 50.527 60.73 48 66.836 48 73.199 c 48 264 l 48 272.574
 52.574 280.496 60 284.785 c 67.426 289.07 76.574 289.07 84 284.785 c 91.426
 280.496 96 272.574 96 264 c 96 131.137 l h
340.609 375.742 m f
Q Q
showpage
%%Trailer
%%EOF
