%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 95 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 95 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 95 1536 1345 rectclip
1 0 0 -1 0 1536 cm q
0 g
816 1260.863 m 816 1152 l 1296 1152 l 1334.191 1152 1370.816 1136.828 1397.824
 1109.824 c 1424.828 1082.816 1440 1046.191 1440 1008 c 1440 192 l 1488 
192 l 1505.148 192 1520.996 182.852 1529.57 168 c 1538.145 153.148 1538.145
 134.852 1529.57 120 c 1520.996 105.148 1505.148 96 1488 96 c 48 96 l 30.852
 96 15.004 105.148 6.43 120 c -2.145 134.852 -2.145 153.148 6.43 168 c 15.004
 182.852 30.852 192 48 192 c 96 192 l 96 1008 l 96 1046.191 111.172 1082.816
 138.176 1109.824 c 165.184 1136.828 201.809 1152 240 1152 c 720 1152 l 
720 1260.863 l 695.426 1275.051 678.387 1299.387 673.457 1327.332 c 668.531
 1355.277 676.219 1383.973 694.461 1405.711 c 712.699 1427.449 739.625 1440.004
 768 1440.004 c 796.375 1440.004 823.301 1427.449 841.539 1405.711 c 859.781
 1383.973 867.469 1355.277 862.543 1327.332 c 857.613 1299.387 840.574 1275.051
 816 1260.863 c 192 192 m 192 1008 l 192 1020.73 197.059 1032.938 206.059
 1041.941 c 215.062 1050.941 227.27 1056 240 1056 c 1296 1056 l 1308.73 
1056 1320.938 1050.941 1329.941 1041.941 c 1338.941 1032.938 1344 1020.73
 1344 1008 c 1344 192 l h
192 192 m f*
Q Q
showpage
%%Trailer
%%EOF
