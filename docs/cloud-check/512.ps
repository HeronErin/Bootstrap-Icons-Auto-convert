%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 264 rectclip
1 0 0 -1 0 384 cm q
0 g
248.496 147.504 m 250.754 149.754 252.02 152.812 252.02 156 c 252.02 159.188
 250.754 162.246 248.496 164.496 c 176.496 236.496 l 174.246 238.754 171.188
 240.02 168 240.02 c 164.812 240.02 161.754 238.754 159.504 236.496 c 123.504
 200.496 l 118.812 195.805 118.812 188.195 123.504 183.504 c 128.195 178.812
 135.805 178.812 140.496 183.504 c 168 211.031 l 231.504 147.504 l 233.754
 145.246 236.812 143.98 240 143.98 c 243.188 143.98 246.246 145.246 248.496
 147.504 c f*
105.742 80.207 m 129.73 59.523 160.324 48.098 192 48 c 256.559 48 310.152
 96 315.984 157.895 c 354.191 163.297 384 195.289 384 234.551 c 384 277.656
 348.047 312 304.488 312 c 90.742 312 l 40.992 312 0 272.785 0 223.633 c
 0 181.32 30.383 146.281 70.609 137.402 c 74.043 116.691 87.363 96.051 105.746
 80.211 c 121.418 98.379 m 103.25 114.051 93.746 132.938 93.746 147.723 
c 93.746 158.477 l 83.066 159.652 l 49.535 163.32 24 190.848 24 223.633 
c 24 258.84 53.52 288 90.742 288 c 304.484 288 l 335.52 288 360 263.711 
360 234.551 c 360 205.367 335.52 181.078 304.488 181.078 c 292.488 181.078
 l 292.488 169.078 l 292.512 115.801 247.871 72 192 72 c 166.078 72.105 
141.043 81.465 121.414 98.398 c h
121.418 98.379 m f
Q Q
showpage
%%Trailer
%%EOF
