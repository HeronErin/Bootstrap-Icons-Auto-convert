%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
300 384 m 330.012 384 357.742 367.988 372.746 342 c 387.75 316.012 387.75
 283.988 372.746 258 c 357.742 232.012 330.012 216 300 216 c 269.988 216
 242.258 232.012 227.254 258 c 212.25 283.988 212.25 316.012 227.254 342
 c 242.258 367.988 269.988 384 300 384 c 340.297 276.168 m 308.258 329.594
 l 305.402 334.348 300.516 337.523 295.012 338.199 c 289.508 338.875 283.996
 336.973 280.078 333.047 c 261.504 314.496 l 256.812 309.805 256.812 302.195
 261.504 297.504 c 266.195 292.812 273.805 292.812 278.496 297.504 c 291.625
 310.656 l 319.703 263.832 l 323.109 258.145 330.48 256.297 336.168 259.703
 c 341.855 263.109 343.703 270.48 340.297 276.168 c f
48 24 m 48 17.637 50.527 11.531 55.031 7.031 c 59.531 2.527 65.637 0 72
 0 c 312 0 l 318.363 0 324.469 2.527 328.969 7.031 c 333.473 11.531 336 
17.637 336 24 c 336 198.145 l 324.438 194.066 312.262 191.988 300 192 c 
266.145 192 234.25 207.879 213.84 234.887 c 215.25 232.867 216.004 230.465
 216 228 c 216 204 l 216 200.816 214.734 197.766 212.484 195.516 c 210.234
 193.266 207.184 192 204 192 c 180 192 l 173.371 192 168 197.371 168 204
 c 168 228 l 168 231.184 169.266 234.234 171.516 236.484 c 173.766 238.734
 176.816 240 180 240 c 204 240 l 207.641 240 211.082 238.352 213.359 235.512
 c 201.926 250.863 194.777 268.977 192.648 288 c 156 288 l 149.371 288 144
 293.371 144 300 c 144 384 l 72 384 l 65.637 384 59.531 381.473 55.031 376.969
 c 50.527 372.469 48 366.363 48 360 c h
96 60 m 96 84 l 96 87.184 97.266 90.234 99.516 92.484 c 101.766 94.734 
104.816 96 108 96 c 132 96 l 135.184 96 138.234 94.734 140.484 92.484 c 
142.734 90.234 144 87.184 144 84 c 144 60 l 144 56.816 142.734 53.766 140.484
 51.516 c 138.234 49.266 135.184 48 132 48 c 108 48 l 101.371 48 96 53.371
 96 60 c 168 60 m 168 84 l 168 87.184 169.266 90.234 171.516 92.484 c 173.766
 94.734 176.816 96 180 96 c 204 96 l 207.184 96 210.234 94.734 212.484 92.484
 c 214.734 90.234 216 87.184 216 84 c 216 60 l 216 56.816 214.734 53.766
 212.484 51.516 c 210.234 49.266 207.184 48 204 48 c 180 48 l 173.371 48
 168 53.371 168 60 c 252 48 m 245.371 48 240 53.371 240 60 c 240 84 l 240
 87.184 241.266 90.234 243.516 92.484 c 245.766 94.734 248.816 96 252 96
 c 276 96 l 279.184 96 282.234 94.734 284.484 92.484 c 286.734 90.234 288
 87.184 288 84 c 288 60 l 288 56.816 286.734 53.766 284.484 51.516 c 282.234
 49.266 279.184 48 276 48 c h
96 132 m 96 156 l 96 159.184 97.266 162.234 99.516 164.484 c 101.766 166.734
 104.816 168 108 168 c 132 168 l 135.184 168 138.234 166.734 140.484 164.484
 c 142.734 162.234 144 159.184 144 156 c 144 132 l 144 128.816 142.734 125.766
 140.484 123.516 c 138.234 121.266 135.184 120 132 120 c 108 120 l 101.371
 120 96 125.371 96 132 c 180 120 m 173.371 120 168 125.371 168 132 c 168
 156 l 168 159.184 169.266 162.234 171.516 164.484 c 173.766 166.734 176.816
 168 180 168 c 204 168 l 207.184 168 210.234 166.734 212.484 164.484 c 214.734
 162.234 216 159.184 216 156 c 216 132 l 216 128.816 214.734 125.766 212.484
 123.516 c 210.234 121.266 207.184 120 204 120 c h
240 132 m 240 156 l 240 159.184 241.266 162.234 243.516 164.484 c 245.766
 166.734 248.816 168 252 168 c 276 168 l 279.184 168 282.234 166.734 284.484
 164.484 c 286.734 162.234 288 159.184 288 156 c 288 132 l 288 128.816 286.734
 125.766 284.484 123.516 c 282.234 121.266 279.184 120 276 120 c 252 120
 l 245.371 120 240 125.371 240 132 c 108 192 m 101.371 192 96 197.371 96
 204 c 96 228 l 96 231.184 97.266 234.234 99.516 236.484 c 101.766 238.734
 104.816 240 108 240 c 132 240 l 135.184 240 138.234 238.734 140.484 236.484
 c 142.734 234.234 144 231.184 144 228 c 144 204 l 144 200.816 142.734 197.766
 140.484 195.516 c 138.234 193.266 135.184 192 132 192 c h
108 192 m f
Q Q
showpage
%%Trailer
%%EOF
