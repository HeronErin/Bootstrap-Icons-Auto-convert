%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 144 1489 1393
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 144 1489 1393
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 144 1345 1249 rectclip
1 0 0 -1 0 1536 cm q
0 g
240 768 m 239.98 643.855 283.703 523.676 363.492 428.566 c 443.281 333.461
 554.031 269.508 676.285 247.945 c 798.543 226.379 924.488 248.586 1032 
310.656 c 1046.84 319.094 1065.047 319.016 1079.816 310.445 c 1094.582 301.875
 1103.688 286.109 1103.723 269.035 c 1103.762 251.961 1094.73 236.156 1080
 227.52 c 961.043 158.84 822.746 131.328 686.562 149.258 c 550.375 167.184
 423.91 229.547 326.781 326.672 c 229.648 423.797 167.277 550.258 149.344
 686.441 c 131.406 822.625 158.906 960.922 227.582 1079.887 c 296.254 1198.848
 402.258 1291.824 529.16 1344.402 c 656.059 1396.977 796.762 1406.211 929.445
 1370.672 c 1062.129 1335.133 1179.379 1256.809 1263.012 1147.844 c 1346.641
 1038.875 1391.98 905.359 1392 768 c 1392 750.852 1382.852 735.004 1368 
726.43 c 1353.148 717.855 1334.852 717.855 1320 726.43 c 1305.148 735.004
 1296 750.852 1296 768 c 1296 908.035 1240.371 1042.332 1141.352 1141.352
 c 1042.332 1240.371 908.035 1296 768 1296 c 627.965 1296 493.668 1240.371
 394.648 1141.352 c 295.629 1042.332 240 908.035 240 768 c f
1473.984 321.984 m 1486.125 309.844 1490.867 292.145 1486.422 275.562 c
 1481.98 258.977 1469.023 246.02 1452.438 241.578 c 1435.855 237.133 1418.156
 241.875 1406.016 254.016 c 768 892.129 l 513.984 638.016 l 501.844 625.875
 484.145 621.133 467.562 625.578 c 450.977 630.02 438.02 642.977 433.578
 659.562 c 429.133 676.145 433.875 693.844 446.016 705.984 c 734.016 993.984
 l 743.02 1003.012 755.25 1008.086 768 1008.086 c 780.75 1008.086 792.98
 1003.012 801.984 993.984 c h
1473.984 321.984 m f
Q Q
showpage
%%Trailer
%%EOF
