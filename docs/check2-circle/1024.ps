%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 72 745 697
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 72 745 697
768 768 cairo_set_page_size
%%EndPageSetup
q 72 72 673 625 rectclip
1 0 0 -1 0 768 cm q
0 g
120 384 m 119.992 321.93 141.852 261.836 181.746 214.285 c 221.641 166.73
 277.016 134.754 338.145 123.973 c 399.273 113.191 462.246 124.293 516 155.328
 c 523.422 159.547 532.523 159.508 539.906 155.223 c 547.293 150.938 551.844
 143.055 551.863 134.52 c 551.883 125.98 547.363 118.078 540 113.762 c 480.52
 79.418 411.375 65.664 343.281 74.629 c 275.188 83.594 211.957 114.773 163.391
 163.336 c 114.824 211.898 83.641 275.129 74.672 343.223 c 65.703 411.312
 79.453 480.461 113.789 539.941 c 148.125 599.422 201.129 645.914 264.578
 672.199 c 328.031 698.488 398.383 703.105 464.723 685.336 c 531.062 667.566
 589.688 628.402 631.504 573.922 c 673.32 519.438 695.992 452.68 696 384
 c 696 375.426 691.426 367.504 684 363.215 c 676.574 358.93 667.426 358.93
 660 363.215 c 652.574 367.504 648 375.426 648 384 c 648 454.016 620.188
 521.168 570.676 570.676 c 521.168 620.188 454.016 648 384 648 c 313.984
 648 246.832 620.188 197.324 570.676 c 147.812 521.168 120 454.016 120 384
 c f
736.992 160.992 m 743.062 154.922 745.434 146.074 743.211 137.781 c 740.988
 129.488 734.512 123.012 726.219 120.789 c 717.926 118.566 709.078 120.938
 703.008 127.008 c 384 446.062 l 256.992 319.008 l 250.922 312.938 242.074
 310.566 233.781 312.789 c 225.488 315.012 219.012 321.488 216.789 329.781
 c 214.566 338.074 216.938 346.922 223.008 352.992 c 367.008 496.992 l 371.512
 501.508 377.625 504.043 384 504.043 c 390.375 504.043 396.488 501.508 400.992
 496.992 c h
736.992 160.992 m f
Q Q
showpage
%%Trailer
%%EOF
