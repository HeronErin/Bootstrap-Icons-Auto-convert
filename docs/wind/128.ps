%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 84 rectclip
1 0 0 -1 0 96 cm q
0 g
75 12 m 71.023 12 67.207 13.582 64.395 16.395 c 61.582 19.207 60 23.023
 60 27 c 60 28.656 58.656 30 57 30 c 55.344 30 54 28.656 54 27 c 54 21.43
 56.211 16.09 60.152 12.152 c 64.09 8.211 69.43 6 75 6 c 80.57 6 85.91 8.211
 89.848 12.152 c 93.789 16.09 96 21.43 96 27 c 96 32.57 93.789 37.91 89.848
 41.848 c 85.91 45.789 80.57 48 75 48 c 3 48 l 1.344 48 0 46.656 0 45 c 
0 43.344 1.344 42 3 42 c 75 42 l 80.359 42 85.312 39.141 87.992 34.5 c 90.668
 29.859 90.668 24.141 87.992 19.5 c 85.312 14.859 80.359 12 75 12 c 33 18
 m 29.688 18 27 20.688 27 24 c 27 25.656 25.656 27 24 27 c 22.344 27 21 
25.656 21 24 c 21 19.145 23.922 14.77 28.406 12.914 c 32.891 11.055 38.055
 12.082 41.484 15.516 c 44.918 18.945 45.945 24.109 44.086 28.594 c 42.23
 33.078 37.855 36 33 36 c 3 36 l 1.344 36 0 34.656 0 33 c 0 31.344 1.344
 30 3 30 c 33 30 l 36.312 30 39 27.312 39 24 c 39 20.688 36.312 18 33 18
 c 0 57 m 0 55.344 1.344 54 3 54 c 63.254 54 l 68.027 54 72.605 55.895 75.98
 59.273 c 79.355 62.648 81.254 67.227 81.254 72 c 81.254 76.773 79.355 81.352
 75.98 84.727 c 72.605 88.105 68.027 90 63.254 90 c 58.477 90 53.898 88.105
 50.523 84.727 c 47.148 81.352 45.254 76.773 45.254 72 c 45.254 70.344 46.594
 69 48.254 69 c 49.91 69 51.254 70.344 51.254 72 c 51.254 76.855 54.176 
81.23 58.66 83.086 c 63.145 84.945 68.305 83.918 71.738 80.484 c 75.168 
77.055 76.195 71.891 74.34 67.406 c 72.48 62.922 68.105 60 63.254 60 c 3
 60 l 1.344 60 0 58.656 0 57 c f
Q Q
showpage
%%Trailer
%%EOF
