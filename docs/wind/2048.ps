%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
1200 192 m 1136.348 192 1075.305 217.285 1030.293 262.293 c 985.285 307.305
 960 368.348 960 432 c 960 449.148 950.852 464.996 936 473.57 c 921.148 
482.145 902.852 482.145 888 473.57 c 873.148 464.996 864 449.148 864 432
 c 864 342.887 899.398 257.426 962.414 194.414 c 1025.426 131.398 1110.887
 96 1200 96 c 1289.113 96 1374.574 131.398 1437.586 194.414 c 1500.602 257.426
 1536 342.887 1536 432 c 1536 521.113 1500.602 606.574 1437.586 669.586 
c 1374.574 732.602 1289.113 768 1200 768 c 48 768 l 30.852 768 15.004 758.852
 6.43 744 c -2.145 729.148 -2.145 710.852 6.43 696 c 15.004 681.148 30.852
 672 48 672 c 1200 672 l 1263.652 672 1324.695 646.715 1369.707 601.707 
c 1414.715 556.695 1440 495.652 1440 432 c 1440 368.348 1414.715 307.305
 1369.707 262.293 c 1324.695 217.285 1263.652 192 1200 192 c 528 288 m 502.539
 288 478.121 298.113 460.117 316.117 c 442.113 334.121 432 358.539 432 384
 c 432 401.148 422.852 416.996 408 425.57 c 393.148 434.145 374.852 434.145
 360 425.57 c 345.148 416.996 336 401.148 336 384 c 336 333.078 356.227 
284.242 392.234 248.234 c 428.242 212.227 477.078 192 528 192 c 578.922 
192 627.758 212.227 663.766 248.234 c 699.773 284.242 720 333.078 720 384
 c 720 434.922 699.773 483.758 663.766 519.766 c 627.758 555.773 578.922
 576 528 576 c 48 576 l 30.852 576 15.004 566.852 6.43 552 c -2.145 537.148
 -2.145 518.852 6.43 504 c 15.004 489.148 30.852 480 48 480 c 528 480 l 
562.297 480 593.988 461.703 611.137 432 c 628.289 402.297 628.289 365.703
 611.137 336 c 593.988 306.297 562.297 288 528 288 c 0 912 m 0 899.27 5.059
 887.062 14.059 878.059 c 23.062 869.059 35.27 864 48 864 c 1012.031 864
 l 1088.414 864 1161.668 894.344 1215.68 948.352 c 1269.688 1002.363 1300.031
 1075.617 1300.031 1152 c 1300.031 1228.383 1269.688 1301.637 1215.68 1355.648
 c 1161.668 1409.656 1088.414 1440 1012.031 1440 c 935.648 1440 862.395 
1409.656 808.387 1355.648 c 754.375 1301.637 724.031 1228.383 724.031 1152
 c 724.031 1134.852 733.18 1119.004 748.031 1110.43 c 762.883 1101.855 781.18
 1101.855 796.031 1110.43 c 810.883 1119.004 820.031 1134.852 820.031 1152
 c 820.031 1202.922 840.262 1251.758 876.266 1287.766 c 912.273 1323.773
 961.109 1344 1012.031 1344 c 1062.953 1344 1111.789 1323.773 1147.797 1287.766
 c 1183.805 1251.758 1204.031 1202.922 1204.031 1152 c 1204.031 1101.078
 1183.805 1052.242 1147.797 1016.234 c 1111.789 980.227 1062.953 960 1012.031
 960 c 48 960 l 35.27 960 23.062 954.941 14.059 945.941 c 5.059 936.938 
0 924.73 0 912 c f
Q Q
showpage
%%Trailer
%%EOF
