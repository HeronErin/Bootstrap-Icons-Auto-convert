%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
11.684 3.512 m 10.484 5.43 l 10.484 5.426 l 10.41 5.543 10.406 5.688 10.473
 5.809 c 10.539 5.926 10.664 6 10.801 6 c 13.199 6 l 13.336 6 13.461 5.926
 13.527 5.809 c 13.594 5.688 13.59 5.543 13.516 5.426 c 12.316 3.508 l 12.25
 3.398 12.129 3.332 12 3.332 c 11.871 3.332 11.75 3.398 11.684 3.508 c h
11.684 20.492 m 10.484 18.578 l 10.484 18.574 l 10.41 18.457 10.406 18.312
 10.473 18.195 c 10.539 18.074 10.664 18 10.801 18 c 13.199 18 l 13.336 
18 13.461 18.074 13.527 18.195 c 13.594 18.312 13.59 18.457 13.516 18.574
 c 12.316 20.492 l 12.25 20.602 12.129 20.668 12 20.668 c 11.871 20.668 
11.75 20.602 11.684 20.492 c h
5.426 13.516 m 3.512 12.32 l 3.398 12.25 3.332 12.129 3.332 12 c 3.332 
11.871 3.398 11.754 3.512 11.684 c 5.43 10.484 l 5.426 10.484 l 5.543 10.414
 5.688 10.41 5.805 10.477 c 5.926 10.539 6 10.664 6 10.801 c 6 13.199 l 
6 13.336 5.926 13.461 5.805 13.527 c 5.688 13.594 5.543 13.59 5.426 13.52
 c h
20.492 12.32 m 18.578 13.52 l 18.574 13.516 l 18.457 13.59 18.312 13.594
 18.195 13.527 c 18.074 13.461 18 13.336 18 13.199 c 18 10.801 l 18 10.664
 18.074 10.539 18.195 10.473 c 18.312 10.406 18.457 10.41 18.574 10.48 c
 20.492 11.68 l 20.602 11.75 20.668 11.871 20.668 12 c 20.668 12.129 20.602
 12.246 20.492 12.316 c h
20.492 12.32 m f
9.75 0 m 8.508 0 7.5 1.008 7.5 2.25 c 7.5 6.75 l 7.5 6.949 7.422 7.141 
7.281 7.281 c 7.141 7.422 6.949 7.5 6.75 7.5 c 2.25 7.5 l 1.008 7.5 0 8.508
 0 9.75 c 0 14.25 l 0 15.492 1.008 16.5 2.25 16.5 c 6.75 16.5 l 6.949 16.5
 7.141 16.578 7.281 16.719 c 7.422 16.859 7.5 17.051 7.5 17.25 c 7.5 21.75
 l 7.5 22.992 8.508 24 9.75 24 c 14.25 24 l 15.492 24 16.5 22.992 16.5 21.75
 c 16.5 17.25 l 16.5 16.836 16.836 16.5 17.25 16.5 c 21.75 16.5 l 22.992
 16.5 24 15.492 24 14.25 c 24 9.75 l 24 8.508 22.992 7.5 21.75 7.5 c 17.25
 7.5 l 16.836 7.5 16.5 7.164 16.5 6.75 c 16.5 2.25 l 16.5 1.008 15.492 0
 14.25 0 c h
9 2.25 m 9 1.836 9.336 1.5 9.75 1.5 c 14.25 1.5 l 14.449 1.5 14.641 1.578
 14.781 1.719 c 14.922 1.859 15 2.051 15 2.25 c 15 6.75 l 15 7.992 16.008
 9 17.25 9 c 21.75 9 l 21.949 9 22.141 9.078 22.281 9.219 c 22.422 9.359
 22.5 9.551 22.5 9.75 c 22.5 14.25 l 22.5 14.449 22.422 14.641 22.281 14.781
 c 22.141 14.922 21.949 15 21.75 15 c 17.25 15 l 16.008 15 15 16.008 15 
17.25 c 15 21.75 l 15 21.949 14.922 22.141 14.781 22.281 c 14.641 22.422
 14.449 22.5 14.25 22.5 c 9.75 22.5 l 9.336 22.5 9 22.164 9 21.75 c 9 17.25
 l 9 16.008 7.992 15 6.75 15 c 2.25 15 l 1.836 15 1.5 14.664 1.5 14.25 c
 1.5 9.75 l 1.5 9.336 1.836 9 2.25 9 c 6.75 9 l 7.992 9 9 7.992 9 6.75 c
 h
9 2.25 m f
Q Q
showpage
%%Trailer
%%EOF
