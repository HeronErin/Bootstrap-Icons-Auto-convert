%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
373.824 112.32 m 335.473 173.664 l 333.172 177.363 333.059 182.016 335.172
 185.824 c 337.285 189.629 341.293 191.996 345.648 192 c 422.352 192 l 426.707
 191.996 430.715 189.629 432.828 185.824 c 434.941 182.016 434.828 177.363
 432.527 173.664 c 394.176 112.273 l 391.984 108.762 388.137 106.633 384
 106.633 c 379.863 106.633 376.016 108.762 373.824 112.273 c h
373.824 655.68 m 335.473 594.383 l 333.148 590.684 333.02 586.012 335.133
 582.188 c 337.25 578.363 341.277 575.996 345.648 576 c 422.352 576 l 426.723
 575.996 430.75 578.363 432.867 582.188 c 434.98 586.012 434.852 590.684
 432.527 594.383 c 394.176 655.727 l 391.984 659.238 388.137 661.367 384
 661.367 c 379.863 661.367 376.016 659.238 373.824 655.727 c h
173.617 432.48 m 112.32 394.223 l 108.812 392.031 106.68 388.184 106.68
 384.047 c 106.68 379.91 108.812 376.066 112.32 373.871 c 173.664 335.52
 l 177.355 333.227 181.996 333.105 185.801 335.207 c 189.605 337.309 191.977
 341.301 192 345.648 c 192 422.398 l 192.004 426.77 189.637 430.797 185.812
 432.914 c 181.988 435.031 177.316 434.902 173.617 432.574 c h
655.68 394.176 m 594.383 432.527 l 590.684 434.852 586.012 434.98 582.188
 432.867 c 578.363 430.75 575.996 426.723 576 422.352 c 576 345.602 l 575.996
 341.23 578.363 337.203 582.188 335.086 c 586.012 332.969 590.684 333.098
 594.383 335.426 c 655.727 373.777 l 659.238 375.969 661.367 379.816 661.367
 383.953 c 661.367 388.09 659.238 391.934 655.727 394.129 c h
655.68 394.176 m f
312 0 m 292.906 0 274.59 7.586 261.09 21.09 c 247.586 34.59 240 52.906 
240 72 c 240 216 l 240 222.363 237.473 228.469 232.969 232.969 c 228.469
 237.473 222.363 240 216 240 c 72 240 l 52.906 240 34.59 247.586 21.09 261.09
 c 7.586 274.59 0 292.906 0 312 c 0 456 l 0 475.094 7.586 493.41 21.09 506.91
 c 34.59 520.414 52.906 528 72 528 c 216 528 l 222.363 528 228.469 530.527
 232.969 535.031 c 237.473 539.531 240 545.637 240 552 c 240 696 l 240 715.094
 247.586 733.41 261.09 746.91 c 274.59 760.414 292.906 768 312 768 c 456
 768 l 475.094 768 493.41 760.414 506.91 746.91 c 520.414 733.41 528 715.094
 528 696 c 528 552 l 528 545.637 530.527 539.531 535.031 535.031 c 539.531
 530.527 545.637 528 552 528 c 696 528 l 715.094 528 733.41 520.414 746.91
 506.91 c 760.414 493.41 768 475.094 768 456 c 768 312 l 768 292.906 760.414
 274.59 746.91 261.09 c 733.41 247.586 715.094 240 696 240 c 552 240 l 545.637
 240 539.531 237.473 535.031 232.969 c 530.527 228.469 528 222.363 528 216
 c 528 72 l 528 52.906 520.414 34.59 506.91 21.09 c 493.41 7.586 475.094
 0 456 0 c h
288 72 m 288 65.637 290.527 59.531 295.031 55.031 c 299.531 50.527 305.637
 48 312 48 c 456 48 l 462.363 48 468.469 50.527 472.969 55.031 c 477.473
 59.531 480 65.637 480 72 c 480 216 l 480 235.094 487.586 253.41 501.09 
266.91 c 514.59 280.414 532.906 288 552 288 c 696 288 l 702.363 288 708.469
 290.527 712.969 295.031 c 717.473 299.531 720 305.637 720 312 c 720 456
 l 720 462.363 717.473 468.469 712.969 472.969 c 708.469 477.473 702.363
 480 696 480 c 552 480 l 532.906 480 514.59 487.586 501.09 501.09 c 487.586
 514.59 480 532.906 480 552 c 480 696 l 480 702.363 477.473 708.469 472.969
 712.969 c 468.469 717.473 462.363 720 456 720 c 312 720 l 305.637 720 299.531
 717.473 295.031 712.969 c 290.527 708.469 288 702.363 288 696 c 288 552
 l 288 532.906 280.414 514.59 266.91 501.09 c 253.41 487.586 235.094 480
 216 480 c 72 480 l 65.637 480 59.531 477.473 55.031 472.969 c 50.527 468.469
 48 462.363 48 456 c 48 312 l 48 305.637 50.527 299.531 55.031 295.031 c
 59.531 290.527 65.637 288 72 288 c 216 288 l 235.094 288 253.41 280.414
 266.91 266.91 c 280.414 253.41 288 235.094 288 216 c h
288 72 m f
Q Q
showpage
%%Trailer
%%EOF
