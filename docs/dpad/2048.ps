%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
747.648 224.641 m 670.945 347.328 l 667.918 352.191 666.734 357.98 667.605
 363.641 c 668.473 369.305 671.34 374.469 675.684 378.203 c 680.031 381.938
 685.566 383.992 691.297 384 c 844.703 384 l 850.434 383.992 855.969 381.938
 860.316 378.203 c 864.66 374.469 867.527 369.305 868.395 363.641 c 869.266
 357.98 868.082 352.191 865.055 347.328 c 788.352 224.543 l 783.965 217.527
 776.273 213.266 768 213.266 c 759.727 213.266 752.035 217.527 747.648 224.543
 c h
747.648 1311.359 m 670.945 1188.766 l 670.945 1188.77 l 667.887 1183.898
 666.676 1178.098 667.535 1172.414 c 668.395 1166.727 671.266 1161.543 675.625
 1157.797 c 679.988 1154.051 685.547 1151.992 691.297 1152 c 844.703 1152
 l 850.453 1151.992 856.012 1154.051 860.375 1157.797 c 864.734 1161.543
 867.605 1166.727 868.465 1172.414 c 869.324 1178.098 868.113 1183.898 865.055
 1188.77 c 788.352 1311.457 l 783.965 1318.473 776.273 1322.734 768 1322.734
 c 759.727 1322.734 752.035 1318.473 747.648 1311.457 c h
347.23 864.961 m 224.641 788.449 l 217.621 784.062 213.359 776.371 213.359
 768.098 c 213.359 759.82 217.621 752.129 224.641 747.742 c 347.328 671.039
 l 352.184 668.02 357.957 666.836 363.609 667.695 c 369.266 668.555 374.422
 671.406 378.16 675.73 c 381.898 680.059 383.969 685.578 384 691.297 c 384
 844.801 l 384.008 850.547 381.949 856.109 378.203 860.469 c 374.457 864.832
 369.273 867.703 363.586 868.559 c 357.902 869.418 352.102 868.211 347.23
 865.152 c h
1311.359 788.352 m 1188.766 865.055 l 1188.77 865.055 l 1183.898 868.113
 1178.098 869.324 1172.414 868.465 c 1166.727 867.605 1161.543 864.734 1157.797
 860.375 c 1154.051 856.012 1151.992 850.453 1152 844.703 c 1152 691.199
 l 1151.992 685.453 1154.051 679.891 1157.797 675.531 c 1161.543 671.168
 1166.727 668.297 1172.414 667.441 c 1178.098 666.582 1183.898 667.789 1188.77
 670.848 c 1311.457 747.551 l 1318.473 751.938 1322.734 759.629 1322.734
 767.902 c 1322.734 776.18 1318.473 783.871 1311.457 788.258 c h
1311.359 788.352 m f
624 0 m 585.809 0 549.184 15.172 522.176 42.176 c 495.172 69.184 480 105.809
 480 144 c 480 432 l 480 444.73 474.941 456.938 465.941 465.941 c 456.938
 474.941 444.73 480 432 480 c 144 480 l 105.809 480 69.184 495.172 42.176
 522.176 c 15.172 549.184 0 585.809 0 624 c 0 912 l 0 950.191 15.172 986.816
 42.176 1013.824 c 69.184 1040.828 105.809 1056 144 1056 c 432 1056 l 444.73
 1056 456.938 1061.059 465.941 1070.059 c 474.941 1079.062 480 1091.27 480
 1104 c 480 1392 l 480 1430.191 495.172 1466.816 522.176 1493.824 c 549.184
 1520.828 585.809 1536 624 1536 c 912 1536 l 950.191 1536 986.816 1520.828
 1013.824 1493.824 c 1040.828 1466.816 1056 1430.191 1056 1392 c 1056 1104
 l 1056 1091.27 1061.059 1079.062 1070.059 1070.059 c 1079.062 1061.059 
1091.27 1056 1104 1056 c 1392 1056 l 1430.191 1056 1466.816 1040.828 1493.824
 1013.824 c 1520.828 986.816 1536 950.191 1536 912 c 1536 624 l 1536 585.809
 1520.828 549.184 1493.824 522.176 c 1466.816 495.172 1430.191 480 1392 
480 c 1104 480 l 1091.27 480 1079.062 474.941 1070.059 465.941 c 1061.059
 456.938 1056 444.73 1056 432 c 1056 144 l 1056 105.809 1040.828 69.184 
1013.824 42.176 c 986.816 15.172 950.191 0 912 0 c h
576 144 m 576 131.27 581.059 119.062 590.059 110.059 c 599.062 101.059 
611.27 96 624 96 c 912 96 l 924.73 96 936.938 101.059 945.941 110.059 c 
954.941 119.062 960 131.27 960 144 c 960 432 l 960 470.191 975.172 506.816
 1002.176 533.824 c 1029.184 560.828 1065.809 576 1104 576 c 1392 576 l 
1404.73 576 1416.938 581.059 1425.941 590.059 c 1434.941 599.062 1440 611.27
 1440 624 c 1440 912 l 1440 924.73 1434.941 936.938 1425.941 945.941 c 1416.938
 954.941 1404.73 960 1392 960 c 1104 960 l 1065.809 960 1029.184 975.172
 1002.176 1002.176 c 975.172 1029.184 960 1065.809 960 1104 c 960 1392 l
 960 1404.73 954.941 1416.938 945.941 1425.941 c 936.938 1434.941 924.73
 1440 912 1440 c 624 1440 l 611.27 1440 599.062 1434.941 590.059 1425.941
 c 581.059 1416.938 576 1404.73 576 1392 c 576 1104 l 576 1065.809 560.828
 1029.184 533.824 1002.176 c 506.816 975.172 470.191 960 432 960 c 144 960
 l 131.27 960 119.062 954.941 110.059 945.941 c 101.059 936.938 96 924.73
 96 912 c 96 624 l 96 611.27 101.059 599.062 110.059 590.059 c 119.062 581.059
 131.27 576 144 576 c 432 576 l 470.191 576 506.816 560.828 533.824 533.824
 c 560.828 506.816 576 470.191 576 432 c h
576 144 m f
Q Q
showpage
%%Trailer
%%EOF
