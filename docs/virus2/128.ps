%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 44.688 0 42 2.688 42 6 c 42 12.859 l 42 16.203 39.559 19.008 36.473
 20.301 c 33.387 21.586 29.754 21.273 27.395 18.914 c 22.539 14.059 l 22.543
 14.059 l 21.426 12.902 19.887 12.242 18.277 12.227 c 16.668 12.211 15.121
 12.844 13.984 13.984 c 12.844 15.121 12.211 16.668 12.227 18.277 c 12.242
 19.887 12.902 21.426 14.059 22.543 c 18.914 27.398 l 21.277 29.762 21.586
 33.391 20.293 36.477 c 19.016 39.559 16.199 42 12.863 42 c 6 42 l 2.688
 42 0 44.688 0 48 c 0 51.312 2.688 54 6 54 c 12.859 54 l 16.203 54 19.008
 56.441 20.301 59.527 c 21.586 62.613 21.277 66.246 18.914 68.605 c 14.059
 73.461 l 14.059 73.457 l 11.785 75.812 11.816 79.555 14.133 81.867 c 16.445
 84.184 20.188 84.215 22.543 81.941 c 27.398 77.086 l 29.762 74.723 33.391
 74.414 36.477 75.707 c 39.562 76.992 42.004 79.801 42.004 83.148 c 42 90
 l 42 93.312 44.688 96 48 96 c 51.312 96 54 93.312 54 90 c 54 83.141 l 54
 79.797 56.441 76.992 59.527 75.699 c 62.613 74.414 66.246 74.727 68.605
 77.086 c 73.461 81.941 l 73.457 81.941 l 75.812 84.215 79.555 84.184 81.867
 81.867 c 84.184 79.555 84.215 75.812 81.941 73.457 c 77.086 68.602 l 74.727
 66.238 74.414 62.609 75.707 59.523 c 76.992 56.438 79.801 53.996 83.148
 53.996 c 90 54 l 93.312 54 96 51.312 96 48 c 96 44.688 93.312 42 90 42 
c 83.141 42 l 79.797 42 76.992 39.559 75.699 36.473 c 74.414 33.387 74.727
 29.754 77.086 27.395 c 81.941 22.539 l 81.941 22.543 l 84.215 20.188 84.184
 16.445 81.867 14.133 c 79.555 11.816 75.812 11.785 73.457 14.059 c 68.602
 18.914 l 66.238 21.273 62.609 21.586 59.523 20.293 c 56.438 19.008 54.004
 16.199 54.004 12.852 c 54.008 6 l 54.008 4.41 53.375 2.883 52.25 1.758 
c 51.125 0.633 49.598 0 48.008 0 c h
60 30 m 60 33.312 57.312 36 54 36 c 50.688 36 48 33.312 48 30 c 48 26.688
 50.688 24 54 24 c 57.312 24 60 26.688 60 30 c 42 42 m 42 45.312 39.312 
48 36 48 c 32.688 48 30 45.312 30 42 c 30 38.688 32.688 36 36 36 c 39.312
 36 42 38.688 42 42 c 48 72 m 44.688 72 42 69.312 42 66 c 42 62.688 44.688
 60 48 60 c 51.312 60 54 62.688 54 66 c 54 69.312 51.312 72 48 72 c 72 48
 m 72 51.312 69.312 54 66 54 c 62.688 54 60 51.312 60 48 c 60 44.688 62.688
 42 66 42 c 69.312 42 72 44.688 72 48 c f
Q Q
showpage
%%Trailer
%%EOF
