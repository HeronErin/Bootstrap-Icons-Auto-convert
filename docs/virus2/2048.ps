%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 742.539 0 718.121 10.113 700.117 28.117 c 682.113 46.121 672 70.539
 672 96 c 672 205.727 l 672 259.199 632.93 304.125 583.586 324.766 c 534.242
 345.309 476.066 340.316 438.34 302.59 c 360.676 224.926 l 360.672 224.93
 l 342.781 206.406 318.203 195.848 292.453 195.625 c 266.707 195.398 241.945
 205.531 223.738 223.738 c 205.531 241.945 195.398 266.707 195.625 292.453
 c 195.848 318.203 206.406 342.781 224.93 360.672 c 302.594 438.336 l 340.418
 476.16 345.312 534.238 324.672 583.582 c 304.223 632.93 259.199 672 205.824
 672 c 96 672 l 61.703 672 30.012 690.297 12.863 720 c -4.289 749.703 -4.289
 786.297 12.863 816 c 30.012 845.703 61.703 864 96 864 c 205.727 864 l 259.199
 864 304.125 903.07 324.766 952.414 c 345.309 1001.758 340.414 1059.934 
302.59 1097.66 c 224.926 1175.324 l 224.93 1175.328 l 201.379 1199.711 192.434
 1234.711 201.395 1267.402 c 210.359 1300.098 235.902 1325.641 268.598 1334.605
 c 301.289 1343.566 336.289 1334.621 360.672 1311.07 c 438.336 1233.406 
l 476.16 1195.582 534.238 1190.688 583.582 1211.328 c 632.926 1231.871 671.996
 1276.801 671.996 1330.367 c 672 1440 l 672 1474.297 690.297 1505.988 720
 1523.137 c 749.703 1540.289 786.297 1540.289 816 1523.137 c 845.703 1505.988
 864 1474.297 864 1440 c 864 1330.273 l 864 1276.801 903.07 1231.875 952.414
 1211.234 c 1001.758 1190.691 1059.934 1195.684 1097.66 1233.41 c 1175.324
 1311.074 l 1175.328 1311.07 l 1199.711 1334.621 1234.711 1343.566 1267.402
 1334.605 c 1300.098 1325.641 1325.641 1300.098 1334.605 1267.402 c 1343.566
 1234.711 1334.621 1199.711 1311.07 1175.328 c 1233.406 1097.664 l 1195.68
 1059.84 1190.688 1001.762 1211.328 952.418 c 1231.871 903.074 1276.801 
864.004 1330.367 864.004 c 1440 864 l 1474.297 864 1505.988 845.703 1523.137
 816 c 1540.289 786.297 1540.289 749.703 1523.137 720 c 1505.988 690.297
 1474.297 672 1440 672 c 1330.273 672 l 1276.801 672 1231.875 632.93 1211.234
 583.586 c 1190.691 534.242 1195.684 476.066 1233.41 438.34 c 1311.074 360.676
 l 1311.07 360.672 l 1334.621 336.289 1343.566 301.289 1334.605 268.598 
c 1325.641 235.902 1300.098 210.359 1267.402 201.395 c 1234.711 192.434 
1199.711 201.379 1175.328 224.93 c 1097.664 302.594 l 1059.84 340.32 1001.762
 345.312 952.418 324.672 c 903.074 304.129 864.098 259.199 864.098 205.633
 c 864.098 96 l 864.098 70.539 853.98 46.121 835.977 28.117 c 817.977 10.113
 793.559 0 768.098 0 c h
960 480 m 960 514.297 941.703 545.988 912 563.137 c 882.297 580.289 845.703
 580.289 816 563.137 c 786.297 545.988 768 514.297 768 480 c 768 445.703
 786.297 414.012 816 396.863 c 845.703 379.711 882.297 379.711 912 396.863
 c 941.703 414.012 960 445.703 960 480 c 672 672 m 672 706.297 653.703 737.988
 624 755.137 c 594.297 772.289 557.703 772.289 528 755.137 c 498.297 737.988
 480 706.297 480 672 c 480 637.703 498.297 606.012 528 588.863 c 557.703
 571.711 594.297 571.711 624 588.863 c 653.703 606.012 672 637.703 672 672
 c 768 1152 m 733.703 1152 702.012 1133.703 684.863 1104 c 667.711 1074.297
 667.711 1037.703 684.863 1008 c 702.012 978.297 733.703 960 768 960 c 802.297
 960 833.988 978.297 851.137 1008 c 868.289 1037.703 868.289 1074.297 851.137
 1104 c 833.988 1133.703 802.297 1152 768 1152 c 1152 768 m 1152 802.297
 1133.703 833.988 1104 851.137 c 1074.297 868.289 1037.703 868.289 1008 
851.137 c 978.297 833.988 960 802.297 960 768 c 960 733.703 978.297 702.012
 1008 684.863 c 1037.703 667.711 1074.297 667.711 1104 684.863 c 1133.703
 702.012 1152 733.703 1152 768 c f
Q Q
showpage
%%Trailer
%%EOF
