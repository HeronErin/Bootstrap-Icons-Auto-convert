%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 11 35 180 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 11 35 180 168
192 192 cairo_set_page_size
%%EndPageSetup
q 11 35 169 133 rectclip
1 0 0 -1 0 192 cm q
0 g
60 138 m 60 134.688 62.688 132 66 132 c 174 132 l 177.312 132 180 134.688
 180 138 c 180 141.312 177.312 144 174 144 c 66 144 l 62.688 144 60 141.312
 60 138 c 60 90 m 60 86.688 62.688 84 66 84 c 174 84 l 177.312 84 180 86.688
 180 90 c 180 93.312 177.312 96 174 96 c 66 96 l 62.688 96 60 93.312 60 
90 c 60 42 m 60 38.688 62.688 36 66 36 c 174 36 l 177.312 36 180 38.688 
180 42 c 180 45.312 177.312 48 174 48 c 66 48 l 62.688 48 60 45.312 60 42
 c f*
26.902 26.328 m 27.324 24.969 28.578 24.043 30 24.043 c 31.422 24.043 32.676
 24.969 33.098 26.328 c 35.043 32.688 l 35.465 34.066 36.723 35.016 38.141
 35.016 c 44.754 35.016 l 47.863 35.016 49.195 39.012 46.723 40.93 c 41.105
 45.285 l 41.102 45.289 l 40.023 46.145 39.574 47.57 39.973 48.887 c 42.047
 55.715 l 42.984 58.785 39.492 61.258 36.973 59.316 c 31.969 55.43 l 30.805
 54.539 29.195 54.539 28.031 55.43 c 23.027 59.305 l 20.508 61.262 17.027
 58.789 17.953 55.715 c 20.027 48.875 l 20.418 47.562 19.973 46.141 18.898
 45.289 c 13.281 40.934 l 10.809 39.012 12.141 35.02 15.25 35.02 c 21.852
 35.02 l 21.852 35.016 l 23.289 35.016 24.555 34.066 24.961 32.688 c h
26.902 74.328 m 27.324 72.969 28.578 72.043 30 72.043 c 31.422 72.043 32.676
 72.969 33.098 74.328 c 35.043 80.688 l 35.465 82.066 36.723 83.016 38.141
 83.016 c 44.754 83.016 l 47.863 83.016 49.195 87.012 46.723 88.93 c 41.105
 93.285 l 41.102 93.289 l 40.023 94.145 39.574 95.57 39.973 96.887 c 42.047
 103.715 l 42.984 106.773 39.492 109.258 36.973 107.316 c 31.969 103.43 
l 30.805 102.539 29.195 102.539 28.031 103.43 c 23.027 107.305 l 20.508 
109.262 17.027 106.789 17.953 103.715 c 20.027 96.875 l 20.418 95.562 19.973
 94.141 18.898 93.289 c 13.281 88.934 l 10.809 87.012 12.141 83.02 15.25
 83.02 c 21.852 83.02 l 21.852 83.016 l 23.289 83.016 24.555 82.066 24.961
 80.688 c h
26.902 122.328 m 27.324 120.969 28.578 120.043 30 120.043 c 31.422 120.043
 32.676 120.969 33.098 122.328 c 35.043 128.688 l 35.465 130.066 36.723 
131.016 38.141 131.016 c 44.754 131.016 l 47.863 131.016 49.195 135.012 
46.723 136.93 c 41.105 141.285 l 41.102 141.289 l 40.023 142.145 39.574 
143.57 39.973 144.887 c 42.047 151.715 l 42.984 154.773 39.492 157.258 36.973
 155.316 c 31.969 151.43 l 30.805 150.539 29.195 150.539 28.031 151.43 c
 23.027 155.305 l 20.508 157.262 17.027 154.789 17.953 151.715 c 20.027 
144.875 l 20.418 143.562 19.973 142.141 18.898 141.289 c 13.281 136.934 
l 10.809 135.012 12.141 131.02 15.25 131.02 c 21.852 131.02 l 21.852 131.016
 l 23.289 131.016 24.555 130.066 24.961 128.688 c h
26.902 122.328 m f
Q Q
showpage
%%Trailer
%%EOF
