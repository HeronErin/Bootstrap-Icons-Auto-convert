%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 71 360 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 71 360 336
384 384 cairo_set_page_size
%%EndPageSetup
q 24 71 336 265 rectclip
1 0 0 -1 0 384 cm q
0 g
120 276 m 120 269.371 125.371 264 132 264 c 348 264 l 354.629 264 360 269.371
 360 276 c 360 282.629 354.629 288 348 288 c 132 288 l 125.371 288 120 282.629
 120 276 c 120 180 m 120 173.371 125.371 168 132 168 c 348 168 l 354.629
 168 360 173.371 360 180 c 360 186.629 354.629 192 348 192 c 132 192 l 125.371
 192 120 186.629 120 180 c 120 84 m 120 77.371 125.371 72 132 72 c 348 72
 l 354.629 72 360 77.371 360 84 c 360 90.629 354.629 96 348 96 c 132 96 
l 125.371 96 120 90.629 120 84 c f*
53.809 52.656 m 54.645 49.938 57.156 48.086 60 48.086 c 62.844 48.086 65.355
 49.938 66.191 52.656 c 70.078 65.375 l 70.918 68.137 73.438 70.031 76.27
 70.031 c 89.492 70.031 l 95.707 70.031 98.371 78.023 93.43 81.863 c 82.199
 90.574 l 80.043 92.289 79.152 95.141 79.945 97.777 c 84.098 111.434 l 85.969
 117.578 78.984 122.523 73.945 118.633 c 63.938 110.855 l 61.613 109.078
 58.387 109.078 56.062 110.855 c 46.055 118.609 l 41.016 122.52 34.055 117.578
 35.902 111.434 c 40.055 97.754 l 40.84 95.125 39.945 92.285 37.801 90.574
 c 26.57 81.863 l 21.625 78.023 24.289 70.031 30.508 70.031 c 43.707 70.031
 l 43.703 70.031 l 46.578 70.031 49.109 68.137 49.922 65.375 c h
53.809 148.656 m 54.645 145.938 57.156 144.086 60 144.086 c 62.844 144.086
 65.355 145.938 66.191 148.656 c 70.078 161.375 l 70.918 164.137 73.438 
166.031 76.27 166.031 c 89.492 166.031 l 95.707 166.031 98.371 174.023 93.43
 177.863 c 82.199 186.574 l 80.043 188.289 79.152 191.141 79.945 193.777
 c 84.098 207.434 l 85.969 213.555 78.984 218.523 73.945 214.633 c 63.938
 206.855 l 61.613 205.078 58.387 205.078 56.062 206.855 c 46.055 214.609
 l 41.016 218.52 34.055 213.578 35.902 207.434 c 40.055 193.754 l 40.84 
191.125 39.945 188.285 37.801 186.574 c 26.57 177.863 l 21.625 174.023 24.289
 166.031 30.508 166.031 c 43.707 166.031 l 43.703 166.031 l 46.578 166.031
 49.109 164.137 49.922 161.375 c h
53.809 244.656 m 54.645 241.938 57.156 240.086 60 240.086 c 62.844 240.086
 65.355 241.938 66.191 244.656 c 70.078 257.375 l 70.918 260.137 73.438 
262.031 76.27 262.031 c 89.492 262.031 l 95.707 262.031 98.371 270.023 93.43
 273.863 c 82.199 282.574 l 80.043 284.289 79.152 287.141 79.945 289.777
 c 84.098 303.434 l 85.969 309.555 78.984 314.523 73.945 310.633 c 63.938
 302.855 l 61.613 301.078 58.387 301.078 56.062 302.855 c 46.055 310.609
 l 41.016 314.52 34.055 309.578 35.902 303.434 c 40.055 289.754 l 40.84 
287.125 39.945 284.285 37.801 282.574 c 26.57 273.863 l 21.625 270.023 24.289
 262.031 30.508 262.031 c 43.707 262.031 l 43.703 262.031 l 46.578 262.031
 49.109 260.137 49.922 257.375 c h
53.809 244.656 m f
Q Q
showpage
%%Trailer
%%EOF
