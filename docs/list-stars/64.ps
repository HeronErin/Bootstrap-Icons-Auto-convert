%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 9 45 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 9 45 42
48 48 cairo_set_page_size
%%EndPageSetup
q 3 9 42 33 rectclip
1 0 0 -1 0 48 cm q
0 g
15 34.5 m 15 33.672 15.672 33 16.5 33 c 43.5 33 l 44.328 33 45 33.672 45
 34.5 c 45 35.328 44.328 36 43.5 36 c 16.5 36 l 15.672 36 15 35.328 15 34.5
 c 15 22.5 m 15 21.672 15.672 21 16.5 21 c 43.5 21 l 44.328 21 45 21.672
 45 22.5 c 45 23.328 44.328 24 43.5 24 c 16.5 24 l 15.672 24 15 23.328 15
 22.5 c 15 10.5 m 15 9.672 15.672 9 16.5 9 c 43.5 9 l 44.328 9 45 9.672 
45 10.5 c 45 11.328 44.328 12 43.5 12 c 16.5 12 l 15.672 12 15 11.328 15
 10.5 c f*
6.727 6.582 m 6.832 6.242 7.145 6.012 7.5 6.012 c 7.855 6.012 8.168 6.242
 8.273 6.582 c 8.758 8.172 l 8.863 8.516 9.18 8.754 9.531 8.754 c 11.184
 8.754 l 11.961 8.754 12.293 9.754 11.676 10.234 c 10.273 11.324 l 10.273
 11.32 l 10.004 11.535 9.895 11.891 9.992 12.223 c 10.512 13.93 l 10.746
 14.699 9.871 15.316 9.242 14.828 c 7.992 13.855 l 7.703 13.637 7.297 13.637
 7.008 13.855 c 5.758 14.824 l 5.129 15.312 4.258 14.695 4.488 13.926 c 
5.008 12.215 l 5.008 12.219 l 5.105 11.891 4.992 11.535 4.727 11.32 c 3.324
 10.23 l 2.707 9.75 3.039 8.75 3.816 8.75 c 5.465 8.75 l 5.465 8.754 l 5.824
 8.754 6.141 8.516 6.238 8.172 c h
6.727 18.582 m 6.832 18.242 7.145 18.012 7.5 18.012 c 7.855 18.012 8.168
 18.242 8.273 18.582 c 8.758 20.172 l 8.863 20.516 9.18 20.754 9.531 20.754
 c 11.184 20.754 l 11.961 20.754 12.293 21.754 11.676 22.234 c 10.273 23.324
 l 10.273 23.32 l 10.004 23.535 9.895 23.891 9.992 24.223 c 10.512 25.93
 l 10.746 26.695 9.871 27.316 9.242 26.828 c 7.992 25.855 l 7.703 25.637
 7.297 25.637 7.008 25.855 c 5.758 26.824 l 5.129 27.312 4.258 26.695 4.488
 25.926 c 5.008 24.215 l 5.008 24.219 l 5.105 23.891 4.992 23.535 4.727 
23.32 c 3.324 22.23 l 2.707 21.75 3.039 20.75 3.816 20.75 c 5.465 20.75 
l 5.465 20.754 l 5.824 20.754 6.141 20.516 6.238 20.172 c h
6.727 30.582 m 6.832 30.242 7.145 30.012 7.5 30.012 c 7.855 30.012 8.168
 30.242 8.273 30.582 c 8.758 32.172 l 8.863 32.516 9.18 32.754 9.531 32.754
 c 11.184 32.754 l 11.961 32.754 12.293 33.754 11.676 34.234 c 10.273 35.324
 l 10.273 35.32 l 10.004 35.535 9.895 35.891 9.992 36.223 c 10.512 37.93
 l 10.746 38.695 9.871 39.316 9.242 38.828 c 7.992 37.855 l 7.703 37.637
 7.297 37.637 7.008 37.855 c 5.758 38.824 l 5.129 39.312 4.258 38.695 4.488
 37.926 c 5.008 36.215 l 5.008 36.219 l 5.105 35.891 4.992 35.535 4.727 
35.32 c 3.324 34.23 l 2.707 33.75 3.039 32.75 3.816 32.75 c 5.465 32.75 
l 5.465 32.754 l 5.824 32.754 6.141 32.516 6.238 32.172 c h
6.727 30.582 m f
Q Q
showpage
%%Trailer
%%EOF
