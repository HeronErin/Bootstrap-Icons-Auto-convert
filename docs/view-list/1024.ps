%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 72 720 696
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 72 720 696
768 768 cairo_set_page_size
%%EndPageSetup
q 48 72 672 624 rectclip
1 0 0 -1 0 768 cm q
0 g
144 216 m 624 216 l 649.461 216 673.879 226.113 691.883 244.117 c 709.887
 262.121 720 286.539 720 312 c 720 456 l 720 481.461 709.887 505.879 691.883
 523.883 c 673.879 541.887 649.461 552 624 552 c 144 552 l 118.539 552 94.121
 541.887 76.117 523.883 c 58.113 505.879 48 481.461 48 456 c 48 312 l 48
 286.539 58.113 262.121 76.117 244.117 c 94.121 226.113 118.539 216 144 
216 c 144 264 m 131.27 264 119.062 269.059 110.059 278.059 c 101.059 287.062
 96 299.27 96 312 c 96 456 l 96 468.73 101.059 480.938 110.059 489.941 c
 119.062 498.941 131.27 504 144 504 c 624 504 l 636.73 504 648.938 498.941
 657.941 489.941 c 666.941 480.938 672 468.73 672 456 c 672 312 l 672 299.27
 666.941 287.062 657.941 278.059 c 648.938 269.059 636.73 264 624 264 c 
h
48 96 m 48 89.637 50.527 83.531 55.031 79.031 c 59.531 74.527 65.637 72
 72 72 c 696 72 l 704.574 72 712.496 76.574 716.785 84 c 721.07 91.426 721.07
 100.574 716.785 108 c 712.496 115.426 704.574 120 696 120 c 72 120 l 65.637
 120 59.531 117.473 55.031 112.969 c 50.527 108.469 48 102.363 48 96 c 48
 672 m 48 665.637 50.527 659.531 55.031 655.031 c 59.531 650.527 65.637 
648 72 648 c 696 648 l 704.574 648 712.496 652.574 716.785 660 c 721.07 
667.426 721.07 676.574 716.785 684 c 712.496 691.426 704.574 696 696 696
 c 72 696 l 65.637 696 59.531 693.473 55.031 688.969 c 50.527 684.469 48
 678.363 48 672 c f
Q Q
showpage
%%Trailer
%%EOF
