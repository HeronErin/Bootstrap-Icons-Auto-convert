%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 144 1440 1392
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 144 1440 1392
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 144 1344 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
288 432 m 1248 432 l 1281.703 432 1314.812 440.871 1344 457.723 c 1373.188
 474.574 1397.426 498.812 1414.277 528 c 1431.129 557.188 1440 590.297 1440
 624 c 1440 912 l 1440 945.703 1431.129 978.812 1414.277 1008 c 1397.426
 1037.188 1373.188 1061.426 1344 1078.277 c 1314.812 1095.129 1281.703 1104
 1248 1104 c 288 1104 l 237.078 1104 188.242 1083.773 152.234 1047.766 c
 116.227 1011.758 96 962.922 96 912 c 96 624 l 96 573.078 116.227 524.242
 152.234 488.234 c 188.242 452.227 237.078 432 288 432 c 288 528 m 262.539
 528 238.121 538.113 220.117 556.117 c 202.113 574.121 192 598.539 192 624
 c 192 912 l 192 937.461 202.113 961.879 220.117 979.883 c 238.121 997.887
 262.539 1008 288 1008 c 1248 1008 l 1273.461 1008 1297.879 997.887 1315.883
 979.883 c 1333.887 961.879 1344 937.461 1344 912 c 1344 624 l 1344 598.539
 1333.887 574.121 1315.883 556.117 c 1297.879 538.113 1273.461 528 1248 
528 c h
96 192 m 96 179.27 101.059 167.062 110.059 158.059 c 119.062 149.059 131.27
 144 144 144 c 1392 144 l 1409.148 144 1424.996 153.148 1433.57 168 c 1442.145
 182.852 1442.145 201.148 1433.57 216 c 1424.996 230.852 1409.148 240 1392
 240 c 144 240 l 131.27 240 119.062 234.941 110.059 225.941 c 101.059 216.938
 96 204.73 96 192 c 96 1344 m 96 1331.27 101.059 1319.062 110.059 1310.059
 c 119.062 1301.059 131.27 1296 144 1296 c 1392 1296 l 1409.148 1296 1424.996
 1305.148 1433.57 1320 c 1442.145 1334.852 1442.145 1353.148 1433.57 1368
 c 1424.996 1382.852 1409.148 1392 1392 1392 c 144 1392 l 131.27 1392 119.062
 1386.941 110.059 1377.941 c 101.059 1368.938 96 1356.73 96 1344 c f
Q Q
showpage
%%Trailer
%%EOF
