%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 21
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 18 rectclip
1 0 0 -1 0 24 cm q
0 g
7.254 16.672 m 9.363 16.672 10.754 15.586 10.754 14.023 c 10.754 12.605
 9.688 11.953 8.871 11.789 c 8.871 11.711 l 9.613 11.484 10.402 10.887 10.402
 9.715 c 10.402 8.344 9.156 7.336 7.277 7.336 c 5.391 7.336 4.148 8.344 
4.148 9.715 c 4.148 10.875 4.914 11.48 5.68 11.711 c 5.68 11.789 l 4.859
 11.953 3.793 12.598 3.793 14.031 c 3.793 15.594 5.152 16.676 7.262 16.676
 c 7.281 11.211 m 6.465 11.211 5.855 10.676 5.855 9.91 c 5.855 9.145 6.465
 8.633 7.281 8.633 c 8.098 8.633 8.699 9.148 8.699 9.91 c 8.699 10.676 8.098
 11.211 7.281 11.211 c 7.281 15.391 m 6.305 15.391 5.566 14.797 5.566 13.914
 c 5.562 13.027 6.301 12.422 7.273 12.422 c 8.242 12.422 8.988 13.027 8.988
 13.91 c 8.988 14.793 8.242 15.387 7.273 15.387 c 20.113 7.5 m 18.152 7.5
 l 14.754 11.527 l 14.668 11.527 l 14.668 7.5 l 12.887 7.5 l 12.887 16.496
 l 14.668 16.496 l 14.664 13.613 l 15.586 12.566 l 18.105 16.5 l 20.25 16.5
 l 16.902 11.379 l h
20.113 7.5 m f
21 4.5 m 21.398 4.5 21.781 4.656 22.062 4.938 c 22.344 5.219 22.5 5.602
 22.5 6 c 22.5 18 l 22.5 18.398 22.344 18.781 22.062 19.062 c 21.781 19.344
 21.398 19.5 21 19.5 c 3 19.5 l 2.172 19.5 1.5 18.828 1.5 18 c 1.5 6 l 1.5
 5.172 2.172 4.5 3 4.5 c h
3 3 m 1.344 3 0 4.344 0 6 c 0 18 l 0 18.797 0.316 19.559 0.879 20.121 c
 1.441 20.684 2.203 21 3 21 c 21 21 l 21.797 21 22.559 20.684 23.121 20.121
 c 23.684 19.559 24 18.797 24 18 c 24 6 l 24 5.203 23.684 4.441 23.121 3.879
 c 22.559 3.316 21.797 3 21 3 c h
3 3 m f
Q Q
showpage
%%Trailer
%%EOF
