%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
464.352 1066.945 m 599.328 1066.945 688.32 997.344 688.32 897.41 c 688.32
 806.691 619.969 764.93 567.746 754.371 c 567.746 749.281 l 615.363 734.883
 665.668 696.48 665.668 621.504 c 665.668 533.762 585.891 469.152 465.605
 469.152 c 344.934 469.152 265.254 533.762 265.254 621.504 c 265.254 695.711
 314.215 734.496 363.176 749.281 c 363.176 754.371 l 310.762 764.93 242.406
 806.211 242.406 897.797 c 242.406 997.828 329.383 1066.949 464.359 1066.949
 c 465.605 717.223 m 413.285 717.223 374.406 683.047 374.406 634.086 c 374.406
 585.125 413.285 552.293 465.605 552.293 c 517.926 552.293 556.324 585.223
 556.324 634.086 c 556.324 683.047 517.926 717.223 465.605 717.223 c 465.605
 984.68 m 403.207 984.68 355.973 946.758 355.973 890.215 c 355.969 833.664
 403.199 794.879 465.602 794.879 c 527.617 794.879 575.328 833.664 575.328
 890.207 c 575.328 946.75 527.617 984.672 465.602 984.672 c 1287.168 480
 m 1161.793 480 l 944.16 737.762 l 938.688 737.762 l 938.688 480 l 824.641
 480 l 824.641 1055.809 l 938.594 1055.809 l 938.594 871.199 l 997.633 804.094
 l 1158.816 1055.902 l 1296 1055.902 l 1081.727 728.16 l h
1287.168 480 m f
1344 288 m 1369.461 288 1393.879 298.113 1411.883 316.117 c 1429.887 334.121
 1440 358.539 1440 384 c 1440 1152 l 1440 1177.461 1429.887 1201.879 1411.883
 1219.883 c 1393.879 1237.887 1369.461 1248 1344 1248 c 192 1248 l 166.539
 1248 142.121 1237.887 124.117 1219.883 c 106.113 1201.879 96 1177.461 96
 1152 c 96 384 l 96 358.539 106.113 334.121 124.117 316.117 c 142.121 298.113
 166.539 288 192 288 c h
192 192 m 141.078 192 92.242 212.227 56.234 248.234 c 20.227 284.242 0 
333.078 0 384 c 0 1152 l 0 1185.703 8.871 1218.812 25.723 1248 c 42.574 
1277.188 66.812 1301.426 96 1318.277 c 125.188 1335.129 158.297 1344 192
 1344 c 1344 1344 l 1377.703 1344 1410.812 1335.129 1440 1318.277 c 1469.188
 1301.426 1493.426 1277.188 1510.277 1248 c 1527.129 1218.812 1536 1185.703
 1536 1152 c 1536 384 l 1536 350.297 1527.129 317.188 1510.277 288 c 1493.426
 258.812 1469.188 234.574 1440 217.723 c 1410.812 200.871 1377.703 192 1344
 192 c h
192 192 m f
Q Q
showpage
%%Trailer
%%EOF
