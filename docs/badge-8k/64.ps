%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 36 rectclip
1 0 0 -1 0 48 cm q
0 g
14.512 33.344 m 18.73 33.344 21.512 31.168 21.512 28.047 c 21.512 25.211
 19.375 23.906 17.742 23.578 c 17.742 23.418 l 19.23 22.969 20.801 21.77
 20.801 19.426 c 20.801 16.684 18.309 14.664 14.547 14.664 c 10.777 14.664
 8.285 16.684 8.285 19.426 c 8.285 21.746 9.816 22.957 11.344 23.418 c 11.344
 23.578 l 9.707 23.906 7.57 25.199 7.57 28.059 c 7.57 31.184 10.289 33.344
 14.508 33.344 c 14.547 22.414 m 12.91 22.414 11.695 21.348 11.695 19.816
 c 11.695 18.285 12.91 17.262 14.547 17.262 c 16.184 17.262 17.383 18.289
 17.383 19.816 c 17.383 21.348 16.184 22.414 14.547 22.414 c 14.547 30.773
 m 12.598 30.773 11.121 29.59 11.121 27.82 c 11.125 26.051 12.602 24.84 
14.551 24.84 c 16.488 24.84 17.98 26.051 17.98 27.82 c 17.98 29.586 16.488
 30.773 14.551 30.773 c 40.223 15 m 36.305 15 l 29.504 23.055 l 29.332 23.055
 l 29.336 15 l 25.77 15 l 25.77 32.992 l 29.332 32.992 l 29.332 27.227 l
 31.176 25.129 l 36.211 32.996 l 40.5 32.996 l 33.805 22.754 l h
40.223 15 m f
42 9 m 42.797 9 43.559 9.316 44.121 9.879 c 44.684 10.441 45 11.203 45 
12 c 45 36 l 45 36.797 44.684 37.559 44.121 38.121 c 43.559 38.684 42.797
 39 42 39 c 6 39 l 4.344 39 3 37.656 3 36 c 3 12 l 3 10.344 4.344 9 6 9 
c h
6 6 m 2.688 6 0 8.688 0 12 c 0 36 l 0 37.59 0.633 39.117 1.758 40.242 c
 2.883 41.367 4.41 42 6 42 c 42 42 l 43.59 42 45.117 41.367 46.242 40.242
 c 47.367 39.117 48 37.59 48 36 c 48 12 l 48 10.41 47.367 8.883 46.242 7.758
 c 45.117 6.633 43.59 6 42 6 c h
6 6 m f
Q Q
showpage
%%Trailer
%%EOF
