%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
0 48 m 0 41.637 2.527 35.531 7.031 31.031 c 11.531 26.527 17.637 24 24 
24 c 168 24 l 174.363 24 180.469 26.527 184.969 31.031 c 189.473 35.531 
192 41.637 192 48 c 192 144 l 192 150.363 189.473 156.469 184.969 160.969
 c 180.469 165.473 174.363 168 168 168 c 24 168 l 17.637 168 11.531 165.473
 7.031 160.969 c 2.527 156.469 0 150.363 0 144 c h
138 60 m 134.688 60 132 62.688 132 66 c 132 111.516 l 118.246 97.754 l 
115.902 95.406 112.098 95.406 109.754 97.754 c 107.406 100.098 107.406 103.902
 109.754 106.246 c 133.754 130.246 l 134.879 131.375 136.406 132.012 138
 132.012 c 139.594 132.012 141.121 131.375 142.246 130.246 c 166.246 106.246
 l 168.594 103.902 168.594 100.098 166.246 97.754 c 163.902 95.406 160.098
 95.406 157.754 97.754 c 144 111.516 l 144 66 l 144 64.41 143.367 62.883
 142.242 61.758 c 141.117 60.633 139.59 60 138 60 c 42.719 84.121 m 43.391
 84.121 l 60.527 122.988 l 69.816 122.988 l 86.855 84.109 l 87.527 84.109
 l 87.527 132 l 100.402 132 l 100.402 60.012 l 86.004 60.012 l 65.484 106.738
 l 65.016 106.738 l 44.496 60.012 l 30 60.012 l 30 132 l 42.719 132 l h
42.719 84.121 m f
Q Q
showpage
%%Trailer
%%EOF
