%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 624 768 rectclip
1 0 0 -1 0 768 cm q
0 g
709.344 4.078 m 715.996 8.527 719.992 16 720 24 c 720 384 l 720 388.793
 718.562 393.477 715.875 397.445 c 713.191 401.414 709.379 404.488 704.93
 406.273 c 696 384 l 704.93 406.273 l 704.785 406.32 l 704.496 406.465 l
 703.391 406.898 l 703.391 406.895 l 697.082 409.406 690.73 411.809 684.336
 414.098 c 671.664 418.656 654.047 424.801 634.078 430.898 c 594.91 442.996
 543.887 456.004 504 456.004 c 463.344 456.004 429.695 442.562 400.414 430.805
 c 399.07 430.324 l 368.641 418.078 342.719 408 312 408 c 278.398 408 233.375
 419.039 195.023 430.895 c 177.855 436.258 160.84 442.098 144 448.414 c 
144 744 l 144 752.574 139.426 760.496 132 764.785 c 124.574 769.07 115.426
 769.07 108 764.785 c 100.574 760.496 96 752.574 96 744 c 96 24 l 96 15.426
 100.574 7.504 108 3.215 c 115.426 -1.07 124.574 -1.07 132 3.215 c 139.426
 7.504 144 15.426 144 24 c 144 37.535 l 154.848 33.742 167.809 29.375 181.922
 25.055 c 221.09 13.055 272.16 0 312 0 c 352.32 0 385.152 13.297 413.809
 24.91 c 415.871 25.773 l 445.727 37.824 471.742 48 504 48 c 537.602 48 
582.625 36.961 620.977 25.105 c 642.824 18.262 664.422 10.641 685.727 2.258
 c 686.637 1.922 l 686.828 1.824 l 686.875 1.824 l 672 58.609 m 661.441 
62.352 648.961 66.625 635.23 70.848 c 596.352 82.945 545.375 95.953 504 
95.953 c 461.473 95.953 427.586 82.227 398.258 70.32 c 397.875 70.176 l 
367.777 58.078 342.672 48 312 48 c 279.887 48 234.91 58.992 196.078 70.945
 c 178.562 76.34 161.195 82.215 144 88.559 c 144 397.344 l 154.559 393.602
 167.039 389.328 180.77 385.105 c 219.648 372.961 270.625 360 312 360 c 
352.656 360 386.305 373.441 415.586 385.199 c 416.93 385.68 l 447.359 397.922
 473.281 408 504 408 c 536.062 408 581.09 397.008 619.922 385.055 c 637.438
 379.66 654.805 373.785 672 367.441 c h
672 58.609 m f
Q Q
showpage
%%Trailer
%%EOF
