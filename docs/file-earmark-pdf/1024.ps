%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 672 m 672 216 l 456 0 l 192 0 l 166.539 0 142.121 10.113 124.117 28.117
 c 106.113 46.121 96 70.539 96 96 c 96 672 l 96 697.461 106.113 721.879 
124.117 739.883 c 142.121 757.887 166.539 768 192 768 c 576 768 l 601.461
 768 625.879 757.887 643.883 739.883 c 661.887 721.879 672 697.461 672 672
 c 456 144 m 456 163.094 463.586 181.41 477.09 194.91 c 490.59 208.414 508.906
 216 528 216 c 624 216 l 624 672 l 624 684.73 618.941 696.938 609.941 705.941
 c 600.938 714.941 588.73 720 576 720 c 192 720 l 179.27 720 167.062 714.941
 158.059 705.941 c 149.059 696.938 144 684.73 144 672 c 144 96 l 144 83.27
 149.059 71.062 158.059 62.059 c 167.062 53.059 179.27 48 192 48 c 456 48
 l h
456 144 m f
220.945 676.176 m 211.559 672.477 204.008 665.234 199.922 656.016 c 190.562
 637.391 193.684 618.77 203.762 603.121 c 213.266 588.387 229.008 575.855
 246.816 565.344 c 269.375 552.559 293.219 542.18 317.953 534.383 c 337.129
 499.836 354.152 464.137 368.93 427.488 c 360.121 407.457 353.211 386.648
 348.289 365.328 c 344.16 346.129 342.578 327.121 346.082 310.801 c 349.684
 293.809 359.234 278.543 377.281 271.297 c 386.496 267.602 396.48 265.535
 406.176 267.602 c 416.055 269.703 424.461 276.137 429.07 285.121 c 433.293
 292.992 434.832 302.211 435.168 310.945 c 435.504 319.969 434.594 329.953
 432.91 340.418 c 428.879 364.898 419.949 394.852 407.949 426.531 c 407.953
 426.527 l 421.207 454.844 436.945 481.926 454.992 507.457 c 476.355 505.789
 497.844 506.594 519.023 509.855 c 536.496 513.023 554.254 519.215 565.102
 532.176 c 570.863 539.086 574.367 547.535 574.703 557.039 c 575.039 566.254
 572.445 575.375 568.078 584.062 c 564.297 592.113 558.43 599.008 551.09
 604.031 c 543.824 608.754 535.262 611.07 526.609 610.656 c 510.723 609.984
 495.219 601.25 481.824 590.641 c 465.535 577.18 450.863 561.879 438.098
 545.039 c 405.637 548.734 373.562 555.258 342.238 564.527 c 327.898 589.965
 311.523 614.207 293.281 637.008 c 279.266 653.809 264.051 668.496 248.785
 674.785 c 240.008 678.719 230.07 679.215 220.945 676.176 c 287.137 584.93
 m 279.137 588.609 271.793 592.418 265.105 596.355 c 249.363 605.668 239.137
 614.738 234.051 622.613 c 229.539 629.574 229.441 634.613 232.129 639.941
 c 232.641 640.965 233.059 641.668 233.375 642.055 c 235.055 641.48 l 241.629
 638.793 252.094 630.199 265.535 614.023 c 265.535 614.016 l 273.191 604.664
 280.398 594.957 287.137 584.93 c 365.855 521.09 m 381.887 517.363 398.059
 514.27 414.336 511.824 c 405.609 498.441 397.441 484.703 389.855 470.641
 c 382.324 487.66 374.32 504.465 365.855 521.039 c h
483.262 542.691 m 490.492 550.531 497.453 557.09 504.141 562.371 c 515.66
 571.492 523.676 574.516 528.043 574.66 c 528.047 574.656 l 529.219 574.84
 530.414 574.582 531.406 573.938 c 533.418 572.371 534.973 570.301 535.922
 567.938 c 537.621 565.008 538.59 561.715 538.754 558.336 c 538.703 557.215
 538.262 556.145 537.504 555.312 c 535.008 552.336 527.902 548.016 512.641
 545.281 c 502.926 543.68 493.105 542.828 483.266 542.734 c h
387.742 374.398 m 391.746 361.359 394.953 348.086 397.344 334.656 c 398.816
 325.633 399.422 318.191 399.168 312.336 c 399.191 309.105 398.672 305.891
 397.633 302.832 c 395.227 303.117 392.883 303.766 390.672 304.754 c 386.496
 306.434 383.086 309.844 381.266 318.34 c 379.344 327.555 379.824 340.852
 383.473 357.797 c 384.625 363.141 386.066 368.676 387.793 374.406 c h
387.742 374.398 m f
Q Q
showpage
%%Trailer
%%EOF
