%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 5.25 m 5.25 1.688 l 3.562 0 l 1.5 0 l 1.086 0 0.75 0.336 0.75 0.75
 c 0.75 5.25 l 0.75 5.449 0.828 5.641 0.969 5.781 c 1.109 5.922 1.301 6 
1.5 6 c 4.5 6 l 4.699 6 4.891 5.922 5.031 5.781 c 5.172 5.641 5.25 5.449
 5.25 5.25 c 3.562 1.125 m 3.562 1.438 3.812 1.688 4.125 1.688 c 4.875 1.688
 l 4.875 5.25 l 4.875 5.348 4.836 5.445 4.766 5.516 c 4.695 5.586 4.598 
5.625 4.5 5.625 c 1.5 5.625 l 1.293 5.625 1.125 5.457 1.125 5.25 c 1.125
 0.75 l 1.125 0.543 1.293 0.375 1.5 0.375 c 3.562 0.375 l h
3.562 1.125 m f
1.727 5.281 m 1.652 5.254 1.594 5.195 1.562 5.125 c 1.488 4.98 1.516 4.836
 1.594 4.711 c 1.668 4.598 1.789 4.496 1.93 4.414 c 1.93 4.418 l 2.105 4.316
 2.289 4.234 2.484 4.176 c 2.633 3.906 2.766 3.625 2.883 3.34 c 2.812 3.184
 2.758 3.02 2.723 2.855 c 2.691 2.707 2.68 2.559 2.707 2.43 c 2.734 2.297
 2.809 2.176 2.949 2.121 c 3.02 2.094 3.098 2.074 3.176 2.094 c 3.172 2.09
 l 3.25 2.105 3.316 2.156 3.352 2.227 c 3.383 2.289 3.398 2.359 3.398 2.43
 c 3.402 2.5 3.395 2.578 3.379 2.66 c 3.348 2.852 3.277 3.086 3.184 3.332
 c 3.188 3.332 l 3.289 3.555 3.414 3.766 3.555 3.965 c 3.723 3.953 3.891
 3.957 4.055 3.984 c 4.191 4.008 4.328 4.059 4.414 4.16 c 4.461 4.215 4.488
 4.281 4.488 4.355 c 4.492 4.426 4.469 4.5 4.438 4.566 c 4.438 4.562 l 4.41
 4.625 4.363 4.68 4.305 4.719 c 4.25 4.758 4.184 4.773 4.113 4.77 c 3.988
 4.766 3.867 4.695 3.762 4.613 c 3.766 4.613 l 3.637 4.508 3.523 4.391 3.422
 4.258 c 3.168 4.285 2.918 4.34 2.672 4.41 c 2.562 4.609 2.434 4.797 2.293
 4.977 c 2.184 5.109 2.066 5.223 1.945 5.273 c 1.875 5.301 1.797 5.305 1.727
 5.281 c 2.242 4.57 m 2.18 4.598 2.121 4.629 2.07 4.66 c 1.949 4.734 1.867
 4.805 1.828 4.867 c 1.793 4.922 1.793 4.961 1.812 5.004 c 1.816 5.012 1.82
 5.016 1.82 5.02 c 1.832 5.016 l 1.883 4.996 1.965 4.926 2.07 4.801 c 2.074
 4.797 l 2.133 4.723 2.191 4.648 2.242 4.57 c 2.855 4.07 m 2.859 4.07 l 
2.984 4.043 3.109 4.02 3.238 4 c 3.168 3.895 3.105 3.785 3.047 3.676 c 2.988
 3.809 2.926 3.941 2.859 4.07 c h
3.773 4.238 m 3.828 4.301 3.883 4.352 3.938 4.391 c 4.027 4.461 4.09 4.484
 4.125 4.488 c 4.133 4.492 4.145 4.488 4.152 4.484 c 4.168 4.473 4.18 4.457
 4.188 4.438 c 4.199 4.414 4.207 4.387 4.211 4.363 c 4.207 4.352 4.207 4.344
 4.199 4.34 c 4.18 4.316 4.125 4.281 4.004 4.262 c 3.93 4.246 3.852 4.242
 3.777 4.238 c h
3.027 2.926 m 3.059 2.824 3.086 2.719 3.105 2.613 c 3.117 2.543 3.121 2.484
 3.121 2.438 c 3.117 2.441 l 3.117 2.414 3.113 2.391 3.105 2.367 c 3.086
 2.367 3.07 2.375 3.051 2.383 c 3.02 2.395 2.992 2.422 2.977 2.488 c 2.961
 2.559 2.965 2.664 2.992 2.797 c 3 2.84 3.012 2.883 3.027 2.926 c h
3.027 2.926 m f
Q Q
showpage
%%Trailer
%%EOF
