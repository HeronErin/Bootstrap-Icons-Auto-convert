%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 1 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 10.5 m 10.5 3.375 l 7.125 0 l 3 0 l 2.172 0 1.5 0.672 1.5 1.5 c 1.5
 10.5 l 1.5 10.898 1.656 11.281 1.938 11.562 c 2.219 11.844 2.602 12 3 12
 c 9 12 l 9.398 12 9.781 11.844 10.062 11.562 c 10.344 11.281 10.5 10.898
 10.5 10.5 c 7.125 2.25 m 7.125 2.871 7.629 3.375 8.25 3.375 c 9.75 3.375
 l 9.75 10.5 l 9.75 10.699 9.672 10.891 9.531 11.031 c 9.391 11.172 9.199
 11.25 9 11.25 c 3 11.25 l 2.586 11.25 2.25 10.914 2.25 10.5 c 2.25 1.5 
l 2.25 1.086 2.586 0.75 3 0.75 c 7.125 0.75 l h
7.125 2.25 m f
3.453 10.566 m 3.305 10.508 3.188 10.395 3.125 10.25 c 2.98 9.961 3.027
 9.668 3.184 9.422 c 3.332 9.191 3.578 8.996 3.855 8.832 c 4.211 8.633 4.582
 8.473 4.969 8.352 c 5.27 7.809 5.535 7.254 5.766 6.68 c 5.625 6.367 5.52
 6.043 5.441 5.707 c 5.375 5.406 5.352 5.109 5.406 4.855 c 5.461 4.59 5.613
 4.352 5.895 4.238 c 6.039 4.18 6.195 4.148 6.348 4.18 c 6.5 4.215 6.633
 4.316 6.703 4.453 c 6.77 4.574 6.793 4.719 6.797 4.855 c 6.801 4.996 6.789
 5.152 6.762 5.316 c 6.699 5.699 6.559 6.168 6.371 6.66 c 6.375 6.664 l 
6.582 7.105 6.828 7.531 7.109 7.93 c 7.441 7.902 7.777 7.914 8.109 7.965
 c 8.383 8.016 8.66 8.109 8.828 8.312 c 8.918 8.422 8.973 8.551 8.977 8.699
 c 8.98 8.844 8.941 8.984 8.875 9.121 c 8.875 9.125 l 8.816 9.25 8.727 9.359
 8.609 9.438 c 8.496 9.512 8.363 9.547 8.227 9.543 c 7.977 9.531 7.734 9.395
 7.527 9.23 c 7.273 9.02 7.043 8.781 6.844 8.516 c 6.34 8.574 5.836 8.676
 5.348 8.82 c 5.125 9.219 4.867 9.598 4.582 9.953 c 4.363 10.215 4.125 10.445
 3.887 10.543 c 3.75 10.605 3.594 10.613 3.453 10.566 c 4.488 9.141 m 4.363
 9.199 4.25 9.258 4.145 9.32 c 3.898 9.465 3.738 9.609 3.66 9.73 c 3.59 
9.84 3.59 9.918 3.629 10 c 3.637 10.016 3.645 10.027 3.648 10.031 c 3.676
 10.023 l 3.777 9.98 3.941 9.848 4.152 9.594 c 4.148 9.594 l 4.27 9.449 
4.383 9.297 4.488 9.141 c 5.719 8.145 m 5.715 8.141 l 5.969 8.082 6.219 
8.035 6.473 7.996 c 6.336 7.789 6.211 7.574 6.09 7.355 c 5.973 7.621 5.848
 7.883 5.715 8.141 c h
7.555 8.48 m 7.668 8.602 7.777 8.707 7.883 8.789 c 8.062 8.93 8.188 8.98
 8.258 8.98 c 8.25 8.98 l 8.27 8.98 8.289 8.977 8.305 8.969 c 8.336 8.941
 8.359 8.91 8.375 8.875 c 8.398 8.828 8.414 8.777 8.418 8.723 c 8.418 8.707
 8.41 8.691 8.398 8.676 c 8.359 8.629 8.25 8.562 8.012 8.52 c 7.859 8.496
 7.703 8.48 7.551 8.48 c h
6.059 5.852 m 6.121 5.645 6.172 5.438 6.207 5.23 c 6.23 5.09 6.238 4.973
 6.234 4.883 c 6.238 4.879 l 6.238 4.828 6.23 4.781 6.215 4.73 c 6.176 4.734
 6.141 4.746 6.105 4.762 c 6.039 4.789 5.988 4.84 5.957 4.973 c 5.926 5.117
 5.934 5.324 5.992 5.59 c 6.012 5.672 6.031 5.762 6.059 5.848 c h
6.059 5.852 m f
Q Q
showpage
%%Trailer
%%EOF
