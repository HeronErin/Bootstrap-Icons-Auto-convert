%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 1344 m 96 1344 0 1344 0 1248 c 0 1152 96 864 576 864 c 1056 864 1152
 1152 1152 1248 c 1152 1344 1056 1344 1056 1344 c h
576 768 m 652.383 768 725.637 737.656 779.648 683.648 c 833.656 629.637
 864 556.383 864 480 c 864 403.617 833.656 330.363 779.648 276.352 c 725.637
 222.344 652.383 192 576 192 c 499.617 192 426.363 222.344 372.352 276.352
 c 318.344 330.363 288 403.617 288 480 c 288 556.383 318.344 629.637 372.352
 683.648 c 426.363 737.656 499.617 768 576 768 c f
1296 480 m 1308.73 480 1320.938 485.059 1329.941 494.059 c 1338.941 503.062
 1344 515.27 1344 528 c 1344 672 l 1488 672 l 1505.148 672 1520.996 681.148
 1529.57 696 c 1538.145 710.852 1538.145 729.148 1529.57 744 c 1520.996 
758.852 1505.148 768 1488 768 c 1344 768 l 1344 912 l 1344 929.148 1334.852
 944.996 1320 953.57 c 1305.148 962.145 1286.852 962.145 1272 953.57 c 1257.148
 944.996 1248 929.148 1248 912 c 1248 768 l 1104 768 l 1086.852 768 1071.004
 758.852 1062.43 744 c 1053.855 729.148 1053.855 710.852 1062.43 696 c 1071.004
 681.148 1086.852 672 1104 672 c 1248 672 l 1248 528 l 1248 515.27 1253.059
 503.062 1262.059 494.059 c 1271.062 485.059 1283.27 480 1296 480 c f*
Q Q
showpage
%%Trailer
%%EOF
