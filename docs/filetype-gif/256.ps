%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 108 192 l 108 180 l 144 180 l 147.184 180
 150.234 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168 c
 156 54 l 132 54 l 127.227 54 122.648 52.105 119.273 48.727 c 115.895 45.352
 114 40.773 114 36 c 114 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132
 l 24 132 l 24 24 l 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 
41.637 0 48 0 c 114 0 l h
39.336 157.488 m 39.145 155.434 38.574 153.434 37.656 151.586 c 36.738 
149.723 35.457 148.062 33.887 146.699 c 32.188 145.254 30.234 144.133 28.129
 143.398 c 25.672 142.57 23.09 142.164 20.496 142.199 c 16.16 142.199 12.457
 143.113 9.383 144.945 c 9.383 144.949 l 6.363 146.738 3.93 149.375 2.387
 152.531 c 0.711 156.094 -0.105 159.996 0 163.934 c 0 170.004 l 0 173.27
 0.422 176.246 1.262 178.945 c 2.102 181.633 3.383 183.953 5.102 185.906
 c 6.805 187.852 8.938 189.359 11.496 190.43 c 14.082 191.484 17.094 192.016
 20.531 192.016 c 23.746 192.016 26.535 191.57 28.895 190.684 c 28.895 190.68
 l 33.27 189.168 36.738 185.777 38.352 181.441 c 39.129 179.352 39.516 177.148
 39.516 174.828 c 39.516 165.266 l 20.605 165.266 l 20.605 172.332 l 30.48
 172.332 l 30.48 175.391 l 30.48 176.984 30.121 178.434 29.402 179.746 c
 29.398 179.746 l 28.637 181.098 27.5 182.199 26.125 182.914 c 24.414 183.727
 22.535 184.121 20.641 184.066 c 18.43 184.16 16.25 183.543 14.41 182.316
 c 12.738 181.055 11.465 179.332 10.754 177.359 c 9.941 174.984 9.551 172.488
 9.602 169.98 c 9.602 163.992 l 9.602 159.617 10.539 156.215 12.41 153.793
 c 14.305 151.395 16.965 150.188 20.391 150.18 c 20.387 150.18 l 21.609 
150.172 22.82 150.352 23.988 150.707 c 25.078 151.059 26.02 151.562 26.82
 152.219 c 27.633 152.848 28.324 153.621 28.859 154.5 c 29.414 155.426 29.809
 156.441 30.023 157.5 c h
55.57 191.102 m 55.57 143.113 l 46.078 143.113 l 46.078 191.113 l 55.559
 191.113 l h
73.484 172.023 m 73.484 191.102 l 63.992 191.102 l 63.992 143.113 l 94.559
 143.113 l 94.559 150.949 l 73.488 150.949 l 73.488 164.352 l 92.75 164.352
 l 92.75 172.008 l h
73.484 172.023 m f*
Q Q
showpage
%%Trailer
%%EOF
