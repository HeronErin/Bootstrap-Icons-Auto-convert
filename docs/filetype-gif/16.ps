%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 6.75 12 l 6.75 11.25 l 9 11.25 l 9.199 11.25 9.391
 11.172 9.531 11.031 c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l
 8.25 3.375 l 7.629 3.375 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l
 2.586 0.75 2.25 1.086 2.25 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672
 2.172 0 3 0 c 7.125 0 l h
2.457 9.844 m 2.445 9.715 2.41 9.59 2.352 9.473 c 2.297 9.359 2.215 9.254
 2.117 9.168 c 2.012 9.078 1.891 9.008 1.758 8.961 c 1.605 8.91 1.441 8.887
 1.281 8.887 c 1.012 8.887 0.777 8.945 0.586 9.059 c 0.398 9.172 0.246 9.336
 0.148 9.535 c 0.043 9.754 -0.008 10 0 10.246 c 0 10.625 l 0 10.828 0.027
 11.016 0.078 11.184 c 0.129 11.352 0.211 11.496 0.316 11.617 c 0.422 11.738
 0.555 11.832 0.715 11.898 c 0.875 11.965 1.066 11.996 1.281 11.996 c 1.48
 11.996 1.656 11.969 1.805 11.914 c 1.805 11.918 l 2.078 11.824 2.297 11.609
 2.398 11.34 c 2.445 11.211 2.473 11.07 2.473 10.926 c 2.473 10.328 l 1.289
 10.328 l 1.289 10.77 l 1.906 10.77 l 1.906 10.961 l 1.906 11.059 1.883 
11.152 1.84 11.234 c 1.836 11.234 l 1.789 11.32 1.719 11.387 1.633 11.434
 c 1.527 11.484 1.41 11.508 1.289 11.504 c 1.152 11.512 1.016 11.473 0.902
 11.395 c 0.797 11.316 0.715 11.207 0.672 11.086 c 0.621 10.938 0.598 10.781
 0.602 10.625 c 0.602 10.25 l 0.602 9.977 0.66 9.766 0.777 9.613 c 0.895
 9.465 1.062 9.387 1.277 9.387 c 1.273 9.387 l 1.352 9.387 1.426 9.398 1.5
 9.418 c 1.566 9.441 1.629 9.473 1.676 9.512 c 1.676 9.516 l 1.727 9.555
 1.77 9.602 1.805 9.656 c 1.84 9.715 1.863 9.777 1.875 9.844 c h
3.473 11.945 m 3.473 8.945 l 2.879 8.945 l 2.879 11.945 l h
4.594 10.754 m 4.594 11.945 l 4 11.945 l 4 8.945 l 5.91 8.945 l 5.91 9.434
 l 4.594 9.434 l 4.594 10.27 l 5.797 10.27 l 5.797 10.746 l h
4.594 10.754 m f*
Q Q
showpage
%%Trailer
%%EOF
