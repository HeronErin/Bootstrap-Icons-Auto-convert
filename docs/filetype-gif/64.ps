%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 27 48 l 27 45 l 36 45 l 36.797 45 37.559 44.684 38.121 
44.121 c 38.684 43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5
 28.5 11.484 28.5 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33
 l 6 6 l 6 2.688 8.688 0 12 0 c 28.5 0 l h
9.836 39.371 m 9.785 38.859 9.645 38.359 9.414 37.895 c 9.184 37.43 8.863
 37.016 8.473 36.676 c 8.047 36.312 7.559 36.035 7.031 35.852 c 6.418 35.641
 5.773 35.539 5.125 35.551 c 4.039 35.551 3.113 35.781 2.348 36.238 c 1.59
 36.684 0.984 37.344 0.598 38.133 c 0.18 39.023 -0.027 40 0 40.984 c 0 42.504
 l 0 43.32 0.105 44.066 0.316 44.738 c 0.527 45.41 0.848 45.992 1.277 46.477
 c 1.703 46.961 2.238 47.34 2.875 47.609 c 3.52 47.875 4.273 48.004 5.133
 48.004 c 5.938 48.004 6.633 47.895 7.223 47.672 c 8.316 47.293 9.184 46.445
 9.59 45.359 c 9.785 44.836 9.879 44.285 9.879 43.707 c 9.879 41.316 l 5.152
 41.316 l 5.152 43.082 l 7.621 43.082 l 7.621 43.848 l 7.621 44.246 7.531
 44.609 7.352 44.938 c 7.16 45.273 6.875 45.551 6.531 45.73 c 6.102 45.934
 5.633 46.031 5.16 46.016 c 4.609 46.039 4.062 45.887 3.602 45.578 c 3.184
 45.262 2.867 44.832 2.688 44.34 c 2.484 43.746 2.387 43.121 2.398 42.496
 c 2.398 41 l 2.398 39.906 2.633 39.055 3.102 38.449 c 3.574 37.848 4.242
 37.547 5.098 37.547 c 5.402 37.543 5.707 37.586 5.996 37.676 c 6.27 37.766
 6.504 37.891 6.703 38.055 c 6.91 38.211 7.082 38.406 7.215 38.625 c 7.352
 38.855 7.453 39.109 7.508 39.375 c h
13.895 47.773 m 13.895 35.777 l 11.52 35.777 l 11.52 47.777 l 13.891 47.777
 l h
18.375 43.004 m 18.375 47.773 l 16.004 47.773 l 16.004 35.777 l 23.641 
35.777 l 23.641 37.738 l 18.371 37.738 l 18.371 41.09 l 23.188 41.09 l 23.188
 43.004 l h
18.375 43.004 m f*
Q Q
showpage
%%Trailer
%%EOF
