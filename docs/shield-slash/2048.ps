%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 62 0 1441 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 62 0 1441 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 62 0 1379 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
104.93 296.93 m 60.289 707.328 189.891 1013.09 346.176 1217.473 c 414.512
 1307.59 495.961 1386.965 587.809 1452.961 c 624.863 1479.168 659.234 1499.234
 688.418 1512.961 c 715.297 1525.633 744.195 1536 768.004 1536 c 791.812
 1536 820.613 1525.633 847.59 1512.961 c 847.586 1512.961 l 882.801 1495.926
 916.465 1475.852 948.191 1452.961 c 1008.5 1409.969 1064.246 1360.91 1114.559
 1306.559 c 1043.039 1235.039 l 997.238 1284.641 946.477 1329.418 891.551
 1368.672 c 858.336 1392.098 828.957 1408.992 805.824 1419.84 c 794.305 
1425.281 784.93 1429.055 777.695 1431.168 c 774.508 1432.137 771.27 1432.938
 768 1433.566 c 764.762 1432.934 761.555 1432.133 758.398 1431.168 c 748.707
 1428.145 739.27 1424.355 730.176 1419.84 c 700.172 1405.297 671.488 1388.176
 644.449 1368.672 c 560.945 1308.613 486.934 1236.348 424.895 1154.305 c
 293.09 981.887 180.383 729.023 197.762 389.762 c h
382.078 190.078 m 300.285 108.285 l 300.289 108.289 l 362.18 89.012 424.395
 70.801 486.91 53.664 c 591.07 25.535 701.762 0 768 0 c 834.238 0 944.93
 25.441 1049.09 53.762 c 1155.648 82.562 1263.074 116.641 1326.242 137.281
 c 1326.238 137.281 l 1352.652 146 1376.066 161.996 1393.793 183.426 c 1411.523
 204.859 1422.848 230.855 1426.465 258.434 c 1472.832 606.531 1394.594 881.57
 1277.57 1085.57 c 1203.648 1011.648 l 1303.68 827.809 1368.77 582.625 1327.488
 272.258 c 1326.27 263.664 1322.648 255.594 1317.043 248.973 c 1311.438 
242.348 1304.078 237.441 1295.809 234.816 c 1233.41 214.367 1127.809 181.055
 1023.551 152.738 c 916.992 123.84 818.977 102.434 768 102.434 c 717.121
 102.434 619.008 123.84 512.449 152.738 c 512.449 152.734 l 468.852 164.602
 425.422 177.082 382.176 190.176 c h
1310.016 1377.98 m 62.016 129.98 l 129.984 62.012 l 1377.984 1310.012 l
 h
1310.016 1377.98 m f*
Q Q
showpage
%%Trailer
%%EOF
