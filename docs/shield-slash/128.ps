%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 3 0 90 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 3 0 90 96
96 96 cairo_set_page_size
%%EndPageSetup
q 3 0 87 96 rectclip
1 0 0 -1 0 96 cm q
0 g
6.559 18.559 m 3.77 44.207 11.867 63.32 21.637 76.094 c 25.906 81.723 30.996
 86.684 36.738 90.809 c 39.055 92.445 41.203 93.699 43.027 94.559 c 44.707
 95.352 46.512 96 48 96 c 49.488 96 51.289 95.352 52.973 94.559 c 55.176
 93.496 57.277 92.242 59.262 90.809 c 63.031 88.121 66.516 85.059 69.66 
81.66 c 65.191 77.191 l 62.328 80.289 59.156 83.09 55.723 85.543 c 53.648
 87.008 51.812 88.062 50.363 88.742 c 49.645 89.082 49.059 89.316 48.605
 89.449 c 48.406 89.508 48.203 89.559 48 89.598 c 47.797 89.559 47.598 89.508
 47.398 89.449 c 46.793 89.258 46.203 89.023 45.637 88.738 c 43.762 87.832
 41.969 86.762 40.277 85.543 c 35.059 81.789 30.434 77.273 26.555 72.145
 c 18.316 61.367 11.273 45.562 12.359 24.359 c h
23.879 11.879 m 18.766 6.766 l 18.77 6.77 l 22.637 5.562 26.523 4.426 30.434
 3.355 c 36.941 1.598 43.859 0 48 0 c 52.141 0 59.059 1.59 65.566 3.359 
c 72.227 5.16 78.941 7.289 82.887 8.578 c 82.891 8.578 l 86.258 9.691 88.691
 12.637 89.152 16.152 c 92.051 37.91 87.16 55.098 79.848 67.848 c 75.227
 63.227 l 81.48 51.738 85.547 36.414 82.965 17.016 c 82.969 17.016 l 82.812
 15.922 82.043 15.012 80.988 14.676 c 77.09 13.398 70.488 11.316 63.973 
9.547 c 57.312 7.738 51.188 6.402 48 6.402 c 44.82 6.402 38.688 7.742 32.027
 9.547 c 29.305 10.289 26.59 11.066 23.887 11.887 c h
81.875 86.121 m 3.875 8.121 l 8.121 3.875 l 86.121 81.875 l h
81.875 86.121 m f*
Q Q
showpage
%%Trailer
%%EOF
