%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 1 0 45 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 1 0 45 48
48 48 cairo_set_page_size
%%EndPageSetup
q 1 0 44 48 rectclip
1 0 0 -1 0 48 cm q
0 g
3.277 9.277 m 1.883 22.102 5.934 31.656 10.816 38.043 c 10.816 38.047 l
 12.953 40.863 15.5 43.344 18.367 45.406 c 19.523 46.227 20.598 46.852 21.512
 47.281 c 22.352 47.676 23.254 48 24 48 c 24.742 48 25.645 47.676 26.488
 47.281 c 27.586 46.746 28.641 46.121 29.633 45.406 c 31.516 44.062 33.258
 42.527 34.828 40.828 c 32.594 38.594 l 31.164 40.145 29.578 41.543 27.859
 42.77 c 26.82 43.5 25.902 44.031 25.18 44.367 c 24.82 44.539 24.527 44.656
 24.301 44.723 c 24.305 44.723 l 24.203 44.754 24.102 44.777 24 44.801 c
 23.898 44.777 23.797 44.754 23.699 44.723 c 23.398 44.629 23.102 44.512
 22.816 44.371 c 21.879 43.914 20.984 43.379 20.141 42.77 c 17.531 40.895
 15.215 38.637 13.277 36.07 c 9.16 30.684 5.637 22.781 6.18 12.18 c h
11.941 5.941 m 9.383 3.383 l 11.316 2.781 13.262 2.211 15.215 1.676 c 18.473
 0.797 21.93 0 24 0 c 26.07 0 29.527 0.797 32.785 1.68 c 36.113 2.578 39.473
 3.645 41.445 4.289 c 43.129 4.848 44.348 6.316 44.578 8.074 c 46.027 18.953
 43.582 27.547 39.926 33.922 c 37.617 31.613 l 40.742 25.867 42.777 18.207
 41.488 8.508 c 41.484 8.508 l 41.406 7.961 41.02 7.504 40.492 7.34 c 38.543
 6.699 35.242 5.66 31.984 4.773 c 28.656 3.871 25.594 3.199 24 3.199 c 22.41
 3.199 19.344 3.867 16.016 4.77 c 16.016 4.773 l 14.652 5.145 13.293 5.535
 11.941 5.941 c h
40.938 43.062 m 1.938 4.062 l 4.062 1.938 l 43.062 40.938 l h
40.938 43.062 m f*
Q Q
showpage
%%Trailer
%%EOF
