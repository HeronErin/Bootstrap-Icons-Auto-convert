%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1392 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1392 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1392 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 1200 m 479.98 1235.367 466.945 1269.492 443.383 1295.867 c 419.816 
1322.242 387.371 1339.023 352.227 1343.008 c 317.086 1346.992 281.703 1337.906
 252.832 1317.477 c 223.957 1297.051 203.613 1266.711 195.676 1232.246 c
 187.734 1197.781 192.758 1161.598 209.785 1130.598 c 226.812 1099.598 254.656
 1075.949 288 1064.16 c 288 240 l 288 222.852 297.148 207.004 312 198.43
 c 326.852 189.855 345.148 189.855 360 198.43 c 374.852 207.004 384 222.852
 384 240 c 384 1064.16 l 412.086 1074.09 436.402 1092.488 453.598 1116.816
 c 470.789 1141.145 480.016 1170.207 480 1200 c f
96 240 m 96 176.348 121.285 115.305 166.293 70.293 c 211.305 25.285 272.348
 0 336 0 c 399.652 0 460.695 25.285 505.707 70.293 c 550.715 115.305 576
 176.348 576 240 c 576 964.801 l 638.09 1028.168 672.598 1113.523 671.992
 1202.238 c 671.387 1290.953 635.723 1375.828 572.777 1438.344 c 509.832
 1500.863 424.715 1535.949 336 1535.949 c 247.285 1535.949 162.168 1500.863
 99.223 1438.344 c 36.277 1375.828 0.613 1290.953 0.008 1202.238 c -0.598
 1113.523 33.91 1028.168 96 964.801 c h
336 96 m 297.809 96 261.184 111.172 234.176 138.176 c 207.172 165.184 192
 201.809 192 240 c 192 1006.754 l 175.969 1021.152 l 139.734 1053.555 114.195
 1096.195 102.727 1143.43 c 91.258 1190.664 94.406 1240.27 111.746 1285.68
 c 129.09 1331.09 159.812 1370.16 199.848 1397.727 c 239.883 1425.293 287.344
 1440.051 335.953 1440.051 c 384.559 1440.051 432.023 1425.293 472.059 1397.727
 c 512.094 1370.16 542.816 1331.09 560.156 1285.68 c 577.5 1240.27 580.645
 1190.664 569.176 1143.43 c 557.711 1096.195 532.168 1053.555 495.938 1021.152
 c 480 1006.656 l 480 240 l 480 201.809 464.828 165.184 437.824 138.176 
c 410.816 111.172 374.191 96 336 96 c 816 192 m 828.73 192 840.938 197.059
 849.941 206.059 c 858.941 215.062 864 227.27 864 240 c 864 336 l 864 353.148
 854.852 368.996 840 377.57 c 825.148 386.145 806.852 386.145 792 377.57
 c 777.148 368.996 768 353.148 768 336 c 768 240 l 768 227.27 773.059 215.062
 782.059 206.059 c 791.062 197.059 803.27 192 816 192 c 1223.328 360.672
 m 1232.328 369.672 1237.383 381.879 1237.383 394.609 c 1237.383 407.336
 1232.328 419.543 1223.328 428.543 c 1155.457 496.512 l 1143.316 508.652
 1125.617 513.395 1109.031 508.949 c 1092.449 504.508 1079.492 491.551 1075.051
 474.969 c 1070.605 458.383 1075.348 440.684 1087.488 428.543 c 1155.457
 360.672 l 1164.457 351.672 1176.664 346.617 1189.391 346.617 c 1202.121
 346.617 1214.328 351.672 1223.328 360.672 c 768 528 m 768 515.27 773.059
 503.062 782.059 494.059 c 791.062 485.059 803.27 480 816 480 c 892.383 
480 965.637 510.344 1019.648 564.352 c 1073.656 618.363 1104 691.617 1104
 768 c 1104 844.383 1073.656 917.637 1019.648 971.648 c 965.637 1025.656
 892.383 1056 816 1056 c 798.852 1056 783.004 1046.852 774.43 1032 c 765.855
 1017.148 765.855 998.852 774.43 984 c 783.004 969.148 798.852 960 816 960
 c 866.922 960 915.758 939.773 951.766 903.766 c 987.773 867.758 1008 818.922
 1008 768 c 1008 717.078 987.773 668.242 951.766 632.234 c 915.758 596.227
 866.922 576 816 576 c 803.27 576 791.062 570.941 782.059 561.941 c 773.059
 552.938 768 540.73 768 528 c 1200 768 m 1200 755.27 1205.059 743.062 1214.059
 734.059 c 1223.062 725.059 1235.27 720 1248 720 c 1344 720 l 1361.148 720
 1376.996 729.148 1385.57 744 c 1394.145 758.852 1394.145 777.148 1385.57
 792 c 1376.996 806.852 1361.148 816 1344 816 c 1248 816 l 1235.27 816 1223.062
 810.941 1214.059 801.941 c 1205.059 792.938 1200 780.73 1200 768 c 1087.488
 1039.488 m 1096.492 1030.461 1108.719 1025.387 1121.473 1025.387 c 1134.223
 1025.387 1146.449 1030.461 1155.457 1039.488 c 1223.328 1107.457 l 1235.102
 1119.648 1239.574 1137.148 1235.094 1153.492 c 1230.613 1169.84 1217.84
 1182.613 1201.492 1187.094 c 1185.148 1191.574 1167.648 1187.102 1155.457
 1175.328 c 1087.488 1107.457 l 1078.461 1098.449 1073.387 1086.223 1073.387
 1073.473 c 1073.387 1060.719 1078.461 1048.492 1087.488 1039.488 c 816 
1152 m 828.73 1152 840.938 1157.059 849.941 1166.059 c 858.941 1175.062 
864 1187.27 864 1200 c 864 1296 l 864 1313.148 854.852 1328.996 840 1337.57
 c 825.148 1346.145 806.852 1346.145 792 1337.57 c 777.148 1328.996 768 
1313.148 768 1296 c 768 1200 l 768 1187.27 773.059 1175.062 782.059 1166.059
 c 791.062 1157.059 803.27 1152 816 1152 c f
Q Q
showpage
%%Trailer
%%EOF
