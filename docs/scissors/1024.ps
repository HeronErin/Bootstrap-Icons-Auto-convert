%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 95 0 673 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 95 0 673 720
768 768 cairo_set_page_size
%%EndPageSetup
q 95 0 578 720 rectclip
1 0 0 -1 0 768 cm q
0 g
168 168 m 138.527 125.566 164.449 73.824 209.184 48 c 384 346.848 l 558.816
 48 l 603.551 73.824 629.473 125.566 600 168 c 422.879 413.281 l 497.566
 541.008 l 533.172 522.875 575.465 523.648 610.379 543.074 c 645.293 562.504
 668.246 598.031 671.605 637.848 c 674.965 677.66 658.289 716.535 627.125
 741.535 c 595.961 766.539 554.395 774.391 516.258 762.48 c 478.117 750.566
 448.41 720.453 437.016 682.16 c 425.621 643.863 434.035 602.406 459.457
 571.586 c 384 467.039 l 308.543 571.535 l 333.965 602.359 342.379 643.816
 330.984 682.109 c 319.59 720.406 289.883 750.52 251.742 762.43 c 213.605
 774.344 172.039 766.492 140.875 741.488 c 109.711 716.484 93.035 677.613
 96.395 637.797 c 99.754 597.984 122.707 562.453 157.621 543.027 c 192.535
 523.602 234.828 522.824 270.434 540.961 c 345.121 413.281 l h
288 648 m 288 622.277 274.277 598.508 252 585.645 c 229.723 572.785 202.277
 572.785 180 585.645 c 157.723 598.508 144 622.277 144 648 c 144 673.723
 157.723 697.492 180 710.355 c 202.277 723.215 229.723 723.215 252 710.355
 c 274.277 697.492 288 673.723 288 648 c 624 648 m 624 622.277 610.277 598.508
 588 585.645 c 565.723 572.785 538.277 572.785 516 585.645 c 493.723 598.508
 480 622.277 480 648 c 480 673.723 493.723 697.492 516 710.355 c 538.277
 723.215 565.723 723.215 588 710.355 c 610.277 697.492 624 673.723 624 648
 c f
Q Q
showpage
%%Trailer
%%EOF
