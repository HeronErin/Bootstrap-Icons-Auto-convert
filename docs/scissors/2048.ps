%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 191 0 1345 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 191 0 1345 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 191 0 1154 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 336 m 277.055 251.137 328.895 147.648 418.367 96 c 768 693.695 l 1117.633
 96 l 1207.105 147.648 1258.945 251.137 1200 336 c 845.762 826.559 l 995.137
 1082.016 l 1048.066 1055.055 1109.113 1048.684 1166.469 1064.129 c 1223.824
 1079.574 1273.418 1115.738 1305.652 1165.633 c 1337.887 1215.523 1350.473
 1275.598 1340.977 1334.234 c 1331.484 1392.871 1300.582 1445.902 1254.25
 1483.074 c 1207.918 1520.246 1149.445 1538.914 1090.148 1535.469 c 1030.848
 1532.023 974.93 1506.711 933.215 1464.426 c 891.496 1422.141 866.941 1365.887
 864.301 1306.547 c 861.66 1247.207 881.117 1188.992 918.91 1143.168 c 768
 934.078 l 617.09 1143.07 l 654.883 1188.898 674.34 1247.109 671.699 1306.449
 c 669.059 1365.793 644.504 1422.047 602.785 1464.332 c 561.07 1506.617 
505.152 1531.93 445.852 1535.371 c 386.555 1538.816 328.082 1520.148 281.75
 1482.977 c 235.418 1445.809 204.516 1392.773 195.023 1334.141 c 185.527
 1275.504 198.113 1215.43 230.348 1165.535 c 262.582 1115.645 312.176 1079.477
 369.531 1064.031 c 426.887 1048.586 487.934 1054.961 540.863 1081.922 c
 690.238 826.559 l h
576 1296 m 576 1244.555 548.555 1197.016 504 1171.293 c 459.445 1145.57
 404.555 1145.57 360 1171.293 c 315.445 1197.016 288 1244.555 288 1296 c
 288 1347.445 315.445 1394.984 360 1420.707 c 404.555 1446.43 459.445 1446.43
 504 1420.707 c 548.555 1394.984 576 1347.445 576 1296 c 1248 1296 m 1248
 1244.555 1220.555 1197.016 1176 1171.293 c 1131.445 1145.57 1076.555 1145.57
 1032 1171.293 c 987.445 1197.016 960 1244.555 960 1296 c 960 1347.445 987.445
 1394.984 1032 1420.707 c 1076.555 1446.43 1131.445 1446.43 1176 1420.707
 c 1220.555 1394.984 1248 1347.445 1248 1296 c f
Q Q
showpage
%%Trailer
%%EOF
