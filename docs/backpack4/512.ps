%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 36 0 348 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 36 0 348 384
384 384 cairo_set_page_size
%%EndPageSetup
q 36 0 312 384 rectclip
1 0 0 -1 0 384 cm q
0 g
96 228 m 96 221.371 101.371 216 108 216 c 276 216 l 279.184 216 282.234
 217.266 284.484 219.516 c 286.734 221.766 288 224.816 288 228 c 288 324
 l 288 327.184 286.734 330.234 284.484 332.484 c 282.234 334.734 279.184
 336 276 336 c 108 336 l 101.371 336 96 330.629 96 324 c h
120 240 m 120 312 l 264 312 l 264 240 l 240 240 l 240 252 l 240 258.629
 234.629 264 228 264 c 221.371 264 216 258.629 216 252 c 216 240 l h
120 240 m f
192 0 m 179.27 0 167.062 5.059 158.059 14.059 c 149.059 23.062 144 35.27
 144 48 c 84 48 l 71.27 48 59.062 53.059 50.059 62.059 c 41.059 71.062 36
 83.27 36 96 c 36 120 l 36 132.48 40.754 143.832 48.551 152.375 c 48.184
 153.547 47.996 154.77 48 156 c 48 336 l 48 348.73 53.059 360.938 62.059
 369.941 c 71.062 378.941 83.27 384 96 384 c 288 384 l 300.73 384 312.938
 378.941 321.941 369.941 c 330.941 360.938 336 348.73 336 336 c 336 156 
l 336.004 154.77 335.816 153.547 335.449 152.375 c 343.25 143.832 348 132.453
 348 120 c 348 96 l 348 83.27 342.941 71.062 333.941 62.059 c 324.938 53.059
 312.73 48 300 48 c 240 48 l 240 35.27 234.941 23.062 225.941 14.059 c 216.938
 5.059 204.73 0 192 0 c 192 24 m 185.637 24 179.531 26.527 175.031 31.031
 c 170.527 35.531 168 41.637 168 48 c 216 48 l 216 41.637 213.473 35.531
 208.969 31.031 c 204.469 26.527 198.363 24 192 24 c 72 336 m 72 166.488
 l 75.84 167.48 79.84 167.984 84 168 c 180 168 l 180 180 l 180 186.629 185.371
 192 192 192 c 198.629 192 204 186.629 204 180 c 204 168 l 300 168 l 304.16
 168 308.16 167.496 312 166.488 c 312 336 l 312 342.363 309.473 348.469 
304.969 352.969 c 300.469 357.473 294.363 360 288 360 c 96 360 l 89.637 
360 83.531 357.473 79.031 352.969 c 74.527 348.469 72 342.363 72 336 c 300
 72 m 306.363 72 312.469 74.527 316.969 79.031 c 321.473 83.531 324 89.637
 324 96 c 324 120 l 324 126.363 321.473 132.469 316.969 136.969 c 312.469
 141.473 306.363 144 300 144 c 84 144 l 77.637 144 71.531 141.473 67.031
 136.969 c 62.527 132.469 60 126.363 60 120 c 60 96 l 60 89.637 62.527 83.531
 67.031 79.031 c 71.531 74.527 77.637 72 84 72 c h
300 72 m f
Q Q
showpage
%%Trailer
%%EOF
