%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 0 696 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 0 696 768
768 768 cairo_set_page_size
%%EndPageSetup
q 72 0 624 768 rectclip
1 0 0 -1 0 768 cm q
0 g
192 456 m 192 449.637 194.527 443.531 199.031 439.031 c 203.531 434.527
 209.637 432 216 432 c 552 432 l 558.363 432 564.469 434.527 568.969 439.031
 c 573.473 443.531 576 449.637 576 456 c 576 648 l 576 654.363 573.473 660.469
 568.969 664.969 c 564.469 669.473 558.363 672 552 672 c 216 672 l 209.637
 672 203.531 669.473 199.031 664.969 c 194.527 660.469 192 654.363 192 648
 c h
240 480 m 240 624 l 528 624 l 528 480 l 480 480 l 480 504 l 480 512.574
 475.426 520.496 468 524.785 c 460.574 529.07 451.426 529.07 444 524.785
 c 436.574 520.496 432 512.574 432 504 c 432 480 l h
240 480 m f
384 0 m 358.539 0 334.121 10.113 316.117 28.117 c 298.113 46.121 288 70.539
 288 96 c 168 96 l 142.539 96 118.121 106.113 100.117 124.117 c 82.113 142.121
 72 166.539 72 192 c 72 240 l 72 264.961 81.504 287.664 97.105 304.754 c
 96.367 307.098 95.996 309.543 96 312 c 96 672 l 96 697.461 106.113 721.879
 124.117 739.883 c 142.121 757.887 166.539 768 192 768 c 576 768 l 601.461
 768 625.879 757.887 643.883 739.883 c 661.887 721.879 672 697.461 672 672
 c 672 312 l 672.004 309.543 671.633 307.098 670.895 304.754 c 686.496 287.664
 696 264.914 696 240 c 696 192 l 696 166.539 685.887 142.121 667.883 124.117
 c 649.879 106.113 625.461 96 600 96 c 480 96 l 480 70.539 469.887 46.121
 451.883 28.117 c 433.879 10.113 409.461 0 384 0 c 384 48 m 371.27 48 359.062
 53.059 350.059 62.059 c 341.059 71.062 336 83.27 336 96 c 432 96 l 432 
83.27 426.941 71.062 417.941 62.059 c 408.938 53.059 396.73 48 384 48 c 
144 672 m 144 332.977 l 151.68 334.961 159.68 335.969 168 336 c 360 336 
l 360 360 l 360 368.574 364.574 376.496 372 380.785 c 379.426 385.07 388.574
 385.07 396 380.785 c 403.426 376.496 408 368.574 408 360 c 408 336 l 600
 336 l 608.32 336 616.32 334.992 624 332.977 c 624 672 l 624 684.73 618.941
 696.938 609.941 705.941 c 600.938 714.941 588.73 720 576 720 c 192 720 
l 179.27 720 167.062 714.941 158.059 705.941 c 149.059 696.938 144 684.73
 144 672 c 600 144 m 612.73 144 624.938 149.059 633.941 158.059 c 642.941
 167.062 648 179.27 648 192 c 648 240 l 648 252.73 642.941 264.938 633.941
 273.941 c 624.938 282.941 612.73 288 600 288 c 168 288 l 155.27 288 143.062
 282.941 134.059 273.941 c 125.059 264.938 120 252.73 120 240 c 120 192 
l 120 179.27 125.059 167.062 134.059 158.059 c 143.062 149.059 155.27 144
 168 144 c h
600 144 m f
Q Q
showpage
%%Trailer
%%EOF
