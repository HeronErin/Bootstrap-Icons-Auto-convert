%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 18 0 174 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 18 0 174 192
192 192 cairo_set_page_size
%%EndPageSetup
q 18 0 156 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48 114 m 48 110.688 50.688 108 54 108 c 138 108 l 139.59 108 141.117 108.633
 142.242 109.758 c 143.367 110.883 144 112.41 144 114 c 144 162 l 144 163.59
 143.367 165.117 142.242 166.242 c 141.117 167.367 139.59 168 138 168 c 
54 168 l 50.688 168 48 165.312 48 162 c h
60 120 m 60 156 l 132 156 l 132 120 l 120 120 l 120 126 l 120 129.312 117.312
 132 114 132 c 110.688 132 108 129.312 108 126 c 108 120 l h
60 120 m f
96 0 m 89.637 0 83.531 2.527 79.031 7.031 c 74.527 11.531 72 17.637 72 
24 c 42 24 l 35.637 24 29.531 26.527 25.031 31.031 c 20.527 35.531 18 41.637
 18 48 c 18 60 l 18 66.238 20.375 71.914 24.277 76.188 c 24.09 76.773 24
 77.387 24 78 c 24 168 l 24 174.363 26.527 180.469 31.031 184.969 c 35.531
 189.473 41.637 192 48 192 c 144 192 l 150.363 192 156.469 189.473 160.969
 184.969 c 165.473 180.469 168 174.363 168 168 c 168 78 l 168 77.387 167.91
 76.773 167.723 76.188 c 171.621 71.914 174 66.227 174 60 c 174 48 l 174
 41.637 171.473 35.531 166.969 31.031 c 162.469 26.527 156.363 24 150 24
 c 120 24 l 120 17.637 117.473 11.531 112.969 7.031 c 108.469 2.527 102.363
 0 96 0 c 96 12 m 89.371 12 84 17.371 84 24 c 108 24 l 108 20.816 106.734
 17.766 104.484 15.516 c 102.234 13.266 99.184 12 96 12 c 36 168 m 36 83.242
 l 37.922 83.738 39.922 83.988 42 84 c 90 84 l 90 90 l 90 93.312 92.688 
96 96 96 c 99.312 96 102 93.312 102 90 c 102 84 l 150 84 l 152.078 84 154.078
 83.746 156 83.242 c 156 168 l 156 171.184 154.734 174.234 152.484 176.484
 c 150.234 178.734 147.184 180 144 180 c 48 180 l 41.371 180 36 174.629 
36 168 c 150 36 m 153.184 36 156.234 37.266 158.484 39.516 c 160.734 41.766
 162 44.816 162 48 c 162 60 l 162 63.184 160.734 66.234 158.484 68.484 c
 156.234 70.734 153.184 72 150 72 c 42 72 l 35.371 72 30 66.629 30 60 c 
30 48 l 30 41.371 35.371 36 42 36 c h
150 36 m f
Q Q
showpage
%%Trailer
%%EOF
