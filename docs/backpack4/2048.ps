%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 0 1392 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 0 1392 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 0 1248 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 912 m 384 899.27 389.059 887.062 398.059 878.059 c 407.062 869.059 
419.27 864 432 864 c 1104 864 l 1116.73 864 1128.938 869.059 1137.941 878.059
 c 1146.941 887.062 1152 899.27 1152 912 c 1152 1296 l 1152 1308.73 1146.941
 1320.938 1137.941 1329.941 c 1128.938 1338.941 1116.73 1344 1104 1344 c
 432 1344 l 419.27 1344 407.062 1338.941 398.059 1329.941 c 389.059 1320.938
 384 1308.73 384 1296 c h
480 960 m 480 1248 l 1056 1248 l 1056 960 l 960 960 l 960 1008 l 960 1025.148
 950.852 1040.996 936 1049.57 c 921.148 1058.145 902.852 1058.145 888 1049.57
 c 873.148 1040.996 864 1025.148 864 1008 c 864 960 l h
480 960 m f
768 0 m 717.078 0 668.242 20.227 632.234 56.234 c 596.227 92.242 576 141.078
 576 192 c 336 192 l 285.078 192 236.242 212.227 200.234 248.234 c 164.227
 284.242 144 333.078 144 384 c 144 480 l 144 529.922 163.008 575.328 194.207
 609.504 c 192.734 614.195 191.988 619.082 192 624 c 192 1344 l 192 1377.703
 200.871 1410.812 217.723 1440 c 234.574 1469.188 258.812 1493.426 288 1510.277
 c 317.188 1527.129 350.297 1536 384 1536 c 1152 1536 l 1185.703 1536 1218.812
 1527.129 1248 1510.277 c 1277.188 1493.426 1301.426 1469.188 1318.277 1440
 c 1335.129 1410.812 1344 1377.703 1344 1344 c 1344 624 l 1344.012 619.082
 1343.266 614.195 1341.793 609.504 c 1372.992 575.328 1392 529.824 1392 
480 c 1392 384 l 1392 350.297 1383.129 317.188 1366.277 288 c 1349.426 258.812
 1325.188 234.574 1296 217.723 c 1266.812 200.871 1233.703 192 1200 192 
c 960 192 l 960 158.297 951.129 125.188 934.277 96 c 917.426 66.812 893.188
 42.574 864 25.723 c 834.812 8.871 801.703 0 768 0 c 768 96 m 742.539 96
 718.121 106.113 700.117 124.117 c 682.113 142.121 672 166.539 672 192 c
 864 192 l 864 166.539 853.887 142.121 835.883 124.117 c 817.879 106.113
 793.461 96 768 96 c 288 1344 m 288 665.953 l 303.359 669.922 319.359 671.938
 336 672 c 720 672 l 720 720 l 720 737.148 729.148 752.996 744 761.57 c 
758.852 770.145 777.148 770.145 792 761.57 c 806.852 752.996 816 737.148
 816 720 c 816 672 l 1200 672 l 1216.641 672 1232.641 669.984 1248 665.953
 c 1248 1344 l 1248 1369.461 1237.887 1393.879 1219.883 1411.883 c 1201.879
 1429.887 1177.461 1440 1152 1440 c 384 1440 l 358.539 1440 334.121 1429.887
 316.117 1411.883 c 298.113 1393.879 288 1369.461 288 1344 c 1200 288 m 
1225.461 288 1249.879 298.113 1267.883 316.117 c 1285.887 334.121 1296 358.539
 1296 384 c 1296 480 l 1296 505.461 1285.887 529.879 1267.883 547.883 c 
1249.879 565.887 1225.461 576 1200 576 c 336 576 l 310.539 576 286.121 565.887
 268.117 547.883 c 250.113 529.879 240 505.461 240 480 c 240 384 l 240 358.539
 250.113 334.121 268.117 316.117 c 286.121 298.113 310.539 288 336 288 c
 h
1200 288 m f
Q Q
showpage
%%Trailer
%%EOF
