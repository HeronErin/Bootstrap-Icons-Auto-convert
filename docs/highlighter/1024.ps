%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 764 764
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 764 764
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 764 716 rectclip
1 0 0 -1 0 768 cm q
0 g
532.609 30.91 m 550.758 13.68 574.918 4.219 599.941 4.543 c 624.969 4.863
 648.875 14.945 666.574 32.641 c 735.359 101.426 l 753.047 119.129 763.121
 143.043 763.434 168.066 c 763.746 193.09 754.277 217.25 737.039 235.391
 c 717.215 256.27 l 329.855 688.031 l 325.305 693.102 318.812 696 312 696
 c 168 696 l 164.086 696.004 160.23 695.047 156.77 693.215 c 136.992 712.992
 l 132.48 717.492 126.371 720.012 120 720 c 24 720 l 17.625 720.012 11.512
 717.488 7 712.984 c 2.488 708.48 -0.043 702.367 -0.043 695.992 c -0.043
 689.621 2.496 683.508 7.008 679.008 c 74.785 611.23 l 72.953 607.77 71.996
 603.914 72 600 c 72 456 l 72 449.188 74.898 442.695 79.969 438.145 c 511.73
 50.785 l h
527.09 101.469 m 130.895 456.961 l 311.039 637.105 l 666.527 240.914 l 
h
699.168 205.629 m 702.238 202.363 l 702.238 202.367 l 710.867 193.297 715.613
 181.215 715.461 168.699 c 715.309 156.18 710.27 144.219 701.426 135.359
 c 632.641 66.574 l 623.789 57.723 611.828 52.676 599.312 52.516 c 586.793
 52.355 574.707 57.09 565.633 65.711 c 562.367 68.832 l h
254.062 648 m 120 513.938 l 120 590.066 l 177.938 648 l h
254.062 648 m f*
Q Q
showpage
%%Trailer
%%EOF
