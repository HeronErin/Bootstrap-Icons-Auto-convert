%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 382 382
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 382 382
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 382 358 rectclip
1 0 0 -1 0 384 cm q
0 g
266.305 15.457 m 275.379 6.84 287.461 2.109 299.973 2.27 c 312.484 2.434
 324.438 7.473 333.289 16.32 c 367.68 50.711 l 376.523 59.566 381.559 71.52
 381.719 84.035 c 381.875 96.547 377.137 108.625 368.52 117.695 c 358.609
 128.137 l 164.93 344.016 l 162.652 346.551 159.406 348 156 348 c 84 348
 l 82.043 348 80.113 347.523 78.383 346.609 c 68.496 356.496 l 66.242 358.746
 63.184 360.004 60 360 c 12 360 l 7.141 360.008 2.754 357.086 0.895 352.594
 c -0.969 348.105 0.062 342.938 3.504 339.504 c 37.391 305.617 l 36.477 
303.887 36 301.957 36 300 c 36 228 l 36 224.594 37.449 221.348 39.984 219.07
 c 255.863 25.391 l h
263.543 50.738 m 65.449 228.48 l 155.52 318.551 l 333.262 120.453 l h
349.582 102.816 m 351.117 101.184 l 351.121 101.184 l 355.434 96.648 357.805
 90.609 357.73 84.348 c 357.652 78.09 355.137 72.109 350.711 67.68 c 316.32
 33.289 l 311.895 28.859 305.914 26.34 299.656 26.258 c 293.398 26.176 287.355
 28.543 282.816 32.855 c 281.184 34.414 l h
127.031 324 m 60 256.969 l 60 295.031 l 88.969 324 l h
127.031 324 m f*
Q Q
showpage
%%Trailer
%%EOF
