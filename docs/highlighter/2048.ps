%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1527 1527
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1527 1527
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1527 1431 rectclip
1 0 0 -1 0 1536 cm q
0 g
1065.215 61.824 m 1101.516 27.363 1149.836 8.438 1199.887 9.082 c 1249.934
 9.73 1297.754 29.895 1333.152 65.281 c 1470.719 202.848 l 1506.094 238.258
 1526.242 286.086 1526.867 336.133 c 1527.496 386.18 1508.555 434.496 1474.078
 470.785 c 1434.43 512.547 l 659.711 1376.066 l 659.711 1376.062 l 650.609
 1386.203 637.625 1391.996 624 1392 c 336 1392 l 328.172 1392.004 320.457
 1390.094 313.535 1386.434 c 273.984 1425.984 l 264.965 1434.98 252.738 
1440.023 240 1440 c 48 1440 l 35.254 1440.023 23.02 1434.973 14 1425.969
 c 4.977 1416.961 -0.09 1404.734 -0.086 1391.988 c -0.082 1379.242 4.992
 1367.02 14.016 1358.016 c 149.566 1222.465 l 145.906 1215.543 143.996 1207.828
 144 1200 c 144 912 l 144.004 898.375 149.797 885.391 159.938 876.289 c 
1023.457 101.57 l h
1054.176 202.945 m 261.793 913.922 l 622.082 1274.211 l 1333.059 481.828
 l h
1398.336 411.266 m 1404.48 404.738 l 1404.48 404.734 l 1421.738 386.598
 1431.227 362.434 1430.922 337.395 c 1430.617 312.359 1420.543 288.434 1402.848
 270.719 c 1265.281 133.152 l 1247.578 115.445 1223.66 105.352 1198.625 
105.031 c 1173.586 104.707 1149.418 114.18 1131.266 131.426 c 1124.738 137.664
 l h
508.129 1296 m 240 1027.871 l 240 1180.129 l 355.871 1296 l h
508.129 1296 m f*
Q Q
showpage
%%Trailer
%%EOF
