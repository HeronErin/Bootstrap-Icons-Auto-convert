%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 9 0 39 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 9 0 39 48
48 48 cairo_set_page_size
%%EndPageSetup
q 9 0 30 48 rectclip
1 0 0 -1 0 48 cm q
0 g
25.441 32.703 m 33.633 30.68 39 23.512 39 15 c 39 9.641 36.141 4.688 31.5
 2.008 c 26.859 -0.668 21.141 -0.668 16.5 2.008 c 11.859 4.688 9 9.641 9
 15 c 9 23.512 14.367 30.68 22.559 32.703 c 21.828 34.164 l 21.641 34.535
 21.793 34.988 22.164 35.172 c 22.535 35.359 22.988 35.207 23.172 34.836
 c 23.293 34.598 l 23.32 35.109 23.363 35.543 23.445 35.949 c 23.648 36.98
 24.07 37.816 24.789 39.254 c 24.828 39.34 l 25.465 40.605 25.375 41.891
 24.977 43.078 c 24.57 44.285 23.879 45.332 23.375 46.086 c 23.375 46.082
 l 23.266 46.25 23.227 46.449 23.266 46.645 c 23.301 46.84 23.418 47.012
 23.582 47.125 c 23.926 47.355 24.395 47.262 24.625 46.918 c 24.637 46.898
 l 25.133 46.156 25.93 44.961 26.402 43.555 c 26.883 42.117 27.039 40.402
 26.176 38.668 c 25.402 37.121 25.082 36.473 24.918 35.656 c 24.914 35.652
 l 24.855 35.367 24.82 35.078 24.805 34.785 c 24.828 34.836 l 25.012 35.207
 25.465 35.359 25.836 35.172 c 26.207 34.988 26.359 34.535 26.172 34.164
 c h
13.055 10.066 m 14.773 6.254 18.355 3.613 22.508 3.094 c 23.32 2.992 24
 3.672 24 4.5 c 24 5.328 23.32 5.988 22.508 6.125 c 19.656 6.609 17.262 
8.465 15.988 10.977 c 15.699 11.582 15.098 11.977 14.426 12 c 13.387 12 
12.629 11.012 13.055 10.066 c f*
Q Q
showpage
%%Trailer
%%EOF
