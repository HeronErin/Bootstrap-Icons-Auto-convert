%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 23 1248 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 23 1248 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 23 960 1513 rectclip
1 0 0 -1 0 1536 cm q
0 g
814.078 1046.496 m 1076.258 981.793 1248 752.352 1248 480 c 1248 352.695
 1197.43 230.605 1107.41 140.59 c 1017.395 50.57 895.305 0 768 0 c 640.695
 0 518.605 50.57 428.59 140.59 c 338.57 230.605 288 352.695 288 480 c 288
 752.352 459.742 981.793 721.922 1046.496 c 698.496 1093.25 l 698.496 1093.246
 l 694.656 1100.93 695.203 1110.078 699.938 1117.246 c 704.668 1124.414 
712.867 1128.512 721.441 1128 c 730.016 1127.484 737.664 1122.434 741.504
 1114.754 c 745.344 1107.074 l 746.207 1123.395 747.648 1137.312 750.238
 1150.273 c 756.766 1183.297 770.207 1209.984 793.246 1256.066 c 794.492
 1258.754 l 814.844 1299.266 811.965 1340.355 799.293 1378.371 c 786.332
 1416.965 764.156 1450.469 748.027 1474.66 c 748.031 1474.656 l 744.492 
1479.953 743.203 1486.438 744.445 1492.684 c 745.688 1498.93 749.359 1504.43
 754.656 1507.969 c 759.953 1511.508 766.438 1512.797 772.684 1511.555 c
 778.93 1510.312 784.43 1506.641 787.969 1501.344 c 788.352 1500.672 l 804.289
 1476.863 829.727 1438.656 844.801 1393.633 c 860.16 1347.648 865.152 1292.738
 837.504 1237.25 c 812.734 1187.809 802.465 1166.977 797.281 1140.867 c 
797.281 1140.863 l 795.422 1131.715 794.234 1122.441 793.727 1113.121 c 
794.496 1114.754 l 798.336 1122.434 805.984 1127.484 814.559 1128 c 823.133
 1128.512 831.332 1124.414 836.062 1117.246 c 840.797 1110.078 841.344 1100.93
 837.504 1093.246 c h
417.793 322.176 m 444.844 262.176 486.863 210.137 539.816 171.051 c 592.773
 131.965 654.883 107.145 720.191 98.977 c 746.305 95.711 768 117.504 768
 144 c 768 170.496 746.305 191.617 720.191 196.031 c 628.992 211.582 552.289
 270.91 511.582 351.262 c 511.586 351.266 l 507.047 360.762 499.996 368.832
 491.195 374.605 c 482.395 380.375 472.18 383.625 461.664 384 c 428.449 
384 404.16 352.414 417.793 322.176 c f*
Q Q
showpage
%%Trailer
%%EOF
