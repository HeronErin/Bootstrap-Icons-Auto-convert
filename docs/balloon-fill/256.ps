%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 36 2 156 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 36 2 156 192
192 192 cairo_set_page_size
%%EndPageSetup
q 36 2 120 190 rectclip
1 0 0 -1 0 192 cm q
0 g
101.762 130.812 m 134.531 122.723 156 94.043 156 60 c 156 38.562 144.562
 18.758 126 8.039 c 107.438 -2.68 84.562 -2.68 66 8.039 c 47.438 18.758 
36 38.562 36 60 c 36 94.043 57.469 122.723 90.238 130.812 c 87.309 136.656
 l 87.312 136.656 l 86.57 138.141 87.172 139.945 88.656 140.688 c 90.141
 141.43 91.945 140.828 92.688 139.344 c 93.168 138.383 l 93.277 140.422 
93.457 142.164 93.781 143.781 c 94.598 147.91 96.277 151.246 99.156 157.004
 c 99.312 157.34 l 101.855 162.402 101.496 167.539 99.914 172.293 c 98.293
 177.117 95.523 181.305 93.508 184.328 c 93.504 184.332 l 93.062 184.992
 92.898 185.805 93.055 186.586 c 93.211 187.367 93.672 188.055 94.332 188.496
 c 95.711 189.418 97.574 189.047 98.496 187.668 c 98.543 187.582 l 100.535
 184.605 103.715 179.828 105.598 174.203 c 107.52 168.457 108.141 161.59
 104.688 154.656 c 101.59 148.477 100.309 145.871 99.66 142.609 c 99.43 
141.465 99.281 140.305 99.215 139.141 c 99.312 139.344 l 100.055 140.828
 101.859 141.43 103.344 140.688 c 104.828 139.945 105.43 138.141 104.688
 136.656 c h
52.223 40.273 m 59.102 25.02 73.422 14.449 90.023 12.371 c 93.289 11.965
 96 14.688 96 18 c 96 21.312 93.289 23.953 90.023 24.504 c 78.625 26.449
 69.035 33.863 63.949 43.906 c 62.793 46.328 60.387 47.906 57.707 48 c 53.555
 48 50.52 44.051 52.223 40.273 c f*
Q Q
showpage
%%Trailer
%%EOF
