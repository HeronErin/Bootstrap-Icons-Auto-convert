%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 72 5 312 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 72 5 312 384
384 384 cairo_set_page_size
%%EndPageSetup
q 72 5 240 379 rectclip
1 0 0 -1 0 384 cm q
0 g
203.52 261.625 m 269.062 245.449 312 188.09 312 120 c 312 77.129 289.129
 37.512 252 16.078 c 214.871 -5.359 169.129 -5.359 132 16.078 c 94.871 37.512
 72 77.129 72 120 c 72 188.09 114.938 245.449 180.48 261.625 c 174.625 273.312
 l 173.141 276.281 174.344 279.891 177.312 281.375 c 180.281 282.859 183.891
 281.656 185.375 278.688 c 186.336 276.766 l 186.551 280.844 186.91 284.324
 187.559 287.566 c 189.191 295.824 192.551 302.496 198.312 314.016 c 198.625
 314.688 l 203.715 324.816 202.992 335.086 199.824 344.59 c 196.586 354.238
 191.039 362.613 187.008 368.66 c 187.008 368.664 l 186.125 369.988 185.801
 371.609 186.109 373.172 c 186.422 374.734 187.34 376.105 188.664 376.992
 c 191.422 378.836 195.148 378.094 196.992 375.336 c 197.09 375.168 l 201.074
 369.215 207.434 359.664 211.203 348.406 c 215.043 336.91 216.293 323.184
 209.379 309.309 c 203.188 296.949 200.617 291.742 199.324 285.211 c 199.32
 285.215 l 198.855 282.93 198.559 280.609 198.434 278.281 c 198.625 278.688
 l 200.109 281.656 203.719 282.859 206.688 281.375 c 209.656 279.891 210.859
 276.281 209.375 273.312 c h
104.449 80.543 m 118.199 50.039 146.844 28.898 180.047 24.742 c 186.574
 23.93 192 29.375 192 36 c 192 42.625 186.574 47.902 180.047 49.008 c 157.246
 52.895 138.07 67.727 127.895 87.816 c 126.762 90.191 125 92.207 122.801
 93.652 c 120.598 95.094 118.047 95.906 115.414 96 c 107.109 96 101.039 
88.105 104.445 80.543 c f*
Q Q
showpage
%%Trailer
%%EOF
