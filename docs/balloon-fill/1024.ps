%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 11 624 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 11 624 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 11 480 757 rectclip
1 0 0 -1 0 768 cm q
0 g
407.039 523.246 m 538.129 490.895 624 376.176 624 240 c 624 176.348 598.715
 115.305 553.707 70.293 c 508.695 25.285 447.652 0 384 0 c 320.348 0 259.305
 25.285 214.293 70.293 c 169.285 115.305 144 176.348 144 240 c 144 376.176
 229.871 490.895 360.961 523.246 c 349.25 546.621 l 349.246 546.625 l 346.277
 552.562 348.688 559.781 354.625 562.754 c 360.562 565.723 367.781 563.312
 370.754 557.375 c 372.676 553.535 l 373.109 561.695 373.828 568.656 375.125
 575.137 c 378.391 591.648 385.109 604.992 396.629 628.031 c 397.254 629.375
 l 407.43 649.633 405.988 670.176 399.652 689.184 c 393.172 708.48 382.086
 725.23 374.02 737.328 c 374.016 737.328 l 372.246 739.977 371.602 743.219
 372.223 746.344 c 372.844 749.465 374.68 752.215 377.328 753.984 c 382.844
 757.668 390.301 756.188 393.984 750.672 c 394.176 750.336 l 402.145 738.434
 414.863 719.328 422.398 696.816 c 430.078 673.824 432.574 646.367 418.75
 618.625 c 406.367 593.906 401.23 583.488 398.637 570.434 c 398.641 570.434
 l 397.711 565.855 397.117 561.223 396.863 556.559 c 397.246 557.375 l 400.219
 563.312 407.438 565.723 413.375 562.754 c 419.312 559.781 421.723 552.562
 418.754 546.625 c h
208.895 161.09 m 222.422 131.086 243.434 105.066 269.91 85.523 c 296.387
 65.98 327.441 53.574 360.098 49.488 c 373.152 47.855 384 58.754 384 72 
c 384 85.246 373.152 95.809 360.098 98.016 c 314.496 105.793 276.145 135.457
 255.793 175.633 c 253.523 180.379 250 184.418 245.598 187.301 c 241.199
 190.188 236.09 191.812 230.832 192 c 214.223 192 202.078 176.207 208.895
 161.09 c f*
Q Q
showpage
%%Trailer
%%EOF
