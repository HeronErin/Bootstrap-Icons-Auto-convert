%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 94
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 94
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 82 rectclip
1 0 0 -1 0 96 cm q
0 g
30.043 24.582 m 30.086 23.996 30.141 23.402 30.203 22.793 c 30.504 20.008
 31.051 16.918 32.082 14.094 c 33.098 11.305 34.676 8.496 37.199 6.602 c
 43.891 1.586 52.109 1.586 58.801 6.602 c 61.32 8.496 62.906 11.305 63.918
 14.102 c 64.945 16.922 65.496 20.012 65.797 22.797 c 65.859 23.398 65.914
 23.992 65.957 24.586 c 74.363 25.75 81.855 27.773 87.105 30.656 c 99.863
 37.672 95.781 67.227 93.641 78.766 c 93.641 78.762 l 93.113 81.48 90.711
 83.434 87.941 83.395 c 8.059 83.395 l 5.289 83.434 2.887 81.48 2.359 78.762
 c 0.219 67.223 -3.863 37.66 8.898 30.652 c 14.137 27.773 21.637 25.746 
30.043 24.582 c 24.301 33.797 m 21.145 34.387 18.012 35.094 14.91 35.91 
c 14.363 36.066 l 14.16 36.125 l 12.617 36.629 11.75 38.266 12.211 39.824
 c 12.668 41.383 14.281 42.293 15.852 41.879 c 15.883 41.867 l 16.004 41.836
 l 16.484 41.699 l 16.48 41.699 l 19.43 40.926 22.402 40.258 25.398 39.695
 c 32.852 38.285 40.414 37.551 48 37.5 c 56.633 37.5 64.688 38.598 70.602
 39.703 c 73.762 40.293 76.898 41.008 80.004 41.84 c 80.125 41.871 l 80.148
 41.879 l 80.148 41.875 l 81.727 42.312 83.367 41.406 83.832 39.832 c 84.293
 38.262 83.41 36.609 81.848 36.121 c 81.828 36.121 l 81.793 36.109 l 81.645
 36.066 l 81.641 36.066 l 80.785 35.828 79.926 35.602 79.062 35.387 c 76.625
 34.789 74.172 34.258 71.707 33.797 c 63.891 32.32 55.957 31.551 48 31.5
 c 38.891 31.5 30.445 32.652 24.301 33.797 c 40.801 11.398 m 39.582 12.316
 38.539 13.918 37.723 16.145 c 36.871 18.652 36.336 21.258 36.133 23.898
 c 38.875 23.691 41.625 23.539 44.375 23.441 c 49.57 23.309 54.828 23.461
 59.879 23.898 c 59.672 21.258 59.137 18.652 58.285 16.145 c 57.477 13.914
 56.43 12.316 55.207 11.398 c 50.648 7.977 45.367 7.977 40.809 11.398 c 
h
40.801 11.398 m f
Q Q
showpage
%%Trailer
%%EOF
