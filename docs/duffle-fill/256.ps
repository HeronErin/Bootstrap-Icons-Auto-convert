%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 25 192 187
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 25 192 187
192 192 cairo_set_page_size
%%EndPageSetup
q 0 25 192 162 rectclip
1 0 0 -1 0 192 cm q
0 g
60.086 49.164 m 60.176 47.996 60.281 46.805 60.41 45.59 c 61.012 40.023
 62.102 33.844 64.168 28.191 c 66.195 22.613 69.352 16.996 74.402 13.203
 c 87.781 3.172 104.223 3.172 117.602 13.203 c 122.641 16.996 125.809 22.609
 127.836 28.203 c 129.887 33.844 130.992 40.023 131.594 45.59 c 131.723 
46.789 131.828 47.98 131.918 49.164 c 148.73 51.492 163.719 55.535 174.219
 61.309 c 199.73 75.336 191.57 134.449 187.285 157.523 c 186.227 162.965
 181.426 166.867 175.883 166.789 c 16.117 166.789 l 10.574 166.867 5.773
 162.965 4.715 157.523 c 0.43 134.449 -7.73 75.324 17.793 61.309 c 28.27
 55.547 43.27 51.492 60.082 49.164 c 48.602 67.598 m 42.289 68.773 36.027
 70.184 29.82 71.82 c 28.727 72.133 l 28.32 72.254 l 25.23 73.254 23.5 76.535
 24.418 79.652 c 25.336 82.766 28.562 84.59 31.703 83.762 c 31.762 83.738
 l 32 83.68 l 32.961 83.402 l 32.965 83.398 l 38.859 81.848 44.805 80.512
 50.797 79.391 c 65.699 76.57 80.832 75.102 96 75 c 113.27 75 129.371 77.195
 141.203 79.402 c 147.523 80.586 153.797 82.012 160.008 83.676 c 160.246
 83.734 l 160.293 83.746 l 160.297 83.746 l 163.453 84.629 166.734 82.812
 167.66 79.668 c 168.59 76.523 166.82 73.215 163.691 72.238 c 163.656 72.238
 l 163.586 72.215 l 163.285 72.129 l 163.285 72.133 l 161.57 71.656 159.852
 71.203 158.125 70.777 c 153.25 69.578 148.344 68.516 143.41 67.598 c 127.777
 64.637 111.91 63.102 96 63 c 77.785 63 60.887 65.305 48.602 67.598 c 81.602
 22.801 m 79.164 24.637 77.078 27.84 75.445 32.293 c 73.742 37.309 72.676
 42.516 72.266 47.797 c 77.754 47.383 83.25 47.078 88.754 46.883 c 99.145
 46.617 109.656 46.918 119.762 47.793 c 119.762 47.797 l 119.348 42.516 
118.273 37.309 116.566 32.293 c 114.945 27.828 112.859 24.637 110.41 22.801
 c 101.289 15.961 90.73 15.961 81.609 22.801 c h
81.602 22.801 m f
Q Q
showpage
%%Trailer
%%EOF
