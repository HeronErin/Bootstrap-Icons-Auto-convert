%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 50 384 373
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 50 384 373
384 384 cairo_set_page_size
%%EndPageSetup
q 0 50 384 323 rectclip
1 0 0 -1 0 384 cm q
0 g
120.168 98.328 m 120.344 95.992 120.559 93.609 120.816 91.176 c 122.016
 80.039 124.199 67.68 128.328 56.375 c 132.383 45.215 138.695 33.984 148.801
 26.398 c 175.562 6.336 208.441 6.336 235.199 26.398 c 245.277 33.984 251.613
 45.215 255.672 56.398 c 259.777 67.68 261.984 80.039 263.184 91.176 c 263.441
 93.574 263.656 95.961 263.832 98.328 c 297.457 102.984 327.434 111.07 348.434
 122.617 c 399.457 150.672 383.137 268.898 374.57 315.051 c 374.566 315.047
 l 373.543 320.32 370.699 325.062 366.531 328.449 c 362.363 331.84 357.137
 333.652 351.77 333.574 c 32.23 333.574 l 26.863 333.652 21.637 331.84 17.469
 328.449 c 13.301 325.062 10.457 320.32 9.434 315.047 c 0.867 268.895 -15.453
 150.648 35.594 122.613 c 56.547 111.094 86.547 102.98 120.168 98.324 c 
97.199 135.191 m 84.582 137.551 72.055 140.367 59.641 143.641 c 57.457 144.266
 l 56.641 144.504 l 50.461 146.512 47.004 153.07 48.836 159.301 c 50.668
 165.535 57.129 169.176 63.406 167.52 c 63.527 167.473 l 64.008 167.352 
l 65.93 166.801 l 77.715 163.699 89.609 161.023 101.594 158.785 c 131.402
 153.141 161.66 150.199 192 150 c 226.535 150 258.742 154.391 282.406 158.809
 c 295.047 161.176 307.594 164.023 320.016 167.352 c 320.496 167.473 l 320.594
 167.496 l 326.906 169.258 333.469 165.621 335.324 159.332 c 337.18 153.043
 333.645 146.43 327.383 144.48 c 327.312 144.48 l 327.168 144.434 l 326.566
 144.266 l 323.141 143.309 319.703 142.406 316.246 141.551 c 306.504 139.152
 296.691 137.031 286.824 135.191 c 255.559 129.277 223.82 126.199 192 126
 c 155.566 126 121.777 130.609 97.199 135.191 c 163.199 45.602 m 158.328
 49.273 154.152 55.68 150.887 64.586 c 147.484 74.613 145.348 85.031 144.527
 95.594 c 155.508 94.77 166.5 94.16 177.504 93.77 c 198.289 93.242 219.312
 93.84 239.52 95.594 c 238.691 85.031 236.547 74.613 233.137 64.586 c 229.898
 55.656 225.723 49.273 220.824 45.602 c 202.586 31.922 181.465 31.922 163.223
 45.602 c h
163.199 45.602 m f
Q Q
showpage
%%Trailer
%%EOF
