%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 100 768 746
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 100 768 746
768 768 cairo_set_page_size
%%EndPageSetup
q 0 100 768 646 rectclip
1 0 0 -1 0 768 cm q
0 g
240.336 196.656 m 240.688 191.984 241.121 187.215 241.633 182.352 c 244.031
 160.078 248.402 135.359 256.656 112.75 c 264.77 90.43 277.391 67.965 297.602
 52.797 c 351.121 12.668 416.883 12.668 470.402 52.797 c 490.562 67.965 
503.234 90.43 511.348 112.797 c 519.555 135.355 523.973 160.078 526.371 
182.348 c 526.883 187.148 527.316 191.914 527.668 196.652 c 594.914 205.965
 654.867 222.141 696.867 245.227 c 798.914 301.34 766.273 537.785 749.141
 630.09 c 749.137 630.098 l 747.09 640.641 741.398 650.129 733.062 656.902
 c 724.727 663.676 714.277 667.305 703.535 667.152 c 64.465 667.152 l 53.723
 667.305 43.273 663.676 34.938 656.902 c 26.602 650.129 20.91 640.641 18.863
 630.098 c 1.727 537.793 -30.914 301.297 71.184 245.234 c 113.086 222.195
 173.086 205.969 240.336 196.66 c 194.398 270.383 m 169.164 275.102 144.105
 280.738 119.281 287.281 c 114.914 288.527 l 113.281 289.008 l 105.277 291.609
 99.223 298.207 97.32 306.402 c 95.418 314.598 97.941 323.191 103.98 329.055
 c 110.016 334.914 118.68 337.184 126.816 335.039 c 127.055 334.941 l 128.016
 334.703 l 131.855 333.598 l 131.855 333.602 l 155.43 327.395 179.223 322.047
 203.184 317.566 c 262.805 306.281 323.32 300.402 384 300 c 453.07 300 517.488
 308.785 564.816 317.617 c 590.098 322.352 615.188 328.051 640.031 334.703
 c 640.992 334.941 l 641.184 334.988 l 641.184 334.992 l 649.359 337.27 
658.133 335.062 664.254 329.18 c 670.375 323.301 672.934 314.625 670.984
 306.363 c 669.039 298.102 662.871 291.484 654.77 288.961 c 654.625 288.961
 l 654.336 288.863 l 653.137 288.527 l 646.281 286.617 639.402 284.809 632.496
 283.105 c 613.004 278.305 593.383 274.062 573.648 270.383 c 511.113 258.555
 447.641 252.402 384 252 c 311.137 252 243.551 261.215 194.398 270.383 c
 326.398 91.199 m 316.656 98.543 308.301 111.359 301.773 129.168 c 301.777
 129.168 l 294.969 149.23 290.699 170.062 289.055 191.184 c 311.016 189.535
 333.004 188.32 355.008 187.535 c 396.574 186.48 438.625 187.68 479.039 
191.184 c 477.383 170.062 473.094 149.227 466.273 129.168 c 459.793 111.312
 451.441 98.543 441.648 91.199 c 405.168 63.84 362.93 63.84 326.449 91.199
 c h
326.398 91.199 m f
Q Q
showpage
%%Trailer
%%EOF
