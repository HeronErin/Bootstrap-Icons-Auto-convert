%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 21 rectclip
1 0 0 -1 0 24 cm q
0 g
7.512 6.145 m 7.523 6 7.535 5.848 7.551 5.699 c 7.625 5.004 7.762 4.23 
8.02 3.523 c 8.273 2.824 8.668 2.125 9.301 1.648 c 10.973 0.395 13.027 0.395
 14.699 1.648 c 15.328 2.121 15.727 2.824 15.98 3.523 c 16.238 4.227 16.375
 5 16.449 5.695 c 16.465 5.844 16.48 5.996 16.488 6.141 c 18.59 6.43 20.465
 6.938 21.777 7.66 c 24.965 9.414 23.945 16.801 23.41 19.688 c 23.41 19.691
 l 23.277 20.371 22.68 20.859 21.984 20.848 c 2.016 20.848 l 1.32 20.859
 0.723 20.371 0.59 19.691 c 0.055 16.809 -0.965 9.418 2.227 7.664 c 3.535
 6.945 5.41 6.438 7.512 6.145 c 6.074 8.449 m 5.285 8.598 4.504 8.773 3.727
 8.977 c 3.59 9.016 l 3.539 9.031 l 3.152 9.156 2.938 9.566 3.051 9.957 
c 3.168 10.348 3.57 10.574 3.965 10.469 c 3.973 10.465 l 4.004 10.457 l 
4.125 10.422 l 4.121 10.426 l 4.855 10.23 5.602 10.062 6.348 9.926 c 8.211
 9.57 10.105 9.387 12 9.375 c 14.16 9.375 16.172 9.648 17.652 9.926 c 18.441
 10.074 19.223 10.25 20 10.461 c 20.031 10.469 l 20.039 10.469 l 20.035 
10.469 l 20.434 10.578 20.84 10.352 20.957 9.957 c 21.074 9.566 20.852 9.152
 20.461 9.031 c 20.457 9.031 l 20.449 9.027 l 20.41 9.016 l 20.195 8.957
 19.98 8.898 19.766 8.848 c 19.156 8.695 18.543 8.566 17.926 8.449 c 15.973
 8.078 13.988 7.887 12 7.875 c 9.723 7.875 7.609 8.164 6.074 8.449 c 10.199
 2.852 m 9.895 3.082 9.633 3.48 9.43 4.039 c 9.43 4.035 l 9.219 4.664 9.086
 5.316 9.031 5.973 c 9.719 5.922 10.406 5.887 11.094 5.859 c 12.395 5.828
 13.707 5.863 14.969 5.973 c 14.918 5.312 14.785 4.664 14.57 4.035 c 14.367
 3.477 14.105 3.078 13.801 2.848 c 12.66 1.992 11.34 1.992 10.199 2.848 
c h
10.199 2.852 m f
Q Q
showpage
%%Trailer
%%EOF
