%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 11 rectclip
1 0 0 -1 0 12 cm q
0 g
3.754 3.074 m 3.758 3 3.766 2.926 3.773 2.852 c 3.812 2.504 3.879 2.117
 4.008 1.766 c 4.133 1.418 4.332 1.066 4.648 0.828 c 5.484 0.199 6.512 0.199
 7.348 0.828 c 7.664 1.066 7.859 1.418 7.988 1.766 c 8.117 2.117 8.184 2.504
 8.223 2.852 c 8.23 2.926 8.238 3 8.242 3.074 c 9.293 3.219 10.23 3.473 
10.887 3.832 c 12.48 4.707 11.973 8.402 11.703 9.844 c 11.707 9.844 l 11.641
 10.184 11.34 10.43 10.992 10.426 c 1.008 10.426 l 0.66 10.43 0.359 10.184
 0.293 9.844 c 0.023 8.402 -0.484 4.707 1.109 3.832 c 1.766 3.473 2.703 
3.219 3.754 3.074 c 3.039 4.227 m 2.645 4.297 2.25 4.387 1.863 4.488 c 1.797
 4.508 l 1.77 4.516 l 1.578 4.578 1.469 4.785 1.527 4.977 c 1.582 5.172 
1.785 5.285 1.98 5.234 c 1.984 5.234 l 2 5.23 l 2.059 5.215 l 2.059 5.211
 l 2.43 5.117 2.801 5.031 3.176 4.961 c 4.105 4.785 5.051 4.695 6 4.688 
c 7.078 4.688 8.086 4.824 8.824 4.961 c 9.219 5.035 9.613 5.125 10 5.23 
c 10.016 5.234 l 10.02 5.234 l 10.215 5.289 10.422 5.176 10.48 4.98 c 10.535
 4.781 10.426 4.574 10.23 4.516 c 10.223 4.516 l 10.203 4.512 l 10.207 4.508
 l 10.098 4.477 9.992 4.449 9.883 4.422 c 9.578 4.348 9.273 4.281 8.965 
4.227 c 7.984 4.039 6.996 3.945 6 3.938 c 4.863 3.938 3.805 4.082 3.039 
4.227 c 5.102 1.426 m 4.949 1.539 4.82 1.742 4.719 2.02 c 4.715 2.02 l 4.609
 2.332 4.543 2.656 4.516 2.988 c 4.859 2.961 5.203 2.941 5.547 2.93 c 6.195
 2.914 6.852 2.934 7.484 2.988 c 7.461 2.656 7.391 2.332 7.285 2.02 c 7.184
 1.742 7.055 1.543 6.902 1.426 c 6.332 1 5.672 1 5.102 1.426 c h
5.102 1.426 m f
Q Q
showpage
%%Trailer
%%EOF
