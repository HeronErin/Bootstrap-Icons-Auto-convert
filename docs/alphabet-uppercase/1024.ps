%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 240 768 553
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 240 768 553
768 768 cairo_set_page_size
%%EndPageSetup
q 0 240 768 313 rectclip
1 0 0 -1 0 768 cm q
0 g
58.848 522.238 m 0 522.238 l 98.688 221.758 l 166.848 221.758 l 265.105
 522.238 l 203.184 522.238 l 180.145 444.957 l 81.938 444.961 l 58.898 522.242
 l h
132.48 279.266 m 129.887 279.266 l 93.887 400.801 l 168.48 400.801 l h
286.895 522.242 m 286.895 221.762 l 409.773 221.762 l 462.094 221.762 496.559
 249.699 496.559 295.684 c 496.559 332.258 475.246 354.242 446.16 361.539
 c 446.16 364.18 l 481.488 367.73 511.68 392.355 511.68 437.523 c 511.68
 491.234 468.961 522.293 409.297 522.293 c h
344.641 266.398 m 344.641 346.797 l 383.039 346.797 l 422.016 346.797 439.246
 332.012 439.246 305.852 c 439.246 281.371 423.504 266.395 396.141 266.395
 c h
344.641 388.176 m 344.641 477.602 l 387.984 477.602 l 433.633 477.602 452.398
 462.625 452.398 433.969 c 452.398 405.602 434.062 388.176 399.84 388.176
 c h
588.914 354.047 m 588.914 391.246 l 588.914 446.734 612.434 477.789 653.57
 477.789 c 687.41 477.789 709.395 455.996 711.746 425.18 c 768 425.184 l
 768 430.945 l 765.215 488.305 717.602 528 653.137 528 c 574.031 528 529.633
 476.496 529.633 391.246 c 529.633 353.805 l 529.633 268.605 574.465 215.996
 653.137 215.996 c 717.793 215.996 765.457 256.75 768 316.172 c 768 321.691
 l 711.742 321.691 l 709.344 289.77 686.973 266.203 653.566 266.203 c 612.812
 266.203 588.91 298.363 588.91 354.043 c f
Q Q
showpage
%%Trailer
%%EOF
