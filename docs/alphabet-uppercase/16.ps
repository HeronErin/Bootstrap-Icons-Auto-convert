%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 3 12 9
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 3 12 9
12 12 cairo_set_page_size
%%EndPageSetup
q 0 3 12 6 rectclip
1 0 0 -1 0 12 cm q
0 g
0.918 8.16 m 0 8.16 l 1.543 3.465 l 2.609 3.465 l 4.145 8.16 l 3.176 8.16
 l 2.816 6.953 l 1.281 6.953 l 0.922 8.16 l h
2.07 4.363 m 2.031 4.363 l 1.469 6.262 l 2.633 6.262 l h
4.484 8.16 m 4.484 3.465 l 6.406 3.465 l 7.223 3.465 7.762 3.902 7.762 
4.621 c 7.762 5.191 7.43 5.535 6.973 5.648 c 6.973 5.691 l 7.523 5.746 7.996
 6.133 7.996 6.836 c 7.996 7.676 7.328 8.16 6.395 8.16 c h
5.387 4.164 m 5.387 5.422 l 5.988 5.422 l 6.598 5.422 6.867 5.191 6.867
 4.781 c 6.867 4.398 6.621 4.164 6.195 4.164 c h
5.387 6.066 m 5.387 7.461 l 6.062 7.461 l 6.777 7.461 7.07 7.227 7.07 6.777
 c 7.07 6.336 6.785 6.062 6.25 6.062 c h
9.203 5.531 m 9.203 6.113 l 9.203 6.98 9.57 7.465 10.215 7.465 c 10.742
 7.465 11.086 7.125 11.125 6.645 c 12 6.645 l 12 6.734 l 11.957 7.629 11.211
 8.25 10.207 8.25 c 8.973 8.25 8.277 7.445 8.277 6.113 c 8.277 5.527 l 8.277
 4.195 8.977 3.375 10.207 3.375 c 11.219 3.375 11.961 4.012 12 4.941 c 12
 5.027 l 11.121 5.027 l 11.082 4.527 10.734 4.16 10.211 4.16 c 9.574 4.16
 9.199 4.664 9.199 5.531 c f
Q Q
showpage
%%Trailer
%%EOF
