%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.438 0 m 2.188 0 2.188 0.375 2.438 0.375 c 2.812 0.375 l 2.812 0.754 l
 2.242 0.777 1.559 0.902 1.094 1 c 0.664 1.09 0.375 1.469 0.375 1.895 c 
0.375 5.062 l 0.375 5.312 0.473 5.551 0.648 5.727 c 0.824 5.902 1.062 6 
1.312 6 c 4.688 6 l 4.938 6 5.176 5.902 5.352 5.727 c 5.527 5.551 5.625 
5.312 5.625 5.062 c 5.625 1.895 l 5.625 1.469 5.336 1.09 4.906 1 c 4.441
 0.902 3.758 0.777 3.188 0.754 c 3.188 0.375 l 3.562 0.375 l 3.812 0.375
 3.812 0 3.562 0 c h
3 1.125 m 3.562 1.125 4.312 1.258 4.832 1.367 c 5.078 1.418 5.25 1.637 
5.25 1.895 c 5.25 5.062 l 5.25 5.312 5.086 5.531 4.848 5.602 c 4.836 5.504
 4.824 5.402 4.809 5.305 c 4.773 5.02 4.734 4.648 4.707 4.301 c 4.711 4.301
 l 4.695 4.117 4.688 3.934 4.688 3.75 c 4.688 3.355 4.742 2.848 4.793 2.461
 c 4.82 2.266 l 4.863 1.965 4.664 1.676 4.355 1.629 c 3.992 1.574 3.426 
1.5 3 1.5 c 2.574 1.5 2.008 1.574 1.648 1.629 c 1.34 1.676 1.141 1.965 1.184
 2.266 c 1.191 2.324 1.199 2.391 1.211 2.461 c 1.258 2.848 1.312 3.355 1.312
 3.75 c 1.312 3.91 1.305 4.102 1.289 4.301 c 1.266 4.637 1.23 4.969 1.191
 5.305 c 1.176 5.422 1.164 5.523 1.152 5.602 c 0.914 5.531 0.75 5.312 0.75
 5.062 c 0.75 1.895 l 0.75 1.637 0.926 1.418 1.168 1.367 c 1.688 1.258 2.438
 1.125 3 1.125 c 4.438 5.352 m 4.449 5.457 4.461 5.551 4.473 5.625 c 1.527
 5.625 l 1.578 5.25 1.617 4.875 1.648 4.5 c 2.492 4.5 l 2.629 4.5 2.758 
4.445 2.852 4.352 c 2.875 4.328 2.91 4.312 2.945 4.312 c 3.055 4.312 l 3.09
 4.312 3.125 4.328 3.148 4.352 c 3.242 4.445 3.375 4.5 3.508 4.5 c 4.352
 4.5 l 4.379 4.805 4.41 5.109 4.441 5.352 c h
2.25 5.062 m 2.25 5.312 1.875 5.312 1.875 5.062 c 1.875 4.812 2.25 4.812
 2.25 5.062 c 2.25 5.062 m 2.25 4.812 2.625 4.812 2.625 5.062 c 2.625 5.312
 2.25 5.312 2.25 5.062 c 3.562 5.25 m 3.668 5.25 3.75 5.168 3.75 5.062 c
 3.75 5.312 4.125 5.312 4.125 5.062 c 4.125 4.812 3.75 4.812 3.75 5.062 
c 3.75 4.895 3.547 4.812 3.43 4.93 c 3.312 5.047 3.395 5.25 3.562 5.25 c
 1.676 4.125 m 1.684 3.992 1.688 3.867 1.688 3.75 c 1.688 3.402 1.648 2.98
 1.605 2.625 c 4.391 2.625 l 4.348 2.98 4.309 3.402 4.309 3.75 c 4.309 3.867
 4.312 3.992 4.32 4.125 c 3.508 4.125 l 3.473 4.125 3.438 4.109 3.414 4.086
 c 3.32 3.992 3.191 3.938 3.055 3.938 c 2.945 3.938 l 2.809 3.938 2.68 3.992
 2.586 4.086 c 2.562 4.109 2.527 4.125 2.492 4.125 c h
1.559 2.25 m 1.555 2.215 l 1.535 2.113 1.605 2.02 1.707 2 c 2.062 1.945
 2.605 1.875 3 1.875 c 3.395 1.875 3.938 1.945 4.293 2 c 4.395 2.02 4.465
 2.113 4.445 2.215 c 4.441 2.25 l h
1.559 2.25 m f
Q Q
showpage
%%Trailer
%%EOF
