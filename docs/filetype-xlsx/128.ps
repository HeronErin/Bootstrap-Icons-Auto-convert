%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 9 0 88 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 9 0 88 96
96 96 cairo_set_page_size
%%EndPageSetup
q 9 0 79 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 66 l 78 66 l 78 27 l 66 27 l 61.031 27 57 22.969 57 18 c 57 
6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12 5.371 17.371
 0 24 0 c 57 0 l h
47.16 89.047 m 47.23 90.957 48.102 92.75 49.566 93.984 c 50.348 94.633 
51.305 95.137 52.441 95.496 c 53.578 95.859 54.906 96.043 56.43 96.043 c
 58.457 96.043 60.172 95.727 61.578 95.094 c 63 94.461 64.078 93.582 64.816
 92.453 c 65.574 91.281 65.965 89.914 65.941 88.52 c 65.941 87.176 65.672
 86.055 65.133 85.16 c 65.129 85.156 l 64.582 84.258 63.805 83.52 62.879
 83.016 c 61.82 82.426 60.676 82.004 59.488 81.758 c 55.762 80.895 l 55.766
 80.891 l 54.887 80.727 54.055 80.363 53.336 79.836 c 52.781 79.406 52.465
 78.742 52.477 78.043 c 52.477 77.105 52.844 76.34 53.582 75.738 c 54.336
 75.129 55.359 74.828 56.66 74.828 c 57.516 74.828 58.258 74.965 58.879 
75.234 c 59.453 75.465 59.961 75.836 60.348 76.32 c 60.719 76.766 60.965
 77.297 61.066 77.867 c 65.566 77.867 l 65.492 76.648 65.078 75.473 64.375
 74.473 c 63.617 73.395 62.582 72.543 61.375 72.012 c 59.902 71.363 58.301
 71.051 56.695 71.102 c 54.934 71.102 53.383 71.402 52.035 72 c 50.691 72.598
 49.637 73.438 48.875 74.527 c 48.113 75.621 47.734 76.898 47.734 78.363
 c 47.734 79.57 47.98 80.621 48.473 81.508 c 48.965 82.395 49.668 83.129
 50.578 83.711 c 51.492 84.281 52.574 84.707 53.816 84.988 c 57.523 85.852
 l 58.762 86.145 59.688 86.531 60.297 87.008 c 60.293 87.008 l 60.902 87.469
 61.242 88.199 61.211 88.961 c 61.227 89.582 61.047 90.188 60.703 90.703
 c 60.316 91.227 59.785 91.633 59.172 91.859 c 58.5 92.141 57.676 92.281
 56.695 92.281 c 55.992 92.281 55.352 92.203 54.773 92.043 c 54.773 92.039
 l 54.238 91.898 53.734 91.664 53.281 91.352 c 52.473 90.828 51.918 89.992
 51.75 89.047 c h
24.805 71.594 m 30.164 71.594 l 22.52 83.637 l 30.043 95.59 l 24.594 95.59
 l 19.492 87.102 l 19.281 87.102 l 14.164 95.59 l 9 95.586 l 16.441 83.488
 l 9.074 71.59 l 14.66 71.59 l 19.652 80.219 l 19.867 80.219 l h
36.344 91.543 m 46.527 91.543 l 46.527 95.586 l 31.598 95.586 l 31.598 
71.594 l 36.344 71.594 l h
82.16 71.594 m 87.52 71.594 l 79.875 83.637 l 87.398 95.59 l 81.949 95.59
 l 76.848 87.102 l 76.637 87.102 l 71.52 95.59 l 66.355 95.59 l 73.797 83.492
 l 66.43 71.594 l 72.016 71.594 l 77.008 80.223 l 77.223 80.223 l h
82.16 71.594 m f*
Q Q
showpage
%%Trailer
%%EOF
