%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 18 0 176 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 18 0 176 192
192 192 cairo_set_page_size
%%EndPageSetup
q 18 0 158 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 132 l 156 132 l 156 54 l 132 54 l 127.227 54 122.648 52.105
 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114 12 l 48 12 l 41.371
 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637 26.527 11.531 
31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
94.32 178.094 m 94.457 181.914 96.207 185.504 99.133 187.969 c 100.691 
189.266 102.609 190.273 104.879 190.992 c 107.152 191.719 109.812 192.086
 112.859 192.086 c 116.914 192.086 120.348 191.453 123.156 190.191 c 125.996
 188.926 128.156 187.168 129.637 184.91 c 129.637 184.906 l 131.148 182.566
 131.93 179.824 131.879 177.035 c 131.879 174.348 131.34 172.105 130.258
 170.316 c 130.262 170.316 l 129.16 168.52 127.609 167.039 125.762 166.031
 c 123.641 164.855 121.355 164.004 118.98 163.512 c 111.527 161.785 l 109.77
 161.449 108.109 160.73 106.668 159.672 c 105.562 158.812 104.926 157.484
 104.953 156.086 c 104.953 154.215 105.688 152.68 107.16 151.477 c 108.664
 150.262 110.715 149.652 113.316 149.652 c 115.027 149.652 116.508 149.926
 117.758 150.469 c 118.906 150.926 119.918 151.676 120.695 152.641 c 121.434
 153.531 121.93 154.598 122.137 155.734 c 131.137 155.734 l 130.984 153.293
 130.156 150.941 128.746 148.945 c 127.234 146.785 125.16 145.086 122.746
 144.023 c 119.805 142.727 116.605 142.102 113.387 142.199 c 109.867 142.199
 106.758 142.801 104.062 144 c 101.375 145.191 99.266 146.875 97.738 149.051
 c 96.219 151.234 95.457 153.789 95.457 156.719 c 95.457 159.133 95.949 
161.23 96.934 163.008 c 97.918 164.785 99.32 166.25 101.145 167.41 c 102.977
 168.555 105.137 169.406 107.625 169.965 c 115.039 171.691 l 117.52 172.277
 119.367 173.047 120.582 174.008 c 120.59 174.012 l 121.801 174.938 122.488
 176.398 122.426 177.926 c 122.449 179.16 122.094 180.379 121.402 181.402
 c 120.629 182.457 119.566 183.262 118.344 183.719 c 117 184.277 115.348
 184.559 113.387 184.559 c 111.98 184.559 110.699 184.398 109.547 184.078
 c 108.48 183.797 107.469 183.328 106.559 182.699 c 104.945 181.652 103.84
 179.984 103.5 178.094 c h
49.609 143.188 m 60.324 143.188 l 45.035 167.273 l 60.082 191.176 l 49.188
 191.176 l 38.988 174.195 l 38.566 174.195 l 28.332 191.176 l 18 191.172
 l 32.879 166.98 l 18.145 143.184 l 29.316 143.184 l 39.301 160.441 l 39.734
 160.441 l h
72.684 183.086 m 93.047 183.086 l 93.047 191.176 l 63.191 191.172 l 63.191
 143.184 l 72.684 143.184 l h
164.316 143.188 m 175.031 143.188 l 159.742 167.273 l 174.789 191.176 l
 163.895 191.176 l 153.695 174.195 l 153.273 174.195 l 143.039 191.176 l
 132.707 191.176 l 147.586 166.984 l 132.852 143.188 l 144.023 143.188 l
 154.008 160.445 l 154.441 160.445 l h
164.316 143.188 m f*
Q Q
showpage
%%Trailer
%%EOF
