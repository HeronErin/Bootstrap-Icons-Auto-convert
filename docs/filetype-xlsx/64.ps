%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 4 0 44 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 4 0 44 48
48 48 cairo_set_page_size
%%EndPageSetup
q 4 0 40 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 33 l 39 33 l 39 13.5 l 33 13.5 l 30.516 13.5 28.5 11.484 28.5
 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33 l 6 6 l 6 2.688 
8.688 0 12 0 c 28.5 0 l h
23.578 44.523 m 23.613 45.48 24.051 46.375 24.781 46.992 c 25.172 47.316
 25.648 47.566 26.219 47.75 c 26.785 47.934 27.453 48.023 28.215 48.023 
c 29.23 48.023 30.086 47.867 30.789 47.551 c 31.5 47.234 32.039 46.793 32.41
 46.23 c 32.41 46.227 l 32.789 45.641 32.984 44.957 32.969 44.258 c 32.969
 43.586 32.832 43.027 32.562 42.578 c 32.566 42.578 l 32.289 42.129 31.902
 41.762 31.441 41.508 c 30.91 41.215 30.34 41 29.746 40.879 c 27.883 40.445
 l 27.441 40.363 27.027 40.184 26.668 39.918 c 26.391 39.703 26.23 39.371
 26.238 39.02 c 26.238 38.551 26.422 38.168 26.789 37.867 c 27.164 37.562
 27.68 37.41 28.328 37.41 c 28.758 37.41 29.125 37.477 29.438 37.613 c 29.438
 37.617 l 29.727 37.73 29.98 37.918 30.176 38.16 c 30.359 38.383 30.484 
38.648 30.535 38.934 c 32.785 38.934 l 32.746 38.324 32.539 37.734 32.188
 37.234 c 31.809 36.695 31.289 36.27 30.688 36.008 c 29.949 35.68 29.152
 35.527 28.348 35.551 c 27.469 35.551 26.691 35.699 26.016 36 c 25.344 36.297
 24.816 36.719 24.434 37.262 c 24.055 37.809 23.863 38.445 23.863 39.18 
c 23.863 39.785 23.984 40.309 24.23 40.75 c 24.477 41.195 24.828 41.562 
25.285 41.852 c 25.742 42.137 26.281 42.352 26.906 42.492 c 28.762 42.926
 l 29.383 43.07 29.844 43.266 30.148 43.504 c 30.449 43.734 30.621 44.102
 30.605 44.48 c 30.613 44.789 30.523 45.094 30.352 45.352 c 30.156 45.613
 29.891 45.816 29.586 45.93 c 29.25 46.07 28.836 46.141 28.348 46.141 c 
27.996 46.141 27.676 46.102 27.387 46.02 c 27.121 45.949 26.867 45.832 26.641
 45.676 c 26.238 45.414 25.961 44.996 25.875 44.523 c h
12.398 35.797 m 15.078 35.797 l 11.258 41.816 l 15.02 47.793 l 12.297 47.793
 l 9.746 43.547 l 9.641 43.547 l 7.082 47.793 l 4.5 47.793 l 8.219 41.746
 l 4.535 35.797 l 7.328 35.797 l 9.824 40.109 l 9.934 40.109 l h
18.168 45.773 m 23.258 45.773 l 23.258 47.797 l 15.797 47.793 l 15.797 
35.797 l 18.168 35.797 l h
41.074 35.797 m 43.754 35.797 l 39.934 41.816 l 43.695 47.793 l 40.973 
47.793 l 38.422 43.547 l 38.316 43.547 l 35.758 47.793 l 33.176 47.793 l
 36.895 41.746 l 33.211 35.797 l 36.004 35.797 l 38.5 40.109 l 38.609 40.109
 l h
41.074 35.797 m f*
Q Q
showpage
%%Trailer
%%EOF
