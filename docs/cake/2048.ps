%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1535
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1535
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1535 rectclip
1 0 0 -1 0 1536 cm q
0 g
767.426 1.246 m 710.305 77.086 l 710.305 77.09 l 699.41 91.5 694.355 109.492
 696.152 127.469 c 697.953 145.445 706.469 162.078 720 174.047 c 720 384
 l 480 384 l 429.078 384 380.242 404.227 344.234 440.234 c 308.227 476.242
 288 525.078 288 576 c 288 864 l 192 864 l 141.078 864 92.242 884.227 56.234
 920.234 c 20.227 956.242 0 1005.078 0 1056 c 0 1440 l 0 1465.461 10.113
 1489.879 28.117 1507.883 c 46.121 1525.887 70.539 1536 96 1536 c 1440 1536
 l 1465.461 1536 1489.879 1525.887 1507.883 1507.883 c 1525.887 1489.879
 1536 1465.461 1536 1440 c 1536 1056 l 1536 1022.297 1527.129 989.188 1510.277
 960 c 1493.426 930.812 1469.188 906.574 1440 889.723 c 1410.812 872.871
 1377.703 864 1344 864 c 1248 864 l 1248 576 l 1248 542.297 1239.129 509.188
 1222.277 480 c 1205.426 450.812 1181.188 426.574 1152 409.723 c 1122.812
 392.871 1089.703 384 1056 384 c 816 384 l 816 173.375 l 829.242 161.316
 837.492 144.734 839.129 126.898 c 840.762 109.062 835.664 91.258 824.832
 76.992 c h
384 576 m 384 550.539 394.113 526.121 412.117 508.117 c 430.121 490.113
 454.539 480 480 480 c 1056 480 l 1081.461 480 1105.879 490.113 1123.883
 508.117 c 1141.887 526.121 1152 550.539 1152 576 c 1152 615.742 l 1128.703
 615.879 1106.344 606.602 1089.984 590.016 c 1067.176 567.188 1038.754 550.766
 1007.582 542.41 c 976.41 534.051 943.59 534.051 912.418 542.41 c 881.246
 550.766 852.824 567.188 830.016 590.016 c 813.562 606.453 791.258 615.688
 768 615.688 c 744.742 615.688 722.438 606.453 705.984 590.016 c 683.176
 567.188 654.754 550.766 623.582 542.41 c 592.41 534.051 559.59 534.051 
528.418 542.41 c 497.246 550.766 468.824 567.188 446.016 590.016 c 429.656
 606.602 407.297 615.879 384 615.742 c h
384 711.742 m 431.039 711.742 478.078 693.789 513.984 657.98 c 513.984 
657.984 l 530.438 641.547 552.742 632.312 576 632.312 c 599.258 632.312 
621.562 641.547 638.016 657.984 c 709.824 729.695 826.176 729.695 897.984
 657.984 c 914.438 641.547 936.742 632.312 960 632.312 c 983.258 632.312
 1005.562 641.547 1022.016 657.984 c 1057.918 693.793 1104.961 711.746 1152
 711.746 c 1152 864 l 384 864 l h
96 1056 m 96 1030.539 106.113 1006.121 124.117 988.117 c 142.121 970.113
 166.539 960 192 960 c 1344 960 l 1369.461 960 1393.879 970.113 1411.883
 988.117 c 1429.887 1006.121 1440 1030.539 1440 1056 c 1440 1132.129 l 1406.016
 1166.113 l 1389.559 1182.578 1367.234 1191.832 1343.953 1191.832 c 1320.672
 1191.832 1298.344 1182.578 1281.887 1166.113 c 1259.082 1143.301 1230.672
 1126.898 1199.512 1118.547 c 1168.355 1110.199 1135.547 1110.199 1104.391
 1118.547 c 1073.234 1126.898 1044.824 1143.301 1022.016 1166.113 c 1005.562
 1182.551 983.258 1191.785 960 1191.785 c 936.742 1191.785 914.438 1182.551
 897.984 1166.113 c 875.176 1143.281 846.754 1126.863 815.582 1118.504 c
 784.41 1110.148 751.59 1110.148 720.418 1118.504 c 689.246 1126.863 660.824
 1143.281 638.016 1166.113 c 621.562 1182.551 599.258 1191.785 576 1191.785
 c 552.742 1191.785 530.438 1182.551 513.984 1166.113 c 491.176 1143.281
 462.754 1126.863 431.582 1118.504 c 400.41 1110.148 367.59 1110.148 336.418
 1118.504 c 305.246 1126.863 276.824 1143.281 254.016 1166.113 c 237.562
 1182.551 215.258 1191.785 192 1191.785 c 168.742 1191.785 146.438 1182.551
 129.984 1166.113 c 96 1132.129 l h
1214.016 1233.984 m 1243.207 1263.172 1281.371 1281.688 1322.367 1286.543
 c 1363.359 1291.402 1404.793 1282.324 1440 1260.77 c 1440 1440 l 96 1440
 l 96 1260.77 l 166.754 1304.16 260.641 1295.328 321.984 1233.891 c 321.984
 1233.887 l 338.438 1217.449 360.742 1208.215 384 1208.215 c 407.258 1208.215
 429.562 1217.449 446.016 1233.887 c 517.824 1305.695 634.176 1305.695 705.984
 1233.887 c 722.438 1217.449 744.742 1208.215 768 1208.215 c 791.258 1208.215
 813.562 1217.449 830.016 1233.887 c 901.824 1305.695 1018.176 1305.695 
1089.887 1233.887 c 1106.344 1217.422 1128.672 1208.168 1151.953 1208.168
 c 1175.234 1208.168 1197.559 1217.422 1214.016 1233.887 c h
1214.016 1233.984 m f
Q Q
showpage
%%Trailer
%%EOF
