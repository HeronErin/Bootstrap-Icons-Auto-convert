%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
95.93 0.156 m 88.789 9.637 l 85.965 13.371 86.492 18.652 90 21.758 c 90
 48 l 60 48 l 53.637 48 47.531 50.527 43.031 55.031 c 38.527 59.531 36 65.637
 36 72 c 36 108 l 24 108 l 17.637 108 11.531 110.527 7.031 115.031 c 2.527
 119.531 0 125.637 0 132 c 0 180 l 0 183.184 1.266 186.234 3.516 188.484
 c 5.766 190.734 8.816 192 12 192 c 180 192 l 183.184 192 186.234 190.734
 188.484 188.484 c 190.734 186.234 192 183.184 192 180 c 192 132 l 192 125.637
 189.473 119.531 184.969 115.031 c 180.469 110.527 174.363 108 168 108 c
 156 108 l 156 72 l 156 65.637 153.473 59.531 148.969 55.031 c 144.469 50.527
 138.363 48 132 48 c 102 48 l 102 21.672 l 105.43 18.547 105.91 13.32 103.105
 9.625 c h
48 72 m 48 65.371 53.371 60 60 60 c 132 60 l 135.184 60 138.234 61.266 
140.484 63.516 c 142.734 65.766 144 68.816 144 72 c 144 76.969 l 141.09 
76.984 138.293 75.824 136.246 73.754 c 131.941 69.441 126.094 67.02 120 
67.02 c 113.906 67.02 108.059 69.441 103.754 73.754 c 99.469 78.031 92.531
 78.031 88.246 73.754 c 83.941 69.441 78.094 67.02 72 67.02 c 65.906 67.02
 60.059 69.441 55.754 73.754 c 53.707 75.824 50.91 76.984 48 76.969 c h
48 88.969 m 53.879 88.969 59.762 86.727 64.246 82.25 c 64.246 82.246 l 
68.531 77.969 75.469 77.969 79.754 82.246 c 88.73 91.211 103.273 91.211 
112.25 82.246 c 112.246 82.246 l 116.531 77.969 123.469 77.969 127.754 82.246
 c 132.242 86.723 138.121 88.965 144 88.965 c 144 108 l 48 108 l h
12 132 m 12 125.371 17.371 120 24 120 c 168 120 l 171.184 120 174.234 121.266
 176.484 123.516 c 178.734 125.766 180 128.816 180 132 c 180 141.516 l 175.754
 145.762 l 175.754 145.766 l 173.695 147.824 170.902 148.98 167.992 148.98
 c 165.082 148.98 162.293 147.824 160.234 145.766 c 155.93 141.457 150.086
 139.035 143.992 139.035 c 137.902 139.035 132.059 141.457 127.754 145.766
 c 123.469 150.043 116.531 150.043 112.246 145.766 c 107.941 141.453 102.094
 139.031 96 139.031 c 89.906 139.031 84.059 141.453 79.754 145.766 c 75.469
 150.043 68.531 150.043 64.246 145.766 c 59.941 141.453 54.094 139.031 48
 139.031 c 41.906 139.031 36.059 141.453 31.754 145.766 c 27.469 150.043
 20.531 150.043 16.246 145.766 c 12 141.516 l h
151.754 154.246 m 155.402 157.898 160.172 160.211 165.297 160.816 c 170.418
 161.426 175.598 160.289 180 157.598 c 180 180 l 12 180 l 12 157.598 l 20.844
 163.023 32.578 161.918 40.246 154.238 c 40.246 154.234 l 44.531 149.957
 51.469 149.957 55.754 154.234 c 64.73 163.211 79.273 163.211 88.25 154.234
 c 88.246 154.234 l 92.531 149.957 99.469 149.957 103.754 154.234 c 112.73
 163.211 127.273 163.211 136.238 154.234 c 136.234 154.234 l 138.293 152.176
 141.082 151.02 143.992 151.02 c 146.902 151.02 149.695 152.176 151.754 
154.234 c h
151.754 154.246 m f
Q Q
showpage
%%Trailer
%%EOF
