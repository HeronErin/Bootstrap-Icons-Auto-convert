%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
47.965 0.078 m 44.395 4.816 l 42.98 6.688 43.246 9.328 45 10.879 c 45 24
 l 30 24 l 23.371 24 18 29.371 18 36 c 18 54 l 12 54 l 5.371 54 0 59.371
 0 66 c 0 90 l 0 91.59 0.633 93.117 1.758 94.242 c 2.883 95.367 4.41 96 
6 96 c 90 96 l 91.59 96 93.117 95.367 94.242 94.242 c 95.367 93.117 96 91.59
 96 90 c 96 66 l 96 62.816 94.734 59.766 92.484 57.516 c 90.234 55.266 87.184
 54 84 54 c 78 54 l 78 36 l 78 32.816 76.734 29.766 74.484 27.516 c 72.234
 25.266 69.184 24 66 24 c 51 24 l 51 10.836 l 52.715 9.273 52.957 6.66 51.551
 4.812 c h
24 36 m 24 32.688 26.688 30 30 30 c 66 30 l 67.59 30 69.117 30.633 70.242
 31.758 c 71.367 32.883 72 34.41 72 36 c 72 38.484 l 70.543 38.492 69.145
 37.914 68.125 36.875 c 65.969 34.719 63.047 33.508 60 33.508 c 56.953 33.508
 54.031 34.719 51.875 36.875 c 49.734 39.016 46.266 39.016 44.125 36.875
 c 41.969 34.719 39.047 33.508 36 33.508 c 32.953 33.508 30.031 34.719 27.875
 36.875 c 26.855 37.914 25.457 38.492 24 38.484 c h
24 44.484 m 26.941 44.484 29.879 43.363 32.125 41.125 c 34.266 38.984 37.734
 38.984 39.875 41.125 c 44.363 45.605 51.637 45.605 56.121 41.125 c 56.125
 41.125 l 58.266 38.984 61.734 38.984 63.875 41.125 c 66.117 43.363 69.059
 44.484 72 44.484 c 72 54 l 24 54 l h
6 66 m 6 62.688 8.688 60 12 60 c 84 60 l 85.59 60 87.117 60.633 88.242 
61.758 c 89.367 62.883 90 64.41 90 66 c 90 70.758 l 87.875 72.883 l 86.848
 73.91 85.453 74.488 83.996 74.488 c 82.543 74.488 81.148 73.91 80.117 72.883
 c 77.965 70.727 75.043 69.52 71.996 69.52 c 68.949 69.52 66.031 70.727 
63.875 72.883 c 61.734 75.02 58.266 75.02 56.125 72.883 c 53.969 70.727 
51.047 69.516 48 69.516 c 44.953 69.516 42.031 70.727 39.875 72.883 c 37.734
 75.02 34.266 75.02 32.125 72.883 c 29.969 70.727 27.047 69.516 24 69.516
 c 20.953 69.516 18.031 70.727 15.875 72.883 c 13.734 75.02 10.266 75.02
 8.125 72.883 c 6 70.758 l h
75.875 77.125 m 79.633 80.879 85.473 81.57 90 78.797 c 90 90 l 6 90 l 6
 78.797 l 10.422 81.508 16.289 80.957 20.125 77.117 c 22.266 74.98 25.734
 74.98 27.875 77.117 c 32.363 81.605 39.637 81.605 44.121 77.117 c 44.125
 77.117 l 46.266 74.98 49.734 74.98 51.875 77.117 c 56.363 81.605 63.637
 81.605 68.117 77.117 c 69.148 76.09 70.543 75.512 71.996 75.512 c 73.453
 75.512 74.848 76.09 75.875 77.117 c h
75.875 77.125 m f
Q Q
showpage
%%Trailer
%%EOF
