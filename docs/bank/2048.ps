%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 1402.559 288 l 1488 288 l 1500.73 288 1512.938 293.059 1521.941
 302.059 c 1530.941 311.062 1536 323.27 1536 336 c 1536 528 l 1536 540.73
 1530.941 552.938 1521.941 561.941 c 1512.938 570.941 1500.73 576 1488 576
 c 1440 576 l 1440 1248 l 1450.719 1248.008 1461.129 1251.605 1469.566 1258.215
 c 1478.004 1264.828 1483.988 1274.074 1486.559 1284.48 c 1534.559 1476.48
 l 1538.18 1490.809 1534.969 1506.008 1525.863 1517.648 c 1516.758 1529.289
 1502.781 1536.066 1488 1536 c 48 1536 l 33.219 1536.066 19.242 1529.289
 10.137 1517.648 c 1.031 1506.008 -2.18 1490.809 1.441 1476.48 c 49.441 
1284.48 l 52.012 1274.074 57.996 1264.828 66.434 1258.215 c 74.871 1251.605
 85.281 1248.008 96 1248 c 96 576 l 48 576 l 35.27 576 23.062 570.941 14.059
 561.941 c 5.059 552.938 0 540.73 0 528 c 0 336 l 0 323.27 5.059 311.062
 14.059 302.059 c 23.062 293.059 35.27 288 48 288 c 133.441 288 l h
362.594 288 m 1173.504 288 l 768 96 l h
192 576 m 192 1248 l 288 1248 l 288 576 l h
384 576 m 384 1248 l 624 1248 l 624 576 l h
720 576 m 720 1248 l 816 1248 l 816 576 l h
912 576 m 912 1248 l 1152 1248 l 1152 576 l h
1248 576 m 1248 1248 l 1344 1248 l 1344 576 l h
1440 480 m 1440 384 l 96 384 l 96 480 l h
1402.559 1344 m 133.441 1344 l 109.441 1440 l 1426.562 1440 l h
1402.559 1344 m f
Q Q
showpage
%%Trailer
%%EOF
