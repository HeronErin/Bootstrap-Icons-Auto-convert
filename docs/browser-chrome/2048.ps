%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536 955.426 1467.461 1136.383 1343.297 1276.781 c 1219.129 
1417.18 1047.91 1507.328 861.887 1530.238 c 1044.48 848.832 l 1058.125 802.254
 1059.773 752.984 1049.281 705.602 c 1038.578 657.414 1015.668 612.785 982.754
 576 c 1511.809 576 l 1527.934 638.723 1536.062 703.234 1536 768 c 0 768
 m -0.008 970.477 79.941 1164.766 222.457 1308.594 c 364.973 1452.422 558.523
 1534.152 760.992 1536 c 897.887 1025.184 l 875.895 1036.277 852.566 1044.508
 828.48 1049.664 c 772.539 1061.688 714.289 1056.773 661.152 1035.551 c 
623.406 1020.469 589.285 997.566 561.023 968.352 c 60.77 468.098 l 20.602
 562.977 -0.066 664.969 0 768 c 480.383 751.969 m 106.367 377.855 l 203.973
 212.484 359.965 89.66 543.617 33.574 c 727.27 -22.508 925.266 -7.785 1098.605
 74.84 c 1271.941 157.469 1408.055 302.016 1480.129 480 c 774.336 480 l 
733.062 479.07 692.074 487.027 654.145 503.328 c 604.852 524.41 562.449 
558.875 531.738 602.82 c 501.027 646.766 483.238 698.434 480.383 751.969
 c 768 960 m 818.922 960 867.758 939.773 903.766 903.766 c 939.773 867.758
 960 818.922 960 768 c 960 717.078 939.773 668.242 903.766 632.234 c 867.758
 596.227 818.922 576 768 576 c 717.078 576 668.242 596.227 632.234 632.234
 c 596.227 668.242 576 717.078 576 768 c 576 818.922 596.227 867.758 632.234
 903.766 c 668.242 939.773 717.078 960 768 960 c f*
Q Q
showpage
%%Trailer
%%EOF
