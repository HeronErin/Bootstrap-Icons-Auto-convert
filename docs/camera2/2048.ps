%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 768 m 480 608.93 704.93 480 864 480 c 864 384 l 762.156 384 664.484
 424.457 592.473 496.473 c 520.457 568.484 480 666.156 480 768 c f
1182.527 288 m 1375.969 288 l 1464.289 288 1536 359.617 1536 448.031 c 
1536 1087.969 l 1536 1176.289 1464.383 1248 1375.969 1248 c 1182.527 1248
 l 1088.18 1310.789 977.332 1344.199 864 1344 c 750.668 1344.199 639.82 
1310.789 545.473 1248 c 160.031 1248 l 71.711 1248 0 1176.383 0 1087.969
 c 0 448.031 l 0 359.711 71.617 288 160.031 288 c 192 288 l 192 262.539 
202.113 238.121 220.117 220.117 c 238.121 202.113 262.539 192 288 192 c 
384 192 l 409.461 192 433.879 202.113 451.883 220.117 c 469.887 238.121 
480 262.539 480 288 c 545.473 288 l 639.82 225.211 750.668 191.801 864 192
 c 981.793 192 1091.23 227.328 1182.527 288 c 192 432 m 192 414.852 182.852
 399.004 168 390.43 c 153.148 381.855 134.852 381.855 120 390.43 c 105.148
 399.004 96 414.852 96 432 c 96 449.148 105.148 464.996 120 473.57 c 134.852
 482.145 153.148 482.145 168 473.57 c 182.852 464.996 192 449.148 192 432
 c 1344 768 m 1344 640.695 1293.43 518.605 1203.41 428.59 c 1113.395 338.57
 991.305 288 864 288 c 736.695 288 614.605 338.57 524.59 428.59 c 434.57
 518.605 384 640.695 384 768 c 384 895.305 434.57 1017.395 524.59 1107.41
 c 614.605 1197.43 736.695 1248 864 1248 c 991.305 1248 1113.395 1197.43
 1203.41 1107.41 c 1293.43 1017.395 1344 895.305 1344 768 c f
Q Q
showpage
%%Trailer
%%EOF
