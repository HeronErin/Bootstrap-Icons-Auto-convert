%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
240 384 m 240 304.465 352.465 240 432 240 c 432 192 l 381.078 192 332.242
 212.227 296.234 248.234 c 260.227 284.242 240 333.078 240 384 c f
591.266 144 m 687.984 144 l 732.145 144 768 179.809 768 224.016 c 768 543.984
 l 768 588.145 732.191 624 687.984 624 c 591.266 624 l 544.09 655.395 488.668
 672.098 432 672 c 375.332 672.098 319.91 655.395 272.734 624 c 80.016 624
 l 35.855 624 0 588.191 0 543.984 c 0 224.016 l 0 179.855 35.809 144 80.016
 144 c 96 144 l 96 131.27 101.059 119.062 110.059 110.059 c 119.062 101.059
 131.27 96 144 96 c 192 96 l 204.73 96 216.938 101.059 225.941 110.059 c
 234.941 119.062 240 131.27 240 144 c 272.734 144 l 319.91 112.605 375.332
 95.902 432 96 c 490.895 96 545.617 113.664 591.266 144 c 96 216 m 96 207.426
 91.426 199.504 84 195.215 c 76.574 190.93 67.426 190.93 60 195.215 c 52.574
 199.504 48 207.426 48 216 c 48 224.574 52.574 232.496 60 236.785 c 67.426
 241.07 76.574 241.07 84 236.785 c 91.426 232.496 96 224.574 96 216 c 672
 384 m 672 320.348 646.715 259.305 601.707 214.293 c 556.695 169.285 495.652
 144 432 144 c 368.348 144 307.305 169.285 262.293 214.293 c 217.285 259.305
 192 320.348 192 384 c 192 447.652 217.285 508.695 262.293 553.707 c 307.305
 598.715 368.348 624 432 624 c 495.652 624 556.695 598.715 601.707 553.707
 c 646.715 508.695 672 447.652 672 384 c f
Q Q
showpage
%%Trailer
%%EOF
