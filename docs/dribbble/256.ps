%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 0 m 43.008 0 0 43.008 0 96 c 0 148.992 43.008 192 96 192 c 148.895 192
 192 148.992 192 96 c 192 43.008 148.895 0 96 0 c 159.406 44.258 m 171.227
 58.645 177.77 76.648 177.949 95.27 c 175.238 94.754 148.164 89.234 120.891
 92.664 c 120.266 91.32 119.738 89.855 119.113 88.402 c 117.445 84.441 115.574
 80.387 113.703 76.523 c 143.895 64.246 157.648 46.547 159.422 44.242 c 
h
96 14.16 m 116.82 14.16 135.875 21.961 150.359 34.777 c 148.895 36.867 
136.5 53.414 107.352 64.344 c 93.91 39.672 79.031 19.465 76.738 16.344 c
 83.055 14.875 89.516 14.141 96 14.16 c 61.117 21.863 m 72.105 37.09 82.258
 52.906 91.523 69.238 c 53.207 79.438 19.367 79.234 15.719 79.234 c 21.078
 54.082 37.867 32.867 61.117 21.875 c h
13.957 96.121 m 13.957 93.602 l 17.496 93.723 57.277 94.238 98.195 81.949
 c 100.582 86.52 102.766 91.215 104.855 95.895 c 101.617 96.832 l 59.352
 110.477 36.863 147.746 34.98 150.879 c 34.98 150.875 l 21.445 135.844 13.957
 116.336 13.957 96.109 c h
96 178.043 m 77.781 178.059 60.082 171.977 45.719 160.766 c 47.16 157.742
 63.828 125.676 110.051 109.539 c 110.266 109.43 110.363 109.43 110.578 
109.336 c 110.578 109.332 l 118.367 129.449 124.223 150.266 128.062 171.492
 c 117.938 175.852 107.023 178.082 96 178.043 c 141.719 163.992 m 140.879
 158.988 136.5 135.047 125.781 105.578 c 151.496 101.523 173.984 108.184
 176.793 109.117 c 176.797 109.117 l 173.266 131.5 160.547 151.395 141.707
 163.992 c h
141.719 163.992 m f*
Q Q
showpage
%%Trailer
%%EOF
