%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 344.062 0 0 344.062 0 768 c 0 1191.938 344.062 1536 768 1536 c 
1191.168 1536 1536 1191.938 1536 768 c 1536 344.062 1191.168 0 768 0 c 1275.266
 354.047 m 1369.82 469.172 1422.16 613.172 1423.586 762.145 c 1401.891 758.016
 1185.312 713.855 967.105 741.312 c 962.113 730.559 957.891 718.848 952.898
 707.234 c 939.555 675.555 924.578 643.105 909.602 612.195 c 1151.137 513.988
 1261.152 372.387 1275.363 353.957 c h
768 113.281 m 934.559 113.281 1087.008 175.68 1202.879 278.211 c 1191.168
 294.914 1092 427.301 858.816 514.754 c 751.297 317.379 632.258 155.715 
613.922 130.754 c 664.434 119 716.137 113.141 768 113.281 c 488.93 174.914
 m 488.93 174.91 l 576.852 296.727 658.062 423.25 732.191 553.922 c 425.664
 635.523 154.945 633.891 125.758 633.891 c 125.762 633.887 l 146.902 534.613
 190.672 441.555 253.66 361.961 c 316.652 282.371 397.164 218.391 488.93
 175.008 c h
111.648 768.961 m 111.648 748.801 l 139.969 749.762 458.207 753.891 785.57
 655.586 c 804.676 692.16 822.145 729.699 838.852 767.137 c 812.93 774.625
 l 474.816 883.777 294.914 1181.953 279.84 1207.008 c 171.559 1086.762 111.641
 930.68 111.648 768.863 c h
768 1424.352 m 622.246 1424.469 480.648 1375.805 365.762 1286.113 c 377.281
 1261.922 510.625 1005.41 880.418 876.289 c 882.145 875.426 882.914 875.426
 884.641 874.656 c 946.953 1035.598 993.789 1202.109 1024.512 1371.938 c
 943.504 1406.809 856.191 1424.652 768 1424.352 c 1133.762 1311.938 m 1127.043
 1271.906 1092 1080.387 1006.273 844.609 c 1212 812.16 1391.906 865.441 
1414.371 872.93 c 1414.367 872.93 l 1400.398 961.512 1368.246 1046.242 1319.938
 1121.797 c 1271.629 1197.348 1208.207 1262.086 1133.664 1311.938 c h
1133.762 1311.938 m f*
Q Q
showpage
%%Trailer
%%EOF
