%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
12 0 m 5.375 0 0 5.375 0 12 c 0 18.625 5.375 24 12 24 c 18.613 24 24 18.625
 24 12 c 24 5.375 18.613 0 12 0 c 19.926 5.531 m 21.402 7.332 22.223 9.582
 22.242 11.91 c 21.902 11.844 18.52 11.156 15.109 11.586 c 15.031 11.418
 14.965 11.234 14.887 11.055 c 14.68 10.559 14.445 10.051 14.211 9.57 c 
17.984 8.035 19.703 5.824 19.926 5.535 c h
12 1.77 m 14.602 1.77 16.984 2.746 18.797 4.348 c 18.613 4.609 17.062 6.676
 13.422 8.043 c 11.742 4.957 9.883 2.434 9.594 2.043 c 10.383 1.859 11.191
 1.77 12 1.77 c 7.641 2.734 m 9.012 4.637 10.281 6.613 11.441 8.656 c 6.652
 9.93 2.422 9.906 1.965 9.906 c 2.633 6.762 4.734 4.109 7.641 2.734 c h
1.746 12.016 m 1.746 11.699 l 2.188 11.715 7.16 11.777 12.277 10.242 c 
12.574 10.812 12.848 11.398 13.109 11.984 c 12.703 12.102 l 7.422 13.809
 4.609 18.465 4.375 18.859 c 4.371 18.859 l 2.68 16.98 1.746 14.543 1.746
 12.012 c h
12 22.254 m 9.723 22.258 7.512 21.496 5.715 20.094 c 5.895 19.715 7.977
 15.707 13.758 13.691 c 13.785 13.68 13.797 13.68 13.824 13.664 c 13.824
 13.668 l 14.797 16.18 15.527 18.781 16.008 21.438 c 14.742 21.98 13.379
 22.262 12 22.254 c 17.715 20.496 m 17.609 19.871 17.062 16.879 15.723 13.195
 c 18.938 12.688 21.75 13.52 22.098 13.637 c 22.098 13.641 l 21.66 16.438
 20.066 18.926 17.715 20.5 c h
17.715 20.496 m f*
Q Q
showpage
%%Trailer
%%EOF
