%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 172.031 0 0 172.031 0 384 c 0 595.969 172.031 768 384 768 c 595.586
 768 768 595.969 768 384 c 768 172.031 595.586 0 384 0 c 637.633 177.023
 m 684.91 234.586 711.078 306.586 711.793 381.07 c 700.945 379.008 592.656
 356.926 483.555 370.656 c 481.059 365.281 478.945 359.426 476.449 353.617
 c 469.777 337.777 462.289 321.555 454.801 306.098 c 575.57 256.992 630.578
 186.195 637.68 176.977 c h
384 56.641 m 467.281 56.641 543.504 87.84 601.441 139.105 c 595.586 147.457
 546 213.648 429.41 257.379 c 375.648 158.691 316.129 77.859 306.961 65.379
 c 306.961 65.375 l 332.219 59.5 358.07 56.57 384 56.641 c 244.465 87.457
 m 288.426 148.363 329.031 211.625 366.098 276.961 c 212.832 317.762 77.473
 316.945 62.883 316.945 c 62.879 316.945 l 73.449 267.305 95.336 220.777
 126.832 180.98 c 158.324 141.184 198.582 109.195 244.465 87.504 c h
55.824 384.48 m 55.824 374.398 l 69.984 374.879 229.105 376.941 392.785
 327.789 c 402.336 346.078 411.074 364.844 419.426 383.566 c 406.465 387.309
 l 237.41 441.883 147.457 590.973 139.922 603.5 c 139.922 603.504 l 85.781
 543.383 55.82 465.34 55.824 384.434 c h
384 712.176 m 311.125 712.234 240.324 687.902 182.879 643.055 c 188.641
 630.957 255.312 502.703 440.207 438.145 c 441.07 437.711 441.453 437.711
 442.32 437.328 c 473.477 517.797 496.895 601.055 512.258 685.969 c 471.754
 703.406 428.098 712.324 384 712.176 c 566.879 655.969 m 563.52 635.953 
546 540.191 503.137 422.305 c 606 406.082 695.953 432.719 707.184 436.465
 c 700.199 480.754 684.125 523.121 659.969 560.898 c 635.816 598.676 604.105
 631.043 566.832 655.969 c h
566.879 655.969 m f*
Q Q
showpage
%%Trailer
%%EOF
