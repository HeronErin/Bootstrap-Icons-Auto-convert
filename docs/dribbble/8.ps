%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 1.344 0 0 1.344 0 3 c 0 4.656 1.344 6 3 6 c 4.652 6 6 4.656 6 3 c
 6 1.344 4.652 0 3 0 c 4.98 1.383 m 5.352 1.832 5.555 2.395 5.562 2.977 
c 5.477 2.961 4.633 2.789 3.781 2.895 c 3.762 2.852 3.746 2.809 3.727 2.762
 c 3.676 2.637 3.617 2.512 3.559 2.391 c 4.504 2.008 4.934 1.453 4.988 1.383
 c h
3 0.441 m 3.652 0.441 4.246 0.684 4.699 1.086 c 4.652 1.152 4.266 1.668
 3.355 2.012 c 2.934 1.242 2.469 0.609 2.398 0.512 c 2.594 0.465 2.797 0.441
 3 0.441 c 1.91 0.684 m 2.254 1.16 2.57 1.652 2.859 2.164 c 1.66 2.484 0.605
 2.477 0.492 2.477 c 0.66 1.691 1.184 1.027 1.91 0.684 c h
0.438 3.004 m 0.438 2.926 l 0.547 2.93 1.793 2.945 3.07 2.562 c 3.145 2.707
 3.215 2.852 3.277 3 c 3.176 3.027 l 1.855 3.453 1.152 4.617 1.094 4.715
 c 0.672 4.246 0.438 3.637 0.438 3.004 c h
3 5.562 m 2.43 5.562 1.879 5.375 1.43 5.023 c 1.477 4.93 1.996 3.926 3.441
 3.422 c 3.449 3.418 3.449 3.418 3.457 3.414 c 3.457 3.418 l 3.699 4.047
 3.883 4.695 4.004 5.359 c 3.688 5.496 3.344 5.566 3 5.562 c 4.43 5.125 
m 4.402 4.969 4.266 4.219 3.934 3.301 c 4.738 3.176 5.441 3.383 5.527 3.41
 c 5.523 3.41 l 5.414 4.109 5.016 4.73 4.43 5.125 c h
4.43 5.125 m f*
Q Q
showpage
%%Trailer
%%EOF
