%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 0 m 2.688 0 0 2.688 0 6 c 0 9.312 2.688 12 6 12 c 9.305 12 12 9.312 12
 6 c 12 2.688 9.305 0 6 0 c 9.965 2.766 m 10.703 3.664 11.109 4.789 11.121
 5.953 c 10.953 5.922 9.258 5.574 7.555 5.789 c 7.516 5.703 7.484 5.613 
7.445 5.523 c 7.34 5.277 7.223 5.023 7.105 4.781 c 8.992 4.016 9.852 2.906
 9.965 2.766 c h
6 0.887 m 7.301 0.887 8.492 1.375 9.398 2.176 c 9.309 2.305 8.531 3.34 
6.711 4.023 c 5.871 2.48 4.941 1.219 4.797 1.023 c 5.191 0.93 5.594 0.883
 6 0.887 c 3.82 1.367 m 4.508 2.316 5.141 3.309 5.719 4.328 c 3.324 4.965
 1.211 4.953 0.98 4.953 c 0.984 4.953 l 1.316 3.379 2.367 2.055 3.82 1.367
 c h
0.871 6.008 m 0.871 5.852 l 1.094 5.859 3.578 5.891 6.137 5.125 c 6.285
 5.41 6.422 5.703 6.555 5.996 c 6.352 6.055 l 3.711 6.906 2.305 9.238 2.188
 9.434 c 2.188 9.43 l 1.34 8.492 0.871 7.27 0.871 6.008 c h
6 11.129 m 4.859 11.129 3.754 10.75 2.859 10.047 c 2.949 9.859 3.992 7.855
 6.879 6.844 c 6.891 6.836 6.898 6.836 6.91 6.832 c 7.398 8.09 7.766 9.391
 8.004 10.719 c 7.371 10.992 6.688 11.129 6 11.129 c 8.859 10.25 m 8.809
 9.938 8.531 8.441 7.863 6.598 c 9.469 6.344 10.875 6.762 11.051 6.82 c 
10.828 8.219 10.035 9.461 8.855 10.25 c h
8.859 10.25 m f*
Q Q
showpage
%%Trailer
%%EOF
