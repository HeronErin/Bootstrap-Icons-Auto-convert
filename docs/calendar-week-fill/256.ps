%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48 6 m 48 2.688 45.312 0 42 0 c 38.688 0 36 2.688 36 6 c 36 12 l 24 12 
l 17.637 12 11.531 14.527 7.031 19.031 c 2.527 23.531 0 29.637 0 36 c 0 
48 l 192 48 l 192 36 l 192 29.637 189.473 23.531 184.969 19.031 c 180.469
 14.527 174.363 12 168 12 c 156 12 l 156 6 l 156 2.688 153.312 0 150 0 c
 146.688 0 144 2.688 144 6 c 144 12 l 48 12 l h
192 168 m 192 60 l 0 60 l 0 168 l 0 174.363 2.527 180.469 7.031 184.969
 c 11.531 189.473 17.637 192 24 192 c 168 192 l 174.363 192 180.469 189.473
 184.969 184.969 c 189.473 180.469 192 174.363 192 168 c 114 84 m 126 84
 l 127.59 84 129.117 84.633 130.242 85.758 c 131.367 86.883 132 88.41 132
 90 c 132 102 l 132 103.59 131.367 105.117 130.242 106.242 c 129.117 107.367
 127.59 108 126 108 c 114 108 l 110.688 108 108 105.312 108 102 c 108 90
 l 108 86.688 110.688 84 114 84 c 150 84 m 162 84 l 163.59 84 165.117 84.633
 166.242 85.758 c 167.367 86.883 168 88.41 168 90 c 168 102 l 168 103.59
 167.367 105.117 166.242 106.242 c 165.117 107.367 163.59 108 162 108 c 
150 108 l 146.688 108 144 105.312 144 102 c 144 90 l 144 86.688 146.688 
84 150 84 c 24 126 m 24 122.688 26.688 120 30 120 c 42 120 l 43.59 120 45.117
 120.633 46.242 121.758 c 47.367 122.883 48 124.41 48 126 c 48 138 l 48 
139.59 47.367 141.117 46.242 142.242 c 45.117 143.367 43.59 144 42 144 c
 30 144 l 26.688 144 24 141.312 24 138 c h
66 120 m 78 120 l 79.59 120 81.117 120.633 82.242 121.758 c 83.367 122.883
 84 124.41 84 126 c 84 138 l 84 139.59 83.367 141.117 82.242 142.242 c 81.117
 143.367 79.59 144 78 144 c 66 144 l 62.688 144 60 141.312 60 138 c 60 126
 l 60 122.688 62.688 120 66 120 c f
Q Q
showpage
%%Trailer
%%EOF
