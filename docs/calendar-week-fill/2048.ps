%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 48 m 384 30.852 374.852 15.004 360 6.43 c 345.148 -2.145 326.852 -2.145
 312 6.43 c 297.148 15.004 288 30.852 288 48 c 288 96 l 192 96 l 141.078
 96 92.242 116.227 56.234 152.234 c 20.227 188.242 0 237.078 0 288 c 0 384
 l 1536 384 l 1536 288 l 1536 254.297 1527.129 221.188 1510.277 192 c 1493.426
 162.812 1469.188 138.574 1440 121.723 c 1410.812 104.871 1377.703 96 1344
 96 c 1248 96 l 1248 48 l 1248 30.852 1238.852 15.004 1224 6.43 c 1209.148
 -2.145 1190.852 -2.145 1176 6.43 c 1161.148 15.004 1152 30.852 1152 48 
c 1152 96 l 384 96 l h
1536 1344 m 1536 480 l 0 480 l 0 1344 l 0 1377.703 8.871 1410.812 25.723
 1440 c 42.574 1469.188 66.812 1493.426 96 1510.277 c 125.188 1527.129 158.297
 1536 192 1536 c 1344 1536 l 1377.703 1536 1410.812 1527.129 1440 1510.277
 c 1469.188 1493.426 1493.426 1469.188 1510.277 1440 c 1527.129 1410.812
 1536 1377.703 1536 1344 c 912 672 m 1008 672 l 1020.73 672 1032.938 677.059
 1041.941 686.059 c 1050.941 695.062 1056 707.27 1056 720 c 1056 816 l 1056
 828.73 1050.941 840.938 1041.941 849.941 c 1032.938 858.941 1020.73 864
 1008 864 c 912 864 l 899.27 864 887.062 858.941 878.059 849.941 c 869.059
 840.938 864 828.73 864 816 c 864 720 l 864 707.27 869.059 695.062 878.059
 686.059 c 887.062 677.059 899.27 672 912 672 c 1200 672 m 1296 672 l 1308.73
 672 1320.938 677.059 1329.941 686.059 c 1338.941 695.062 1344 707.27 1344
 720 c 1344 816 l 1344 828.73 1338.941 840.938 1329.941 849.941 c 1320.938
 858.941 1308.73 864 1296 864 c 1200 864 l 1187.27 864 1175.062 858.941 
1166.059 849.941 c 1157.059 840.938 1152 828.73 1152 816 c 1152 720 l 1152
 707.27 1157.059 695.062 1166.059 686.059 c 1175.062 677.059 1187.27 672
 1200 672 c 192 1008 m 192 995.27 197.059 983.062 206.059 974.059 c 215.062
 965.059 227.27 960 240 960 c 336 960 l 348.73 960 360.938 965.059 369.941
 974.059 c 378.941 983.062 384 995.27 384 1008 c 384 1104 l 384 1116.73 
378.941 1128.938 369.941 1137.941 c 360.938 1146.941 348.73 1152 336 1152
 c 240 1152 l 227.27 1152 215.062 1146.941 206.059 1137.941 c 197.059 1128.938
 192 1116.73 192 1104 c h
528 960 m 624 960 l 636.73 960 648.938 965.059 657.941 974.059 c 666.941
 983.062 672 995.27 672 1008 c 672 1104 l 672 1116.73 666.941 1128.938 657.941
 1137.941 c 648.938 1146.941 636.73 1152 624 1152 c 528 1152 l 515.27 1152
 503.062 1146.941 494.059 1137.941 c 485.059 1128.938 480 1116.73 480 1104
 c 480 1008 l 480 995.27 485.059 983.062 494.059 974.059 c 503.062 965.059
 515.27 960 528 960 c f
Q Q
showpage
%%Trailer
%%EOF
