%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 696 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 696 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 600 768 rectclip
1 0 0 -1 0 768 cm q
0 g
408 240 m 408 231.426 403.426 223.504 396 219.215 c 388.574 214.93 379.426
 214.93 372 219.215 c 364.574 223.504 360 231.426 360 240 c 360 360 l 288
 360 l 279.426 360 271.504 364.574 267.215 372 c 262.93 379.426 262.93 388.574
 267.215 396 c 271.504 403.426 279.426 408 288 408 c 384 408 l 390.363 408
 396.469 405.473 400.969 400.969 c 405.473 396.469 408 390.363 408 384 c
 h
408 240 m f
272.016 768 m 227.855 768 192 732.191 192 687.984 c 192 598.703 l 161.793
 571.684 137.629 538.598 121.086 501.598 c 104.543 464.602 95.996 424.527
 96 384 c 96 298.703 133.055 222.047 192 169.344 c 192 80.016 l 192 35.855
 227.809 0 272.016 0 c 495.984 0 l 540.145 0 576 35.809 576 80.016 c 576
 169.297 l 624.77 212.902 657.238 271.816 668.062 336.336 c 675.016 335.215
 682.105 337.188 687.48 341.738 c 692.852 346.289 695.965 352.961 696 360
 c 696 408 l 695.996 415.051 692.895 421.746 687.512 426.301 c 682.133 430.859
 675.02 432.82 668.062 431.664 c 657.238 496.184 624.77 555.098 576 598.703
 c 576 687.984 l 576 732.145 540.191 768 495.984 768 c h
624 384 m 624 320.348 598.715 259.305 553.707 214.293 c 508.695 169.285
 447.652 144 384 144 c 320.348 144 259.305 169.285 214.293 214.293 c 169.285
 259.305 144 320.348 144 384 c 144 447.652 169.285 508.695 214.293 553.707
 c 259.305 598.715 320.348 624 384 624 c 447.652 624 508.695 598.715 553.707
 553.707 c 598.715 508.695 624 447.652 624 384 c f
Q Q
showpage
%%Trailer
%%EOF
