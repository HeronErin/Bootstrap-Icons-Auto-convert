%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1392 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1392 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1200 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
816 480 m 816 462.852 806.852 447.004 792 438.43 c 777.148 429.855 758.852
 429.855 744 438.43 c 729.148 447.004 720 462.852 720 480 c 720 720 l 576
 720 l 558.852 720 543.004 729.148 534.43 744 c 525.855 758.852 525.855 
777.148 534.43 792 c 543.004 806.852 558.852 816 576 816 c 768 816 l 780.73
 816 792.938 810.941 801.941 801.941 c 810.941 792.938 816 780.73 816 768
 c h
816 480 m f
544.031 1536 m 455.711 1536 384 1464.383 384 1375.969 c 384 1197.406 l 
323.586 1143.371 275.254 1077.191 242.168 1003.195 c 209.086 929.199 191.988
 849.055 192 768 c 192 597.406 266.113 444.098 384 338.688 c 384 160.031
 l 384 71.711 455.617 0 544.031 0 c 991.969 0 l 1080.289 0 1152 71.617 1152
 160.031 c 1152 338.594 l 1249.539 425.805 1314.477 543.633 1336.129 672.672
 c 1350.027 670.43 1364.215 674.375 1374.957 683.477 c 1385.703 692.578 
1391.926 705.922 1392 720 c 1392 816 l 1391.992 830.102 1385.785 843.488
 1375.023 852.605 c 1364.266 861.719 1350.039 865.641 1336.129 863.328 c
 1314.477 992.367 1249.539 1110.195 1152 1197.406 c 1152 1375.965 l 1152
 1464.285 1080.383 1535.996 991.969 1535.996 c h
1248 768 m 1248 640.695 1197.43 518.605 1107.41 428.59 c 1017.395 338.57
 895.305 288 768 288 c 640.695 288 518.605 338.57 428.59 428.59 c 338.57
 518.605 288 640.695 288 768 c 288 895.305 338.57 1017.395 428.59 1107.41
 c 518.605 1197.43 640.695 1248 768 1248 c 895.305 1248 1017.395 1197.43
 1107.41 1107.41 c 1197.43 1017.395 1248 895.305 1248 768 c f
Q Q
showpage
%%Trailer
%%EOF
