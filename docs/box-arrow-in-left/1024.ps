%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 720 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 720 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 720 576 rectclip
1 0 0 -1 0 768 cm q
0 g
480 168 m 480 161.637 477.473 155.531 472.969 151.031 c 468.469 146.527
 462.363 144 456 144 c 72 144 l 65.637 144 59.531 146.527 55.031 151.031
 c 50.527 155.531 48 161.637 48 168 c 48 600 l 48 606.363 50.527 612.469
 55.031 616.969 c 59.531 621.473 65.637 624 72 624 c 456 624 l 462.363 624
 468.469 621.473 472.969 616.969 c 477.473 612.469 480 606.363 480 600 c
 480 504 l 480 495.426 484.574 487.504 492 483.215 c 499.426 478.93 508.574
 478.93 516 483.215 c 523.426 487.504 528 495.426 528 504 c 528 600 l 528
 619.094 520.414 637.41 506.91 650.91 c 493.41 664.414 475.094 672 456 672
 c 72 672 l 52.906 672 34.59 664.414 21.09 650.91 c 7.586 637.41 0 619.094
 0 600 c 0 168 l 0 148.906 7.586 130.59 21.09 117.09 c 34.59 103.586 52.906
 96 72 96 c 456 96 l 475.094 96 493.41 103.586 506.91 117.09 c 520.414 130.59
 528 148.906 528 168 c 528 264 l 528 272.574 523.426 280.496 516 284.785
 c 508.574 289.07 499.426 289.07 492 284.785 c 484.574 280.496 480 272.574
 480 264 c h
480 168 m f*
199.008 400.992 m 194.492 396.488 191.957 390.375 191.957 384 c 191.957
 377.625 194.492 371.512 199.008 367.008 c 343.008 223.008 l 349.078 216.938
 357.926 214.566 366.219 216.789 c 374.512 219.012 380.988 225.488 383.211
 233.781 c 385.434 242.074 383.062 250.922 376.992 256.992 c 273.938 360
 l 696 360 l 704.574 360 712.496 364.574 716.785 372 c 721.07 379.426 721.07
 388.574 716.785 396 c 712.496 403.426 704.574 408 696 408 c 273.938 408
 l 376.992 511.008 l 383.062 517.078 385.434 525.926 383.211 534.219 c 380.988
 542.512 374.512 548.988 366.219 551.211 c 357.926 553.434 349.078 551.062
 343.008 544.992 c h
199.008 400.992 m f*
Q Q
showpage
%%Trailer
%%EOF
