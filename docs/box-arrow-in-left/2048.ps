%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1440 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1440 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1440 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
960 336 m 960 323.27 954.941 311.062 945.941 302.059 c 936.938 293.059 
924.73 288 912 288 c 144 288 l 131.27 288 119.062 293.059 110.059 302.059
 c 101.059 311.062 96 323.27 96 336 c 96 1200 l 96 1212.73 101.059 1224.938
 110.059 1233.941 c 119.062 1242.941 131.27 1248 144 1248 c 912 1248 l 924.73
 1248 936.938 1242.941 945.941 1233.941 c 954.941 1224.938 960 1212.73 960
 1200 c 960 1008 l 960 990.852 969.148 975.004 984 966.43 c 998.852 957.855
 1017.148 957.855 1032 966.43 c 1046.852 975.004 1056 990.852 1056 1008 
c 1056 1200 l 1056 1238.191 1040.828 1274.816 1013.824 1301.824 c 986.816
 1328.828 950.191 1344 912 1344 c 144 1344 l 105.809 1344 69.184 1328.828
 42.176 1301.824 c 15.172 1274.816 0 1238.191 0 1200 c 0 336 l 0 297.809
 15.172 261.184 42.176 234.176 c 69.184 207.172 105.809 192 144 192 c 912
 192 l 950.191 192 986.816 207.172 1013.824 234.176 c 1040.828 261.184 1056
 297.809 1056 336 c 1056 528 l 1056 545.148 1046.852 560.996 1032 569.57
 c 1017.148 578.145 998.852 578.145 984 569.57 c 969.148 560.996 960 545.148
 960 528 c h
960 336 m f*
398.016 801.984 m 388.988 792.98 383.914 780.75 383.914 768 c 383.914 755.25
 388.988 743.02 398.016 734.016 c 686.016 446.016 l 698.156 433.875 715.855
 429.133 732.438 433.578 c 749.023 438.02 761.98 450.977 766.422 467.562
 c 770.867 484.145 766.125 501.844 753.984 513.984 c 547.871 720 l 1392 
720 l 1409.148 720 1424.996 729.148 1433.57 744 c 1442.145 758.852 1442.145
 777.148 1433.57 792 c 1424.996 806.852 1409.148 816 1392 816 c 547.871 
816 l 753.984 1022.016 l 766.125 1034.156 770.867 1051.855 766.422 1068.438
 c 761.98 1085.023 749.023 1097.98 732.438 1102.422 c 715.855 1106.867 698.156
 1102.125 686.016 1089.984 c h
398.016 801.984 m f*
Q Q
showpage
%%Trailer
%%EOF
