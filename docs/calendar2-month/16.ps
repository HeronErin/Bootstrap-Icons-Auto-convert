%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
1.922 9.25 m 2.328 8.047 l 3.816 8.047 l 4.223 9.25 l 4.762 9.25 l 3.332
 5.25 l 2.809 5.25 l 1.387 9.25 l h
3.078 5.855 m 3.676 7.637 l 2.465 7.637 l 3.066 5.855 l h
7.387 6.172 m 6.879 6.172 l 6.879 8.078 l 6.879 8.566 6.57 8.844 6.125 
8.844 c 5.723 8.844 5.391 8.66 5.391 8.086 c 5.391 6.172 l 4.883 6.172 l
 4.883 8.23 l 4.883 8.938 5.336 9.301 5.973 9.301 c 6.465 9.301 6.754 9.09
 6.863 8.848 c 6.883 8.848 l 6.883 9.25 l 7.383 9.25 l h
9.082 9.957 m 8.66 9.957 8.398 9.73 8.344 9.48 c 7.828 9.48 l 7.898 9.992
 8.297 10.379 9.078 10.379 c 9.777 10.379 10.387 9.984 10.387 9.195 c 10.387
 6.172 l 9.898 6.172 l 9.898 6.605 l 9.883 6.605 l 9.738 6.344 9.406 6.125
 8.988 6.125 c 8.266 6.125 7.758 6.633 7.758 7.539 c 7.758 7.793 l 7.758
 8.715 8.27 9.219 8.988 9.219 c 9.406 9.219 9.746 9 9.867 8.734 c 9.883 
8.734 l 9.883 9.188 l 9.883 9.672 9.566 9.953 9.078 9.953 c 9.086 6.555 
m 9.57 6.555 9.883 6.949 9.883 7.574 c 9.883 7.766 l 9.883 8.402 9.59 8.789
 9.086 8.789 c 8.566 8.789 8.262 8.406 8.262 7.766 c 8.262 7.574 l 8.262
 6.922 8.566 6.555 9.086 6.555 c h
9.086 6.555 m f
2.625 0 m 2.723 0 2.82 0.039 2.891 0.109 c 2.961 0.18 3 0.277 3 0.375 c
 3 0.75 l 9 0.75 l 9 0.375 l 9 0.168 9.168 0 9.375 0 c 9.582 0 9.75 0.168
 9.75 0.375 c 9.75 0.75 l 10.5 0.75 l 10.898 0.75 11.281 0.906 11.562 1.188
 c 11.844 1.469 12 1.852 12 2.25 c 12 10.5 l 12 10.898 11.844 11.281 11.562
 11.562 c 11.281 11.844 10.898 12 10.5 12 c 1.5 12 l 0.672 12 0 11.328 0
 10.5 c 0 2.25 l 0 1.422 0.672 0.75 1.5 0.75 c 2.25 0.75 l 2.25 0.375 l 
2.25 0.168 2.418 0 2.625 0 c 1.5 1.5 m 1.086 1.5 0.75 1.836 0.75 2.25 c 
0.75 10.5 l 0.75 10.699 0.828 10.891 0.969 11.031 c 1.109 11.172 1.301 11.25
 1.5 11.25 c 10.5 11.25 l 10.699 11.25 10.891 11.172 11.031 11.031 c 11.172
 10.891 11.25 10.699 11.25 10.5 c 11.25 2.25 l 11.25 2.051 11.172 1.859 
11.031 1.719 c 10.891 1.578 10.699 1.5 10.5 1.5 c h
1.5 1.5 m f
1.875 3 m 1.875 2.793 2.043 2.625 2.25 2.625 c 9.75 2.625 l 9.848 2.625
 9.945 2.664 10.016 2.734 c 10.086 2.805 10.125 2.902 10.125 3 c 10.125 
3.75 l 10.125 3.848 10.086 3.945 10.016 4.016 c 9.945 4.086 9.848 4.125 
9.75 4.125 c 2.25 4.125 l 2.043 4.125 1.875 3.957 1.875 3.75 c h
1.875 3 m f
Q Q
showpage
%%Trailer
%%EOF
