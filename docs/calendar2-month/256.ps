%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
30.719 147.984 m 37.199 128.762 l 61.008 128.762 l 67.488 147.984 l 76.105
 147.984 l 53.328 84 l 44.977 84 l 22.199 147.984 l h
49.246 93.66 m 58.801 122.16 l 39.406 122.16 l 49.008 93.66 l h
118.199 98.723 m 110.086 98.723 l 110.086 129.238 l 110.086 137.062 105.117
 141.516 98.039 141.516 c 91.57 141.516 86.277 138.562 86.277 129.371 c 
86.281 98.723 l 78.168 98.723 l 78.168 131.676 l 78.168 142.969 85.441 148.777
 95.605 148.777 c 103.477 148.777 108.121 145.418 109.863 141.516 c 110.188
 141.516 l 110.188 147.984 l 118.203 147.984 l h
145.297 159.273 m 138.539 159.273 134.375 155.625 133.477 151.641 c 125.234
 151.641 l 126.363 159.836 132.734 166.027 145.25 166.027 c 156.41 166.027
 166.203 159.703 166.203 147.09 c 166.199 98.723 l 158.41 98.723 l 158.41
 105.66 l 158.184 105.66 l 155.891 101.484 150.539 97.98 143.844 97.98 c
 132.266 97.98 124.164 106.129 124.164 120.613 c 124.164 124.691 l 124.164
 139.453 132.359 147.516 143.844 147.516 c 150.539 147.516 155.941 144 157.906
 139.738 c 158.145 139.738 l 158.145 147 l 158.145 154.738 153.07 159.277
 145.293 159.277 c 145.391 104.918 m 153.168 104.918 158.133 111.242 158.133
 121.227 c 158.133 124.262 l 158.133 134.438 153.453 140.629 145.391 140.629
 c 137.086 140.629 132.215 134.484 132.215 124.262 c 132.215 121.227 l 132.215
 110.812 137.086 104.906 145.391 104.906 c h
145.391 104.918 m f
42 0 m 43.59 0 45.117 0.633 46.242 1.758 c 47.367 2.883 48 4.41 48 6 c 
48 12 l 144 12 l 144 6 l 144 2.688 146.688 0 150 0 c 153.312 0 156 2.688
 156 6 c 156 12 l 168 12 l 174.363 12 180.469 14.527 184.969 19.031 c 189.473
 23.531 192 29.637 192 36 c 192 168 l 192 174.363 189.473 180.469 184.969
 184.969 c 180.469 189.473 174.363 192 168 192 c 24 192 l 17.637 192 11.531
 189.473 7.031 184.969 c 2.527 180.469 0 174.363 0 168 c 0 36 l 0 29.637
 2.527 23.531 7.031 19.031 c 11.531 14.527 17.637 12 24 12 c 36 12 l 36 
6 l 36 2.688 38.688 0 42 0 c 24 24 m 17.371 24 12 29.371 12 36 c 12 168 
l 12 171.184 13.266 174.234 15.516 176.484 c 17.766 178.734 20.816 180 24
 180 c 168 180 l 171.184 180 174.234 178.734 176.484 176.484 c 178.734 174.234
 180 171.184 180 168 c 180 36 l 180 32.816 178.734 29.766 176.484 27.516
 c 174.234 25.266 171.184 24 168 24 c h
24 24 m f
30 48 m 30 44.688 32.688 42 36 42 c 156 42 l 157.59 42 159.117 42.633 160.242
 43.758 c 161.367 44.883 162 46.41 162 48 c 162 60 l 162 61.59 161.367 63.117
 160.242 64.242 c 159.117 65.367 157.59 66 156 66 c 36 66 l 32.688 66 30
 63.312 30 60 c h
30 48 m f
Q Q
showpage
%%Trailer
%%EOF
