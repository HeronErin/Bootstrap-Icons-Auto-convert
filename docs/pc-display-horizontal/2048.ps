%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
144 0 m 105.809 0 69.184 15.172 42.176 42.176 c 15.172 69.184 0 105.809
 0 144 c 0 816 l 0 854.191 15.172 890.816 42.176 917.824 c 69.184 944.828
 105.809 960 144 960 c 576 960 l 576 1056 l 96 1056 l 70.539 1056 46.121
 1066.113 28.117 1084.117 c 10.113 1102.121 0 1126.539 0 1152 c 0 1440 l
 0 1465.461 10.113 1489.879 28.117 1507.883 c 46.121 1525.887 70.539 1536
 96 1536 c 1440 1536 l 1465.461 1536 1489.879 1525.887 1507.883 1507.883
 c 1525.887 1489.879 1536 1465.461 1536 1440 c 1536 1152 l 1536 1126.539
 1525.887 1102.121 1507.883 1084.117 c 1489.879 1066.113 1465.461 1056 1440
 1056 c 960 1056 l 960 960 l 1392 960 l 1430.191 960 1466.816 944.828 1493.824
 917.824 c 1520.828 890.816 1536 854.191 1536 816 c 1536 144 l 1536 105.809
 1520.828 69.184 1493.824 42.176 c 1466.816 15.172 1430.191 0 1392 0 c h
144 96 m 1392 96 l 1404.73 96 1416.938 101.059 1425.941 110.059 c 1434.941
 119.062 1440 131.27 1440 144 c 1440 816 l 1440 828.73 1434.941 840.938 
1425.941 849.941 c 1416.938 858.941 1404.73 864 1392 864 c 144 864 l 131.27
 864 119.062 858.941 110.059 849.941 c 101.059 840.938 96 828.73 96 816 
c 96 144 l 96 131.27 101.059 119.062 110.059 110.059 c 119.062 101.059 131.27
 96 144 96 c 1152 1200 m 1152 1182.852 1161.148 1167.004 1176 1158.43 c 
1190.852 1149.855 1209.148 1149.855 1224 1158.43 c 1238.852 1167.004 1248
 1182.852 1248 1200 c 1248 1217.148 1238.852 1232.996 1224 1241.57 c 1209.148
 1250.145 1190.852 1250.145 1176 1241.57 c 1161.148 1232.996 1152 1217.148
 1152 1200 c 1344 1200 m 1344 1182.852 1353.148 1167.004 1368 1158.43 c 
1382.852 1149.855 1401.148 1149.855 1416 1158.43 c 1430.852 1167.004 1440
 1182.852 1440 1200 c 1440 1217.148 1430.852 1232.996 1416 1241.57 c 1401.148
 1250.145 1382.852 1250.145 1368 1241.57 c 1353.148 1232.996 1344 1217.148
 1344 1200 c 144 1152 m 624 1152 l 641.148 1152 656.996 1161.148 665.57 
1176 c 674.145 1190.852 674.145 1209.148 665.57 1224 c 656.996 1238.852 
641.148 1248 624 1248 c 144 1248 l 126.852 1248 111.004 1238.852 102.43 
1224 c 93.855 1209.148 93.855 1190.852 102.43 1176 c 111.004 1161.148 126.852
 1152 144 1152 c 96 1368 m 96 1361.637 98.527 1355.531 103.031 1351.031 
c 107.531 1346.527 113.637 1344 120 1344 c 648 1344 l 656.574 1344 664.496
 1348.574 668.785 1356 c 673.07 1363.426 673.07 1372.574 668.785 1380 c 
664.496 1387.426 656.574 1392 648 1392 c 120 1392 l 113.637 1392 107.531
 1389.473 103.031 1384.969 c 98.527 1380.469 96 1374.363 96 1368 c f
Q Q
showpage
%%Trailer
%%EOF
