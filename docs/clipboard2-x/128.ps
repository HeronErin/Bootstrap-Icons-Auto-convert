%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
57 0 m 57.797 0 58.559 0.316 59.121 0.879 c 59.684 1.441 60 2.203 60 3 
c 60 3.797 60.316 4.559 60.879 5.121 c 61.441 5.684 62.203 6 63 6 c 63.797
 6 64.559 6.316 65.121 6.879 c 65.684 7.441 66 8.203 66 9 c 66 12 l 66 12.797
 65.684 13.559 65.121 14.121 c 64.559 14.684 63.797 15 63 15 c 33 15 l 31.344
 15 30 13.656 30 12 c 30 9 l 30 7.344 31.344 6 33 6 c 33.797 6 34.559 5.684
 35.121 5.121 c 35.684 4.559 36 3.797 36 3 c 36 1.344 37.344 0 39 0 c h
57 0 m f
18 15 m 18 13.344 19.344 12 21 12 c 24 12 l 25.656 12 27 10.656 27 9 c 
27 7.344 25.656 6 24 6 c 21 6 l 16.031 6 12 10.031 12 15 c 12 87 l 12 91.969
 16.031 96 21 96 c 75 96 l 79.969 96 84 91.969 84 87 c 84 15 l 84 10.031
 79.969 6 75 6 c 72 6 l 70.344 6 69 7.344 69 9 c 69 10.656 70.344 12 72 
12 c 75 12 l 75.797 12 76.559 12.316 77.121 12.879 c 77.684 13.441 78 14.203
 78 15 c 78 87 l 78 87.797 77.684 88.559 77.121 89.121 c 76.559 89.684 75.797
 90 75 90 c 21 90 l 19.344 90 18 88.656 18 87 c h
18 15 m f
48 49.758 m 41.125 42.875 l 39.949 41.703 38.051 41.703 36.875 42.875 c
 35.703 44.051 35.703 45.949 36.875 47.125 c 43.758 54 l 36.875 60.875 l
 35.703 62.051 35.703 63.949 36.875 65.125 c 38.051 66.297 39.949 66.297
 41.125 65.125 c 48 58.242 l 54.875 65.125 l 56.051 66.297 57.949 66.297
 59.125 65.125 c 60.297 63.949 60.297 62.051 59.125 60.875 c 52.242 54 l
 59.125 47.125 l 60.297 45.949 60.297 44.051 59.125 42.875 c 57.949 41.703
 56.051 41.703 54.875 42.875 c h
48 49.758 m f
Q Q
showpage
%%Trailer
%%EOF
