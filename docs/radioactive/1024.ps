%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 48 m 294.887 48 209.426 83.398 146.414 146.414 c 83.398 209.426 48 
294.887 48 384 c 48 473.113 83.398 558.574 146.414 621.586 c 209.426 684.602
 294.887 720 384 720 c 473.113 720 558.574 684.602 621.586 621.586 c 684.602
 558.574 720 473.113 720 384 c 720 294.887 684.602 209.426 621.586 146.414
 c 558.574 83.398 473.113 48 384 48 c 0 384 m 0 282.156 40.457 184.484 112.473
 112.473 c 184.484 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527
 112.473 c 727.543 184.484 768 282.156 768 384 c 768 485.844 727.543 583.516
 655.527 655.527 c 583.516 727.543 485.844 768 384 768 c 282.156 768 184.484
 727.543 112.473 655.527 c 40.457 583.516 0 485.844 0 384 c f
463.344 263.809 m 439.801 248.273 412.211 239.992 384 240 c 354.719 240
 327.406 248.785 304.656 263.809 c 225.312 143.617 l 272.367 112.465 327.57
 95.902 384 96 c 442.656 96 497.184 113.52 542.688 143.617 c h
527.758 375.359 m 527.762 375.359 l 530.246 416.734 514.785 457.176 485.328
 486.336 c 474.504 497.066 462.043 506.008 448.414 512.832 c 512.828 641.617
 l 540.188 627.891 565.148 609.938 586.652 588.672 c 586.656 588.672 l 615.77
 559.84 638.395 525.125 653.02 486.852 c 667.645 448.574 673.938 407.621
 671.473 366.719 c h
255.164 641.664 m 319.578 512.832 l 319.586 512.832 l 294.344 500.211 273.367
 480.457 259.262 456.016 c 245.156 431.574 238.539 403.527 240.238 375.359
 c 96.527 366.719 l 93.129 423.055 106.359 479.148 134.57 528.031 c 162.781
 576.91 204.734 616.426 255.215 641.664 c h
480 384 m 480 418.297 461.703 449.988 432 467.137 c 402.297 484.289 365.703
 484.289 336 467.137 c 306.297 449.988 288 418.297 288 384 c 288 349.703
 306.297 318.012 336 300.863 c 365.703 283.711 402.297 283.711 432 300.863
 c 461.703 318.012 480 349.703 480 384 c f
Q Q
showpage
%%Trailer
%%EOF
