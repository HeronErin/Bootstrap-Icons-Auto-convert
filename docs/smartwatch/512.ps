%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 312 384 rectclip
1 0 0 -1 0 384 cm q
0 g
216 120 m 216 113.371 210.629 108 204 108 c 197.371 108 192 113.371 192
 120 c 192 192 l 144 192 l 137.371 192 132 197.371 132 204 c 132 210.629
 137.371 216 144 216 c 204 216 l 207.184 216 210.234 214.734 212.484 212.484
 c 214.734 210.234 216 207.184 216 204 c h
216 120 m f
96 40.008 m 96 49.199 l 82.449 51.965 70.266 59.332 61.52 70.047 c 52.773
 80.762 47.996 94.168 48 108 c 48 276 l 47.996 289.832 52.773 303.238 61.52
 313.953 c 70.266 324.668 82.449 332.035 96 334.801 c 96 343.992 l 96 366.07
 113.902 384 136.008 384 c 247.992 384 l 270.07 384 288 366.098 288 343.992
 c 288 334.801 l 301.551 332.035 313.734 324.668 322.48 313.953 c 331.227
 303.238 336.004 289.832 336 276 c 336 192 l 348 192 l 351.184 192 354.234
 190.734 356.484 188.484 c 358.734 186.234 360 183.184 360 180 c 360 132
 l 360 128.816 358.734 125.766 356.484 123.516 c 354.234 121.266 351.184
 120 348 120 c 336 120 l 336 108 l 336.004 94.168 331.227 80.762 322.48 
70.047 c 313.734 59.332 301.551 51.965 288 49.199 c 288 40.008 l 288 17.93
 270.098 0 247.992 0 c 136.008 0 l 113.93 0 96 17.902 96 40.008 c 108 72
 m 276 72 l 285.547 72 294.703 75.793 301.457 82.543 c 308.207 89.297 312
 98.453 312 108 c 312 276 l 312 285.547 308.207 294.703 301.457 301.457 
c 294.703 308.207 285.547 312 276 312 c 108 312 l 98.453 312 89.297 308.207
 82.543 301.457 c 75.793 294.703 72 285.547 72 276 c 72 108 l 72 98.453 
75.793 89.297 82.543 82.543 c 89.297 75.793 98.453 72 108 72 c f
Q Q
showpage
%%Trailer
%%EOF
