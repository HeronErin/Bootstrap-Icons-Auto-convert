%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 624 768 rectclip
1 0 0 -1 0 768 cm q
0 g
432 240 m 432 231.426 427.426 223.504 420 219.215 c 412.574 214.93 403.426
 214.93 396 219.215 c 388.574 223.504 384 231.426 384 240 c 384 384 l 288
 384 l 279.426 384 271.504 388.574 267.215 396 c 262.93 403.426 262.93 412.574
 267.215 420 c 271.504 427.426 279.426 432 288 432 c 408 432 l 414.363 432
 420.469 429.473 424.969 424.969 c 429.473 420.469 432 414.363 432 408 c
 h
432 240 m f
192 80.016 m 192 98.398 l 164.895 103.934 140.535 118.66 123.039 140.09
 c 105.547 161.52 95.996 188.336 96 216 c 96 552 l 95.996 579.664 105.547
 606.48 123.039 627.91 c 140.535 649.34 164.895 664.066 192 669.602 c 192
 687.984 l 192 732.145 227.809 768 272.016 768 c 495.984 768 l 540.145 768
 576 732.191 576 687.984 c 576 669.602 l 603.105 664.066 627.465 649.34 
644.961 627.91 c 662.453 606.48 672.004 579.664 672 552 c 672 384 l 696 
384 l 702.363 384 708.469 381.473 712.969 376.969 c 717.473 372.469 720 
366.363 720 360 c 720 264 l 720 257.637 717.473 251.531 712.969 247.031 
c 708.469 242.527 702.363 240 696 240 c 672 240 l 672 216 l 672.004 188.336
 662.453 161.52 644.961 140.09 c 627.465 118.66 603.105 103.934 576 98.398
 c 576 80.016 l 576 35.855 540.191 0 495.984 0 c 272.016 0 l 227.855 0 192
 35.809 192 80.016 c 216 144 m 552 144 l 571.094 144 589.41 151.586 602.91
 165.09 c 616.414 178.59 624 196.906 624 216 c 624 552 l 624 571.094 616.414
 589.41 602.91 602.91 c 589.41 616.414 571.094 624 552 624 c 216 624 l 196.906
 624 178.59 616.414 165.09 602.91 c 151.586 589.41 144 571.094 144 552 c
 144 216 l 144 196.906 151.586 178.59 165.09 165.09 c 178.59 151.586 196.906
 144 216 144 c f
Q Q
showpage
%%Trailer
%%EOF
