%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 143 192 1402 1152
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 143 192 1402 1152
1536 1536 cairo_set_page_size
%%EndPageSetup
q 143 192 1259 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
633.406 481.246 m 637.719 479.352 642.695 479.777 646.621 482.379 c 650.543
 484.984 652.871 489.402 652.801 494.113 c 652.801 604.801 l 652.801 617.531
 657.855 629.738 666.859 638.742 c 675.859 647.742 688.07 652.801 700.801
 652.801 c 764.832 652.801 894.047 653.281 1017.602 731.711 c 1112.066 791.613
 1208.641 900.672 1266.723 1103.809 c 1168.801 1009.441 1056.961 958.273
 959.043 931.105 c 959.039 931.105 l 898.859 914.449 837 904.594 774.625
 901.727 c 749.094 900.527 723.516 900.785 698.016 902.496 c 696.77 902.496
 l 696.289 902.594 l 696.191 902.594 l 700.801 950.398 l 696 902.59 l 696
 902.594 l 684.152 903.781 673.168 909.336 665.188 918.172 c 657.203 927.004
 652.789 938.492 652.801 950.398 c 652.801 1061.086 l 652.801 1071.453 642.242
 1077.98 633.41 1073.949 c 250.945 792.383 l 246.914 789.695 l 246.91 789.695
 l 242.668 787.145 240.07 782.555 240.07 777.602 c 240.07 772.645 242.668
 768.055 246.91 765.504 c 250.941 762.816 l h
748.801 997.055 m 755.395 997.055 762.527 997.246 770.207 997.629 c 811.871
 999.551 869.473 1005.887 933.406 1023.645 c 1060.703 1058.973 1211.422 
1139.035 1311.645 1319.324 c 1311.648 1319.328 l 1318.93 1332.406 1331.898
 1341.336 1346.715 1343.48 c 1361.531 1345.621 1376.496 1340.73 1387.188
 1330.25 c 1397.875 1319.77 1403.062 1304.902 1401.215 1290.047 c 1356.672
 933.887 1220.16 746.496 1069.055 650.688 c 949.535 574.848 826.461 560.254
 748.797 557.473 c 748.797 494.113 l 748.801 494.113 l 748.812 467.629 739.254
 442.031 721.883 422.039 c 704.516 402.043 680.508 389 654.281 385.309 c
 628.055 381.617 601.379 387.531 579.168 401.953 c 195.742 684.191 l 163.52
 704.309 143.938 739.613 143.938 777.602 c 143.938 815.586 163.52 850.895
 195.742 871.008 c 579.168 1153.246 l 601.379 1167.672 628.055 1173.582 
654.281 1169.891 c 680.508 1166.199 704.516 1153.156 721.883 1133.16 c 739.254
 1113.168 748.812 1087.57 748.801 1061.09 c h
748.801 997.055 m f
Q Q
showpage
%%Trailer
%%EOF
