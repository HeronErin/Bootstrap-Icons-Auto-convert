%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 5 rectclip
1 0 0 -1 0 6 cm q
0 g
2.473 1.879 m 2.512 1.863 2.551 1.891 2.551 1.93 c 2.551 2.363 l 2.551 
2.465 2.633 2.551 2.738 2.551 c 2.988 2.551 3.492 2.551 3.977 2.859 c 4.344
 3.094 4.723 3.52 4.949 4.312 c 4.566 3.945 4.129 3.742 3.746 3.637 c 3.512
 3.57 3.27 3.535 3.027 3.523 c 2.926 3.52 2.828 3.52 2.727 3.523 c 2.723
 3.523 l 2.738 3.711 l 2.719 3.523 l 2.719 3.527 l 2.621 3.535 2.551 3.617
 2.551 3.711 c 2.551 4.145 l 2.551 4.184 2.508 4.211 2.477 4.195 c 0.98 
3.094 l 0.965 3.082 l 0.965 3.086 l 0.93 3.062 0.93 3.012 0.965 2.992 c 
0.98 2.98 l h
2.926 3.895 m 2.953 3.895 2.98 3.895 3.008 3.898 c 3.172 3.906 3.395 3.93
 3.645 4 c 4.141 4.137 4.73 4.449 5.121 5.156 c 5.125 5.152 l 5.223 5.332
 5.5 5.242 5.473 5.039 c 5.297 3.648 4.766 2.914 4.176 2.543 c 3.707 2.246
 3.227 2.191 2.926 2.18 c 2.926 1.93 l 2.926 1.773 2.84 1.629 2.699 1.555
 c 2.562 1.477 2.395 1.484 2.262 1.57 c 0.766 2.672 l 0.641 2.75 0.562 2.891
 0.562 3.039 c 0.562 3.188 0.641 3.324 0.766 3.402 c 2.262 4.504 l 2.395
 4.59 2.562 4.598 2.699 4.523 c 2.84 4.445 2.926 4.301 2.926 4.145 c h
2.926 3.895 m f
Q Q
showpage
%%Trailer
%%EOF
