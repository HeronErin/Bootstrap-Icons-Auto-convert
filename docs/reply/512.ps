%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 35 48 351 288
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 35 48 351 288
384 384 cairo_set_page_size
%%EndPageSetup
q 35 48 316 240 rectclip
1 0 0 -1 0 384 cm q
0 g
158.352 120.312 m 159.43 119.836 160.676 119.945 161.656 120.594 c 162.637
 121.246 163.219 122.352 163.199 123.527 c 163.199 151.199 l 163.199 154.383
 164.465 157.434 166.715 159.684 c 168.965 161.938 172.016 163.199 175.199
 163.199 c 191.207 163.199 223.512 163.32 254.398 182.926 c 278.016 197.902
 302.16 225.164 316.68 275.949 c 292.199 252.355 264.238 239.566 239.758
 232.773 c 239.762 232.777 l 224.715 228.613 209.25 226.148 193.656 225.434
 c 187.273 225.133 180.879 225.195 174.504 225.625 c 174.191 225.625 l 174.07
 225.648 l 174.047 225.648 l 175.199 237.602 l 174 225.648 l 167.863 226.266
 163.195 231.434 163.199 237.602 c 163.199 265.273 l 163.199 267.867 160.559
 269.496 158.352 268.488 c 62.734 198.098 l 61.727 197.426 l 60.668 196.785
 60.016 195.637 60.016 194.398 c 60.016 193.16 60.668 192.016 61.727 191.375
 c 62.734 190.703 l h
187.199 249.266 m 188.848 249.266 190.633 249.312 192.551 249.41 c 202.965
 249.891 217.367 251.473 233.352 255.914 c 265.176 264.746 302.855 284.762
 327.91 329.836 c 327.91 329.832 l 330.707 334.852 336.664 337.184 342.125
 335.398 c 347.582 333.613 351.012 328.211 350.305 322.512 c 339.168 233.473
 305.039 186.625 267.266 162.672 c 237.387 143.711 206.617 140.062 187.203
 139.367 c 187.203 123.527 l 187.199 123.527 l 187.203 116.906 184.812 110.508
 180.473 105.508 c 176.129 100.512 170.125 97.25 163.57 96.328 c 157.016
 95.406 150.344 96.883 144.793 100.488 c 48.938 171.047 l 40.879 176.078
 35.984 184.902 35.984 194.398 c 35.984 203.898 40.879 212.723 48.938 217.754
 c 144.793 288.312 l 150.344 291.918 157.016 293.395 163.57 292.473 c 170.125
 291.551 176.129 288.289 180.473 283.289 c 184.812 278.293 187.203 271.895
 187.199 265.273 c h
187.199 249.266 m f
Q Q
showpage
%%Trailer
%%EOF
