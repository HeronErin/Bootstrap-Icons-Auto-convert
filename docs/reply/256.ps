%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 17 24 176 144
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 17 24 176 144
192 192 cairo_set_page_size
%%EndPageSetup
q 17 24 159 120 rectclip
1 0 0 -1 0 192 cm q
0 g
79.176 60.156 m 79.715 59.918 80.336 59.973 80.828 60.297 c 81.316 60.621
 81.609 61.176 81.602 61.766 c 81.602 75.602 l 81.602 77.191 82.23 78.719
 83.355 79.844 c 84.484 80.969 86.008 81.602 87.602 81.602 c 95.605 81.602
 111.758 81.66 127.203 91.465 c 139.012 98.953 151.082 112.586 158.344 137.977
 c 146.105 126.18 132.125 119.785 119.883 116.387 c 119.879 116.387 l 112.359
 114.305 104.625 113.074 96.828 112.715 c 93.637 112.566 90.441 112.598 
87.254 112.812 c 87.098 112.812 l 87.039 112.824 l 87.027 112.824 l 87.602
 118.801 l 87 112.824 l 83.934 113.133 81.598 115.715 81.602 118.801 c 81.602
 132.637 l 81.602 133.934 80.281 134.75 79.176 134.246 c 31.367 99.047 l
 30.863 98.711 l 30.332 98.395 30.008 97.82 30.008 97.199 c 30.008 96.582
 30.332 96.008 30.863 95.688 c 31.367 95.352 l h
93.602 124.633 m 94.426 124.633 95.316 124.656 96.277 124.703 c 101.484
 124.941 108.684 125.734 116.676 127.957 c 132.586 132.371 151.43 142.383
 163.957 164.918 c 163.957 164.914 l 165.352 167.426 168.332 168.594 171.062
 167.699 c 173.793 166.809 175.508 164.105 175.152 161.258 c 169.586 116.738
 152.52 93.312 133.633 81.336 c 118.691 71.855 103.309 70.031 93.602 69.684
 c 93.602 61.762 l 93.602 61.766 l 93.602 56.73 90.848 52.098 86.426 49.695
 c 82.004 47.293 76.617 47.504 72.395 50.242 c 24.465 85.523 l 24.469 85.523
 l 20.441 88.039 17.992 92.453 17.992 97.199 c 17.992 101.949 20.441 106.363
 24.469 108.875 c 72.398 144.156 l 72.395 144.156 l 76.617 146.898 82.004
 147.109 86.426 144.703 c 90.848 142.301 93.602 137.672 93.602 132.637 c
 h
93.602 124.633 m f
Q Q
showpage
%%Trailer
%%EOF
