%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 71 96 701 576
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 71 96 701 576
768 768 cairo_set_page_size
%%EndPageSetup
q 71 96 630 480 rectclip
1 0 0 -1 0 768 cm q
0 g
316.703 240.625 m 318.859 239.676 321.348 239.891 323.309 241.191 c 325.273
 242.492 326.438 244.703 326.398 247.055 c 326.398 302.398 l 326.398 308.766
 328.93 314.871 333.43 319.371 c 337.93 323.871 344.035 326.398 350.398 
326.398 c 382.414 326.398 447.023 326.637 508.797 365.855 c 556.027 395.809
 604.316 450.336 633.355 551.902 c 584.395 504.719 528.477 479.133 479.516
 465.551 c 479.52 465.551 l 449.43 457.223 418.5 452.297 387.312 450.863
 c 374.547 450.262 361.758 450.391 349.008 451.246 c 348.383 451.246 l 348.145
 451.293 l 348.098 451.293 l 350.398 475.199 l 348 451.297 l 342.074 451.891
 336.586 454.668 332.594 459.086 c 328.602 463.504 326.395 469.246 326.398
 475.199 c 326.398 530.543 l 326.398 535.727 321.117 538.992 316.703 536.977
 c 125.473 396.191 l 123.457 394.848 l 121.332 393.57 120.035 391.277 120.035
 388.801 c 120.035 386.324 121.332 384.027 123.457 382.754 c 125.473 381.41
 l h
374.398 498.527 m 377.695 498.527 381.262 498.625 385.102 498.816 c 405.934
 499.777 434.734 502.945 466.703 511.824 c 530.352 529.488 605.711 569.52
 655.824 659.664 c 659.465 666.203 665.949 670.668 673.355 671.738 c 680.766
 672.812 688.25 670.363 693.594 665.125 c 698.938 659.887 701.531 652.453
 700.609 645.023 c 678.336 466.945 610.082 373.246 534.531 325.344 c 474.77
 287.422 413.234 280.129 374.402 278.734 c 374.402 247.055 l 374.398 247.055
 l 374.406 233.812 369.625 221.016 360.941 211.02 c 352.258 201.023 340.254
 194.5 327.141 192.656 c 314.027 190.809 300.691 193.766 289.586 200.977
 c 97.875 342.098 l 97.871 342.098 l 81.758 352.152 71.969 369.805 71.969
 388.801 c 71.969 407.793 81.758 425.445 97.871 435.504 c 289.582 576.625
 l 289.586 576.625 l 300.691 583.836 314.027 586.789 327.141 584.945 c 340.254
 583.098 352.258 576.578 360.941 566.582 c 369.625 556.586 374.406 543.785
 374.398 530.543 c h
374.398 498.527 m f
Q Q
showpage
%%Trailer
%%EOF
