%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 8 12 88 72
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 8 12 88 72
96 96 cairo_set_page_size
%%EndPageSetup
q 8 12 80 60 rectclip
1 0 0 -1 0 96 cm q
0 g
39.59 30.078 m 39.855 29.961 40.168 29.984 40.414 30.148 c 40.66 30.312
 40.805 30.586 40.801 30.883 c 40.801 37.801 l 40.801 38.594 41.117 39.359
 41.68 39.922 c 42.242 40.484 43.004 40.801 43.801 40.801 c 47.805 40.801
 55.879 40.832 63.602 45.734 c 69.504 49.477 75.543 56.293 79.172 68.992
 c 73.051 63.094 66.062 59.895 59.941 58.199 c 59.941 58.195 l 56.18 57.152
 52.312 56.539 48.414 56.359 c 46.82 56.281 45.219 56.301 43.625 56.406 
c 43.547 56.406 l 43.516 56.414 l 43.508 56.414 l 43.801 59.398 l 43.5 56.41
 l 41.965 56.566 40.797 57.859 40.801 59.398 c 40.801 66.316 l 40.801 66.965
 40.141 67.371 39.59 67.121 c 15.684 49.523 l 15.43 49.355 l 15.434 49.355
 l 15.168 49.195 15.004 48.91 15.004 48.602 c 15.004 48.289 15.168 48.004
 15.434 47.844 c 15.688 47.676 l h
46.801 62.316 m 47.211 62.316 47.66 62.328 48.141 62.352 c 50.746 62.473
 54.344 62.867 58.34 63.977 c 66.297 66.184 75.715 71.188 81.98 82.457 c
 81.977 82.457 l 82.676 83.711 84.168 84.297 85.531 83.852 c 86.895 83.402
 87.754 82.055 87.574 80.629 c 84.789 58.367 76.258 46.656 66.812 40.668
 c 59.344 35.93 51.652 35.016 46.797 34.844 c 46.797 30.883 l 46.801 30.883
 l 46.801 28.363 45.426 26.051 43.211 24.848 c 41 23.645 38.309 23.75 36.199
 25.121 c 12.234 42.762 l 10.219 44.02 8.996 46.227 8.996 48.602 c 8.996
 50.973 10.219 53.18 12.234 54.438 c 36.199 72.078 l 38.309 73.449 41 73.555
 43.211 72.352 c 45.426 71.152 46.801 68.836 46.801 66.316 c h
46.801 62.316 m f
Q Q
showpage
%%Trailer
%%EOF
