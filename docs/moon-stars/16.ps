%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
4.5 0.207 m 4.648 0.391 4.672 0.645 4.559 0.852 c 4.125 1.648 3.898 2.539
 3.902 3.445 c 3.902 6.461 6.359 8.902 9.391 8.902 c 9.785 8.902 10.168 
8.863 10.539 8.781 c 10.539 8.785 l 10.77 8.734 11.012 8.828 11.148 9.023
 c 11.293 9.223 11.285 9.5 11.125 9.691 c 9.934 11.156 8.145 12.004 6.258
 12 c 2.801 12 0 9.215 0 5.781 c 0 3.199 1.586 0.984 3.844 0.047 c 4.074
 -0.055 4.344 0.012 4.5 0.207 c 3.645 0.984 m 1.875 1.934 0.77 3.777 0.77
 5.781 c 0.77 8.797 3.23 11.238 6.258 11.238 c 7.723 11.242 9.129 10.656
 10.16 9.617 c 9.906 9.648 9.648 9.664 9.387 9.664 c 5.93 9.664 3.129 6.879
 3.129 3.445 c 3.129 2.57 3.309 1.738 3.641 0.98 c f
8.094 2.359 m 8.145 2.211 8.355 2.211 8.406 2.359 c 8.695 3.23 l 8.824 
3.617 9.129 3.922 9.52 4.055 c 10.391 4.344 l 10.539 4.395 10.539 4.605 
10.391 4.656 c 9.52 4.945 l 9.516 4.945 l 9.129 5.074 8.824 5.379 8.695 
5.766 c 8.406 6.637 l 8.406 6.641 l 8.355 6.789 8.145 6.789 8.094 6.641 
c 7.805 5.77 l 7.805 5.766 l 7.676 5.379 7.371 5.074 6.984 4.945 c 6.113
 4.656 l 6.109 4.656 l 5.961 4.605 5.961 4.395 6.109 4.344 c 6.98 4.055 
l 6.984 4.055 l 7.371 3.926 7.676 3.621 7.805 3.234 c h
10.398 0.074 m 10.43 -0.023 10.57 -0.023 10.602 0.074 c 10.797 0.656 l 
10.883 0.914 11.086 1.117 11.348 1.207 c 11.93 1.402 l 11.926 1.398 l 12.023
 1.43 12.023 1.57 11.926 1.602 c 11.344 1.797 l 11.086 1.883 10.883 2.086
 10.797 2.344 c 10.602 2.926 l 10.57 3.023 10.43 3.023 10.398 2.926 c 10.203
 2.344 l 10.117 2.086 9.914 1.883 9.656 1.797 c 9.074 1.602 l 8.977 1.57
 8.977 1.43 9.074 1.398 c 9.656 1.203 l 9.914 1.117 10.117 0.914 10.207 
0.652 c h
10.398 0.074 m f
Q Q
showpage
%%Trailer
%%EOF
