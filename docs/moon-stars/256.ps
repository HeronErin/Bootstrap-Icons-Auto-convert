%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
72 3.336 m 74.391 6.25 74.77 10.324 72.961 13.633 c 66.02 26.367 62.395
 40.648 62.426 55.152 c 62.426 103.406 101.762 142.477 150.242 142.477 c
 156.578 142.469 162.711 141.828 168.637 140.555 c 172.344 139.762 176.164
 141.254 178.355 144.348 c 180.688 147.586 180.535 151.992 177.984 155.062
 c 158.922 178.477 130.32 192.047 100.129 192 c 44.809 192 0 147.434 0 92.52
 c 0 51.191 25.367 15.742 61.488 0.719 c 65.184 -0.852 69.473 0.215 72 3.336
 c 58.297 15.73 m 44.406 23.184 32.797 34.258 24.699 47.777 c 16.602 61.297
 12.316 76.758 12.301 92.52 c 12.301 140.758 51.648 179.832 100.129 179.832
 c 123.578 179.867 146.066 170.527 162.59 153.887 c 158.543 154.391 154.426
 154.645 150.242 154.645 c 94.922 154.645 50.125 110.078 50.125 55.164 c
 50.125 41.16 53.027 27.828 58.297 15.73 c f
129.527 37.777 m 129.883 36.711 130.879 35.992 132 35.992 c 133.121 35.992
 134.117 36.711 134.473 37.777 c 139.117 51.723 l 141.191 57.938 146.066
 62.812 152.281 64.887 c 166.227 69.531 l 166.223 69.527 l 167.289 69.883
 168.008 70.879 168.008 72 c 168.008 73.121 167.289 74.117 166.223 74.473
 c 152.277 79.117 l 152.281 79.117 l 146.059 81.18 141.18 86.059 139.117
 92.281 c 134.473 106.227 l 134.473 106.223 l 134.117 107.289 133.121 108.008
 132 108.008 c 130.879 108.008 129.883 107.289 129.527 106.223 c 124.883
 92.277 l 124.883 92.281 l 122.82 86.059 117.941 81.18 111.719 79.117 c 
97.773 74.473 l 97.777 74.473 l 96.711 74.117 95.992 73.121 95.992 72 c 
95.992 70.879 96.711 69.883 97.777 69.527 c 111.723 64.883 l 111.719 64.883
 l 117.941 62.82 122.82 57.941 124.883 51.719 c h
166.355 1.188 m 166.598 0.488 167.258 0.02 168 0.02 c 168.742 0.02 169.402
 0.488 169.645 1.188 c 172.742 10.477 l 174.121 14.629 177.375 17.879 181.527
 19.262 c 190.816 22.359 l 190.812 22.355 l 191.512 22.598 191.98 23.258
 191.98 24 c 191.98 24.742 191.512 25.402 190.812 25.645 c 181.523 28.742
 l 181.523 28.738 l 177.379 30.125 174.125 33.379 172.738 37.523 c 169.641
 46.812 l 169.645 46.812 l 169.402 47.512 168.742 47.98 168 47.98 c 167.258
 47.98 166.598 47.512 166.355 46.812 c 163.258 37.523 l 163.262 37.523 l
 161.875 33.379 158.621 30.125 154.477 28.738 c 145.188 25.641 l 145.188
 25.645 l 144.488 25.402 144.02 24.742 144.02 24 c 144.02 23.258 144.488
 22.598 145.188 22.355 c 154.477 19.258 l 158.629 17.879 161.879 14.625 
163.262 10.473 c h
166.355 1.188 m f
Q Q
showpage
%%Trailer
%%EOF
