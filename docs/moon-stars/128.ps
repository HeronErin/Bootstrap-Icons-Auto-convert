%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
36 1.668 m 37.195 3.125 37.387 5.164 36.48 6.816 c 33.008 13.184 31.199
 20.324 31.211 27.574 c 31.211 51.699 50.879 71.234 75.117 71.234 c 78.285
 71.23 81.352 70.91 84.316 70.273 c 84.316 70.277 l 86.172 69.883 88.082
 70.629 89.18 72.176 c 90.344 73.793 90.266 75.996 88.992 77.531 c 79.461
 89.238 65.16 96.023 50.062 96 c 22.402 96 0 73.715 0 46.262 c 0 25.598 
12.684 7.871 30.742 0.359 c 32.59 -0.426 34.734 0.109 36 1.668 c 29.148 
7.867 m 22.203 11.59 16.398 17.129 12.352 23.891 c 8.301 30.648 6.156 38.379
 6.148 46.262 c 6.148 70.383 25.824 89.918 50.062 89.918 c 50.062 89.914
 l 61.789 89.934 73.031 85.262 81.293 76.945 c 79.27 77.199 77.211 77.324
 75.117 77.324 c 47.457 77.324 25.059 55.039 25.059 27.586 c 25.059 20.582
 26.512 13.918 29.145 7.871 c f
64.766 18.887 m 64.941 18.355 65.438 17.996 66 17.996 c 66.562 17.996 67.059
 18.355 67.234 18.887 c 69.555 25.859 l 70.594 28.969 73.027 31.402 76.137
 32.441 c 83.109 34.762 l 83.113 34.766 l 83.645 34.941 84.004 35.438 84.004
 36 c 84.004 36.562 83.645 37.059 83.113 37.234 c 76.141 39.555 l 76.141
 39.559 l 73.031 40.59 70.59 43.031 69.559 46.141 c 67.238 53.113 l 67.234
 53.113 l 67.059 53.645 66.562 54.004 66 54.004 c 65.438 54.004 64.941 53.645
 64.766 53.113 c 62.445 46.141 l 62.441 46.141 l 61.41 43.031 58.969 40.59
 55.859 39.559 c 48.887 37.238 l 48.887 37.234 l 48.355 37.059 47.996 36.562
 47.996 36 c 47.996 35.438 48.355 34.941 48.887 34.766 c 55.859 32.445 l
 55.859 32.441 l 58.969 31.41 61.41 28.969 62.441 25.859 c h
83.18 0.594 m 83.301 0.242 83.629 0.008 84 0.008 c 84.371 0.008 84.699 
0.242 84.82 0.594 c 86.367 5.238 l 87.059 7.312 88.684 8.941 90.758 9.629
 c 95.402 11.176 l 95.406 11.18 l 95.758 11.301 95.992 11.629 95.992 12 
c 95.992 12.371 95.758 12.699 95.406 12.82 c 90.762 14.367 l 90.762 14.371
 l 88.691 15.062 87.062 16.691 86.371 18.762 c 84.824 23.406 l 84.82 23.406
 l 84.699 23.758 84.371 23.992 84 23.992 c 83.629 23.992 83.301 23.758 83.18
 23.406 c 81.633 18.762 l 81.629 18.762 l 80.938 16.691 79.309 15.062 77.238
 14.371 c 72.594 12.824 l 72.594 12.82 l 72.242 12.699 72.008 12.371 72.008
 12 c 72.008 11.629 72.242 11.301 72.594 11.18 c 77.238 9.633 l 79.312 8.941
 80.941 7.316 81.629 5.242 c h
83.18 0.594 m f
Q Q
showpage
%%Trailer
%%EOF
