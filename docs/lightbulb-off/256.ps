%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 17 0 175 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 17 0 175 192
192 192 cairo_set_page_size
%%EndPageSetup
q 17 0 158 192 rectclip
1 0 0 -1 0 192 cm q
0 g
26.762 52.199 m 24.922 58.641 23.996 65.305 24 72 c 24 92.293 32.398 110.641
 45.91 123.719 c 48.348 126.07 50.219 128.52 51.348 131.148 c 60.492 152.375
 l 61.441 154.574 63.605 156 66 156 c 62.688 156 60 158.688 60 162 c 60 
165.312 62.688 168 66 168 c 62.688 168 60 170.688 60 174 c 60 177.312 62.688
 180 66 180 c 68.688 185.363 l 70.719 189.43 74.871 191.996 79.414 192 c
 112.586 192 l 117.129 191.996 121.281 189.43 123.312 185.363 c 126 180 
l 129.312 180 132 177.312 132 174 c 132 170.688 129.312 168 126 168 c 129.312
 168 132 165.312 132 162 c 132 158.688 129.312 156 126 156 c 127.238 156
 128.445 155.621 129.457 154.906 c 118.535 144 l 69.961 144 l 62.375 126.395
 l 60.43 122.141 57.676 118.305 54.266 115.105 c 40.09 101.438 33.562 81.664
 36.805 62.242 c h
45.816 20.363 m 54.312 28.848 l 69.551 14.129 91.426 8.539 111.859 14.141
 c 132.293 19.742 148.258 35.707 153.859 56.141 c 159.461 76.574 153.871
 98.449 139.152 113.688 c 147.637 122.172 l 165.301 103.883 172.008 77.637
 165.285 53.113 c 158.562 28.594 139.406 9.438 114.887 2.715 c 90.363 -4.008
 64.117 2.699 45.828 20.363 c h
19.754 19.75 m 19.754 19.754 l 20.879 18.625 22.406 17.988 24 17.988 c 
25.594 17.988 27.121 18.625 28.246 19.754 c 172.246 163.754 l 174.594 166.098
 174.594 169.902 172.246 172.246 c 169.902 174.594 166.098 174.594 163.754
 172.246 c 19.754 28.246 l 18.625 27.121 17.988 25.594 17.988 24 c 17.988
 22.406 18.625 20.879 19.754 19.754 c f*
Q Q
showpage
%%Trailer
%%EOF
