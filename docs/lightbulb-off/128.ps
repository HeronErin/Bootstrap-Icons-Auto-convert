%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 8 0 88 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 8 0 88 96
96 96 cairo_set_page_size
%%EndPageSetup
q 8 0 80 96 rectclip
1 0 0 -1 0 96 cm q
0 g
13.379 26.102 m 12.461 29.32 11.996 32.652 12 36 c 12 46.145 16.199 55.32
 22.957 61.859 c 24.176 63.035 25.109 64.258 25.676 65.574 c 30.246 76.188
 l 30.719 77.289 31.801 78 33 78 c 31.344 78 30 79.344 30 81 c 30 82.656
 31.344 84 33 84 c 31.344 84 30 85.344 30 87 c 30 88.656 31.344 90 33 90
 c 34.344 92.684 l 35.359 94.715 37.438 96 39.707 96 c 56.293 96 l 58.562
 96 60.641 94.715 61.656 92.684 c 63 90 l 64.656 90 66 88.656 66 87 c 66
 85.344 64.656 84 63 84 c 64.656 84 66 82.656 66 81 c 66 79.344 64.656 78
 63 78 c 63.617 78 64.223 77.809 64.727 77.453 c 59.27 72 l 34.98 72 l 31.188
 63.199 l 30.215 61.07 28.84 59.152 27.133 57.551 c 20.047 50.719 16.781
 40.832 18.402 31.121 c h
22.906 10.184 m 27.152 14.426 l 27.156 14.426 l 34.777 7.062 45.711 4.27
 55.93 7.07 c 66.148 9.871 74.129 17.852 76.93 28.07 c 79.73 38.289 76.938
 49.223 69.574 56.844 c 73.816 61.086 l 82.648 51.941 86.004 38.816 82.641
 26.559 c 79.281 14.297 69.703 4.719 57.441 1.359 c 45.184 -2.004 32.059
 1.352 22.914 10.184 c h
9.875 9.879 m 9.875 9.875 l 10.438 9.312 11.203 8.996 12 8.996 c 12.797
 8.996 13.562 9.312 14.125 9.875 c 86.125 81.875 l 87.297 83.051 87.297 
84.949 86.125 86.125 c 84.949 87.297 83.051 87.297 81.875 86.125 c 9.875
 14.125 l 9.312 13.562 8.996 12.797 8.996 12 c 8.996 11.203 9.312 10.438
 9.875 9.875 c f*
Q Q
showpage
%%Trailer
%%EOF
