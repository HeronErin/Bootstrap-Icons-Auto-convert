%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 4 0 44 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 4 0 44 48
48 48 cairo_set_page_size
%%EndPageSetup
q 4 0 40 48 rectclip
1 0 0 -1 0 48 cm q
0 g
6.691 13.051 m 6.23 14.66 6 16.324 6 18 c 6 23.074 8.102 27.66 11.477 30.93
 c 12.086 31.52 12.555 32.129 12.836 32.785 c 15.121 38.094 l 15.359 38.645
 15.902 39 16.5 39 c 15.672 39 15 39.672 15 40.5 c 15 41.328 15.672 42 16.5
 42 c 15.672 42 15 42.672 15 43.5 c 15 44.328 15.672 45 16.5 45 c 17.172
 46.34 l 17.68 47.355 18.719 48 19.855 48 c 28.148 48 l 28.145 48 l 29.281
 48 30.32 47.355 30.828 46.34 c 31.5 45 l 32.328 45 33 44.328 33 43.5 c 
33 42.672 32.328 42 31.5 42 c 32.328 42 33 41.328 33 40.5 c 33 39.672 32.328
 39 31.5 39 c 31.809 39 32.109 38.906 32.363 38.727 c 29.633 36 l 17.488
 36 l 15.594 31.598 l 15.109 30.535 14.418 29.578 13.566 28.777 c 10.023
 25.359 8.391 20.418 9.199 15.562 c h
11.457 5.09 m 13.582 7.211 l 13.578 7.211 l 17.387 3.531 22.855 2.133 27.965
 3.535 c 33.074 4.938 37.062 8.926 38.465 14.035 c 39.867 19.145 38.469 
24.613 34.789 28.422 c 36.91 30.543 l 41.324 25.973 43 19.41 41.32 13.277
 c 39.641 7.148 34.852 2.359 28.723 0.68 c 22.59 -1 16.027 0.676 11.457 
5.09 c h
4.941 4.938 m 4.938 4.938 l 5.219 4.656 5.602 4.496 6 4.496 c 6.398 4.496
 6.781 4.656 7.062 4.938 c 43.062 40.938 l 43.648 41.523 43.648 42.477 43.062
 43.062 c 42.477 43.648 41.523 43.648 40.938 43.062 c 4.938 7.062 l 4.656
 6.781 4.496 6.398 4.496 6 c 4.496 5.602 4.656 5.219 4.938 4.938 c f*
Q Q
showpage
%%Trailer
%%EOF
