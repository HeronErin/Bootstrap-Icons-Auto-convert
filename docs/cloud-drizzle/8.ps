%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.559 4.508 m 1.656 4.543 1.711 4.648 1.68 4.746 c 1.492 5.309 l 1.406 
5.535 1.066 5.422 1.133 5.191 c 1.32 4.629 l 1.355 4.531 1.461 4.477 1.559
 4.508 c 3.809 4.508 m 3.906 4.543 3.961 4.648 3.93 4.746 c 3.742 5.309 
l 3.656 5.535 3.316 5.422 3.383 5.191 c 3.57 4.629 l 3.605 4.531 3.711 4.477
 3.809 4.508 c 2.496 5.07 m 2.594 5.105 2.648 5.211 2.617 5.309 c 2.43 5.871
 l 2.344 6.098 2.004 5.984 2.07 5.754 c 2.258 5.191 l 2.293 5.094 2.398 
5.039 2.496 5.07 c 4.746 5.07 m 4.844 5.105 4.898 5.211 4.867 5.309 c 4.68
 5.871 l 4.648 5.973 4.539 6.031 4.438 5.996 c 4.336 5.965 4.285 5.852 4.32
 5.754 c 4.508 5.191 l 4.543 5.094 4.648 5.039 4.746 5.07 c 5.027 1.883 
m 5.027 1.887 l 4.867 1.078 4.203 0.473 3.383 0.387 c 2.566 0.297 1.789 
0.754 1.465 1.508 c 1.105 1.469 0.746 1.574 0.469 1.809 c 0.195 2.039 0.023
 2.375 0.004 2.734 c -0.016 3.098 0.113 3.449 0.359 3.711 c 0.605 3.977 
0.953 4.125 1.312 4.125 c 4.875 4.125 l 5.469 4.125 5.957 3.668 6 3.074 
c 6.039 2.484 5.613 1.965 5.027 1.887 c 3.188 0.75 m 3.953 0.75 4.594 1.324
 4.68 2.082 c 4.688 2.18 4.77 2.25 4.867 2.25 c 4.875 2.25 l 5.289 2.25 
5.625 2.586 5.625 3 c 5.625 3.414 5.289 3.75 4.875 3.75 c 1.312 3.75 l 1.043
 3.75 0.789 3.633 0.609 3.434 c 0.434 3.23 0.352 2.965 0.383 2.699 c 0.414
 2.434 0.562 2.191 0.781 2.039 c 1.004 1.887 1.277 1.84 1.539 1.902 c 1.633
 1.926 1.73 1.871 1.762 1.781 c 1.965 1.164 2.539 0.75 3.188 0.75 c f
Q Q
showpage
%%Trailer
%%EOF
