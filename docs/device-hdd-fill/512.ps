%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
210.84 237.504 m 233.453 231.328 251.648 214.535 259.609 192.484 c 267.57
 170.434 264.305 145.891 250.852 126.691 c 237.398 107.492 215.441 96.043
 192 96 c 168.84 95.992 147.086 107.125 133.551 125.918 c 120.012 144.711
 116.344 168.867 123.688 190.832 c 131.035 212.801 148.496 229.891 170.617
 236.762 c 186.625 226.203 204.121 214.922 217.539 206.328 c 222.914 202.871
 229.133 209.09 225.699 214.488 c h
216 168 m 216 176.574 211.426 184.496 204 188.785 c 196.574 193.07 187.426
 193.07 180 188.785 c 172.574 184.496 168 176.574 168 168 c 168 159.426 
172.574 151.504 180 147.215 c 187.426 142.93 196.574 142.93 204 147.215 
c 211.426 151.504 216 159.426 216 168 c f
96 0 m 83.27 0 71.062 5.059 62.059 14.059 c 53.059 23.062 48 35.27 48 48
 c 48 336 l 48 348.73 53.059 360.938 62.059 369.941 c 71.062 378.941 83.27
 384 96 384 c 288 384 l 300.73 384 312.938 378.941 321.941 369.941 c 330.941
 360.938 336 348.73 336 336 c 336 48 l 336 35.27 330.941 23.062 321.941 
14.059 c 312.938 5.059 300.73 0 288 0 c h
312 36 m 312 42.629 306.629 48 300 48 c 293.371 48 288 42.629 288 36 c 
288 29.371 293.371 24 300 24 c 306.629 24 312 29.371 312 36 c 312 348 m 
312 354.629 306.629 360 300 360 c 293.371 360 288 354.629 288 348 c 288 
341.371 293.371 336 300 336 c 306.629 336 312 341.371 312 348 c 84 360 m
 77.371 360 72 354.629 72 348 c 72 341.371 77.371 336 84 336 c 90.629 336
 96 341.371 96 348 c 96 354.629 90.629 360 84 360 c 96 36 m 96 42.629 90.629
 48 84 48 c 77.371 48 72 42.629 72 36 c 72 29.371 77.371 24 84 24 c 90.629
 24 96 29.371 96 36 c 165.168 304.246 m 158.484 310.938 148.742 313.551 
139.605 311.105 c 130.473 308.66 123.336 301.531 120.887 292.398 c 118.438
 283.266 121.043 273.52 127.727 266.832 c 130.125 264.48 137.23 259.297 
146.805 252.719 c 146.809 252.719 l 119.082 237.934 100.348 210.516 96.648
 179.312 c 92.949 148.109 104.754 117.07 128.254 96.215 c 151.754 75.355
 183.977 67.32 214.52 74.695 c 245.062 82.07 270.062 103.93 281.453 133.215
 c 292.844 162.5 289.18 195.504 271.645 221.578 c 254.113 247.656 224.93
 263.5 193.512 264 c 180.625 283.512 169.031 300.359 165.168 304.246 c f
Q Q
showpage
%%Trailer
%%EOF
