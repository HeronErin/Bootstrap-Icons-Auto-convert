%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
843.359 950.016 m 910.629 931.648 968.949 889.504 1007.508 831.406 c 1046.07
 773.305 1062.246 703.195 1053.043 634.074 c 1043.84 564.953 1009.883 501.516
 957.465 455.531 c 905.047 409.543 837.73 384.129 768 384 c 699.094 383.973
 632.461 408.652 580.199 453.559 c 527.934 498.465 493.504 560.621 483.152
 628.742 c 472.805 696.867 487.223 766.445 523.793 824.848 c 560.363 883.246
 616.66 926.602 682.465 947.039 c 746.496 904.801 816.48 859.68 870.145 
825.312 c 891.648 811.488 916.512 836.352 902.785 857.953 c h
864 672 m 864 706.297 845.703 737.988 816 755.137 c 786.297 772.289 749.703
 772.289 720 755.137 c 690.297 737.988 672 706.297 672 672 c 672 637.703
 690.297 606.012 720 588.863 c 749.703 571.711 786.297 571.711 816 588.863
 c 845.703 606.012 864 637.703 864 672 c f
384 0 m 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242 192 141.078
 192 192 c 192 1344 l 192 1377.703 200.871 1410.812 217.723 1440 c 234.574
 1469.188 258.812 1493.426 288 1510.277 c 317.188 1527.129 350.297 1536 
384 1536 c 1152 1536 l 1185.703 1536 1218.812 1527.129 1248 1510.277 c 1277.188
 1493.426 1301.426 1469.188 1318.277 1440 c 1335.129 1410.812 1344 1377.703
 1344 1344 c 1344 192 l 1344 158.297 1335.129 125.188 1318.277 96 c 1301.426
 66.812 1277.188 42.574 1248 25.723 c 1218.812 8.871 1185.703 0 1152 0 c
 h
1248 144 m 1248 161.148 1238.852 176.996 1224 185.57 c 1209.148 194.145
 1190.852 194.145 1176 185.57 c 1161.148 176.996 1152 161.148 1152 144 c
 1152 126.852 1161.148 111.004 1176 102.43 c 1190.852 93.855 1209.148 93.855
 1224 102.43 c 1238.852 111.004 1248 126.852 1248 144 c 1248 1392 m 1248
 1409.148 1238.852 1424.996 1224 1433.57 c 1209.148 1442.145 1190.852 1442.145
 1176 1433.57 c 1161.148 1424.996 1152 1409.148 1152 1392 c 1152 1374.852
 1161.148 1359.004 1176 1350.43 c 1190.852 1341.855 1209.148 1341.855 1224
 1350.43 c 1238.852 1359.004 1248 1374.852 1248 1392 c 336 1440 m 318.852
 1440 303.004 1430.852 294.43 1416 c 285.855 1401.148 285.855 1382.852 294.43
 1368 c 303.004 1353.148 318.852 1344 336 1344 c 353.148 1344 368.996 1353.148
 377.57 1368 c 386.145 1382.852 386.145 1401.148 377.57 1416 c 368.996 1430.852
 353.148 1440 336 1440 c 384 144 m 384 161.148 374.852 176.996 360 185.57
 c 345.148 194.145 326.852 194.145 312 185.57 c 297.148 176.996 288 161.148
 288 144 c 288 126.852 297.148 111.004 312 102.43 c 326.852 93.855 345.148
 93.855 360 102.43 c 374.852 111.004 384 126.852 384 144 c 660.672 1216.992
 m 633.938 1243.742 594.961 1254.199 558.426 1244.426 c 521.891 1234.648
 493.348 1206.121 483.547 1169.594 c 473.746 1133.062 484.176 1094.078 510.91
 1067.328 c 520.512 1057.922 548.926 1037.184 587.23 1010.879 c 504.77 966.906
 441.176 894.367 408.367 806.859 c 375.555 719.355 375.785 622.887 409.008
 535.535 c 442.23 448.188 506.168 375.949 588.836 332.367 c 671.508 288.781
 767.234 276.84 858.074 298.781 c 948.918 320.723 1028.641 375.039 1082.305
 451.551 c 1135.969 528.062 1159.887 621.516 1149.582 714.402 c 1139.273
 807.285 1095.445 893.223 1026.316 956.109 c 957.184 1018.992 867.492 1054.508
 774.047 1056 c 722.496 1134.047 676.125 1201.441 660.672 1216.992 c f
Q Q
showpage
%%Trailer
%%EOF
