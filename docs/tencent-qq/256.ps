%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 162 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 162 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 162 192 rectclip
1 0 0 -1 0 192 cm q
0 g
72.574 39.875 m 72.84 43.199 71.016 46.152 68.52 46.477 c 66 46.789 63.754
 44.363 63.492 41.039 c 63.227 37.715 65.051 34.762 67.547 34.438 c 70.066
 34.125 72.312 36.551 72.586 39.875 c h
99.754 36.996 m 92.52 35.242 89.027 40.066 88.523 40.992 c 88.199 41.566
 88.426 42.395 88.969 42.793 c 89.508 43.215 90.074 43.094 90.398 42.758
 c 94.73 38.078 99.41 40.695 100.348 41.211 c 100.48 41.297 l 101.117 41.586
 102.246 41.633 102.797 40.121 c 103.074 39.363 103 38.801 102.727 38.418
 c 102.535 38.141 101.66 37.457 99.762 37.004 c f
140.723 80.629 m 140.723 80.363 140.844 76.129 140.844 73.945 c 140.844
 37.105 123.445 0.074 80.664 0.074 c 37.883 0.07 20.496 37.105 20.496 73.945
 c 20.496 76.129 20.617 80.367 20.617 80.629 c 11.977 102.168 l 9.656 108.133
 7.52 114.168 5.566 120.266 c -2.594 146.508 0.047 157.383 2.062 157.621
 c 6.383 158.148 18.875 137.855 18.875 137.855 c 18.875 149.602 24.922 164.926
 38.004 176.004 c 33.109 177.516 27.121 179.832 23.27 182.676 c 19.789 185.23
 20.234 187.836 20.859 188.891 c 23.594 193.523 67.898 191.844 80.68 190.402
 c 93.461 191.844 137.75 193.523 140.488 188.891 c 141.113 187.836 141.543
 185.23 138.09 182.676 c 134.227 179.832 128.227 177.516 123.328 175.992
 c 136.406 164.93 142.457 149.594 142.457 137.855 c 142.457 137.855 154.949
 158.137 159.27 157.621 c 161.285 157.383 163.926 146.508 155.766 120.266
 c 155.762 120.266 l 153.809 114.168 151.672 108.133 149.352 102.168 c 140.711
 80.629 l h
117.277 66.359 m 117.441 66.738 117.398 67.172 117.168 67.512 c 115.859
 69.418 98.52 78.828 80.773 78.828 c 80.57 78.828 l 62.809 78.828 45.469
 69.422 44.164 67.512 c 44.16 67.512 l 44.023 67.316 43.949 67.09 43.945
 66.852 c 43.945 66.676 43.984 66.516 44.066 66.371 c 45.625 62.926 61.227
 59.098 80.57 59.098 c 80.773 59.098 l 100.105 59.098 115.719 62.926 117.277
 66.359 c 65.438 54.492 m 59.641 54.758 54.684 48.145 54.375 39.746 c 54.062
 31.348 58.504 24.312 64.312 24.051 c 70.109 23.785 75.066 30.398 75.375
 38.812 c 75.699 47.211 71.246 54.246 65.449 54.496 c h
95.895 54.492 m 90.086 54.227 85.648 47.207 85.957 38.797 c 86.281 30.398
 91.238 23.797 97.031 24.035 c 102.828 24.312 107.266 31.332 106.957 39.742
 c 106.645 48.141 101.688 54.754 95.895 54.504 c h
35.137 107.879 m 37.695 108.383 40.254 108.852 42.805 109.281 c 42.805 
137.312 l 42.805 137.312 56.051 139.977 69.324 138.129 c 69.324 112.355 
l 73.246 112.57 76.992 112.664 80.566 112.633 c 80.77 112.633 l 94.172 112.789
 110.457 111 126.203 107.879 c 127.367 115.344 128.016 124.512 127.367 135.285
 c 125.613 164.684 108.168 183.164 81.215 183.43 c 80.121 183.43 l 53.18
 183.152 35.723 164.688 33.969 135.297 c 33.32 124.496 33.969 115.34 35.133
 107.875 c f
Q Q
showpage
%%Trailer
%%EOF
