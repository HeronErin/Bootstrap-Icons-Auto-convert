%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 41 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 41 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 41 48 rectclip
1 0 0 -1 0 48 cm q
0 g
18.145 9.969 m 18.211 10.801 17.754 11.539 17.129 11.617 c 16.5 11.695 
15.938 11.09 15.871 10.258 c 15.805 9.426 16.262 8.688 16.887 8.609 c 17.516
 8.531 18.078 9.137 18.148 9.969 c h
24.941 9.25 m 23.133 8.812 22.258 10.02 22.133 10.25 c 22.051 10.395 22.109
 10.602 22.242 10.699 c 22.379 10.805 22.52 10.773 22.598 10.691 c 23.68
 9.52 24.852 10.176 25.086 10.305 c 25.117 10.324 l 25.277 10.395 25.559
 10.41 25.695 10.031 c 25.766 9.844 25.746 9.703 25.676 9.605 c 25.629 9.535
 25.41 9.367 24.934 9.25 c f
35.18 20.156 m 35.18 20.09 35.211 19.031 35.211 18.484 c 35.211 9.273 30.859
 0.016 20.164 0.016 c 9.473 0.02 5.125 9.277 5.125 18.484 c 5.125 19.031
 5.156 20.09 5.156 20.156 c 2.996 25.543 l 2.992 25.543 l 2.414 27.035 1.879
 28.543 1.391 30.066 c -0.648 36.629 0.012 39.344 0.516 39.406 c 1.594 39.539
 4.719 34.465 4.719 34.465 c 4.719 37.402 6.23 41.234 9.5 44 c 8.277 44.379
 6.777 44.957 5.816 45.668 c 4.945 46.309 5.059 46.957 5.215 47.223 c 5.898
 48.379 16.977 47.961 20.168 47.602 c 23.363 47.961 34.438 48.383 35.121
 47.223 c 35.277 46.957 35.387 46.309 34.52 45.668 c 33.555 44.957 32.055
 44.379 30.828 43.996 c 34.098 41.23 35.609 37.395 35.609 34.461 c 35.609
 34.461 38.73 39.531 39.812 39.402 c 40.316 39.344 40.977 36.625 38.938 
30.062 c 38.941 30.066 l 38.453 28.543 37.918 27.035 37.34 25.543 c h
29.32 16.59 m 29.359 16.684 29.352 16.793 29.293 16.879 c 28.965 17.355
 24.633 19.707 20.195 19.707 c 20.145 19.707 l 15.703 19.707 11.371 17.355
 11.043 16.879 c 11.039 16.879 l 11.008 16.828 10.988 16.773 10.984 16.715
 c 10.984 16.672 10.996 16.629 11.016 16.594 c 11.406 15.734 15.305 14.777
 20.141 14.777 c 20.191 14.777 l 25.023 14.777 28.926 15.734 29.316 16.594
 c 16.355 13.625 m 14.906 13.691 13.668 12.039 13.59 9.938 c 13.512 7.836
 14.621 6.078 16.074 6.012 c 17.523 5.945 18.762 7.598 18.84 9.703 c 18.922
 11.805 17.809 13.562 16.359 13.625 c h
23.969 13.625 m 22.516 13.559 21.406 11.805 21.484 9.699 c 21.566 7.598
 22.805 5.949 24.254 6.008 c 25.703 6.078 26.812 7.832 26.734 9.934 c 26.656
 12.035 25.418 13.688 23.969 13.625 c h
8.785 26.969 m 9.426 27.094 10.062 27.211 10.703 27.32 c 10.703 34.328 
l 10.703 34.328 14.016 34.992 17.332 34.531 c 17.332 28.09 l 18.312 28.145
 19.25 28.168 20.145 28.16 c 20.195 28.16 l 23.547 28.199 27.617 27.754 
31.555 26.973 c 31.844 28.84 32.008 31.129 31.844 33.824 c 31.406 41.176
 27.043 45.793 20.305 45.859 c 20.031 45.859 l 13.297 45.789 8.93 41.172
 8.492 33.828 c 8.332 31.129 8.492 28.84 8.781 26.973 c f
Q Q
showpage
%%Trailer
%%EOF
