%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 81 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 81 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 81 96 rectclip
1 0 0 -1 0 96 cm q
0 g
36.289 19.938 m 36.422 21.598 35.508 23.074 34.262 23.238 c 33 23.395 31.879
 22.184 31.746 20.52 c 31.613 18.859 32.527 17.383 33.773 17.219 c 35.035
 17.062 36.156 18.273 36.293 19.938 c h
49.879 18.496 m 46.262 17.621 44.516 20.031 44.262 20.492 c 44.102 20.781
 44.215 21.195 44.484 21.391 c 44.754 21.602 45.035 21.539 45.199 21.371
 c 47.363 19.031 49.707 20.34 50.172 20.598 c 50.238 20.641 l 50.555 20.785
 51.121 20.809 51.395 20.051 c 51.531 19.672 51.496 19.391 51.359 19.199
 c 51.262 19.062 50.824 18.719 49.879 18.492 c f
70.363 40.312 m 70.363 40.18 70.422 38.062 70.422 36.969 c 70.422 18.547
 61.723 0.031 40.332 0.031 c 18.941 0.035 10.246 18.551 10.246 36.973 c 
10.246 38.066 10.305 40.184 10.305 40.316 c 5.984 51.086 l 5.988 51.086 
l 4.828 54.066 3.758 57.082 2.785 60.133 c -1.293 73.254 0.023 78.691 1.031
 78.812 c 3.191 79.078 9.438 68.93 9.438 68.93 c 9.438 74.805 12.461 82.465
 19 88.004 c 16.551 88.762 13.559 89.918 11.633 91.34 c 9.895 92.617 10.113
 93.918 10.426 94.449 c 11.793 96.766 33.945 95.926 40.336 95.207 c 46.727
 95.926 68.871 96.766 70.238 94.449 c 70.551 93.922 70.766 92.621 69.039
 91.34 c 67.105 89.918 64.105 88.762 61.66 87.996 c 68.199 82.465 71.223
 74.797 71.223 68.93 c 71.223 68.93 77.469 79.07 79.629 78.812 c 80.637 
78.691 81.957 73.258 77.875 60.133 c 77.879 60.133 l 76.906 57.082 75.836
 54.066 74.676 51.086 c 70.355 40.316 l h
58.637 33.18 m 58.719 33.367 58.699 33.586 58.586 33.758 c 57.934 34.711
 49.262 39.414 40.387 39.414 c 40.285 39.414 l 31.406 39.414 22.734 34.711
 22.082 33.758 c 22.078 33.758 l 22.012 33.66 21.977 33.543 21.973 33.426
 c 21.973 33.336 21.992 33.258 22.031 33.188 c 22.812 31.465 30.609 29.551
 40.285 29.551 c 40.387 29.551 l 50.051 29.551 57.859 31.465 58.641 33.18
 c 32.719 27.246 m 29.82 27.379 27.344 24.07 27.188 19.871 c 27.031 15.672
 29.25 12.156 32.156 12.023 c 35.055 11.891 37.531 15.199 37.688 19.402 
c 37.848 23.602 35.625 27.117 32.727 27.246 c h
47.945 27.246 m 45.043 27.113 42.82 23.605 42.977 19.398 c 43.137 15.199
 45.617 11.898 48.516 12.02 c 51.414 12.156 53.633 15.668 53.477 19.875 
c 53.32 24.074 50.844 27.383 47.945 27.254 c h
17.566 53.941 m 18.848 54.195 20.125 54.426 21.402 54.645 c 21.402 68.66
 l 21.402 68.66 28.027 69.992 34.664 69.066 c 34.66 56.18 l 36.621 56.289
 38.496 56.332 40.281 56.316 c 40.383 56.316 l 47.086 56.395 55.227 55.5
 63.098 53.941 c 63.68 57.672 64.004 62.258 63.68 67.645 c 62.805 82.344
 54.078 91.586 40.605 91.715 c 40.059 91.715 l 26.59 91.578 17.859 82.344
 16.984 67.648 c 16.66 62.25 16.984 57.672 17.566 53.938 c f
Q Q
showpage
%%Trailer
%%EOF
