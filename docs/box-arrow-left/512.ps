%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
144 300 m 144 303.184 145.266 306.234 147.516 308.484 c 149.766 310.734
 152.816 312 156 312 c 348 312 l 351.184 312 354.234 310.734 356.484 308.484
 c 358.734 306.234 360 303.184 360 300 c 360 84 l 360 80.816 358.734 77.766
 356.484 75.516 c 354.234 73.266 351.184 72 348 72 c 156 72 l 149.371 72
 144 77.371 144 84 c 144 132 l 144 138.629 138.629 144 132 144 c 125.371
 144 120 138.629 120 132 c 120 84 l 120 74.453 123.793 65.297 130.543 58.543
 c 137.297 51.793 146.453 48 156 48 c 348 48 l 357.547 48 366.703 51.793
 373.457 58.543 c 380.207 65.297 384 74.453 384 84 c 384 300 l 384 309.547
 380.207 318.703 373.457 325.457 c 366.703 332.207 357.547 336 348 336 c
 156 336 l 146.453 336 137.297 332.207 130.543 325.457 c 123.793 318.703
 120 309.547 120 300 c 120 252 l 120 245.371 125.371 240 132 240 c 138.629
 240 144 245.371 144 252 c h
144 300 m f*
3.504 200.496 m 1.246 198.246 -0.02 195.188 -0.02 192 c -0.02 188.812 1.246
 185.754 3.504 183.504 c 75.504 111.504 l 80.195 106.812 87.805 106.812 
92.496 111.504 c 97.188 116.195 97.188 123.805 92.496 128.496 c 40.969 180
 l 252 180 l 258.629 180 264 185.371 264 192 c 264 198.629 258.629 204 252
 204 c 40.969 204 l 92.496 255.504 l 97.188 260.195 97.188 267.805 92.496
 272.496 c 87.805 277.188 80.195 277.188 75.504 272.496 c h
3.504 200.496 m f*
Q Q
showpage
%%Trailer
%%EOF
