%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
108.047 216 m 120.91 216 132.793 209.137 139.227 198 c 145.656 186.863 
145.656 173.137 139.227 162 c 132.793 150.863 120.91 144 108.047 144 c 95.188
 144 83.301 150.863 76.871 162 c 70.441 173.137 70.441 186.863 76.871 198
 c 83.301 209.137 95.188 216 108.047 216 c f
336.047 312 m 336.047 324.73 330.992 336.938 321.988 345.941 c 312.988 
354.941 300.777 360 288.047 360 c 48.047 360 l 35.316 360 23.109 354.941
 14.105 345.941 c 5.105 336.938 0.047 324.73 0.047 312 c 0.047 120 l 0.047
 107.277 5.098 95.078 14.09 86.074 c 23.082 77.074 35.277 72.012 48 72 c
 48 59.27 53.059 47.062 62.059 38.059 c 71.062 29.059 83.27 24 96 24 c 336
 24 l 348.73 24 360.938 29.059 369.941 38.059 c 378.941 47.062 384 59.27
 384 72 c 384 264 l 384 276.723 378.949 288.922 369.957 297.926 c 360.965
 306.926 348.77 311.988 336.047 312 c 336 48 m 96 48 l 89.637 48 83.531 
50.527 79.031 55.031 c 74.527 59.531 72 65.637 72 72 c 288.047 72 l 300.777
 72 312.988 77.059 321.988 86.059 c 330.992 95.062 336.047 107.27 336.047
 120 c 336.047 288 l 342.406 287.988 348.496 285.453 352.988 280.953 c 357.477
 276.453 360 270.355 360 264 c 360 72 l 360 65.637 357.473 59.531 352.969
 55.031 c 348.469 50.527 342.363 48 336 48 c 48.047 96 m 41.684 96 35.578
 98.527 31.078 103.031 c 26.578 107.531 24.047 113.637 24.047 120 c 24.047
 312 l 87.551 255.504 l 91.598 251.473 97.918 250.852 102.672 254.016 c 
166.512 296.566 l 255.551 207.527 l 259.203 203.875 264.781 202.965 269.398
 205.273 c 312.047 252 l 312.047 120 l 312.047 113.637 309.52 107.531 305.02
 103.031 c 300.52 98.527 294.414 96 288.047 96 c h
48.047 96 m f
Q Q
showpage
%%Trailer
%%EOF
