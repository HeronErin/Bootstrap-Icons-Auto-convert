%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 168 rectclip
1 0 0 -1 0 192 cm q
0 g
54.023 108 m 60.453 108 66.398 104.57 69.613 99 c 72.828 93.43 72.828 86.57
 69.613 81 c 66.398 75.43 60.453 72 54.023 72 c 47.594 72 41.652 75.43 38.434
 81 c 35.219 86.57 35.219 93.43 38.434 99 c 41.652 104.57 47.594 108 54.023
 108 c f
168.023 156 m 168.023 162.363 165.496 168.469 160.996 172.969 c 156.492
 177.473 150.391 180 144.023 180 c 24.023 180 l 17.66 180 11.555 177.473
 7.055 172.969 c 2.551 168.469 0.023 162.363 0.023 156 c 0.023 60 l 0.023
 53.641 2.551 47.539 7.047 43.039 c 11.539 38.539 17.641 36.008 24 36 c 
24 29.637 26.527 23.531 31.031 19.031 c 35.531 14.527 41.637 12 48 12 c 
168 12 l 174.363 12 180.469 14.527 184.969 19.031 c 189.473 23.531 192 29.637
 192 36 c 192 132 l 192 138.359 189.477 144.461 184.98 148.961 c 180.484
 153.461 174.387 155.992 168.023 156 c 168 24 m 48 24 l 41.371 24 36 29.371
 36 36 c 144.023 36 l 150.391 36 156.492 38.527 160.996 43.031 c 165.496
 47.531 168.023 53.637 168.023 60 c 168.023 144 l 174.641 143.988 180 138.617
 180 132 c 180 36 l 180 32.816 178.734 29.766 176.484 27.516 c 174.234 25.266
 171.184 24 168 24 c 24.023 48 m 17.398 48 12.023 53.371 12.023 60 c 12.023
 156 l 43.777 127.754 l 45.797 125.738 48.961 125.426 51.336 127.008 c 83.258
 148.285 l 127.777 103.766 l 129.602 101.938 132.391 101.484 134.699 102.637
 c 156.023 126 l 156.023 60 l 156.023 56.816 154.758 53.766 152.508 51.516
 c 150.258 49.266 147.207 48 144.023 48 c h
24.023 48 m f
Q Q
showpage
%%Trailer
%%EOF
