%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
432.191 864 m 483.637 864 531.176 836.555 556.898 792 c 582.621 747.445
 582.621 692.555 556.898 648 c 531.176 603.445 483.637 576 432.191 576 c
 380.746 576 333.207 603.445 307.484 648 c 281.762 692.555 281.762 747.445
 307.484 792 c 333.207 836.555 380.746 864 432.191 864 c f
1344.191 1248 m 1344.191 1281.703 1335.32 1314.812 1318.469 1344 c 1301.617
 1373.188 1277.379 1397.426 1248.191 1414.277 c 1219.004 1431.129 1185.895
 1440 1152.191 1440 c 192.191 1440 l 141.27 1440 92.434 1419.773 56.426 
1383.766 c 20.422 1347.758 0.191 1298.922 0.191 1248 c 0.191 480 l 0.191
 429.113 20.395 380.305 56.359 344.305 c 92.324 308.301 141.113 288.051 
192 288 c 192 237.078 212.227 188.242 248.234 152.234 c 284.242 116.227 
333.078 96 384 96 c 1344 96 l 1377.703 96 1410.812 104.871 1440 121.723 
c 1469.188 138.574 1493.426 162.812 1510.277 192 c 1527.129 221.188 1536
 254.297 1536 288 c 1536 1056 l 1536 1106.887 1515.797 1155.695 1479.832
 1191.695 c 1443.867 1227.699 1395.082 1247.949 1344.191 1248 c 1344 192
 m 384 192 l 358.539 192 334.121 202.113 316.117 220.117 c 298.113 238.121
 288 262.539 288 288 c 1152.191 288 l 1185.895 288 1219.004 296.871 1248.191
 313.723 c 1277.379 330.574 1301.617 354.812 1318.469 384 c 1335.32 413.188
 1344.191 446.297 1344.191 480 c 1344.191 1152 l 1369.621 1151.949 1393.988
 1141.812 1411.949 1123.816 c 1429.914 1105.816 1440 1081.426 1440 1056 
c 1440 288 l 1440 262.539 1429.887 238.121 1411.883 220.117 c 1393.879 202.113
 1369.461 192 1344 192 c 192.191 384 m 166.73 384 142.312 394.113 124.309
 412.117 c 106.305 430.121 96.191 454.539 96.191 480 c 96.191 1248 l 350.207
 1022.016 l 358.055 1014.199 368.363 1009.336 379.387 1008.25 c 390.41 1007.164
 401.469 1009.926 410.688 1016.062 c 666.047 1186.27 l 1022.207 830.109 
l 1022.207 830.113 l 1029.328 822.988 1038.508 818.281 1048.449 816.66 c
 1058.391 815.043 1068.586 816.59 1077.602 821.09 c 1248.195 1008 l 1248.191
 480 l 1248.191 454.539 1238.078 430.121 1220.074 412.117 c 1202.07 394.113
 1177.652 384 1152.191 384 c h
192.191 384 m f
Q Q
showpage
%%Trailer
%%EOF
