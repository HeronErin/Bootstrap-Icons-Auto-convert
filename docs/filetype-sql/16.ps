%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 9 11.25 l 9.199 11.25 9.391 11.172 9.531 11.031 
c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
0 11.129 m 0.008 11.371 0.117 11.594 0.301 11.746 c 0.398 11.828 0.516 
11.891 0.66 11.934 c 0.875 12 0.969 12 1.16 12 c 1.414 12 1.629 11.961 1.805
 11.883 c 1.98 11.805 2.117 11.691 2.211 11.555 c 2.207 11.559 l 2.301 11.41
 2.352 11.238 2.348 11.066 c 2.348 10.898 2.312 10.758 2.246 10.645 c 2.176
 10.531 2.078 10.441 1.965 10.379 c 1.832 10.305 1.688 10.25 1.539 10.219
 c 1.074 10.109 l 1.074 10.113 l 0.965 10.09 0.859 10.047 0.77 9.98 c 0.703
 9.926 0.664 9.844 0.664 9.754 c 0.664 9.637 0.711 9.539 0.801 9.465 c 0.895
 9.391 1.023 9.352 1.184 9.352 c 1.289 9.352 1.383 9.367 1.461 9.402 c 1.465
 9.402 l 1.535 9.434 1.598 9.48 1.648 9.539 c 1.695 9.594 1.727 9.664 1.738
 9.734 c 2.301 9.734 l 2.289 9.582 2.238 9.434 2.152 9.309 c 2.055 9.176
 1.926 9.066 1.777 9 c 1.594 8.922 1.391 8.883 1.191 8.887 c 0.973 8.887
 0.777 8.926 0.609 9 c 0.441 9.074 0.309 9.18 0.215 9.316 c 0.121 9.453 
0.074 9.613 0.074 9.797 c 0.074 9.949 0.105 10.078 0.168 10.191 c 0.23 10.301
 0.316 10.395 0.43 10.465 c 0.543 10.535 0.68 10.59 0.836 10.625 c 1.301
 10.734 l 1.457 10.77 1.57 10.82 1.648 10.879 c 1.641 10.875 l 1.715 10.934
 1.758 11.023 1.754 11.121 c 1.754 11.203 1.734 11.277 1.691 11.34 c 1.691
 11.336 l 1.645 11.402 1.578 11.453 1.5 11.484 c 1.418 11.52 1.312 11.535
 1.191 11.535 c 1.102 11.535 1.023 11.523 0.953 11.504 c 0.949 11.504 l 
0.883 11.488 0.82 11.457 0.766 11.418 c 0.664 11.352 0.594 11.25 0.574 11.129
 c h
5.16 12.246 m 4.781 11.691 l 4.914 11.57 5.012 11.418 5.082 11.242 c 5.152
 11.062 5.184 10.863 5.184 10.637 c 5.184 10.262 l 5.184 9.984 5.133 9.742
 5.027 9.535 c 5.027 9.539 l 4.93 9.34 4.777 9.172 4.586 9.062 c 4.395 8.949
 4.164 8.895 3.898 8.895 c 3.637 8.895 3.406 8.949 3.215 9.062 c 3.023 9.176
 2.875 9.332 2.77 9.539 c 2.766 9.539 l 2.66 9.766 2.609 10.012 2.613 10.262
 c 2.613 10.637 l 2.613 10.914 2.664 11.156 2.766 11.359 c 2.871 11.562 
3.02 11.723 3.211 11.836 c 3.211 11.84 l 3.422 11.953 3.656 12.012 3.898
 12.004 c 4.051 12.008 4.203 11.98 4.348 11.93 c 4.566 12.246 l h
3.195 10.648 m 3.195 10.258 l 3.195 10.074 3.223 9.914 3.281 9.785 c 3.332
 9.664 3.418 9.562 3.527 9.488 c 3.637 9.418 3.766 9.383 3.898 9.383 c 4.043
 9.383 4.168 9.418 4.27 9.484 c 4.27 9.488 l 4.375 9.562 4.461 9.664 4.512
 9.785 c 4.57 9.914 4.598 10.074 4.598 10.258 c 4.598 10.648 l 4.598 10.77
 4.586 10.883 4.559 10.98 c 4.531 11.078 4.492 11.164 4.441 11.234 c 4.363
 11.129 l 4.285 11.02 l 3.734 11.02 l 4.074 11.508 l 4.074 11.512 l 4.012
 11.535 3.949 11.547 3.883 11.547 c 3.754 11.547 3.629 11.508 3.52 11.438
 c 3.41 11.359 3.328 11.254 3.277 11.133 c 3.219 10.98 3.191 10.816 3.195
 10.648 c 6.184 11.441 m 7.457 11.441 l 7.457 11.945 l 5.594 11.949 l 5.594
 8.949 l 6.188 8.949 l h
6.184 11.441 m f*
Q Q
showpage
%%Trailer
%%EOF
