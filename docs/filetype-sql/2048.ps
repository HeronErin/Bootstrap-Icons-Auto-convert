%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1152 1440 l 1177.461 1440 1201.879 1429.887 1219.883 1411.883
 c 1237.887 1393.879 1248 1369.461 1248 1344 c 1248 432 l 1056 432 l 1017.809
 432 981.184 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288
 c 912 96 l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113
 142.121 288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078
 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 
l h
0 1424.734 m 1.109 1455.324 15.094 1484.02 38.496 1503.742 c 50.91 1514.109
 66.207 1522.176 84.383 1527.934 c 111.648 1536.574 123.84 1536.668 148.223
 1536.668 c 180.672 1536.668 208.125 1531.613 230.59 1521.5 c 253.309 1511.324
 270.59 1497.242 282.43 1479.262 c 282.434 1479.266 l 294.539 1460.52 300.789
 1438.598 300.383 1416.289 c 300.383 1394.785 296.062 1376.863 287.422 1362.527
 c 287.426 1362.527 l 278.641 1348.141 266.227 1336.32 251.426 1328.258 
c 234.465 1318.836 216.18 1312.039 197.184 1308.098 c 137.566 1294.273 l
 123.512 1291.609 110.227 1285.836 98.688 1277.375 c 89.844 1270.508 84.754
 1259.867 84.961 1248.672 c 84.961 1233.695 90.848 1221.406 102.625 1211.809
 c 114.594 1202.082 131.008 1197.215 151.871 1197.215 c 165.566 1197.215
 177.406 1199.391 187.391 1203.742 c 196.598 1207.418 204.695 1213.402 210.91
 1221.121 c 216.82 1228.246 220.789 1236.777 222.434 1245.887 c 294.434 
1245.887 l 293.223 1226.355 286.609 1207.543 275.328 1191.551 c 263.23 1174.289
 246.629 1160.672 227.328 1152.191 c 203.766 1141.809 178.184 1136.824 152.449
 1137.602 c 124.289 1137.602 99.457 1142.402 77.953 1152 c 56.387 1161.535
 39.488 1175.008 27.266 1192.414 c 15.105 1209.887 9.027 1230.336 9.027 
1253.758 c 9.027 1273.086 12.965 1289.855 20.836 1304.062 c 28.707 1318.27
 39.941 1330.016 54.531 1339.293 c 69.188 1348.445 86.469 1355.262 106.371
 1359.742 c 165.699 1373.566 l 185.539 1378.238 200.324 1384.414 210.051
 1392.094 c 210.047 1392.098 l 219.727 1399.488 225.207 1411.125 224.734
 1423.297 c 224.734 1433.855 222.016 1443.137 216.574 1451.137 c 210.379
 1459.609 201.836 1466.086 192 1469.762 c 181.312 1474.242 168.098 1476.48
 152.352 1476.48 c 141.086 1476.48 130.848 1475.199 121.633 1472.641 c 113.121
 1470.352 105.066 1466.617 97.824 1461.602 c 84.922 1453.223 76.062 1439.879
 73.344 1424.734 c h
660.289 1567.68 m 611.617 1496.734 l 628.512 1481.184 641.344 1461.98 650.113
 1439.133 c 658.945 1416.223 663.359 1390.43 663.359 1361.758 c 663.359 
1313.66 l 663.359 1278.074 656.703 1247.133 643.391 1220.828 c 643.391 1220.832
 l 630.965 1195.359 611.293 1174.121 586.848 1159.777 c 562.336 1145.379
 532.992 1138.176 498.816 1138.176 c 465.09 1138.176 435.84 1145.375 411.074
 1159.777 c 386.5 1174.051 367.555 1194.402 354.242 1220.832 c 354.238 1220.832
 l 340.523 1249.816 333.785 1281.609 334.559 1313.664 c 334.559 1361.664
 l 334.559 1397.121 341.117 1428 354.238 1454.305 c 367.551 1480.543 386.496
 1500.898 411.07 1515.359 c 437.914 1530.113 468.195 1537.469 498.816 1536.672
 c 518.422 1536.762 537.898 1533.516 556.414 1527.07 c 584.637 1567.582 
l 660.285 1567.582 l h
409.152 1363.199 m 409.152 1313.086 l 409.152 1289.469 412.801 1269.309
 420.098 1252.605 c 420.098 1252.609 l 426.562 1237.109 437.402 1223.832
 451.297 1214.398 c 465.512 1205.461 482.023 1200.855 498.816 1201.152 c
 517.25 1201.152 533.09 1205.566 546.336 1214.398 c 560.227 1223.832 571.07
 1237.109 577.535 1252.609 c 584.895 1269.312 588.574 1289.473 588.574 1313.09
 c 588.574 1363.203 l 588.574 1378.945 586.879 1393.188 583.484 1405.922
 c 580.094 1418.465 575.133 1429.348 568.605 1438.562 c 558.43 1425.121 
l 548.352 1411.008 l 477.984 1411.008 l 521.281 1473.406 l 513.664 1476.625
 505.445 1478.164 497.184 1477.922 c 480.543 1477.98 464.262 1473.066 450.434
 1463.809 c 436.629 1454.152 425.953 1440.672 419.711 1425.023 c 412.227
 1405.293 408.641 1384.297 409.152 1363.199 c 791.809 1464.672 m 954.625
 1464.672 l 954.625 1529.375 l 715.871 1529.375 l 715.871 1145.473 l 791.711
 1145.473 l h
791.809 1464.672 m f*
Q Q
showpage
%%Trailer
%%EOF
