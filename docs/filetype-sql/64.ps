%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 36 45 l 36.797 45 37.559 44.684 38.121 44.121 c 38.684 
43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5 28.5 11.484 28.5
 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33 l 6 6 l 6 2.688 
8.688 0 12 0 c 28.5 0 l h
0 44.523 m 0.035 45.48 0.473 46.375 1.203 46.992 c 1.59 47.316 2.07 47.566
 2.637 47.75 c 3.488 48.02 3.871 48.023 4.633 48.023 c 5.648 48.023 6.504
 47.867 7.207 47.551 c 7.918 47.234 8.457 46.793 8.828 46.23 c 8.824 46.227
 l 9.203 45.641 9.398 44.957 9.387 44.258 c 9.387 43.586 9.25 43.027 8.98
 42.578 c 8.707 42.129 8.32 41.762 7.855 41.508 c 7.328 41.215 6.754 41 
6.16 40.879 c 4.297 40.445 l 4.301 40.445 l 3.859 40.363 3.445 40.184 3.086
 39.918 c 2.809 39.703 2.648 39.371 2.656 39.02 c 2.656 38.551 2.84 38.168
 3.207 37.867 c 3.582 37.562 4.094 37.41 4.746 37.41 c 5.176 37.41 5.543
 37.477 5.855 37.613 c 5.855 37.617 l 6.145 37.73 6.398 37.918 6.59 38.16
 c 6.777 38.383 6.898 38.648 6.949 38.934 c 9.199 38.934 l 9.164 38.324 
8.957 37.734 8.605 37.234 c 8.227 36.695 7.707 36.27 7.105 36.008 c 6.367
 35.68 5.566 35.527 4.766 35.551 c 3.887 35.551 3.109 35.699 2.438 36 c 
1.762 36.297 1.234 36.719 0.852 37.262 c 0.473 37.809 0.281 38.445 0.281
 39.18 c 0.281 39.785 0.402 40.309 0.648 40.75 c 0.895 41.195 1.246 41.562
 1.703 41.852 c 2.16 42.137 2.699 42.352 3.324 42.492 c 5.18 42.926 l 5.801
 43.07 6.262 43.266 6.566 43.504 c 6.562 43.504 l 6.867 43.734 7.039 44.098
 7.023 44.477 c 7.023 44.805 6.938 45.098 6.77 45.348 c 6.574 45.613 6.309
 45.816 6 45.93 c 5.664 46.07 5.254 46.141 4.762 46.141 c 4.41 46.141 4.09
 46.102 3.801 46.02 c 3.535 45.949 3.285 45.832 3.059 45.676 c 2.652 45.414
 2.375 44.996 2.293 44.523 c h
20.633 48.992 m 19.113 46.773 l 19.641 46.289 20.043 45.688 20.316 44.973
 c 20.594 44.258 20.73 43.449 20.73 42.555 c 20.73 41.051 l 20.73 39.938
 20.523 38.973 20.105 38.148 c 20.105 38.152 l 19.719 37.355 19.102 36.691
 18.34 36.242 c 17.574 35.793 16.656 35.566 15.59 35.566 c 14.535 35.566
 13.621 35.793 12.848 36.242 c 12.078 36.688 11.488 37.324 11.07 38.148 
c 11.07 38.152 l 10.641 39.059 10.43 40.051 10.453 41.051 c 10.453 42.551
 l 10.453 43.66 10.656 44.625 11.066 45.445 c 11.48 46.266 12.074 46.902
 12.844 47.352 c 12.848 47.355 l 13.684 47.816 14.633 48.047 15.59 48.02
 c 16.199 48.023 16.809 47.922 17.387 47.723 c 18.27 48.988 l 20.633 48.988
 l h
12.785 42.602 m 12.785 41.035 l 12.785 40.297 12.898 39.668 13.129 39.145
 c 13.328 38.66 13.668 38.246 14.102 37.949 c 14.547 37.672 15.062 37.527
 15.59 37.535 c 16.164 37.535 16.66 37.672 17.074 37.949 c 17.508 38.246
 17.848 38.66 18.047 39.145 c 18.277 39.668 18.391 40.297 18.391 41.035 
c 18.391 42.602 l 18.391 43.094 18.336 43.539 18.23 43.938 c 18.125 44.328
 17.969 44.668 17.766 44.957 c 17.449 44.535 l 17.133 44.094 l 14.934 44.094
 l 16.285 46.043 l 16.289 46.043 l 16.051 46.145 15.797 46.191 15.535 46.184
 c 15.016 46.188 14.508 46.035 14.074 45.742 c 13.645 45.441 13.312 45.02
 13.117 44.531 c 12.883 43.914 12.77 43.258 12.785 42.602 c 24.742 45.773
 m 29.832 45.773 l 29.832 47.797 l 22.371 47.793 l 22.371 35.797 l 24.742
 35.797 l h
24.742 45.773 m f*
Q Q
showpage
%%Trailer
%%EOF
