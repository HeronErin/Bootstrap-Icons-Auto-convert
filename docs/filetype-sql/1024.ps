%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 576 720 l 588.73 720 600.938 714.941 609.941
 705.941 c 618.941 696.938 624 684.73 624 672 c 624 216 l 528 216 l 508.906
 216 490.59 208.414 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c
 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062
 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 
124.117 28.117 c 142.121 10.113 166.539 0 192 0 c 456 0 l h
0 712.367 m 0.555 727.66 7.547 742.008 19.246 751.871 c 25.453 757.055 
33.102 761.086 42.191 763.969 c 55.824 768.289 61.918 768.336 74.113 768.336
 c 90.336 768.336 104.066 765.809 115.297 760.75 c 126.656 755.66 135.297
 748.621 141.219 739.629 c 141.215 739.633 l 147.27 730.262 150.395 719.297
 150.191 708.145 c 150.191 697.391 148.031 688.434 143.711 681.266 c 139.32
 674.07 133.113 668.16 125.711 664.129 c 117.234 659.418 108.09 656.02 98.594
 654.047 c 68.785 647.137 l 61.754 645.805 55.113 642.918 49.344 638.688
 c 44.922 635.254 42.379 629.934 42.48 624.336 c 42.48 616.848 45.426 610.703
 51.312 605.902 c 57.297 601.039 65.504 598.605 75.938 598.605 c 82.785 
598.605 88.707 599.695 93.699 601.871 c 93.695 601.871 l 98.297 603.707 
102.348 606.699 105.457 610.559 c 108.41 614.125 110.395 618.391 111.215
 622.945 c 147.215 622.945 l 146.609 613.18 143.305 603.773 137.664 595.777
 c 131.617 587.145 123.312 580.336 113.664 576.098 c 101.883 570.906 89.09
 568.414 76.223 568.801 c 62.145 568.801 49.727 571.199 38.977 576 c 28.191
 580.77 19.746 587.504 13.633 596.207 c 7.555 604.941 4.512 615.168 4.512
 626.879 c 4.512 636.543 6.48 644.926 10.414 652.031 c 14.352 659.137 19.965
 665.008 27.262 669.648 c 34.59 674.223 43.23 677.633 53.184 679.871 c 82.848
 686.781 l 92.77 689.117 100.16 692.207 105.023 696.047 c 109.863 699.742
 112.602 705.562 112.367 711.648 c 112.367 716.93 111.008 721.57 108.289
 725.57 c 108.289 725.566 l 105.188 729.805 100.918 733.043 96 734.879 c
 90.656 737.117 84.047 738.238 76.176 738.238 c 70.543 738.238 65.422 737.598
 60.816 736.316 c 60.816 736.32 l 56.562 735.176 52.535 733.309 48.91 730.801
 c 42.461 726.609 38.031 719.938 36.672 712.367 c h
330.145 783.84 m 305.809 748.367 l 314.258 740.59 320.672 730.992 325.055
 719.566 c 329.469 708.109 331.68 695.215 331.68 680.879 c 331.68 656.832
 l 331.68 639.039 328.352 623.566 321.695 610.418 c 321.695 610.414 l 315.48
 597.68 305.648 587.059 293.426 579.887 c 281.168 572.688 266.496 569.086
 249.41 569.086 c 232.547 569.086 217.922 572.688 205.539 579.887 c 193.25
 587.023 183.777 597.199 177.125 610.414 c 177.121 610.414 l 170.262 624.906
 166.895 640.805 167.281 656.832 c 167.281 680.832 l 167.281 698.559 170.562
 714 177.121 727.152 c 183.777 740.273 193.25 750.449 205.535 757.68 c 218.957
 765.059 234.098 768.734 249.406 768.336 c 259.211 768.383 268.949 766.758
 278.207 763.535 c 292.32 783.793 l 330.145 783.793 l h
204.574 681.602 m 204.574 656.547 l 204.574 644.738 206.398 634.66 210.047
 626.309 c 210.047 626.305 l 213.281 618.555 218.703 611.918 225.648 607.199
 c 232.758 602.73 241.012 600.43 249.406 600.574 c 258.621 600.574 266.543
 602.781 273.168 607.199 c 280.113 611.918 285.535 618.555 288.77 626.305
 c 292.449 634.656 294.289 644.738 294.289 656.543 c 294.289 681.598 l 294.289
 689.469 293.441 696.59 291.746 702.957 c 290.051 709.23 287.57 714.668 
284.305 719.277 c 279.215 712.559 l 274.176 705.504 l 238.992 705.504 l 
260.641 736.703 l 256.832 738.312 252.723 739.082 248.594 738.961 c 240.27
 738.988 232.133 736.531 225.215 731.902 c 218.316 727.074 212.977 720.336
 209.855 712.512 c 206.113 702.645 204.32 692.148 204.574 681.602 c 395.902
 732.336 m 477.309 732.336 l 477.309 764.688 l 357.938 764.688 l 357.938
 572.734 l 395.859 572.734 l h
395.902 732.336 m f*
Q Q
showpage
%%Trailer
%%EOF
