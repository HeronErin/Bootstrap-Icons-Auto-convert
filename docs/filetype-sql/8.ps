%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766 5.516 c 4.836
 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 l 3.812 1.688 
3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125 0.543
 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086 0 
1.5 0 c 3.562 0 l h
0 5.566 m 0.004 5.684 0.059 5.797 0.148 5.875 c 0.195 5.914 0.258 5.945
 0.328 5.969 c 0.434 6.004 0.48 6.004 0.578 6.004 c 0.703 6.004 0.812 5.984
 0.898 5.945 c 0.988 5.906 1.055 5.852 1.102 5.781 c 1.102 5.777 l 1.152
 5.707 1.176 5.621 1.172 5.531 c 1.172 5.445 1.156 5.379 1.121 5.32 c 1.121
 5.324 l 1.09 5.266 1.039 5.219 0.98 5.188 c 0.914 5.152 0.844 5.125 0.77
 5.109 c 0.535 5.055 l 0.539 5.055 l 0.484 5.047 0.43 5.023 0.387 4.988 
c 0.352 4.965 0.332 4.922 0.332 4.879 c 0.332 4.82 0.355 4.773 0.402 4.734
 c 0.449 4.695 0.512 4.676 0.594 4.676 c 0.648 4.676 0.695 4.684 0.734 4.703
 c 0.73 4.703 l 0.77 4.715 0.801 4.738 0.824 4.77 c 0.848 4.797 0.863 4.832
 0.867 4.867 c 1.148 4.867 l 1.145 4.789 1.121 4.719 1.074 4.656 c 1.027
 4.586 0.965 4.535 0.887 4.5 c 0.797 4.461 0.695 4.441 0.594 4.445 c 0.484
 4.445 0.387 4.465 0.305 4.5 c 0.219 4.539 0.156 4.59 0.105 4.656 c 0.059
 4.723 0.035 4.805 0.035 4.895 c 0.035 4.969 0.051 5.035 0.082 5.09 c 0.113
 5.145 0.156 5.191 0.215 5.227 c 0.273 5.262 0.34 5.289 0.418 5.305 c 0.648
 5.359 l 0.727 5.379 0.785 5.402 0.82 5.434 c 0.82 5.438 l 0.859 5.465 0.879
 5.512 0.879 5.559 c 0.879 5.602 0.867 5.637 0.848 5.668 c 0.82 5.703 0.789
 5.727 0.75 5.742 c 0.707 5.758 0.656 5.77 0.594 5.77 c 0.551 5.77 0.508
 5.766 0.473 5.754 c 0.477 5.754 l 0.441 5.742 0.41 5.73 0.383 5.711 c 0.332
 5.676 0.297 5.625 0.285 5.566 c h
2.578 6.125 m 2.387 5.848 l 2.453 5.785 2.504 5.711 2.535 5.621 c 2.57 
5.531 2.586 5.43 2.586 5.32 c 2.586 5.133 l 2.586 4.992 2.559 4.871 2.508
 4.77 c 2.512 4.77 l 2.465 4.668 2.387 4.586 2.293 4.531 c 2.195 4.477 2.082
 4.445 1.949 4.445 c 1.816 4.445 1.703 4.473 1.605 4.531 c 1.508 4.586 1.434
 4.668 1.383 4.77 c 1.332 4.883 1.305 5.008 1.309 5.133 c 1.309 5.32 l 1.309
 5.457 1.336 5.578 1.387 5.684 c 1.438 5.785 1.512 5.867 1.609 5.922 c 1.605
 5.918 l 1.711 5.977 1.828 6.004 1.949 6.004 c 2.023 6.004 2.102 5.992 2.172
 5.965 c 2.281 6.125 l h
1.598 5.324 m 1.598 5.129 l 1.598 5.035 1.613 4.957 1.641 4.895 c 1.668
 4.832 1.707 4.781 1.762 4.742 c 1.82 4.707 1.883 4.691 1.949 4.691 c 2.02
 4.691 2.082 4.707 2.137 4.742 c 2.133 4.742 l 2.188 4.781 2.23 4.832 2.258
 4.895 c 2.285 4.961 2.301 5.039 2.301 5.129 c 2.301 5.324 l 2.301 5.387
 2.293 5.441 2.281 5.492 c 2.27 5.543 2.25 5.582 2.223 5.621 c 2.184 5.57
 l 2.145 5.516 l 1.871 5.516 l 2.039 5.758 l 2.035 5.754 l 2.008 5.77 1.973
 5.773 1.941 5.773 c 1.879 5.773 1.812 5.754 1.758 5.719 c 1.707 5.68 1.664
 5.629 1.641 5.566 c 1.609 5.488 1.598 5.406 1.598 5.324 c 3.094 5.719 m
 3.73 5.719 l 3.73 5.973 l 2.797 5.973 l 2.797 4.473 l 3.094 4.473 l h
3.094 5.719 m f*
Q Q
showpage
%%Trailer
%%EOF
