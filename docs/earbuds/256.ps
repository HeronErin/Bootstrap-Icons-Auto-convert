%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 11 192 169
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 11 192 169
192 192 cairo_set_page_size
%%EndPageSetup
q 0 11 192 158 rectclip
1 0 0 -1 0 192 cm q
0 g
81.898 49.656 m 89.051 75.348 77.578 92.773 53.23 99.059 c 45.32 101.148
 37.027 101.371 29.016 99.707 c 28.441 99.586 39.816 133.043 47.281 155.027
 c 52.203 169.488 l 52.199 169.488 l 52.719 171.086 52.57 172.828 51.789
 174.316 c 51.008 175.805 49.66 176.914 48.047 177.395 c 40.93 179.676 l
 40.934 179.676 l 37.523 180.793 33.844 178.98 32.652 175.598 c 2.207 83.879
 l -6.145 58.234 10.152 32.172 32.977 26.277 c 57.324 20 73.801 26.277 81.887
 49.652 c h
71.484 76.309 m 76.645 74.965 78.215 64.395 74.988 52.68 c 71.762 40.98
 64.957 32.578 59.797 33.922 c 54.637 35.266 53.066 45.852 56.293 57.551
 c 59.52 69.25 66.324 77.652 71.484 76.309 c 110.102 49.656 m 102.949 75.348
 114.422 92.773 138.77 99.059 c 146.68 101.148 154.973 101.371 162.984 99.707
 c 163.559 99.586 152.184 133.043 144.719 155.027 c 139.797 169.488 l 139.801
 169.488 l 139.281 171.086 139.43 172.828 140.211 174.316 c 140.992 175.805
 142.34 176.914 143.953 177.395 c 151.07 179.676 l 154.539 180.781 158.27
 178.957 159.352 175.598 c 189.785 83.883 l 198.137 58.238 181.84 32.176
 159.016 26.281 c 134.668 20.004 118.191 26.281 110.105 49.656 c 120.52 
76.309 m 115.359 74.965 113.789 64.395 117.016 52.68 c 120.242 40.98 127.047
 32.578 132.207 33.922 c 137.367 35.266 138.938 45.852 135.711 57.551 c 
132.484 69.25 125.68 77.652 120.52 76.309 c f*
Q Q
showpage
%%Trailer
%%EOF
