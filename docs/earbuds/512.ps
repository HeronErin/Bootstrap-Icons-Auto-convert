%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 23 384 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 23 384 337
384 384 cairo_set_page_size
%%EndPageSetup
q 0 23 384 314 rectclip
1 0 0 -1 0 384 cm q
0 g
163.801 99.312 m 178.105 150.695 155.16 185.543 106.465 198.121 c 90.637
 202.301 74.059 202.742 58.031 199.414 c 56.879 199.176 79.633 266.086 94.559
 310.055 c 104.398 338.977 l 105.438 342.176 105.145 345.656 103.582 348.633
 c 102.016 351.609 99.32 353.832 96.098 354.793 c 81.867 359.352 l 81.863
 359.352 l 75.043 361.586 67.688 357.961 65.305 351.191 c 4.414 167.762 
l -12.289 116.473 20.301 64.348 65.949 52.562 c 114.645 40.012 147.598 52.562
 163.773 99.316 c h
142.969 152.617 m 153.289 149.93 156.434 128.785 149.977 105.359 c 143.52
 81.961 129.914 65.16 119.594 67.848 c 109.273 70.535 106.129 91.703 112.586
 115.105 c 119.043 138.504 132.648 155.305 142.969 152.617 c 220.199 99.312
 m 205.895 150.695 228.84 185.543 277.535 198.121 c 293.363 202.301 309.941
 202.742 325.969 199.414 c 327.121 199.176 304.367 266.086 289.441 310.055
 c 279.602 338.977 l 278.562 342.176 278.855 345.656 280.418 348.633 c 281.984
 351.609 284.68 353.832 287.902 354.793 c 302.133 359.352 l 309.07 361.559
 316.531 357.91 318.691 351.191 c 379.555 167.758 l 396.258 116.469 363.668
 64.344 318.02 52.559 c 269.324 40.008 236.371 52.559 220.195 99.312 c 241.027
 152.617 m 230.707 149.93 227.562 128.785 234.02 105.359 c 240.477 81.961
 254.082 65.16 264.402 67.848 c 274.723 70.535 277.867 91.703 271.41 115.105
 c 264.953 138.504 251.348 155.305 241.027 152.617 c f*
Q Q
showpage
%%Trailer
%%EOF
