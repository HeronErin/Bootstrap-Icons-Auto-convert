%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 95 1536 1345
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 95 1536 1345
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 95 1536 1250 rectclip
1 0 0 -1 0 1536 cm q
0 g
655.199 397.246 m 712.414 602.781 620.641 742.176 425.855 792.477 c 425.855
 792.48 l 362.555 809.199 296.234 810.973 232.129 797.664 c 227.52 796.703
 318.527 1064.352 378.242 1240.223 c 417.602 1355.902 l 421.758 1368.695
 420.574 1382.625 414.32 1394.535 c 408.066 1406.445 397.273 1415.324 384.383
 1419.168 c 327.453 1437.406 l 327.457 1437.406 l 314.34 1441.703 300.062
 1440.695 287.68 1434.594 c 275.301 1428.492 265.801 1417.785 261.215 1404.77
 c 17.664 671.039 l -49.152 465.887 81.215 257.375 263.809 210.238 c 458.594
 160.031 590.402 210.238 655.105 397.246 c h
571.871 610.461 m 613.152 599.707 625.727 515.133 599.902 421.438 c 574.078
 327.836 519.645 260.637 478.367 271.391 c 437.086 282.145 424.512 366.816
 450.336 460.414 c 476.16 554.016 530.594 621.215 571.871 610.461 c 880.801
 397.246 m 823.586 602.781 915.359 742.176 1110.145 792.477 c 1110.145 792.48
 l 1173.445 809.199 1239.766 810.973 1303.871 797.664 c 1308.48 796.703 
1217.473 1064.352 1157.758 1240.223 c 1118.398 1355.902 l 1114.242 1368.695
 1115.426 1382.625 1121.68 1394.535 c 1127.934 1406.445 1138.727 1415.324
 1151.617 1419.168 c 1208.547 1437.406 l 1236.289 1446.238 1266.148 1431.645
 1274.785 1404.766 c 1518.242 671.039 l 1585.059 465.887 1454.691 257.375
 1272.098 210.238 c 1077.312 160.031 945.504 210.238 880.801 397.246 c 964.129
 610.461 m 922.848 599.707 910.273 515.133 936.098 421.438 c 961.922 327.836
 1016.355 260.637 1057.633 271.391 c 1098.914 282.145 1111.488 366.816 1085.664
 460.414 c 1059.84 554.016 1005.406 621.215 964.129 610.461 c f*
Q Q
showpage
%%Trailer
%%EOF
