%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 1 24 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 1 24 21
24 24 cairo_set_page_size
%%EndPageSetup
q 0 1 24 20 rectclip
1 0 0 -1 0 24 cm q
0 g
10.238 6.207 m 11.133 9.418 9.699 11.598 6.656 12.383 c 6.652 12.383 l 
5.664 12.645 4.629 12.672 3.629 12.465 c 3.559 12.449 4.98 16.633 5.91 19.379
 c 6.523 21.188 l 6.59 21.387 6.57 21.605 6.473 21.789 c 6.375 21.977 6.207
 22.113 6.008 22.176 c 5.117 22.461 l 4.691 22.598 4.23 22.371 4.082 21.949
 c 0.277 10.484 l -0.766 7.277 1.27 4.02 4.125 3.285 c 7.168 2.5 9.227 3.285
 10.238 6.207 c h
8.938 9.539 m 9.582 9.371 9.777 8.051 9.375 6.586 c 8.973 5.125 8.121 4.074
 7.477 4.242 c 6.832 4.41 6.637 5.734 7.039 7.195 c 7.441 8.656 8.293 9.707
 8.938 9.539 c 13.766 6.207 m 12.871 9.418 14.305 11.598 17.348 12.383 c
 18.336 12.645 19.371 12.672 20.371 12.465 c 20.441 12.449 19.02 16.633 
18.09 19.379 c 17.477 21.188 l 17.41 21.387 17.43 21.605 17.527 21.789 c
 17.625 21.977 17.793 22.113 17.992 22.176 c 18.883 22.461 l 19.316 22.598
 19.781 22.371 19.918 21.949 c 23.723 10.484 l 24.766 7.277 22.73 4.02 19.875
 3.285 c 16.832 2.5 14.773 3.285 13.762 6.207 c 15.062 9.539 m 14.418 9.371
 14.223 8.051 14.625 6.586 c 15.027 5.125 15.879 4.074 16.523 4.242 c 17.168
 4.41 17.363 5.734 16.961 7.195 c 16.559 8.656 15.707 9.707 15.062 9.539
 c f*
Q Q
showpage
%%Trailer
%%EOF
