%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 47 768 673
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 47 768 673
768 768 cairo_set_page_size
%%EndPageSetup
q 0 47 768 626 rectclip
1 0 0 -1 0 768 cm q
0 g
327.602 198.625 m 356.211 301.395 310.32 371.09 212.93 396.242 c 212.93
 396.238 l 181.277 404.598 148.117 405.488 116.062 398.832 c 113.758 398.352
 159.262 532.176 189.117 620.113 c 208.797 677.953 l 208.801 677.953 l 210.879
 684.348 210.285 691.312 207.16 697.266 c 204.035 703.223 198.637 707.664
 192.191 709.586 c 163.727 718.707 l 163.727 718.703 l 157.168 720.852 150.031
 720.348 143.84 717.297 c 137.648 714.246 132.898 708.895 130.609 702.383
 c 8.832 335.52 l -24.574 232.945 40.609 128.688 131.902 105.121 c 229.293
 80.016 295.199 105.121 327.551 198.625 c h
285.938 305.234 m 306.578 299.859 312.867 257.57 299.953 210.723 c 287.043
 163.922 259.824 130.324 239.184 135.699 c 218.543 141.074 212.254 183.41
 225.168 230.211 c 238.078 277.012 265.297 310.609 285.938 305.234 c 440.402
 198.625 m 411.793 301.395 457.684 371.09 555.074 396.242 c 555.07 396.238
 l 586.723 404.598 619.883 405.488 651.938 398.832 c 654.242 398.352 608.738
 532.176 578.883 620.113 c 559.203 677.953 l 559.199 677.953 l 557.121 684.348
 557.715 691.312 560.84 697.266 c 563.965 703.223 569.363 707.664 575.809
 709.586 c 604.273 718.707 l 618.145 723.121 633.074 715.828 637.395 702.387
 c 759.121 335.523 l 792.527 232.949 727.344 128.691 636.051 105.125 c 538.66
 80.02 472.754 105.125 440.402 198.629 c 482.066 305.238 m 461.426 299.863
 455.137 257.574 468.051 210.727 c 480.961 163.926 508.18 130.328 528.82
 135.703 c 549.461 141.078 555.75 183.414 542.836 230.215 c 529.926 277.016
 502.707 310.613 482.066 305.238 c f*
Q Q
showpage
%%Trailer
%%EOF
