%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 11 rectclip
1 0 0 -1 0 12 cm q
0 g
5.117 3.102 m 5.562 4.707 4.848 5.797 3.324 6.188 c 3.328 6.191 l 2.832
 6.32 2.312 6.336 1.812 6.23 c 1.777 6.223 2.488 8.312 2.953 9.688 c 3.262
 10.59 l 3.262 10.594 l 3.297 10.691 3.285 10.801 3.238 10.895 c 3.188 10.988
 3.105 11.059 3.004 11.086 c 2.559 11.227 l 2.559 11.23 l 2.344 11.301 2.117
 11.188 2.039 10.977 c 0.137 5.242 l -0.387 3.641 0.633 2.012 2.059 1.641
 c 3.582 1.25 4.609 1.641 5.117 3.102 c h
4.465 4.766 m 4.789 4.68 4.887 4.02 4.684 3.289 c 4.48 2.559 4.055 2.031
 3.734 2.117 c 3.41 2.203 3.312 2.863 3.516 3.594 c 3.719 4.324 4.145 4.852
 4.465 4.766 c 6.879 3.102 m 6.434 4.707 7.148 5.797 8.672 6.188 c 8.672
 6.191 l 9.168 6.32 9.688 6.336 10.188 6.23 c 10.223 6.223 9.512 8.312 9.047
 9.688 c 8.738 10.59 l 8.738 10.594 l 8.703 10.691 8.715 10.801 8.762 10.895
 c 8.812 10.988 8.895 11.059 8.996 11.086 c 9.441 11.227 l 9.656 11.297 
9.891 11.18 9.957 10.973 c 11.859 5.242 l 12.383 3.641 11.363 2.012 9.938
 1.641 c 8.414 1.25 7.387 1.641 6.879 3.102 c 7.531 4.766 m 7.207 4.68 7.109
 4.02 7.312 3.289 c 7.516 2.559 7.941 2.031 8.262 2.117 c 8.586 2.203 8.684
 2.863 8.48 3.594 c 8.277 4.324 7.852 4.852 7.531 4.766 c f*
Q Q
showpage
%%Trailer
%%EOF
