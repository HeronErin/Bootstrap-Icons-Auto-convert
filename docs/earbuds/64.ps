%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 43
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 43
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 40 rectclip
1 0 0 -1 0 48 cm q
0 g
20.477 12.414 m 22.266 18.836 19.398 23.191 13.309 24.766 c 11.328 25.289
 9.258 25.344 7.254 24.926 c 7.109 24.895 9.953 33.262 11.82 38.754 c 13.051
 42.367 l 13.051 42.371 l 13.18 42.773 13.145 43.207 12.949 43.578 c 12.754
 43.953 12.414 44.23 12.012 44.348 c 10.234 44.918 l 9.379 45.199 8.461 
44.746 8.164 43.898 c 0.551 20.969 l -1.539 14.559 2.535 8.043 8.242 6.57
 c 14.328 5 18.449 6.57 20.469 12.414 c h
17.871 19.078 m 19.16 18.742 19.555 16.098 18.746 13.172 c 17.938 10.246
 16.238 8.148 14.949 8.484 c 13.66 8.82 13.266 11.465 14.074 14.391 c 14.883
 17.316 16.582 19.414 17.871 19.078 c 27.523 12.414 m 25.734 18.836 28.602
 23.191 34.691 24.766 c 36.672 25.289 38.742 25.344 40.746 24.926 c 40.891
 24.895 38.047 33.262 36.18 38.754 c 34.949 42.367 l 34.949 42.371 l 34.82
 42.773 34.855 43.207 35.051 43.578 c 35.246 43.953 35.586 44.23 35.988 
44.348 c 37.766 44.918 l 38.633 45.195 39.566 44.738 39.836 43.898 c 47.445
 20.969 l 49.535 14.559 45.461 8.043 39.754 6.57 c 33.668 5 29.547 6.57 
27.527 12.414 c 30.133 19.078 m 28.844 18.742 28.449 16.098 29.258 13.172
 c 30.066 10.246 31.766 8.148 33.055 8.484 c 34.344 8.82 34.738 11.465 33.93
 14.391 c 33.121 17.316 31.422 19.414 30.133 19.078 c f*
Q Q
showpage
%%Trailer
%%EOF
