%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.559 1.551 m 2.781 2.355 2.422 2.898 1.664 3.094 c 1.418 3.16 1.156 3.168
 0.906 3.117 c 0.887 3.113 1.242 4.16 1.477 4.848 c 1.629 5.301 l 1.633 
5.297 l 1.664 5.402 1.605 5.512 1.5 5.543 c 1.277 5.613 l 1.172 5.648 1.059
 5.594 1.02 5.488 c 0.07 2.621 l -0.191 1.82 0.32 1.004 1.031 0.82 c 1.793
 0.625 2.309 0.82 2.559 1.551 c h
2.234 2.383 m 2.395 2.34 2.445 2.012 2.344 1.645 c 2.242 1.277 2.031 1.016
 1.867 1.059 c 1.707 1.102 1.656 1.43 1.758 1.797 c 1.859 2.164 2.07 2.426
 2.234 2.383 c 3.441 1.551 m 3.219 2.355 3.578 2.898 4.336 3.094 c 4.582
 3.16 4.844 3.168 5.094 3.117 c 5.113 3.113 4.758 4.16 4.523 4.848 c 4.371
 5.301 l 4.367 5.297 l 4.336 5.402 4.395 5.512 4.5 5.543 c 4.723 5.613 l
 4.832 5.648 4.949 5.59 4.98 5.484 c 5.93 2.617 l 6.191 1.816 5.68 1 4.969
 0.816 c 4.207 0.621 3.691 0.816 3.441 1.547 c 3.766 2.379 m 3.605 2.336
 3.555 2.008 3.656 1.641 c 3.758 1.273 3.969 1.012 4.133 1.055 c 4.293 1.098
 4.344 1.426 4.242 1.793 c 4.141 2.16 3.93 2.422 3.766 2.379 c f*
Q Q
showpage
%%Trailer
%%EOF
