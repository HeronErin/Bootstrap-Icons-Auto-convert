%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 5 96 85
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 5 96 85
96 96 cairo_set_page_size
%%EndPageSetup
q 0 5 96 80 rectclip
1 0 0 -1 0 96 cm q
0 g
40.949 24.828 m 44.523 37.676 38.789 46.387 26.613 49.531 c 26.617 49.531
 l 22.66 50.574 18.516 50.688 14.508 49.855 c 14.219 49.797 19.906 66.523
 23.641 77.516 c 26.102 84.746 l 26.102 84.742 l 26.359 85.543 26.285 86.414
 25.895 87.16 c 25.504 87.902 24.828 88.457 24.023 88.699 c 20.465 89.84
 l 18.762 90.398 16.922 89.492 16.324 87.797 c 1.105 41.941 l -3.07 29.121
 5.078 16.086 16.488 13.141 c 28.664 10.004 36.898 13.141 40.945 24.828 
c h
35.742 38.152 m 38.32 37.48 39.109 32.195 37.496 26.34 c 35.883 20.488 
32.48 16.289 29.898 16.961 c 27.32 17.633 26.531 22.926 28.145 28.773 c 
29.758 34.625 33.16 38.824 35.742 38.152 c 55.051 24.828 m 51.477 37.676
 57.211 46.387 69.387 49.531 c 69.383 49.531 l 73.34 50.574 77.484 50.688
 81.492 49.855 c 81.781 49.797 76.094 66.523 72.359 77.516 c 69.898 84.746
 l 69.898 84.742 l 69.641 85.543 69.715 86.414 70.105 87.16 c 70.496 87.902
 71.172 88.457 71.977 88.699 c 75.535 89.84 l 77.27 90.391 79.137 89.48 
79.676 87.801 c 94.891 41.941 l 99.066 29.121 90.918 16.086 79.508 13.141
 c 67.332 10.004 59.098 13.141 55.051 24.828 c 60.258 38.152 m 57.68 37.48
 56.891 32.195 58.504 26.34 c 60.117 20.488 63.52 16.289 66.102 16.961 c
 68.68 17.633 69.469 22.926 67.855 28.773 c 66.242 34.625 62.84 38.824 60.258
 38.152 c f*
Q Q
showpage
%%Trailer
%%EOF
