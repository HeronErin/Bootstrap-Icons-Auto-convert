%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 72 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 72 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 72 768 696 rectclip
1 0 0 -1 0 768 cm q
0 g
240 96 m 240 70.539 250.113 46.121 268.117 28.117 c 286.121 10.113 310.539
 0 336 0 c 432 0 l 457.461 0 481.879 10.113 499.883 28.117 c 517.887 46.121
 528 70.539 528 96 c 696 96 l 715.094 96 733.41 103.586 746.91 117.09 c 
760.414 130.59 768 148.906 768 168 c 768 600 l 768 619.094 760.414 637.41
 746.91 650.91 c 733.41 664.414 715.094 672 696 672 c 672 672 l 672 680.574
 667.426 688.496 660 692.785 c 652.574 697.07 643.426 697.07 636 692.785
 c 628.574 688.496 624 680.574 624 672 c 144 672 l 144 680.574 139.426 688.496
 132 692.785 c 124.574 697.07 115.426 697.07 108 692.785 c 100.574 688.496
 96 680.574 96 672 c 72 672 l 52.906 672 34.59 664.414 21.09 650.91 c 7.586
 637.41 0 619.094 0 600 c 0 168 l 0 148.906 7.586 130.59 21.09 117.09 c 
34.59 103.586 52.906 96 72 96 c h
288 96 m 480 96 l 480 83.27 474.941 71.062 465.941 62.059 c 456.938 53.059
 444.73 48 432 48 c 336 48 l 323.27 48 311.062 53.059 302.059 62.059 c 293.059
 71.062 288 83.27 288 96 c 72 144 m 65.637 144 59.531 146.527 55.031 151.031
 c 50.527 155.531 48 161.637 48 168 c 48 600 l 48 606.363 50.527 612.469
 55.031 616.969 c 59.531 621.473 65.637 624 72 624 c 144 624 l 144 144 l
 h
720 600 m 720 168 l 720 161.637 717.473 155.531 712.969 151.031 c 708.469
 146.527 702.363 144 696 144 c 624 144 l 624 624 l 696 624 l 702.363 624
 708.469 621.473 712.969 616.969 c 717.473 612.469 720 606.363 720 600 c
 576 624 m 576 144 l 192 144 l 192 624 l h
576 624 m f
Q Q
showpage
%%Trailer
%%EOF
