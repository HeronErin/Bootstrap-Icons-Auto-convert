%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 36 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 36 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 36 384 348 rectclip
1 0 0 -1 0 384 cm q
0 g
120 48 m 120 35.27 125.059 23.062 134.059 14.059 c 143.062 5.059 155.27
 0 168 0 c 216 0 l 228.73 0 240.938 5.059 249.941 14.059 c 258.941 23.062
 264 35.27 264 48 c 348 48 l 357.547 48 366.703 51.793 373.457 58.543 c 
380.207 65.297 384 74.453 384 84 c 384 300 l 384 309.547 380.207 318.703
 373.457 325.457 c 366.703 332.207 357.547 336 348 336 c 336 336 l 336 342.629
 330.629 348 324 348 c 317.371 348 312 342.629 312 336 c 72 336 l 72 342.629
 66.629 348 60 348 c 53.371 348 48 342.629 48 336 c 36 336 l 26.453 336 
17.297 332.207 10.543 325.457 c 3.793 318.703 0 309.547 0 300 c 0 84 l 0
 74.453 3.793 65.297 10.543 58.543 c 17.297 51.793 26.453 48 36 48 c h
144 48 m 240 48 l 240 41.637 237.473 35.531 232.969 31.031 c 228.469 26.527
 222.363 24 216 24 c 168 24 l 161.637 24 155.531 26.527 151.031 31.031 c
 146.527 35.531 144 41.637 144 48 c 36 72 m 29.371 72 24 77.371 24 84 c 
24 300 l 24 303.184 25.266 306.234 27.516 308.484 c 29.766 310.734 32.816
 312 36 312 c 72 312 l 72 72 l h
360 300 m 360 84 l 360 80.816 358.734 77.766 356.484 75.516 c 354.234 73.266
 351.184 72 348 72 c 312 72 l 312 312 l 348 312 l 351.184 312 354.234 310.734
 356.484 308.484 c 358.734 306.234 360 303.184 360 300 c 288 312 m 288 72
 l 96 72 l 96 312 l h
288 312 m f
Q Q
showpage
%%Trailer
%%EOF
