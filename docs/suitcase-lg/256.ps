%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 18 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 18 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 18 192 174 rectclip
1 0 0 -1 0 192 cm q
0 g
60 24 m 60 17.637 62.527 11.531 67.031 7.031 c 71.531 2.527 77.637 0 84
 0 c 108 0 l 114.363 0 120.469 2.527 124.969 7.031 c 129.473 11.531 132 
17.637 132 24 c 174 24 l 178.773 24 183.352 25.895 186.727 29.273 c 190.105
 32.648 192 37.227 192 42 c 192 150 l 192 154.773 190.105 159.352 186.727
 162.727 c 183.352 166.105 178.773 168 174 168 c 168 168 l 168 171.312 165.312
 174 162 174 c 158.688 174 156 171.312 156 168 c 36 168 l 36 171.312 33.312
 174 30 174 c 26.688 174 24 171.312 24 168 c 18 168 l 13.227 168 8.648 166.105
 5.273 162.727 c 1.895 159.352 0 154.773 0 150 c 0 42 l 0 37.227 1.895 32.648
 5.273 29.273 c 8.648 25.895 13.227 24 18 24 c h
72 24 m 120 24 l 120 20.816 118.734 17.766 116.484 15.516 c 114.234 13.266
 111.184 12 108 12 c 84 12 l 77.371 12 72 17.371 72 24 c 18 36 m 14.688 
36 12 38.688 12 42 c 12 150 l 12 151.59 12.633 153.117 13.758 154.242 c 
14.883 155.367 16.41 156 18 156 c 36 156 l 36 36 l h
180 150 m 180 42 l 180 40.41 179.367 38.883 178.242 37.758 c 177.117 36.633
 175.59 36 174 36 c 156 36 l 156 156 l 174 156 l 175.59 156 177.117 155.367
 178.242 154.242 c 179.367 153.117 180 151.59 180 150 c 144 156 m 144 36
 l 48 36 l 48 156 l h
144 156 m f
Q Q
showpage
%%Trailer
%%EOF
