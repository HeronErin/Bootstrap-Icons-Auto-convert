%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
96 48 m 78.852 48 63.004 57.148 54.43 72 c 45.855 86.852 45.855 105.148
 54.43 120 c 63.004 134.852 78.852 144 96 144 c 113.148 144 128.996 134.852
 137.57 120 c 146.145 105.148 146.145 86.852 137.57 72 c 128.996 57.148 
113.148 48 96 48 c 0 96 m -0.031 64.555 15.34 35.086 41.152 17.117 c 66.961
 -0.852 99.934 -5.039 129.414 5.906 c 158.895 16.852 181.145 41.543 188.977
 72 c 579.023 72 l 584.699 50.055 597.953 30.828 616.445 17.719 c 634.938
 4.609 657.469 -1.535 680.055 0.375 c 702.641 2.285 723.82 12.125 739.848
 28.152 c 755.875 44.18 765.715 65.359 767.625 87.945 c 769.535 110.531 
763.391 133.062 750.281 151.555 c 737.172 170.047 717.945 183.301 696 188.977
 c 696 579.023 l 717.945 584.699 737.172 597.953 750.281 616.445 c 763.391
 634.938 769.535 657.469 767.625 680.055 c 765.715 702.641 755.875 723.82
 739.848 739.848 c 723.82 755.875 702.641 765.715 680.055 767.625 c 657.469
 769.535 634.938 763.391 616.445 750.281 c 597.953 737.172 584.699 717.945
 579.023 696 c 188.977 696 l 183.301 717.945 170.047 737.172 151.555 750.281
 c 133.062 763.391 110.531 769.535 87.945 767.625 c 65.359 765.715 44.18
 755.875 28.152 739.848 c 12.125 723.82 2.285 702.641 0.375 680.055 c -1.535
 657.469 4.609 634.938 17.719 616.445 c 30.828 597.953 50.055 584.699 72
 579.023 c 72 188.977 l 51.391 183.652 33.133 171.633 20.098 154.801 c 7.062
 137.973 -0.004 117.285 0 96 c 120 188.977 m 120 579.023 l 153.742 587.664
 180.289 614.254 188.977 648 c 579.023 648 l 583.309 631.387 591.969 616.23
 604.098 604.098 c 616.23 591.969 631.387 583.309 648 579.023 c 648 188.977
 l 631.387 184.691 616.23 176.031 604.098 163.902 c 591.969 151.77 583.309
 136.613 579.023 120 c 188.977 120 l 184.691 136.613 176.031 151.77 163.902
 163.902 c 151.77 176.031 136.613 184.691 120 188.977 c 672 48 m 654.852
 48 639.004 57.148 630.43 72 c 621.855 86.852 621.855 105.148 630.43 120
 c 639.004 134.852 654.852 144 672 144 c 689.148 144 704.996 134.852 713.57
 120 c 722.145 105.148 722.145 86.852 713.57 72 c 704.996 57.148 689.148
 48 672 48 c 96 624 m 78.852 624 63.004 633.148 54.43 648 c 45.855 662.852
 45.855 681.148 54.43 696 c 63.004 710.852 78.852 720 96 720 c 113.148 720
 128.996 710.852 137.57 696 c 146.145 681.148 146.145 662.852 137.57 648
 c 128.996 633.148 113.148 624 96 624 c 672 624 m 654.852 624 639.004 633.148
 630.43 648 c 621.855 662.852 621.855 681.148 630.43 696 c 639.004 710.852
 654.852 720 672 720 c 689.148 720 704.996 710.852 713.57 696 c 722.145 
681.148 722.145 662.852 713.57 648 c 704.996 633.148 689.148 624 672 624
 c f
Q Q
showpage
%%Trailer
%%EOF
