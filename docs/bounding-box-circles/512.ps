%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 24 m 39.426 24 31.504 28.574 27.215 36 c 22.93 43.426 22.93 52.574 27.215
 60 c 31.504 67.426 39.426 72 48 72 c 56.574 72 64.496 67.426 68.785 60 
c 73.07 52.574 73.07 43.426 68.785 36 c 64.496 28.574 56.574 24 48 24 c 
0 48 m -0.016 32.277 7.672 17.543 20.574 8.559 c 33.48 -0.426 49.965 -2.52
 64.707 2.953 c 79.445 8.426 90.574 20.773 94.488 36 c 289.512 36 l 292.348
 25.027 298.977 15.414 308.223 8.859 c 317.469 2.305 328.734 -0.77 340.027
 0.188 c 351.32 1.141 361.91 6.062 369.926 14.074 c 377.938 22.09 382.859
 32.68 383.812 43.973 c 384.77 55.266 381.695 66.531 375.141 75.777 c 368.586
 85.023 358.973 91.652 348 94.488 c 348 289.512 l 358.973 292.348 368.586
 298.977 375.141 308.223 c 381.695 317.469 384.77 328.734 383.812 340.027
 c 382.859 351.32 377.938 361.91 369.926 369.926 c 361.91 377.938 351.32
 382.859 340.027 383.812 c 328.734 384.77 317.469 381.695 308.223 375.141
 c 298.977 368.586 292.348 358.973 289.512 348 c 94.488 348 l 91.652 358.973
 85.023 368.586 75.777 375.141 c 66.531 381.695 55.266 384.77 43.973 383.812
 c 32.68 382.859 22.09 377.938 14.074 369.926 c 6.062 361.91 1.141 351.32
 0.188 340.027 c -0.77 328.734 2.305 317.469 8.859 308.223 c 15.414 298.977
 25.027 292.348 36 289.512 c 36 94.488 l 25.695 91.828 16.566 85.816 10.051
 77.402 c 3.531 68.984 -0.004 58.645 0 48 c 60 94.488 m 60 289.512 l 76.871
 293.832 90.145 307.129 94.488 324 c 289.512 324 l 291.656 315.695 295.984
 308.113 302.051 302.051 c 308.113 295.984 315.695 291.656 324 289.512 c
 324 94.488 l 315.695 92.344 308.113 88.016 302.051 81.949 c 295.984 75.887
 291.656 68.305 289.512 60 c 94.488 60 l 92.344 68.305 88.016 75.887 81.949
 81.949 c 75.887 88.016 68.305 92.344 60 94.488 c 336 24 m 327.426 24 319.504
 28.574 315.215 36 c 310.93 43.426 310.93 52.574 315.215 60 c 319.504 67.426
 327.426 72 336 72 c 344.574 72 352.496 67.426 356.785 60 c 361.07 52.574
 361.07 43.426 356.785 36 c 352.496 28.574 344.574 24 336 24 c 48 312 m 
39.426 312 31.504 316.574 27.215 324 c 22.93 331.426 22.93 340.574 27.215
 348 c 31.504 355.426 39.426 360 48 360 c 56.574 360 64.496 355.426 68.785
 348 c 73.07 340.574 73.07 331.426 68.785 324 c 64.496 316.574 56.574 312
 48 312 c 336 312 m 327.426 312 319.504 316.574 315.215 324 c 310.93 331.426
 310.93 340.574 315.215 348 c 319.504 355.426 327.426 360 336 360 c 344.574
 360 352.496 355.426 356.785 348 c 361.07 340.574 361.07 331.426 356.785
 324 c 352.496 316.574 344.574 312 336 312 c f
Q Q
showpage
%%Trailer
%%EOF
