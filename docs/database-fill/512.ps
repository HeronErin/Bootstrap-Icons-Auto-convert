%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 360
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 360 rectclip
1 0 0 -1 0 384 cm q
0 g
93.695 42.648 m 119.473 30.938 154.246 24 192 24 c 229.754 24 264.527 30.938
 290.305 42.648 c 315 53.879 336 71.832 336 96 c 336 120.168 315 138.121
 290.305 149.352 c 264.527 161.062 229.754 168 192 168 c 154.246 168 119.473
 161.062 93.695 149.352 c 69 138.121 48 120.168 48 96 c 48 71.832 69 53.879
 93.695 42.648 c f
48 147.863 m 48 168 l 48 192.168 69 210.121 93.695 221.352 c 119.473 233.039
 154.246 240 192 240 c 229.754 240 264.527 233.062 290.305 221.352 c 315
 210.121 336 192.168 336 168 c 336 147.863 l 325.031 158.23 311.902 165.887
 300.238 171.191 c 270.672 184.633 232.367 192 192 192 c 151.633 192 113.328
 184.633 83.762 171.191 c 72.098 165.91 58.969 158.23 48 147.863 c f
48 219.863 m 48 240 l 48 264.168 69 282.121 93.695 293.352 c 119.473 305.062
 154.246 312 192 312 c 229.754 312 264.527 305.062 290.305 293.352 c 315
 282.121 336 264.168 336 240 c 336 219.863 l 325.031 230.23 311.902 237.887
 300.238 243.191 c 270.672 256.633 232.367 264 192 264 c 151.633 264 113.328
 256.633 83.762 243.191 c 72.098 237.91 58.969 230.23 48 219.863 c f
48 291.863 m 48 312 l 48 336.168 69 354.121 93.695 365.352 c 119.473 377.062
 154.246 384 192 384 c 229.754 384 264.527 377.062 290.305 365.352 c 315
 354.121 336 336.168 336 312 c 336 291.863 l 325.031 302.23 311.902 309.887
 300.238 315.191 c 270.672 328.633 232.367 336 192 336 c 151.633 336 113.328
 328.633 83.762 315.191 c 72.098 309.91 58.969 302.23 48 291.863 c f
Q Q
showpage
%%Trailer
%%EOF
