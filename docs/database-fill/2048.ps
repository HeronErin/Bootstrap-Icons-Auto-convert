%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
374.785 170.594 m 477.887 123.742 616.992 96 768 96 c 919.008 96 1058.113
 123.742 1161.215 170.594 c 1260 215.52 1344 287.328 1344 384 c 1344 480.672
 1260 552.48 1161.215 597.406 c 1058.113 644.258 919.008 672 768 672 c 616.992
 672 477.887 644.258 374.785 597.406 c 276 552.48 192 480.672 192 384 c 
192 287.328 276 215.52 374.785 170.594 c f
192 591.457 m 192 672 l 192 768.672 276 840.48 374.785 885.406 c 477.887
 932.16 616.992 960 768 960 c 919.008 960 1058.113 932.258 1161.215 885.406
 c 1260 840.48 1344 768.672 1344 672 c 1344 591.457 l 1300.129 632.93 1247.617
 663.555 1200.961 684.77 c 1082.688 738.527 929.473 768 768 768 c 606.527
 768 453.312 738.527 335.039 684.77 c 288.383 663.648 235.871 632.93 192
 591.457 c f
192 879.457 m 192 960 l 192 1056.672 276 1128.48 374.785 1173.406 c 477.887
 1220.258 616.992 1248 768 1248 c 919.008 1248 1058.113 1220.258 1161.215
 1173.406 c 1260 1128.48 1344 1056.672 1344 960 c 1344 879.457 l 1300.129
 920.93 1247.617 951.555 1200.961 972.77 c 1082.688 1026.531 929.473 1056
 768 1056 c 606.527 1056 453.312 1026.527 335.039 972.77 c 288.383 951.648
 235.871 920.93 192 879.457 c f
192 1167.457 m 192 1248 l 192 1344.672 276 1416.48 374.785 1461.406 c 477.887
 1508.258 616.992 1536 768 1536 c 919.008 1536 1058.113 1508.258 1161.215
 1461.406 c 1260 1416.48 1344 1344.672 1344 1248 c 1344 1167.457 l 1300.129
 1208.93 1247.617 1239.555 1200.961 1260.77 c 1082.688 1314.531 929.473 
1344 768 1344 c 606.527 1344 453.312 1314.527 335.039 1260.77 c 288.383 
1239.648 235.871 1208.93 192 1167.457 c f
Q Q
showpage
%%Trailer
%%EOF
