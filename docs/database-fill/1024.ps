%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 720
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 720 rectclip
1 0 0 -1 0 768 cm q
0 g
187.391 85.297 m 238.945 61.871 308.496 48 384 48 c 459.504 48 529.055 
61.871 580.609 85.297 c 630 107.762 672 143.664 672 192 c 672 240.336 630
 276.238 580.609 298.703 c 529.055 322.129 459.504 336 384 336 c 308.496
 336 238.945 322.129 187.391 298.703 c 138 276.238 96 240.336 96 192 c 96
 143.664 138 107.762 187.391 85.297 c f
96 295.727 m 96 336 l 96 384.336 138 420.238 187.391 442.703 c 238.945 
466.078 308.496 480 384 480 c 459.504 480 529.055 466.129 580.609 442.703
 c 630 420.238 672 384.336 672 336 c 672 295.727 l 650.062 316.461 623.809
 331.773 600.48 342.383 c 541.344 369.266 464.734 384 384 384 c 303.266 
384 226.656 369.266 167.52 342.383 c 144.191 331.824 117.934 316.461 96 
295.727 c f
96 439.727 m 96 480 l 96 528.336 138 564.238 187.391 586.703 c 238.945 
610.129 308.496 624 384 624 c 459.504 624 529.055 610.129 580.609 586.703
 c 630 564.238 672 528.336 672 480 c 672 439.727 l 650.062 460.461 623.809
 475.773 600.48 486.383 c 541.344 513.262 464.738 528 384 528 c 303.266 
528 226.656 513.266 167.52 486.383 c 144.191 475.824 117.934 460.461 96 
439.727 c f
96 583.727 m 96 624 l 96 672.336 138 708.238 187.391 730.703 c 238.945 
754.129 308.496 768 384 768 c 459.504 768 529.055 754.129 580.609 730.703
 c 630 708.238 672 672.336 672 624 c 672 583.727 l 650.062 604.461 623.809
 619.773 600.48 630.383 c 541.344 657.262 464.738 672 384 672 c 303.266 
672 226.656 657.266 167.52 630.383 c 144.191 619.824 117.934 604.461 96 
583.727 c f
Q Q
showpage
%%Trailer
%%EOF
