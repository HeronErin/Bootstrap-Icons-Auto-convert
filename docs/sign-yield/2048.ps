%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 95 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 95 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 95 1536 1345 rectclip
1 0 0 -1 0 1536 cm q
0 g
528.574 598.273 m 528.574 672 l 490.559 672 l 490.559 599.039 l 426.238
 480 l 468.477 480 l 509.18 561.504 l 510.715 561.504 l 551.809 480 l 592.898
 480 l h
636.289 480 m 636.289 672 l 598.273 672 l 598.273 480 l h
701.953 640.895 m 787.875 640.895 l 787.871 672 l 664.223 672 l 664.223
 480 l 787.871 480 l 787.871 511.105 l 701.949 511.105 l 701.949 560.352
 l 782.781 560.352 l 782.781 589.441 l 701.949 589.441 l h
847.969 639.648 m 929.375 639.648 l 929.375 672 l 809.953 672 l 809.953
 480 l 847.969 480 l h
847.969 639.648 m f
941.184 672 m 941.184 480 l 1011.262 480 l 1069.535 480 1097.086 514.945
 1097.086 575.52 c 1097.086 636.574 1069.148 672 1011.164 672 c h
1006.078 511.008 m 979.199 511.008 l 979.199 640.895 l 1006.078 640.895
 l 1041.789 640.895 1057.918 619.582 1057.918 576.191 c 1057.918 532.992
 1041.695 510.91 1006.078 510.91 c h
1006.078 511.008 m f*
674.113 1385.664 m 686.867 1407.801 707.02 1424.734 731.023 1433.48 c 755.031
 1442.227 781.352 1442.227 805.359 1433.48 c 829.363 1424.734 849.52 1407.801
 862.273 1385.664 c 1520.547 265.633 l 1564.418 190.945 1511.715 96 1426.469
 96 c 109.824 96 l 24.48 96 -28.129 191.039 15.746 265.633 c h
768.191 1344 m 766.047 1344.023 763.93 1343.496 762.047 1342.465 c 759.863
 1341.133 758.074 1339.242 756.863 1336.992 c 98.594 216.961 l 96.992 214.316
 96.129 211.293 96.098 208.203 c 96.062 205.113 96.859 202.07 98.398 199.391
 c 99.719 197.141 101.484 195.18 103.586 193.633 c 105.441 192.363 107.684
 191.785 109.922 192 c 1426.371 192 l 1426.367 192 l 1428.594 191.922 1430.793
 192.488 1432.703 193.633 c 1434.496 194.594 1436.254 196.512 1437.984 199.395
 c 1437.984 199.391 l 1439.512 202.078 1440.289 205.125 1440.238 208.215
 c 1440.188 211.305 1439.309 214.324 1437.695 216.961 c 779.52 1336.992 
l 778.309 1339.242 776.52 1341.133 774.336 1342.465 c 772.484 1343.48 770.402
 1344.008 768.289 1344 c h
768.191 1344 m f*
Q Q
showpage
%%Trailer
%%EOF
