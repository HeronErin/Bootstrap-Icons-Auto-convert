%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 624 rectclip
1 0 0 -1 0 768 cm q
0 g
335.953 124.801 m 389.852 97.281 451.57 89.113 510.77 101.672 c 569.973
 114.227 623.062 146.738 661.152 193.766 c 699.242 240.797 720.016 299.48
 720 360 c 720 368.574 724.574 376.496 732 380.785 c 739.426 385.07 748.574
 385.07 756 380.785 c 763.426 376.496 768 368.574 768 360 c 768 277.254 
735.129 197.895 676.617 139.383 c 618.105 80.871 538.746 48 456 48 c 373.254
 48 293.895 80.871 235.383 139.383 c 176.871 197.895 144 277.254 144 360
 c 143.988 407.617 158.141 454.16 184.656 493.711 c 211.176 533.258 248.855
 564.027 292.91 582.102 c 336.961 600.172 385.395 604.734 432.047 595.199
 c 378.148 622.719 316.43 630.887 257.23 618.328 c 198.027 605.773 144.938
 573.262 106.848 526.234 c 68.758 479.203 47.984 420.52 48 360 c 48 351.426
 43.426 343.504 36 339.215 c 28.574 334.93 19.426 334.93 12 339.215 c 4.574
 343.504 0 351.426 0 360 c 0 442.746 32.871 522.105 91.383 580.617 c 149.895
 639.129 229.254 672 312 672 c 394.746 672 474.105 639.129 532.617 580.617
 c 591.129 522.105 624 442.746 624 360 c 624.012 312.383 609.859 265.84 
583.344 226.289 c 556.824 186.742 519.145 155.973 475.09 137.898 c 431.039
 119.828 382.605 115.266 335.953 124.801 c 480 360 m 480 394.297 461.703
 425.988 432 443.137 c 402.297 460.289 365.703 460.289 336 443.137 c 306.297
 425.988 288 394.297 288 360 c 288 325.703 306.297 294.012 336 276.863 c
 365.703 259.711 402.297 259.711 432 276.863 c 461.703 294.012 480 325.703
 480 360 c f
Q Q
showpage
%%Trailer
%%EOF
