%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 30 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 30 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 30 384 330 rectclip
1 0 0 -1 0 384 cm q
0 g
192 149.664 m 170.543 106.727 l 165.215 96.094 155.977 80.805 142.895 68.445
 c 130.031 56.281 114.625 48 96 48 c 55.777 48 24 79.824 24 118.078 c 24
 147.141 37.297 167.664 68.832 198.957 c 76.922 206.973 86.137 215.637 96.336
 225.188 c 122.93 250.152 156 281.207 192 322.727 c 228 281.207 261.07 250.152
 287.664 225.191 c 297.863 215.641 307.105 206.953 315.168 198.961 c 346.703
 167.664 360 147.145 360 118.078 c 360 79.824 328.223 48 288 48 c 269.352
 48 253.969 56.281 241.105 68.449 c 228.027 80.809 218.785 96.098 213.457
 106.73 c h
201.406 348.672 m 199.07 351.441 195.625 353.043 192 353.043 c 188.375 
353.043 184.93 351.441 182.594 348.672 c 144.168 303.023 109.395 270.383
 80.762 243.527 c 31.199 196.992 0 167.734 0 118.078 c 0 66.121 42.961 24
 96 24 c 134.398 24 161.258 49.199 177.695 72.191 c 183.934 80.953 188.688
 89.375 192 96 c 196.156 87.711 200.938 79.754 206.305 72.191 c 222.742 
49.176 249.602 24 288 24 c 341.039 24 384 66.121 384 118.078 c 384 167.734
 352.801 196.988 303.238 243.527 c 274.605 270.406 239.832 303.047 201.406
 348.648 c h
201.406 348.672 m f
Q Q
showpage
%%Trailer
%%EOF
