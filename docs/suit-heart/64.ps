%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 42 rectclip
1 0 0 -1 0 48 cm q
0 g
24 18.707 m 21.316 13.34 l 20.652 12.012 19.496 10.102 17.859 8.555 c 16.254
 7.035 14.328 6 12 6 c 6.973 6 3 9.977 3 14.762 c 3 18.395 4.66 20.961 8.605
 24.871 c 9.617 25.875 10.77 26.957 12.043 28.148 c 15.367 31.27 19.5 35.152
 24 40.34 c 28.5 35.148 32.633 31.27 35.957 28.148 c 37.23 26.953 38.387
 25.867 39.395 24.871 c 43.34 20.957 45 18.395 45 14.762 c 45 9.977 41.027
 6 36 6 c 33.668 6 31.746 7.035 30.137 8.555 c 28.5 10.102 27.348 12.012
 26.68 13.34 c h
25.176 43.582 m 25.176 43.586 l 24.883 43.93 24.453 44.129 24 44.129 c 
23.547 44.129 23.117 43.93 22.824 43.586 c 18.02 37.879 13.676 33.801 10.094
 30.441 c 3.898 24.625 0 20.969 0 14.762 c 0 8.266 5.371 3 12 3 c 16.801
 3 20.156 6.148 22.211 9.023 c 22.992 10.117 23.586 11.172 24 12 c 24.52
 10.965 25.117 9.969 25.789 9.023 c 27.844 6.148 31.199 3 36 3 c 42.629 
3 48 8.266 48 14.762 c 48 20.969 44.102 24.625 37.906 30.441 c 34.328 33.801
 29.98 37.883 25.176 43.582 c h
25.176 43.582 m f
Q Q
showpage
%%Trailer
%%EOF
