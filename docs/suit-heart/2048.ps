%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 123 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 123 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 123 1536 1317 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 598.656 m 682.176 426.914 l 660.863 384.387 623.902 323.234 571.582
 273.793 c 520.129 225.121 458.496 192 384 192 c 223.105 192 96 319.297 
96 472.32 c 96 588.578 149.184 670.656 275.328 795.84 c 307.68 827.902 344.543
 862.559 385.344 900.77 c 491.711 1000.609 624 1124.832 768 1290.91 c 912
 1124.832 1044.289 1000.605 1150.656 900.766 c 1191.457 862.559 1228.418
 827.805 1260.672 795.836 c 1386.816 670.656 1440 588.574 1440 472.32 c 
1440 319.297 1312.895 192 1152 192 c 1077.406 192 1015.871 225.121 964.414
 273.793 c 912.094 323.234 875.133 384.387 853.82 426.914 c h
805.633 1394.688 m 796.273 1405.773 782.508 1412.168 768 1412.168 c 753.492
 1412.168 739.727 1405.773 730.367 1394.688 c 576.672 1212.094 437.566 1081.535
 323.039 974.113 c 124.801 787.969 0 670.945 0 472.32 c 0 264.48 171.84 
96 384 96 c 537.602 96 645.023 196.801 710.785 288.77 c 735.746 323.809 
754.754 357.504 768 384 c 784.625 350.848 803.75 319.012 825.215 288.77 
c 890.977 196.703 998.398 96 1152 96 c 1364.16 96 1536 264.48 1536 472.32
 c 1536 670.945 1411.199 787.969 1212.961 974.113 c 1098.434 1081.633 959.328
 1212.191 805.633 1394.594 c h
805.633 1394.688 m f
Q Q
showpage
%%Trailer
%%EOF
