%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 1248 m 1180.527 1248 1300.184 1199.602 1389.695 1113.027 c 1479.207
 1026.453 1531.57 908.48 1535.727 784.02 c 1539.883 659.559 1495.508 538.355
 1411.969 446.004 c 1328.434 353.652 1212.273 297.379 1088.023 289.07 c 
963.77 280.762 841.152 321.066 746.062 401.473 c 650.973 481.879 590.852
 596.094 578.398 720 c 384 720 l 384 681.809 368.828 645.184 341.824 618.176
 c 314.816 591.172 278.191 576 240 576 c 144 576 l 105.809 576 69.184 591.172
 42.176 618.176 c 15.172 645.184 0 681.809 0 720 c 0 816 l 0 854.191 15.172
 890.816 42.176 917.824 c 69.184 944.828 105.809 960 144 960 c 240 960 l
 278.191 960 314.816 944.828 341.824 917.824 c 368.828 890.816 384 854.191
 384 816 c 578.398 816 l 590.301 934.398 645.754 1044.156 734.004 1123.98
 c 822.25 1203.805 937.004 1248 1056 1248 c 1104 528 m 1104 720 l 1296 720
 l 1313.148 720 1328.996 729.148 1337.57 744 c 1346.145 758.852 1346.145
 777.148 1337.57 792 c 1328.996 806.852 1313.148 816 1296 816 c 1104 816
 l 1104 1008 l 1104 1025.148 1094.852 1040.996 1080 1049.57 c 1065.148 1058.145
 1046.852 1058.145 1032 1049.57 c 1017.148 1040.996 1008 1025.148 1008 1008
 c 1008 816 l 816 816 l 798.852 816 783.004 806.852 774.43 792 c 765.855
 777.148 765.855 758.852 774.43 744 c 783.004 729.148 798.852 720 816 720
 c 1008 720 l 1008 528 l 1008 510.852 1017.148 495.004 1032 486.43 c 1046.852
 477.855 1065.148 477.855 1080 486.43 c 1094.852 495.004 1104 510.852 1104
 528 c f
Q Q
showpage
%%Trailer
%%EOF
