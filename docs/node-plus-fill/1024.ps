%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
528 624 m 590.266 624 650.09 599.801 694.848 556.512 c 739.605 513.227 
765.785 454.238 767.863 392.012 c 769.941 329.781 747.754 269.18 705.984
 223.004 c 664.215 176.824 606.137 148.688 544.012 144.535 c 481.887 140.379
 420.578 160.531 373.031 200.734 c 325.484 240.941 295.426 298.047 289.199
 360 c 192 360 l 192 340.906 184.414 322.59 170.91 309.09 c 157.41 295.586
 139.094 288 120 288 c 72 288 l 52.906 288 34.59 295.586 21.09 309.09 c 
7.586 322.59 0 340.906 0 360 c 0 408 l 0 427.094 7.586 445.41 21.09 458.91
 c 34.59 472.414 52.906 480 72 480 c 120 480 l 139.094 480 157.41 472.414
 170.91 458.91 c 184.414 445.41 192 427.094 192 408 c 289.199 408 l 295.148
 467.199 322.875 522.078 367 561.988 c 411.125 601.902 468.504 624 528 624
 c 552 264 m 552 360 l 648 360 l 656.574 360 664.496 364.574 668.785 372
 c 673.07 379.426 673.07 388.574 668.785 396 c 664.496 403.426 656.574 408
 648 408 c 552 408 l 552 504 l 552 512.574 547.426 520.496 540 524.785 c
 532.574 529.07 523.426 529.07 516 524.785 c 508.574 520.496 504 512.574
 504 504 c 504 408 l 408 408 l 399.426 408 391.504 403.426 387.215 396 c
 382.93 388.574 382.93 379.426 387.215 372 c 391.504 364.574 399.426 360
 408 360 c 504 360 l 504 264 l 504 255.426 508.574 247.504 516 243.215 c
 523.426 238.93 532.574 238.93 540 243.215 c 547.426 247.504 552 255.426
 552 264 c f
Q Q
showpage
%%Trailer
%%EOF
