%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 1 7 47 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 1 7 47 42
48 48 cairo_set_page_size
%%EndPageSetup
q 1 7 46 35 rectclip
1 0 0 -1 0 48 cm q
0 g
34.5 18.082 m 34.5 18.91 33.828 19.582 33 19.582 c 32.172 19.582 31.5 18.91
 31.5 18.082 c 31.5 17.254 32.172 16.582 33 16.582 c 33.828 16.582 34.5 
17.254 34.5 18.082 c 30 22.582 m 30.828 22.582 31.5 21.91 31.5 21.082 c 
31.5 20.254 30.828 19.582 30 19.582 c 29.172 19.582 28.5 20.254 28.5 21.082
 c 28.5 21.91 29.172 22.582 30 22.582 c 37.5 21.082 m 37.5 21.91 36.828 
22.582 36 22.582 c 35.172 22.582 34.5 21.91 34.5 21.082 c 34.5 20.254 35.172
 19.582 36 19.582 c 36.828 19.582 37.5 20.254 37.5 21.082 c 33 25.582 m 
33.828 25.582 34.5 24.91 34.5 24.082 c 34.5 23.254 33.828 22.582 33 22.582
 c 32.172 22.582 31.5 23.254 31.5 24.082 c 31.5 24.91 32.172 25.582 33 25.582
 c 13.5 16.582 m 16.5 16.582 l 16.5 19.582 l 19.5 19.582 l 19.5 22.582 l
 16.5 22.582 l 16.5 25.582 l 13.5 25.582 l 13.5 22.582 l 10.5 22.582 l 10.5
 19.582 l 13.5 19.582 l h
13.5 16.582 m f
9.152 9.781 m 9.051 9.395 9.102 8.984 9.301 8.641 c 9.5 8.297 9.828 8.043
 10.215 7.941 c 16.012 6.387 l 16.414 6.281 16.844 6.344 17.195 6.566 c 
17.547 6.789 17.793 7.148 17.871 7.559 c 19.836 7.32 21.922 7.207 24 7.207
 c 26.16 7.207 28.328 7.328 30.359 7.586 c 30.43 7.168 30.672 6.801 31.027
 6.574 c 31.383 6.348 31.82 6.277 32.227 6.387 c 38.023 7.941 l 38.469 8.062
 38.836 8.383 39.016 8.809 c 39.195 9.238 39.168 9.723 38.941 10.129 c 39.363
 10.402 39.738 10.699 40.059 11.02 c 41.281 12.242 42.398 14.168 43.344 
16.336 c 44.305 18.535 45.141 21.109 45.758 23.734 c 46.375 26.359 46.777
 29.074 46.852 31.551 c 46.922 34 46.676 36.355 45.867 38.18 c 45.113 39.859
 43.363 40.867 41.531 40.672 c 39.625 40.473 38.188 39.488 36.992 38.352
 c 36.258 37.656 35.504 36.773 34.773 35.926 c 34.395 35.48 34.023 35.051
 33.668 34.656 c 31.484 32.246 28.879 30.074 23.996 30.074 c 19.113 30.074
 16.508 32.242 14.324 34.656 c 13.969 35.051 13.598 35.48 13.219 35.926 
c 12.488 36.773 11.738 37.652 11 38.352 c 9.805 39.492 8.367 40.469 6.461
 40.672 c 6.469 40.672 l 4.637 40.867 2.887 39.859 2.133 38.18 c 1.324 36.355
 1.078 33.996 1.145 31.551 c 1.215 29.074 1.625 26.359 2.238 23.734 c 2.855
 21.109 3.695 18.535 4.652 16.336 c 5.598 14.172 6.715 12.242 7.934 11.02
 c 7.938 11.02 l 8.328 10.633 8.766 10.297 9.238 10.016 c 9.152 9.777 l 
h
15.262 11.016 m 12.629 11.57 10.855 12.344 10.062 13.141 c 9.234 13.969
 8.301 15.488 7.406 17.535 c 6.461 19.762 5.711 22.066 5.164 24.422 c 4.59
 26.785 4.246 29.203 4.145 31.637 c 4.078 33.902 4.332 35.742 4.875 36.965
 c 5.102 37.453 5.617 37.746 6.152 37.688 c 7.133 37.586 7.98 37.09 8.938
 36.18 c 9.574 35.574 10.137 34.91 10.781 34.156 c 11.18 33.688 11.609 33.188
 12.102 32.645 c 14.582 29.906 17.934 27.082 24 27.082 c 30.066 27.082 33.418
 29.906 35.895 32.648 c 36.387 33.191 36.816 33.691 37.215 34.16 c 37.855
 34.914 38.426 35.574 39.059 36.184 c 40.012 37.094 40.863 37.586 41.844
 37.691 c 41.848 37.688 l 42.383 37.746 42.898 37.457 43.125 36.965 c 43.664
 35.742 43.922 33.906 43.855 31.637 c 43.754 29.203 43.41 26.785 42.836 
24.422 c 42.289 22.066 41.539 19.762 40.594 17.535 c 39.699 15.488 38.766
 13.965 37.938 13.141 c 37.145 12.344 35.371 11.57 32.738 11.016 c 30.188
 10.48 27.105 10.207 24 10.207 c 20.891 10.207 17.812 10.48 15.262 11.016
 c f
Q Q
showpage
%%Trailer
%%EOF
