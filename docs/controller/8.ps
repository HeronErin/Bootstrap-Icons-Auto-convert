%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.312 2.262 m 4.312 2.512 3.938 2.512 3.938 2.262 c 3.938 2.012 4.312 2.012
 4.312 2.262 c 3.75 2.824 m 4 2.824 4 2.449 3.75 2.449 c 3.5 2.449 3.5 2.824
 3.75 2.824 c 4.688 2.637 m 4.688 2.887 4.312 2.887 4.312 2.637 c 4.312 
2.387 4.688 2.387 4.688 2.637 c 4.125 3.199 m 4.375 3.199 4.375 2.824 4.125
 2.824 c 3.875 2.824 3.875 3.199 4.125 3.199 c 1.688 2.074 m 2.062 2.074
 l 2.062 2.449 l 2.438 2.449 l 2.438 2.824 l 2.062 2.824 l 2.062 3.199 l
 1.688 3.199 l 1.688 2.824 l 1.312 2.824 l 1.312 2.449 l 1.688 2.449 l h
1.688 2.074 m f
1.145 1.223 m 1.117 1.121 1.176 1.02 1.277 0.992 c 2 0.797 l 2.105 0.77
 2.215 0.836 2.234 0.945 c 2.48 0.914 2.742 0.902 3 0.902 c 3.27 0.902 3.543
 0.918 3.797 0.949 c 3.812 0.84 3.922 0.77 4.027 0.797 c 4.75 0.992 l 4.754
 0.992 l 4.871 1.023 4.93 1.16 4.867 1.266 c 4.922 1.301 4.965 1.336 5.008
 1.379 c 5.16 1.531 5.301 1.773 5.418 2.043 c 5.539 2.316 5.645 2.641 5.719
 2.969 c 5.797 3.297 5.848 3.637 5.855 3.945 c 5.863 4.25 5.832 4.547 5.734
 4.773 c 5.641 4.984 5.422 5.109 5.191 5.082 c 4.953 5.059 4.773 4.934 4.625
 4.793 c 4.531 4.707 4.438 4.598 4.348 4.488 c 4.301 4.434 4.254 4.379 4.211
 4.328 c 3.938 4.027 3.613 3.754 3 3.754 c 2.391 3.754 2.062 4.023 1.789
 4.328 c 1.746 4.379 1.699 4.43 1.652 4.488 c 1.562 4.594 1.469 4.703 1.375
 4.793 c 1.227 4.934 1.047 5.059 0.809 5.082 c 0.578 5.109 0.359 4.984 0.266
 4.773 c 0.164 4.547 0.133 4.25 0.141 3.945 c 0.148 3.637 0.199 3.297 0.277
 2.969 c 0.355 2.641 0.461 2.32 0.578 2.043 c 0.695 1.773 0.836 1.531 0.988
 1.379 c 0.992 1.379 l 1.043 1.328 1.094 1.285 1.156 1.25 c 1.145 1.219 
l h
1.906 1.379 m 1.578 1.449 1.355 1.547 1.258 1.645 c 1.156 1.746 1.039 1.938
 0.926 2.195 c 0.926 2.191 l 0.809 2.469 0.715 2.758 0.645 3.051 c 0.574
 3.348 0.531 3.652 0.52 3.953 c 0.512 4.234 0.543 4.465 0.609 4.617 c 0.609
 4.621 l 0.637 4.684 0.703 4.719 0.77 4.711 c 0.891 4.699 1 4.637 1.117 
4.523 c 1.195 4.449 1.266 4.363 1.348 4.27 c 1.398 4.211 1.449 4.148 1.512
 4.082 c 1.824 3.738 2.242 3.387 3 3.387 c 3.758 3.387 4.176 3.738 4.488
 4.082 c 4.551 4.148 4.602 4.211 4.652 4.27 c 4.734 4.363 4.805 4.445 4.883
 4.523 c 5.004 4.637 5.109 4.699 5.23 4.711 c 5.297 4.719 5.363 4.684 5.391
 4.621 c 5.457 4.469 5.488 4.238 5.48 3.957 c 5.48 3.953 l 5.469 3.652 5.426
 3.348 5.355 3.051 c 5.285 2.758 5.191 2.469 5.074 2.191 c 4.961 1.938 4.844
 1.746 4.742 1.641 c 4.645 1.543 4.422 1.445 4.094 1.375 c 3.773 1.309 3.391
 1.273 3 1.273 c 2.613 1.273 2.227 1.309 1.906 1.375 c f
Q Q
showpage
%%Trailer
%%EOF
