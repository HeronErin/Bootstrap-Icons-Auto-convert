%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
8.625 4.52 m 8.625 4.727 8.457 4.895 8.25 4.895 c 8.043 4.895 7.875 4.727
 7.875 4.52 c 7.875 4.312 8.043 4.145 8.25 4.145 c 8.457 4.145 8.625 4.312
 8.625 4.52 c 7.5 5.645 m 7.707 5.645 7.875 5.477 7.875 5.27 c 7.875 5.062
 7.707 4.895 7.5 4.895 c 7.293 4.895 7.125 5.062 7.125 5.27 c 7.125 5.477
 7.293 5.645 7.5 5.645 c 9.375 5.27 m 9.375 5.477 9.207 5.645 9 5.645 c 
8.793 5.645 8.625 5.477 8.625 5.27 c 8.625 5.062 8.793 4.895 9 4.895 c 9.207
 4.895 9.375 5.062 9.375 5.27 c 8.25 6.395 m 8.457 6.395 8.625 6.227 8.625
 6.02 c 8.625 5.812 8.457 5.645 8.25 5.645 c 8.043 5.645 7.875 5.812 7.875
 6.02 c 7.875 6.227 8.043 6.395 8.25 6.395 c 3.375 4.145 m 4.125 4.145 l
 4.125 4.895 l 4.875 4.895 l 4.875 5.645 l 4.125 5.645 l 4.125 6.395 l 3.375
 6.395 l 3.375 5.645 l 2.625 5.645 l 2.625 4.895 l 3.375 4.895 l h
3.375 4.145 m f
2.289 2.445 m 2.262 2.348 2.277 2.246 2.324 2.16 c 2.375 2.074 2.457 2.012
 2.555 1.984 c 4.004 1.598 l 4.102 1.57 4.211 1.586 4.301 1.641 c 4.387 
1.695 4.449 1.785 4.469 1.891 c 4.961 1.832 5.48 1.805 6 1.805 c 6.539 1.805
 7.082 1.836 7.59 1.898 c 7.59 1.895 l 7.609 1.793 7.668 1.699 7.758 1.645
 c 7.848 1.586 7.953 1.57 8.055 1.598 c 9.504 1.984 l 9.617 2.016 9.711 
2.094 9.754 2.203 c 9.801 2.309 9.793 2.43 9.734 2.531 c 9.84 2.598 9.934
 2.672 10.016 2.754 c 10.32 3.059 10.602 3.543 10.836 4.082 c 11.074 4.633
 11.285 5.273 11.441 5.93 c 11.598 6.586 11.695 7.266 11.715 7.883 c 11.734
 8.496 11.672 9.086 11.469 9.539 c 11.465 9.547 l 11.277 9.965 10.84 10.215
 10.383 10.168 c 9.906 10.117 9.547 9.871 9.25 9.59 c 9.066 9.414 8.879 
9.195 8.695 8.984 c 8.602 8.875 8.508 8.766 8.418 8.668 c 7.871 8.066 7.219
 7.523 6 7.523 c 4.781 7.523 4.129 8.066 3.582 8.668 c 3.492 8.766 3.402
 8.875 3.305 8.984 c 3.121 9.195 2.934 9.414 2.75 9.59 c 2.453 9.875 2.094
 10.121 1.617 10.168 c 1.16 10.215 0.723 9.965 0.535 9.547 c 0.332 9.09 
0.27 8.5 0.289 7.891 c 0.309 7.27 0.41 6.594 0.562 5.938 c 0.719 5.281 0.926
 4.637 1.168 4.09 c 1.402 3.547 1.684 3.066 1.988 2.762 c 1.984 2.754 l 
2.082 2.66 2.191 2.574 2.309 2.504 c h
3.816 2.754 m 3.16 2.895 2.715 3.086 2.516 3.285 c 2.309 3.492 2.074 3.871
 1.852 4.383 c 1.617 4.941 1.43 5.516 1.289 6.105 c 1.148 6.695 1.062 7.301
 1.035 7.91 c 1.02 8.477 1.082 8.938 1.219 9.242 c 1.277 9.363 1.402 9.438
 1.539 9.422 c 1.785 9.395 1.996 9.273 2.234 9.047 c 2.395 8.895 2.535 8.73
 2.695 8.543 c 2.797 8.426 2.902 8.301 3.023 8.164 c 3.645 7.477 4.484 6.77
 6 6.77 c 7.516 6.77 8.355 7.477 8.973 8.16 c 9.094 8.297 9.203 8.422 9.301
 8.539 c 9.461 8.727 9.602 8.895 9.762 9.043 c 10 9.27 10.211 9.395 10.457
 9.422 c 10.461 9.422 l 10.598 9.438 10.723 9.363 10.781 9.242 c 10.918 
8.938 10.98 8.477 10.965 7.91 c 10.938 7.301 10.852 6.695 10.711 6.105 c
 10.57 5.516 10.383 4.941 10.148 4.383 c 9.926 3.871 9.691 3.492 9.484 3.285
 c 9.285 3.086 8.844 2.895 8.184 2.754 c 7.547 2.621 6.777 2.551 6 2.551
 c 5.223 2.551 4.453 2.617 3.816 2.754 c f
Q Q
showpage
%%Trailer
%%EOF
