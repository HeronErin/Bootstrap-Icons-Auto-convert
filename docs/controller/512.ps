%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 9 58 375 334
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 9 58 375 334
384 384 cairo_set_page_size
%%EndPageSetup
q 9 58 366 276 rectclip
1 0 0 -1 0 384 cm q
0 g
276 144.648 m 276 151.277 270.629 156.648 264 156.648 c 257.371 156.648
 252 151.277 252 144.648 c 252 138.02 257.371 132.648 264 132.648 c 270.629
 132.648 276 138.02 276 144.648 c 240 180.648 m 246.629 180.648 252 175.277
 252 168.648 c 252 162.02 246.629 156.648 240 156.648 c 233.371 156.648 
228 162.02 228 168.648 c 228 175.277 233.371 180.648 240 180.648 c 300 168.648
 m 300 175.277 294.629 180.648 288 180.648 c 281.371 180.648 276 175.277
 276 168.648 c 276 162.02 281.371 156.648 288 156.648 c 294.629 156.648 
300 162.02 300 168.648 c 264 204.648 m 270.629 204.648 276 199.277 276 192.648
 c 276 186.02 270.629 180.648 264 180.648 c 257.371 180.648 252 186.02 252
 192.648 c 252 199.277 257.371 204.648 264 204.648 c 108 132.648 m 132 132.648
 l 132 156.648 l 156 156.648 l 156 180.648 l 132 180.648 l 132 204.648 l
 108 204.648 l 108 180.648 l 84 180.648 l 84 156.648 l 108 156.648 l h
108 132.648 m f
73.223 78.238 m 72.395 75.164 72.828 71.883 74.422 69.121 c 76.016 66.363
 78.641 64.348 81.719 63.527 c 128.086 51.094 l 128.09 51.098 l 131.309 
50.238 134.746 50.758 137.566 52.535 c 140.391 54.309 142.348 57.18 142.969
 60.457 c 158.688 58.562 175.367 57.648 192 57.648 c 209.281 57.648 226.633
 58.633 242.879 60.672 c 243.449 57.344 245.391 54.41 248.23 52.59 c 251.07
 50.766 254.547 50.223 257.809 51.098 c 304.176 63.531 l 304.176 63.527 
l 307.762 64.488 310.699 67.055 312.137 70.477 c 313.574 73.898 313.348 
77.793 311.52 81.023 c 314.895 83.199 317.879 85.574 320.473 88.152 c 330.266
 97.945 339.191 113.352 346.754 130.68 c 354.434 148.273 361.129 168.863
 366.074 189.863 c 371.02 210.863 374.234 232.582 374.809 252.406 c 375.383
 271.992 373.395 290.855 366.938 305.445 c 366.938 305.449 l 363.992 312
 359.055 317.453 352.824 321.031 c 346.598 324.605 339.398 326.125 332.258
 325.367 c 316.992 323.758 305.496 315.91 295.945 306.816 c 290.066 301.25
 284.043 294.191 278.211 287.426 c 275.188 283.875 272.211 280.418 269.379
 277.273 c 251.906 257.977 231.051 240.625 192.004 240.625 c 152.957 240.625
 132.102 257.977 114.629 277.273 c 111.773 280.418 108.82 283.875 105.797
 287.426 c 99.965 294.195 93.941 301.227 88.062 306.816 c 78.512 315.938
 67.016 323.762 51.75 325.367 c 51.742 325.367 l 44.602 326.125 37.402 324.605
 31.176 321.031 c 24.945 317.453 20.008 312 17.062 305.449 c 10.582 290.855
 8.613 271.969 9.168 252.41 c 9.742 232.586 13.008 210.891 17.93 189.867
 c 22.875 168.867 29.594 148.273 37.25 130.684 c 44.809 113.355 53.738 97.949
 63.508 88.156 c 63.504 88.152 l 66.637 85.066 70.125 82.367 73.895 80.113
 c 73.223 78.219 l h
122.086 88.125 m 101.039 92.566 86.828 98.758 80.492 105.117 c 73.867 111.742
 66.402 123.91 59.254 140.277 c 59.258 140.281 l 51.699 158.09 45.691 176.516
 41.305 195.359 c 36.707 214.297 33.984 233.637 33.168 253.105 c 32.641 
271.227 34.656 285.938 39 295.73 c 39 295.727 l 40.824 299.637 44.934 301.953
 49.223 301.488 c 57.07 300.672 63.863 296.711 71.52 289.441 c 76.609 284.594
 81.121 279.289 86.281 273.266 c 89.473 269.523 92.906 265.512 96.84 261.168
 c 116.664 239.258 143.473 216.648 192 216.648 c 240.527 216.648 267.336
 239.258 287.16 261.168 c 291.098 265.512 294.527 269.52 297.719 273.266
 c 302.855 279.289 307.391 284.594 312.48 289.441 c 320.113 296.715 326.906
 300.672 334.777 301.512 c 339.07 301.973 343.184 299.648 345 295.727 c 
349.32 285.934 351.359 271.246 350.832 253.102 c 350.832 253.105 l 350.016
 233.637 347.293 214.297 342.695 195.359 c 338.309 176.516 332.301 158.09
 324.742 140.281 c 317.59 123.914 310.102 111.723 303.504 105.121 c 297.168
 98.762 282.961 92.57 261.91 88.129 c 241.512 83.832 216.863 81.648 192 
81.648 c 167.137 81.648 142.488 83.832 122.09 88.129 c f
Q Q
showpage
%%Trailer
%%EOF
