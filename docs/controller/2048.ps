%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 36 233 1500 1334
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 36 233 1500 1334
1536 1536 cairo_set_page_size
%%EndPageSetup
q 36 233 1464 1101 rectclip
1 0 0 -1 0 1536 cm q
0 g
1104 578.594 m 1104 595.742 1094.852 611.586 1080 620.16 c 1065.148 628.734
 1046.852 628.734 1032 620.16 c 1017.148 611.586 1008 595.742 1008 578.594
 c 1008 561.441 1017.148 545.598 1032 537.023 c 1046.852 528.449 1065.148
 528.449 1080 537.023 c 1094.852 545.598 1104 561.441 1104 578.594 c 960
 722.594 m 977.148 722.594 992.996 713.441 1001.57 698.594 c 1010.145 683.742
 1010.145 665.441 1001.57 650.594 c 992.996 635.742 977.148 626.594 960 
626.594 c 942.852 626.594 927.004 635.742 918.43 650.594 c 909.855 665.441
 909.855 683.742 918.43 698.594 c 927.004 713.441 942.852 722.594 960 722.594
 c 1200 674.594 m 1200 691.742 1190.852 707.586 1176 716.16 c 1161.148 724.734
 1142.852 724.734 1128 716.16 c 1113.148 707.586 1104 691.742 1104 674.594
 c 1104 657.441 1113.148 641.598 1128 633.023 c 1142.852 624.449 1161.148
 624.449 1176 633.023 c 1190.852 641.598 1200 657.441 1200 674.594 c 1056
 818.594 m 1073.148 818.594 1088.996 809.441 1097.57 794.594 c 1106.145 
779.742 1106.145 761.441 1097.57 746.594 c 1088.996 731.742 1073.148 722.594
 1056 722.594 c 1038.852 722.594 1023.004 731.742 1014.43 746.594 c 1005.855
 761.441 1005.855 779.742 1014.43 794.594 c 1023.004 809.441 1038.852 818.594
 1056 818.594 c 432 530.594 m 528 530.594 l 528 626.594 l 624 626.594 l 
624 722.594 l 528 722.594 l 528 818.594 l 432 818.594 l 432 722.594 l 336
 722.594 l 336 626.594 l 432 626.594 l h
432 530.594 m f
292.895 312.961 m 289.586 300.648 291.305 287.527 297.68 276.488 c 304.059
 265.445 314.562 257.398 326.879 254.113 c 512.352 204.387 l 512.352 204.383
 l 525.242 200.949 538.98 203.031 550.27 210.137 c 561.562 217.238 569.387
 228.719 571.871 241.824 c 634.75 234.238 701.473 230.594 768 230.594 c 
837.121 230.594 906.527 234.531 971.52 242.691 c 971.52 242.688 l 973.789
 229.379 981.559 217.645 992.922 210.355 c 1004.281 203.066 1018.191 200.898
 1031.23 204.383 c 1216.703 254.109 l 1216.703 254.113 l 1231.047 257.953
 1242.805 268.211 1248.551 281.902 c 1254.297 295.59 1253.387 311.172 1246.078
 324.098 c 1259.582 332.801 1271.52 342.305 1281.887 352.609 c 1321.055 
391.777 1356.766 453.41 1387.008 522.723 c 1417.727 593.09 1444.512 675.457
 1464.289 759.457 c 1484.066 843.457 1496.93 930.336 1499.234 1009.633 c
 1501.539 1087.969 1493.57 1163.426 1467.746 1221.793 c 1467.742 1221.793
 l 1455.969 1247.996 1436.215 1269.812 1411.301 1284.121 c 1386.391 1298.43
 1357.594 1304.504 1329.023 1301.473 c 1267.969 1295.039 1221.984 1263.648
 1183.777 1227.266 c 1160.258 1204.992 1136.16 1176.77 1112.832 1149.699
 c 1100.734 1135.492 1088.832 1121.668 1077.504 1109.09 c 1007.617 1031.906
 924.191 962.496 768 962.496 c 611.809 962.496 528.383 1031.902 458.496 
1109.09 c 447.07 1121.664 435.266 1135.488 423.168 1149.699 c 399.84 1176.77
 375.742 1204.898 352.223 1227.266 c 314.016 1263.746 268.031 1295.043 206.977
 1301.473 c 178.406 1304.504 149.609 1298.43 124.699 1284.121 c 99.785 1269.812
 80.031 1247.996 68.258 1221.793 c 42.336 1163.426 34.465 1087.871 36.672
 1009.633 c 38.977 930.336 52.031 843.555 71.711 759.457 c 91.488 675.457
 118.367 593.09 148.992 522.723 c 179.23 453.41 214.945 391.777 254.016 
352.609 c 266.543 340.27 280.496 329.477 295.586 320.449 c 292.898 312.863
 l h
488.352 352.512 m 404.16 370.273 347.328 395.039 321.984 420.48 c 295.488
 446.977 265.633 495.648 237.023 561.121 c 206.789 632.355 182.766 706.07
 165.215 781.441 c 146.832 857.18 135.934 934.543 132.672 1012.414 c 130.559
 1084.895 138.625 1143.742 156 1182.91 c 159.559 1190.539 165.414 1196.863
 172.75 1200.996 c 180.082 1205.129 188.527 1206.863 196.895 1205.953 c 
228.285 1202.688 255.453 1186.848 286.078 1157.762 c 306.43 1138.371 324.477
 1117.152 345.117 1093.059 c 357.887 1078.082 371.613 1062.051 387.355 1044.676
 c 466.656 957.023 573.887 866.594 768 866.594 c 962.113 866.594 1069.344
 957.027 1148.641 1044.672 c 1164.383 1062.047 1178.113 1078.078 1190.879
 1093.055 c 1211.422 1117.152 1229.566 1138.367 1249.918 1157.758 c 1280.445
 1186.848 1307.613 1202.688 1339.102 1206.047 c 1339.105 1206.047 l 1347.484
 1206.949 1355.934 1205.203 1363.27 1201.055 c 1370.605 1196.902 1376.457
 1190.559 1380 1182.91 c 1397.281 1143.742 1405.441 1084.988 1403.328 1012.414
 c 1400.066 934.543 1389.168 857.18 1370.785 781.441 c 1353.234 706.07 1329.211
 632.355 1298.977 561.121 c 1270.367 495.648 1240.418 446.883 1214.016 420.48
 c 1188.672 395.039 1131.84 370.273 1047.648 352.512 c 966.047 335.328 867.457
 326.59 768 326.59 c 668.543 326.59 569.953 335.324 488.352 352.512 c f
Q Q
showpage
%%Trailer
%%EOF
