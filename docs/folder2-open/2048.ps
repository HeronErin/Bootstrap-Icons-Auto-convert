%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 12 96 1524 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 12 96 1524 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 12 96 1512 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 336 m 96 297.809 111.172 261.184 138.176 234.176 c 165.184 207.172 201.809
 192 240 192 c 505.344 192 l 597.312 192 674.305 245.762 727.199 305.664
 c 766.559 350.207 814.078 384 864 384 c 1296 384 l 1334.191 384 1370.816
 399.172 1397.824 426.176 c 1424.828 453.184 1440 489.809 1440 528 c 1440
 589.441 l 1494.719 614.883 1530.238 673.539 1522.176 737.855 c 1460.734
 1229.758 l 1460.734 1229.762 l 1453.477 1287.844 1425.242 1341.273 1381.34
 1379.992 c 1337.441 1418.711 1280.902 1440.055 1222.367 1440 c 313.535 
1440 l 255.035 1440.008 198.543 1418.645 154.684 1379.93 c 110.824 1341.215
 82.613 1287.812 75.359 1229.762 c 13.918 737.859 l 13.922 737.855 l 10.137
 707.613 16.043 676.953 30.793 650.281 c 45.543 623.613 68.375 602.309 96
 589.441 c h
192 576 m 1344 576 l 1344 528 l 1344 515.27 1338.941 503.062 1329.941 494.059
 c 1320.938 485.059 1308.73 480 1296 480 c 864 480 l 771.457 480 699.84 
419.617 655.297 369.215 c 611.902 320.062 558.719 288 505.344 288 c 240 
288 l 227.27 288 215.062 293.059 206.059 302.059 c 197.059 311.062 192 323.27
 192 336 c h
156.77 672 m 143.004 672.004 129.902 677.918 120.793 688.238 c 111.684 
698.559 107.445 712.293 109.152 725.953 c 170.594 1217.855 l 174.945 1252.691
 191.875 1284.738 218.199 1307.969 c 244.523 1331.199 278.426 1344.012 313.535
 1344 c 1222.465 1344 l 1257.574 1344.012 1291.477 1331.199 1317.801 1307.969
 c 1344.125 1284.738 1361.055 1252.691 1365.406 1217.855 c 1426.848 725.953
 l 1428.555 712.293 1424.316 698.559 1415.207 688.238 c 1406.098 677.918
 1392.996 672.004 1379.23 672 c h
156.77 672 m f
Q Q
showpage
%%Trailer
%%EOF
