%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 3 24 381 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 3 24 381 336
384 384 cairo_set_page_size
%%EndPageSetup
q 3 24 378 312 rectclip
1 0 0 -1 0 384 cm q
0 g
24 84 m 24 74.453 27.793 65.297 34.543 58.543 c 41.297 51.793 50.453 48
 60 48 c 126.336 48 l 149.328 48 168.574 61.441 181.801 76.414 c 191.641
 87.551 203.52 96 216 96 c 324 96 l 333.547 96 342.703 99.793 349.457 106.543
 c 356.207 113.297 360 122.453 360 132 c 360 147.359 l 373.68 153.719 382.559
 168.383 380.543 184.465 c 365.184 307.441 l 363.371 321.961 356.309 335.316
 345.336 345 c 334.359 354.68 320.227 360.012 305.594 360 c 78.383 360 l
 63.758 360 49.637 354.66 38.672 344.98 c 27.707 335.305 20.652 321.953 
18.84 307.441 c 3.48 184.465 l 2.535 176.902 4.012 169.238 7.699 162.57 
c 11.387 155.902 17.094 150.578 24 147.359 c h
48 144 m 336 144 l 336 132 l 336 128.816 334.734 125.766 332.484 123.516
 c 330.234 121.266 327.184 120 324 120 c 216 120 l 192.863 120 174.961 104.902
 163.824 92.305 c 152.977 80.016 139.68 72 126.336 72 c 60 72 l 53.371 72
 48 77.371 48 84 c h
39.191 168 m 35.75 168 32.477 169.48 30.199 172.059 c 27.922 174.641 26.859
 178.074 27.289 181.488 c 42.648 304.465 l 43.738 313.172 47.969 321.184
 54.551 326.992 c 61.133 332.801 69.605 336.004 78.383 336 c 305.617 336
 l 314.395 336.004 322.867 332.801 329.449 326.992 c 336.031 321.184 340.262
 313.172 341.352 304.465 c 356.711 181.488 l 357.141 178.074 356.078 174.641
 353.801 172.059 c 351.523 169.48 348.25 168 344.809 168 c h
39.191 168 m f
Q Q
showpage
%%Trailer
%%EOF
