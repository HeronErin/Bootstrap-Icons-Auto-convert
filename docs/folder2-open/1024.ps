%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 6 48 762 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 6 48 762 672
768 768 cairo_set_page_size
%%EndPageSetup
q 6 48 756 624 rectclip
1 0 0 -1 0 768 cm q
0 g
48 168 m 48 148.906 55.586 130.59 69.09 117.09 c 82.59 103.586 100.906 
96 120 96 c 252.672 96 l 298.656 96 337.152 122.879 363.602 152.832 c 383.281
 175.105 407.039 192 432 192 c 648 192 l 667.094 192 685.41 199.586 698.91
 213.09 c 712.414 226.59 720 244.906 720 264 c 720 294.719 l 747.359 307.438
 765.121 336.766 761.09 368.926 c 730.371 614.879 l 730.367 614.879 l 726.738
 643.922 712.621 670.637 690.672 689.996 c 668.719 709.355 640.453 720.027
 611.184 720 c 156.77 720 l 127.516 720.004 99.27 709.324 77.34 689.965 
c 55.41 670.605 41.309 643.906 37.68 614.879 c 6.961 368.926 l 6.961 368.93
 l 5.066 353.809 8.02 338.477 15.395 325.141 c 22.77 311.805 34.188 301.156
 48 294.719 c h
96 288 m 672 288 l 672 264 l 672 257.637 669.473 251.531 664.969 247.031
 c 660.469 242.527 654.363 240 648 240 c 432 240 l 385.727 240 349.922 209.809
 327.648 184.609 c 305.953 160.031 279.359 144 252.672 144 c 120 144 l 113.637
 144 107.531 146.527 103.031 151.031 c 98.527 155.531 96 161.637 96 168 
c h
78.383 336 m 71.5 336 64.949 338.957 60.398 344.117 c 55.844 349.277 53.723
 356.148 54.574 362.977 c 85.293 608.93 l 85.297 608.93 l 87.473 626.348
 95.938 642.371 109.102 653.984 c 122.262 665.602 139.215 672.008 156.77
 672 c 611.234 672 l 611.23 672 l 628.785 672.008 645.738 665.602 658.898
 653.984 c 672.062 642.371 680.527 626.348 682.703 608.93 c 713.422 362.977
 l 713.426 362.977 l 714.277 356.148 712.156 349.277 707.602 344.117 c 703.051
 338.957 696.5 336 689.617 336 c h
78.383 336 m f
Q Q
showpage
%%Trailer
%%EOF
