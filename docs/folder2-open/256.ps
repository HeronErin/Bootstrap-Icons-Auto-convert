%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 1 12 191 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 1 12 191 168
192 192 cairo_set_page_size
%%EndPageSetup
q 1 12 190 156 rectclip
1 0 0 -1 0 192 cm q
0 g
12 42 m 12 37.227 13.895 32.648 17.273 29.273 c 20.648 25.895 25.227 24
 30 24 c 63.168 24 l 74.664 24 84.289 30.719 90.898 38.207 c 95.82 43.777
 101.762 48 108 48 c 162 48 l 166.773 48 171.352 49.895 174.727 53.273 c
 178.105 56.648 180 61.227 180 66 c 180 73.68 l 186.84 76.859 191.281 84.191
 190.273 92.23 c 182.594 153.719 l 181.684 160.98 178.156 167.66 172.668
 172.5 c 167.18 177.34 160.113 180.008 152.797 180 c 39.191 180 l 31.879
 180 24.816 177.332 19.336 172.492 c 13.852 167.652 10.328 160.977 9.422
 153.719 c 1.742 92.23 l 1.738 92.23 l 1.266 88.453 2.004 84.617 3.848 81.285
 c 5.691 77.953 8.547 75.289 12 73.68 c h
24 72 m 168 72 l 168 66 l 168 64.41 167.367 62.883 166.242 61.758 c 165.117
 60.633 163.59 60 162 60 c 108 60 l 96.434 60 87.48 52.453 81.91 46.152 
c 76.488 40.008 69.84 36 63.168 36 c 30 36 l 26.688 36 24 38.688 24 42 c
 h
19.598 84 m 17.875 84 16.238 84.738 15.098 86.031 c 13.961 87.32 13.43 
89.035 13.645 90.742 c 21.324 152.23 l 21.867 156.586 23.984 160.594 27.273
 163.496 c 30.566 166.398 34.805 168 39.191 168 c 152.809 168 l 157.195 
168 161.434 166.398 164.727 163.496 c 168.016 160.594 170.133 156.586 170.676
 152.23 c 178.355 90.742 l 178.57 89.035 178.039 87.32 176.902 86.031 c 
175.762 84.738 174.125 84 172.402 84 c h
19.598 84 m f
Q Q
showpage
%%Trailer
%%EOF
