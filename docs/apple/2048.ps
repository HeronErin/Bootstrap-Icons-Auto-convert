%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 144 0 1392 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 144 0 1392 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 144 0 1248 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1073.473 0.77 m 1070.207 -2.879 952.609 2.207 850.273 113.281 c 747.938
 224.258 763.68 351.555 765.984 354.816 c 768.289 358.082 911.906 363.168
 1003.586 234.047 c 1095.266 104.926 1076.738 4.512 1073.473 0.766 c 1391.617
 1127.133 m 1387.008 1117.918 1168.418 1008.668 1188.77 798.621 c 1209.121
 588.574 1349.57 530.879 1351.777 524.637 c 1353.984 518.398 1294.465 448.797
 1231.395 413.566 c 1231.391 413.566 l 1185.074 388.754 1133.824 374.523
 1081.344 371.902 c 1070.977 371.613 1034.977 362.781 960.961 383.039 c 
912.191 396.383 802.273 439.582 772.031 441.312 c 741.695 443.039 651.457
 391.199 554.398 377.473 c 492.285 365.473 426.43 390.047 379.293 408.961
 c 332.254 427.777 242.781 481.344 180.188 623.715 c 117.594 765.988 150.332
 991.395 173.754 1061.477 c 197.18 1131.555 233.754 1246.18 295.961 1329.891
 c 351.258 1424.355 424.602 1489.922 455.227 1512.195 c 485.852 1534.469
 572.25 1549.25 632.156 1518.629 c 680.348 1489.062 767.324 1472.07 801.691
 1473.316 c 835.965 1474.562 903.547 1488.102 972.762 1525.059 c 1027.578
 1543.969 1079.418 1536.098 1131.355 1514.98 c 1183.293 1493.766 1258.461
 1413.316 1346.203 1250.211 c 1379.484 1174.371 1394.617 1133.348 1391.609
 1127.141 c f
1073.473 0.77 m 1070.207 -2.879 952.609 2.207 850.273 113.281 c 747.938
 224.258 763.68 351.555 765.984 354.816 c 768.289 358.082 911.906 363.168
 1003.586 234.047 c 1095.266 104.926 1076.738 4.512 1073.473 0.766 c 1391.617
 1127.133 m 1387.008 1117.918 1168.418 1008.668 1188.77 798.621 c 1209.121
 588.574 1349.57 530.879 1351.777 524.637 c 1353.984 518.398 1294.465 448.797
 1231.395 413.566 c 1231.391 413.566 l 1185.074 388.754 1133.824 374.523
 1081.344 371.902 c 1070.977 371.613 1034.977 362.781 960.961 383.039 c 
912.191 396.383 802.273 439.582 772.031 441.312 c 741.695 443.039 651.457
 391.199 554.398 377.473 c 492.285 365.473 426.43 390.047 379.293 408.961
 c 332.254 427.777 242.781 481.344 180.188 623.715 c 117.594 765.988 150.332
 991.395 173.754 1061.477 c 197.18 1131.555 233.754 1246.18 295.961 1329.891
 c 351.258 1424.355 424.602 1489.922 455.227 1512.195 c 485.852 1534.469
 572.25 1549.25 632.156 1518.629 c 680.348 1489.062 767.324 1472.07 801.691
 1473.316 c 835.965 1474.562 903.547 1488.102 972.762 1525.059 c 1027.578
 1543.969 1079.418 1536.098 1131.355 1514.98 c 1183.293 1493.766 1258.461
 1413.316 1346.203 1250.211 c 1379.484 1174.371 1394.617 1133.348 1391.609
 1127.141 c f
Q Q
showpage
%%Trailer
%%EOF
