%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 0 697 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 0 697 768
768 768 cairo_set_page_size
%%EndPageSetup
q 72 0 625 768 rectclip
1 0 0 -1 0 768 cm q
0 g
536.734 0.383 m 535.105 -1.441 476.305 1.105 425.137 56.641 c 373.969 112.129
 381.84 175.777 382.992 177.41 c 384.145 179.043 455.953 181.586 501.793
 117.027 c 547.633 52.469 538.367 2.258 536.738 0.387 c 695.809 563.57 m
 693.504 558.961 584.207 504.34 594.383 399.312 c 604.559 294.289 674.781
 265.441 675.887 262.32 c 676.992 259.199 647.23 224.398 615.695 206.785
 c 592.535 194.375 566.914 187.262 540.672 185.953 c 535.488 185.809 517.488
 181.395 480.48 191.52 c 456.098 198.191 401.137 219.793 386.016 220.656
 c 370.848 221.52 325.727 195.602 277.199 188.734 c 246.145 182.734 213.215
 195.023 189.648 204.477 c 166.129 213.883 121.391 240.668 90.098 311.852
 c 58.801 382.988 75.168 495.691 86.883 530.73 c 98.594 565.77 116.883 623.082
 147.988 664.938 c 175.637 712.168 212.309 744.953 227.621 756.09 c 242.934
 767.227 286.133 774.617 316.086 759.305 c 340.184 744.52 383.672 736.023
 400.855 736.648 c 417.992 737.273 451.785 744.039 486.391 762.52 c 513.797
 771.977 539.719 768.039 565.688 757.48 c 591.656 746.871 629.238 706.648
 673.113 625.098 c 689.754 587.176 697.32 566.664 695.816 563.562 c f
536.734 0.383 m 535.105 -1.441 476.305 1.105 425.137 56.641 c 373.969 112.129
 381.84 175.777 382.992 177.41 c 384.145 179.043 455.953 181.586 501.793
 117.027 c 547.633 52.469 538.367 2.258 536.738 0.387 c 695.809 563.57 m
 693.504 558.961 584.207 504.34 594.383 399.312 c 604.559 294.289 674.781
 265.441 675.887 262.32 c 676.992 259.199 647.23 224.398 615.695 206.785
 c 592.535 194.375 566.914 187.262 540.672 185.953 c 535.488 185.809 517.488
 181.395 480.48 191.52 c 456.098 198.191 401.137 219.793 386.016 220.656
 c 370.848 221.52 325.727 195.602 277.199 188.734 c 246.145 182.734 213.215
 195.023 189.648 204.477 c 166.129 213.883 121.391 240.668 90.098 311.852
 c 58.801 382.988 75.168 495.691 86.883 530.73 c 98.594 565.77 116.883 623.082
 147.988 664.938 c 175.637 712.168 212.309 744.953 227.621 756.09 c 242.934
 767.227 286.133 774.617 316.086 759.305 c 340.184 744.52 383.672 736.023
 400.855 736.648 c 417.992 737.273 451.785 744.039 486.391 762.52 c 513.797
 771.977 539.719 768.039 565.688 757.48 c 591.656 746.871 629.238 706.648
 673.113 625.098 c 689.754 587.176 697.32 566.664 695.816 563.562 c f
Q Q
showpage
%%Trailer
%%EOF
