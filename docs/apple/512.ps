%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 36 0 348 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 36 0 348 384
384 384 cairo_set_page_size
%%EndPageSetup
q 36 0 312 384 rectclip
1 0 0 -1 0 384 cm q
0 g
268.367 0.191 m 267.551 -0.719 238.152 0.551 212.566 28.32 c 186.98 56.062
 190.918 87.887 191.496 88.703 c 192.07 89.52 227.977 90.793 250.895 58.512
 c 273.816 26.23 269.184 1.129 268.367 0.191 c 347.902 281.785 m 346.75 
279.48 292.102 252.168 297.191 199.656 c 302.281 147.145 337.391 132.719
 337.945 131.16 c 338.496 129.602 323.617 112.199 307.848 103.391 c 296.27
 97.188 283.457 93.629 270.336 92.977 c 267.742 92.906 258.742 90.695 240.238
 95.762 c 228.047 99.098 200.566 109.898 193.008 110.328 c 185.422 110.762
 162.863 97.801 138.602 94.367 c 123.074 91.367 106.609 97.512 94.824 102.238
 c 83.062 106.941 60.695 120.336 45.047 155.926 c 29.398 191.492 37.582 
247.848 43.438 265.367 c 49.293 282.887 58.438 311.543 73.988 332.473 c 
87.812 356.09 106.148 372.48 113.805 378.047 c 121.461 383.613 143.062 387.312
 158.035 379.656 c 170.082 372.266 191.828 368.016 200.418 368.328 c 208.984
 368.641 225.883 372.023 243.188 381.266 c 256.891 385.992 269.852 384.027
 282.836 378.746 c 295.82 373.441 314.613 353.332 336.547 312.555 c 344.867
 293.594 348.652 283.34 347.898 281.785 c f
268.367 0.191 m 267.551 -0.719 238.152 0.551 212.566 28.32 c 186.98 56.062
 190.918 87.887 191.496 88.703 c 192.07 89.52 227.977 90.793 250.895 58.512
 c 273.816 26.23 269.184 1.129 268.367 0.191 c 347.902 281.785 m 346.75 
279.48 292.102 252.168 297.191 199.656 c 302.281 147.145 337.391 132.719
 337.945 131.16 c 338.496 129.602 323.617 112.199 307.848 103.391 c 296.27
 97.188 283.457 93.629 270.336 92.977 c 267.742 92.906 258.742 90.695 240.238
 95.762 c 228.047 99.098 200.566 109.898 193.008 110.328 c 185.422 110.762
 162.863 97.801 138.602 94.367 c 123.074 91.367 106.609 97.512 94.824 102.238
 c 83.062 106.941 60.695 120.336 45.047 155.926 c 29.398 191.492 37.582 
247.848 43.438 265.367 c 49.293 282.887 58.438 311.543 73.988 332.473 c 
87.812 356.09 106.148 372.48 113.805 378.047 c 121.461 383.613 143.062 387.312
 158.035 379.656 c 170.082 372.266 191.828 368.016 200.418 368.328 c 208.984
 368.641 225.883 372.023 243.188 381.266 c 256.891 385.992 269.852 384.027
 282.836 378.746 c 295.82 373.441 314.613 353.332 336.547 312.555 c 344.867
 293.594 348.652 283.34 347.898 281.785 c f
Q Q
showpage
%%Trailer
%%EOF
