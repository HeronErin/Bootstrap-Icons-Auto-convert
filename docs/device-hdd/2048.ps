%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1152 240 m 1152 257.148 1142.852 272.996 1128 281.57 c 1113.148 290.145
 1094.852 290.145 1080 281.57 c 1065.148 272.996 1056 257.148 1056 240 c
 1056 222.852 1065.148 207.004 1080 198.43 c 1094.852 189.855 1113.148 189.855
 1128 198.43 c 1142.852 207.004 1152 222.852 1152 240 c 1152 1296 m 1152
 1313.148 1142.852 1328.996 1128 1337.57 c 1113.148 1346.145 1094.852 1346.145
 1080 1337.57 c 1065.148 1328.996 1056 1313.148 1056 1296 c 1056 1278.852
 1065.148 1263.004 1080 1254.43 c 1094.852 1245.855 1113.148 1245.855 1128
 1254.43 c 1142.852 1263.004 1152 1278.852 1152 1296 c 432 1344 m 449.148
 1344 464.996 1334.852 473.57 1320 c 482.145 1305.148 482.145 1286.852 473.57
 1272 c 464.996 1257.148 449.148 1248 432 1248 c 414.852 1248 399.004 1257.148
 390.43 1272 c 381.855 1286.852 381.855 1305.148 390.43 1320 c 399.004 1334.852
 414.852 1344 432 1344 c 480 240 m 480 257.148 470.852 272.996 456 281.57
 c 441.148 290.145 422.852 290.145 408 281.57 c 393.148 272.996 384 257.148
 384 240 c 384 222.852 393.148 207.004 408 198.43 c 422.852 189.855 441.148
 189.855 456 198.43 c 470.852 207.004 480 222.852 480 240 c 768 768 m 802.297
 768 833.988 749.703 851.137 720 c 868.289 690.297 868.289 653.703 851.137
 624 c 833.988 594.297 802.297 576 768 576 c 733.703 576 702.012 594.297
 684.863 624 c 667.711 653.703 667.711 690.297 684.863 720 c 702.012 749.703
 733.703 768 768 768 c f
1152 672 m 1152.012 772.805 1112.387 869.57 1041.676 941.414 c 970.965 
1013.254 874.84 1054.414 774.047 1056 c 722.496 1134.047 676.125 1201.441
 660.672 1216.992 c 633.938 1243.742 594.961 1254.199 558.426 1244.426 c
 521.891 1234.648 493.348 1206.121 483.547 1169.594 c 473.746 1133.062 484.176
 1094.078 510.91 1067.328 c 520.512 1057.922 548.926 1037.184 587.23 1010.879
 c 511.637 970.594 451.68 906.184 416.902 827.898 c 382.125 749.613 374.523
 661.945 395.305 578.844 c 416.086 495.738 464.055 421.973 531.59 369.27
 c 599.121 316.57 682.336 287.961 768 288 c 835.406 288 901.625 305.742 
960 339.445 c 1018.375 373.148 1066.852 421.625 1100.555 480 c 1134.258 
538.375 1152 604.594 1152 672 c 1056 672 m 1055.992 600.625 1029.477 531.793
 981.602 478.855 c 933.723 425.918 867.895 392.645 796.875 385.488 c 725.859
 378.328 654.715 397.801 597.238 440.121 c 539.762 482.441 500.047 544.598
 485.797 614.539 c 471.547 684.48 483.777 757.219 520.113 818.652 c 556.453
 880.09 614.309 925.84 682.465 947.039 c 746.496 904.801 816.48 859.68 870.145
 825.312 c 891.648 811.488 916.512 836.352 902.785 857.953 c 843.266 950.113
 l 904.355 933.57 958.297 897.367 996.75 847.098 c 1035.203 796.828 1056.027
 735.289 1056 672 c f
192 192 m 192 141.078 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078
 0 384 0 c 1152 0 l 1185.703 0 1218.812 8.871 1248 25.723 c 1277.188 42.574
 1301.426 66.812 1318.277 96 c 1335.129 125.188 1344 158.297 1344 192 c 
1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 1301.426 1469.188
 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703 1536 1152 
1536 c 384 1536 l 333.078 1536 284.242 1515.773 248.234 1479.766 c 212.227
 1443.758 192 1394.922 192 1344 c h
384 96 m 358.539 96 334.121 106.113 316.117 124.117 c 298.113 142.121 288
 166.539 288 192 c 288 1344 l 288 1369.461 298.113 1393.879 316.117 1411.883
 c 334.121 1429.887 358.539 1440 384 1440 c 1152 1440 l 1177.461 1440 1201.879
 1429.887 1219.883 1411.883 c 1237.887 1393.879 1248 1369.461 1248 1344 
c 1248 192 l 1248 166.539 1237.887 142.121 1219.883 124.117 c 1201.879 106.113
 1177.461 96 1152 96 c h
384 96 m f
Q Q
showpage
%%Trailer
%%EOF
