%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
72 15 m 72 16.656 70.656 18 69 18 c 67.344 18 66 16.656 66 15 c 66 13.344
 67.344 12 69 12 c 70.656 12 72 13.344 72 15 c 72 81 m 72 82.656 70.656 
84 69 84 c 67.344 84 66 82.656 66 81 c 66 79.344 67.344 78 69 78 c 70.656
 78 72 79.344 72 81 c 27 84 m 28.656 84 30 82.656 30 81 c 30 79.344 28.656
 78 27 78 c 25.344 78 24 79.344 24 81 c 24 82.656 25.344 84 27 84 c 30 15
 m 30 16.656 28.656 18 27 18 c 25.344 18 24 16.656 24 15 c 24 13.344 25.344
 12 27 12 c 28.656 12 30 13.344 30 15 c 48 48 m 51.312 48 54 45.312 54 42
 c 54 38.688 51.312 36 48 36 c 44.688 36 42 38.688 42 42 c 42 45.312 44.688
 48 48 48 c f
72 42 m 72 48.301 69.523 54.348 65.105 58.84 c 60.684 63.328 54.676 65.902
 48.379 66 c 45.156 70.879 42.258 75.09 41.293 76.062 c 38.707 78.648 34.52
 78.648 31.934 76.066 c 29.352 73.48 29.348 69.293 31.934 66.707 c 32.535
 66.117 34.309 64.824 36.703 63.18 c 30.355 59.797 25.863 53.75 24.453 46.699
 c 23.047 39.648 24.875 32.336 29.434 26.777 c 33.996 21.219 40.809 17.996
 48 18 c 54.363 18 60.469 20.527 64.969 25.031 c 69.473 29.531 72 35.637
 72 42 c 66 42 m 66 37.539 64.344 33.238 61.352 29.93 c 58.359 26.621 54.242
 24.539 49.805 24.094 c 45.367 23.645 40.918 24.863 37.328 27.508 c 33.734
 30.152 31.254 34.039 30.363 38.41 c 29.473 42.781 30.234 47.324 32.508 
51.164 c 34.777 55.004 38.395 57.863 42.652 59.191 c 46.656 56.551 51.027
 53.73 54.383 51.582 c 55.727 50.719 57.281 52.273 56.422 53.621 c 52.703
 59.383 l 56.523 58.348 59.895 56.086 62.297 52.945 c 64.699 49.801 66 45.957
 66 42 c f
12 12 m 12 5.371 17.371 0 24 0 c 72 0 l 75.184 0 78.234 1.266 80.484 3.516
 c 82.734 5.766 84 8.816 84 12 c 84 84 l 84 87.184 82.734 90.234 80.484 
92.484 c 78.234 94.734 75.184 96 72 96 c 24 96 l 17.371 96 12 90.629 12 
84 c h
24 6 m 20.688 6 18 8.688 18 12 c 18 84 l 18 85.59 18.633 87.117 19.758 
88.242 c 20.883 89.367 22.41 90 24 90 c 72 90 l 73.59 90 75.117 89.367 76.242
 88.242 c 77.367 87.117 78 85.59 78 84 c 78 12 l 78 10.41 77.367 8.883 76.242
 7.758 c 75.117 6.633 73.59 6 72 6 c h
24 6 m f
Q Q
showpage
%%Trailer
%%EOF
