%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.98 4.32 m 5.938 4.207 5.859 4.145 5.77 4.094 c 5.766 4.098 l 5.754 4.09
 5.738 4.082 5.723 4.074 c 5.641 4.031 l 5.359 3.883 5.137 3.691 4.984 3.469
 c 4.941 3.406 4.902 3.34 4.871 3.27 c 4.859 3.23 4.859 3.211 4.867 3.191
 c 4.867 3.195 l 4.879 3.18 4.891 3.164 4.906 3.156 c 4.953 3.125 5.004 
3.09 5.039 3.07 c 5.102 3.031 5.148 3 5.18 2.977 c 5.297 2.895 5.375 2.809
 5.426 2.715 c 5.422 2.715 l 5.496 2.578 5.504 2.422 5.449 2.277 c 5.371
 2.074 5.184 1.949 4.949 1.949 c 4.949 1.953 l 4.891 1.953 4.828 1.961 4.77
 1.977 c 4.773 1.84 4.77 1.691 4.758 1.551 c 4.715 1.047 4.539 0.781 4.355
 0.57 c 4.352 0.57 l 4.234 0.438 4.094 0.328 3.941 0.242 c 3.66 0.082 3.344
 0 3 0 c 2.656 0 2.34 0.082 2.062 0.242 c 1.906 0.328 1.77 0.441 1.652 0.574
 c 1.469 0.785 1.293 1.051 1.25 1.555 c 1.238 1.699 1.234 1.844 1.238 1.98
 c 1.23 1.977 l 1.172 1.961 1.109 1.953 1.051 1.953 c 0.82 1.953 0.629 2.078
 0.555 2.281 c 0.551 2.281 l 0.496 2.422 0.504 2.582 0.574 2.715 c 0.625
 2.812 0.707 2.898 0.82 2.977 c 0.852 3 0.898 3.027 0.961 3.07 c 1.09 3.152
 l 1.105 3.164 1.121 3.18 1.129 3.195 c 1.137 3.215 1.141 3.238 1.125 3.277
 c 1.094 3.344 1.059 3.41 1.016 3.473 c 0.867 3.691 0.652 3.875 0.379 4.023
 c 0.234 4.102 0.086 4.152 0.02 4.324 c -0.027 4.453 0.004 4.602 0.125 4.727
 c 0.172 4.773 0.223 4.812 0.277 4.844 c 0.281 4.844 l 0.398 4.906 0.523
 4.957 0.656 4.992 c 0.68 5 0.707 5.012 0.73 5.027 c 0.773 5.066 0.77 5.125
 0.828 5.211 c 0.859 5.254 0.895 5.293 0.938 5.324 c 1.062 5.41 1.199 5.414
 1.348 5.422 c 1.48 5.426 1.633 5.434 1.805 5.488 c 1.875 5.512 1.949 5.559
 2.035 5.609 c 2.242 5.734 2.523 5.91 2.996 5.91 c 3.469 5.91 3.754 5.734
 3.961 5.609 c 4.047 5.559 4.121 5.512 4.188 5.488 c 4.359 5.43 4.512 5.426
 4.645 5.422 c 4.793 5.418 4.93 5.41 5.055 5.324 c 5.062 5.324 l 5.113 5.285
 5.156 5.238 5.188 5.184 c 5.23 5.113 5.23 5.062 5.27 5.027 c 5.289 5.012
 5.316 5 5.34 4.996 c 5.473 4.961 5.602 4.91 5.719 4.844 c 5.777 4.812 5.832
 4.77 5.879 4.719 c 5.992 4.598 6.02 4.453 5.977 4.324 c 5.555 4.551 m 5.297
 4.691 5.129 4.676 4.996 4.762 c 4.883 4.836 4.949 4.992 4.867 5.047 c 4.766
 5.117 4.469 5.043 4.086 5.168 c 3.77 5.273 3.566 5.574 2.996 5.574 c 2.426
 5.574 2.23 5.273 1.906 5.168 c 1.523 5.043 1.227 5.117 1.125 5.047 c 1.043
 4.992 1.109 4.832 0.996 4.762 c 0.863 4.676 0.691 4.691 0.438 4.551 c 0.273
 4.461 0.367 4.406 0.422 4.379 c 1.352 3.93 1.5 3.234 1.504 3.184 c 1.512
 3.121 1.52 3.07 1.453 3.008 c 1.387 2.945 1.094 2.766 1.012 2.707 c 0.875
 2.613 0.816 2.52 0.859 2.402 c 0.891 2.32 0.965 2.293 1.043 2.293 c 1.047
 2.289 l 1.074 2.289 1.098 2.293 1.121 2.297 c 1.27 2.328 1.414 2.402 1.496
 2.422 c 1.508 2.426 1.516 2.426 1.527 2.426 c 1.57 2.426 1.586 2.402 1.586
 2.352 c 1.578 2.188 1.555 1.871 1.578 1.578 c 1.613 1.172 1.746 0.969 1.898
 0.793 c 1.973 0.707 2.324 0.336 2.996 0.336 c 3.668 0.336 4.02 0.707 4.094
 0.793 c 4.25 0.973 4.383 1.172 4.414 1.578 c 4.441 1.875 4.418 2.191 4.406
 2.352 c 4.402 2.406 4.418 2.426 4.465 2.426 c 4.473 2.426 l 4.48 2.426 
4.492 2.426 4.5 2.422 c 4.582 2.402 4.727 2.328 4.875 2.297 c 4.879 2.297
 l 4.902 2.289 4.926 2.289 4.949 2.289 c 5.027 2.289 5.102 2.32 5.133 2.398
 c 5.176 2.516 5.117 2.609 4.984 2.703 c 4.902 2.762 4.609 2.941 4.543 3.004
 c 4.473 3.066 4.484 3.117 4.492 3.18 c 4.5 3.23 4.648 3.926 5.574 4.375
 c 5.629 4.402 5.723 4.457 5.559 4.551 c f
Q Q
showpage
%%Trailer
%%EOF
