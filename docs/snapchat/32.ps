%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
23.914 17.289 m 23.746 16.836 23.43 16.59 23.066 16.391 c 23.07 16.391 
l 23.008 16.355 22.949 16.32 22.883 16.293 c 22.555 16.125 l 21.426 15.527
 20.547 14.773 19.938 13.879 c 19.938 13.883 l 19.762 13.629 19.613 13.363
 19.488 13.086 c 19.438 12.938 19.441 12.852 19.477 12.777 c 19.473 12.773
 l 19.512 12.715 19.559 12.66 19.621 12.625 c 19.816 12.496 20.016 12.367
 20.148 12.277 c 20.391 12.121 20.582 11.996 20.703 11.91 c 21.168 11.586
 21.492 11.242 21.691 10.855 c 21.695 10.855 l 21.98 10.32 22.016 9.684 
21.797 9.117 c 21.488 8.309 20.727 7.809 19.805 7.809 c 19.559 7.809 19.312
 7.84 19.074 7.906 c 19.082 7.355 19.07 6.77 19.023 6.199 c 18.848 4.184
 18.145 3.129 17.406 2.285 c 17.406 2.281 l 16.934 1.754 16.379 1.309 15.762
 0.961 c 14.645 0.324 13.379 0 12 0 c 10.617 0 9.359 0.324 8.242 0.961 c
 7.625 1.309 7.07 1.758 6.598 2.285 c 5.863 3.129 5.156 4.188 4.98 6.199
 c 4.93 6.773 4.922 7.355 4.926 7.906 c 4.688 7.844 4.441 7.809 4.195 7.809
 c 3.273 7.809 2.508 8.312 2.203 9.117 c 2.203 9.121 l 1.984 9.688 2.02 
10.324 2.305 10.863 c 2.508 11.246 2.832 11.594 3.293 11.914 c 3.414 12 
3.609 12.125 3.848 12.281 c 4.355 12.613 l 4.359 12.613 l 4.422 12.656 4.48
 12.715 4.523 12.777 c 4.562 12.855 4.562 12.941 4.504 13.102 c 4.504 13.105
 l 4.379 13.375 4.23 13.637 4.062 13.883 c 3.465 14.758 2.609 15.5 1.52 
16.09 c 0.941 16.395 0.34 16.602 0.086 17.289 c -0.105 17.812 0.02 18.402
 0.508 18.902 c 0.688 19.09 0.891 19.246 1.121 19.367 c 1.117 19.371 l 1.594
 19.629 2.098 19.832 2.617 19.969 c 2.727 20 2.828 20.043 2.922 20.105 c
 3.098 20.262 3.074 20.496 3.309 20.836 c 3.43 21.016 3.578 21.164 3.754
 21.285 c 4.25 21.629 4.805 21.648 5.395 21.672 c 5.926 21.691 6.531 21.719
 7.219 21.941 c 7.504 22.039 7.801 22.219 8.145 22.434 c 8.969 22.941 10.102
 23.637 11.992 23.637 c 13.887 23.637 15.023 22.938 15.855 22.426 c 16.195
 22.215 16.492 22.035 16.77 21.945 c 17.461 21.719 18.062 21.691 18.598 
21.672 c 19.188 21.648 19.742 21.625 20.238 21.285 c 20.246 21.289 l 20.453
 21.145 20.625 20.957 20.75 20.738 c 20.922 20.449 20.914 20.246 21.074 
20.109 c 21.16 20.047 21.258 20.004 21.359 19.977 c 21.891 19.836 22.402
 19.633 22.883 19.371 c 23.121 19.242 23.344 19.07 23.527 18.867 c 23.535
 18.859 l 23.992 18.371 24.105 17.797 23.918 17.289 c 22.238 18.191 m 21.211
 18.758 20.531 18.695 20 19.039 c 19.551 19.328 19.816 19.953 19.488 20.18
 c 19.086 20.457 17.898 20.16 16.359 20.668 c 15.094 21.086 14.285 22.289
 12.004 22.289 c 9.727 22.289 8.938 21.086 7.648 20.664 c 6.117 20.156 4.926
 20.453 4.523 20.176 c 4.195 19.949 4.461 19.324 4.012 19.035 c 3.48 18.691
 2.797 18.754 1.773 18.191 c 1.121 17.832 1.488 17.605 1.707 17.5 c 5.426
 15.703 6.016 12.926 6.043 12.719 c 6.074 12.469 6.109 12.273 5.836 12.02
 c 5.57 11.773 4.395 11.043 4.066 10.816 c 3.527 10.438 3.285 10.062 3.465
 9.598 c 3.586 9.277 3.887 9.156 4.199 9.156 c 4.195 9.156 l 4.293 9.16 
4.391 9.168 4.488 9.191 c 5.082 9.32 5.66 9.617 5.992 9.699 c 6.031 9.711
 6.074 9.715 6.113 9.715 c 6.289 9.715 6.352 9.625 6.34 9.422 c 6.301 8.773
 6.211 7.508 6.312 6.324 c 6.453 4.699 6.977 3.891 7.602 3.18 c 7.902 2.836
 9.309 1.352 11.996 1.352 c 14.684 1.352 16.094 2.832 16.395 3.176 c 17.02
 3.887 17.543 4.695 17.684 6.324 c 17.785 7.508 17.695 8.773 17.656 9.422
 c 17.641 9.637 17.707 9.715 17.883 9.715 c 17.883 9.707 l 17.926 9.707 
17.965 9.699 18.008 9.691 c 18.34 9.609 18.918 9.312 19.512 9.184 c 19.508
 9.184 l 19.605 9.164 19.707 9.152 19.805 9.148 c 20.121 9.148 20.418 9.27
 20.539 9.59 c 20.715 10.055 20.48 10.43 19.938 10.809 c 19.609 11.035 18.434
 11.766 18.168 12.012 c 17.891 12.266 17.93 12.461 17.961 12.711 c 17.988
 12.922 18.582 15.699 22.297 17.496 c 22.516 17.605 22.887 17.828 22.234
 18.191 c f
Q Q
showpage
%%Trailer
%%EOF
