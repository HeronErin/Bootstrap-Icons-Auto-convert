%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 11 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 11 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 11 768 757 rectclip
1 0 0 -1 0 768 cm q
0 g
765.266 553.246 m 759.938 538.703 749.762 530.926 738.195 524.492 c 738.191
 524.496 l 736.297 523.336 734.324 522.309 732.289 521.426 c 721.777 516.098
 l 685.68 496.945 657.504 472.801 637.969 444.195 c 637.969 444.191 l 632.414
 436.145 627.594 427.613 623.566 418.703 c 621.934 413.902 622.031 411.215
 623.184 408.766 c 623.184 408.77 l 624.336 406.824 625.934 405.18 627.84
 403.969 c 634.031 399.84 640.414 395.664 644.734 392.879 c 652.512 387.887
 658.605 383.902 662.543 381.117 c 677.375 370.75 687.742 359.711 694.223
 347.422 c 694.223 347.426 l 703.344 330.219 704.551 309.906 697.535 291.742
 c 687.695 265.918 663.312 249.887 633.742 249.887 c 625.848 249.855 617.98
 250.906 610.367 253.008 c 610.656 235.344 610.27 216.672 608.688 198.336
 c 603.121 133.824 580.512 100.031 556.992 73.055 c 541.91 56.172 524.152
 41.887 504.434 30.77 c 468.672 10.367 428.16 0 383.953 0 c 339.746 0 299.473
 10.367 263.715 30.77 c 243.938 41.906 226.18 56.211 211.059 73.152 c 187.539
 100.129 164.98 133.969 159.363 198.434 c 157.777 216.77 157.441 235.488
 157.637 253.059 c 157.633 253.055 l 150.02 250.953 142.152 249.902 134.258
 249.938 c 104.738 249.938 80.305 266.016 70.516 291.84 c 70.512 291.84 
l 63.453 310.004 64.625 330.336 73.727 347.566 c 80.254 359.855 90.621 370.895
 105.406 381.215 c 109.344 384 115.484 387.934 123.215 393.023 c 139.488
 403.633 l 141.559 405.035 143.336 406.828 144.719 408.91 c 145.965 411.453
 146.016 414.191 144.145 419.324 c 144.145 419.328 l 140.168 428.047 135.43
 436.398 129.984 444.289 c 110.879 472.273 83.52 495.984 48.578 514.945 
c 30.098 524.738 10.852 531.266 2.738 553.344 c -3.406 570.047 0.625 589.008
 16.18 604.945 c 21.941 610.992 28.484 615.953 35.812 619.824 c 35.809 619.824
 l 50.961 628.164 67.082 634.613 83.809 639.023 c 87.25 639.941 90.52 641.398
 93.504 643.344 c 99.168 648.336 98.398 655.824 105.938 666.77 c 109.777
 672.465 114.512 677.266 120.145 681.168 c 135.984 692.16 153.793 692.832
 172.703 693.551 c 189.742 694.223 209.086 694.992 231.117 702.191 c 240.238
 705.262 249.789 711.121 260.781 717.934 c 287.18 734.156 323.422 756.43
 383.949 756.43 c 444.523 756.43 480.91 734.062 507.598 717.742 c 518.492
 711.023 527.949 705.262 536.828 702.336 c 558.906 695.039 578.254 694.273
 595.293 693.648 c 614.156 692.93 631.965 692.207 647.852 681.266 c 647.855
 681.266 l 654.469 676.637 659.977 670.605 663.984 663.602 c 669.457 654.387
 669.266 647.906 674.398 643.441 c 677.172 641.523 680.258 640.113 683.52
 639.266 c 700.473 634.801 716.816 628.285 732.191 619.871 c 739.871 615.695
 746.879 610.27 752.785 603.742 c 752.977 603.504 l 767.57 587.902 771.215
 569.473 765.266 553.246 c 711.457 582.141 m 678.625 600.285 656.785 598.316
 639.793 609.262 c 625.395 618.527 633.938 638.543 623.473 645.742 c 610.562
 654.672 572.543 645.168 523.395 661.391 c 482.836 674.781 456.961 713.328
 384.051 713.328 c 311.141 713.328 285.891 674.879 244.66 661.297 c 195.605
 645.074 157.492 654.578 144.629 645.695 c 134.164 638.496 142.66 618.43
 128.262 609.168 c 111.27 598.223 89.43 600.191 56.645 582.145 c 35.715 
570.625 47.574 563.426 54.531 560.066 c 173.477 502.516 192.434 413.668 
193.25 407.043 c 194.305 399.074 195.41 392.785 186.625 384.676 c 178.129
 376.805 140.449 353.477 129.984 346.18 c 112.703 334.082 105.023 322.035
 110.688 307.203 c 114.625 296.93 124.176 293.043 134.207 293.043 c 134.207
 293.039 l 137.387 293.078 140.555 293.434 143.664 294.098 c 162.672 298.227
 181.105 307.777 191.762 310.32 c 193.043 310.641 194.355 310.816 195.699
 310.848 c 201.363 310.848 203.379 307.969 202.996 301.488 c 201.75 280.703
 198.82 240.191 202.086 202.32 c 206.598 150.289 223.398 124.465 243.316
 101.664 c 252.918 90.672 297.891 43.105 383.957 43.105 c 469.973 43.105
 515.094 90.48 524.645 101.426 c 544.613 124.227 561.414 150.051 565.875
 202.129 c 569.141 239.953 566.309 280.465 564.965 301.25 c 564.484 308.066
 566.598 310.609 572.262 310.609 c 572.258 310.609 l 573.582 310.586 574.898
 310.422 576.191 310.129 c 586.848 307.535 605.328 297.984 624.289 293.906
 c 624.289 293.902 l 627.395 293.223 630.562 292.855 633.742 292.801 c 643.82
 292.801 653.375 296.738 657.262 306.961 c 662.879 321.793 655.34 333.84
 638.016 345.938 c 627.551 353.234 589.871 376.562 581.375 384.434 c 572.543
 392.547 573.695 398.832 574.703 406.801 c 575.566 413.52 594.527 502.367
 713.422 559.871 c 720.477 563.375 732.332 570.527 711.453 582.145 c f
Q Q
showpage
%%Trailer
%%EOF
