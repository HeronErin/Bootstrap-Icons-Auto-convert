%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 5 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 5 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 5 384 379 rectclip
1 0 0 -1 0 384 cm q
0 g
382.633 276.625 m 379.969 269.352 374.879 265.465 369.098 262.25 c 369.098
 262.246 l 368.148 261.668 367.164 261.156 366.145 260.711 c 360.887 258.047
 l 342.84 248.473 328.75 236.398 318.984 222.094 c 318.984 222.098 l 316.207
 218.074 313.797 213.809 311.785 209.352 c 310.969 206.953 311.016 205.609
 311.594 204.383 c 312.168 203.414 312.965 202.59 313.922 201.984 c 317.02
 199.922 320.211 197.832 322.371 196.441 c 326.258 193.945 329.309 191.953
 331.273 190.562 c 338.688 185.379 343.875 179.859 347.113 173.715 c 347.113
 173.711 l 351.672 165.109 352.273 154.953 348.77 145.871 c 343.848 132.961
 331.656 124.941 316.875 124.941 c 316.871 124.945 l 312.922 124.926 308.992
 125.453 305.184 126.504 c 305.328 117.672 305.137 108.336 304.344 99.168
 c 301.559 66.91 290.254 50.016 278.496 36.527 c 270.953 28.086 262.078 
20.941 252.215 15.383 c 234.336 5.184 214.078 0 191.977 0 c 169.871 0 149.738
 5.184 131.855 15.383 c 121.969 20.949 113.086 28.102 105.527 36.574 c 93.766
 50.062 82.488 66.98 79.68 99.215 c 78.887 108.383 78.719 117.742 78.816
 126.527 c 75.008 125.477 71.078 124.953 67.129 124.969 c 52.367 124.969
 40.152 133.008 35.258 145.922 c 31.727 155 32.312 165.168 36.863 173.785
 c 40.129 179.93 45.312 185.449 52.703 190.609 c 54.672 192 57.742 193.969
 61.605 196.512 c 69.742 201.816 l 70.781 202.516 71.668 203.414 72.359 
204.457 c 72.984 205.73 73.008 207.098 72.07 209.664 c 70.082 214.023 67.715
 218.199 64.992 222.145 c 55.441 236.137 41.762 247.992 24.289 257.473 c
 15.051 262.367 5.426 265.633 1.367 276.672 c -1.703 285.023 0.312 294.504
 8.086 302.473 c 10.965 305.496 14.238 307.977 17.902 309.914 c 17.902 309.91
 l 25.48 314.082 33.543 317.309 41.902 319.512 c 43.625 319.969 45.262 320.699
 46.754 321.672 c 49.586 324.168 49.203 327.91 52.969 333.383 c 54.891 336.23
 57.258 338.629 60.074 340.582 c 67.996 346.078 76.898 346.414 86.355 346.773
 c 94.875 347.109 104.547 347.492 115.562 351.094 c 120.121 352.629 124.898
 355.559 130.395 358.965 c 143.594 367.078 161.715 378.211 191.98 378.211
 c 222.27 378.211 240.461 367.027 253.805 358.867 c 259.254 355.508 263.98
 352.629 268.422 351.164 c 279.461 347.516 289.133 347.133 297.652 346.82
 c 307.086 346.461 315.988 346.102 323.934 340.629 c 323.93 340.633 l 327.234
 338.32 329.988 335.301 331.992 331.801 c 334.727 327.191 334.633 323.953
 337.199 321.723 c 337.199 321.719 l 338.586 320.762 340.129 320.055 341.762
 319.633 c 350.234 317.398 358.406 314.145 366.098 309.938 c 369.938 307.848
 373.441 305.137 376.395 301.875 c 376.492 301.754 l 383.789 293.953 385.613
 284.738 382.637 276.625 c 355.734 291.074 m 339.32 300.145 328.398 299.164
 319.902 304.633 c 312.703 309.266 316.973 319.273 311.742 322.871 c 305.285
 327.336 286.277 322.582 261.703 330.695 c 241.422 337.391 228.488 356.664
 192.031 356.664 c 155.574 356.664 142.953 337.441 122.336 330.648 c 97.809
 322.535 78.75 327.289 72.32 322.848 c 67.09 319.246 71.336 309.215 64.137
 304.582 c 55.641 299.109 44.723 300.094 28.328 291.07 c 17.863 285.309 
23.793 281.711 27.273 280.031 c 86.746 251.254 96.227 206.832 96.633 203.52
 c 97.16 199.535 97.711 196.391 93.32 192.336 c 89.074 188.398 70.23 176.734
 65 173.09 c 56.359 167.043 52.52 161.02 55.352 153.602 c 57.32 148.465 
62.094 146.523 67.113 146.523 c 67.105 146.52 l 68.695 146.539 70.277 146.715
 71.832 147.047 c 81.336 149.109 90.551 153.887 95.879 155.16 c 96.52 155.32
 97.176 155.406 97.848 155.426 c 100.68 155.426 101.688 153.984 101.496 
150.746 c 100.871 140.355 99.406 120.098 101.039 101.16 c 103.297 75.145
 111.695 62.23 121.656 50.832 c 126.457 45.336 148.945 21.551 191.977 21.551
 c 234.984 21.551 257.543 45.238 262.32 50.711 c 272.305 62.109 280.703 
75.023 282.938 101.062 c 284.57 119.973 283.152 140.23 282.48 150.621 c 
282.242 154.027 283.297 155.301 286.129 155.301 c 286.129 155.305 l 286.789
 155.293 287.449 155.211 288.098 155.062 c 293.426 153.766 302.664 148.992
 312.145 146.949 c 312.145 146.953 l 313.699 146.613 315.281 146.426 316.871
 146.398 c 321.91 146.398 326.688 148.367 328.633 153.477 c 331.441 160.891
 327.672 166.918 319.008 172.965 c 313.777 176.613 294.938 188.277 290.688
 192.211 c 286.273 196.266 286.848 199.41 287.352 203.395 c 287.785 206.754
 297.262 251.18 356.711 279.93 c 360.238 281.684 366.168 285.258 355.727
 291.066 c f
Q Q
showpage
%%Trailer
%%EOF
