%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 23 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 23 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 23 1536 1513 rectclip
1 0 0 -1 0 1536 cm q
0 g
1530.527 1106.496 m 1519.871 1077.406 1499.52 1061.855 1476.383 1048.992
 c 1472.594 1046.672 1468.648 1044.621 1464.574 1042.848 c 1443.551 1032.191
 l 1371.359 993.887 1315.008 945.598 1275.934 888.383 c 1275.938 888.383
 l 1264.828 872.289 1255.191 855.227 1247.137 837.406 c 1243.871 827.805
 1244.066 822.43 1246.367 817.535 c 1248.676 813.648 1251.867 810.359 1255.68
 807.938 c 1268.062 799.68 1280.832 791.328 1289.473 785.762 c 1305.023 
775.777 1317.215 767.809 1325.09 762.242 c 1354.754 741.508 1375.488 719.426
 1388.449 694.852 c 1388.449 694.848 l 1406.684 660.441 1409.102 619.816
 1395.07 583.488 c 1375.391 531.84 1326.621 499.777 1267.484 499.777 c 1267.488
 499.777 l 1251.691 499.711 1235.961 501.809 1220.734 506.016 c 1221.309
 470.688 1220.543 433.344 1217.375 396.672 c 1206.238 267.648 1161.023 200.062
 1113.984 146.113 c 1083.82 112.348 1048.305 83.773 1008.863 61.535 c 937.344
 20.734 856.32 0 767.902 0 c 679.488 0 598.941 20.734 527.422 61.535 c 487.871
 83.809 452.352 112.414 422.109 146.305 c 375.07 200.258 329.949 267.938
 318.719 396.863 c 315.551 433.535 314.879 470.977 315.262 506.109 c 315.266
 506.113 l 300.039 501.906 284.309 499.805 268.512 499.871 c 209.473 499.871
 160.609 532.031 141.023 583.68 c 126.906 620.008 129.254 660.676 147.457
 695.137 c 160.512 719.711 181.25 741.793 210.816 762.434 c 218.688 768 
230.977 775.875 246.434 786.051 c 278.977 807.266 l 283.117 810.07 286.672
 813.656 289.441 817.824 c 291.938 822.914 292.035 828.383 288.289 838.656
 c 280.332 856.094 270.855 872.801 259.969 888.574 c 221.762 944.543 167.039
 991.965 97.152 1029.887 c 60.191 1049.473 21.695 1062.527 5.473 1106.688
 c -6.816 1140.094 1.25 1178.016 32.352 1209.887 c 43.871 1221.984 56.961
 1231.902 71.617 1239.648 c 101.922 1256.332 134.164 1269.227 167.617 1278.047
 c 174.496 1279.883 181.043 1282.797 187.008 1286.688 c 198.336 1296.672
 196.801 1311.648 211.871 1333.535 c 219.551 1344.926 229.023 1354.527 240.285
 1362.336 c 271.965 1384.32 307.582 1385.664 345.406 1387.105 c 379.484 
1388.449 418.176 1389.984 462.238 1404.387 c 480.477 1410.531 499.582 1422.242
 521.566 1435.875 c 574.367 1468.324 646.848 1512.867 767.902 1512.867 c
 889.055 1512.867 961.824 1468.133 1015.199 1435.492 c 1036.992 1422.051
 1055.902 1410.531 1073.664 1404.676 c 1117.824 1390.082 1156.512 1388.547
 1190.594 1387.301 c 1228.32 1385.859 1263.938 1384.422 1295.715 1362.531
 c 1295.711 1362.527 l 1308.938 1353.273 1319.953 1341.211 1327.969 1327.199
 c 1338.914 1308.766 1338.527 1295.809 1348.801 1286.879 c 1354.344 1283.051
 1360.52 1280.223 1367.039 1278.527 c 1400.941 1269.598 1433.629 1256.574
 1464.383 1239.742 c 1479.742 1231.391 1493.758 1220.543 1505.566 1207.484
 c 1505.949 1207.004 l 1535.133 1175.805 1542.43 1138.941 1530.523 1106.492
 c 1422.906 1164.285 m 1357.242 1200.574 1313.562 1196.637 1279.578 1218.523
 c 1250.777 1237.051 1267.867 1277.082 1246.938 1291.484 c 1221.113 1309.34
 1145.082 1290.332 1046.777 1322.781 c 965.656 1349.566 913.914 1426.652
 768.09 1426.652 c 622.266 1426.652 571.77 1349.758 489.305 1322.59 c 391.191
 1290.141 314.969 1309.148 289.242 1291.391 c 268.312 1276.992 285.305 1236.863
 256.508 1218.336 c 222.523 1196.449 178.844 1200.383 113.277 1164.289 c
 71.422 1141.25 95.133 1126.848 109.055 1120.129 c 346.941 1005.023 384.863
 827.328 386.496 814.082 c 388.609 798.145 390.816 785.57 373.25 769.348
 c 356.258 753.605 280.898 706.949 259.969 692.355 c 225.41 668.164 210.047
 644.066 221.375 614.402 c 229.246 593.859 248.352 586.082 268.414 586.082
 c 268.414 586.078 l 274.773 586.156 281.109 586.863 287.328 588.191 c 325.344
 596.449 362.207 615.551 383.52 620.641 c 386.078 621.281 388.703 621.633
 391.391 621.695 c 402.719 621.695 406.75 615.934 405.984 602.977 c 403.488
 561.41 397.633 480.383 404.16 404.641 c 413.184 300.578 446.785 248.93 
486.625 203.328 c 505.824 181.344 595.777 86.207 767.906 86.207 c 939.938
 86.207 1030.18 180.961 1049.281 202.848 c 1089.219 248.449 1122.816 300.094
 1131.746 404.254 c 1138.273 479.902 1132.609 560.926 1129.922 602.492 c
 1128.961 616.125 1133.188 621.211 1144.516 621.211 c 1144.512 621.215 l
 1147.16 621.168 1149.801 620.848 1152.383 620.258 c 1173.695 615.074 1210.656
 595.969 1248.574 587.809 c 1254.793 586.445 1261.125 585.707 1267.488 585.602
 c 1287.648 585.602 1306.754 593.473 1314.527 613.922 c 1325.758 643.586
 1310.688 667.684 1276.031 691.875 c 1255.102 706.469 1179.742 753.121 1162.75
 768.867 c 1145.086 785.09 1147.391 797.668 1149.406 813.602 c 1151.133 
827.043 1189.055 1004.738 1426.848 1119.746 c 1440.961 1126.754 1464.672
 1141.059 1422.91 1164.289 c f
Q Q
showpage
%%Trailer
%%EOF
