%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
47.828 34.578 m 47.496 33.668 46.859 33.184 46.137 32.781 c 46.02 32.707
 45.895 32.645 45.77 32.59 c 45.113 32.258 l 42.855 31.062 41.098 29.551
 39.875 27.766 c 39.871 27.762 l 39.527 27.258 39.227 26.727 38.973 26.168
 c 38.871 25.867 38.875 25.699 38.949 25.547 c 39.02 25.426 39.121 25.324
 39.238 25.246 c 39.625 24.988 40.023 24.727 40.293 24.555 c 40.777 24.242
 41.16 23.992 41.406 23.82 c 42.332 23.172 42.98 22.48 43.387 21.715 c 43.391
 21.715 l 43.957 20.641 44.035 19.371 43.598 18.234 c 42.984 16.621 41.457
 15.617 39.609 15.617 c 39.117 15.617 38.625 15.68 38.148 15.812 c 38.168
 14.707 38.141 13.543 38.043 12.395 c 37.695 8.363 36.281 6.25 34.812 4.566
 c 33.871 3.512 32.758 2.617 31.527 1.922 c 29.293 0.648 26.762 0 23.996
 0 c 21.234 0 18.715 0.648 16.48 1.922 c 15.246 2.617 14.133 3.512 13.191
 4.57 c 11.723 6.258 10.312 8.371 9.961 12.398 c 9.863 13.543 9.84 14.715
 9.852 15.812 c 9.852 15.816 l 9.375 15.684 8.883 15.617 8.391 15.621 c 
6.547 15.621 5.02 16.625 4.406 18.238 c 3.965 19.375 4.039 20.645 4.609 
21.723 c 5.016 22.492 5.664 23.18 6.59 23.824 c 6.836 24 7.219 24.246 7.703
 24.562 c 8.719 25.227 l 8.848 25.316 8.957 25.426 9.047 25.559 c 9.125 
25.719 9.129 25.887 9.012 26.211 c 9.008 26.207 l 8.762 26.754 8.465 27.273
 8.125 27.77 c 6.93 29.52 5.223 31 3.035 32.184 c 1.879 32.797 0.676 33.203
 0.172 34.582 c -0.211 35.625 0.039 36.812 1.012 37.809 c 1.371 38.188 1.781
 38.496 2.238 38.738 c 3.184 39.262 4.191 39.664 5.238 39.938 c 5.453 39.996
 5.656 40.086 5.844 40.211 c 6.199 40.523 6.148 40.992 6.621 41.676 c 6.859
 42.031 7.156 42.332 7.508 42.574 c 8.496 43.262 9.609 43.305 10.793 43.348
 c 11.859 43.391 13.066 43.438 14.445 43.887 c 15.016 44.078 15.613 44.445
 16.301 44.871 c 17.949 45.887 20.215 47.277 24 47.277 c 27.785 47.277 30.059
 45.879 31.727 44.859 c 32.406 44.438 33 44.078 33.555 43.895 c 34.934 43.438
 36.145 43.391 37.207 43.352 c 38.387 43.305 39.5 43.262 40.492 42.578 c
 40.906 42.289 41.25 41.914 41.5 41.477 c 41.844 40.902 41.828 40.496 42.152
 40.215 c 42.148 40.215 l 42.324 40.094 42.516 40.008 42.719 39.953 c 43.781
 39.676 44.801 39.27 45.762 38.742 c 46.242 38.48 46.68 38.141 47.047 37.734
 c 47.059 37.719 l 47.969 36.742 48.199 35.59 47.828 34.578 c 44.465 36.383
 m 42.414 37.516 41.047 37.395 39.984 38.078 c 39.086 38.656 39.617 39.906
 38.965 40.359 c 38.156 40.918 35.781 40.324 32.711 41.336 c 30.176 42.172
 28.559 44.582 24 44.582 c 19.441 44.582 17.863 42.18 15.289 41.328 c 12.223
 40.312 9.84 40.906 9.035 40.352 c 8.383 39.902 8.914 38.648 8.012 38.07
 c 6.949 37.387 5.586 37.508 3.535 36.383 c 2.227 35.664 2.969 35.211 3.402
 35.004 c 10.836 31.406 12.02 25.855 12.074 25.441 c 12.141 24.945 12.211
 24.551 11.66 24.043 c 11.129 23.551 8.773 22.094 8.121 21.637 c 7.043 20.879
 6.562 20.129 6.914 19.199 c 7.16 18.559 7.758 18.312 8.383 18.312 c 8.387
 18.316 l 8.586 18.316 8.785 18.34 8.98 18.383 c 10.168 18.641 11.32 19.238
 11.988 19.398 c 12.066 19.418 12.148 19.43 12.234 19.43 c 12.59 19.43 12.715
 19.25 12.691 18.844 c 12.613 17.543 12.43 15.012 12.633 12.645 c 12.914
 9.391 13.965 7.777 15.211 6.355 c 15.812 5.668 18.621 2.695 24 2.695 c 
29.375 2.695 32.195 5.656 32.793 6.34 c 34.039 7.766 35.09 9.379 35.371 
12.633 c 35.574 14.996 35.398 17.527 35.312 18.828 c 35.281 19.254 35.414
 19.414 35.77 19.414 c 35.766 19.414 l 35.848 19.41 35.93 19.402 36.012 
19.383 c 36.676 19.223 37.832 18.625 39.02 18.367 c 39.211 18.328 39.41 
18.305 39.609 18.301 c 40.238 18.301 40.836 18.547 41.078 19.188 c 41.43
 20.113 40.957 20.867 39.875 21.625 c 39.223 22.082 36.867 23.539 36.336
 24.031 c 35.785 24.539 35.855 24.93 35.918 25.43 c 35.973 25.852 37.156
 31.402 44.59 34.996 c 45.031 35.215 45.773 35.66 44.469 36.387 c f
Q Q
showpage
%%Trailer
%%EOF
