%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 1 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 1 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 1 96 95 rectclip
1 0 0 -1 0 96 cm q
0 g
95.656 69.156 m 94.992 67.34 93.719 66.367 92.273 65.562 c 92.039 65.418
 91.789 65.289 91.535 65.18 c 90.223 64.516 l 85.711 62.121 82.188 59.105
 79.746 55.527 c 79.746 55.523 l 79.051 54.52 78.449 53.453 77.945 52.34
 c 77.742 51.738 77.754 51.402 77.898 51.098 c 78.043 50.852 78.242 50.648
 78.48 50.496 c 79.254 49.98 80.051 49.457 80.594 49.109 c 81.566 48.484
 82.328 47.988 82.82 47.641 c 84.676 46.344 85.969 44.965 86.781 43.43 c
 86.777 43.43 l 87.918 41.277 88.07 38.738 87.191 36.469 c 85.961 33.242
 82.914 31.238 79.219 31.238 c 79.219 31.234 l 78.23 31.23 77.246 31.363
 76.297 31.625 c 76.332 29.418 76.285 27.082 76.086 24.789 c 75.391 16.727
 72.562 12.5 69.625 9.129 c 69.625 9.133 l 67.738 7.023 65.52 5.234 63.055
 3.848 c 58.586 1.297 53.52 0 47.992 0 c 42.465 0 37.434 1.297 32.961 3.848
 c 30.488 5.238 28.27 7.027 26.379 9.145 c 23.438 12.516 20.617 16.746 19.918
 24.805 c 19.719 27.098 19.68 29.438 19.703 31.633 c 18.754 31.367 17.77
 31.238 16.781 31.242 c 13.09 31.242 10.039 33.254 8.812 36.48 c 7.934 38.75
 8.078 41.293 9.215 43.445 c 10.031 44.98 11.328 46.359 13.176 47.652 c 
13.668 48 14.438 48.492 15.402 49.129 c 17.438 50.453 l 17.695 50.629 17.918
 50.852 18.09 51.113 c 18.246 51.43 18.25 51.773 18.02 52.414 c 17.52 53.508
 16.93 54.551 16.246 55.535 c 13.859 59.031 10.438 61.996 6.07 64.367 c 
3.762 65.59 1.355 66.406 0.34 69.168 c -0.43 71.258 0.074 73.625 2.02 75.617
 c 2.738 76.375 3.559 76.992 4.473 77.477 c 4.477 77.477 l 6.371 78.52 8.387
 79.328 10.477 79.879 c 10.906 79.992 11.316 80.176 11.688 80.418 c 12.395
 81.043 12.301 81.977 13.242 83.348 c 13.723 84.059 14.312 84.66 15.02 85.148
 c 17 86.523 19.227 86.605 21.59 86.695 c 23.719 86.781 26.137 86.875 28.891
 87.773 c 30.031 88.156 31.227 88.891 32.598 89.742 c 35.898 91.77 40.426
 94.555 47.992 94.555 c 55.562 94.555 60.113 91.758 63.449 89.719 c 64.812
 88.879 65.992 88.16 67.102 87.793 c 69.863 86.883 72.281 86.785 74.41 86.707
 c 76.77 86.617 78.996 86.527 80.98 85.16 c 80.98 85.156 l 81.809 84.578
 82.496 83.824 82.996 82.949 c 83.68 81.797 83.656 80.988 84.297 80.43 c
 84.301 80.43 l 84.648 80.191 85.031 80.016 85.441 79.906 c 87.559 79.352
 89.602 78.535 91.523 77.484 c 92.484 76.961 93.359 76.285 94.098 75.469
 c 94.121 75.438 l 95.945 73.488 96.402 71.184 95.656 69.156 c 88.93 72.77
 m 84.824 75.039 82.094 74.793 79.973 76.16 c 78.172 77.316 79.242 79.82
 77.934 80.719 c 76.32 81.836 71.566 80.648 65.422 82.676 c 60.352 84.352
 57.117 89.168 48.004 89.168 c 38.891 89.168 35.734 84.363 30.578 82.664
 c 24.445 80.637 19.684 81.824 18.074 80.715 c 16.766 79.816 17.828 77.309
 16.027 76.148 c 13.902 74.781 11.172 75.027 7.074 72.77 c 4.457 71.328 
5.941 70.43 6.809 70.008 c 21.676 62.812 24.047 51.707 24.148 50.879 c 24.281
 49.883 24.418 49.098 23.32 48.082 c 22.258 47.098 17.547 44.184 16.242 
43.27 c 14.082 41.758 13.121 40.25 13.832 38.398 c 14.324 37.113 15.52 36.629
 16.773 36.629 c 16.777 36.629 l 17.172 36.633 17.57 36.68 17.957 36.762
 c 20.332 37.277 22.637 38.473 23.969 38.789 c 24.129 38.828 24.293 38.852
 24.461 38.855 c 25.168 38.855 25.422 38.496 25.371 37.684 c 25.215 35.086
 24.848 30.023 25.258 25.289 c 25.82 18.785 27.922 15.559 30.41 12.707 c
 31.609 11.332 37.23 5.387 47.988 5.387 c 58.742 5.387 64.379 11.309 65.574
 12.676 c 68.07 15.527 70.172 18.754 70.727 25.266 c 71.133 29.992 70.781
 35.059 70.613 37.656 c 70.555 38.508 70.816 38.828 71.523 38.828 c 71.531
 38.824 l 71.699 38.824 71.863 38.805 72.023 38.766 c 73.355 38.441 75.664
 37.246 78.035 36.738 c 78.426 36.652 78.82 36.605 79.219 36.602 c 80.48
 36.602 81.672 37.094 82.16 38.371 c 82.863 40.227 81.922 41.73 79.754 43.242
 c 78.445 44.152 73.734 47.07 72.676 48.055 c 71.57 49.07 71.715 49.855 
71.84 50.852 c 71.949 51.691 74.316 62.797 89.18 69.984 c 90.062 70.422 
91.543 71.316 88.934 72.77 c f
Q Q
showpage
%%Trailer
%%EOF
