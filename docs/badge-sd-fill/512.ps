%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
248.113 143.23 m 227.855 143.23 l 227.855 240.672 l 248.113 240.672 l 274.898
 240.672 287.043 224.664 287.043 192.191 c 287.043 159.695 274.805 143.23
 248.113 143.23 c f
0 96 m 0 83.27 5.059 71.062 14.059 62.059 c 23.062 53.059 35.27 48 48 48
 c 336 48 l 348.73 48 360.938 53.059 369.941 62.059 c 378.941 71.062 384
 83.27 384 96 c 384 288 l 384 300.73 378.941 312.938 369.941 321.941 c 360.938
 330.941 348.73 336 336 336 c 48 336 l 35.27 336 23.062 330.941 14.059 321.941
 c 5.059 312.938 0 300.73 0 288 c h
121.848 266.734 m 158.352 266.734 178.918 248.398 178.918 221.613 c 178.918
 197.445 163.512 186.262 140.207 181.004 c 117.84 175.82 l 105.191 173.086
 98.137 167.395 98.137 158.73 c 98.137 147.547 107.496 139.434 123.242 139.434
 c 138.531 139.434 147.914 147.355 149.715 157.672 c 176.715 157.672 l 175.324
 135.52 156.34 117.062 123.434 117.062 c 91.707 117.062 69.672 134.27 69.672
 160.621 c 69.672 182.461 83.785 195.324 106.152 200.391 c 128.398 205.551
 l 143.375 209.031 150.551 214.191 150.551 224.223 c 150.551 236.031 141.168
 244.145 123.43 244.145 c 106.461 244.145 95.711 235.938 93.812 224.754 
c 66.289 224.762 l 67.535 247.562 85.25 266.762 121.848 266.762 c h
199.367 264 m 251.926 264 l 295.367 264 316.34 237.434 316.34 191.641 c
 316.34 146.184 295.676 120.023 251.898 120.023 c 199.391 120.023 l h
199.367 264 m f
Q Q
showpage
%%Trailer
%%EOF
