%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
768 384 m 768 485.844 727.543 583.516 655.527 655.527 c 583.516 727.543
 485.844 768 384 768 c 282.156 768 184.484 727.543 112.473 655.527 c 40.457
 583.516 0 485.844 0 384 c 0 282.156 40.457 184.484 112.473 112.473 c 184.484
 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527 112.473 c 727.543
 184.484 768 282.156 768 384 c 336 300 m 336 266.879 314.496 240 288 240
 c 261.504 240 240 266.879 240 300 c 240 333.121 261.504 360 288 360 c 314.496
 360 336 333.121 336 300 c 480 360 m 506.496 360 528 333.121 528 300 c 528
 266.879 506.496 240 480 240 c 453.504 240 432 266.879 432 300 c 432 333.121
 453.504 360 480 360 c 552 576 m 569.023 576.012 585.5 569.992 598.504 559.008
 c 611.512 548.023 620.203 532.785 623.039 516 c 623.039 515.855 l 624.367
 507.961 624.367 499.898 623.039 492 c 620.203 475.215 611.512 459.977 598.504
 448.992 c 585.5 438.008 569.023 431.988 552 432 c 216 432 l 198.977 431.988
 182.5 438.008 169.496 448.992 c 156.488 459.977 147.797 475.215 144.961
 492 c 144.961 492.145 l 143.633 500.039 143.633 508.102 144.961 516 c 147.797
 532.785 156.488 548.023 169.496 559.008 c 182.5 569.992 198.977 576.012
 216 576 c h
169.488 516 m 172.148 526.309 178.164 535.441 186.586 541.957 c 195.004
 548.477 205.352 552.008 216 552 c 228 552 l 228 516 l h
598.512 516 m 595.852 526.309 589.836 535.441 581.414 541.957 c 572.996
 548.477 562.648 552.008 552 552 c 540 552 l 540 516 l h
552 456 m 562.648 455.992 572.996 459.523 581.414 466.043 c 589.836 472.559
 595.852 481.691 598.512 492 c 540 492 l 540 456 l h
169.488 492 m 172.148 481.691 178.164 472.559 186.586 466.043 c 195.004
 459.523 205.352 455.992 216 456 c 228 456 l 228 492 l h
252 552 m 300 552 l 300 516 l 252 516 l h
372 552 m 324 552 l 324 516 l 372 516 l h
444 552 m 396 552 l 396 516 l 444 516 l h
516 552 m 468 552 l 468 516 l 516 516 l h
468 456 m 516 456 l 516 492 l 468 492 l h
396 456 m 444 456 l 444 492 l 396 492 l h
324 456 m 372 456 l 372 492 l 324 492 l h
252 456 m 300 456 l 300 492 l 252 492 l h
252 456 m f
Q Q
showpage
%%Trailer
%%EOF
