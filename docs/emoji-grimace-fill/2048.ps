%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536 971.688 1455.086 1167.031 1311.059 1311.059 c 1167.031 
1455.086 971.688 1536 768 1536 c 564.312 1536 368.969 1455.086 224.941 1311.059
 c 80.914 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969 224.941 224.941
 c 368.969 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914 1311.059 224.941
 c 1455.086 368.969 1536 564.312 1536 768 c 672 600 m 672 533.762 628.992
 480 576 480 c 523.008 480 480 533.762 480 600 c 480 666.238 523.008 720
 576 720 c 628.992 720 672 666.238 672 600 c 960 720 m 1012.992 720 1056
 666.238 1056 600 c 1056 533.762 1012.992 480 960 480 c 907.008 480 864 
533.762 864 600 c 864 666.238 907.008 720 960 720 c 1104 1152 m 1138.047
 1152.023 1171 1139.98 1197.008 1118.012 c 1223.02 1096.043 1240.406 1065.57
 1246.078 1032 c 1246.078 1031.711 l 1248.734 1015.918 1248.734 999.793 
1246.078 984 c 1240.406 950.43 1223.02 919.957 1197.008 897.988 c 1171 876.02
 1138.047 863.977 1104 864 c 432 864 l 397.953 863.977 365 876.02 338.992
 897.988 c 312.98 919.957 295.594 950.43 289.922 984 c 289.922 984.289 l
 287.266 1000.082 287.266 1016.207 289.922 1032 c 295.594 1065.57 312.98
 1096.043 338.992 1118.012 c 365 1139.98 397.953 1152.023 432 1152 c h
338.977 1032 m 344.301 1052.617 356.328 1070.883 373.168 1083.918 c 390.008
 1096.949 410.703 1104.016 432 1104 c 456 1104 l 456 1032 l h
1197.023 1032 m 1191.699 1052.617 1179.672 1070.883 1162.832 1083.918 c
 1145.992 1096.949 1125.297 1104.016 1104 1104 c 1080 1104 l 1080 1032 l
 h
1104 912 m 1125.297 911.984 1145.992 919.051 1162.832 932.082 c 1179.672
 945.117 1191.699 963.383 1197.023 984 c 1080 984 l 1080 912 l h
338.977 984 m 344.301 963.383 356.328 945.117 373.168 932.082 c 390.008
 919.051 410.703 911.984 432 912 c 456 912 l 456 984 l h
504 1104 m 600 1104 l 600 1032 l 504 1032 l h
744 1104 m 648 1104 l 648 1032 l 744 1032 l h
888 1104 m 792 1104 l 792 1032 l 888 1032 l h
1032 1104 m 936 1104 l 936 1032 l 1032 1032 l h
936 912 m 1032 912 l 1032 984 l 936 984 l h
792 912 m 888 912 l 888 984 l 792 984 l h
648 912 m 744 912 l 744 984 l 648 984 l h
504 912 m 600 912 l 600 984 l 504 984 l h
504 912 m f
Q Q
showpage
%%Trailer
%%EOF
