%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 3 0 93 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 3 0 93 96
96 96 cairo_set_page_size
%%EndPageSetup
q 3 0 90 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 49.055 0 50.031 0.555 50.574 1.457 c 58.727 15.047 68.125 23.551
 76.074 30.75 c 76.648 31.262 77.215 31.773 77.766 32.281 c 85.848 39.625
 93 46.48 93 57 c 93.004 64.875 89.141 72.25 82.668 76.734 c 76.195 81.219
 67.938 82.242 60.562 79.477 c 61.973 81.816 63.508 84.168 64.895 86.262
 c 67.5 90.215 64.836 96 59.758 96 c 36.238 96 l 31.168 96 28.5 90.215 31.102
 86.262 c 32.68 83.879 34.16 81.602 35.469 79.457 c 35.473 79.457 l 28.098
 82.238 19.828 81.227 13.348 76.742 c 6.867 72.258 3 64.879 3 57 c 3 46.48
 10.152 39.625 18.234 32.281 c 19.922 30.75 l 27.879 23.551 37.273 15.047
 45.43 1.457 c 45.426 1.457 l 45.969 0.555 46.945 0 48 0 c 22.266 36.719
 m 13.848 44.375 9 49.52 9 57 c 9 61.93 11.023 66.645 14.594 70.043 c 18.168
 73.441 22.977 75.227 27.902 74.98 c 32.828 74.73 37.438 72.477 40.648 68.734
 c 41.543 67.699 43.027 67.398 44.254 68.004 c 45.484 68.613 46.141 69.977
 45.859 71.316 c 45.297 73.945 43.879 76.91 42.195 79.883 c 42.191 79.883
 l 40.273 83.176 38.246 86.406 36.113 89.566 c 36.094 89.602 36.082 89.637
 36.086 89.676 c 36.082 89.801 36.133 89.918 36.227 90 c 59.773 90 l 59.867
 89.918 59.918 89.801 59.914 89.676 c 59.918 89.637 59.906 89.602 59.887
 89.566 c 58.086 86.836 55.938 83.535 54.125 80.355 c 52.359 77.27 50.703
 73.973 50.141 71.312 c 50.141 71.316 l 49.859 69.977 50.516 68.613 51.746
 68.004 c 52.973 67.398 54.457 67.699 55.352 68.734 c 58.562 72.477 63.172
 74.73 68.098 74.98 c 73.023 75.227 77.832 73.441 81.406 70.043 c 84.977
 66.645 87 61.93 87 57 c 87 49.52 82.152 44.375 73.734 36.719 c 72 35.16
 l 64.824 28.656 55.992 20.664 48 8.617 c 40.008 20.664 31.176 28.656 24
 35.148 c 22.266 36.715 l h
22.266 36.719 m f
Q Q
showpage
%%Trailer
%%EOF
