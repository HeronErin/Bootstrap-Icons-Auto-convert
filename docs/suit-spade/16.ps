%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 0 m 6.133 0 6.254 0.07 6.32 0.184 c 7.34 1.883 8.516 2.945 9.508 3.844
 c 9.578 3.906 9.648 3.973 9.719 4.035 c 10.73 4.953 11.625 5.809 11.625
 7.125 c 11.625 8.109 11.145 9.031 10.332 9.59 c 9.523 10.152 8.492 10.281
 7.57 9.934 c 7.746 10.227 7.938 10.52 8.113 10.781 c 8.438 11.277 8.105
 12 7.473 12 c 4.531 12 l 3.898 12 3.562 11.277 3.891 10.781 c 4.086 10.484
 4.273 10.199 4.438 9.93 c 4.434 9.934 l 3.512 10.281 2.48 10.152 1.668 
9.594 c 0.859 9.031 0.375 8.109 0.375 7.125 c 0.375 5.809 1.27 4.953 2.277
 4.035 c 2.488 3.844 l 3.484 2.945 4.656 1.883 5.676 0.184 c 5.68 0.184 
l 5.746 0.07 5.867 0 6 0 c 2.785 4.59 m 1.73 5.547 1.125 6.191 1.125 7.125
 c 1.125 8.066 1.711 8.906 2.594 9.234 c 3.477 9.562 4.469 9.305 5.082 8.594
 c 5.191 8.461 5.379 8.426 5.531 8.5 c 5.684 8.578 5.77 8.746 5.73 8.914
 c 5.66 9.242 5.484 9.613 5.273 9.984 c 5.035 10.398 4.781 10.801 4.516 
11.195 c 4.512 11.199 4.512 11.203 4.512 11.211 c 4.512 11.227 4.516 11.238
 4.527 11.25 c 7.473 11.25 l 7.484 11.238 7.488 11.227 7.488 11.211 c 7.488
 11.203 7.488 11.199 7.484 11.195 c 7.258 10.855 6.992 10.441 6.766 10.043
 c 6.547 9.656 6.34 9.246 6.27 8.914 c 6.23 8.746 6.316 8.578 6.469 8.5 
c 6.621 8.426 6.809 8.461 6.918 8.594 c 7.531 9.305 8.523 9.562 9.406 9.234
 c 10.289 8.906 10.875 8.066 10.875 7.125 c 10.875 6.191 10.27 5.547 9.215
 4.59 c 9 4.395 l 8.102 3.582 7 2.582 6 1.078 c 5 2.586 3.898 3.582 3 4.395
 c h
2.785 4.59 m f
Q Q
showpage
%%Trailer
%%EOF
