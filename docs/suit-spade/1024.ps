%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 24 0 744 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 24 0 744 768
768 768 cairo_set_page_size
%%EndPageSetup
q 24 0 720 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 392.438 0 400.254 4.426 404.594 11.664 c 469.824 120.383 544.992
 188.398 608.594 246 c 613.203 250.098 617.715 254.176 622.129 258.238 c
 686.785 316.992 744 371.855 744 456 c 744.012 497.539 730.555 537.961 705.645
 571.199 c 680.734 604.441 645.715 628.707 605.844 640.355 c 565.973 652.004
 523.398 650.41 484.512 635.809 c 495.793 654.527 508.078 673.344 519.168
 690.098 c 540 721.73 518.688 768 478.078 768 c 289.922 768 l 249.363 768
 228 721.727 248.832 690.098 c 261.457 671.043 273.312 652.801 283.777 635.664
 c 244.883 650.34 202.277 651.992 162.363 640.379 c 122.449 628.77 87.383
 604.516 62.43 571.266 c 37.48 538.016 23.996 497.57 24 456 c 24 371.855
 81.215 316.992 145.871 258.238 c 159.359 246 l 223.008 188.398 298.176 
120.383 363.406 11.664 c 367.746 4.426 375.562 0 384 0 c 178.129 293.762
 m 110.785 355.008 72 396.145 72 456 c 71.996 495.449 88.172 533.172 116.758
 560.359 c 145.34 587.547 183.824 601.816 223.223 599.836 c 262.625 597.859
 299.484 579.805 325.199 549.887 c 329.867 544.465 336.715 541.41 343.867
 541.555 c 351.02 541.695 357.738 545.023 362.184 550.629 c 366.633 556.23
 368.348 563.527 366.863 570.527 c 362.352 591.551 351.023 615.262 337.535
 639.07 c 322.18 665.422 305.965 691.258 288.91 716.543 c 288.742 716.801
 288.656 717.102 288.672 717.406 c 288.656 718.398 289.078 719.348 289.824
 720 c 478.176 720 l 478.922 719.348 479.344 718.398 479.328 717.406 c 479.344
 717.102 479.258 716.801 479.09 716.543 c 464.691 694.703 447.504 668.305
 433.012 642.863 c 418.898 618.191 405.652 591.793 401.141 570.527 c 401.137
 570.527 l 399.652 563.527 401.367 556.23 405.816 550.629 c 410.262 545.023
 416.98 541.695 424.133 541.555 c 431.285 541.41 438.133 544.465 442.801
 549.887 c 468.516 579.805 505.375 597.859 544.777 599.836 c 584.176 601.816
 622.66 587.547 651.242 560.359 c 679.828 533.172 696.004 495.449 696 456
 c 696 396.145 657.215 355.008 589.871 293.762 c 576 281.281 l 518.594 229.25
 447.938 165.312 384 68.93 c 320.062 165.312 249.406 229.25 192 281.188 
c 178.129 293.715 l h
178.129 293.762 m f
Q Q
showpage
%%Trailer
%%EOF
