%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0 m 3.066 0 3.129 0.035 3.16 0.09 c 3.668 0.938 4.258 1.469 4.754 1.922
 c 4.789 1.953 4.824 1.984 4.859 2.016 c 5.367 2.477 5.812 2.906 5.812 3.562
 c 5.812 4.055 5.57 4.516 5.168 4.797 c 4.762 5.078 4.246 5.141 3.785 4.969
 c 3.875 5.113 3.969 5.262 4.055 5.395 c 4.219 5.641 4.051 6.004 3.734 6.004
 c 2.266 6 l 1.949 6 1.781 5.637 1.945 5.391 c 2.043 5.242 2.137 5.098 2.219
 4.965 c 1.758 5.141 1.238 5.078 0.836 4.797 c 0.43 4.516 0.188 4.055 0.188
 3.562 c 0.188 2.906 0.633 2.477 1.141 2.016 c 1.246 1.922 l 1.742 1.473
 2.332 0.941 2.84 0.09 c 2.871 0.035 2.934 0 3 0 c 1.391 2.297 m 0.867 2.773
 0.562 3.094 0.562 3.562 c 0.562 4.031 0.855 4.453 1.297 4.617 c 1.738 4.781
 2.234 4.652 2.539 4.297 c 2.668 4.148 2.906 4.266 2.867 4.457 c 2.832 4.621
 2.742 4.805 2.637 4.992 c 2.516 5.199 2.391 5.402 2.258 5.598 c 2.254 5.602
 2.254 5.602 2.254 5.605 c 2.254 5.613 2.258 5.621 2.266 5.625 c 3.738 5.625
 l 3.734 5.625 l 3.742 5.621 3.746 5.613 3.746 5.605 c 3.746 5.602 3.746
 5.602 3.742 5.598 c 3.629 5.426 3.496 5.223 3.383 5.023 c 3.273 4.832 3.168
 4.625 3.133 4.457 c 3.094 4.266 3.332 4.148 3.461 4.297 c 3.766 4.652 4.262
 4.781 4.703 4.617 c 5.145 4.453 5.438 4.031 5.438 3.562 c 5.438 3.094 5.133
 2.773 4.609 2.297 c 4.5 2.199 l 4.051 1.793 3.5 1.293 3 0.539 c 2.5 1.293
 1.949 1.793 1.5 2.199 c h
1.391 2.297 m f
Q Q
showpage
%%Trailer
%%EOF
