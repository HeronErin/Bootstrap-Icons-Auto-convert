%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 6 0 186 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 6 0 186 192
192 192 cairo_set_page_size
%%EndPageSetup
q 6 0 180 192 rectclip
1 0 0 -1 0 192 cm q
0 g
96 0 m 98.109 0 100.062 1.105 101.148 2.914 c 117.457 30.094 136.25 47.098
 152.148 61.5 c 153.301 62.523 154.43 63.543 155.531 64.559 c 171.695 79.246
 186 92.965 186 114 c 186.004 129.75 178.285 144.5 165.34 153.469 c 152.395
 162.438 135.871 164.488 121.129 158.953 c 123.949 163.633 127.02 168.336
 129.793 172.523 c 135 180.43 129.672 192 119.52 192 c 72.48 192 l 62.34
 192 57 180.434 62.207 172.523 c 65.363 167.758 68.328 163.199 70.941 158.914
 c 70.945 158.914 l 56.199 164.48 39.66 162.449 26.695 153.484 c 13.734 
144.52 5.996 129.762 6 114 c 6 92.965 20.305 79.246 36.469 64.559 c 39.84
 61.5 l 55.75 47.102 74.543 30.098 90.852 2.914 c 91.938 1.105 93.891 0 
96 0 c 44.531 73.441 m 27.695 88.754 18 99.035 18 114 c 18 123.863 22.043
 133.293 29.188 140.09 c 36.336 146.887 45.957 150.453 55.805 149.961 c 
65.656 149.465 74.871 144.949 81.301 137.473 c 83.086 135.395 86.055 134.793
 88.512 136.012 c 90.965 137.227 92.285 139.953 91.715 142.633 c 90.586 
147.891 87.754 153.816 84.383 159.77 c 80.547 166.355 76.492 172.816 72.227
 179.137 c 72.184 179.199 72.164 179.277 72.168 179.352 c 72.164 179.602
 72.27 179.836 72.457 180 c 119.547 180 l 119.543 180 l 119.73 179.836 119.836
 179.602 119.832 179.352 c 119.836 179.277 119.816 179.199 119.773 179.137
 c 116.172 173.676 111.879 167.078 108.254 160.715 c 104.727 154.547 101.414
 147.945 100.285 142.629 c 100.285 142.633 l 99.715 139.953 101.035 137.227
 103.488 136.012 c 105.945 134.793 108.914 135.395 110.699 137.473 c 117.129
 144.949 126.344 149.465 136.195 149.961 c 146.043 150.453 155.664 146.887
 162.812 140.09 c 169.957 133.293 174 123.863 174 114 c 174 99.035 164.305
 88.754 147.469 73.441 c 144 70.32 l 129.648 57.312 111.984 41.328 96 17.23
 c 80.016 41.328 62.352 57.309 48 70.293 c 44.531 73.426 l h
44.531 73.441 m f
Q Q
showpage
%%Trailer
%%EOF
