%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
526.559 660.383 m 523.723 647.777 515.922 636.844 504.922 630.062 c 493.922
 623.281 480.652 621.223 468.113 624.348 c 455.574 627.477 444.824 635.531
 438.301 646.684 c 431.773 657.84 430.023 671.152 433.441 683.617 c 577.441
 1259.617 l 580.922 1273.422 590.352 1284.969 603.184 1291.137 c 616.016
 1297.305 630.926 1297.461 643.883 1291.559 c 656.836 1285.656 666.504 1274.305
 670.273 1260.574 c 768 902.594 l 865.727 1260.672 l 869.496 1274.402 879.164
 1285.75 892.117 1291.652 c 905.074 1297.555 919.984 1297.402 932.816 1291.234
 c 945.648 1285.062 955.078 1273.516 958.559 1259.711 c 1102.559 683.711
 l 1106.266 667.238 1101.047 650.031 1088.812 638.395 c 1076.578 626.758
 1059.129 622.406 1042.863 626.93 c 1026.598 631.457 1013.906 644.195 1009.441
 660.48 c 909.984 1058.305 l 814.273 707.426 l 810.52 693.824 800.977 682.566
 788.18 676.637 c 775.379 670.703 760.621 670.703 747.82 676.637 c 735.023
 682.566 725.48 693.824 721.727 707.426 c 626.016 1058.305 l 526.559 660.48
 l h
526.559 660.383 m f
1344 1344 m 1344 432 l 912 0 l 384 0 l 333.078 0 284.242 20.227 248.234
 56.234 c 212.227 92.242 192 141.078 192 192 c 192 1344 l 192 1377.703 200.871
 1410.812 217.723 1440 c 234.574 1469.188 258.812 1493.426 288 1510.277 
c 317.188 1527.129 350.297 1536 384 1536 c 1152 1536 l 1185.703 1536 1218.812
 1527.129 1248 1510.277 c 1277.188 1493.426 1301.426 1469.188 1318.277 1440
 c 1335.129 1410.812 1344 1377.703 1344 1344 c 912 288 m 912 326.191 927.172
 362.816 954.176 389.824 c 981.184 416.828 1017.809 432 1056 432 c 1248 
432 l 1248 1344 l 1248 1369.461 1237.887 1393.879 1219.883 1411.883 c 1201.879
 1429.887 1177.461 1440 1152 1440 c 384 1440 l 358.539 1440 334.121 1429.887
 316.117 1411.883 c 298.113 1393.879 288 1369.461 288 1344 c 288 192 l 288
 166.539 298.113 142.121 316.117 124.117 c 334.121 106.113 358.539 96 384
 96 c 912 96 l h
912 288 m f
Q Q
showpage
%%Trailer
%%EOF
