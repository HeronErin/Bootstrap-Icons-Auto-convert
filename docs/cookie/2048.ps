%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 720 m 576 771.445 548.555 818.984 504 844.707 c 459.445 870.43 404.555
 870.43 360 844.707 c 315.445 818.984 288 771.445 288 720 c 288 668.555 
315.445 621.016 360 595.293 c 404.555 569.57 459.445 569.57 504 595.293 
c 548.555 621.016 576 668.555 576 720 c 1008 768 m 1059.445 768 1106.984
 740.555 1132.707 696 c 1158.43 651.445 1158.43 596.555 1132.707 552 c 1106.984
 507.445 1059.445 480 1008 480 c 956.555 480 909.016 507.445 883.293 552
 c 857.57 596.555 857.57 651.445 883.293 696 c 909.016 740.555 956.555 768
 1008 768 c 960 1104 m 960 1155.445 932.555 1202.984 888 1228.707 c 843.445
 1254.43 788.555 1254.43 744 1228.707 c 699.445 1202.984 672 1155.445 672
 1104 c 672 1052.555 699.445 1005.016 744 979.293 c 788.555 953.57 843.445
 953.57 888 979.293 c 932.555 1005.016 960 1052.555 960 1104 c f
768 0 m 630.348 -0.238 495.188 36.711 376.801 106.945 c 361.121 113.473
 347.137 122.434 334.848 133.824 c 183.055 237.508 73.488 392.195 26.047
 569.793 c -21.395 747.391 -3.562 936.113 76.305 1101.68 c 156.172 1267.246
 292.773 1398.676 461.301 1472.09 c 629.828 1545.508 819.098 1556.039 994.73
 1501.777 c 1170.363 1447.516 1320.707 1332.055 1418.453 1176.375 c 1516.199
 1020.691 1554.863 835.113 1527.422 653.352 c 1499.98 471.586 1408.254 305.695
 1268.902 185.809 c 1129.555 65.922 951.824 -0.008 768 0 c 1080 1363.297
 m 1044.32 1342.68 1001.52 1338.34 962.426 1351.371 c 923.332 1364.402 891.695
 1393.555 875.52 1431.457 c 839.969 1437.18 804.012 1440.039 768 1440 c 
636.797 1440.184 508.434 1401.793 398.879 1329.602 c 440.754 1309.23 470.195
 1269.871 477.906 1223.949 c 485.617 1178.027 470.645 1131.211 437.719 1098.281
 c 404.789 1065.355 357.973 1050.383 312.051 1058.094 c 266.129 1065.805
 226.77 1095.246 206.398 1137.121 c 134.207 1027.566 95.816 899.203 96 768
 c 96 580.512 172.801 410.977 296.641 289.055 c 311.547 330.133 344.297 
362.219 385.672 376.281 c 427.047 390.34 472.566 384.855 509.414 361.363
 c 546.262 337.871 570.449 298.922 575.164 255.48 c 579.879 212.035 564.613
 168.801 533.664 137.953 c 608.656 110.133 688.016 95.926 768 96 c 904.32
 96 1031.23 136.609 1137.121 206.398 c 1095.246 226.77 1065.805 266.129 
1058.094 312.051 c 1050.383 357.973 1065.355 404.789 1098.281 437.719 c 
1131.211 470.645 1178.027 485.617 1223.949 477.906 c 1269.871 470.195 1309.23
 440.754 1329.602 398.879 c 1401.793 508.434 1440.184 636.797 1440 768 c
 1440 825.215 1432.895 880.703 1419.457 933.793 c 1401.348 903.664 1372.84
 881.203 1339.316 870.641 c 1305.789 860.074 1269.559 862.137 1237.449 876.441
 c 1205.336 890.742 1179.566 916.297 1164.996 948.285 c 1150.422 980.273
 1148.055 1016.488 1158.336 1050.102 c 1168.617 1083.715 1190.84 1112.406
 1220.812 1130.77 c 1250.785 1149.133 1286.441 1155.898 1321.055 1149.793
 c 1259.223 1239.434 1176.527 1312.703 1080.098 1363.297 c h
1080 1363.297 m f
Q Q
showpage
%%Trailer
%%EOF
