%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
72 90 m 72 96.43 68.57 102.375 63 105.59 c 57.43 108.805 50.57 108.805 
45 105.59 c 39.43 102.375 36 96.43 36 90 c 36 83.57 39.43 77.625 45 74.41
 c 50.57 71.195 57.43 71.195 63 74.41 c 68.57 77.625 72 83.57 72 90 c 126
 96 m 132.43 96 138.375 92.57 141.59 87 c 144.805 81.43 144.805 74.57 141.59
 69 c 138.375 63.43 132.43 60 126 60 c 119.57 60 113.625 63.43 110.41 69
 c 107.195 74.57 107.195 81.43 110.41 87 c 113.625 92.57 119.57 96 126 96
 c 120 138 m 120 144.43 116.57 150.375 111 153.59 c 105.43 156.805 98.57
 156.805 93 153.59 c 87.43 150.375 84 144.43 84 138 c 84 131.57 87.43 125.625
 93 122.41 c 98.57 119.195 105.43 119.195 111 122.41 c 116.57 125.625 120
 131.57 120 138 c f
96 0 m 78.793 -0.031 61.898 4.59 47.102 13.367 c 45.141 14.184 43.395 15.305
 41.859 16.727 c 41.855 16.727 l 16.344 34.152 0.781 62.793 0.031 93.676
 c -0.715 124.562 13.445 153.918 38.082 172.559 c 62.723 191.199 94.824 
196.84 124.34 187.723 c 153.859 178.602 177.184 155.836 187.016 126.547 
c 196.844 97.258 191.977 65.027 173.941 39.945 c 155.902 14.867 126.895 
0 96 0 c 135 170.41 m 130.539 167.836 125.191 167.293 120.305 168.922 c 
115.418 170.551 111.461 174.195 109.441 178.934 c 104.996 179.648 100.5 
180.004 96 180 c 79.602 180.023 63.555 175.223 49.859 166.199 c 55.094 163.652
 58.773 158.734 59.738 152.992 c 60.703 147.254 58.832 141.402 54.715 137.285
 c 50.598 133.168 44.746 131.297 39.008 132.262 c 33.266 133.227 28.348 
136.906 25.801 142.141 c 16.777 128.445 11.977 112.398 12 96 c 12 72.562
 21.602 51.371 37.078 36.133 c 38.941 41.266 43.035 45.277 48.207 47.035
 c 53.379 48.793 59.07 48.105 63.676 45.172 c 68.281 42.234 71.305 37.363
 71.895 31.934 c 72.484 26.504 70.578 21.102 66.707 17.242 c 76.082 13.766
 86 11.992 96 12 c 113.039 12 128.902 17.074 142.141 25.801 c 136.906 28.348
 133.227 33.266 132.262 39.008 c 131.297 44.746 133.168 50.598 137.285 54.715
 c 141.402 58.832 147.254 60.703 152.992 59.738 c 158.734 58.773 163.652
 55.094 166.199 49.859 c 175.223 63.555 180.023 79.602 180 96 c 180 103.152
 179.113 110.09 177.434 116.723 c 175.168 112.957 171.605 110.148 167.414
 108.828 c 163.223 107.508 158.695 107.766 154.68 109.555 c 150.668 111.344
 147.445 114.535 145.625 118.535 c 143.805 122.535 143.508 127.062 144.793
 131.262 c 146.078 135.465 148.855 139.051 152.602 141.348 c 156.348 143.641
 160.805 144.488 165.133 143.723 c 157.402 154.93 147.066 164.09 135.012
 170.41 c h
135 170.41 m f
Q Q
showpage
%%Trailer
%%EOF
