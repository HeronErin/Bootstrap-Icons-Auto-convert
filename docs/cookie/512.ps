%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
144 180 m 144 192.863 137.137 204.746 126 211.176 c 114.863 217.609 101.137
 217.609 90 211.176 c 78.863 204.746 72 192.863 72 180 c 72 167.137 78.863
 155.254 90 148.824 c 101.137 142.391 114.863 142.391 126 148.824 c 137.137
 155.254 144 167.137 144 180 c 252 192 m 264.863 192 276.746 185.137 283.176
 174 c 289.609 162.863 289.609 149.137 283.176 138 c 276.746 126.863 264.863
 120 252 120 c 239.137 120 227.254 126.863 220.824 138 c 214.391 149.137
 214.391 162.863 220.824 174 c 227.254 185.137 239.137 192 252 192 c 240
 276 m 240 288.863 233.137 300.746 222 307.176 c 210.863 313.609 197.137
 313.609 186 307.176 c 174.863 300.746 168 288.863 168 276 c 168 263.137
 174.863 251.254 186 244.824 c 197.137 238.391 210.863 238.391 222 244.824
 c 233.137 251.254 240 263.137 240 276 c f
192 0 m 157.586 -0.059 123.797 9.18 94.199 26.734 c 90.277 28.367 86.785
 30.605 83.711 33.453 c 83.711 33.457 l 45.766 59.375 18.371 98.051 6.512
 142.449 c -5.348 186.848 -0.891 234.027 19.074 275.418 c 39.043 316.812
 73.195 349.668 115.324 368.023 c 157.457 386.375 204.773 389.012 248.684
 375.445 c 292.59 361.879 330.176 333.016 354.613 294.094 c 379.051 255.172
 388.715 208.777 381.855 163.336 c 374.996 117.898 352.062 76.422 317.227
 46.453 c 282.387 16.48 237.957 0 192 0 c 270 340.824 m 261.078 335.672 
250.379 334.586 240.605 337.844 c 230.832 341.102 222.926 348.391 218.879
 357.863 c 209.992 359.297 201.004 360.008 192 360 c 159.199 360.047 127.109
 350.449 99.719 332.398 c 110.188 327.309 117.551 317.469 119.477 305.988
 c 121.402 294.508 117.66 282.801 109.43 274.57 c 101.199 266.34 89.492 
262.598 78.012 264.523 c 66.531 266.449 56.691 273.812 51.602 284.281 c 
33.551 256.891 23.953 224.801 24 192 c 24 145.129 43.199 102.742 74.16 72.266
 c 77.887 82.535 86.074 90.555 96.418 94.07 c 106.762 97.586 118.141 96.215
 127.352 90.34 c 136.566 84.469 142.613 74.73 143.789 63.871 c 144.969 53.008
 141.152 42.199 133.414 34.488 c 152.164 27.535 172.004 23.98 192 24 c 226.078
 24 257.809 34.152 284.281 51.602 c 273.812 56.691 266.449 66.531 264.523
 78.012 c 262.598 89.492 266.34 101.199 274.57 109.43 c 282.801 117.66 294.508
 121.402 305.988 119.477 c 317.469 117.551 327.309 110.188 332.398 99.719
 c 350.449 127.109 360.047 159.199 360 192 c 360 206.305 358.223 220.176
 354.863 233.449 c 350.336 225.918 343.211 220.301 334.828 217.66 c 326.449
 215.02 317.391 215.535 309.363 219.109 c 301.336 222.688 294.891 229.074
 291.25 237.07 c 287.605 245.066 287.012 254.121 289.582 262.523 c 292.152
 270.93 297.711 278.102 305.203 282.691 c 312.695 287.285 321.609 288.977
 330.266 287.449 c 314.805 309.859 294.133 328.176 270.023 340.824 c h
270 340.824 m f
Q Q
showpage
%%Trailer
%%EOF
