%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 12 168 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 12 168 180
192 192 cairo_set_page_size
%%EndPageSetup
q 24 12 144 168 rectclip
1 0 0 -1 0 192 cm q
0 g
24 18 m 24 14.688 26.688 12 30 12 c 162 12 l 165.312 12 168 14.688 168 
18 c 168 21.312 165.312 24 162 24 c 150 24 l 150 36 l 150.004 46.188 147.121
 56.168 141.691 64.789 c 136.262 73.41 128.504 80.32 119.316 84.719 c 115.836
 86.387 114 89.242 114 91.797 c 114 100.195 l 114 102.75 115.848 105.605
 119.316 107.273 c 119.316 107.281 l 128.504 111.68 136.262 118.59 141.691
 127.211 c 147.121 135.832 150.004 145.812 150 156 c 150 168 l 162 168 l
 165.312 168 168 170.688 168 174 c 168 177.312 165.312 180 162 180 c 30 
180 l 26.688 180 24 177.312 24 174 c 24 170.688 26.688 168 30 168 c 42 168
 l 42 156 l 41.996 145.812 44.879 135.832 50.309 127.211 c 55.738 118.59
 63.496 111.68 72.684 107.281 c 76.164 105.613 78 102.758 78 100.203 c 78
 91.805 l 78 89.25 76.152 86.395 72.684 84.727 c 72.684 84.719 l 63.496 
80.32 55.738 73.41 50.309 64.789 c 44.879 56.168 41.996 46.188 42 36 c 42
 24 l 30 24 l 26.688 24 24 21.312 24 18 c 54 24 m 54 36 l 53.996 43.926 
56.238 51.688 60.461 58.395 c 64.684 65.102 70.719 70.477 77.867 73.895 
c 84.262 76.965 90 83.387 90 91.785 c 90 100.211 l 90 100.211 92.16 102 
96 102 c 99.84 102 102 100.199 102 100.199 c 102 91.801 l 102 83.391 107.734
 76.969 114.133 73.898 c 114.133 73.895 l 121.281 70.477 127.316 65.102 
131.539 58.395 c 135.762 51.688 138.004 43.926 138 36 c 138 24 l h
54 24 m f
Q Q
showpage
%%Trailer
%%EOF
