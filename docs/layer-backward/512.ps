%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
200.496 380.496 m 198.246 382.754 195.188 384.02 192 384.02 c 188.812 384.02
 185.754 382.754 183.504 380.496 c 111.504 308.496 l 109.246 306.246 107.98
 303.188 107.98 300 c 107.98 296.812 109.246 293.754 111.504 291.504 c 135.504
 267.504 l 137.754 265.246 140.812 263.98 144 263.98 c 147.188 263.98 150.246
 265.246 152.496 267.504 c 168 283.031 l 168 96 l 24 96 l 17.637 96 11.531
 93.473 7.031 88.969 c 2.527 84.469 0 78.363 0 72 c 0 24 l 0 17.637 2.527
 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c 360 0 l 366.363 0 372.469
 2.527 376.969 7.031 c 381.473 11.531 384 17.637 384 24 c 384 72 l 384 78.363
 381.473 84.469 376.969 88.969 c 372.469 93.473 366.363 96 360 96 c 216 
96 l 216 283.031 l 231.504 267.504 l 233.754 265.246 236.812 263.98 240 
263.98 c 243.188 263.98 246.246 265.246 248.496 267.504 c 272.496 291.504
 l 274.754 293.754 276.02 296.812 276.02 300 c 276.02 303.188 274.754 306.246
 272.496 308.496 c h
200.496 380.496 m f
24 216 m 17.637 216 11.531 213.473 7.031 208.969 c 2.527 204.469 0 198.363
 0 192 c 0 144 l 0 137.637 2.527 131.531 7.031 127.031 c 11.531 122.527 
17.637 120 24 120 c 132 120 l 138.629 120 144 125.371 144 132 c 144 138.629
 138.629 144 132 144 c 24 144 l 24 192 l 132 192 l 138.629 192 144 197.371
 144 204 c 144 210.629 138.629 216 132 216 c h
252 216 m 245.371 216 240 210.629 240 204 c 240 197.371 245.371 192 252
 192 c 360 192 l 360 144 l 252 144 l 245.371 144 240 138.629 240 132 c 240
 125.371 245.371 120 252 120 c 360 120 l 366.363 120 372.469 122.527 376.969
 127.031 c 381.473 131.531 384 137.637 384 144 c 384 192 l 384 198.363 381.473
 204.469 376.969 208.969 c 372.469 213.473 366.363 216 360 216 c h
252 216 m f
Q Q
showpage
%%Trailer
%%EOF
