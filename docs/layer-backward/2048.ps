%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
801.984 1521.984 m 792.98 1531.012 780.75 1536.086 768 1536.086 c 755.25
 1536.086 743.02 1531.012 734.016 1521.984 c 446.016 1233.984 l 436.988 
1224.98 431.914 1212.75 431.914 1200 c 431.914 1187.25 436.988 1175.02 446.016
 1166.016 c 542.016 1070.016 l 551.02 1060.988 563.25 1055.914 576 1055.914
 c 588.75 1055.914 600.98 1060.988 609.984 1070.016 c 672 1132.129 l 672
 384 l 96 384 l 70.539 384 46.121 373.887 28.117 355.883 c 10.113 337.879
 0 313.461 0 288 c 0 96 l 0 70.539 10.113 46.121 28.117 28.117 c 46.121 
10.113 70.539 0 96 0 c 1440 0 l 1465.461 0 1489.879 10.113 1507.883 28.117
 c 1525.887 46.121 1536 70.539 1536 96 c 1536 288 l 1536 313.461 1525.887
 337.879 1507.883 355.883 c 1489.879 373.887 1465.461 384 1440 384 c 864
 384 l 864 1132.129 l 926.016 1070.016 l 935.02 1060.988 947.25 1055.914
 960 1055.914 c 972.75 1055.914 984.98 1060.988 993.984 1070.016 c 1089.984
 1166.016 l 1099.012 1175.02 1104.086 1187.25 1104.086 1200 c 1104.086 1212.75
 1099.012 1224.98 1089.984 1233.984 c h
801.984 1521.984 m f
96 864 m 70.539 864 46.121 853.887 28.117 835.883 c 10.113 817.879 0 793.461
 0 768 c 0 576 l 0 550.539 10.113 526.121 28.117 508.117 c 46.121 490.113
 70.539 480 96 480 c 528 480 l 545.148 480 560.996 489.148 569.57 504 c 
578.145 518.852 578.145 537.148 569.57 552 c 560.996 566.852 545.148 576
 528 576 c 96 576 l 96 768 l 528 768 l 545.148 768 560.996 777.148 569.57
 792 c 578.145 806.852 578.145 825.148 569.57 840 c 560.996 854.852 545.148
 864 528 864 c h
1008 864 m 990.852 864 975.004 854.852 966.43 840 c 957.855 825.148 957.855
 806.852 966.43 792 c 975.004 777.148 990.852 768 1008 768 c 1440 768 l 
1440 576 l 1008 576 l 990.852 576 975.004 566.852 966.43 552 c 957.855 537.148
 957.855 518.852 966.43 504 c 975.004 489.148 990.852 480 1008 480 c 1440
 480 l 1465.461 480 1489.879 490.113 1507.883 508.117 c 1525.887 526.121
 1536 550.539 1536 576 c 1536 768 l 1536 793.461 1525.887 817.879 1507.883
 835.883 c 1489.879 853.887 1465.461 864 1440 864 c h
1008 864 m f
Q Q
showpage
%%Trailer
%%EOF
