%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
73.02 57.18 m 86.863 41.629 92.688 29.074 94.867 19.871 c 96.129 14.551
 96.152 10.391 95.828 7.48 c 95.824 7.48 l 95.699 6.34 95.484 5.211 95.18
 4.105 c 95.051 3.637 94.895 3.176 94.711 2.723 c 94.711 2.719 l 94.273 
1.734 93.703 1.316 92.598 0.949 c 92.281 0.844 91.961 0.754 91.637 0.68 
c 90.512 0.41 89.371 0.223 88.219 0.121 c 85.277 -0.145 81.078 -0.059 75.738
 1.25 c 66.523 3.492 54.031 9.309 38.773 22.875 c 24.375 24.305 l 24.34 
24.305 l 24.336 24.301 l 20.875 24.684 17.648 26.238 15.191 28.703 c 0.898
 43.02 l -0.027 43.953 -0.258 45.379 0.332 46.555 c 0.918 47.734 2.191 48.406
 3.496 48.227 c 14.871 46.602 l 16.551 46.363 18.422 46.68 20.602 47.395
 c 21.992 47.852 23.223 48.355 24.531 48.883 c 25.75 49.379 l 26.926 54.273
 29.711 58.859 33.398 62.551 c 37.078 66.234 41.656 69.031 46.543 70.211
 c 47.035 71.422 l 47.57 72.73 48.074 73.965 48.527 75.363 c 49.234 77.543
 49.559 79.418 49.32 81.098 c 47.695 92.496 l 47.699 92.504 l 47.523 93.805
 48.195 95.074 49.371 95.66 c 50.547 96.25 51.965 96.023 52.902 95.102 c
 67.195 80.785 l 69.656 78.324 71.203 75.09 71.586 71.629 c h
73.68 34.984 m 68.898 39.785 62.102 40.75 58.512 37.156 c 54.922 33.555
 55.895 26.758 60.676 21.965 c 65.465 17.172 72.254 16.203 75.844 19.801
 c 79.434 23.395 78.465 30.191 73.684 34.988 c h
73.68 34.984 m f
31.23 64.723 m 34.414 67.949 38.062 70.684 42.055 72.836 c 35.348 78.879
 12.48 85.004 11.73 84.254 c 10.973 83.492 16.152 59.121 22.766 53.176 c
 24.84 57.316 27.789 61.277 31.23 64.727 c f
Q Q
showpage
%%Trailer
%%EOF
