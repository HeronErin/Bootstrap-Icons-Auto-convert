%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1168.32 914.879 m 1389.793 666.047 1483.008 465.215 1517.855 317.949 c 
1538.016 232.797 1538.398 166.27 1533.215 119.711 c 1531.203 101.449 1527.734
 83.375 1522.848 65.664 c 1520.801 58.16 1518.301 50.785 1515.359 43.586
 c 1515.359 43.488 l 1508.352 27.746 1499.23 21.023 1481.566 15.168 c 1476.512
 13.516 1471.387 12.074 1466.207 10.848 c 1448.207 6.559 1429.918 3.574 
1411.488 1.922 c 1364.449 -2.301 1297.25 -0.957 1211.809 19.969 c 1064.352
 55.871 864.48 148.898 620.352 365.953 c 389.953 388.801 l 389.375 388.801
 l 334.012 394.957 282.402 419.812 243.07 459.266 c 14.398 688.32 l 4.68
 698.105 -0.477 711.527 0.184 725.305 c 0.84 739.082 7.258 751.949 17.871
 760.762 c 28.48 769.574 42.305 773.527 55.969 771.648 c 237.984 745.633
 l 264.863 741.793 294.816 746.879 329.664 758.305 c 351.938 765.602 371.617
 773.664 392.543 782.113 c 412.031 790.082 l 430.848 868.418 475.391 941.762
 534.43 1000.801 c 593.277 1059.746 666.527 1104.48 744.766 1123.395 c 752.637
 1142.785 l 761.18 1163.715 769.246 1183.488 776.539 1205.855 c 787.867 
1240.703 793.051 1270.75 789.211 1297.633 c 763.195 1480.031 l 763.199 1480.031
 l 761.359 1493.672 765.316 1507.457 774.117 1518.039 c 782.914 1528.621
 795.746 1535.027 809.492 1535.707 c 823.238 1536.383 836.637 1531.266 846.434
 1521.602 c 1075.105 1292.547 l 1114.465 1253.188 1139.234 1201.441 1145.379
 1146.051 c h
1178.879 559.773 m 1102.367 636.574 993.598 652.031 936.191 594.527 c 878.785
 536.926 894.336 428.16 970.848 351.457 c 1047.457 274.754 1156.129 259.297
 1213.535 316.801 c 1270.941 374.305 1255.488 483.074 1178.977 559.777 c
 h
1178.879 559.773 m f
499.68 1035.551 m 550.633 1087.184 609.004 1130.93 672.863 1165.344 c 565.535
 1262.016 199.68 1360.031 187.68 1348.031 c 175.582 1335.84 258.434 945.887
 364.223 850.75 c 397.438 916.988 444.574 980.352 499.68 1035.551 c f
Q Q
showpage
%%Trailer
%%EOF
