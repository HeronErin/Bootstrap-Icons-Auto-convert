%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
36.512 28.59 m 43.434 20.812 46.348 14.539 47.434 9.938 c 48.062 7.277 
48.074 5.199 47.914 3.742 c 47.852 3.172 47.742 2.605 47.59 2.051 c 47.523
 1.816 47.445 1.586 47.355 1.363 c 47.355 1.359 l 47.137 0.867 46.852 0.656
 46.301 0.473 c 46.141 0.422 45.98 0.379 45.82 0.34 c 45.258 0.203 44.684
 0.113 44.109 0.059 c 42.641 -0.074 40.539 -0.031 37.871 0.621 c 33.262 
1.742 27.016 4.648 19.387 11.434 c 12.188 12.148 l 12.168 12.148 l 10.438
 12.344 8.824 13.121 7.598 14.352 c 0.449 21.512 l -0.016 21.977 -0.129 
22.688 0.164 23.277 c 0.461 23.867 1.098 24.203 1.75 24.113 c 7.438 23.301
 l 8.277 23.18 9.215 23.34 10.301 23.695 c 10.996 23.922 11.613 24.176 12.266
 24.438 c 12.875 24.688 l 13.465 27.137 14.855 29.426 16.699 31.273 c 18.539
 33.117 20.828 34.512 23.273 35.105 c 23.52 35.711 l 23.785 36.363 24.039
 36.984 24.266 37.684 c 24.621 38.773 24.781 39.711 24.66 40.551 c 23.848
 46.25 l 23.852 46.25 l 23.762 46.902 24.098 47.539 24.688 47.832 c 25.273
 48.125 25.984 48.012 26.449 47.551 c 33.594 40.395 l 34.824 39.164 35.598
 37.547 35.789 35.816 c h
36.84 17.492 m 34.449 19.891 31.051 20.375 29.254 18.578 c 27.461 16.777
 27.945 13.379 30.336 10.98 c 32.73 8.582 36.125 8.102 37.922 9.898 c 39.715
 11.695 39.234 15.094 36.844 17.492 c h
36.84 17.492 m f
15.613 32.359 m 17.207 33.973 19.031 35.34 21.027 36.418 c 17.672 39.438
 6.242 42.504 5.867 42.129 c 5.488 41.746 8.078 29.562 11.383 26.59 c 12.422
 28.66 13.895 30.641 15.617 32.363 c f
Q Q
showpage
%%Trailer
%%EOF
