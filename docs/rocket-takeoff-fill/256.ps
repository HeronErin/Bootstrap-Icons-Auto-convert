%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
146.039 114.359 m 173.723 83.254 185.375 58.152 189.73 39.742 c 192.25 
29.098 192.297 20.781 191.652 14.961 c 191.652 14.965 l 191.398 12.68 190.969
 10.422 190.355 8.207 c 190.102 7.27 189.789 6.348 189.422 5.449 c 189.422
 5.438 l 188.547 3.469 187.406 2.629 185.199 1.898 c 185.195 1.895 l 184.562
 1.691 183.922 1.508 183.277 1.355 c 181.027 0.82 178.738 0.445 176.438 
0.238 c 170.559 -0.289 162.156 -0.121 151.477 2.496 c 133.043 6.984 108.062
 18.613 77.543 45.742 c 48.742 48.598 l 48.672 48.598 l 48.672 48.602 l 
41.75 49.371 35.301 52.477 30.383 57.406 c 1.801 86.039 l -0.055 87.91 -0.516
 90.754 0.66 93.113 c 1.836 95.469 4.387 96.816 6.996 96.457 c 29.75 93.203
 l 33.109 92.723 36.855 93.359 41.211 94.789 c 43.996 95.699 46.453 96.711
 49.07 97.766 c 51.508 98.762 l 53.859 108.555 59.43 117.723 66.809 125.102
 c 74.164 132.469 83.32 138.062 93.102 140.426 c 94.086 142.852 l 95.152
 145.469 96.16 147.941 97.074 150.734 c 98.488 155.09 99.137 158.848 98.66
 162.207 c 95.406 185.008 l 95.398 185.004 l 95.047 187.609 96.391 190.148
 98.742 191.324 c 101.094 192.496 103.934 192.047 105.805 190.199 c 134.391
 161.566 l 139.312 156.645 142.406 150.18 143.176 143.254 c h
147.359 69.973 m 137.797 79.574 124.199 81.504 117.023 74.316 c 109.848
 67.117 111.793 53.52 121.355 43.934 c 130.93 34.344 144.516 32.414 151.691
 39.602 c 158.867 46.789 156.934 60.387 147.371 69.973 c h
147.359 69.973 m f
62.461 129.445 m 68.828 135.898 76.125 141.367 84.109 145.668 c 70.695 
157.754 24.961 170.004 23.461 168.504 c 21.949 166.98 32.305 118.234 45.527
 106.344 c 49.68 114.625 55.57 122.543 62.461 129.445 c f
Q Q
showpage
%%Trailer
%%EOF
