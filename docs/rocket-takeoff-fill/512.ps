%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
292.078 228.719 m 347.445 166.512 370.75 116.305 379.461 79.488 c 384.5
 58.199 384.598 41.566 383.301 29.93 c 383.305 29.93 l 382.801 25.363 381.934
 20.844 380.711 16.414 c 380.199 14.539 379.574 12.695 378.84 10.895 c 378.84
 10.871 l 377.086 6.934 374.809 5.254 370.391 3.793 c 369.129 3.379 367.848
 3.02 366.551 2.711 c 362.051 1.641 357.48 0.895 352.871 0.48 c 341.109 
-0.574 324.312 -0.238 302.949 4.992 c 266.086 13.969 216.117 37.223 155.086
 91.488 c 97.484 97.199 l 97.34 97.199 l 97.344 97.199 l 83.504 98.738 70.602
 104.953 60.77 114.816 c 3.602 172.078 l -0.113 175.82 -1.027 181.508 1.324
 186.223 c 3.676 190.938 8.773 193.629 13.992 192.91 c 59.496 186.406 l 
66.215 185.445 73.703 186.719 82.418 189.574 c 87.984 191.398 92.906 193.414
 98.137 195.527 c 103.008 197.52 l 107.711 217.105 118.848 235.441 133.609
 250.199 c 148.32 264.934 166.633 276.121 186.195 280.848 c 188.164 285.695
 l 190.301 290.926 192.316 295.871 194.141 301.465 c 196.973 310.176 198.27
 317.688 197.309 324.41 c 190.805 370.012 l 190.801 370.008 l 190.098 375.219
 192.785 380.297 197.488 382.645 c 202.191 384.996 207.867 384.094 211.609
 380.398 c 268.777 323.133 l 278.617 313.293 284.809 300.355 286.344 286.508
 c h
294.719 139.941 m 275.59 159.141 248.398 163.004 234.047 148.629 c 219.695
 134.23 223.582 107.035 242.711 87.859 c 261.863 68.684 289.031 64.82 303.383
 79.195 c 317.734 93.57 313.871 120.762 294.742 139.938 c h
294.719 139.941 m f
124.922 258.887 m 137.66 271.797 152.25 282.734 168.215 291.336 c 141.383
 315.504 49.918 340.008 46.918 337.008 c 43.895 333.961 64.605 236.473 91.055
 212.688 c 99.359 229.246 111.145 245.086 124.918 258.887 c f
Q Q
showpage
%%Trailer
%%EOF
