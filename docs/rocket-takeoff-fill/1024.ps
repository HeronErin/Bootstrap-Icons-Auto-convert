%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
584.16 457.441 m 694.895 333.027 741.504 232.609 758.93 158.977 c 769.008
 116.402 769.203 83.137 766.609 59.855 c 765.602 50.723 763.867 41.688 761.426
 32.832 c 760.402 29.078 759.152 25.395 757.68 21.793 c 757.68 21.742 l 
754.176 13.871 749.617 10.512 740.785 7.582 c 740.785 7.586 l 738.254 6.758
 735.691 6.039 733.105 5.426 c 724.102 3.277 714.961 1.785 705.742 0.961
 c 682.223 -1.152 648.621 -0.48 605.902 9.984 c 532.176 27.938 432.238 74.449
 310.176 182.977 c 194.977 194.402 l 194.688 194.402 l 194.688 194.398 l
 167.004 197.48 141.199 209.906 121.535 229.633 c 7.199 344.16 l 2.34 349.055
 -0.238 355.766 0.09 362.652 c 0.422 369.539 3.629 375.973 8.934 380.379
 c 14.238 384.789 21.152 386.762 27.984 385.824 c 118.992 372.816 l 132.434
 370.895 147.406 373.441 164.832 379.152 c 175.969 382.801 185.809 386.832
 196.273 391.055 c 206.016 395.039 l 215.422 434.207 237.695 470.879 267.215
 500.398 c 296.641 529.871 333.262 552.238 372.383 561.695 c 376.32 571.391
 l 380.594 581.855 384.625 591.742 388.273 602.926 c 393.938 620.352 396.531
 635.375 394.609 648.812 c 381.602 740.012 l 381.602 740.016 l 380.68 746.836
 382.66 753.727 387.059 759.02 c 391.457 764.309 397.871 767.516 404.746
 767.852 c 411.617 768.191 418.316 765.633 423.215 760.801 c 537.551 646.273
 l 557.23 626.594 569.613 600.723 572.688 573.027 c h
589.441 279.891 m 551.184 318.289 496.801 326.02 468.098 297.266 c 439.395
 268.465 447.168 214.082 485.426 175.73 c 523.73 137.379 578.066 129.652
 606.77 158.402 c 635.473 187.156 627.746 241.539 589.488 279.891 c h
589.441 279.891 m f
249.84 517.777 m 275.316 543.594 304.504 565.465 336.434 582.672 c 282.77
 631.008 99.84 680.016 93.84 674.016 c 87.793 667.918 129.215 472.945 182.113
 425.375 c 198.723 458.496 222.289 490.176 249.84 517.773 c f
Q Q
showpage
%%Trailer
%%EOF
