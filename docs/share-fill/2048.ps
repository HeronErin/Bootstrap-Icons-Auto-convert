%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 240 m 1055.992 183.691 1075.785 129.168 1111.918 85.98 c 1148.047 
42.789 1198.215 13.676 1253.641 3.738 c 1309.066 -6.199 1366.223 3.668 1415.109
 31.613 c 1463.996 59.559 1501.5 103.805 1521.059 156.609 c 1540.617 209.414
 1540.984 267.414 1522.098 320.465 c 1503.211 373.512 1466.273 418.234 1417.746
 446.797 c 1369.219 475.363 1312.195 485.957 1256.645 476.723 c 1201.098
 467.488 1150.562 439.016 1113.887 396.289 c 468.957 695.809 l 468.961 695.809
 l 483.781 742.797 483.781 793.203 468.961 840.191 c 1113.891 1139.711 l
 1113.887 1139.711 l 1152.656 1094.625 1206.785 1065.535 1265.777 1058.078
 c 1324.773 1050.625 1384.434 1065.336 1433.203 1099.363 c 1481.969 1133.391
 1516.363 1184.309 1529.727 1242.254 c 1543.09 1300.195 1534.469 1361.035
 1505.527 1412.984 c 1476.59 1464.93 1429.398 1504.285 1373.094 1523.422
 c 1316.793 1542.555 1255.395 1540.105 1200.793 1516.551 c 1146.195 1492.996
 1102.285 1450.008 1077.574 1395.922 c 1052.859 1341.836 1049.105 1280.504
 1067.039 1223.809 c 422.109 924.289 l 422.113 924.289 l 390.188 961.496
 347.629 988.031 300.172 1000.328 c 252.711 1012.625 202.625 1010.094 156.648
 993.07 c 110.668 976.047 71.008 945.352 43 905.117 c 14.988 864.879 -0.027
 817.027 -0.027 768 c -0.027 718.973 14.988 671.121 43 630.883 c 71.008 
590.648 110.668 559.953 156.648 542.93 c 202.625 525.906 252.711 523.375
 300.172 535.672 c 347.629 547.969 390.188 574.504 422.113 611.711 c 1067.043
 312.191 l 1067.039 312.191 l 1059.699 288.832 1055.977 264.484 1056 240
 c f
Q Q
showpage
%%Trailer
%%EOF
