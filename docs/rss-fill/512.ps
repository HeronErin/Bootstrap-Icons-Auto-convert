%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 0 m 35.27 0 23.062 5.059 14.059 14.059 c 5.059 23.062 0 35.27 0 48 c
 0 336 l 0 348.73 5.059 360.938 14.059 369.941 c 23.062 378.941 35.27 384
 48 384 c 336 384 l 348.73 384 360.938 378.941 369.941 369.941 c 378.941
 360.938 384 348.73 384 336 c 384 48 l 384 35.27 378.941 23.062 369.941 
14.059 c 360.938 5.059 348.73 0 336 0 c h
84 60 m 216.551 60 324 167.449 324 300 c 324 308.574 319.426 316.496 312
 320.785 c 304.574 325.07 295.426 325.07 288 320.785 c 280.574 316.496 276
 308.574 276 300 c 276 266.297 267.129 233.188 250.277 204 c 233.426 174.812
 209.188 150.574 180 133.723 c 150.812 116.871 117.703 108 84 108 c 75.426
 108 67.504 103.426 63.215 96 c 58.93 88.574 58.93 79.426 63.215 72 c 67.504
 64.574 75.426 60 84 60 c 84 156 m 122.191 156 158.816 171.172 185.824 198.176
 c 212.828 225.184 228 261.809 228 300 c 228 308.574 223.426 316.496 216
 320.785 c 208.574 325.07 199.426 325.07 192 320.785 c 184.574 316.496 180
 308.574 180 300 c 180 274.539 169.887 250.121 151.883 232.117 c 133.879
 214.113 109.461 204 84 204 c 75.426 204 67.504 199.426 63.215 192 c 58.93
 184.574 58.93 175.426 63.215 168 c 67.504 160.574 75.426 156 84 156 c 96
 324 m 83.137 324 71.254 317.137 64.824 306 c 58.391 294.863 58.391 281.137
 64.824 270 c 71.254 258.863 83.137 252 96 252 c 108.863 252 120.746 258.863
 127.176 270 c 133.609 281.137 133.609 294.863 127.176 306 c 120.746 317.137
 108.863 324 96 324 c f
Q Q
showpage
%%Trailer
%%EOF
