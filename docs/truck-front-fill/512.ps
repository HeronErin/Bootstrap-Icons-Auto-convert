%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
84 0 m 68.086 0 52.824 6.32 41.574 17.574 c 30.32 28.824 24 44.086 24 60
 c 24 276 l 24 295.633 33.434 313.055 48 324 c 48 372 l 48 375.184 49.266
 378.234 51.516 380.484 c 53.766 382.734 56.816 384 60 384 c 108 384 l 111.184
 384 114.234 382.734 116.484 380.484 c 118.734 378.234 120 375.184 120 372
 c 120 336 l 264 336 l 264 372 l 264 375.184 265.266 378.234 267.516 380.484
 c 269.766 382.734 272.816 384 276 384 c 324 384 l 327.184 384 330.234 382.734
 332.484 380.484 c 334.734 378.234 336 375.184 336 372 c 336 324 l 350.566
 313.055 360 295.633 360 276 c 360 60 l 360 44.086 353.68 28.824 342.426
 17.574 c 331.176 6.32 315.914 0 300 0 c h
72 72 m 72 65.637 74.527 59.531 79.031 55.031 c 83.531 50.527 89.637 48
 96 48 c 288 48 l 294.363 48 300.469 50.527 304.969 55.031 c 309.473 59.531
 312 65.637 312 72 c 312 165.602 l 312 180.602 298.512 191.809 283.922 189.457
 c 262.199 185.93 220.992 180 192 180 c 163.008 180 121.801 185.93 100.078
 189.457 c 93.082 190.598 85.934 188.605 80.527 184.016 c 75.125 179.422
 72.008 172.691 72 165.602 c h
96 288 m 87.426 288 79.504 283.426 75.215 276 c 70.93 268.574 70.93 259.426
 75.215 252 c 79.504 244.574 87.426 240 96 240 c 104.574 240 112.496 244.574
 116.785 252 c 121.07 259.426 121.07 268.574 116.785 276 c 112.496 283.426
 104.574 288 96 288 c 288 288 m 279.426 288 271.504 283.426 267.215 276 
c 262.93 268.574 262.93 259.426 267.215 252 c 271.504 244.574 279.426 240
 288 240 c 296.574 240 304.496 244.574 308.785 252 c 313.07 259.426 313.07
 268.574 308.785 276 c 304.496 283.426 296.574 288 288 288 c 168 240 m 216
 240 l 224.574 240 232.496 244.574 236.785 252 c 241.07 259.426 241.07 268.574
 236.785 276 c 232.496 283.426 224.574 288 216 288 c 168 288 l 159.426 288
 151.504 283.426 147.215 276 c 142.93 268.574 142.93 259.426 147.215 252
 c 151.504 244.574 159.426 240 168 240 c f
Q Q
showpage
%%Trailer
%%EOF
