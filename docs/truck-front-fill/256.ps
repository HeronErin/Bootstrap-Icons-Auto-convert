%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 192
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
42 0 m 34.043 0 26.414 3.16 20.785 8.785 c 15.16 14.414 12 22.043 12 30
 c 12 138 l 12 147.816 16.715 156.527 24 162 c 24 186 l 24 187.59 24.633
 189.117 25.758 190.242 c 26.883 191.367 28.41 192 30 192 c 54 192 l 55.59
 192 57.117 191.367 58.242 190.242 c 59.367 189.117 60 187.59 60 186 c 60
 168 l 132 168 l 132 186 l 132 187.59 132.633 189.117 133.758 190.242 c 
134.883 191.367 136.41 192 138 192 c 162 192 l 163.59 192 165.117 191.367
 166.242 190.242 c 167.367 189.117 168 187.59 168 186 c 168 162 l 175.285
 156.527 180 147.816 180 138 c 180 30 l 180 22.043 176.84 14.414 171.215
 8.785 c 165.586 3.16 157.957 0 150 0 c h
36 36 m 36 29.371 41.371 24 48 24 c 144 24 l 147.184 24 150.234 25.266 
152.484 27.516 c 154.734 29.766 156 32.816 156 36 c 156 82.801 l 156 90.301
 149.258 95.906 141.961 94.73 c 131.102 92.965 110.496 90 96 90 c 81.504
 90 60.898 92.965 50.039 94.727 c 46.539 95.297 42.965 94.305 40.266 92.008
 c 37.562 89.711 36.004 86.348 36 82.801 c h
48 144 m 41.371 144 36 138.629 36 132 c 36 125.371 41.371 120 48 120 c 
54.629 120 60 125.371 60 132 c 60 138.629 54.629 144 48 144 c 144 144 m 
137.371 144 132 138.629 132 132 c 132 125.371 137.371 120 144 120 c 150.629
 120 156 125.371 156 132 c 156 138.629 150.629 144 144 144 c 84 120 m 108
 120 l 114.629 120 120 125.371 120 132 c 120 138.629 114.629 144 108 144
 c 84 144 l 77.371 144 72 138.629 72 132 c 72 125.371 77.371 120 84 120 
c f
Q Q
showpage
%%Trailer
%%EOF
