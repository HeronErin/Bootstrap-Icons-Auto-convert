%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 0 m 272.348 0 211.305 25.285 166.293 70.293 c 121.285 115.305 96 176.348
 96 240 c 96 1104 l 96 1182.527 133.727 1252.223 192 1296 c 192 1488 l 192
 1500.73 197.059 1512.938 206.059 1521.941 c 215.062 1530.941 227.27 1536
 240 1536 c 432 1536 l 444.73 1536 456.938 1530.941 465.941 1521.941 c 474.941
 1512.938 480 1500.73 480 1488 c 480 1344 l 1056 1344 l 1056 1488 l 1056
 1500.73 1061.059 1512.938 1070.059 1521.941 c 1079.062 1530.941 1091.27
 1536 1104 1536 c 1296 1536 l 1308.73 1536 1320.938 1530.941 1329.941 1521.941
 c 1338.941 1512.938 1344 1500.73 1344 1488 c 1344 1296 l 1402.273 1252.223
 1440 1182.527 1440 1104 c 1440 240 l 1440 197.871 1428.91 156.484 1407.848
 120 c 1386.781 83.516 1356.484 53.219 1320 32.152 c 1283.516 11.09 1242.129
 0 1200 0 c h
288 288 m 288 262.539 298.113 238.121 316.117 220.117 c 334.121 202.113
 358.539 192 384 192 c 1152 192 l 1177.461 192 1201.879 202.113 1219.883
 220.117 c 1237.887 238.121 1248 262.539 1248 288 c 1248 662.398 l 1248 
722.398 1194.047 767.23 1135.68 757.824 c 1048.801 743.711 883.969 720 768
 720 c 652.031 720 487.199 743.711 400.32 757.824 c 372.32 762.383 343.734
 754.426 322.113 736.062 c 300.496 717.695 288.023 690.766 288 662.398 c
 h
384 1152 m 349.703 1152 318.012 1133.703 300.863 1104 c 283.711 1074.297
 283.711 1037.703 300.863 1008 c 318.012 978.297 349.703 960 384 960 c 418.297
 960 449.988 978.297 467.137 1008 c 484.289 1037.703 484.289 1074.297 467.137
 1104 c 449.988 1133.703 418.297 1152 384 1152 c 1152 1152 m 1117.703 1152
 1086.012 1133.703 1068.863 1104 c 1051.711 1074.297 1051.711 1037.703 1068.863
 1008 c 1086.012 978.297 1117.703 960 1152 960 c 1186.297 960 1217.988 978.297
 1235.137 1008 c 1252.289 1037.703 1252.289 1074.297 1235.137 1104 c 1217.988
 1133.703 1186.297 1152 1152 1152 c 672 960 m 864 960 l 898.297 960 929.988
 978.297 947.137 1008 c 964.289 1037.703 964.289 1074.297 947.137 1104 c
 929.988 1133.703 898.297 1152 864 1152 c 672 1152 l 637.703 1152 606.012
 1133.703 588.863 1104 c 571.711 1074.297 571.711 1037.703 588.863 1008 
c 606.012 978.297 637.703 960 672 960 c f
Q Q
showpage
%%Trailer
%%EOF
