%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 187
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 187
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 187 rectclip
1 0 0 -1 0 192 cm q
0 g
59.734 10.262 m 59.332 8.672 58.293 7.32 56.867 6.52 c 55.441 5.715 53.746
 5.527 52.18 6.004 c 50.613 6.48 49.309 7.574 48.57 9.035 c 47.832 10.496
 47.719 12.195 48.266 13.738 c 53.188 29.961 l 53.184 29.965 l 42.168 41.184
 36 56.277 36 72 c 156 72 l 156 56.277 149.832 41.184 138.816 29.965 c 143.738
 13.742 l 143.734 13.738 l 144.281 12.195 144.168 10.496 143.43 9.035 c 
142.691 7.574 141.387 6.48 139.82 6.004 c 138.254 5.527 136.559 5.715 135.133
 6.52 c 133.707 7.32 132.668 8.672 132.266 10.262 c 128.773 21.734 l 128.773
 21.73 l 119.023 15.379 107.637 11.996 96 12 c 84.363 11.996 72.977 15.379
 63.227 21.73 c 59.746 10.258 l h
59.734 10.262 m f
156 72 m 156 84 l 102 84 l 102 191.699 l 116.801 190.211 130.52 183.281
 140.496 172.25 c 150.477 161.219 156 146.875 156 132 c 162 132 l 163.59
 132 165.117 132.633 166.242 133.758 c 167.367 134.883 168 136.41 168 138
 c 168 144 l 168 147.312 170.688 150 174 150 c 177.312 150 180 147.312 180
 144 c 180 138 l 180 133.227 178.105 128.648 174.727 125.273 c 171.352 121.895
 166.773 120 162 120 c 156 120 l 156 108 l 174 108 l 177.312 108 180 105.312
 180 102 c 180 98.688 177.312 96 174 96 c 156 96 l 156 84 l 162 84 l 166.773
 84 171.352 82.105 174.727 78.727 c 178.105 75.352 180 70.773 180 66 c 180
 60 l 180 56.688 177.312 54 174 54 c 170.688 54 168 56.688 168 60 c 168 
66 l 168 67.59 167.367 69.117 166.242 70.242 c 165.117 71.367 163.59 72 
162 72 c h
90 191.699 m 90 84 l 36 84 l 36 72 l 30 72 l 26.688 72 24 69.312 24 66 
c 24 60 l 24 56.688 21.312 54 18 54 c 14.688 54 12 56.688 12 60 c 12 66 
l 12 70.773 13.895 75.352 17.273 78.727 c 20.648 82.105 25.227 84 30 84 
c 36 84 l 36 96 l 18 96 l 14.688 96 12 98.688 12 102 c 12 105.312 14.688
 108 18 108 c 36 108 l 36 120 l 30 120 l 25.227 120 20.648 121.895 17.273
 125.273 c 13.895 128.648 12 133.227 12 138 c 12 144 l 12 147.312 14.688
 150 18 150 c 21.312 150 24 147.312 24 144 c 24 138 l 24 134.688 26.688 
132 30 132 c 36 132 l 36 146.875 41.523 161.219 51.504 172.25 c 61.48 183.281
 75.199 190.211 90 191.699 c f
Q Q
showpage
%%Trailer
%%EOF
