%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 8 96 87
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 8 96 87
96 96 cairo_set_page_size
%%EndPageSetup
q 0 8 96 79 rectclip
1 0 0 -1 0 96 cm q
0 g
30 12 m 30 10.344 31.344 9 33 9 c 38.172 9 42.438 10.723 45.359 12.395 
c 46.402 12.988 47.285 13.582 48 14.109 c 48.715 13.582 49.598 12.988 50.641
 12.395 c 54.395 10.211 58.656 9.039 63 9 c 64.656 9 66 10.344 66 12 c 66
 13.656 64.656 15 63 15 c 59.172 15 55.938 16.277 53.617 17.605 c 52.699
 18.125 51.828 18.715 51 19.367 c 51 45 l 54 45 l 55.656 45 57 46.344 57
 48 c 57 49.656 55.656 51 54 51 c 51 51 l 51 76.633 l 51.602 77.113 52.488
 77.754 53.617 78.398 c 55.938 79.723 59.172 81.004 63 81.004 c 63 81 l 
64.656 81 66 82.344 66 84 c 66 85.656 64.656 87 63 87 c 58.656 86.961 54.395
 85.789 50.641 83.605 c 49.73 83.082 48.852 82.516 48 81.898 c 47.152 82.516
 46.27 83.086 45.359 83.609 c 41.605 85.797 37.344 86.965 33 87.008 c 31.344
 87.008 30 85.664 30 84.008 c 30 82.348 31.344 81.008 33 81.008 c 36.828
 81.008 40.062 79.73 42.383 78.402 c 43.512 77.762 44.395 77.117 45 76.637
 c 45 51 l 42 51 l 40.344 51 39 49.656 39 48 c 39 46.344 40.344 45 42 45
 c 45 45 l 45 19.367 l 44.172 18.715 43.301 18.125 42.383 17.605 c 39.535
 15.938 36.301 15.039 33 15 c 31.344 15 30 13.656 30 12 c f*
60 30 m 84 30 l 85.59 30 87.117 30.633 88.242 31.758 c 89.367 32.883 90
 34.41 90 36 c 90 60 l 90 61.59 89.367 63.117 88.242 64.242 c 87.117 65.367
 85.59 66 84 66 c 60 66 l 60 72 l 84 72 l 87.184 72 90.234 70.734 92.484
 68.484 c 94.734 66.234 96 63.184 96 60 c 96 36 l 96 32.816 94.734 29.766
 92.484 27.516 c 90.234 25.266 87.184 24 84 24 c 60 24 l h
36 30 m 36 24 l 12 24 l 5.371 24 0 29.371 0 36 c 0 60 l 0 63.184 1.266 
66.234 3.516 68.484 c 5.766 70.734 8.816 72 12 72 c 36 72 l 36 66 l 12 66
 l 8.688 66 6 63.312 6 60 c 6 36 l 6 32.688 8.688 30 12 30 c h
36 30 m f
Q Q
showpage
%%Trailer
%%EOF
