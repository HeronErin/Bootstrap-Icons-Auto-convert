%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 35 384 348
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 35 384 348
384 384 cairo_set_page_size
%%EndPageSetup
q 0 35 384 313 rectclip
1 0 0 -1 0 384 cm q
0 g
120 48 m 120 41.371 125.371 36 132 36 c 152.688 36 169.754 42.887 181.441
 49.586 c 185.617 51.961 189.145 54.34 192 56.449 c 194.855 54.336 198.383
 51.961 202.559 49.586 c 217.582 40.84 234.621 36.156 252 36 c 258.629 36
 264 41.371 264 48 c 264 54.629 258.629 60 252 60 c 236.688 60 223.754 65.113
 214.465 70.414 c 210.805 72.504 207.305 74.859 204 77.473 c 204 180 l 216
 180 l 222.629 180 228 185.371 228 192 c 228 198.629 222.629 204 216 204
 c 204 204 l 204 306.527 l 206.398 308.449 209.953 311.016 214.465 313.582
 c 223.754 318.887 236.688 323.996 252 323.996 c 252 324 l 258.629 324 264
 329.371 264 336 c 264 342.629 258.629 348 252 348 c 234.621 347.844 217.582
 343.16 202.559 334.414 c 198.922 332.328 195.398 330.055 192 327.602 c 
188.602 330.062 185.078 332.348 181.441 334.441 c 166.418 343.184 149.379
 347.867 132 348.023 c 125.371 348.023 120 342.652 120 336.023 c 120 329.398
 125.371 324.023 132 324.023 c 147.312 324.023 160.246 318.91 169.535 313.609
 c 174.047 311.043 177.574 308.473 180 306.555 c 180 204 l 168 204 l 161.371
 204 156 198.629 156 192 c 156 185.371 161.371 180 168 180 c 180 180 l 180
 77.473 l 176.695 74.859 173.195 72.504 169.535 70.414 c 158.141 63.746 
145.203 60.156 132 60 c 125.371 60 120 54.629 120 48 c f*
240 120 m 336 120 l 342.363 120 348.469 122.527 352.969 127.031 c 357.473
 131.531 360 137.637 360 144 c 360 240 l 360 246.363 357.473 252.469 352.969
 256.969 c 348.469 261.473 342.363 264 336 264 c 240 264 l 240 288 l 336
 288 l 348.73 288 360.938 282.941 369.941 273.941 c 378.941 264.938 384 
252.73 384 240 c 384 144 l 384 131.27 378.941 119.062 369.941 110.059 c 
360.938 101.059 348.73 96 336 96 c 240 96 l h
144 120 m 144 96 l 48 96 l 35.27 96 23.062 101.059 14.059 110.059 c 5.059
 119.062 0 131.27 0 144 c 0 240 l 0 252.73 5.059 264.938 14.059 273.941 
c 23.062 282.941 35.27 288 48 288 c 144 288 l 144 264 l 48 264 l 41.637 
264 35.531 261.473 31.031 256.969 c 26.527 252.469 24 246.363 24 240 c 24
 144 l 24 137.637 26.527 131.531 31.031 127.031 c 35.531 122.527 41.637 
120 48 120 c h
144 120 m f
Q Q
showpage
%%Trailer
%%EOF
