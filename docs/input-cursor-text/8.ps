%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.875 0.75 m 1.875 0.645 1.957 0.562 2.062 0.562 c 2.387 0.562 2.652 0.672
 2.836 0.773 c 2.902 0.812 2.957 0.848 3 0.879 c 3.043 0.848 3.102 0.809
 3.164 0.773 c 3.398 0.637 3.664 0.566 3.938 0.562 c 4.188 0.562 4.188 0.938
 3.938 0.938 c 3.699 0.938 3.496 1.016 3.352 1.102 c 3.293 1.133 3.238 1.168
 3.188 1.211 c 3.188 2.812 l 3.375 2.812 l 3.625 2.812 3.625 3.188 3.375
 3.188 c 3.188 3.188 l 3.188 4.789 l 3.227 4.82 3.281 4.859 3.352 4.898 
c 3.496 4.98 3.699 5.062 3.938 5.062 c 4.188 5.062 4.188 5.438 3.938 5.438
 c 3.664 5.434 3.398 5.363 3.164 5.227 c 3.109 5.191 3.055 5.156 3 5.117
 c 2.945 5.156 2.891 5.191 2.836 5.227 c 2.602 5.363 2.336 5.434 2.062 5.438
 c 1.812 5.438 1.812 5.062 2.062 5.062 c 2.301 5.062 2.504 4.984 2.648 4.898
 c 2.719 4.859 2.773 4.816 2.812 4.789 c 2.812 3.188 l 2.625 3.188 l 2.375
 3.188 2.375 2.812 2.625 2.812 c 2.812 2.812 l 2.812 1.211 l 2.762 1.168
 2.707 1.133 2.648 1.102 c 2.473 0.996 2.27 0.941 2.062 0.938 c 1.957 0.938
 1.875 0.855 1.875 0.75 c f*
3.75 1.875 m 5.25 1.875 l 5.348 1.875 5.445 1.914 5.516 1.984 c 5.586 2.055
 5.625 2.152 5.625 2.25 c 5.625 3.75 l 5.625 3.848 5.586 3.945 5.516 4.016
 c 5.445 4.086 5.348 4.125 5.25 4.125 c 3.75 4.125 l 3.75 4.5 l 5.25 4.5
 l 5.449 4.5 5.641 4.422 5.781 4.281 c 5.922 4.141 6 3.949 6 3.75 c 6 2.25
 l 6 2.051 5.922 1.859 5.781 1.719 c 5.641 1.578 5.449 1.5 5.25 1.5 c 3.75
 1.5 l h
2.25 1.875 m 2.25 1.5 l 0.75 1.5 l 0.336 1.5 0 1.836 0 2.25 c 0 3.75 l 
0 3.949 0.078 4.141 0.219 4.281 c 0.359 4.422 0.551 4.5 0.75 4.5 c 2.25 
4.5 l 2.25 4.125 l 0.75 4.125 l 0.543 4.125 0.375 3.957 0.375 3.75 c 0.375
 2.25 l 0.375 2.043 0.543 1.875 0.75 1.875 c h
2.25 1.875 m f
Q Q
showpage
%%Trailer
%%EOF
