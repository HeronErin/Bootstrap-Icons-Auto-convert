%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 17 192 174
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 17 192 174
192 192 cairo_set_page_size
%%EndPageSetup
q 0 17 192 157 rectclip
1 0 0 -1 0 192 cm q
0 g
60 24 m 60 20.688 62.688 18 66 18 c 76.344 18 84.875 21.445 90.719 24.793
 c 92.809 25.98 94.57 27.168 96 28.227 c 97.43 27.172 99.191 25.984 101.281
 24.793 c 108.789 20.418 117.309 18.078 126 18 c 129.312 18 132 20.688 132
 24 c 132 27.312 129.312 30 126 30 c 118.344 30 111.875 32.555 107.23 35.207
 c 105.402 36.25 103.652 37.43 102 38.734 c 102 90 l 108 90 l 111.312 90
 114 92.688 114 96 c 114 99.312 111.312 102 108 102 c 102 102 l 102 153.266
 l 103.199 154.227 104.977 155.508 107.23 156.793 c 111.875 159.445 118.344
 162 126 162 c 129.312 162 132 164.688 132 168 c 132 171.312 129.312 174
 126 174 c 117.309 173.922 108.789 171.582 101.281 167.207 c 99.461 166.164
 97.699 165.027 96 163.801 c 94.301 165.031 92.539 166.172 90.719 167.219
 c 83.211 171.594 74.691 173.934 66 174.012 c 62.688 174.012 60 171.324 
60 168.012 c 60 164.699 62.688 162.012 66 162.012 c 73.656 162.012 80.125
 159.457 84.77 156.805 c 87.027 155.52 88.789 154.238 90 153.277 c 90 102
 l 84 102 l 80.688 102 78 99.312 78 96 c 78 92.688 80.688 90 84 90 c 90 
90 l 90 38.734 l 88.348 37.43 86.598 36.25 84.77 35.207 c 79.07 31.871 72.602
 30.078 66 30 c 62.688 30 60 27.312 60 24 c f*
120 60 m 168 60 l 171.184 60 174.234 61.266 176.484 63.516 c 178.734 65.766
 180 68.816 180 72 c 180 120 l 180 123.184 178.734 126.234 176.484 128.484
 c 174.234 130.734 171.184 132 168 132 c 120 132 l 120 144 l 168 144 l 174.363
 144 180.469 141.473 184.969 136.969 c 189.473 132.469 192 126.363 192 120
 c 192 72 l 192 65.637 189.473 59.531 184.969 55.031 c 180.469 50.527 174.363
 48 168 48 c 120 48 l h
72 60 m 72 48 l 24 48 l 17.637 48 11.531 50.527 7.031 55.031 c 2.527 59.531
 0 65.637 0 72 c 0 120 l 0 126.363 2.527 132.469 7.031 136.969 c 11.531 
141.473 17.637 144 24 144 c 72 144 l 72 132 l 24 132 l 17.371 132 12 126.629
 12 120 c 12 72 l 12 65.371 17.371 60 24 60 c h
72 60 m f
Q Q
showpage
%%Trailer
%%EOF
