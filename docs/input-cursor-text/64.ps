%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 4 48 44
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 4 48 44
48 48 cairo_set_page_size
%%EndPageSetup
q 0 4 48 40 rectclip
1 0 0 -1 0 48 cm q
0 g
15 6 m 15 5.172 15.672 4.5 16.5 4.5 c 19.086 4.5 21.219 5.359 22.68 6.199
 c 23.203 6.496 23.645 6.793 24 7.059 c 24.355 6.793 24.797 6.496 25.32 
6.199 c 27.199 5.105 29.328 4.52 31.5 4.5 c 32.328 4.5 33 5.172 33 6 c 33
 6.828 32.328 7.5 31.5 7.5 c 29.586 7.5 27.969 8.141 26.809 8.801 c 26.352
 9.062 25.914 9.359 25.5 9.684 c 25.5 22.5 l 27 22.5 l 27.828 22.5 28.5 
23.172 28.5 24 c 28.5 24.828 27.828 25.5 27 25.5 c 25.5 25.5 l 25.5 38.316
 l 25.801 38.555 26.242 38.879 26.809 39.199 c 27.969 39.863 29.586 40.5
 31.5 40.5 c 32.328 40.5 33 41.172 33 42 c 33 42.828 32.328 43.5 31.5 43.5
 c 29.328 43.48 27.199 42.895 25.32 41.801 c 24.867 41.543 24.426 41.258
 24 40.949 c 23.574 41.258 23.133 41.543 22.68 41.805 c 20.801 42.898 18.672
 43.484 16.5 43.504 c 15.672 43.504 15 42.832 15 42.004 c 15 41.176 15.672
 40.504 16.5 40.504 c 18.414 40.504 20.031 39.863 21.191 39.203 c 21.754
 38.883 22.195 38.562 22.5 38.32 c 22.5 25.5 l 21 25.5 l 20.172 25.5 19.5
 24.828 19.5 24 c 19.5 23.172 20.172 22.5 21 22.5 c 22.5 22.5 l 22.5 9.684
 l 22.086 9.359 21.648 9.062 21.191 8.801 c 19.766 7.969 18.152 7.52 16.5
 7.5 c 15.672 7.5 15 6.828 15 6 c f*
30 15 m 42 15 l 42.797 15 43.559 15.316 44.121 15.879 c 44.684 16.441 45
 17.203 45 18 c 45 30 l 45 30.797 44.684 31.559 44.121 32.121 c 43.559 32.684
 42.797 33 42 33 c 30 33 l 30 36 l 42 36 l 43.59 36 45.117 35.367 46.242
 34.242 c 47.367 33.117 48 31.59 48 30 c 48 18 l 48 16.41 47.367 14.883 
46.242 13.758 c 45.117 12.633 43.59 12 42 12 c 30 12 l h
18 15 m 18 12 l 6 12 l 2.688 12 0 14.688 0 18 c 0 30 l 0 31.59 0.633 33.117
 1.758 34.242 c 2.883 35.367 4.41 36 6 36 c 18 36 l 18 33 l 6 33 l 4.344
 33 3 31.656 3 30 c 3 18 l 3 16.344 4.344 15 6 15 c h
18 15 m f
Q Q
showpage
%%Trailer
%%EOF
