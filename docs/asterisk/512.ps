%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 22 0 362 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 22 0 362 384
384 384 cairo_set_page_size
%%EndPageSetup
q 22 0 340 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 198.363 0 204.469 2.527 208.969 7.031 c 213.473 11.531 216 17.637
 216 24 c 216 150.434 l 325.488 87.219 l 325.488 87.215 l 331.004 83.984
 337.578 83.082 343.762 84.719 c 349.941 86.352 355.215 90.383 358.41 95.922
 c 361.605 101.457 362.461 108.039 360.789 114.207 c 359.113 120.379 355.047
 125.625 349.488 128.785 c 240 192 l 349.488 255.215 l 355.047 258.375 359.113
 263.621 360.789 269.793 c 362.461 275.961 361.605 282.543 358.41 288.078
 c 355.215 293.617 349.941 297.648 343.762 299.281 c 337.578 300.918 331.004
 300.016 325.488 296.785 c 216 233.566 l 216 360 l 216 368.574 211.426 376.496
 204 380.785 c 196.574 385.07 187.426 385.07 180 380.785 c 172.574 376.496
 168 368.574 168 360 c 168 233.566 l 58.512 296.781 l 58.512 296.785 l 52.996
 300.016 46.422 300.918 40.238 299.281 c 34.059 297.648 28.785 293.617 25.59
 288.078 c 22.395 282.543 21.539 275.961 23.211 269.793 c 24.887 263.621
 28.953 258.375 34.512 255.215 c 144 192 l 34.512 128.785 l 27.148 124.465
 22.633 116.562 22.648 108.027 c 22.668 99.488 27.223 91.605 34.605 87.32
 c 41.988 83.035 51.09 82.996 58.512 87.215 c 168 150.434 l 168 24 l 168
 17.637 170.527 11.531 175.031 7.031 c 179.531 2.527 185.637 0 192 0 c f
Q Q
showpage
%%Trailer
%%EOF
