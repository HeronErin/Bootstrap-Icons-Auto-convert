%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 12 90 89
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 12 90 89
96 96 cairo_set_page_size
%%EndPageSetup
q 6 12 84 77 rectclip
1 0 0 -1 0 96 cm q
0 g
28.414 11.809 m 23.062 31.422 l 22.977 31.77 l 12.68 33.406 6 36.035 6 
39 c 6 43.969 24.805 48 48 48 c 71.195 48 90 43.969 90 39 c 90 36.035 83.32
 33.406 73.02 31.77 c 72.934 31.422 l 67.582 11.801 l 66.707 8.602 63.395
 6.707 60.148 7.398 c 56.465 8.18 51.719 9 48 9 c 44.281 9 39.535 8.184 
35.852 7.398 c 32.605 6.707 29.293 8.598 28.418 11.809 c 28.508 35.012 m
 28.547 34.613 28.742 34.25 29.051 33.996 c 29.359 33.746 29.754 33.625 
30.148 33.664 c 35.547 34.215 41.609 34.523 48 34.523 c 53.961 34.535 59.918
 34.246 65.852 33.664 c 66.676 33.582 67.41 34.184 67.492 35.012 c 67.578
 35.836 66.977 36.57 66.148 36.652 c 60.641 37.211 54.484 37.523 48 37.523
 c 41.516 37.523 35.359 37.211 29.852 36.652 c 29.453 36.613 29.09 36.418
 28.836 36.109 c 28.586 35.801 28.465 35.406 28.508 35.012 c 21 60 m 33 
60 l 33.797 60 34.559 60.316 35.121 60.879 c 35.684 61.441 36 62.203 36 
63 c 36 69 l 36 73.969 31.969 78 27 78 c 22.031 78 18 73.969 18 69 c 18 
63 l 18 61.344 19.344 60 21 60 c 12 63 m 12.004 61.945 12.176 60.945 12.512
 60 c 12 60 l 10.344 60 9 58.656 9 57 c 9 55.344 10.344 54 12 54 c 33 54
 l 37.535 54 41.359 57.375 41.93 61.871 c 45.887 60.676 50.113 60.676 54.07
 61.871 c 54.641 57.375 58.465 54 63 54 c 84 54 l 85.656 54 87 55.344 87
 57 c 87 58.656 85.656 60 84 60 c 83.488 60 l 83.824 60.945 83.996 61.945
 84 63 c 84 69 l 84 74.359 81.141 79.312 76.5 81.992 c 71.859 84.668 66.141
 84.668 61.5 81.992 c 56.859 79.312 54 74.359 54 69 c 54 68.16 l 52.738 
67.738 l 49.664 66.715 46.336 66.715 43.262 67.738 c 42 68.16 l 42 69 l 
42 74.359 39.141 79.312 34.5 81.992 c 29.859 84.668 24.141 84.668 19.5 81.992
 c 14.859 79.312 12 74.359 12 69 c h
63 60 m 75 60 l 75.797 60 76.559 60.316 77.121 60.879 c 77.684 61.441 78
 62.203 78 63 c 78 69 l 78 73.969 73.969 78 69 78 c 64.031 78 60 73.969 
60 69 c 60 63 l 60 61.344 61.344 60 63 60 c f*
Q Q
showpage
%%Trailer
%%EOF
