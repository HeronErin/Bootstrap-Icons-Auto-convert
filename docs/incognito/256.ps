%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 24 180 178
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 24 180 178
192 192 cairo_set_page_size
%%EndPageSetup
q 12 24 168 154 rectclip
1 0 0 -1 0 192 cm q
0 g
56.832 23.617 m 46.129 62.844 l 45.961 63.539 l 25.355 66.816 12 72.07 
12 78 c 12 87.938 49.609 96 96 96 c 142.391 96 180 87.938 180 78 c 180 72.07
 166.645 66.816 146.039 63.539 c 145.871 62.844 l 135.168 23.605 l 133.414
 17.211 126.793 13.418 120.301 14.797 c 112.934 16.355 103.441 18 96 18 
c 88.559 18 79.066 16.367 71.699 14.797 c 65.207 13.418 58.582 17.195 56.832
 23.617 c 57.012 70.02 m 57.09 69.227 57.48 68.5 58.098 67.992 c 58.715 
67.488 59.508 67.25 60.301 67.332 c 71.102 68.438 83.223 69.047 96 69.047
 c 107.922 69.066 119.836 68.496 131.699 67.332 c 133.352 67.168 134.824
 68.371 134.988 70.02 c 135.152 71.672 133.949 73.141 132.301 73.309 c 121.285
 74.426 108.973 75.047 96 75.047 c 83.027 75.047 70.715 74.422 59.699 73.309
 c 58.906 73.23 58.18 72.84 57.676 72.223 c 57.168 71.605 56.93 70.812 57.012
 70.02 c 42 120 m 66 120 l 67.59 120 69.117 120.633 70.242 121.758 c 71.367
 122.883 72 124.41 72 126 c 72 138 l 72 144.43 68.57 150.375 63 153.59 c
 57.43 156.805 50.57 156.805 45 153.59 c 39.43 150.375 36 144.43 36 138 
c 36 126 l 36 122.688 38.688 120 42 120 c 24 126 m 24.008 123.887 24.348
 121.887 25.02 120 c 24 120 l 20.688 120 18 117.312 18 114 c 18 110.688 
20.688 108 24 108 c 66 108 l 70.383 108 74.613 109.602 77.902 112.5 c 81.191
 115.398 83.309 119.395 83.855 123.742 c 91.773 121.352 100.227 121.352 
108.145 123.742 c 108.691 119.395 110.809 115.398 114.098 112.5 c 117.387
 109.602 121.617 108 126 108 c 168 108 l 171.312 108 174 110.688 174 114
 c 174 117.312 171.312 120 168 120 c 166.98 120 l 167.652 121.887 167.992
 123.887 168 126 c 168 138 l 168 148.719 162.281 158.621 153 163.98 c 143.719
 169.34 132.281 169.34 123 163.98 c 113.719 158.621 108 148.719 108 138 
c 108 136.32 l 105.48 135.48 l 99.328 133.43 92.672 133.43 86.52 135.48 
c 84 136.32 l 84 138 l 84 148.719 78.281 158.621 69 163.98 c 59.719 169.34
 48.281 169.34 39 163.98 c 29.719 158.621 24 148.719 24 138 c h
126 120 m 150 120 l 151.59 120 153.117 120.633 154.242 121.758 c 155.367
 122.883 156 124.41 156 126 c 156 138 l 156 144.43 152.57 150.375 147 153.59
 c 141.43 156.805 134.57 156.805 129 153.59 c 123.43 150.375 120 144.43 
120 138 c 120 126 l 120 122.688 122.688 120 126 120 c f*
Q Q
showpage
%%Trailer
%%EOF
