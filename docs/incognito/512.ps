%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 48 360 355
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 48 360 355
384 384 cairo_set_page_size
%%EndPageSetup
q 24 48 336 307 rectclip
1 0 0 -1 0 384 cm q
0 g
113.664 47.23 m 92.258 125.688 l 91.922 127.078 l 50.711 133.633 24 144.145
 24 156 c 24 175.871 99.215 192 192 192 c 284.785 192 360 175.871 360 156
 c 360 144.145 333.289 133.633 292.078 127.078 c 291.742 125.688 l 270.336
 47.207 l 266.832 34.414 253.582 26.832 240.602 29.59 c 225.863 32.711 206.879
 36 192 36 c 177.121 36 158.137 32.734 143.398 29.594 c 130.414 26.832 117.168
 34.395 113.664 47.234 c 114.023 140.043 m 114.023 140.039 l 114.18 138.453
 114.965 136.996 116.195 135.988 c 117.43 134.98 119.016 134.504 120.602
 134.664 c 142.203 136.871 166.441 138.098 192 138.098 c 215.844 138.137
 239.672 136.988 263.398 134.664 c 266.699 134.332 269.645 136.738 269.977
 140.039 c 270.309 143.34 267.902 146.285 264.602 146.617 c 242.57 148.848
 217.945 150.098 192 150.098 c 166.055 150.098 141.434 148.852 119.398 146.617
 c 117.812 146.457 116.355 145.676 115.348 144.441 c 114.34 143.211 113.863
 141.625 114.023 140.039 c 84 240 m 132 240 l 135.184 240 138.234 241.266
 140.484 243.516 c 142.734 245.766 144 248.816 144 252 c 144 276 l 144 288.863
 137.137 300.746 126 307.176 c 114.863 313.609 101.137 313.609 90 307.176
 c 78.863 300.746 72 288.863 72 276 c 72 252 l 72 245.371 77.371 240 84 
240 c 48 252 m 48.016 247.777 48.695 243.777 50.039 240 c 48 240 l 41.371
 240 36 234.629 36 228 c 36 221.371 41.371 216 48 216 c 132 216 l 140.766
 216 149.23 219.199 155.805 224.996 c 162.379 230.793 166.613 238.793 167.711
 247.488 c 183.551 242.703 200.449 242.703 216.289 247.488 c 217.387 238.793
 221.621 230.793 228.195 224.996 c 234.77 219.199 243.234 216 252 216 c 
336 216 l 342.629 216 348 221.371 348 228 c 348 234.629 342.629 240 336 
240 c 333.961 240 l 335.305 243.777 335.984 247.777 336 252 c 336 276 l 
336 297.438 324.562 317.242 306 327.961 c 287.438 338.68 264.562 338.68 
246 327.961 c 227.438 317.242 216 297.438 216 276 c 216 272.641 l 210.961
 270.961 l 198.652 266.859 185.348 266.859 173.039 270.961 c 168 272.641
 l 168 276 l 168 297.438 156.562 317.242 138 327.961 c 119.438 338.68 96.562
 338.68 78 327.961 c 59.438 317.242 48 297.438 48 276 c h
252 240 m 300 240 l 303.184 240 306.234 241.266 308.484 243.516 c 310.734
 245.766 312 248.816 312 252 c 312 276 l 312 288.863 305.137 300.746 294
 307.176 c 282.863 313.609 269.137 313.609 258 307.176 c 246.863 300.746
 240 288.863 240 276 c 240 252 l 240 245.371 245.371 240 252 240 c f*
Q Q
showpage
%%Trailer
%%EOF
