%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
15 0 m 14 0 13.027 0.098 12.078 0.289 c 13.242 6.168 l 13.82 6.055 14.41
 6 15 6 c 17.746 6 l 17.746 0 l h
28.754 0 m 23.25 0 l 23.25 6 l 28.754 6 l h
39.75 0 m 34.246 0 l 34.246 6 l 39.75 6 l h
50.746 0 m 45.25 0 l 45.25 6 l 50.746 6 l h
61.75 0 m 56.246 0 l 56.246 6 l 61.75 6 l h
72.746 0 m 67.242 0 l 67.242 6 l 72.746 6 l h
81 0 m 78.254 0 l 78.254 6 l 81 6 l 81.605 6 82.191 6.059 82.758 6.176 
c 83.922 0.289 l 82.961 0.098 81.98 0 81 0 c 93.473 6.66 m 92.379 5.023 
90.973 3.617 89.336 2.527 c 86 7.512 l 86.992 8.18 87.82 9.008 88.488 10
 c 93.469 6.664 l h
6.66 2.527 m 5.023 3.621 3.617 5.027 2.527 6.664 c 7.512 10 l 8.172 9.016
 9.02 8.172 10 7.512 c h
96 15 m 96 14 95.902 13.027 95.711 12.078 c 89.832 13.242 l 89.941 13.805
 89.996 14.391 90 15 c 90 17.746 l 96 17.746 l h
0.289 12.078 m 0.098 13.039 0 14.02 0 15 c 0 17.746 l 6 17.746 l 6 15 l
 6 14.395 6.059 13.809 6.176 13.242 c h
0 23.25 m 0 28.754 l 6 28.754 l 6 23.25 l h
96 28.754 m 96 23.25 l 90 23.25 l 90 28.754 l h
0 34.246 m 0 39.75 l 6 39.75 l 6 34.246 l h
96 39.75 m 96 34.246 l 90 34.246 l 90 39.75 l h
0 45.254 m 0 50.75 l 6 50.75 l 6 45.254 l h
90 50.75 m 96 50.75 l 96 45.254 l 90 45.254 l h
0 56.25 m 0 61.754 l 6 61.754 l 6 56.25 l h
96 61.754 m 96 56.25 l 90 56.25 l 90 61.754 l h
0 67.25 m 0 72.754 l 6 72.754 l 6 67.25 l h
96 72.754 m 96 67.25 l 90 67.25 l 90 72.754 l h
0 78.258 m 0 81.004 l 0 82.004 0.098 82.977 0.289 83.926 c 6.168 82.762
 l 6.168 82.758 l 6.055 82.18 6 81.59 6 81 c 6 78.254 l h
96 81.004 m 96 78.258 l 90 78.258 l 90 81.004 l 90 81.609 89.941 82.195
 89.824 82.762 c 95.711 83.926 l 95.902 82.973 96 82 96 81 c 2.527 89.34
 m 3.625 90.973 5.031 92.375 6.668 93.473 c 10.004 88.488 l 9.016 87.828
 8.172 86.984 7.512 85.996 c h
89.34 93.473 m 90.973 92.375 92.375 90.969 93.473 89.332 c 88.488 85.996
 l 87.828 86.98 86.98 87.824 86 88.484 c 89.336 93.465 l h
12.078 95.711 m 13.027 95.902 14 96 15 96 c 17.746 96 l 17.746 90 l 15 
90 l 14.395 90 13.809 89.941 13.242 89.824 c h
81 96 m 82 96 82.973 95.902 83.922 95.711 c 82.758 89.832 l 82.18 89.945
 81.59 90 81 90 c 78.254 90 l 78.254 96 l h
23.25 96 m 28.754 96 l 28.754 90 l 23.25 90 l h
34.246 96 m 39.75 96 l 39.75 90 l 34.246 90 l h
45.25 96 m 50.746 96 l 50.746 90 l 45.25 90 l h
56.246 96 m 61.75 96 l 61.75 90 l 56.246 90 l h
67.242 96 m 72.746 96 l 72.746 90 l 67.242 90 l h
27 45 m 25.344 45 24 46.344 24 48 c 24 49.656 25.344 51 27 51 c 69 51 l
 70.656 51 72 49.656 72 48 c 72 46.344 70.656 45 69 45 c h
27 45 m f
Q Q
showpage
%%Trailer
%%EOF
