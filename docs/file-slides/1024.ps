%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
240 192 m 234.152 192 228.504 194.141 224.121 198.012 c 219.738 201.883
 216.918 207.219 216.191 213.023 c 192.191 405.023 l 191.34 411.852 193.457
 418.723 198.012 423.883 c 202.566 429.043 209.117 432 216 432 c 360 432
 l 360 528.77 l 318.574 531.41 288 540.816 288 552 c 288 565.246 330.961
 576 384 576 c 437.039 576 480 565.246 480 552 c 480 540.816 449.426 531.406
 408 528.77 c 408 432 l 552 432 l 558.883 432 565.434 429.043 569.988 423.883
 c 574.543 418.723 576.66 411.852 575.809 405.023 c 551.809 213.023 l 551.082
 207.219 548.262 201.883 543.879 198.012 c 539.496 194.141 533.848 192 528
 192 c h
336 373.441 m 336 250.559 l 336 245.949 341.09 243.07 345.121 245.469 c
 447.359 306.859 l 447.359 306.863 l 449.16 307.949 450.258 309.898 450.258
 312 c 450.258 314.102 449.16 316.051 447.359 317.137 c 345.121 378.578 
l 345.121 378.574 l 343.25 379.715 340.91 379.746 339.012 378.656 c 337.117
 377.566 335.961 375.531 336 373.344 c h
336 373.441 m f
96 96 m 96 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539
 0 192 0 c 576 0 l 601.461 0 625.879 10.113 643.883 28.117 c 661.887 46.121
 672 70.539 672 96 c 672 672 l 672 697.461 661.887 721.879 643.883 739.883
 c 625.879 757.887 601.461 768 576 768 c 192 768 l 166.539 768 142.121 757.887
 124.117 739.883 c 106.113 721.879 96 697.461 96 672 c h
576 48 m 192 48 l 179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062
 144 83.27 144 96 c 144 672 l 144 684.73 149.059 696.938 158.059 705.941
 c 167.062 714.941 179.27 720 192 720 c 576 720 l 588.73 720 600.938 714.941
 609.941 705.941 c 618.941 696.938 624 684.73 624 672 c 624 96 l 624 83.27
 618.941 71.062 609.941 62.059 c 600.938 53.059 588.73 48 576 48 c f
Q Q
showpage
%%Trailer
%%EOF
