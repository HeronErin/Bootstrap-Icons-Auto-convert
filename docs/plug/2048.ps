%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1152 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1152 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 960 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 0 m 588.73 0 600.938 5.059 609.941 14.059 c 618.941 23.062 624 35.27
 624 48 c 624 288 l 912 288 l 912 48 l 912 30.852 921.148 15.004 936 6.43
 c 950.852 -2.145 969.148 -2.145 984 6.43 c 998.852 15.004 1008 30.852 1008
 48 c 1008 288 l 1104 288 l 1116.73 288 1128.938 293.059 1137.941 302.059
 c 1146.941 311.062 1152 323.27 1152 336 c 1152 624 l 1152 682.98 1136.477
 740.922 1106.984 792 c 1077.496 843.078 1035.078 885.496 984 914.984 c 
932.922 944.477 874.98 960 816 960 c 815.809 1001.664 815.039 1041.121 812.16
 1077.121 c 808.223 1126.465 800.062 1173.41 781.727 1213.824 c 763.16 1256.582
 730.215 1291.492 688.609 1312.512 c 645.602 1334.398 592.223 1344 528 1344
 c 432.191 1344 373.441 1375.68 338.496 1412.93 c 306.93 1446.234 288.926
 1490.121 288 1536 c 192 1536 l 192 1476.863 214.273 1404.77 268.512 1347.07
 c 323.902 1288.32 409.055 1248 528 1248 c 583.777 1248 620.352 1239.551
 644.93 1226.977 c 668.066 1215.168 683.328 1198.176 694.273 1174.176 c 
705.891 1148.641 712.801 1114.559 716.352 1069.535 c 718.945 1036.895 719.711
 1000.605 719.902 960 c 630.809 959.973 545.371 924.562 482.379 861.555 
c 419.387 798.543 384 713.098 384 624 c 384 336 l 384 323.27 389.059 311.062
 398.059 302.059 c 407.062 293.059 419.27 288 432 288 c 528 288 l 528 48
 l 528 35.27 533.059 23.062 542.059 14.059 c 551.062 5.059 563.27 0 576 
0 c 480 384 m 480 624 l 480 666.129 491.09 707.516 512.152 744 c 533.219
 780.484 563.516 810.781 600 831.848 c 636.484 852.91 677.871 864 720 864
 c 816 864 l 858.129 864 899.516 852.91 936 831.848 c 972.484 810.781 1002.781
 780.484 1023.848 744 c 1044.91 707.516 1056 666.129 1056 624 c 1056 384
 l h
480 384 m f
Q Q
showpage
%%Trailer
%%EOF
