%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 162 m 168 78 l 168 76.41 167.367 74.883 166.242 73.758 c 165.117 72.633
 163.59 72 162 72 c 144 72 l 144 54 l 144 52.41 143.367 50.883 142.242 49.758
 c 141.117 48.633 139.59 48 138 48 c 126 48 l 126 42 l 126 40.41 125.367
 38.883 124.242 37.758 c 123.117 36.633 121.59 36 120 36 c 72 36 l 68.688
 36 66 38.688 66 42 c 66 48 l 54 48 l 50.688 48 48 50.688 48 54 c 48 72 
l 30 72 l 26.688 72 24 74.688 24 78 c 24 162 l 24 163.59 24.633 165.117 
25.758 166.242 c 26.883 167.367 28.41 168 30 168 c 162 168 l 163.59 168 
165.117 167.367 166.242 166.242 c 167.367 165.117 168 163.59 168 162 c 45
 132 m 51 132 l 51.797 132 52.559 132.316 53.121 132.879 c 53.684 133.441
 54 134.203 54 135 c 54 153 l 54 153.797 53.684 154.559 53.121 155.121 c
 52.559 155.684 51.797 156 51 156 c 45 156 l 43.344 156 42 154.656 42 153
 c 42 135 l 42 133.344 43.344 132 45 132 c 69 132 m 75 132 l 75.797 132 
76.559 132.316 77.121 132.879 c 77.684 133.441 78 134.203 78 135 c 78 153
 l 78 153.797 77.684 154.559 77.121 155.121 c 76.559 155.684 75.797 156 
75 156 c 69 156 l 67.344 156 66 154.656 66 153 c 66 135 l 66 133.344 67.344
 132 69 132 c 90 135 m 90 133.344 91.344 132 93 132 c 99 132 l 99.797 132
 100.559 132.316 101.121 132.879 c 101.684 133.441 102 134.203 102 135 c
 102 153 l 102 153.797 101.684 154.559 101.121 155.121 c 100.559 155.684
 99.797 156 99 156 c 93 156 l 91.344 156 90 154.656 90 153 c h
117 132 m 123 132 l 123.797 132 124.559 132.316 125.121 132.879 c 125.684
 133.441 126 134.203 126 135 c 126 153 l 126 153.797 125.684 154.559 125.121
 155.121 c 124.559 155.684 123.797 156 123 156 c 117 156 l 115.344 156 114
 154.656 114 153 c 114 135 l 114 133.344 115.344 132 117 132 c 138 135 m
 138 133.344 139.344 132 141 132 c 147 132 l 147.797 132 148.559 132.316
 149.121 132.879 c 149.684 133.441 150 134.203 150 135 c 150 153 l 150 153.797
 149.684 154.559 149.121 155.121 c 148.559 155.684 147.797 156 147 156 c
 141 156 l 139.344 156 138 154.656 138 153 c h
138 135 m f
24 0 m 17.637 0 11.531 2.527 7.031 7.031 c 2.527 11.531 0 17.637 0 24 c
 0 168 l 0 174.363 2.527 180.469 7.031 184.969 c 11.531 189.473 17.637 192
 24 192 c 168 192 l 174.363 192 180.469 189.473 184.969 184.969 c 189.473
 180.469 192 174.363 192 168 c 192 24 l 192 17.637 189.473 11.531 184.969
 7.031 c 180.469 2.527 174.363 0 168 0 c h
12 24 m 12 17.371 17.371 12 24 12 c 168 12 l 171.184 12 174.234 13.266 
176.484 15.516 c 178.734 17.766 180 20.816 180 24 c 180 168 l 180 171.184
 178.734 174.234 176.484 176.484 c 174.234 178.734 171.184 180 168 180 c
 24 180 l 17.371 180 12 174.629 12 168 c h
12 24 m f
Q Q
showpage
%%Trailer
%%EOF
