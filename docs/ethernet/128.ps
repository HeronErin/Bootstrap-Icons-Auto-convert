%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 81 m 84 39 l 84 38.203 83.684 37.441 83.121 36.879 c 82.559 36.316 81.797
 36 81 36 c 72 36 l 72 27 l 72 26.203 71.684 25.441 71.121 24.879 c 70.559
 24.316 69.797 24 69 24 c 63 24 l 63 21 l 63 20.203 62.684 19.441 62.121
 18.879 c 61.559 18.316 60.797 18 60 18 c 36 18 l 34.344 18 33 19.344 33
 21 c 33 24 l 27 24 l 25.344 24 24 25.344 24 27 c 24 36 l 15 36 l 13.344
 36 12 37.344 12 39 c 12 81 l 12 81.797 12.316 82.559 12.879 83.121 c 13.441
 83.684 14.203 84 15 84 c 81 84 l 81.797 84 82.559 83.684 83.121 83.121 
c 83.684 82.559 84 81.797 84 81 c 22.5 66 m 25.5 66 l 25.898 66 26.281 66.156
 26.562 66.438 c 26.844 66.719 27 67.102 27 67.5 c 27 76.5 l 27 76.898 26.844
 77.281 26.562 77.562 c 26.281 77.844 25.898 78 25.5 78 c 22.5 78 l 21.672
 78 21 77.328 21 76.5 c 21 67.5 l 21 66.672 21.672 66 22.5 66 c 34.5 66 
m 37.5 66 l 37.898 66 38.281 66.156 38.562 66.438 c 38.844 66.719 39 67.102
 39 67.5 c 39 76.5 l 39 76.898 38.844 77.281 38.562 77.562 c 38.281 77.844
 37.898 78 37.5 78 c 34.5 78 l 33.672 78 33 77.328 33 76.5 c 33 67.5 l 33
 66.672 33.672 66 34.5 66 c 45 67.5 m 45 66.672 45.672 66 46.5 66 c 49.5
 66 l 49.898 66 50.281 66.156 50.562 66.438 c 50.844 66.719 51 67.102 51
 67.5 c 51 76.5 l 51 76.898 50.844 77.281 50.562 77.562 c 50.281 77.844 
49.898 78 49.5 78 c 46.5 78 l 45.672 78 45 77.328 45 76.5 c h
58.5 66 m 61.5 66 l 61.898 66 62.281 66.156 62.562 66.438 c 62.844 66.719
 63 67.102 63 67.5 c 63 76.5 l 63 76.898 62.844 77.281 62.562 77.562 c 62.281
 77.844 61.898 78 61.5 78 c 58.5 78 l 57.672 78 57 77.328 57 76.5 c 57 67.5
 l 57 66.672 57.672 66 58.5 66 c 69 67.5 m 69 66.672 69.672 66 70.5 66 c
 73.5 66 l 73.898 66 74.281 66.156 74.562 66.438 c 74.844 66.719 75 67.102
 75 67.5 c 75 76.5 l 75 76.898 74.844 77.281 74.562 77.562 c 74.281 77.844
 73.898 78 73.5 78 c 70.5 78 l 69.672 78 69 77.328 69 76.5 c h
69 67.5 m f
12 0 m 5.371 0 0 5.371 0 12 c 0 84 l 0 87.184 1.266 90.234 3.516 92.484
 c 5.766 94.734 8.816 96 12 96 c 84 96 l 87.184 96 90.234 94.734 92.484 
92.484 c 94.734 90.234 96 87.184 96 84 c 96 12 l 96 8.816 94.734 5.766 92.484
 3.516 c 90.234 1.266 87.184 0 84 0 c h
6 12 m 6 8.688 8.688 6 12 6 c 84 6 l 85.59 6 87.117 6.633 88.242 7.758 
c 89.367 8.883 90 10.41 90 12 c 90 84 l 90 85.59 89.367 87.117 88.242 88.242
 c 87.117 89.367 85.59 90 84 90 c 12 90 l 8.688 90 6 87.312 6 84 c h
6 12 m f
Q Q
showpage
%%Trailer
%%EOF
