%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 36 168 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 36 168 156
192 192 cairo_set_page_size
%%EndPageSetup
q 24 36 144 120 rectclip
1 0 0 -1 0 192 cm q
0 g
30 36 m 26.688 36 24 38.688 24 42 c 24 45.312 26.688 48 30 48 c 162 48 
l 165.312 48 168 45.312 168 42 c 168 38.688 165.312 36 162 36 c h
90 72 m 86.688 72 84 74.688 84 78 c 84 81.312 86.688 84 90 84 c 162 84 
l 165.312 84 168 81.312 168 78 c 168 74.688 165.312 72 162 72 c h
90 108 m 86.688 108 84 110.688 84 114 c 84 117.312 86.688 120 90 120 c 
162 120 l 165.312 120 168 117.312 168 114 c 168 110.688 165.312 108 162 
108 c h
30 144 m 26.688 144 24 146.688 24 150 c 24 153.312 26.688 156 30 156 c 
162 156 l 165.312 156 168 153.312 168 150 c 168 146.688 165.312 144 162 
144 c h
39.48 79.523 m 40.824 78.586 42.602 77.488 44.809 76.223 c 42.289 72 l 
40.824 72.887 39.016 74.035 36.863 75.445 c 34.703 76.852 32.664 78.566 
30.742 80.582 c 30.742 80.578 l 28.836 82.586 27.227 84.859 25.969 87.324
 c 24.656 89.805 24 92.57 24 95.629 c 24 99.949 24.867 103.441 26.605 106.105
 c 28.34 108.73 31.223 110.043 35.246 110.043 c 37.82 110.043 39.84 109.199
 41.293 107.512 c 41.293 107.508 l 42.703 105.996 43.504 104.02 43.547 101.953
 c 43.547 99.191 42.703 97.109 41.016 95.699 c 39.375 94.242 37.105 93.516
 34.199 93.516 c 30.816 93.516 l 31.105 91.074 31.598 89.082 32.293 87.539
 c 33.055 85.906 34.078 84.41 35.316 83.102 c 36.559 81.754 37.953 80.555
 39.469 79.523 c h
65.484 79.523 m 66.844 78.586 68.625 77.488 70.824 76.223 c 68.305 72 l
 66.84 72.887 65.031 74.035 62.879 75.445 c 60.719 76.852 58.68 78.566 56.758
 80.582 c 56.762 80.578 l 54.852 82.586 53.242 84.859 51.984 87.324 c 50.664
 89.805 50.008 92.57 50.016 95.629 c 50.016 99.949 50.883 103.441 52.621
 106.105 c 54.355 108.73 57.238 110.043 61.262 110.043 c 63.836 110.043 
65.855 109.199 67.309 107.512 c 67.309 107.508 l 68.719 105.996 69.52 104.02
 69.562 101.953 c 69.562 99.191 68.719 97.109 67.031 95.699 c 65.391 94.242
 63.121 93.516 60.215 93.516 c 56.832 93.516 l 57.023 91.492 57.5 89.504
 58.246 87.613 c 58.941 86.062 59.969 84.562 61.332 83.113 c 62.574 81.758
 63.965 80.551 65.484 79.512 c h
65.484 79.523 m f
Q Q
showpage
%%Trailer
%%EOF
