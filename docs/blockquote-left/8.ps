%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
0.938 1.125 m 0.688 1.125 0.688 1.5 0.938 1.5 c 5.062 1.5 l 5.312 1.5 5.312
 1.125 5.062 1.125 c h
2.812 2.25 m 2.562 2.25 2.562 2.625 2.812 2.625 c 5.062 2.625 l 5.312 2.625
 5.312 2.25 5.062 2.25 c h
2.812 3.375 m 2.562 3.375 2.562 3.75 2.812 3.75 c 5.062 3.75 l 5.312 3.75
 5.312 3.375 5.062 3.375 c h
0.938 4.5 m 0.688 4.5 0.688 4.875 0.938 4.875 c 5.062 4.875 l 5.312 4.875
 5.312 4.5 5.062 4.5 c h
1.234 2.484 m 1.277 2.457 1.332 2.422 1.402 2.383 c 1.32 2.25 l 1.273 2.277
 1.219 2.312 1.152 2.359 c 1.086 2.402 1.02 2.457 0.961 2.52 c 0.902 2.582
 0.852 2.652 0.812 2.73 c 0.77 2.805 0.75 2.895 0.75 2.988 c 0.75 3.125 
0.777 3.23 0.832 3.316 c 0.887 3.398 0.977 3.438 1.102 3.438 c 1.184 3.438
 1.246 3.41 1.289 3.359 c 1.336 3.312 1.359 3.25 1.359 3.188 c 1.359 3.102
 1.332 3.035 1.281 2.992 c 1.23 2.945 1.16 2.926 1.066 2.926 c 0.961 2.926
 l 0.969 2.848 0.984 2.789 1.008 2.738 c 1.008 2.734 l 1.031 2.684 1.066
 2.637 1.105 2.598 c 1.141 2.555 1.188 2.516 1.234 2.484 c h
2.047 2.484 m 2.09 2.457 2.145 2.422 2.215 2.383 c 2.133 2.25 l 2.086 2.277
 2.031 2.312 1.965 2.359 c 1.898 2.402 1.832 2.457 1.773 2.52 c 1.715 2.582
 1.664 2.652 1.625 2.73 c 1.582 2.809 1.562 2.895 1.562 2.988 c 1.562 3.125
 1.59 3.23 1.645 3.316 c 1.699 3.398 1.789 3.438 1.914 3.438 c 1.996 3.438
 2.059 3.41 2.102 3.359 c 2.148 3.312 2.172 3.25 2.176 3.188 c 2.176 3.102
 2.148 3.035 2.098 2.992 c 2.047 2.945 1.977 2.926 1.883 2.926 c 1.777 2.926
 l 1.777 2.922 l 1.781 2.859 1.797 2.797 1.82 2.738 c 1.844 2.691 1.875 
2.645 1.918 2.598 c 1.957 2.555 2 2.516 2.047 2.484 c h
2.047 2.484 m f
Q Q
showpage
%%Trailer
%%EOF
