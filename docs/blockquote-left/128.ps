%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 18 84 78
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 18 84 78
96 96 cairo_set_page_size
%%EndPageSetup
q 12 18 72 60 rectclip
1 0 0 -1 0 96 cm q
0 g
15 18 m 13.344 18 12 19.344 12 21 c 12 22.656 13.344 24 15 24 c 81 24 l
 82.656 24 84 22.656 84 21 c 84 19.344 82.656 18 81 18 c h
45 36 m 43.344 36 42 37.344 42 39 c 42 40.656 43.344 42 45 42 c 81 42 l
 82.656 42 84 40.656 84 39 c 84 37.344 82.656 36 81 36 c h
45 54 m 43.344 54 42 55.344 42 57 c 42 58.656 43.344 60 45 60 c 81 60 l
 82.656 60 84 58.656 84 57 c 84 55.344 82.656 54 81 54 c h
15 72 m 13.344 72 12 73.344 12 75 c 12 76.656 13.344 78 15 78 c 81 78 l
 82.656 78 84 76.656 84 75 c 84 73.344 82.656 72 81 72 c h
19.738 39.762 m 20.41 39.293 21.297 38.742 22.402 38.113 c 21.145 36 l 
20.414 36.445 19.508 37.02 18.434 37.723 c 17.355 38.426 16.332 39.281 15.375
 40.289 c 15.371 40.289 l 14.418 41.293 13.613 42.43 12.984 43.66 c 12.328
 44.902 12 46.285 12 47.812 c 12 49.973 12.434 51.719 13.301 53.051 c 14.168
 54.363 15.609 55.02 17.621 55.02 c 18.91 55.02 19.918 54.598 20.645 53.754
 c 21.352 53 21.754 52.008 21.773 50.977 c 21.773 49.598 21.352 48.555 20.508
 47.852 c 19.688 47.125 18.551 46.758 17.102 46.758 c 15.41 46.758 l 15.555
 45.539 15.801 44.543 16.148 43.77 c 16.145 43.77 l 16.527 42.953 17.039
 42.203 17.656 41.551 c 18.281 40.875 18.977 40.277 19.734 39.762 c h
32.742 39.762 m 33.422 39.293 34.312 38.742 35.414 38.113 c 34.152 36 l
 33.422 36.445 32.516 37.02 31.441 37.723 c 30.363 38.426 29.34 39.281 28.383
 40.289 c 28.379 40.289 l 27.426 41.293 26.621 42.43 25.992 43.66 c 25.332
 44.898 25.004 46.285 25.008 47.812 c 25.008 49.973 25.441 51.719 26.309
 53.051 c 27.176 54.363 28.617 55.02 30.629 55.02 c 31.918 55.02 32.926 
54.598 33.652 53.754 c 34.359 53 34.762 52.008 34.781 50.977 c 34.781 49.598
 34.359 48.555 33.516 47.852 c 32.695 47.125 31.559 46.758 30.109 46.758
 c 28.414 46.758 l 28.512 45.746 28.75 44.75 29.125 43.805 c 29.473 43.027
 29.988 42.277 30.668 41.555 c 30.664 41.555 l 31.285 40.879 31.984 40.273
 32.742 39.758 c h
32.742 39.762 m f
Q Q
showpage
%%Trailer
%%EOF
