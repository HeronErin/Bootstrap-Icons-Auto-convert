%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 72 336 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 72 336 312
384 384 cairo_set_page_size
%%EndPageSetup
q 48 72 288 240 rectclip
1 0 0 -1 0 384 cm q
0 g
60 72 m 53.371 72 48 77.371 48 84 c 48 90.629 53.371 96 60 96 c 324 96 
l 330.629 96 336 90.629 336 84 c 336 77.371 330.629 72 324 72 c h
180 144 m 173.371 144 168 149.371 168 156 c 168 162.629 173.371 168 180
 168 c 324 168 l 330.629 168 336 162.629 336 156 c 336 149.371 330.629 144
 324 144 c h
180 216 m 173.371 216 168 221.371 168 228 c 168 234.629 173.371 240 180
 240 c 324 240 l 330.629 240 336 234.629 336 228 c 336 221.371 330.629 216
 324 216 c h
60 288 m 53.371 288 48 293.371 48 300 c 48 306.629 53.371 312 60 312 c 
324 312 l 330.629 312 336 306.629 336 300 c 336 293.371 330.629 288 324 
288 c h
78.961 159.047 m 81.648 157.176 85.199 154.977 89.617 152.445 c 84.574 
144 l 81.645 145.777 78.031 148.07 73.727 150.887 c 69.406 153.703 65.328
 157.125 61.488 161.16 c 57.672 165.172 54.453 169.715 51.938 174.648 c 
49.312 179.609 48 185.145 48 191.258 c 48 199.898 49.734 206.883 53.207 
212.211 c 56.68 217.457 62.438 220.082 70.488 220.082 c 75.641 220.082 79.672
 218.395 82.586 215.02 c 82.586 215.016 l 85.402 211.992 87.012 208.035 
87.098 203.902 c 87.098 198.383 85.41 194.215 82.035 191.398 c 78.754 188.488
 74.211 187.031 68.402 187.031 c 61.633 187.031 l 62.207 182.152 63.191 
178.168 64.586 175.078 c 66.109 171.816 68.152 168.816 70.633 166.199 c 
73.117 163.508 75.902 161.105 78.938 159.047 c h
130.969 159.047 m 133.688 157.176 137.25 154.977 141.648 152.445 c 136.609
 144 l 133.68 145.777 130.066 148.07 125.762 150.887 c 121.441 153.703 117.363
 157.125 113.523 161.16 c 113.52 161.16 l 109.703 165.172 106.488 169.715
 103.969 174.648 c 101.328 179.609 100.016 185.145 100.031 191.258 c 100.031
 199.898 101.766 206.883 105.238 212.211 c 108.711 217.457 114.469 220.082
 122.52 220.082 c 127.672 220.082 131.703 218.395 134.617 215.02 c 134.617
 215.016 l 137.438 211.992 139.043 208.035 139.129 203.902 c 139.129 198.383
 137.441 194.215 134.066 191.398 c 130.785 188.488 126.242 187.031 120.434
 187.031 c 113.664 187.031 l 114.047 182.98 115 179.008 116.496 175.223 
c 117.887 172.117 119.945 169.117 122.664 166.223 c 125.148 163.516 127.934
 161.098 130.969 159.023 c h
130.969 159.047 m f
Q Q
showpage
%%Trailer
%%EOF
