%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 72 90 l 73.59 90 75.117 89.367 76.242 88.242 c 77.367 87.117
 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57 18 c 57 6 l 24 
6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12 5.371 17.371 0 
24 0 c 57 0 l h
0 95.094 m 9.984 95.094 l 11.617 95.094 13.055 94.828 14.305 94.301 c 15.566
 93.762 16.551 92.988 17.262 91.984 c 17.98 90.973 18.34 89.754 18.336 88.324
 c 18.367 87.258 18.113 86.203 17.598 85.266 c 17.145 84.449 16.473 83.777
 15.66 83.316 c 14.84 82.848 13.93 82.562 12.988 82.477 c 12.988 82.262 
l 13.75 82.082 14.469 81.754 15.102 81.301 c 15.723 80.84 16.223 80.234 
16.559 79.535 c 16.941 78.75 17.129 77.879 17.102 77.004 c 17.102 75.152
 16.457 73.707 15.168 72.664 c 13.879 71.621 12.164 71.098 10.02 71.098 
c 0 71.102 l h
4.711 74.668 m 8.91 74.668 l 10.031 74.668 10.891 74.949 11.496 75.508 
c 12.117 76.059 12.426 76.828 12.426 77.812 c 12.453 78.441 12.281 79.062
 11.934 79.59 c 11.566 80.109 11.043 80.496 10.441 80.699 c 9.605 80.984
 8.723 81.117 7.844 81.086 c 4.711 81.086 l h
4.711 84.387 m 9.211 84.387 l 10.137 84.387 10.922 84.531 11.57 84.824 
c 11.566 84.828 l 12.172 85.082 12.68 85.527 13.008 86.094 c 13.355 86.684
 13.523 87.359 13.5 88.043 c 13.5 89.18 13.09 90.047 12.27 90.648 c 11.449
 91.234 10.109 91.523 8.242 91.523 c 4.711 91.523 l h
25.555 95.09 m 25.555 79.129 l 25.781 79.129 l 31.492 92.09 l 34.582 92.09
 l 40.266 79.129 l 40.492 79.129 l 40.492 95.09 l 44.781 95.09 l 44.785 
71.102 l 39.984 71.102 l 33.145 86.676 l 32.988 86.676 l 26.148 71.102 l
 21.32 71.102 l 21.32 95.094 l h
49.062 71.098 m 58.664 71.098 l 60.398 71.098 61.863 71.457 63.055 72.172
 c 64.262 72.875 65.184 73.828 65.816 75.035 c 66.453 76.242 66.77 77.598
 66.77 79.098 c 66.77 80.598 66.445 81.953 65.797 83.16 c 65.164 84.355 
64.242 85.305 63.023 86.004 c 61.676 86.73 60.156 87.09 58.625 87.043 c 
53.809 87.043 l 53.809 95.094 l 49.07 95.094 l h
61.422 81.383 m 61.777 80.676 61.953 79.891 61.934 79.098 c 61.934 77.738
 61.562 76.695 60.824 75.973 c 60.086 75.246 59.059 74.879 57.754 74.879
 c 53.793 74.879 l 53.793 83.316 l 57.754 83.316 l 57.75 83.316 l 58.527
 83.336 59.301 83.168 60 82.824 c 60.609 82.5 61.105 81.996 61.422 81.383
 c f*
Q Q
showpage
%%Trailer
%%EOF
