%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 288 360 l 294.363 360 300.469 357.473 304.969
 352.969 c 309.473 348.469 312 342.363 312 336 c 312 108 l 264 108 l 254.453
 108 245.297 104.207 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c
 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531 
72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059
 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
0 380.375 m 39.938 380.375 l 46.465 380.375 52.227 379.32 57.219 377.207
 c 62.258 375.047 66.203 371.961 69.051 367.941 c 71.93 363.895 73.363 359.012
 73.348 353.301 c 73.344 353.305 l 73.469 349.035 72.449 344.809 70.391 
341.062 c 68.57 337.805 65.891 335.105 62.641 333.266 c 59.359 331.395 55.719
 330.246 51.961 329.902 c 51.961 329.039 l 55 328.32 57.867 327.016 60.406
 325.199 c 62.891 323.352 64.895 320.934 66.238 318.145 c 67.77 314.992 
68.512 311.516 68.398 308.016 c 68.398 300.609 65.824 294.824 60.672 290.664
 c 55.52 286.488 48.656 284.398 40.078 284.398 c 0 284.398 l h
18.84 298.68 m 35.641 298.68 l 40.121 298.68 43.57 299.801 45.984 302.039
 c 48.465 304.246 49.703 307.32 49.703 311.254 c 49.703 311.258 l 49.809
 313.773 49.121 316.258 47.734 318.359 c 46.266 320.438 44.172 321.992 41.762
 322.801 c 38.418 323.945 34.898 324.465 31.367 324.336 c 18.84 324.336 
l h
18.84 337.559 m 36.84 337.559 l 40.535 337.559 43.68 338.145 46.273 339.312
 c 48.695 340.324 50.719 342.102 52.031 344.375 c 53.414 346.734 54.098 
349.441 54 352.176 c 54 356.719 52.359 360.191 49.078 362.59 c 45.797 364.926
 40.43 366.094 32.973 366.094 c 18.84 366.098 l h
102.215 380.375 m 102.215 316.535 l 103.125 316.535 l 125.973 368.375 l
 138.332 368.375 l 161.059 316.535 l 161.969 316.535 l 161.969 380.375 l
 179.129 380.375 l 179.137 284.398 l 159.938 284.398 l 132.578 346.703 l
 131.953 346.703 l 104.594 284.398 l 85.273 284.398 l 85.273 380.375 l h
196.246 284.398 m 234.645 284.398 l 241.59 284.398 247.445 285.832 252.211
 288.695 c 257.043 291.512 260.723 295.328 263.25 300.145 c 265.793 304.977
 267.066 310.391 267.066 316.391 c 267.066 322.391 265.77 327.805 263.18
 332.637 c 260.652 337.422 256.957 341.211 252.09 344.012 c 252.098 344.016
 l 246.699 346.926 240.633 348.359 234.504 348.168 c 215.23 348.168 l 215.23
 380.375 l 196.27 380.375 l h
245.688 325.535 m 247.113 322.703 247.812 319.562 247.727 316.391 c 247.727
 310.949 246.246 306.781 243.285 303.887 c 240.324 300.977 236.23 299.52
 230.996 299.52 c 215.156 299.52 l 215.156 333.262 l 230.996 333.262 l 231
 333.266 l 234.117 333.348 237.203 332.672 240 331.297 c 242.434 329.992
 244.418 327.984 245.688 325.535 c f*
Q Q
showpage
%%Trailer
%%EOF
