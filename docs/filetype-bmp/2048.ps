%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1152 1440 l 1177.461 1440 1201.879 1429.887 1219.883 1411.883
 c 1237.887 1393.879 1248 1369.461 1248 1344 c 1248 432 l 1056 432 l 1017.809
 432 981.184 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288
 c 912 96 l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113
 142.121 288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078
 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 
l h
0 1521.504 m 159.742 1521.504 l 185.855 1521.504 208.895 1517.281 228.863
 1508.832 c 249.023 1500.191 264.801 1487.84 276.191 1471.777 c 287.711 
1455.586 293.438 1436.066 293.375 1413.219 c 293.375 1413.215 l 293.867 
1396.137 289.793 1379.234 281.566 1364.258 c 274.281 1351.215 263.559 1340.422
 250.559 1333.055 c 237.445 1325.574 222.879 1320.988 207.84 1319.617 c 
207.84 1316.16 l 219.996 1313.289 231.473 1308.07 241.633 1300.801 c 251.57
 1293.41 259.574 1283.727 264.961 1272.574 c 271.082 1259.973 274.047 1246.07
 273.602 1232.062 c 273.602 1202.43 263.297 1179.293 242.691 1162.656 c 
222.082 1145.953 194.629 1137.602 160.324 1137.602 c 0 1137.602 l h
75.359 1194.719 m 142.559 1194.719 l 160.48 1194.719 174.27 1199.199 183.934
 1208.16 c 193.855 1216.992 198.812 1229.281 198.812 1245.023 c 198.816 
1245.023 l 199.238 1255.086 196.484 1265.027 190.945 1273.441 c 185.059 
1281.746 176.688 1287.965 167.039 1291.199 c 153.68 1295.777 139.586 1297.863
 125.473 1297.344 c 75.359 1297.344 l h
75.359 1350.238 m 147.359 1350.238 l 162.145 1350.238 174.719 1352.574 
185.086 1357.246 c 185.09 1357.246 l 194.777 1361.297 202.871 1368.414 208.129
 1377.504 c 213.664 1386.945 216.395 1397.766 216 1408.703 c 216 1426.879
 209.441 1440.766 196.32 1450.367 c 183.199 1459.711 161.727 1464.383 131.906
 1464.383 c 75.359 1464.383 l h
408.863 1521.504 m 408.863 1266.145 l 412.512 1266.145 l 503.902 1473.504
 l 553.344 1473.504 l 644.254 1266.145 l 647.902 1266.145 l 647.902 1521.504
 l 716.543 1521.504 l 716.543 1137.602 l 639.742 1137.602 l 530.301 1386.816
 l 527.805 1386.816 l 418.363 1137.602 l 341.082 1137.602 l 341.082 1521.504
 l h
784.992 1137.602 m 938.594 1137.602 l 966.371 1137.602 989.793 1143.328
 1008.867 1154.785 c 1028.195 1166.051 1042.914 1181.312 1053.027 1200.578
 c 1063.203 1219.906 1068.293 1241.57 1068.293 1265.57 c 1068.293 1289.57
 1063.109 1311.234 1052.742 1330.562 c 1042.629 1349.699 1027.848 1364.867
 1008.391 1376.066 c 1008.383 1376.062 l 986.801 1387.703 962.523 1393.43
 938.016 1392.672 c 860.926 1392.672 l 860.926 1521.504 l 785.086 1521.504
 l h
982.754 1302.145 m 988.449 1290.812 991.254 1278.246 990.91 1265.566 c 
990.91 1243.805 984.988 1227.133 973.148 1215.551 c 961.309 1203.902 944.926
 1198.078 923.996 1198.078 c 860.637 1198.078 l 860.637 1333.055 l 924 1333.055
 l 936.461 1333.391 948.816 1330.691 960 1325.184 c 969.734 1319.977 977.664
 1311.945 982.754 1302.145 c f*
Q Q
showpage
%%Trailer
%%EOF
