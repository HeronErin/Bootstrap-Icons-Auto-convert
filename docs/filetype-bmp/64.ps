%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 36 45 l 36.797 45 37.559 44.684 38.121 44.121 c 38.684 
43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5 28.5 11.484 28.5
 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33 l 6 6 l 6 2.688 
8.688 0 12 0 c 28.5 0 l h
0 47.547 m 4.992 47.547 l 5.809 47.547 6.527 47.414 7.152 47.152 c 7.781
 46.883 8.273 46.496 8.633 45.996 c 8.992 45.488 9.172 44.879 9.168 44.168
 c 9.168 44.164 l 9.184 43.629 9.055 43.102 8.801 42.633 c 8.57 42.227 8.234
 41.887 7.828 41.656 c 7.422 41.426 6.965 41.281 6.496 41.238 c 6.496 41.129
 l 6.875 41.039 7.234 40.879 7.551 40.648 c 7.863 40.418 8.113 40.117 8.281
 39.77 c 8.473 39.375 8.562 38.941 8.551 38.504 c 8.551 37.578 8.23 36.855
 7.586 36.336 c 6.941 35.812 6.082 35.555 5.012 35.555 c 0 35.551 l h
2.355 37.336 m 4.457 37.336 l 5.016 37.336 5.449 37.477 5.75 37.758 c 6.059
 38.035 6.215 38.418 6.215 38.91 c 6.215 38.906 l 6.227 39.223 6.141 39.531
 5.969 39.797 c 5.781 40.055 5.523 40.25 5.219 40.352 c 4.801 40.492 4.363
 40.559 3.922 40.543 c 2.355 40.543 l h
2.355 42.195 m 4.605 42.195 l 5.066 42.195 5.461 42.27 5.785 42.414 c 6.086
 42.539 6.34 42.762 6.504 43.047 c 6.676 43.344 6.762 43.68 6.75 44.023 
c 6.75 44.59 6.547 45.027 6.137 45.324 c 5.727 45.617 5.055 45.762 4.125
 45.762 c 2.355 45.762 l h
12.777 47.547 m 12.777 39.566 l 12.891 39.566 l 15.746 46.047 l 17.293 
46.047 l 20.133 39.566 l 20.246 39.566 l 20.246 47.547 l 22.391 47.547 l
 22.391 35.551 l 19.992 35.551 l 16.57 43.34 l 16.492 43.34 l 13.07 35.551
 l 10.656 35.551 l 10.656 47.547 l h
24.531 35.551 m 29.332 35.551 l 30.199 35.551 30.934 35.73 31.527 36.086
 c 32.133 36.438 32.59 36.914 32.906 37.516 c 33.223 38.121 33.383 38.797
 33.383 39.547 c 33.383 40.297 33.223 40.973 32.898 41.578 c 32.582 42.176
 32.121 42.648 31.512 43 c 31.512 43.004 l 30.836 43.367 30.078 43.543 29.312
 43.52 c 26.902 43.52 l 26.902 47.547 l 24.531 47.547 l h
30.711 40.691 m 30.891 40.34 30.977 39.945 30.965 39.551 c 30.965 38.871
 30.781 38.352 30.41 37.988 c 30.039 37.625 29.527 37.441 28.875 37.441 
c 26.895 37.441 l 26.895 41.66 l 28.875 41.66 l 28.875 41.656 l 29.266 41.668
 29.652 41.586 30 41.41 c 30.305 41.25 30.551 41 30.711 40.691 c f*
Q Q
showpage
%%Trailer
%%EOF
