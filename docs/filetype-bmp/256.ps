%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 144 180 l 147.184 180 150.234 178.734 152.484
 176.484 c 154.734 174.234 156 171.184 156 168 c 156 54 l 132 54 l 127.227
 54 122.648 52.105 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114
 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637
 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
0 190.188 m 19.969 190.188 l 23.234 190.188 26.113 189.66 28.609 188.602
 c 31.129 187.523 33.102 185.977 34.523 183.969 c 35.965 181.945 36.68 179.504
 36.672 176.648 c 36.672 176.652 l 36.734 174.516 36.223 172.402 35.195 
170.531 c 34.285 168.902 32.945 167.551 31.32 166.633 c 29.68 165.695 27.859
 165.125 25.98 164.953 c 25.98 164.52 l 27.5 164.16 28.934 163.508 30.203
 162.602 c 31.445 161.676 32.445 160.465 33.121 159.07 c 33.887 157.496 
34.258 155.758 34.199 154.008 c 34.199 150.305 32.91 147.41 30.336 145.332
 c 27.762 143.242 24.328 142.199 20.039 142.199 c 0 142.199 l h
9.422 149.34 m 17.82 149.34 l 20.059 149.34 21.785 149.898 22.992 151.02
 c 24.23 152.125 24.852 153.66 24.852 155.629 c 24.906 156.887 24.559 158.129
 23.867 159.18 c 23.133 160.219 22.086 160.996 20.879 161.398 c 19.211 161.973
 17.449 162.234 15.684 162.168 c 9.422 162.168 l h
9.422 168.781 m 18.422 168.781 l 20.27 168.781 21.844 169.074 23.137 169.656
 c 24.348 170.164 25.359 171.051 26.016 172.188 c 26.707 173.367 27.051 
174.723 27 176.09 c 27 178.363 26.18 180.098 24.539 181.297 c 22.898 182.465
 20.215 183.051 16.488 183.051 c 9.422 183.047 l h
51.109 190.188 m 51.109 158.266 l 51.566 158.266 l 62.992 184.188 l 69.172
 184.188 l 80.535 158.266 l 80.992 158.266 l 80.992 190.188 l 89.57 190.188
 l 89.566 142.199 l 79.965 142.199 l 66.285 173.352 l 65.973 173.352 l 52.293
 142.199 l 42.633 142.199 l 42.633 190.188 l h
98.125 142.199 m 117.324 142.199 l 120.797 142.199 123.723 142.914 126.109
 144.348 c 128.523 145.754 130.367 147.664 131.629 150.07 c 132.902 152.484
 133.535 155.195 133.535 158.195 c 133.535 161.195 132.887 163.902 131.59
 166.32 c 130.324 168.711 128.477 170.609 126.047 172.008 c 123.352 173.461
 120.316 174.18 117.254 174.086 c 107.617 174.086 l 107.617 190.191 l 98.137
 190.191 l h
122.844 162.766 m 122.844 162.77 l 123.555 161.352 123.906 159.781 123.863
 158.195 c 123.863 155.477 123.125 153.391 121.645 151.941 c 120.164 150.484
 118.117 149.758 115.5 149.758 c 107.578 149.758 l 107.578 166.629 l 115.5
 166.629 l 115.5 166.633 l 117.059 166.676 118.602 166.336 120 165.648 c
 121.219 164.996 122.207 163.992 122.844 162.77 c f*
Q Q
showpage
%%Trailer
%%EOF
