%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 360 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 120 m 195.184 120 198.234 121.266 200.484 123.516 c 202.734 125.766
 204 128.816 204 132 c 204 223.031 l 231.504 195.504 l 236.195 190.812 243.805
 190.812 248.496 195.504 c 253.188 200.195 253.188 207.805 248.496 212.496
 c 200.496 260.496 l 198.246 262.754 195.188 264.02 192 264.02 c 188.812
 264.02 185.754 262.754 183.504 260.496 c 135.504 212.496 l 130.812 207.805
 130.812 200.195 135.504 195.504 c 140.195 190.812 147.805 190.812 152.496
 195.504 c 180 223.031 l 180 132 l 180 125.371 185.371 120 192 120 c f*
72 0 m 312 0 l 324.73 0 336.938 5.059 345.941 14.059 c 354.941 23.062 360
 35.27 360 48 c 360 336 l 360 348.73 354.941 360.938 345.941 369.941 c 336.938
 378.941 324.73 384 312 384 c 72 384 l 59.27 384 47.062 378.941 38.059 369.941
 c 29.059 360.938 24 348.73 24 336 c 24 312 l 48 312 l 48 336 l 48 342.363
 50.527 348.469 55.031 352.969 c 59.531 357.473 65.637 360 72 360 c 312 
360 l 318.363 360 324.469 357.473 328.969 352.969 c 333.473 348.469 336 
342.363 336 336 c 336 48 l 336 41.637 333.473 35.531 328.969 31.031 c 324.469
 26.527 318.363 24 312 24 c 72 24 l 65.637 24 59.531 26.527 55.031 31.031
 c 50.527 35.531 48 41.637 48 48 c 48 72 l 24 72 l 24 48 l 24 35.27 29.059
 23.062 38.059 14.059 c 47.062 5.059 59.27 0 72 0 c f
24 120 m 24 108 l 24 101.371 29.371 96 36 96 c 42.629 96 48 101.371 48 
108 c 48 120 l 60 120 l 66.629 120 72 125.371 72 132 c 72 138.629 66.629
 144 60 144 c 12 144 l 5.371 144 0 138.629 0 132 c 0 125.371 5.371 120 12
 120 c h
24 192 m 24 180 l 24 173.371 29.371 168 36 168 c 42.629 168 48 173.371 
48 180 c 48 192 l 60 192 l 66.629 192 72 197.371 72 204 c 72 210.629 66.629
 216 60 216 c 12 216 l 5.371 216 0 210.629 0 204 c 0 197.371 5.371 192 12
 192 c h
24 264 m 24 252 l 24 245.371 29.371 240 36 240 c 42.629 240 48 245.371 
48 252 c 48 264 l 60 264 l 66.629 264 72 269.371 72 276 c 72 282.629 66.629
 288 60 288 c 12 288 l 5.371 288 0 282.629 0 276 c 0 269.371 5.371 264 12
 264 c h
24 264 m f
Q Q
showpage
%%Trailer
%%EOF
