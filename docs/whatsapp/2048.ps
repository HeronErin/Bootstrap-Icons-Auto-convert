%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1530 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1530 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1530 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1305.695 223.297 m 1235.289 152.207 1151.434 95.852 1059.016 57.512 c 966.602
 19.176 867.477 -0.375 767.426 0 c 348.191 0 6.527 341.566 6.145 760.895
 c 6.145 895.199 41.281 1025.855 107.617 1141.535 c 0 1536 l 403.586 1430.207
 l 515.184 1491.094 640.297 1522.949 767.426 1522.848 c 767.809 1522.848
 l 1187.137 1522.848 1528.703 1181.281 1529.09 761.566 c 1529.172 661.543
 1509.473 562.488 1471.113 470.105 c 1432.758 377.727 1376.508 293.848 1305.602
 223.297 c h
767.426 1394.016 m 654.066 1393.926 542.805 1363.426 445.246 1305.695 c
 422.207 1291.871 l 182.781 1354.656 l 246.719 1121.09 l 231.742 1096.992
 l 168.367 996.223 134.848 879.555 135.07 760.512 c 135.07 412.414 418.941
 128.449 767.805 128.449 c 767.809 128.449 l 850.918 128.301 933.238 144.602
 1010.02 176.418 c 1086.797 208.234 1156.523 254.934 1215.168 313.824 c 
1274.008 372.496 1320.652 442.227 1352.418 519.008 c 1384.184 595.785 1400.441
 678.094 1400.258 761.184 c 1399.875 1110.527 1116 1394.016 767.426 1394.016
 c 1114.465 920.352 m 1095.555 910.848 1002.145 864.863 984.578 858.336 
c 967.105 852.098 954.34 848.832 941.859 867.84 c 929.09 886.75 892.613 
929.855 881.668 942.238 c 870.723 955.008 859.395 956.445 840.387 947.039
 c 821.477 937.438 760.129 917.473 687.555 852.48 c 630.914 802.082 592.996
 739.68 581.668 720.77 c 570.723 701.762 580.613 691.586 590.117 682.082
 c 598.469 673.633 609.027 659.809 618.531 648.867 c 628.133 637.922 631.301
 629.859 637.539 617.188 c 643.777 604.324 640.805 593.379 636.098 583.875
 c 631.297 574.371 593.379 480.578 577.344 442.754 c 561.984 405.41 546.336
 410.594 534.625 410.113 c 523.68 409.441 510.914 409.441 498.145 409.441
 c 478.656 409.938 460.254 418.527 447.359 433.152 c 429.887 452.16 381.023
 498.145 381.023 591.938 c 381.023 685.73 449.184 775.875 458.785 788.641
 c 468.191 801.41 592.609 993.312 783.555 1075.871 c 828.676 1095.551 864.195
 1107.168 891.938 1116 c 937.539 1130.594 978.723 1128.383 1011.555 1123.68
 c 1048.035 1118.113 1123.969 1077.602 1140.004 1033.152 c 1155.746 988.609
 1155.746 950.594 1150.949 942.625 c 1146.246 934.562 1133.477 929.855 1114.469
 920.352 c f
Q Q
showpage
%%Trailer
%%EOF
