%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.102 0.871 m 4.543 0.312 3.789 -0.004 2.996 0 c 1.359 0 0.027 1.336 0.023
 2.973 c 0.023 3.496 0.16 4.008 0.418 4.461 c 0 6 l 1.578 5.586 l 2.012 
5.824 2.5 5.949 2.996 5.949 c 4.633 5.949 5.969 4.613 5.969 2.977 c 5.973
 2.977 l 5.973 2.188 5.66 1.43 5.102 0.871 c h
2.996 5.445 m 2.555 5.445 2.121 5.324 1.738 5.102 c 1.648 5.047 l 0.715
 5.293 l 0.965 4.379 l 0.906 4.285 l 0.656 3.891 0.527 3.438 0.527 2.973
 c 0.527 1.613 1.637 0.504 3 0.504 c 3 0.5 l 3.656 0.5 4.285 0.762 4.746
 1.227 c 5.211 1.688 5.473 2.316 5.469 2.973 c 5.469 4.336 4.359 5.445 2.996
 5.445 c 4.352 3.594 m 4.277 3.555 3.914 3.379 3.844 3.352 c 3.777 3.328
 3.727 3.312 3.676 3.391 c 3.625 3.465 3.484 3.633 3.441 3.68 c 3.398 3.73
 3.355 3.734 3.281 3.699 c 3.207 3.66 2.969 3.582 2.684 3.328 c 2.461 3.133
 2.312 2.887 2.27 2.812 c 2.227 2.738 2.266 2.699 2.301 2.66 c 2.332 2.629
 2.375 2.574 2.41 2.531 c 2.449 2.488 2.461 2.457 2.484 2.406 c 2.508 2.355
 2.496 2.312 2.48 2.277 c 2.461 2.238 2.312 1.875 2.25 1.727 c 2.191 1.582
 2.129 1.602 2.082 1.598 c 2.039 1.594 1.988 1.594 1.941 1.594 c 1.945 1.598
 l 1.871 1.602 1.797 1.637 1.746 1.691 c 1.68 1.766 1.488 1.945 1.488 2.312
 c 1.488 2.68 1.754 3.031 1.793 3.082 c 1.828 3.133 2.316 3.883 3.062 4.203
 c 3.238 4.281 3.379 4.324 3.484 4.359 c 3.664 4.418 3.824 4.406 3.953 4.391
 c 4.094 4.367 4.391 4.211 4.453 4.035 c 4.516 3.859 4.516 3.711 4.496 3.68
 c 4.477 3.648 4.43 3.629 4.355 3.594 c f
Q Q
showpage
%%Trailer
%%EOF
