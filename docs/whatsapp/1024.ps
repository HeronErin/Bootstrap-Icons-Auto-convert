%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 765 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 765 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 765 768 rectclip
1 0 0 -1 0 768 cm q
0 g
652.848 111.648 m 617.645 76.105 575.715 47.926 529.508 28.758 c 483.301
 9.586 433.738 -0.188 383.711 0 c 174.098 0 3.266 170.785 3.07 380.449 c
 3.07 447.602 20.637 512.93 53.805 570.77 c 0 768 l 201.793 715.105 l 257.59
 745.547 320.148 761.477 383.711 761.426 c 383.902 761.426 l 593.566 761.426
 764.352 590.641 764.543 380.785 c 764.586 330.77 754.734 281.242 735.559
 235.055 c 716.379 188.863 688.254 146.922 652.801 111.648 c h
383.711 697.008 m 327.031 696.965 271.402 681.715 222.625 652.848 c 211.105
 645.938 l 91.395 677.328 l 123.363 560.543 l 115.875 548.496 l 115.871 
548.496 l 84.184 498.113 67.422 439.777 67.535 380.258 c 67.535 206.211 
209.473 64.227 383.902 64.227 c 383.902 64.223 l 425.461 64.148 466.617 
72.301 505.008 88.211 c 543.398 104.117 578.262 127.469 607.586 156.91 c
 637.004 186.246 660.328 221.113 676.211 259.504 c 692.094 297.895 700.223
 339.047 700.129 380.594 c 699.938 555.266 558 697.008 383.715 697.008 c
 557.234 460.176 m 547.777 455.422 501.074 432.434 492.289 429.168 c 483.555
 426.047 477.168 424.414 470.93 433.922 c 464.547 443.379 446.305 464.93
 440.832 471.121 c 435.359 477.504 429.695 478.227 420.191 473.52 c 410.734
 468.719 380.062 458.734 343.777 426.238 c 315.457 401.039 296.496 369.84
 290.832 360.383 c 285.359 350.879 290.305 345.789 295.055 341.039 c 299.23
 336.816 304.512 329.902 309.262 324.43 c 314.062 318.957 315.645 314.926
 318.766 308.59 c 321.887 302.156 320.398 296.688 318.047 291.934 c 315.648
 287.18 296.688 240.285 288.672 221.375 c 280.992 202.703 273.168 205.297
 267.312 205.055 c 261.84 204.719 255.457 204.719 249.074 204.719 c 249.07
 204.719 l 239.328 204.969 230.125 209.266 223.68 216.574 c 214.945 226.078
 190.512 249.07 190.512 295.965 c 190.512 342.859 224.59 387.934 229.391
 394.316 c 234.094 400.699 296.301 496.652 391.773 537.934 c 414.332 547.773
 432.094 553.582 445.965 557.996 c 468.766 565.293 489.355 564.188 505.773
 561.836 c 524.012 559.051 561.98 538.797 569.996 516.57 c 577.867 494.297
 577.867 475.289 575.469 471.305 c 573.117 467.273 566.734 464.922 557.23
 460.168 c f
Q Q
showpage
%%Trailer
%%EOF
