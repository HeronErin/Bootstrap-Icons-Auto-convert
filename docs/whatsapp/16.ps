%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.199 1.746 m 9.09 0.621 7.574 -0.008 5.996 0 c 2.719 0 0.051 2.668 0.047
 5.945 c 0.047 6.996 0.32 8.016 0.84 8.918 c 0 12 l 3.152 11.172 l 4.023
 11.648 5.004 11.898 5.996 11.898 c 6 11.898 l 9.277 11.898 11.945 9.23 
11.949 5.949 c 11.945 5.949 l 11.949 4.371 11.32 2.859 10.199 1.746 c h
5.996 10.891 m 5.109 10.891 4.242 10.652 3.477 10.199 c 3.297 10.09 l 1.426
 10.582 l 1.926 8.758 l 1.809 8.57 l 1.316 7.781 1.055 6.871 1.055 5.941
 c 1.055 3.223 3.273 1.004 5.996 1.004 c 6 1.004 l 7.309 1 8.566 1.523 9.492
 2.453 c 10.422 3.379 10.941 4.637 10.941 5.945 c 10.938 8.676 8.719 10.891
 5.996 10.891 c 8.707 7.191 m 8.559 7.117 7.828 6.758 7.691 6.707 c 7.555
 6.66 7.457 6.633 7.359 6.781 c 7.258 6.93 6.977 7.266 6.891 7.363 c 6.805
 7.465 6.715 7.473 6.566 7.402 c 6.418 7.328 5.938 7.172 5.371 6.664 c 4.93
 6.27 4.633 5.781 4.543 5.637 c 4.457 5.488 4.535 5.41 4.609 5.336 c 4.676
 5.27 4.758 5.16 4.832 5.078 c 4.906 4.992 4.934 4.93 4.98 4.832 c 5.027
 4.73 5.008 4.645 4.969 4.57 c 4.93 4.496 4.637 3.762 4.508 3.469 c 4.387
 3.176 4.266 3.219 4.176 3.215 c 4.09 3.211 3.992 3.211 3.891 3.211 c 3.891
 3.199 l 3.738 3.203 3.598 3.27 3.496 3.383 c 3.359 3.531 2.977 3.891 2.977
 4.625 c 2.977 5.359 3.508 6.062 3.586 6.16 c 3.66 6.262 4.633 7.758 6.125
 8.402 c 6.477 8.555 6.754 8.648 6.973 8.715 c 7.328 8.828 7.652 8.812 7.906
 8.773 c 8.191 8.73 8.785 8.414 8.91 8.066 c 9.031 7.719 9.031 7.422 8.996
 7.359 c 8.961 7.297 8.859 7.258 8.711 7.184 c f
Q Q
showpage
%%Trailer
%%EOF
