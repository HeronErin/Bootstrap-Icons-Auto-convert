%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
81.605 13.957 m 72.719 4.98 60.598 -0.047 47.965 0 c 21.762 0 0.406 21.348
 0.383 47.555 c 0.383 55.949 2.578 64.113 6.727 71.344 c 0 96 l 25.223 89.387
 l 32.199 93.195 40.02 95.184 47.965 95.18 c 47.988 95.18 l 74.195 95.18
 95.543 73.832 95.566 47.602 c 95.566 47.598 l 95.578 34.973 90.551 22.863
 81.602 13.957 c h
47.965 87.125 m 40.879 87.121 33.926 85.215 27.828 81.605 c 26.387 80.742
 l 11.422 84.668 l 15.418 70.07 l 14.48 68.562 l 14.484 68.562 l 10.523 
62.266 8.43 54.973 8.441 47.531 c 8.441 25.773 26.184 8.027 47.988 8.027
 c 58.48 8.008 68.543 12.18 75.949 19.613 c 83.375 27.02 87.539 37.086 87.516
 47.574 c 87.492 69.41 69.75 87.125 47.965 87.125 c 69.656 57.52 m 68.473
 56.926 62.637 54.051 61.539 53.645 c 60.445 53.254 59.648 53.051 58.867
 54.238 c 58.07 55.422 55.789 58.113 55.105 58.887 c 54.422 59.684 53.715
 59.773 52.527 59.188 c 51.344 58.586 47.512 57.34 42.977 53.277 c 39.438
 50.129 37.066 46.227 36.359 45.047 c 35.676 43.859 36.293 43.223 36.887
 42.629 c 37.41 42.102 38.07 41.238 38.664 40.555 c 39.266 39.871 39.461
 39.367 39.852 38.574 c 40.242 37.77 40.055 37.086 39.762 36.492 c 39.461
 35.898 37.09 30.035 36.09 27.672 c 35.129 25.336 34.152 25.66 33.418 25.633
 c 32.734 25.59 31.938 25.59 31.137 25.59 c 31.133 25.59 l 29.914 25.621
 28.766 26.156 27.961 27.07 c 26.867 28.258 23.816 31.133 23.816 36.996 
c 23.816 42.859 28.078 48.492 28.676 49.289 c 29.266 50.086 37.039 62.082
 48.973 67.242 c 51.793 68.473 54.012 69.199 55.746 69.75 c 58.598 70.66
 61.172 70.523 63.223 70.23 c 65.504 69.883 70.25 67.352 71.25 64.574 c 
72.234 61.789 72.234 59.414 71.934 58.918 c 71.641 58.414 70.84 58.121 69.652
 57.527 c f
Q Q
showpage
%%Trailer
%%EOF
