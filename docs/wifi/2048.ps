%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 44 259 1491 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 44 259 1491 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 44 259 1447 989 rectclip
1 0 0 -1 0 1536 cm q
0 g
1476.863 587.039 m 1486.633 577.551 1491.758 564.262 1490.891 550.672 c
 1490.023 537.082 1483.25 524.551 1472.352 516.383 c 1370.66 442.434 1257.93
 385.008 1138.324 346.223 c 1018.719 307.441 893.738 287.793 768 288 c 504.863
 288 261.406 372.672 63.648 516.383 c 52.738 524.539 45.945 537.059 45.059
 550.648 c 44.172 564.242 49.281 577.539 59.039 587.039 c 67.449 595.27 
78.496 600.262 90.227 601.141 c 101.961 602.02 113.629 598.727 123.168 591.84
 c 310.867 456.395 536.535 383.66 768 384 c 1008.672 384 1231.391 460.992
 1412.734 591.742 c 1432.414 605.949 1459.773 604.223 1476.863 587.039 c
 f
1269.984 794.016 m 1280 784.352 1285.137 770.688 1283.961 756.816 c 1282.789
 742.949 1275.434 730.344 1263.938 722.496 c 1116.312 626.637 944.016 575.738
 768 576 c 585.121 576 414.719 629.762 272.062 722.496 c 260.504 730.297
 253.102 742.914 251.926 756.809 c 250.75 770.703 255.93 784.383 266.016
 794.016 c 274.195 802 284.848 806.965 296.219 808.098 c 307.594 809.234
 319.012 806.469 328.609 800.258 c 459.746 716.262 612.27 671.742 768 672
 c 923.699 671.758 1076.184 716.277 1207.297 800.258 c 1227.074 812.93 1253.375
 810.625 1269.984 794.02 c 1060.418 1003.586 m 1082.113 981.891 1078.18 
945.508 1050.816 931.586 c 963.18 887.098 866.277 863.941 768 864 c 666.238
 864 570.047 888.383 485.184 931.586 c 457.824 945.508 453.887 981.891 475.582
 1003.586 c 477.023 1005.027 l 492.383 1020.387 516.094 1023.266 535.68 
1013.668 c 535.68 1013.664 l 608.016 978.297 687.48 959.941 768 960 c 851.328
 960 930.238 979.297 1000.32 1013.762 c 1019.809 1023.363 1043.52 1020.48
 1058.879 1005.027 c h
869.762 1194.238 m 888.578 1175.422 888.77 1144.316 865.922 1130.879 c 
836.285 1113.293 802.461 1104.012 768 1104 c 733.539 1104.012 699.715 1113.293
 670.078 1130.879 c 647.23 1144.32 647.422 1175.422 666.238 1194.238 c 734.016
 1262.016 l 743.016 1271.016 755.223 1276.07 767.953 1276.07 c 780.68 1276.07
 792.887 1271.016 801.887 1262.016 c 869.758 1194.145 l h
869.762 1194.238 m f
Q Q
showpage
%%Trailer
%%EOF
