%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 11 64 373 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 11 64 373 312
384 384 cairo_set_page_size
%%EndPageSetup
q 11 64 362 248 rectclip
1 0 0 -1 0 384 cm q
0 g
369.215 146.762 m 371.66 144.387 372.941 141.066 372.723 137.668 c 372.504
 134.27 370.812 131.137 368.09 129.098 c 316.922 91.891 255.262 71.895 192
 72 c 126.215 72 65.352 93.168 15.91 129.098 c 13.184 131.133 11.484 134.266
 11.266 137.664 c 11.043 141.059 12.32 144.383 14.762 146.762 c 19.102 151.008
 25.867 151.516 30.793 147.961 c 77.719 114.098 134.133 95.914 192 96 c 
252.168 96 307.848 115.246 353.184 147.938 c 358.105 151.488 364.945 151.059
 369.215 146.762 c f
317.496 198.504 m 320 196.086 321.285 192.672 320.992 189.203 c 320.699
 185.738 318.859 182.586 315.984 180.625 c 279.078 156.66 236.004 143.934
 192 144 c 146.281 144 103.68 157.441 68.016 180.625 c 65.125 182.574 63.273
 185.727 62.98 189.203 c 62.688 192.676 63.984 196.098 66.504 198.504 c 
70.715 202.613 77.211 203.262 82.152 200.062 c 114.938 179.066 153.066 167.934
 192 168 c 230.926 167.941 269.047 179.07 301.824 200.062 c 306.77 203.23
 313.344 202.656 317.496 198.504 c 265.105 250.895 m 270.531 245.469 269.547
 236.375 262.707 232.895 c 262.703 232.895 l 240.797 221.773 216.57 215.984
 192 216 c 166.559 216 142.512 222.098 121.297 232.895 c 114.457 236.375
 113.473 245.469 118.898 250.895 c 119.258 251.254 l 123.098 255.094 129.027
 255.812 133.922 253.414 c 152.004 244.574 171.871 239.984 192 240 c 212.832
 240 232.559 244.824 250.078 253.441 c 254.949 255.84 260.879 255.121 264.719
 251.258 c h
217.441 298.559 m 222.145 293.855 222.195 286.078 216.48 282.719 c 209.07
 278.324 200.613 276.004 192 276 c 183.387 276.004 174.93 278.324 167.52
 282.719 c 161.809 286.078 161.855 293.855 166.559 298.559 c 183.504 315.504
 l 188.191 320.188 195.785 320.188 200.473 315.504 c 217.441 298.535 l h
217.441 298.559 m f
Q Q
showpage
%%Trailer
%%EOF
