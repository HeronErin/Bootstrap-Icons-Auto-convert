%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 5 32 187 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 5 32 187 156
192 192 cairo_set_page_size
%%EndPageSetup
q 5 32 182 124 rectclip
1 0 0 -1 0 192 cm q
0 g
184.609 73.379 m 185.828 72.195 186.469 70.531 186.363 68.836 c 186.254
 67.137 185.406 65.57 184.043 64.547 c 158.461 45.945 127.633 35.949 96 
36 c 63.109 36 32.676 46.586 7.957 64.547 c 6.594 65.566 5.742 67.133 5.633
 68.832 c 5.523 70.531 6.16 72.191 7.379 73.379 c 9.551 75.504 12.934 75.758
 15.395 73.98 c 38.859 57.051 67.066 47.957 96 48 c 126.086 48 153.926 57.625
 176.594 73.969 c 179.055 75.746 182.473 75.527 184.609 73.379 c f
158.746 99.254 m 160 98.043 160.641 96.336 160.496 94.602 c 160.348 92.867
 159.43 91.293 157.992 90.312 c 139.539 78.328 118 71.969 96 72 c 73.141
 72 51.84 78.719 34.008 90.312 c 32.562 91.289 31.637 92.863 31.492 94.602
 c 31.344 96.34 31.992 98.047 33.254 99.254 c 35.359 101.309 38.605 101.633
 41.074 100.031 c 57.469 89.531 76.535 83.969 96 84 c 115.461 83.969 134.523
 89.535 150.91 100.031 c 153.383 101.617 156.672 101.328 158.746 99.25 c
 132.551 125.445 m 135.262 122.734 134.77 118.184 131.352 116.445 c 131.352
 116.449 l 120.398 110.887 108.285 107.992 96 108 c 83.281 108 71.258 111.047
 60.648 116.449 c 57.227 118.188 56.738 122.738 59.449 125.449 c 59.629 
125.629 l 61.551 127.551 64.512 127.91 66.961 126.707 c 76 122.285 85.934
 119.992 96 120 c 106.414 120 116.281 122.41 125.039 126.719 c 127.477 127.918
 130.438 127.559 132.359 125.625 c h
108.719 149.281 m 111.07 146.93 111.094 143.043 108.238 141.359 c 104.535
 139.16 100.309 138 96 138 c 91.691 138 87.465 139.16 83.762 141.359 c 80.906
 143.039 80.93 146.926 83.281 149.281 c 91.754 157.754 l 94.094 160.094 
97.895 160.094 100.234 157.754 c 108.719 149.27 l h
108.719 149.281 m f
Q Q
showpage
%%Trailer
%%EOF
