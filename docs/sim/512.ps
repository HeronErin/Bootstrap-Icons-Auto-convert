%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 36 m 48 26.453 51.793 17.297 58.543 10.543 c 65.297 3.793 74.453 0 84
 0 c 254.062 0 l 263.609 0.008 272.758 3.809 279.504 10.559 c 325.465 56.496
 l 332.207 63.246 335.996 72.395 336 81.938 c 336 348 l 336 357.547 332.207
 366.703 325.457 373.457 c 318.703 380.207 309.547 384 300 384 c 84 384 
l 74.453 384 65.297 380.207 58.543 373.457 c 51.793 366.703 48 357.547 48
 348 c h
84 24 m 77.371 24 72 29.371 72 36 c 72 348 l 72 351.184 73.266 354.234 
75.516 356.484 c 77.766 358.734 80.816 360 84 360 c 300 360 l 303.184 360
 306.234 358.734 308.484 356.484 c 310.734 354.234 312 351.184 312 348 c
 312 81.938 l 312 78.758 310.738 75.715 308.496 73.465 c 262.535 27.504 
l 260.285 25.262 257.242 24 254.062 24 c h
84 24 m f
132 96 m 125.371 96 120 101.371 120 108 c 120 144 l 180 144 l 180 96 l 
h
204 96 m 204 144 l 264 144 l 264 108 l 264 104.816 262.734 101.766 260.484
 99.516 c 258.234 97.266 255.184 96 252 96 c h
264 168 m 120 168 l 120 216 l 264 216 l h
264 240 m 204 240 l 204 288 l 252 288 l 255.184 288 258.234 286.734 260.484
 284.484 c 262.734 282.234 264 279.184 264 276 c h
180 288 m 180 240 l 120 240 l 120 276 l 120 279.184 121.266 282.234 123.516
 284.484 c 125.766 286.734 128.816 288 132 288 c h
96 108 m 96 98.453 99.793 89.297 106.543 82.543 c 113.297 75.793 122.453
 72 132 72 c 252 72 l 261.547 72 270.703 75.793 277.457 82.543 c 284.207
 89.297 288 98.453 288 108 c 288 276 l 288 285.547 284.207 294.703 277.457
 301.457 c 270.703 308.207 261.547 312 252 312 c 132 312 l 122.453 312 113.297
 308.207 106.543 301.457 c 99.793 294.703 96 285.547 96 276 c h
96 108 m f
Q Q
showpage
%%Trailer
%%EOF
