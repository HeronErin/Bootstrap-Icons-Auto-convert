%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
112.824 122.953 m 120.324 122.953 127.031 117.145 127.031 108.793 c 127.031
 98.809 120.707 94.031 113.109 94.031 c 106.078 94.031 99.094 98.676 99.094
 108.551 c 99.094 118.355 105.609 122.949 112.82 122.949 c f
42 0 m 43.59 0 45.117 0.633 46.242 1.758 c 47.367 2.883 48 4.41 48 6 c 
48 12 l 144 12 l 144 6 l 144 2.688 146.688 0 150 0 c 153.312 0 156 2.688
 156 6 c 156 12 l 168 12 l 174.363 12 180.469 14.527 184.969 19.031 c 189.473
 23.531 192 29.637 192 36 c 192 168 l 192 174.363 189.473 180.469 184.969
 184.969 c 180.469 189.473 174.363 192 168 192 c 24 192 l 17.637 192 11.531
 189.473 7.031 184.969 c 2.527 180.469 0 174.363 0 168 c 0 36 l 0 29.637
 2.527 23.531 7.031 19.031 c 11.531 14.527 17.637 12 24 12 c 36 12 l 36 
6 l 36 2.688 38.688 0 42 0 c 161.449 36 m 30.539 36 l 26.938 36 24 38.688
 24 42 c 24 54 l 24 57.312 26.93 60 30.539 60 c 161.461 60 l 165.062 60 
168 57.312 168 54 c 168 42 l 168 38.688 165.07 36 161.449 36 c 112.035 153.48
 m 127.133 153.48 136.035 140.676 136.035 119.016 c 136.035 95.809 126.664
 87 112.598 87 c 101.484 87 91.035 95.062 91.035 108.707 c 91.035 122.629
 100.922 129.945 111.148 129.945 c 120.102 129.945 125.91 125.434 127.746
 120.465 c 128.07 120.465 l 128.023 136.258 122.539 146.434 112.41 146.434
 c 104.441 146.434 100.312 141.035 99.809 136.594 c 91.602 136.594 l 92.164
 144.273 98.73 153.465 112.039 153.465 c h
77.355 88.262 m 69.758 88.262 l 64.316 91.164 59.055 94.391 54 97.922 c
 54 106.262 l 58.5 103.176 65.629 98.82 69.098 96.938 c 69.242 96.938 l 
69.242 152.258 l 77.344 152.258 l 77.34 88.246 l h
77.355 88.262 m f
Q Q
showpage
%%Trailer
%%EOF
