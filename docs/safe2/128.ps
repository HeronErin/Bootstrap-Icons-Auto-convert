%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
6 15 m 6 10.031 10.031 6 15 6 c 87 6 l 91.969 6 96 10.031 96 15 c 96 87
 l 96 91.969 91.969 96 87 96 c 15 96 l 10.031 96 6 91.969 6 87 c 6 84 l 
3 84 l 1.344 84 0 82.656 0 81 c 0 79.344 1.344 78 3 78 c 6 78 l 6 54 l 3
 54 l 1.344 54 0 52.656 0 51 c 0 49.344 1.344 48 3 48 c 6 48 l 6 24 l 3 
24 l 1.344 24 0 22.656 0 21 c 0 19.344 1.344 18 3 18 c 6 18 l h
15 12 m 13.344 12 12 13.344 12 15 c 12 87 l 12 87.797 12.316 88.559 12.879
 89.121 c 13.441 89.684 14.203 90 15 90 c 87 90 l 87.797 90 88.559 89.684
 89.121 89.121 c 89.684 88.559 90 87.797 90 87 c 90 15 l 90 14.203 89.684
 13.441 89.121 12.879 c 88.559 12.316 87.797 12 87 12 c h
15 12 m f
30.211 48 m 39.379 48 l 39.668 46.891 40.094 45.859 40.664 44.902 c 34.184
 38.422 l 34.184 38.426 l 32.078 41.234 30.715 44.527 30.211 48 c 38.426
 34.184 m 44.906 40.664 l 45.867 40.098 46.898 39.668 48.004 39.379 c 48
 30.211 l 44.527 30.715 41.234 32.078 38.426 34.184 c 54 30.211 m 54 39.379
 l 55.109 39.668 56.141 40.094 57.098 40.664 c 63.578 34.184 l 63.574 34.184
 l 60.766 32.078 57.473 30.715 54 30.211 c 67.816 38.426 m 61.336 44.906
 l 61.902 45.867 62.332 46.898 62.621 48.004 c 71.789 48.004 l 71.789 48
 l 71.285 44.527 69.922 41.234 67.816 38.426 c 71.789 54 m 62.621 54 l 62.332
 55.109 61.906 56.141 61.336 57.098 c 67.816 63.578 l 67.816 63.574 l 69.922
 60.766 71.285 57.473 71.789 54 c 63.574 67.816 m 57.094 61.336 l 56.133
 61.902 55.102 62.332 53.996 62.621 c 53.996 71.789 l 54 71.789 l 57.473
 71.285 60.766 69.922 63.574 67.816 c 48 71.789 m 48 62.621 l 46.914 62.34
 45.871 61.91 44.902 61.34 c 38.422 67.82 l 38.426 67.816 l 41.234 69.922
 44.527 71.285 48 71.789 c 34.184 63.574 m 40.664 57.094 l 40.66 57.098 
l 40.09 56.129 39.66 55.086 39.379 54 c 30.211 54 l 30.723 57.559 32.125
 60.828 34.184 63.574 c 24 51 m 24 41.355 29.145 32.441 37.5 27.617 c 45.855
 22.793 56.145 22.793 64.5 27.617 c 72.855 32.441 78 41.355 78 51 c 78 60.645
 72.855 69.559 64.5 74.383 c 56.145 79.207 45.855 79.207 37.5 74.383 c 29.145
 69.559 24 60.645 24 51 c 51 45 m 47.688 45 45 47.688 45 51 c 45 54.312 
47.688 57 51 57 c 54.312 57 57 54.312 57 51 c 57 47.688 54.312 45 51 45 
c f
Q Q
showpage
%%Trailer
%%EOF
