%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 180 rectclip
1 0 0 -1 0 192 cm q
0 g
12 30 m 12 25.227 13.895 20.648 17.273 17.273 c 20.648 13.895 25.227 12
 30 12 c 174 12 l 178.773 12 183.352 13.895 186.727 17.273 c 190.105 20.648
 192 25.227 192 30 c 192 174 l 192 178.773 190.105 183.352 186.727 186.727
 c 183.352 190.105 178.773 192 174 192 c 30 192 l 25.227 192 20.648 190.105
 17.273 186.727 c 13.895 183.352 12 178.773 12 174 c 12 168 l 6 168 l 2.688
 168 0 165.312 0 162 c 0 158.688 2.688 156 6 156 c 12 156 l 12 108 l 6 108
 l 2.688 108 0 105.312 0 102 c 0 98.688 2.688 96 6 96 c 12 96 l 12 48 l 
6 48 l 2.688 48 0 45.312 0 42 c 0 38.688 2.688 36 6 36 c 12 36 l h
30 24 m 26.688 24 24 26.688 24 30 c 24 174 l 24 175.59 24.633 177.117 25.758
 178.242 c 26.883 179.367 28.41 180 30 180 c 174 180 l 175.59 180 177.117
 179.367 178.242 178.242 c 179.367 177.117 180 175.59 180 174 c 180 30 l
 180 28.41 179.367 26.883 178.242 25.758 c 177.117 24.633 175.59 24 174 
24 c h
30 24 m f
60.422 96 m 78.758 96 l 79.332 93.785 80.191 91.719 81.324 89.809 c 68.363
 76.848 l 64.156 82.469 61.426 89.051 60.422 96 c 76.852 68.363 m 89.812
 81.324 l 91.734 80.188 93.797 79.332 96.004 78.758 c 96 60.422 l 89.051
 61.426 82.469 64.156 76.848 68.363 c 108 60.422 m 108 78.758 l 110.215 
79.332 112.281 80.191 114.191 81.324 c 127.152 68.363 l 121.531 64.156 114.949
 61.426 108 60.422 c 135.637 76.852 m 122.676 89.812 l 123.812 91.734 124.668
 93.797 125.242 96.004 c 143.578 96.004 l 143.578 96 l 142.574 89.051 139.844
 82.469 135.637 76.848 c 143.578 108 m 125.242 108 l 124.668 110.215 123.809
 112.281 122.676 114.191 c 135.637 127.152 l 139.844 121.531 142.574 114.949
 143.578 108 c 127.148 135.637 m 114.188 122.676 l 112.266 123.812 110.203
 124.668 107.996 125.242 c 107.996 143.578 l 108 143.578 l 114.949 142.574
 121.531 139.844 127.152 135.637 c 96 143.578 m 96 125.242 l 93.824 124.684
 91.742 123.816 89.809 122.676 c 76.848 135.637 l 82.469 139.844 89.051 
142.574 96 143.578 c 68.363 127.148 m 81.324 114.188 l 81.324 114.191 l 
80.184 112.258 79.316 110.176 78.758 108 c 60.422 108 l 61.441 115.117 64.25
 121.656 68.367 127.152 c 48 102 m 48 82.707 58.293 64.879 75 55.234 c 91.707
 45.59 112.293 45.59 129 55.234 c 145.707 64.879 156 82.707 156 102 c 156
 121.293 145.707 139.121 129 148.766 c 112.293 158.41 91.707 158.41 75 148.766
 c 58.293 139.121 48 121.293 48 102 c 102 90 m 95.371 90 90 95.371 90 102
 c 90 108.629 95.371 114 102 114 c 108.629 114 114 108.629 114 102 c 114
 95.371 108.629 90 102 90 c f
Q Q
showpage
%%Trailer
%%EOF
