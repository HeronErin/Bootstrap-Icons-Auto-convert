%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
24 60 m 24 50.453 27.793 41.297 34.543 34.543 c 41.297 27.793 50.453 24
 60 24 c 348 24 l 357.547 24 366.703 27.793 373.457 34.543 c 380.207 41.297
 384 50.453 384 60 c 384 348 l 384 357.547 380.207 366.703 373.457 373.457
 c 366.703 380.207 357.547 384 348 384 c 60 384 l 50.453 384 41.297 380.207
 34.543 373.457 c 27.793 366.703 24 357.547 24 348 c 24 336 l 12 336 l 5.371
 336 0 330.629 0 324 c 0 317.371 5.371 312 12 312 c 24 312 l 24 216 l 12
 216 l 5.371 216 0 210.629 0 204 c 0 197.371 5.371 192 12 192 c 24 192 l
 24 96 l 12 96 l 5.371 96 0 90.629 0 84 c 0 77.371 5.371 72 12 72 c 24 72
 l h
60 48 m 53.371 48 48 53.371 48 60 c 48 348 l 48 351.184 49.266 354.234 
51.516 356.484 c 53.766 358.734 56.816 360 60 360 c 348 360 l 351.184 360
 354.234 358.734 356.484 356.484 c 358.734 354.234 360 351.184 360 348 c
 360 60 l 360 56.816 358.734 53.766 356.484 51.516 c 354.234 49.266 351.184
 48 348 48 c h
60 48 m f
120.84 192 m 157.512 192 l 158.664 187.566 160.375 183.441 162.648 179.617
 c 136.727 153.695 l 128.312 164.938 122.852 178.105 120.84 192 c 153.695
 136.727 m 179.617 162.648 l 183.457 160.375 187.586 158.664 192 157.512
 c 192 120.84 l 178.105 122.852 164.938 128.312 153.695 136.727 c 216 120.84
 m 216 157.512 l 220.434 158.664 224.559 160.375 228.383 162.648 c 254.305
 136.727 l 243.062 128.312 229.895 122.852 216 120.84 c 271.273 153.695 
m 245.352 179.617 l 247.625 183.457 249.336 187.586 250.488 192 c 287.16
 192 l 285.148 178.105 279.688 164.938 271.273 153.695 c 287.16 216 m 250.488
 216 l 249.336 220.434 247.625 224.559 245.352 228.383 c 271.273 254.305
 l 279.688 243.062 285.148 229.895 287.16 216 c 254.305 271.273 m 228.383
 245.352 l 224.543 247.625 220.414 249.336 216 250.488 c 216 287.16 l 229.895
 285.148 243.062 279.688 254.305 271.273 c 192 287.16 m 192 250.488 l 187.652
 249.363 183.484 247.637 179.617 245.352 c 153.695 271.273 l 164.938 279.688
 178.105 285.148 192 287.16 c 136.727 254.305 m 162.648 228.383 l 160.363
 224.516 158.637 220.348 157.512 216 c 120.84 216 l 122.879 230.23 128.496
 243.312 136.727 254.305 c 96 204 m 96 165.414 116.586 129.762 150 110.469
 c 183.414 91.176 224.586 91.176 258 110.469 c 291.414 129.762 312 165.414
 312 204 c 312 242.586 291.414 278.238 258 297.531 c 224.586 316.824 183.414
 316.824 150 297.531 c 116.586 278.238 96 242.586 96 204 c 204 180 m 195.426
 180 187.504 184.574 183.215 192 c 178.93 199.426 178.93 208.574 183.215
 216 c 187.504 223.426 195.426 228 204 228 c 212.574 228 220.496 223.426
 224.785 216 c 229.07 208.574 229.07 199.426 224.785 192 c 220.496 184.574
 212.574 180 204 180 c f
Q Q
showpage
%%Trailer
%%EOF
