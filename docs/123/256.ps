%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 54 192 144
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 54 192 144
192 192 cairo_set_page_size
%%EndPageSetup
q 0 54 192 90 rectclip
1 0 0 -1 0 192 cm q
0 g
34.477 135.562 m 34.477 49.703 l 20.387 49.703 l 0 64.547 l 0 78.191 l 
19.68 64.031 l 20.398 64.031 l 20.398 135.562 l h
73.031 74.484 m 73.031 73.727 l 73.031 66.312 78.312 59.699 87.383 59.699
 c 95.496 59.699 101.473 64.98 101.473 72.973 c 101.473 80.461 96.434 86.184
 91.789 91.285 c 59.879 126.637 l 59.879 135.566 l 117.238 135.566 l 117.238
 123.688 l 79.715 123.684 l 79.715 122.855 l 100.922 99.023 l 108.723 90.336
 115.766 83.039 115.766 71.785 c 115.754 58.188 104.676 48 87.695 48 c 68.82
 48 59.375 60.77 59.375 73.801 c 59.375 74.484 l h
151.738 97.082 m 161.172 97.082 l 171.047 97.082 177.66 102.855 177.719
 111.23 c 177.84 119.715 171.117 125.824 160.668 125.75 c 151.43 125.691
 144.758 120.723 144.121 114.312 c 130.98 114.312 l 131.484 126.949 142.238
 137.328 160.547 137.328 c 178.281 137.328 192.25 127.262 191.988 111.602
 c 191.75 97.887 180.926 91.789 173.375 91.035 c 173.375 90.277 l 179.797
 89.199 189.539 82.355 189.285 70.141 c 188.973 57.504 178.09 47.879 160.977
 48 c 142.977 48.059 133.172 58.559 132.801 70.777 c 146.191 70.777 l 146.574
 64.801 152.168 59.449 160.664 59.449 c 169.102 59.449 175.137 64.668 175.137
 72.289 c 175.195 79.969 169.09 85.562 160.738 85.562 c 151.738 85.562 l
 h
151.738 97.082 m f
Q Q
showpage
%%Trailer
%%EOF
