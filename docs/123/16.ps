%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 3 12 9
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 3 12 9
12 12 cairo_set_page_size
%%EndPageSetup
q 0 3 12 6 rectclip
1 0 0 -1 0 12 cm q
0 g
2.156 8.473 m 2.156 3.105 l 1.273 3.105 l 0 4.035 l 0 4.887 l 1.23 4 l 
1.277 4 l 1.277 8.473 l h
4.566 4.656 m 4.566 4.609 l 4.566 4.145 4.895 3.734 5.465 3.734 c 5.973
 3.734 6.344 4.062 6.344 4.562 c 6.344 5.031 6.027 5.387 5.738 5.707 c 3.742
 7.914 l 3.742 8.473 l 7.328 8.473 l 7.328 7.73 l 4.98 7.73 l 4.98 7.68 
l 6.309 6.188 l 6.797 5.645 7.238 5.188 7.238 4.484 c 7.234 3.637 6.543 
3 5.48 3 c 4.301 3 3.711 3.797 3.711 4.613 c 3.711 4.656 l h
9.484 6.07 m 10.074 6.07 l 10.691 6.07 11.105 6.43 11.109 6.953 c 11.117
 7.484 10.695 7.863 10.043 7.859 c 9.465 7.855 9.047 7.547 9.008 7.145 c
 8.188 7.145 l 8.219 7.934 8.891 8.582 10.035 8.582 c 11.145 8.582 12.016
 7.953 12 6.973 c 11.984 6.117 11.309 5.734 10.836 5.688 c 10.836 5.641 
l 11.238 5.574 11.848 5.145 11.832 4.383 c 11.812 3.594 11.133 2.992 10.062
 3 c 8.938 3.004 8.324 3.66 8.301 4.422 c 9.137 4.422 l 9.16 4.047 9.512
 3.715 10.043 3.715 c 10.57 3.715 10.949 4.043 10.949 4.516 c 10.953 4.996
 10.57 5.344 10.051 5.344 c 9.488 5.344 l h
9.484 6.07 m f
Q Q
showpage
%%Trailer
%%EOF
