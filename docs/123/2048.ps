%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 437 1536 1153
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 437 1536 1153
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 437 1536 716 rectclip
1 0 0 -1 0 1536 cm q
0 g
275.809 1084.512 m 275.809 397.633 l 163.105 397.633 l 0 516.383 l 0 625.535
 l 157.441 512.254 l 163.203 512.254 l 163.203 1084.512 l h
584.258 595.871 m 584.258 589.824 l 584.258 530.496 626.496 477.602 699.074
 477.602 c 763.969 477.602 811.777 519.84 811.777 583.777 c 811.777 643.68
 771.457 689.473 734.305 730.273 c 479.039 1013.09 l 479.039 1084.516 l 
937.918 1084.516 l 937.918 989.477 l 637.727 989.473 l 637.727 982.848 l
 807.359 792.191 l 869.758 722.688 926.113 664.32 926.113 574.27 c 926.016
 465.504 837.406 384 701.566 384 c 550.559 384 475.008 486.145 475.008 590.398
 c 475.008 595.871 l h
1213.922 776.641 m 1289.379 776.641 l 1368.387 776.641 1421.281 822.816
 1421.762 889.824 c 1422.723 957.695 1368.961 1006.559 1285.348 1005.984
 c 1211.426 1005.504 1158.051 965.762 1152.965 914.496 c 1047.844 914.496
 l 1051.875 1015.586 1137.891 1098.625 1284.387 1098.625 c 1426.273 1098.625
 1538.02 1018.082 1535.906 892.801 c 1533.984 783.074 1447.395 734.305 1387.012
 728.258 c 1387.012 722.211 l 1438.371 713.57 1516.324 658.852 1514.309 
561.121 c 1511.812 460.031 1424.742 383.043 1287.844 384 c 1143.844 384.48
 1065.41 468.48 1062.438 566.207 c 1169.574 566.207 l 1172.645 518.398 1217.383
 475.582 1285.352 475.582 c 1352.84 475.582 1401.129 517.344 1401.129 578.301
 c 1401.609 639.742 1352.746 684.477 1285.93 684.477 c 1213.93 684.477 l
 h
1213.922 776.641 m f
Q Q
showpage
%%Trailer
%%EOF
