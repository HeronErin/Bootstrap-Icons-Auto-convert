%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 27 96 72
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 27 96 72
96 96 cairo_set_page_size
%%EndPageSetup
q 0 27 96 45 rectclip
1 0 0 -1 0 96 cm q
0 g
17.238 67.781 m 17.238 24.852 l 10.195 24.852 l 0 32.273 l 0 39.094 l 9.84
 32.016 l 10.199 32.016 l 10.199 67.781 l h
36.516 37.242 m 36.516 36.863 l 36.516 33.156 39.156 29.848 43.691 29.848
 c 47.746 29.848 50.734 32.488 50.734 36.484 c 50.734 40.227 48.215 43.09
 45.891 45.641 c 29.941 63.316 l 29.941 67.781 l 58.621 67.781 l 58.621 
61.84 l 39.859 61.844 l 39.859 61.43 l 50.461 49.512 l 54.359 45.168 57.883
 41.52 57.883 35.891 c 57.875 29.094 52.34 24 43.848 24 c 34.41 24 29.688
 30.383 29.688 36.898 c 29.688 37.242 l h
75.871 48.539 m 80.586 48.539 l 85.523 48.539 88.828 51.426 88.859 55.613
 c 88.918 59.855 85.559 62.91 80.332 62.875 c 75.711 62.844 72.375 60.359
 72.059 57.156 c 65.488 57.156 l 65.742 63.473 71.117 68.664 80.273 68.664
 c 89.141 68.664 96.125 63.629 95.992 55.801 c 95.871 48.941 90.461 45.895
 86.688 45.516 c 86.688 45.137 l 89.898 44.598 94.77 41.176 94.645 35.07
 c 94.488 28.754 89.047 23.941 80.492 24 c 71.492 24.031 66.59 29.281 66.402
 35.387 c 73.098 35.387 l 73.289 32.398 76.086 29.723 80.332 29.723 c 84.551
 29.723 87.566 32.332 87.566 36.145 c 87.598 39.984 84.543 42.781 80.367
 42.781 c 75.867 42.781 l h
75.871 48.539 m f
Q Q
showpage
%%Trailer
%%EOF
