%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 218 768 576
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 218 768 576
768 768 cairo_set_page_size
%%EndPageSetup
q 0 218 768 358 rectclip
1 0 0 -1 0 768 cm q
0 g
137.902 542.258 m 137.902 198.816 l 81.551 198.816 l 0 258.191 l 0 312.766
 l 78.719 256.125 l 81.598 256.125 l 81.598 542.254 l h
292.125 297.938 m 292.125 294.914 l 292.125 265.25 313.246 238.801 349.531
 238.801 c 381.98 238.801 405.883 259.922 405.883 291.891 c 405.883 321.844
 385.723 344.738 367.148 365.137 c 239.52 506.543 l 239.52 542.254 l 468.961
 542.254 l 468.961 494.734 l 318.863 494.734 l 318.863 491.422 l 403.68 
396.098 l 434.879 361.344 463.055 332.16 463.055 287.137 c 463.008 232.754
 418.703 192 350.785 192 c 275.281 192 237.504 243.07 237.504 295.199 c 
237.504 297.934 l h
606.957 388.32 m 644.684 388.32 l 684.188 388.32 710.637 411.41 710.875
 444.914 c 711.355 478.852 684.477 503.281 642.668 502.992 c 605.707 502.754
 579.02 482.879 576.477 457.25 c 523.918 457.25 l 525.934 507.793 568.941
 549.312 642.191 549.312 c 713.137 549.312 769.008 509.039 767.953 446.402
 c 766.992 391.539 723.695 367.156 693.504 364.129 c 693.504 361.105 l 719.184
 356.785 758.16 329.426 757.152 280.562 c 755.906 230.02 712.367 191.523
 643.922 192.004 c 571.922 192.242 532.707 234.242 531.219 283.109 c 584.785
 283.109 l 586.32 259.207 608.688 237.797 642.672 237.797 c 676.414 237.797
 700.559 258.676 700.559 289.156 c 700.797 319.875 676.367 342.246 642.957
 342.246 c 606.957 342.246 l h
606.957 388.32 m f
Q Q
showpage
%%Trailer
%%EOF
