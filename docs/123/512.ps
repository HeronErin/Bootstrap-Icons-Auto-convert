%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 109 384 289
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 109 384 289
384 384 cairo_set_page_size
%%EndPageSetup
q 0 109 384 180 rectclip
1 0 0 -1 0 384 cm q
0 g
68.953 271.129 m 68.953 99.406 l 40.777 99.406 l 0 129.098 l 0 156.387 
l 39.359 128.066 l 40.801 128.066 l 40.801 271.129 l h
146.066 148.969 m 146.066 147.457 l 146.066 132.625 156.625 119.402 174.77
 119.402 c 190.992 119.402 202.945 129.961 202.945 145.945 c 202.945 160.922
 192.867 172.371 183.578 182.57 c 119.762 253.273 l 119.762 271.129 l 234.48
 271.129 l 234.48 247.367 l 159.434 247.367 l 159.434 245.711 l 201.84 198.047
 l 217.441 180.672 231.527 166.078 231.527 143.566 c 231.504 116.375 209.352
 96 175.391 96 c 137.637 96 118.75 121.535 118.75 147.602 c 118.75 148.969
 l h
303.48 194.16 m 322.344 194.16 l 342.098 194.16 355.32 205.703 355.441 
222.457 c 355.68 239.426 342.242 251.641 321.336 251.496 c 302.855 251.375
 289.512 241.441 288.238 228.625 c 261.957 228.625 l 262.965 253.898 284.469
 274.656 321.094 274.656 c 356.566 274.656 384.5 254.52 383.973 223.199 
c 383.492 195.766 361.844 183.574 346.75 182.062 c 346.75 180.551 l 359.59
 178.391 379.078 164.711 378.574 140.277 c 377.949 115.004 356.184 95.758
 321.957 95.996 c 285.957 96.117 266.348 117.117 265.605 141.547 c 292.391
 141.547 l 293.16 129.594 304.344 118.891 321.336 118.891 c 338.207 118.891
 350.281 129.332 350.281 144.57 c 350.402 159.93 338.184 171.113 321.48 
171.113 c 303.48 171.113 l h
303.48 194.16 m f
Q Q
showpage
%%Trailer
%%EOF
