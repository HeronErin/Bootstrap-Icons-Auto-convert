%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
1.078 4.238 m 1.078 1.555 l 0.637 1.555 l 0 2.016 l 0 2.441 l 0.613 2 l
 0.637 2 l 0.637 4.234 l h
2.281 2.328 m 2.281 2.305 l 2.281 2.074 2.445 1.867 2.73 1.867 c 2.984 
1.867 3.172 2.031 3.172 2.281 c 3.172 2.516 3.016 2.695 2.871 2.852 c 1.871
 3.957 l 1.871 4.234 l 3.664 4.234 l 3.664 3.863 l 2.492 3.863 l 2.492 3.836
 l 3.152 3.094 l 3.395 2.82 3.617 2.594 3.617 2.242 c 3.617 1.82 3.27 1.5
 2.742 1.5 c 2.152 1.5 1.855 1.898 1.855 2.305 c 1.855 2.324 l h
4.742 3.035 m 5.035 3.035 l 5.344 3.035 5.551 3.215 5.551 3.477 c 5.555
 3.742 5.344 3.934 5.02 3.93 c 4.73 3.93 4.523 3.773 4.504 3.574 c 4.094
 3.574 l 4.109 3.969 4.445 4.293 5.02 4.293 c 5.574 4.293 6.012 3.977 6.004
 3.488 c 5.996 3.059 5.656 2.871 5.422 2.844 c 5.422 2.82 l 5.621 2.785 
5.926 2.574 5.918 2.191 c 5.91 1.797 5.566 1.496 5.035 1.5 c 4.473 1.5 4.168
 1.828 4.156 2.211 c 4.574 2.211 l 4.586 2.023 4.762 1.855 5.027 1.855 c
 5.289 1.855 5.48 2.02 5.48 2.258 c 5.48 2.496 5.293 2.672 5.031 2.672 c
 4.75 2.672 l h
4.742 3.035 m f
Q Q
showpage
%%Trailer
%%EOF
