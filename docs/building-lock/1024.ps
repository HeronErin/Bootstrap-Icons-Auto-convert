%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 624 768 rectclip
1 0 0 -1 0 768 cm q
0 g
96 48 m 96 35.27 101.059 23.062 110.059 14.059 c 119.062 5.059 131.27 0
 144 0 c 624 0 l 636.73 0 648.938 5.059 657.941 14.059 c 666.941 23.062 
672 35.27 672 48 c 672 360 l 672 368.574 667.426 376.496 660 380.785 c 652.574
 385.07 643.426 385.07 636 380.785 c 628.574 376.496 624 368.574 624 360
 c 624 48 l 144 48 l 144 720 l 288 720 l 288 600 l 288 593.637 290.527 587.531
 295.031 583.031 c 299.531 578.527 305.637 576 312 576 c 384 576 l 384 768
 l 144 768 l 131.27 768 119.062 762.941 110.059 753.941 c 101.059 744.938
 96 732.73 96 720 c h
96 48 m f
216 96 m 209.637 96 203.531 98.527 199.031 103.031 c 194.527 107.531 192
 113.637 192 120 c 192 168 l 192 174.363 194.527 180.469 199.031 184.969
 c 203.531 189.473 209.637 192 216 192 c 264 192 l 270.363 192 276.469 189.473
 280.969 184.969 c 285.473 180.469 288 174.363 288 168 c 288 120 l 288 113.637
 285.473 107.531 280.969 103.031 c 276.469 98.527 270.363 96 264 96 c h
336 120 m 336 113.637 338.527 107.531 343.031 103.031 c 347.531 98.527 
353.637 96 360 96 c 408 96 l 414.363 96 420.469 98.527 424.969 103.031 c
 429.473 107.531 432 113.637 432 120 c 432 168 l 432 174.363 429.473 180.469
 424.969 184.969 c 420.469 189.473 414.363 192 408 192 c 360 192 l 353.637
 192 347.531 189.473 343.031 184.969 c 338.527 180.469 336 174.363 336 168
 c h
504 96 m 497.637 96 491.531 98.527 487.031 103.031 c 482.527 107.531 480
 113.637 480 120 c 480 168 l 480 174.363 482.527 180.469 487.031 184.969
 c 491.531 189.473 497.637 192 504 192 c 552 192 l 558.363 192 564.469 189.473
 568.969 184.969 c 573.473 180.469 576 174.363 576 168 c 576 120 l 576 113.637
 573.473 107.531 568.969 103.031 c 564.469 98.527 558.363 96 552 96 c h
192 264 m 192 257.637 194.527 251.531 199.031 247.031 c 203.531 242.527
 209.637 240 216 240 c 264 240 l 270.363 240 276.469 242.527 280.969 247.031
 c 285.473 251.531 288 257.637 288 264 c 288 312 l 288 318.363 285.473 324.469
 280.969 328.969 c 276.469 333.473 270.363 336 264 336 c 216 336 l 209.637
 336 203.531 333.473 199.031 328.969 c 194.527 324.469 192 318.363 192 312
 c h
360 240 m 353.637 240 347.531 242.527 343.031 247.031 c 338.527 251.531
 336 257.637 336 264 c 336 312 l 336 318.363 338.527 324.469 343.031 328.969
 c 347.531 333.473 353.637 336 360 336 c 408 336 l 414.363 336 420.469 333.473
 424.969 328.969 c 429.473 324.469 432 318.363 432 312 c 432 264 l 432 257.637
 429.473 251.531 424.969 247.031 c 420.469 242.527 414.363 240 408 240 c
 h
480 264 m 480 257.637 482.527 251.531 487.031 247.031 c 491.531 242.527
 497.637 240 504 240 c 552 240 l 558.363 240 564.469 242.527 568.969 247.031
 c 573.473 251.531 576 257.637 576 264 c 576 312 l 576 318.363 573.473 324.469
 568.969 328.969 c 564.469 333.473 558.363 336 552 336 c 504 336 l 497.637
 336 491.531 333.473 487.031 328.969 c 482.527 324.469 480 318.363 480 312
 c h
216 384 m 209.637 384 203.531 386.527 199.031 391.031 c 194.527 395.531
 192 401.637 192 408 c 192 456 l 192 462.363 194.527 468.469 199.031 472.969
 c 203.531 477.473 209.637 480 216 480 c 264 480 l 270.363 480 276.469 477.473
 280.969 472.969 c 285.473 468.469 288 462.363 288 456 c 288 408 l 288 401.637
 285.473 395.531 280.969 391.031 c 276.469 386.527 270.363 384 264 384 c
 h
336 408 m 336 401.637 338.527 395.531 343.031 391.031 c 347.531 386.527
 353.637 384 360 384 c 408 384 l 414.363 384 420.469 386.527 424.969 391.031
 c 429.473 395.531 432 401.637 432 408 c 432 456 l 432 462.363 429.473 468.469
 424.969 472.969 c 420.469 477.473 414.363 480 408 480 c 360 480 l 353.637
 480 347.531 477.473 343.031 472.969 c 338.527 468.469 336 462.363 336 456
 c h
432 624 m 432 611.27 437.059 599.062 446.059 590.059 c 455.062 581.059 
467.27 576 480 576 c 480 528 l 480 493.703 498.297 462.012 528 444.863 c
 557.703 427.711 594.297 427.711 624 444.863 c 653.703 462.012 672 493.703
 672 528 c 672 576 l 684.73 576 696.938 581.059 705.941 590.059 c 714.941
 599.062 720 611.27 720 624 c 720 720 l 720 732.73 714.941 744.938 705.941
 753.941 c 696.938 762.941 684.73 768 672 768 c 480 768 l 467.27 768 455.062
 762.941 446.059 753.941 c 437.059 744.938 432 732.73 432 720 c h
576 480 m 563.27 480 551.062 485.059 542.059 494.059 c 533.059 503.062 
528 515.27 528 528 c 528 576 l 624 576 l 624 528 l 624 515.27 618.941 503.062
 609.941 494.059 c 600.938 485.059 588.73 480 576 480 c f
Q Q
showpage
%%Trailer
%%EOF
