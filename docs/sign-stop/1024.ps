%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
151.68 483.84 m 106.992 483.84 82.223 460.176 79.969 429.504 c 111.312 
429.504 l 114.434 446.113 130.32 457.488 154.082 457.488 c 179.234 457.488
 193.922 445.68 193.922 427.727 c 193.922 413.184 184.18 405.312 163.348
 400.27 c 131.859 392.398 l 102.578 385.344 84.914 367.918 84.914 340.656
 c 84.914 306.77 113.57 283.824 154.227 283.824 c 195.172 283.824 220.754
 306.625 223.156 336 c 192.195 336 l 189.125 320.641 175.301 309.984 153.938
 309.984 c 131.281 309.984 116.977 321.793 116.977 338.785 c 116.977 351.312
 126.383 359.762 143.52 363.84 c 174.91 371.566 l 207.215 379.438 225.789
 394.941 225.789 424.848 c 225.789 460.176 198.238 483.793 151.676 483.793
 c h
316.176 315.359 m 316.176 480 l 284.254 480 l 284.258 315.359 l 228.145
 315.359 l 228.145 288 l 372.434 288 l 372.434 315.266 l 316.176 315.266
 l h
316.176 315.359 m f
530.16 371.039 m 530.16 397.152 l 530.16 451.441 499.633 483.793 450.434
 483.793 c 401.188 483.793 370.562 451.441 370.562 397.152 c 370.559 371.039
 l 370.559 316.512 401.184 284.305 450.43 284.305 c 499.676 284.305 530.109
 316.656 530.109 371.039 c h
497.809 397.297 m 497.809 370.754 l 497.809 331.059 477.551 311.523 450.434
 311.523 c 422.977 311.523 402.914 331.059 402.914 370.754 c 402.914 397.297
 l 402.914 437.137 422.977 456.672 450.434 456.672 c 477.555 456.672 497.809
 437.086 497.809 397.297 c 553.008 288.051 m 626.688 288.051 l 666.047 288.051
 689.855 314.449 689.855 350.066 c 689.855 385.922 665.809 411.938 626.449
 411.938 c 584.93 411.938 l 584.93 480 l 553.008 480 l h
621.938 385.777 m 644.16 385.777 657.219 372.723 657.219 350.066 c 657.219
 327.41 644.164 314.5 621.938 314.5 c 584.785 314.5 l 584.785 385.781 l 
h
621.938 385.777 m f*
234.863 0 m 228.512 0 222.418 2.523 217.922 7.008 c 7.008 217.922 l 2.523
 222.418 0 228.512 0 234.863 c 0 533.137 l 0 539.488 2.523 545.582 7.008
 550.078 c 217.922 760.992 l 222.418 765.477 228.512 768 234.863 768 c 533.137
 768 l 539.488 768 545.582 765.477 550.078 760.992 c 760.992 550.078 l 765.477
 545.582 768 539.488 768 533.137 c 768 234.863 l 768 228.512 765.477 222.418
 760.992 217.922 c 550.078 7.008 l 545.582 2.523 539.488 0 533.137 0 c h
48 244.801 m 244.801 48 l 523.199 48 l 720 244.801 l 720 523.199 l 523.199
 720 l 244.801 720 l 48 523.199 l h
48 244.801 m f*
Q Q
showpage
%%Trailer
%%EOF
