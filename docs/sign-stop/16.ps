%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
2.371 7.559 m 1.672 7.559 1.285 7.188 1.25 6.711 c 1.738 6.711 l 1.785 
6.969 2.035 7.148 2.406 7.148 c 2.801 7.148 3.027 6.965 3.027 6.684 c 3.027
 6.457 2.875 6.332 2.551 6.254 c 2.059 6.133 l 1.602 6.023 1.324 5.75 1.324
 5.324 c 1.324 4.793 1.773 4.438 2.406 4.438 c 3.047 4.438 3.445 4.793 3.484
 5.254 c 3 5.254 l 2.953 5.016 2.734 4.848 2.402 4.848 c 2.047 4.848 1.824
 5.031 1.824 5.297 c 1.824 5.492 1.973 5.625 2.238 5.688 c 2.73 5.809 l 
3.234 5.93 3.527 6.176 3.527 6.641 c 3.527 7.191 3.098 7.562 2.371 7.562
 c h
4.941 4.926 m 4.941 7.5 l 4.441 7.5 l 4.441 4.926 l 3.566 4.926 l 3.566
 4.5 l 5.82 4.5 l 5.82 4.926 l h
4.941 4.926 m f
8.285 5.797 m 8.285 6.203 l 8.285 7.051 7.809 7.559 7.039 7.559 c 6.27 
7.559 5.793 7.055 5.793 6.203 c 5.789 5.797 l 5.789 4.945 6.266 4.441 7.035
 4.441 c 7.805 4.441 8.281 4.945 8.281 5.797 c h
7.781 6.207 m 7.781 5.793 l 7.781 5.172 7.465 4.867 7.039 4.867 c 6.609
 4.867 6.297 5.172 6.297 5.793 c 6.297 6.207 l 6.297 6.828 6.609 7.137 7.039
 7.137 c 7.461 7.137 7.781 6.832 7.781 6.207 c 8.645 4.5 m 9.797 4.5 l 10.41
 4.5 10.785 4.914 10.785 5.469 c 10.785 6.027 10.41 6.434 9.793 6.434 c 
9.145 6.434 l 9.141 7.5 l 8.641 7.5 l h
9.723 6.027 m 10.07 6.027 10.273 5.824 10.273 5.469 c 10.273 5.113 10.07
 4.914 9.723 4.914 c 9.141 4.914 l 9.141 6.027 l h
9.723 6.027 m f*
3.668 0 m 3.57 0 3.477 0.039 3.406 0.109 c 0.109 3.406 l 0.039 3.477 0 
3.57 0 3.668 c 0 8.332 l 0 8.43 0.039 8.523 0.109 8.594 c 3.406 11.891 l
 3.477 11.961 3.57 12 3.668 12 c 8.332 12 l 8.43 12 8.523 11.961 8.594 11.891
 c 11.891 8.594 l 11.961 8.523 12 8.43 12 8.332 c 12 3.668 l 12 3.57 11.961
 3.477 11.891 3.406 c 8.594 0.109 l 8.523 0.039 8.43 0 8.332 0 c h
0.75 3.824 m 3.824 0.75 l 8.176 0.75 l 11.25 3.824 l 11.25 8.176 l 8.176
 11.25 l 3.824 11.25 l 0.75 8.176 l h
0.75 3.824 m f*
Q Q
showpage
%%Trailer
%%EOF
