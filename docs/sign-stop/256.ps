%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
37.922 120.961 m 26.75 120.961 20.559 115.047 19.992 107.375 c 27.828 107.375
 l 28.609 111.527 32.582 114.371 38.52 114.371 c 44.809 114.371 48.48 111.418
 48.48 106.93 c 48.48 103.293 46.043 101.324 40.836 100.066 c 32.965 98.098
 l 25.645 96.332 21.23 91.977 21.23 85.16 c 21.23 76.688 28.395 70.953 38.559
 70.953 c 48.793 70.953 55.191 76.652 55.789 83.996 c 48.051 83.996 l 47.281
 80.156 43.828 77.492 38.488 77.492 c 32.824 77.492 29.25 80.445 29.25 84.691
 c 29.25 87.824 31.602 89.934 35.887 90.957 c 43.734 92.891 l 51.809 94.859
 56.453 98.734 56.453 106.211 c 56.453 115.043 49.566 120.945 37.926 120.945
 c h
79.047 78.84 m 79.043 120 l 71.062 120 l 71.062 78.84 l 57.035 78.84 l 
57.035 72 l 93.105 72 l 93.105 78.816 l 79.043 78.816 l h
79.047 78.84 m f
132.539 92.762 m 132.539 99.289 l 132.539 112.859 124.906 120.949 112.605
 120.949 c 100.293 120.949 92.637 112.859 92.637 99.289 c 92.641 92.762 
l 92.641 79.129 100.297 71.078 112.609 71.078 c 124.922 71.078 132.531 79.168
 132.531 92.762 c h
124.449 99.324 m 124.449 92.688 l 124.449 82.762 119.387 77.879 112.605
 77.879 c 105.742 77.879 100.727 82.762 100.727 92.688 c 100.727 99.324 
l 100.727 109.285 105.742 114.168 112.605 114.168 c 119.387 114.168 124.449
 109.273 124.449 99.324 c 138.25 72.012 m 156.672 72.012 l 166.512 72.012
 172.465 78.613 172.465 87.516 c 172.465 96.48 166.453 102.984 156.613 102.984
 c 146.234 102.984 l 146.23 120 l 138.25 120 l h
155.48 96.445 m 161.035 96.445 164.301 93.18 164.301 87.516 c 164.301 81.852
 161.035 78.625 155.48 78.625 c 146.191 78.625 l 146.191 96.445 l h
155.48 96.445 m f*
58.715 0 m 57.129 0 55.605 0.629 54.48 1.754 c 1.754 54.48 l 0.629 55.605
 0 57.129 0 58.715 c 0 133.285 l 0 134.871 0.629 136.395 1.754 137.52 c 
54.48 190.246 l 55.605 191.371 57.129 192 58.715 192 c 133.285 192 l 134.871
 192 136.395 191.371 137.52 190.246 c 190.246 137.52 l 191.371 136.395 192
 134.871 192 133.285 c 192 58.715 l 192 57.129 191.371 55.605 190.246 54.48
 c 137.52 1.754 l 136.395 0.629 134.871 0 133.285 0 c h
12 61.199 m 61.199 12 l 130.801 12 l 180 61.199 l 180 130.801 l 130.801
 180 l 61.199 180 l 12 130.801 l h
12 61.199 m f*
Q Q
showpage
%%Trailer
%%EOF
