%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.875 2.062 m 4.875 2.312 4.5 2.312 4.5 2.062 c 4.5 1.812 4.875 1.812 4.875
 2.062 c 4.5 2.438 m 4.5 2.688 4.125 2.688 4.125 2.438 c 4.125 2.188 4.5
 2.188 4.5 2.438 c 4.125 2.812 m 4.125 3.062 3.75 3.062 3.75 2.812 c 3.75
 2.562 4.125 2.562 4.125 2.812 c 3.75 3.188 m 3.75 3.438 3.375 3.438 3.375
 3.188 c 3.375 2.938 3.75 2.938 3.75 3.188 c 3.375 3.562 m 3.375 3.812 3
 3.812 3 3.562 c 3 3.312 3.375 3.312 3.375 3.562 c 3 3.938 m 3 4.188 2.625
 4.188 2.625 3.938 c 2.625 3.688 3 3.688 3 3.938 c 2.625 4.312 m 2.625 4.562
 2.25 4.562 2.25 4.312 c 2.25 4.062 2.625 4.062 2.625 4.312 c 2.25 4.688
 m 2.25 4.938 1.875 4.938 1.875 4.688 c 1.875 4.438 2.25 4.438 2.25 4.688
 c 2.625 5.062 m 2.625 5.312 2.25 5.312 2.25 5.062 c 2.25 4.812 2.625 4.812
 2.625 5.062 c 2.812 4.875 m 3.062 4.875 3.062 4.5 2.812 4.5 c 2.562 4.5
 2.562 4.875 2.812 4.875 c 3.188 4.5 m 3.438 4.5 3.438 4.125 3.188 4.125
 c 2.938 4.125 2.938 4.5 3.188 4.5 c 3.562 4.125 m 3.812 4.125 3.812 3.75
 3.562 3.75 c 3.312 3.75 3.312 4.125 3.562 4.125 c 3.938 3.75 m 4.188 3.75
 4.188 3.375 3.938 3.375 c 3.688 3.375 3.688 3.75 3.938 3.75 c 4.312 3.375
 m 4.562 3.375 4.562 3 4.312 3 c 4.062 3 4.062 3.375 4.312 3.375 c 4.688
 3 m 4.938 3 4.938 2.625 4.688 2.625 c 4.438 2.625 4.438 3 4.688 3 c 5.062
 2.625 m 5.312 2.625 5.312 2.25 5.062 2.25 c 4.812 2.25 4.812 2.625 5.062
 2.625 c 3.188 5.25 m 3.438 5.25 3.438 4.875 3.188 4.875 c 2.938 4.875 2.938
 5.25 3.188 5.25 c 3.75 4.688 m 3.75 4.938 3.375 4.938 3.375 4.688 c 3.375
 4.438 3.75 4.438 3.75 4.688 c 4.125 4.312 m 4.125 4.562 3.75 4.562 3.75
 4.312 c 3.75 4.062 4.125 4.062 4.125 4.312 c 4.5 3.938 m 4.5 4.188 4.125
 4.188 4.125 3.938 c 4.125 3.688 4.5 3.688 4.5 3.938 c 4.875 3.562 m 4.875
 3.812 4.5 3.812 4.5 3.562 c 4.5 3.312 4.875 3.312 4.875 3.562 c 5.25 3.188
 m 5.25 3.438 4.875 3.438 4.875 3.188 c 4.875 2.938 5.25 2.938 5.25 3.188
 c 4.125 5.062 m 4.125 5.312 3.75 5.312 3.75 5.062 c 3.75 4.812 4.125 4.812
 4.125 5.062 c 4.312 4.875 m 4.562 4.875 4.562 4.5 4.312 4.5 c 4.062 4.5
 4.062 4.875 4.312 4.875 c 4.688 4.5 m 4.938 4.5 4.938 4.125 4.688 4.125
 c 4.438 4.125 4.438 4.5 4.688 4.5 c 5.062 4.125 m 5.312 4.125 5.312 3.75
 5.062 3.75 c 4.812 3.75 4.812 4.125 5.062 4.125 c f
3 0 m 1.344 0 0 1.344 0 3 c 0 4.656 1.344 6 3 6 c 4.656 6 6 4.656 6 3 c
 6 1.344 4.656 0 3 0 c 0.375 3 m 0.375 1.844 1.133 0.82 2.242 0.488 c 3.348
 0.152 4.547 0.582 5.188 1.547 c 5.023 1.402 4.789 1.605 4.906 1.789 c 5.02
 1.973 5.305 1.844 5.242 1.637 c 5.293 1.719 5.336 1.801 5.375 1.887 c 5.379
 1.887 l 5.273 1.918 5.223 2.031 5.262 2.129 c 5.301 2.23 5.414 2.277 5.512
 2.234 c 5.562 2.398 5.598 2.57 5.613 2.746 c 5.535 2.543 5.234 2.609 5.25
 2.828 c 5.266 3.043 5.574 3.062 5.621 2.852 c 5.633 3.051 5.621 3.25 5.586
 3.449 c 5.492 3.324 5.289 3.367 5.254 3.52 c 5.219 3.676 5.379 3.801 5.523
 3.73 c 5.48 3.871 5.43 4.008 5.367 4.141 c 5.285 4.172 5.238 4.262 5.254
 4.348 c 5.219 4.406 5.18 4.461 5.141 4.52 c 5.02 4.461 4.875 4.551 4.875
 4.688 c 4.875 4.73 4.887 4.77 4.91 4.801 c 4.875 4.836 4.836 4.875 4.801
 4.91 c 4.645 4.797 4.438 4.965 4.52 5.141 c 4.461 5.18 4.406 5.219 4.348
 5.254 c 4.262 5.238 4.172 5.285 4.141 5.367 c 4.008 5.43 3.871 5.48 3.73
 5.523 c 3.801 5.379 3.676 5.219 3.52 5.254 c 3.367 5.289 3.324 5.492 3.449
 5.586 c 3.25 5.621 3.051 5.633 2.852 5.621 c 3.062 5.574 3.043 5.266 2.828
 5.25 c 2.609 5.234 2.543 5.535 2.746 5.613 c 2.574 5.598 2.402 5.562 2.234
 5.512 c 2.289 5.387 2.199 5.25 2.062 5.25 c 1.98 5.25 1.91 5.301 1.887 
5.379 c 1.801 5.336 1.715 5.293 1.633 5.242 c 1.754 5.277 1.875 5.188 1.875
 5.062 c 1.875 4.93 1.742 4.84 1.621 4.887 c 1.5 4.934 1.461 5.086 1.547
 5.188 c 0.816 4.699 0.375 3.879 0.375 3 c f
Q Q
showpage
%%Trailer
%%EOF
