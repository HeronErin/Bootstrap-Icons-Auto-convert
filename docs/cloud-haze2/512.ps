%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
204 72 m 183.801 71.988 164.113 78.352 147.738 90.18 c 131.363 102.008 
119.137 118.699 112.801 137.879 c 111.895 141.012 109.758 143.645 106.871
 145.168 c 103.988 146.691 100.609 146.973 97.512 145.949 c 94.414 144.93
 91.867 142.691 90.453 139.75 c 89.043 136.812 88.887 133.426 90.023 130.367
 c 101.211 96.586 126.809 69.508 159.906 56.441 c 193.008 43.375 230.199
 45.668 261.441 62.699 c 292.688 79.734 314.766 109.75 321.719 144.648 c
 346.082 147.938 367.086 163.434 377.414 185.742 c 387.746 208.051 385.98
 234.09 372.734 254.801 c 359.484 275.512 336.586 288.027 312 288 c 108 
288 l 101.371 288 96 282.629 96 276 c 96 269.371 101.371 264 108 264 c 312
 264 l 329.148 264.004 344.996 254.859 353.574 240.012 c 362.152 225.16 
362.156 206.863 353.586 192.012 c 345.016 177.156 329.172 168.004 312.023
 168 c 311.398 168 l 305.254 168.039 300.074 163.426 299.398 157.32 c 296.773
 133.855 285.59 112.184 267.992 96.441 c 250.395 80.703 227.609 72 204 72
 c 0 180 m 0 173.371 5.371 168 12 168 c 132 168 l 138.629 168 144 173.371
 144 180 c 144 186.629 138.629 192 132 192 c 12 192 l 5.371 192 0 186.629
 0 180 c 48 228 m 48 221.371 53.371 216 60 216 c 276 216 l 282.629 216 288
 221.371 288 228 c 288 234.629 282.629 240 276 240 c 60 240 l 53.371 240
 48 234.629 48 228 c 0 324 m 0 317.371 5.371 312 12 312 c 228 312 l 234.629
 312 240 317.371 240 324 c 240 330.629 234.629 336 228 336 c 12 336 l 5.371
 336 0 330.629 0 324 c f
Q Q
showpage
%%Trailer
%%EOF
