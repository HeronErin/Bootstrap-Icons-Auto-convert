%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
367.922 335.137 m 329.523 401.664 l 329.52 401.664 l 327.188 405.691 322.738
 408.008 318.102 407.605 c 313.465 407.207 309.477 404.16 307.871 399.793
 c 256.992 261.457 l 255.758 258.113 256.07 254.391 257.852 251.305 c 259.633
 248.215 262.695 246.078 266.207 245.473 c 411.453 220.367 l 411.457 220.367
 l 416.047 219.559 420.691 221.48 423.363 225.301 c 426.039 229.117 426.262
 234.137 423.938 238.176 c 391.922 293.566 l 421.73 311.469 l 421.727 311.473
 l 457.867 333.148 479.984 372.195 480 414.336 c 480 528 l 432 528 l 432
 414.336 l 432 389.051 418.734 365.621 397.055 352.609 c h
367.922 335.137 m f
333.602 20.879 m 361.441 -6.961 406.562 -6.961 434.402 20.879 c 747.121
 333.648 l 774.961 361.488 774.961 406.559 747.121 434.352 c 434.398 747.121
 l 406.559 774.961 361.488 774.961 333.695 747.121 c 20.879 434.398 l 7.484
 421.066 -0.047 402.949 -0.047 384.047 c -0.047 365.148 7.484 347.027 20.879
 333.695 c h
400.801 54.48 m 396.344 50.023 390.301 47.523 384 47.523 c 377.699 47.523
 371.656 50.023 367.199 54.48 c 54.434 367.199 l 49.977 371.656 47.473 377.699
 47.473 384 c 47.473 390.301 49.977 396.344 54.434 400.801 c 367.203 713.57
 l 367.199 713.566 l 371.656 718.023 377.699 720.527 384 720.527 c 390.301
 720.527 396.344 718.023 400.801 713.566 c 713.57 400.797 l 713.566 400.801
 l 718.023 396.344 720.527 390.301 720.527 384 c 720.527 377.699 718.023
 371.656 713.566 367.199 c 400.801 54.434 l h
400.801 54.48 m f*
Q Q
showpage
%%Trailer
%%EOF
