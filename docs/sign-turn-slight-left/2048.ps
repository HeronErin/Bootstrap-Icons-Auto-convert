%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
735.84 670.273 m 659.039 803.328 l 655.977 808.617 651.012 812.539 645.16
 814.293 c 639.305 816.047 633.004 815.5 627.535 812.77 c 622.07 810.035
 617.852 805.32 615.742 799.586 c 513.98 522.914 l 513.984 522.91 l 511.512
 516.223 512.145 508.785 515.707 502.605 c 519.266 496.43 525.391 492.156
 532.414 490.945 c 822.91 440.738 l 822.91 440.734 l 828.941 439.676 835.145
 440.957 840.258 444.316 c 845.375 447.68 849.012 452.867 850.426 458.824
 c 851.84 464.777 850.926 471.047 847.871 476.352 c 783.84 587.137 l 843.457
 622.945 l 878.988 644.258 908.398 674.41 928.82 710.461 c 949.242 746.512
 959.984 787.238 960 828.672 c 960 1056 l 864 1056 l 864 828.672 l 863.996
 778.102 837.469 731.242 794.113 705.215 c h
735.84 670.273 m f
667.199 41.762 m 722.879 -13.918 813.121 -13.918 868.801 41.762 c 1494.242
 667.297 l 1549.922 722.977 1549.922 813.121 1494.242 868.703 c 868.801 
1494.238 l 813.121 1549.918 722.977 1549.918 667.395 1494.238 c 41.762 868.801
 l 14.969 842.137 -0.094 805.895 -0.094 768.098 c -0.094 730.297 14.969 
694.055 41.762 667.391 c h
801.598 108.961 m 801.602 108.961 l 792.688 100.051 780.602 95.043 768 
95.043 c 755.398 95.043 743.312 100.051 734.398 108.961 c 108.863 734.398
 l 99.953 743.312 94.949 755.398 94.949 768 c 94.949 780.602 99.953 792.688
 108.863 801.602 c 734.398 1427.137 l 743.312 1436.047 755.398 1441.051 
768 1441.051 c 780.602 1441.051 792.688 1436.047 801.602 1427.137 c 1427.137
 801.602 l 1436.047 792.688 1441.051 780.602 1441.051 768 c 1441.051 755.398
 1436.047 743.312 1427.137 734.398 c 801.602 108.863 l h
801.598 108.961 m f*
Q Q
showpage
%%Trailer
%%EOF
