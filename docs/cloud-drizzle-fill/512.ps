%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 361
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 361
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 361 rectclip
1 0 0 -1 0 384 cm q
0 g
99.793 288.602 m 102.812 289.605 105.309 291.773 106.734 294.625 c 108.156
 297.473 108.387 300.773 107.375 303.793 c 95.375 339.793 l 93.105 345.828
 86.469 348.992 80.348 346.953 c 74.23 344.914 70.816 338.398 72.625 332.207
 c 84.625 296.207 l 86.711 289.918 93.504 286.512 99.793 288.602 c 243.793
 288.602 m 246.812 289.605 249.309 291.773 250.734 294.625 c 252.156 297.473
 252.387 300.773 251.375 303.793 c 239.375 339.793 l 237.105 345.828 230.469
 348.992 224.348 346.953 c 218.23 344.914 214.816 338.398 216.625 332.207
 c 228.625 296.207 l 230.711 289.918 237.504 286.512 243.793 288.602 c 159.793
 324.602 m 162.812 325.605 165.309 327.773 166.734 330.625 c 168.156 333.473
 168.387 336.773 167.375 339.793 c 155.375 375.793 l 153.105 381.828 146.469
 384.992 140.348 382.953 c 134.23 380.914 130.816 374.398 132.625 368.207
 c 144.625 332.207 l 146.711 325.918 153.504 322.512 159.793 324.602 c 303.793
 324.602 m 306.812 325.605 309.309 327.773 310.734 330.625 c 312.156 333.473
 312.387 336.773 311.375 339.793 c 299.375 375.793 l 298.461 378.922 296.312
 381.547 293.426 383.062 c 290.535 384.574 287.156 384.848 284.062 383.816
 c 280.969 382.785 278.426 380.539 277.023 377.594 c 275.621 374.648 275.477
 371.262 276.625 368.207 c 288.625 332.207 l 290.711 325.918 297.504 322.512
 303.793 324.602 c 321.723 120.648 m 321.719 120.648 l 315.031 86.926 294.203
 57.691 264.512 40.355 c 234.824 23.02 199.129 19.246 166.473 29.992 c 133.816
 40.738 107.336 64.973 93.742 96.551 c 70.793 93.906 47.766 100.832 30.082
 115.699 c 12.398 130.562 1.613 152.059 0.273 175.121 c -1.07 198.184 7.148
 220.781 22.988 237.598 c 38.828 254.414 60.898 263.965 84 264 c 312 264
 l 336.586 264.027 359.484 251.512 372.734 230.801 c 385.98 210.09 387.746
 184.051 377.414 161.742 c 367.086 139.434 346.082 123.938 321.719 120.648
 c f
Q Q
showpage
%%Trailer
%%EOF
