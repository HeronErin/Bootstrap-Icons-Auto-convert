%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 721 rectclip
1 0 0 -1 0 768 cm q
0 g
199.586 577.199 m 205.625 579.215 210.621 583.551 213.465 589.25 c 216.312
 594.945 216.773 601.543 214.754 607.586 c 190.754 679.586 l 187.809 687.406
 181.012 693.137 172.801 694.707 c 164.594 696.281 156.156 693.469 150.535
 687.285 c 144.91 681.102 142.906 672.441 145.246 664.414 c 169.246 592.414
 l 171.254 586.375 175.574 581.379 181.266 578.527 c 186.953 575.672 193.543
 575.195 199.586 577.199 c 487.586 577.199 m 493.625 579.215 498.621 583.551
 501.465 589.25 c 504.312 594.945 504.773 601.543 502.754 607.586 c 478.754
 679.586 l 475.809 687.406 469.012 693.137 460.801 694.707 c 452.594 696.281
 444.156 693.469 438.535 687.285 c 432.91 681.102 430.906 672.441 433.246
 664.414 c 457.246 592.414 l 459.254 586.375 463.574 581.379 469.266 578.527
 c 474.953 575.672 481.543 575.195 487.586 577.199 c 319.586 649.199 m 325.625
 651.215 330.621 655.551 333.465 661.25 c 336.312 666.945 336.773 673.543
 334.754 679.586 c 310.754 751.586 l 307.809 759.406 301.012 765.137 292.801
 766.707 c 284.594 768.281 276.156 765.469 270.535 759.285 c 264.91 753.102
 262.906 744.441 265.246 736.414 c 289.246 664.414 l 291.254 658.375 295.574
 653.379 301.266 650.527 c 306.953 647.672 313.543 647.195 319.586 649.199
 c 607.586 649.199 m 613.625 651.215 618.621 655.551 621.465 661.25 c 624.312
 666.945 624.773 673.543 622.754 679.586 c 598.754 751.586 l 596.926 757.848
 592.629 763.094 586.852 766.121 c 581.074 769.148 574.312 769.695 568.121
 767.633 c 561.934 765.57 556.852 761.078 554.047 755.188 c 551.238 749.301
 550.953 742.523 553.246 736.414 c 577.246 664.414 l 579.254 658.375 583.574
 653.379 589.266 650.527 c 594.953 647.672 601.543 647.195 607.586 649.199
 c 643.441 241.297 m 633.473 191.047 607.691 145.305 569.867 110.758 c 532.039
 76.211 484.156 54.672 433.211 49.285 c 382.27 43.902 330.938 54.957 286.727
 80.832 c 242.516 106.707 207.742 146.051 187.488 193.105 c 157.125 189.605
 126.379 194.457 98.57 207.137 c 70.758 219.816 46.934 239.844 29.66 265.059
 c 12.387 290.277 2.32 319.727 0.547 350.242 c -1.23 380.754 5.352 411.172
 19.582 438.223 c 33.816 465.273 55.156 487.93 81.309 503.746 c 107.461 
519.566 137.434 527.953 168 528 c 624 528 l 673.172 528.055 718.969 503.02
 745.469 461.602 c 771.965 420.18 775.496 368.102 754.832 323.484 c 734.168
 278.867 692.168 247.879 643.441 241.297 c f
Q Q
showpage
%%Trailer
%%EOF
