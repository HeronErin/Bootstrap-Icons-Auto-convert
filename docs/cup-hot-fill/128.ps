%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
3 36 m 2.09 36 1.23 36.414 0.66 37.121 c 0.094 37.832 -0.125 38.762 0.07
 39.648 c 9.98 84.254 l 9.984 84.254 l 10.723 87.582 12.578 90.562 15.238
 92.699 c 17.902 94.836 21.211 96 24.625 96 c 59.379 96 l 59.375 96 l 62.789
 96 66.098 94.836 68.762 92.699 c 71.422 90.562 73.277 87.582 74.016 84.254
 c 74.801 80.715 l 74.801 80.711 l 80.98 81.867 87.316 79.715 91.512 75.035
 c 95.711 70.355 97.16 63.824 95.34 57.805 c 93.52 51.789 88.691 47.156 
82.602 45.59 c 83.926 39.648 l 83.93 39.648 l 84.125 38.762 83.906 37.832
 83.34 37.121 c 82.77 36.414 81.91 36 81 36 c h
78 75 m 77.363 75 76.73 74.949 76.105 74.852 c 81.309 51.465 l 81.305 51.461
 l 87.043 53.125 90.688 58.75 89.855 64.664 c 89.023 70.578 83.973 74.984
 78 75 c f*
26.398 4.801 m 26.379 4.824 l 26.293 4.938 l 26.297 4.938 l 25.863 5.539
 25.453 6.16 25.074 6.797 c 24.754 7.309 24.469 7.844 24.227 8.398 c 24.07
 8.758 24.023 8.949 24.004 9.016 c 24.004 9.039 l 24.008 9.043 l 24.074 
9.574 24.262 10.082 24.551 10.531 c 25 11.328 25.617 12.164 26.398 13.203
 c 26.457 13.273 l 27.164 14.223 28.016 15.355 28.676 16.531 c 29.348 17.73
 29.996 19.262 29.996 21 c 29.996 22.129 29.605 23.207 29.281 23.965 c 29.285
 23.965 l 28.938 24.77 28.535 25.547 28.074 26.293 c 27.602 27.078 27.098
 27.844 26.555 28.586 c 26.445 28.734 l 26.414 28.781 l 26.402 28.793 l 
26.406 28.793 l 25.414 30.121 23.531 30.391 22.207 29.398 c 20.879 28.406
 20.609 26.527 21.602 25.199 c 21.621 25.176 l 21.707 25.062 l 21.703 25.062
 l 22.137 24.461 22.547 23.84 22.926 23.203 c 23.246 22.691 23.531 22.156
 23.773 21.602 c 23.93 21.242 23.977 21.051 23.996 20.984 c 23.992 20.98
 l 23.93 20.445 23.746 19.926 23.453 19.469 c 22.898 18.539 22.277 17.648
 21.602 16.801 c 21.543 16.73 l 21.539 16.727 l 20.73 15.691 19.988 14.602
 19.32 13.469 c 18.504 12.117 18.047 10.578 18 9 c 18 7.871 18.391 6.793
 18.715 6.035 c 19.07 5.207 19.52 4.391 19.926 3.707 c 20.402 2.926 20.91
 2.16 21.445 1.414 c 21.594 1.203 l 21.594 1.207 l 22.586 -0.121 24.469 
-0.391 25.793 0.602 c 27.121 1.594 27.391 3.473 26.398 4.801 c 44.398 4.801
 m 44.379 4.824 l 44.293 4.938 l 44.297 4.938 l 43.863 5.539 43.453 6.16
 43.074 6.797 c 42.754 7.309 42.469 7.844 42.227 8.398 c 42.07 8.758 42.023
 8.949 42.004 9.016 c 42.004 9.039 l 42.008 9.043 l 42.074 9.574 42.262 
10.082 42.551 10.531 c 43 11.328 43.617 12.164 44.398 13.203 c 44.457 13.273
 l 45.164 14.223 46.016 15.355 46.676 16.531 c 47.348 17.73 47.996 19.262
 47.996 21 c 47.996 22.129 47.605 23.207 47.281 23.965 c 47.285 23.965 l
 46.938 24.77 46.535 25.547 46.074 26.293 c 45.602 27.078 45.098 27.844 
44.555 28.586 c 44.445 28.734 l 44.414 28.781 l 44.402 28.793 l 44.406 28.793
 l 43.414 30.121 41.531 30.391 40.207 29.398 c 38.879 28.406 38.609 26.527
 39.602 25.199 c 39.621 25.176 l 39.707 25.062 l 39.703 25.062 l 40.137 
24.461 40.547 23.84 40.926 23.203 c 41.246 22.691 41.531 22.156 41.773 21.602
 c 41.93 21.242 41.977 21.051 41.996 20.984 c 41.992 20.98 l 41.93 20.445
 41.746 19.926 41.453 19.469 c 40.898 18.539 40.277 17.648 39.602 16.801
 c 39.543 16.73 l 39.539 16.727 l 38.73 15.691 37.988 14.602 37.32 13.469
 c 36.504 12.117 36.047 10.578 36 9 c 36 7.871 36.391 6.793 36.715 6.035
 c 37.07 5.207 37.52 4.391 37.926 3.707 c 38.402 2.926 38.91 2.16 39.445
 1.414 c 39.594 1.203 l 39.594 1.207 l 40.586 -0.121 42.469 -0.391 43.793
 0.602 c 45.121 1.594 45.391 3.473 44.398 4.801 c 62.398 4.801 m 62.379 
4.824 l 62.293 4.938 l 62.297 4.938 l 61.863 5.539 61.453 6.16 61.074 6.797
 c 60.754 7.309 60.469 7.844 60.227 8.398 c 60.07 8.758 60.023 8.949 60.004
 9.016 c 60.004 9.039 l 60.008 9.043 l 60.074 9.574 60.262 10.082 60.551
 10.531 c 61 11.328 61.617 12.164 62.398 13.203 c 62.457 13.273 l 63.164
 14.223 64.016 15.355 64.676 16.531 c 65.348 17.73 65.996 19.262 65.996 
21 c 65.996 22.129 65.605 23.207 65.281 23.965 c 65.285 23.965 l 64.938 
24.77 64.535 25.547 64.074 26.293 c 63.605 27.078 63.102 27.844 62.562 28.586
 c 62.449 28.734 l 62.418 28.781 l 62.406 28.793 l 61.414 30.121 59.531 
30.391 58.207 29.398 c 56.879 28.406 56.609 26.527 57.602 25.199 c 57.621
 25.176 l 57.707 25.062 l 57.703 25.062 l 58.137 24.461 58.547 23.84 58.926
 23.203 c 59.246 22.691 59.531 22.156 59.773 21.602 c 59.93 21.242 59.977
 21.051 59.996 20.984 c 59.992 20.98 l 59.93 20.445 59.746 19.926 59.453
 19.469 c 58.898 18.539 58.277 17.648 57.602 16.801 c 57.543 16.73 l 57.539
 16.727 l 56.73 15.691 55.988 14.602 55.32 13.469 c 54.504 12.117 54.047
 10.578 54 9 c 54 7.871 54.391 6.793 54.715 6.035 c 55.07 5.207 55.52 4.391
 55.926 3.707 c 56.402 2.926 56.91 2.16 57.445 1.414 c 57.594 1.203 l 57.594
 1.207 l 58.586 -0.121 60.469 -0.391 61.793 0.602 c 63.121 1.594 63.391 
3.473 62.398 4.801 c f
Q Q
showpage
%%Trailer
%%EOF
