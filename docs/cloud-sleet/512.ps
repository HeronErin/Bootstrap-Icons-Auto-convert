%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
321.719 96.648 m 315.031 62.926 294.203 33.691 264.512 16.355 c 234.824
 -0.98 199.129 -4.754 166.473 5.992 c 133.816 16.738 107.336 40.973 93.742
 72.551 c 70.793 69.906 47.766 76.832 30.082 91.699 c 12.398 106.562 1.613
 128.059 0.273 151.121 c -1.07 174.184 7.148 196.781 22.988 213.598 c 38.828
 230.414 60.898 239.965 84 240 c 312 240 l 336.586 240.027 359.484 227.512
 372.734 206.801 c 385.98 186.09 387.746 160.051 377.414 137.742 c 367.086
 115.434 346.082 99.938 321.719 96.648 c 204 24 m 227.613 23.996 250.402
 32.695 268.008 48.434 c 285.613 64.176 296.797 85.852 299.426 109.32 c 
300.102 115.426 305.281 120.039 311.426 120 c 312 120 l 329.148 120 344.996
 129.148 353.57 144 c 362.145 158.852 362.145 177.148 353.57 192 c 344.996
 206.852 329.148 216 312 216 c 84 216 l 66.816 215.992 50.465 208.617 39.082
 195.746 c 27.699 182.875 22.383 165.738 24.477 148.688 c 26.57 131.633 
35.879 116.293 50.035 106.559 c 64.195 96.824 81.848 93.625 98.52 97.777
 c 104.621 99.297 110.859 95.852 112.824 89.879 c 119.16 70.703 131.383 
54.016 147.754 42.188 c 164.121 30.359 183.805 23.996 204 24 c 57 324 m 
58.59 324 60.117 324.633 61.242 325.758 c 62.367 326.883 63 328.41 63 330
 c 63 343.68 l 75.023 336.793 l 77.891 335.242 81.469 336.266 83.086 339.094
 c 84.703 341.922 83.766 345.523 80.977 347.207 c 69.098 354 l 80.977 360.793
 l 83.766 362.477 84.703 366.078 83.086 368.906 c 81.469 371.734 77.891 
372.758 75.023 371.207 c 63 364.344 l 63 378 l 63 381.312 60.312 384 57 
384 c 53.688 384 51 381.312 51 378 c 51 364.32 l 38.977 371.207 l 36.109
 372.758 32.531 371.734 30.914 368.906 c 29.297 366.078 30.234 362.477 33.023
 360.793 c 44.902 354 l 33.023 347.207 l 30.234 345.523 29.297 341.922 30.914
 339.094 c 32.531 336.266 36.109 335.242 38.977 336.793 c 51 343.656 l 51
 330 l 51 326.688 53.688 324 57 324 c 101.375 265.273 m 107.285 268.242 
109.68 275.434 106.727 281.352 c 94.727 305.352 l 93.367 308.301 90.867 
310.57 87.805 311.645 c 84.742 312.719 81.371 312.504 78.469 311.055 c 75.562
 309.602 73.371 307.035 72.395 303.938 c 71.414 300.844 71.73 297.48 73.273
 294.625 c 85.273 270.625 l 88.242 264.715 95.434 262.32 101.352 265.273
 c h
153 324 m 154.59 324 156.117 324.633 157.242 325.758 c 158.367 326.883 
159 328.41 159 330 c 159 343.68 l 171.023 336.793 l 173.891 335.242 177.469
 336.266 179.086 339.094 c 180.703 341.922 179.766 345.523 176.977 347.207
 c 165.098 354 l 176.977 360.793 l 179.766 362.477 180.703 366.078 179.086
 368.906 c 177.469 371.734 173.891 372.758 171.023 371.207 c 159 364.344
 l 159 378 l 159 381.312 156.312 384 153 384 c 149.688 384 147 381.312 147
 378 c 147 364.32 l 134.977 371.207 l 132.109 372.758 128.531 371.734 126.914
 368.906 c 125.297 366.078 126.234 362.477 129.023 360.793 c 140.902 354
 l 129.023 347.207 l 126.234 345.523 125.297 341.922 126.914 339.094 c 128.531
 336.266 132.109 335.242 134.977 336.793 c 147 343.656 l 147 330 l 147 326.688
 149.688 324 153 324 c 197.375 265.273 m 203.285 268.242 205.68 275.434 
202.727 281.352 c 190.727 305.352 l 189.367 308.301 186.867 310.57 183.805
 311.645 c 180.742 312.719 177.371 312.504 174.469 311.055 c 171.562 309.602
 169.371 307.035 168.395 303.938 c 167.414 300.844 167.73 297.48 169.273
 294.625 c 181.273 270.625 l 184.242 264.715 191.434 262.32 197.352 265.273
 c h
249 324 m 250.59 324 252.117 324.633 253.242 325.758 c 254.367 326.883 
255 328.41 255 330 c 255 343.68 l 267.023 336.793 l 269.891 335.242 273.469
 336.266 275.086 339.094 c 276.703 341.922 275.766 345.523 272.977 347.207
 c 261.098 354 l 272.977 360.793 l 275.766 362.477 276.703 366.078 275.086
 368.906 c 273.469 371.734 269.891 372.758 267.023 371.207 c 255 364.344
 l 255 378 l 255 381.312 252.312 384 249 384 c 245.688 384 243 381.312 243
 378 c 243 364.32 l 230.977 371.207 l 228.109 372.758 224.531 371.734 222.914
 368.906 c 221.297 366.078 222.234 362.477 225.023 360.793 c 236.902 354
 l 225.023 347.207 l 222.234 345.523 221.297 341.922 222.914 339.094 c 224.531
 336.266 228.109 335.242 230.977 336.793 c 243 343.656 l 243 330 l 243 326.688
 245.688 324 249 324 c 293.375 265.273 m 299.285 268.242 301.68 275.434 
298.727 281.352 c 286.727 305.352 l 285.367 308.301 282.867 310.57 279.805
 311.645 c 276.742 312.719 273.371 312.504 270.469 311.055 c 267.562 309.602
 265.371 307.035 264.395 303.938 c 263.414 300.844 263.73 297.48 265.273
 294.625 c 277.273 270.625 l 280.242 264.715 287.434 262.32 293.352 265.273
 c h
293.375 265.273 m f
Q Q
showpage
%%Trailer
%%EOF
