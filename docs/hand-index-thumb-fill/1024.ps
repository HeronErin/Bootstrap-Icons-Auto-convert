%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 41 0 761 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 41 0 761 768
768 768 cairo_set_page_size
%%EndPageSetup
q 41 0 720 768 rectclip
1 0 0 -1 0 768 cm q
0 g
408 84 m 408 214.367 l 410.258 214.27 l 425.234 213.695 445.875 213.5 460.707
 216.477 c 474.148 219.164 486.77 225.117 496.133 230.301 c 509.238 237.598
 518.02 248.781 523.012 261.117 c 529.348 260.543 l 544.324 259.391 567.461
 258.719 584.934 265.727 c 602.695 272.832 618.004 289.102 627.172 300.094
 c 630.789 304.477 633.906 308.445 636.531 311.996 c 664.469 311.996 l 664.465
 312 l 691.586 312 717.441 323.477 735.641 343.586 c 753.84 363.695 762.684
 390.566 759.984 417.551 c 746.93 547.871 l 744.582 571.348 737.32 594.062
 725.617 614.543 c 658.656 731.711 l 652.359 742.73 643.266 751.891 632.289
 758.266 c 621.316 764.637 608.852 767.996 596.16 768 c 293.664 768 l 280.285
 768 267.172 764.273 255.793 757.234 c 244.418 750.199 235.223 740.129 229.246
 728.16 c 170.926 611.52 l 51.359 412.273 l 39.152 391.781 37.758 366.613
 47.617 344.895 c 57.48 323.18 77.355 307.672 100.816 303.379 c 124.277 
299.086 148.352 306.559 165.266 323.375 c 240 398.062 l 240 84 l 240 53.988
 256.012 26.258 282 11.254 c 307.988 -3.75 340.012 -3.75 366 11.254 c 391.988
 26.258 408 53.988 408 84 c f
Q Q
showpage
%%Trailer
%%EOF
