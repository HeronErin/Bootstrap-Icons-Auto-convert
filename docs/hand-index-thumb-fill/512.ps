%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 20 0 381 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 20 0 381 384
384 384 cairo_set_page_size
%%EndPageSetup
q 20 0 361 384 rectclip
1 0 0 -1 0 384 cm q
0 g
204 42 m 204 107.184 l 205.129 107.137 l 212.617 106.848 222.938 106.754
 230.352 108.242 c 237.07 109.586 243.383 112.562 248.062 115.152 c 254.613
 118.801 259.008 124.391 261.504 130.559 c 264.672 130.27 l 272.16 129.695
 283.727 129.359 292.465 132.863 c 301.344 136.414 309 144.551 313.586 150.047
 c 315.395 152.238 316.953 154.223 318.266 156 c 332.234 156 l 332.23 156
 l 345.793 156 358.723 161.738 367.82 171.793 c 376.918 181.848 381.34 195.281
 379.992 208.777 c 373.465 273.938 l 372.293 285.672 368.66 297.031 362.809
 307.273 c 329.328 365.859 l 329.328 365.855 l 326.18 371.367 321.633 375.945
 316.145 379.133 c 310.656 382.32 304.426 383.996 298.078 384 c 146.832 
384 l 140.145 384 133.586 382.137 127.898 378.617 c 122.207 375.098 117.613
 370.066 114.625 364.078 c 85.465 305.758 l 25.68 206.137 l 19.578 195.891
 18.879 183.305 23.809 172.449 c 28.742 161.59 38.676 153.836 50.406 151.691
 c 62.137 149.543 74.176 153.277 82.633 161.688 c 120 199.031 l 120 42 l
 120 26.996 128.004 13.129 141 5.625 c 153.996 -1.875 170.004 -1.875 183
 5.625 c 195.996 13.129 204 26.996 204 42 c f
Q Q
showpage
%%Trailer
%%EOF
