%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 576
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 576
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
552 192 m 558.363 192 564.469 194.527 568.969 199.031 c 573.473 203.531
 576 209.637 576 216 c 576 240 l 624.961 240 l 646.812 240.02 667.469 249.961
 681.121 267.023 c 752.211 355.824 l 752.207 355.824 l 762.438 368.602 768.008
 384.48 768 400.848 c 768 504 l 768 523.094 760.414 541.41 746.91 554.91
 c 733.41 568.414 715.094 576 696 576 c 672 576 l 672 610.297 653.703 641.988
 624 659.137 c 594.297 676.289 557.703 676.289 528 659.137 c 498.297 641.988
 480 610.297 480 576 c 240 576 l 240 610.297 221.703 641.988 192 659.137
 c 162.297 676.289 125.703 676.289 96 659.137 c 66.297 641.988 48 610.297
 48 576 c 35.27 576 23.062 570.941 14.059 561.941 c 5.059 552.938 0 540.73
 0 528 c 0 480 l 528 480 l 528 216 l 528 209.637 530.527 203.531 535.031
 199.031 c 539.531 194.527 545.637 192 552 192 c 144 528 m 126.852 528 111.004
 537.148 102.43 552 c 93.855 566.852 93.855 585.148 102.43 600 c 111.004
 614.852 126.852 624 144 624 c 161.148 624 176.996 614.852 185.57 600 c 
194.145 585.148 194.145 566.852 185.57 552 c 176.996 537.148 161.148 528
 144 528 c 576 528 m 558.852 528 543.004 537.148 534.43 552 c 525.855 566.852
 525.855 585.148 534.43 600 c 543.004 614.852 558.852 624 576 624 c 593.148
 624 608.996 614.852 617.57 600 c 626.145 585.148 626.145 566.852 617.57
 552 c 608.996 537.148 593.148 528 576 528 c 659.137 528 m 696 528 l 702.363
 528 708.469 525.473 712.969 520.969 c 717.473 516.469 720 510.363 720 504
 c 720 400.801 l 719.992 395.352 718.129 390.074 714.719 385.824 c 643.68
 297.023 l 639.133 291.332 632.246 288.012 624.961 288 c 576 288 l 576 480
 l 610.297 480 641.988 498.297 659.137 528 c f
Q Q
showpage
%%Trailer
%%EOF
