%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 377
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 377
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 377 rectclip
1 0 0 -1 0 384 cm q
0 g
192 120 m 166.277 120 142.508 133.723 129.645 156 c 116.785 178.277 116.785
 205.723 129.645 228 c 142.508 250.277 166.277 264 192 264 c 217.723 264
 241.492 250.277 254.355 228 c 267.215 205.723 267.215 178.277 254.355 156
 c 241.492 133.723 217.723 120 192 120 c 144 192 m 144 174.852 153.148 159.004
 168 150.43 c 182.852 141.855 201.148 141.855 216 150.43 c 230.852 159.004
 240 174.852 240 192 c 240 209.148 230.852 224.996 216 233.57 c 201.148 
242.145 182.852 242.145 168 233.57 c 153.148 224.996 144 209.148 144 192
 c 132 288 m 125.371 288 120 293.371 120 300 c 120 306.629 125.371 312 132
 312 c 252 312 l 258.629 312 264 306.629 264 300 c 264 293.371 258.629 288
 252 288 c h
132 288 m f
77.566 42.625 m 69.27 44.129 61.766 48.504 56.363 54.977 c 50.957 61.449
 48 69.617 48 78.047 c 48 340.848 l 48 351.527 52.586 360.961 59.762 367.488
 c 68.57 377.617 81.555 384 96 384 c 288 384 l 300.73 384 312.938 378.941
 321.941 369.941 c 330.941 360.938 336 348.73 336 336 c 336 96 l 336 78.852
 326.852 63.008 312 54.434 c 312 43.152 l 312.008 32.473 307.273 22.344 
299.082 15.496 c 290.887 8.652 280.074 5.797 269.566 7.703 c 77.566 42.598
 l h
96 72 m 288 72 l 294.363 72 300.469 74.527 304.969 79.031 c 309.473 83.531
 312 89.637 312 96 c 312 336 l 312 342.363 309.473 348.469 304.969 352.969
 c 300.469 357.473 294.363 360 288 360 c 96 360 l 89.637 360 83.531 357.473
 79.031 352.969 c 74.527 348.469 72 342.363 72 336 c 72 96 l 72 89.637 74.527
 83.531 79.031 79.031 c 83.531 74.527 89.637 72 96 72 c f
Q Q
showpage
%%Trailer
%%EOF
