%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 189
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 189
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 189 rectclip
1 0 0 -1 0 192 cm q
0 g
96 60 m 83.137 60 71.254 66.863 64.824 78 c 58.391 89.137 58.391 102.863
 64.824 114 c 71.254 125.137 83.137 132 96 132 c 108.863 132 120.746 125.137
 127.176 114 c 133.609 102.863 133.609 89.137 127.176 78 c 120.746 66.863
 108.863 60 96 60 c 72 96 m 72 87.426 76.574 79.504 84 75.215 c 91.426 70.93
 100.574 70.93 108 75.215 c 115.426 79.504 120 87.426 120 96 c 120 104.574
 115.426 112.496 108 116.785 c 100.574 121.07 91.426 121.07 84 116.785 c
 76.574 112.496 72 104.574 72 96 c 66 144 m 62.688 144 60 146.688 60 150
 c 60 153.312 62.688 156 66 156 c 126 156 l 129.312 156 132 153.312 132 
150 c 132 146.688 129.312 144 126 144 c h
66 144 m f
38.785 21.312 m 34.637 22.066 30.883 24.25 28.18 27.488 c 25.48 30.727 
24 34.809 24 39.023 c 24 170.422 l 24 175.762 26.293 180.477 29.879 183.742
 c 34.281 188.805 40.773 192 48 192 c 144 192 l 150.363 192 156.469 189.473
 160.969 184.969 c 165.473 180.469 168 174.363 168 168 c 168 48 l 168 39.426
 163.426 31.504 156 27.215 c 156 21.574 l 156.004 16.238 153.637 11.172 
149.539 7.75 c 145.441 4.324 140.039 2.898 134.785 3.852 c 38.785 21.301
 l h
48 36 m 144 36 l 147.184 36 150.234 37.266 152.484 39.516 c 154.734 41.766
 156 44.816 156 48 c 156 168 l 156 171.184 154.734 174.234 152.484 176.484
 c 150.234 178.734 147.184 180 144 180 c 48 180 l 41.371 180 36 174.629 
36 168 c 36 48 l 36 41.371 41.371 36 48 36 c f
Q Q
showpage
%%Trailer
%%EOF
