%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 754
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 754
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 754 rectclip
1 0 0 -1 0 768 cm q
0 g
384 240 m 332.555 240 285.016 267.445 259.293 312 c 233.57 356.555 233.57
 411.445 259.293 456 c 285.016 500.555 332.555 528 384 528 c 435.445 528
 482.984 500.555 508.707 456 c 534.43 411.445 534.43 356.555 508.707 312
 c 482.984 267.445 435.445 240 384 240 c 288 384 m 288 349.703 306.297 318.012
 336 300.863 c 365.703 283.711 402.297 283.711 432 300.863 c 461.703 318.012
 480 349.703 480 384 c 480 418.297 461.703 449.988 432 467.137 c 402.297
 484.289 365.703 484.289 336 467.137 c 306.297 449.988 288 418.297 288 384
 c 264 576 m 255.426 576 247.504 580.574 243.215 588 c 238.93 595.426 238.93
 604.574 243.215 612 c 247.504 619.426 255.426 624 264 624 c 504 624 l 512.574
 624 520.496 619.426 524.785 612 c 529.07 604.574 529.07 595.426 524.785
 588 c 520.496 580.574 512.574 576 504 576 c h
264 576 m f
155.137 85.246 m 138.543 88.262 123.531 97.004 112.727 109.953 c 101.918
 122.898 96 139.23 96 156.098 c 96 681.699 l 96 703.059 105.168 721.922 
119.52 734.98 c 137.137 755.238 163.105 768.004 192 768.004 c 576 768.004
 l 576 768 l 601.461 768 625.879 757.887 643.883 739.883 c 661.887 721.879
 672 697.461 672 672 c 672 192 l 672 157.703 653.703 126.012 624 108.863
 c 624 86.305 l 624.016 64.949 614.551 44.688 598.16 30.992 c 581.77 17.301
 560.148 11.594 539.137 15.406 c 155.137 85.199 l h
192 144 m 576 144 l 588.73 144 600.938 149.059 609.941 158.059 c 618.941
 167.062 624 179.27 624 192 c 624 672 l 624 684.73 618.941 696.938 609.941
 705.941 c 600.938 714.941 588.73 720 576 720 c 192 720 l 179.27 720 167.062
 714.941 158.059 705.941 c 149.059 696.938 144 684.73 144 672 c 144 192 
l 144 179.27 149.059 167.062 158.059 158.059 c 167.062 149.059 179.27 144
 192 144 c f
Q Q
showpage
%%Trailer
%%EOF
