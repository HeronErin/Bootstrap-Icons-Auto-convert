%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 15 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 15 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 15 0 81 96 rectclip
1 0 0 -1 0 96 cm q
0 g
40.5 6 m 42.984 6 45 8.016 45 10.5 c 45 48 l 45 49.656 46.344 51 48 51 
c 49.656 51 51 49.656 51 48 c 51 32.801 l 51.516 32.777 l 53.418 32.707 
55.336 32.73 56.41 32.938 c 57.215 33.098 58.176 33.512 59.098 34.031 c 
59.559 34.285 59.996 34.914 59.996 35.914 c 60 48 l 60 49.656 61.344 51 
63 51 c 64.656 51 66 49.656 66 48 c 66 38.609 l 66.637 38.551 l 68.531 38.406
 70.141 38.492 70.883 38.789 c 71.59 39.066 72.684 40.031 73.797 41.367 
c 74.281 41.941 74.695 42.508 74.996 42.922 c 75 51 l 75 52.656 76.344 54
 78 54 c 79.656 54 81 52.656 81 51 c 81 45 l 83.051 45 l 84.746 45 86.363
 45.719 87.5 46.977 c 88.641 48.234 89.191 49.914 89.023 51.602 c 87.398
 67.891 l 87.395 67.891 l 87.188 69.984 86.539 72.008 85.492 73.836 c 77.121
 88.488 l 77.125 88.488 l 76.59 89.422 75.598 90 74.52 90 c 36.211 90 l 
35.207 90 34.27 89.496 33.715 88.66 c 25.117 75.762 l 24.316 74.566 23.816
 73.195 23.656 71.766 c 21.586 53.137 l 21.59 53.137 l 21.414 51.59 22.453
 50.164 23.98 49.859 c 30 48.66 l 30 54 l 30 55.656 31.344 57 33 57 c 34.656
 57 36 55.656 36 54 c 36 10.5 l 36 8.016 38.016 6 40.5 6 c 51 26.797 m 51
 10.5 l 51 4.699 46.301 0 40.5 0 c 34.699 0 30 4.699 30 10.5 c 30 42.539
 l 22.801 43.98 l 18.227 44.898 15.109 49.16 15.625 53.797 c 17.695 72.434
 l 17.961 74.812 18.793 77.098 20.125 79.094 c 28.723 91.992 l 30.391 94.496
 33.199 96 36.211 96 c 74.52 96 l 77.75 96 80.73 94.27 82.332 91.465 c 90.703
 76.82 l 90.703 76.816 l 92.164 74.258 93.074 71.418 93.367 68.484 c 94.992
 52.195 l 95.328 48.82 94.223 45.461 91.949 42.949 c 89.676 40.434 86.441
 39 83.051 39 c 79.566 39 l 79.191 38.492 78.801 37.996 78.395 37.512 c 
77.25 36.137 75.336 34.105 73.113 33.215 c 70.93 32.34 68.039 32.422 66.164
 32.566 c 65.371 32.637 l 65.375 32.641 l 64.738 31.004 63.551 29.645 62.016
 28.789 c 60.637 27.988 59.145 27.406 57.59 27.059 c 55.73 26.688 53.156
 26.711 51.289 26.781 c h
63.562 38.945 m f
Q Q
showpage
%%Trailer
%%EOF
