%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
30 24 18 18 re f
6 12 m 6 5.371 11.371 0 18 0 c 84 0 l 87.184 0 90.234 1.266 92.484 3.516
 c 94.734 5.766 96 8.816 96 12 c 96 78 l 96 81.184 94.734 84.234 92.484 
86.484 c 90.234 88.734 87.184 90 84 90 c 18 90 l 11.371 90 6 84.629 6 78
 c 6 66 l 3 66 l 1.344 66 0 64.656 0 63 c 0 57 l 0 55.344 1.344 54 3 54 
c 6 54 l 6 48 l 3 48 l 1.344 48 0 46.656 0 45 c 0 39 l 0 37.344 1.344 36
 3 36 c 6 36 l 6 30 l 3 30 l 1.344 30 0 28.656 0 27 c 0 15 l 0 13.344 1.344
 12 3 12 c h
72 15 m 72 13.344 70.656 12 69 12 c 67.344 12 66 13.344 66 15 c 66 57 l
 66 58.656 67.344 60 69 60 c 70.656 60 72 58.656 72 57 c h
84 15 m 84 13.344 82.656 12 81 12 c 79.344 12 78 13.344 78 15 c 78 57 l
 78 58.656 79.344 60 81 60 c 82.656 60 84 58.656 84 57 c h
21 60 m 19.344 60 18 61.344 18 63 c 18 64.656 19.344 66 21 66 c 57 66 l
 58.656 66 60 64.656 60 63 c 60 61.344 58.656 60 57 60 c h
21 72 m 19.344 72 18 73.344 18 75 c 18 76.656 19.344 78 21 78 c 57 78 l
 58.656 78 60 76.656 60 75 c 60 73.344 58.656 72 57 72 c h
24 24 m 21 24 l 19.344 24 18 25.344 18 27 c 18 28.656 19.344 30 21 30 c
 24 30 l 24 36 l 21 36 l 19.344 36 18 37.344 18 39 c 18 40.656 19.344 42
 21 42 c 24 42 l 24 43.59 24.633 45.117 25.758 46.242 c 26.883 47.367 28.41
 48 30 48 c 30 51 l 30 52.656 31.344 54 33 54 c 34.656 54 36 52.656 36 51
 c 36 48 l 42 48 l 42 51 l 42 52.656 43.344 54 45 54 c 46.656 54 48 52.656
 48 51 c 48 48 l 49.59 48 51.117 47.367 52.242 46.242 c 53.367 45.117 54
 43.59 54 42 c 57 42 l 58.656 42 60 40.656 60 39 c 60 37.344 58.656 36 57
 36 c 54 36 l 54 30 l 57 30 l 58.656 30 60 28.656 60 27 c 60 25.344 58.656
 24 57 24 c 54 24 l 54 22.41 53.367 20.883 52.242 19.758 c 51.117 18.633
 49.59 18 48 18 c 48 15 l 48 13.344 46.656 12 45 12 c 43.344 12 42 13.344
 42 15 c 42 18 l 36 18 l 36 15 l 36 13.344 34.656 12 33 12 c 31.344 12 30
 13.344 30 15 c 30 18 l 26.688 18 24 20.688 24 24 c 66 69 m 66 75 l 66 75.797
 66.316 76.559 66.879 77.121 c 67.441 77.684 68.203 78 69 78 c 81 78 l 81.797
 78 82.559 77.684 83.121 77.121 c 83.684 76.559 84 75.797 84 75 c 84 69 
l 84 68.203 83.684 67.441 83.121 66.879 c 82.559 66.316 81.797 66 81 66 
c 69 66 l 67.344 66 66 67.344 66 69 c f
Q Q
showpage
%%Trailer
%%EOF
