%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 384 288 288 re f
96 192 m 96 141.078 116.227 92.242 152.234 56.234 c 188.242 20.227 237.078
 0 288 0 c 1344 0 l 1377.703 0 1410.812 8.871 1440 25.723 c 1469.188 42.574
 1493.426 66.812 1510.277 96 c 1527.129 125.188 1536 158.297 1536 192 c 
1536 1248 l 1536 1281.703 1527.129 1314.812 1510.277 1344 c 1493.426 1373.188
 1469.188 1397.426 1440 1414.277 c 1410.812 1431.129 1377.703 1440 1344 
1440 c 288 1440 l 237.078 1440 188.242 1419.773 152.234 1383.766 c 116.227
 1347.758 96 1298.922 96 1248 c 96 1056 l 48 1056 l 35.27 1056 23.062 1050.941
 14.059 1041.941 c 5.059 1032.938 0 1020.73 0 1008 c 0 912 l 0 899.27 5.059
 887.062 14.059 878.059 c 23.062 869.059 35.27 864 48 864 c 96 864 l 96 
768 l 48 768 l 35.27 768 23.062 762.941 14.059 753.941 c 5.059 744.938 0
 732.73 0 720 c 0 624 l 0 611.27 5.059 599.062 14.059 590.059 c 23.062 581.059
 35.27 576 48 576 c 96 576 l 96 480 l 48 480 l 35.27 480 23.062 474.941 
14.059 465.941 c 5.059 456.938 0 444.73 0 432 c 0 240 l 0 227.27 5.059 215.062
 14.059 206.059 c 23.062 197.059 35.27 192 48 192 c h
1152 240 m 1152 222.852 1142.852 207.004 1128 198.43 c 1113.148 189.855
 1094.852 189.855 1080 198.43 c 1065.148 207.004 1056 222.852 1056 240 c
 1056 912 l 1056 929.148 1065.148 944.996 1080 953.57 c 1094.852 962.145
 1113.148 962.145 1128 953.57 c 1142.852 944.996 1152 929.148 1152 912 c
 h
1344 240 m 1344 222.852 1334.852 207.004 1320 198.43 c 1305.148 189.855
 1286.852 189.855 1272 198.43 c 1257.148 207.004 1248 222.852 1248 240 c
 1248 912 l 1248 929.148 1257.148 944.996 1272 953.57 c 1286.852 962.145
 1305.148 962.145 1320 953.57 c 1334.852 944.996 1344 929.148 1344 912 c
 h
336 960 m 318.852 960 303.004 969.148 294.43 984 c 285.855 998.852 285.855
 1017.148 294.43 1032 c 303.004 1046.852 318.852 1056 336 1056 c 912 1056
 l 929.148 1056 944.996 1046.852 953.57 1032 c 962.145 1017.148 962.145 
998.852 953.57 984 c 944.996 969.148 929.148 960 912 960 c h
336 1152 m 318.852 1152 303.004 1161.148 294.43 1176 c 285.855 1190.852
 285.855 1209.148 294.43 1224 c 303.004 1238.852 318.852 1248 336 1248 c
 912 1248 l 929.148 1248 944.996 1238.852 953.57 1224 c 962.145 1209.148
 962.145 1190.852 953.57 1176 c 944.996 1161.148 929.148 1152 912 1152 c
 h
384 384 m 336 384 l 318.852 384 303.004 393.148 294.43 408 c 285.855 422.852
 285.855 441.148 294.43 456 c 303.004 470.852 318.852 480 336 480 c 384 
480 l 384 576 l 336 576 l 318.852 576 303.004 585.148 294.43 600 c 285.855
 614.852 285.855 633.148 294.43 648 c 303.004 662.852 318.852 672 336 672
 c 384 672 l 384 697.461 394.113 721.879 412.117 739.883 c 430.121 757.887
 454.539 768 480 768 c 480 816 l 480 833.148 489.148 848.996 504 857.57 
c 518.852 866.145 537.148 866.145 552 857.57 c 566.852 848.996 576 833.148
 576 816 c 576 768 l 672 768 l 672 816 l 672 833.148 681.148 848.996 696
 857.57 c 710.852 866.145 729.148 866.145 744 857.57 c 758.852 848.996 768
 833.148 768 816 c 768 768 l 793.461 768 817.879 757.887 835.883 739.883
 c 853.887 721.879 864 697.461 864 672 c 912 672 l 929.148 672 944.996 662.852
 953.57 648 c 962.145 633.148 962.145 614.852 953.57 600 c 944.996 585.148
 929.148 576 912 576 c 864 576 l 864 480 l 912 480 l 929.148 480 944.996
 470.852 953.57 456 c 962.145 441.148 962.145 422.852 953.57 408 c 944.996
 393.148 929.148 384 912 384 c 864 384 l 864 358.539 853.887 334.121 835.883
 316.117 c 817.879 298.113 793.461 288 768 288 c 768 240 l 768 222.852 758.852
 207.004 744 198.43 c 729.148 189.855 710.852 189.855 696 198.43 c 681.148
 207.004 672 222.852 672 240 c 672 288 l 576 288 l 576 240 l 576 222.852
 566.852 207.004 552 198.43 c 537.148 189.855 518.852 189.855 504 198.43
 c 489.148 207.004 480 222.852 480 240 c 480 288 l 454.539 288 430.121 298.113
 412.117 316.117 c 394.113 334.121 384 358.539 384 384 c 1056 1104 m 1056
 1200 l 1056 1212.73 1061.059 1224.938 1070.059 1233.941 c 1079.062 1242.941
 1091.27 1248 1104 1248 c 1296 1248 l 1308.73 1248 1320.938 1242.941 1329.941
 1233.941 c 1338.941 1224.938 1344 1212.73 1344 1200 c 1344 1104 l 1344 
1091.27 1338.941 1079.062 1329.941 1070.059 c 1320.938 1061.059 1308.73 
1056 1296 1056 c 1104 1056 l 1091.27 1056 1079.062 1061.059 1070.059 1070.059
 c 1061.059 1079.062 1056 1091.27 1056 1104 c f
Q Q
showpage
%%Trailer
%%EOF
