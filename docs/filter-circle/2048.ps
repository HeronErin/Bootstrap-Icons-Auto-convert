%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 1440 m 589.773 1440 418.848 1369.199 292.824 1243.176 c 166.801 1117.152
 96 946.227 96 768 c 96 589.773 166.801 418.848 292.824 292.824 c 418.848
 166.801 589.773 96 768 96 c 946.227 96 1117.152 166.801 1243.176 292.824
 c 1369.199 418.848 1440 589.773 1440 768 c 1440 946.227 1369.199 1117.152
 1243.176 1243.176 c 1117.152 1369.199 946.227 1440 768 1440 c 768 1536 
m 971.688 1536 1167.031 1455.086 1311.059 1311.059 c 1455.086 1167.031 1536
 971.688 1536 768 c 1536 564.312 1455.086 368.969 1311.059 224.941 c 1167.031
 80.914 971.688 0 768 0 c 564.312 0 368.969 80.914 224.941 224.941 c 80.914
 368.969 0 564.312 0 768 c 0 971.688 80.914 1167.031 224.941 1311.059 c 
368.969 1455.086 564.312 1536 768 1536 c f
672 1104 m 672 1091.27 677.059 1079.062 686.059 1070.059 c 695.062 1061.059
 707.27 1056 720 1056 c 816 1056 l 833.148 1056 848.996 1065.148 857.57 
1080 c 866.145 1094.852 866.145 1113.148 857.57 1128 c 848.996 1142.852 
833.148 1152 816 1152 c 720 1152 l 707.27 1152 695.062 1146.941 686.059 
1137.941 c 677.059 1128.938 672 1116.73 672 1104 c 480 816 m 480 803.27 
485.059 791.062 494.059 782.059 c 503.062 773.059 515.27 768 528 768 c 1008
 768 l 1025.148 768 1040.996 777.148 1049.57 792 c 1058.145 806.852 1058.145
 825.148 1049.57 840 c 1040.996 854.852 1025.148 864 1008 864 c 528 864 
l 515.27 864 503.062 858.941 494.059 849.941 c 485.059 840.938 480 828.73
 480 816 c 288 528 m 288 515.27 293.059 503.062 302.059 494.059 c 311.062
 485.059 323.27 480 336 480 c 1200 480 l 1217.148 480 1232.996 489.148 1241.57
 504 c 1250.145 518.852 1250.145 537.148 1241.57 552 c 1232.996 566.852 
1217.148 576 1200 576 c 336 576 l 323.27 576 311.062 570.941 302.059 561.941
 c 293.059 552.938 288 540.73 288 528 c f
Q Q
showpage
%%Trailer
%%EOF
