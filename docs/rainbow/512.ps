%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 96 384 300
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 96 384 300
384 384 cairo_set_page_size
%%EndPageSetup
q 0 96 384 204 rectclip
1 0 0 -1 0 384 cm q
0 g
192 108 m 147.445 108 104.711 125.699 73.207 157.207 c 41.699 188.711 24
 231.445 24 276 c 24 282.629 18.629 288 12 288 c 5.371 288 0 282.629 0 276
 c 0 225.078 20.227 176.242 56.234 140.234 c 92.242 104.227 141.078 84 192
 84 c 242.922 84 291.758 104.227 327.766 140.234 c 363.773 176.242 384 225.078
 384 276 c 384 282.629 378.629 288 372 288 c 365.371 288 360 282.629 360
 276 c 360 246.512 352.238 217.539 337.492 192 c 322.746 166.461 301.539
 145.254 276 130.508 c 250.461 115.762 221.488 108 192 108 c 192 156 m 160.176
 156 129.652 168.645 107.148 191.148 c 84.645 213.652 72 244.176 72 276 
c 72 282.629 66.629 288 60 288 c 53.371 288 48 282.629 48 276 c 48 224.555
 75.445 177.016 120 151.293 c 164.555 125.57 219.445 125.57 264 151.293 
c 308.555 177.016 336 224.555 336 276 c 336 282.629 330.629 288 324 288 
c 317.371 288 312 282.629 312 276 c 312 244.176 299.355 213.652 276.852 
191.148 c 254.348 168.645 223.824 156 192 156 c 192 204 m 172.906 204 154.59
 211.586 141.09 225.09 c 127.586 238.59 120 256.906 120 276 c 120 282.629
 114.629 288 108 288 c 101.371 288 96 282.629 96 276 c 96 241.703 114.297
 210.012 144 192.863 c 173.703 175.711 210.297 175.711 240 192.863 c 269.703
 210.012 288 241.703 288 276 c 288 282.629 282.629 288 276 288 c 269.371
 288 264 282.629 264 276 c 264 256.906 256.414 238.59 242.91 225.09 c 229.41
 211.586 211.094 204 192 204 c 192 252 m 185.637 252 179.531 254.527 175.031
 259.031 c 170.527 263.531 168 269.637 168 276 c 168 282.629 162.629 288
 156 288 c 149.371 288 144 282.629 144 276 c 144 258.852 153.148 243.004
 168 234.43 c 182.852 225.855 201.148 225.855 216 234.43 c 230.852 243.004
 240 258.852 240 276 c 240 282.629 234.629 288 228 288 c 221.371 288 216
 282.629 216 276 c 216 269.637 213.473 263.531 208.969 259.031 c 204.469
 254.527 198.363 252 192 252 c f
Q Q
showpage
%%Trailer
%%EOF
