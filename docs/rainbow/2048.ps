%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 384 1536 1200
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 384 1536 1200
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 384 1536 816 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 432 m 589.773 432 418.848 502.801 292.824 628.824 c 166.801 754.848
 96 925.773 96 1104 c 96 1121.148 86.852 1136.996 72 1145.57 c 57.148 1154.145
 38.852 1154.145 24 1145.57 c 9.148 1136.996 0 1121.148 0 1104 c 0 900.312
 80.914 704.969 224.941 560.941 c 368.969 416.914 564.312 336 768 336 c 
971.688 336 1167.031 416.914 1311.059 560.941 c 1455.086 704.969 1536 900.312
 1536 1104 c 1536 1121.148 1526.852 1136.996 1512 1145.57 c 1497.148 1154.145
 1478.852 1154.145 1464 1145.57 c 1449.148 1136.996 1440 1121.148 1440 1104
 c 1440 986.039 1408.949 870.156 1349.969 768 c 1290.988 665.844 1206.156
 581.012 1104 522.031 c 1001.844 463.051 885.961 432 768 432 c 768 624 m
 640.695 624 518.605 674.57 428.59 764.59 c 338.57 854.605 288 976.695 288
 1104 c 288 1121.148 278.852 1136.996 264 1145.57 c 249.148 1154.145 230.852
 1154.145 216 1145.57 c 201.148 1136.996 192 1121.148 192 1104 c 192 951.234
 252.684 804.727 360.707 696.707 c 468.727 588.684 615.234 528 768 528 c
 920.766 528 1067.273 588.684 1175.293 696.707 c 1283.316 804.727 1344 951.234
 1344 1104 c 1344 1121.148 1334.852 1136.996 1320 1145.57 c 1305.148 1154.145
 1286.852 1154.145 1272 1145.57 c 1257.148 1136.996 1248 1121.148 1248 1104
 c 1248 1019.742 1225.82 936.969 1183.691 864 c 1141.562 791.031 1080.969
 730.438 1008 688.309 c 935.031 646.18 852.258 624 768 624 c 768 816 m 691.617
 816 618.363 846.344 564.352 900.352 c 510.344 954.363 480 1027.617 480 
1104 c 480 1121.148 470.852 1136.996 456 1145.57 c 441.148 1154.145 422.852
 1154.145 408 1145.57 c 393.148 1136.996 384 1121.148 384 1104 c 384 1002.156
 424.457 904.484 496.473 832.473 c 568.484 760.457 666.156 720 768 720 c
 869.844 720 967.516 760.457 1039.527 832.473 c 1111.543 904.484 1152 1002.156
 1152 1104 c 1152 1121.148 1142.852 1136.996 1128 1145.57 c 1113.148 1154.145
 1094.852 1154.145 1080 1145.57 c 1065.148 1136.996 1056 1121.148 1056 1104
 c 1056 1027.617 1025.656 954.363 971.648 900.352 c 917.637 846.344 844.383
 816 768 816 c 768 1008 m 742.539 1008 718.121 1018.113 700.117 1036.117
 c 682.113 1054.121 672 1078.539 672 1104 c 672 1121.148 662.852 1136.996
 648 1145.57 c 633.148 1154.145 614.852 1154.145 600 1145.57 c 585.148 1136.996
 576 1121.148 576 1104 c 576 1053.078 596.227 1004.242 632.234 968.234 c
 668.242 932.227 717.078 912 768 912 c 818.922 912 867.758 932.227 903.766
 968.234 c 939.773 1004.242 960 1053.078 960 1104 c 960 1121.148 950.852
 1136.996 936 1145.57 c 921.148 1154.145 902.852 1154.145 888 1145.57 c 
873.148 1136.996 864 1121.148 864 1104 c 864 1078.539 853.887 1054.121 835.883
 1036.117 c 817.879 1018.113 793.461 1008 768 1008 c f
Q Q
showpage
%%Trailer
%%EOF
