%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 192 768 600
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 192 768 600
768 768 cairo_set_page_size
%%EndPageSetup
q 0 192 768 408 rectclip
1 0 0 -1 0 768 cm q
0 g
384 216 m 294.887 216 209.426 251.398 146.414 314.414 c 83.398 377.426 
48 462.887 48 552 c 48 560.574 43.426 568.496 36 572.785 c 28.574 577.07
 19.426 577.07 12 572.785 c 4.574 568.496 0 560.574 0 552 c 0 450.156 40.457
 352.484 112.473 280.473 c 184.484 208.457 282.156 168 384 168 c 485.844
 168 583.516 208.457 655.527 280.473 c 727.543 352.484 768 450.156 768 552
 c 768 560.574 763.426 568.496 756 572.785 c 748.574 577.07 739.426 577.07
 732 572.785 c 724.574 568.496 720 560.574 720 552 c 720 493.02 704.477 
435.078 674.984 384 c 645.496 332.922 603.078 290.504 552 261.016 c 500.922
 231.523 442.98 216 384 216 c 384 312 m 320.348 312 259.305 337.285 214.293
 382.293 c 169.285 427.305 144 488.348 144 552 c 144 560.574 139.426 568.496
 132 572.785 c 124.574 577.07 115.426 577.07 108 572.785 c 100.574 568.496
 96 560.574 96 552 c 96 475.617 126.344 402.363 180.352 348.352 c 234.363
 294.344 307.617 264 384 264 c 460.383 264 533.637 294.344 587.648 348.352
 c 641.656 402.363 672 475.617 672 552 c 672 560.574 667.426 568.496 660
 572.785 c 652.574 577.07 643.426 577.07 636 572.785 c 628.574 568.496 624
 560.574 624 552 c 624 509.871 612.91 468.484 591.848 432 c 570.781 395.516
 540.484 365.219 504 344.152 c 467.516 323.09 426.129 312 384 312 c 384 
408 m 345.809 408 309.184 423.172 282.176 450.176 c 255.172 477.184 240 
513.809 240 552 c 240 560.574 235.426 568.496 228 572.785 c 220.574 577.07
 211.426 577.07 204 572.785 c 196.574 568.496 192 560.574 192 552 c 192 
501.078 212.227 452.242 248.234 416.234 c 284.242 380.227 333.078 360 384
 360 c 434.922 360 483.758 380.227 519.766 416.234 c 555.773 452.242 576
 501.078 576 552 c 576 560.574 571.426 568.496 564 572.785 c 556.574 577.07
 547.426 577.07 540 572.785 c 532.574 568.496 528 560.574 528 552 c 528 
513.809 512.828 477.184 485.824 450.176 c 458.816 423.172 422.191 408 384
 408 c 384 504 m 371.27 504 359.062 509.059 350.059 518.059 c 341.059 527.062
 336 539.27 336 552 c 336 560.574 331.426 568.496 324 572.785 c 316.574 
577.07 307.426 577.07 300 572.785 c 292.574 568.496 288 560.574 288 552 
c 288 517.703 306.297 486.012 336 468.863 c 365.703 451.711 402.297 451.711
 432 468.863 c 461.703 486.012 480 517.703 480 552 c 480 560.574 475.426
 568.496 468 572.785 c 460.574 577.07 451.426 577.07 444 572.785 c 436.574
 568.496 432 560.574 432 552 c 432 539.27 426.941 527.062 417.941 518.059
 c 408.938 509.059 396.73 504 384 504 c f
Q Q
showpage
%%Trailer
%%EOF
