%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
528 288 96 96 re f
0 192 m 0 166.539 10.113 142.121 28.117 124.117 c 46.121 106.113 70.539
 96 96 96 c 672 96 l 697.461 96 721.879 106.113 739.883 124.117 c 757.887
 142.121 768 166.539 768 192 c 768 576 l 768 601.461 757.887 625.879 739.883
 643.883 c 721.879 661.887 697.461 672 672 672 c 96 672 l 70.539 672 46.121
 661.887 28.117 643.883 c 10.113 625.879 0 601.461 0 576 c h
408 216 m 408 207.426 403.426 199.504 396 195.215 c 388.574 190.93 379.426
 190.93 372 195.215 c 364.574 199.504 360 207.426 360 216 c 360 552 l 360
 560.574 364.574 568.496 372 572.785 c 379.426 577.07 388.574 577.07 396
 572.785 c 403.426 568.496 408 560.574 408 552 c h
96 264 m 96 270.363 98.527 276.469 103.031 280.969 c 107.531 285.473 113.637
 288 120 288 c 288 288 l 296.574 288 304.496 283.426 308.785 276 c 313.07
 268.574 313.07 259.426 308.785 252 c 304.496 244.574 296.574 240 288 240
 c 120 240 l 113.637 240 107.531 242.527 103.031 247.031 c 98.527 251.531
 96 257.637 96 264 c 120 336 m 111.426 336 103.504 340.574 99.215 348 c 
94.93 355.426 94.93 364.574 99.215 372 c 103.504 379.426 111.426 384 120
 384 c 288 384 l 296.574 384 304.496 379.426 308.785 372 c 313.07 364.574
 313.07 355.426 308.785 348 c 304.496 340.574 296.574 336 288 336 c h
96 456 m 96 462.363 98.527 468.469 103.031 472.969 c 107.531 477.473 113.637
 480 120 480 c 288 480 l 296.574 480 304.496 475.426 308.785 468 c 313.07
 460.574 313.07 451.426 308.785 444 c 304.496 436.574 296.574 432 288 432
 c 120 432 l 113.637 432 107.531 434.527 103.031 439.031 c 98.527 443.531
 96 449.637 96 456 c 480 264 m 480 408 l 480 414.363 482.527 420.469 487.031
 424.969 c 491.531 429.473 497.637 432 504 432 c 648 432 l 654.363 432 660.469
 429.473 664.969 424.969 c 669.473 420.469 672 414.363 672 408 c 672 264
 l 672 257.637 669.473 251.531 664.969 247.031 c 660.469 242.527 654.363
 240 648 240 c 504 240 l 497.637 240 491.531 242.527 487.031 247.031 c 482.527
 251.531 480 257.637 480 264 c f
Q Q
showpage
%%Trailer
%%EOF
