%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 0 624 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 0 624 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 0 480 768 rectclip
1 0 0 -1 0 768 cm q
0 g
192 192 m 192.004 142.469 211.152 94.855 245.441 59.109 c 279.727 23.363
 326.504 2.25 375.992 0.184 c 425.484 -1.879 473.855 15.258 511.004 48.023
 c 548.152 80.789 571.199 126.641 575.332 176 c 579.461 225.359 564.359 
274.406 533.176 312.891 c 501.992 351.375 457.145 376.32 408 382.512 c 408
 648 l 408 656.574 403.426 664.496 396 668.785 c 388.574 673.07 379.426 
673.07 372 668.785 c 364.574 664.496 360 656.574 360 648 c 360 382.559 l
 313.582 376.711 270.898 354.117 239.961 319.02 c 209.027 283.922 191.973
 238.738 192 191.953 c h
311.664 603.551 m 312.703 609.828 311.211 616.262 307.512 621.434 c 303.812
 626.609 298.211 630.105 291.938 631.152 c 257.762 636.816 230.496 645.312
 212.496 654.816 c 205.875 657.98 199.863 662.285 194.734 667.535 c 193.574
 668.801 192.648 670.266 192 671.855 c 192 672 l 192.098 672.383 l 192.867
 673.969 l 192.863 673.969 l 194.746 676.758 197.102 679.191 199.824 681.168
 c 207.746 687.406 220.703 694.129 238.848 700.129 c 274.895 712.129 326.207
 720 384 720 c 441.793 720 493.105 712.176 529.152 700.129 c 547.297 694.082
 560.258 687.41 568.176 681.168 c 570.914 679.195 573.289 676.762 575.184
 673.969 c 575.902 672.383 l 576 672 l 576 671.809 l 575.352 670.215 574.426
 668.754 573.266 667.488 c 568.133 662.254 562.121 657.965 555.504 654.816
 c 537.457 645.312 510.238 636.816 476.062 631.152 c 469.633 630.281 463.828
 626.84 459.973 621.617 c 456.121 616.395 454.547 609.836 455.613 603.43
 c 456.676 597.027 460.289 591.332 465.625 587.637 c 470.965 583.941 477.566
 582.566 483.938 583.824 c 520.898 589.922 553.633 599.566 577.875 612.336
 c 600 624 624 643.199 624 672 c 624 692.449 611.52 708.098 597.887 718.895
 c 583.965 729.84 565.246 738.719 544.32 745.68 c 502.176 759.742 445.488
 768 384 768 c 322.512 768 265.824 759.742 223.68 745.68 c 202.75 738.719
 184.031 729.84 170.113 718.895 c 156.48 708.098 144 692.449 144 672 c 144
 643.246 168 624 190.129 612.336 c 214.367 599.566 247.105 589.922 284.066
 583.824 c 284.062 583.824 l 290.34 582.781 296.773 584.277 301.945 587.977
 c 307.121 591.676 310.617 597.277 311.664 603.551 c f*
Q Q
showpage
%%Trailer
%%EOF
