%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 2 0 10 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 2 0 10 12
12 12 cairo_set_page_size
%%EndPageSetup
q 2 0 8 12 rectclip
1 0 0 -1 0 12 cm q
0 g
3 3 m 3 1.82 3.691 0.75 4.766 0.266 c 5.84 -0.219 7.102 -0.031 7.984 0.75
 c 8.867 1.531 9.215 2.758 8.867 3.883 c 8.52 5.012 7.547 5.828 6.375 5.977
 c 6.375 10.125 l 6.375 10.332 6.207 10.5 6 10.5 c 5.793 10.5 5.625 10.332
 5.625 10.125 c 5.625 5.977 l 4.125 5.789 3 4.512 3 3 c h
4.871 9.43 m 4.902 9.633 4.766 9.828 4.562 9.863 c 4.027 9.953 3.602 10.086
 3.32 10.234 c 3.32 10.23 l 3.215 10.281 3.121 10.348 3.043 10.43 c 3.023
 10.449 3.012 10.473 3 10.496 c 3 10.508 l 3.012 10.531 l 3.043 10.574 3.078
 10.613 3.121 10.645 c 3.246 10.742 3.449 10.848 3.73 10.941 c 4.293 11.129
 5.094 11.25 6 11.25 c 6.902 11.25 7.703 11.129 8.27 10.941 c 8.555 10.848
 8.754 10.742 8.879 10.645 c 8.922 10.613 8.957 10.574 8.988 10.531 c 9 
10.508 l 9 10.496 l 8.988 10.473 8.977 10.449 8.957 10.43 c 8.879 10.348
 8.781 10.281 8.68 10.23 c 8.398 10.082 7.973 9.949 7.438 9.859 c 7.438 
9.863 l 7.34 9.848 7.246 9.793 7.188 9.711 c 7.125 9.633 7.102 9.527 7.117
 9.43 c 7.137 9.328 7.191 9.238 7.277 9.184 c 7.359 9.125 7.461 9.102 7.562
 9.121 c 8.141 9.215 8.652 9.367 9.031 9.566 c 9.375 9.75 9.75 10.051 9.75
 10.5 c 9.75 10.82 9.555 11.062 9.344 11.234 c 9.125 11.406 8.832 11.543
 8.508 11.652 c 7.848 11.871 6.965 12 6.004 12 c 5.043 12 4.156 11.871 3.5
 11.652 c 3.172 11.543 2.879 11.406 2.664 11.234 c 2.445 11.062 2.25 10.82
 2.25 10.5 c 2.25 10.051 2.625 9.75 2.973 9.566 c 3.352 9.367 3.863 9.215
 4.441 9.121 c 4.438 9.121 l 4.645 9.09 4.836 9.227 4.871 9.43 c f*
Q Q
showpage
%%Trailer
%%EOF
