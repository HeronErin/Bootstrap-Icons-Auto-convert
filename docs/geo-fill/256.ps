%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 36 0 156 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 36 0 156 192
192 192 cairo_set_page_size
%%EndPageSetup
q 36 0 120 192 rectclip
1 0 0 -1 0 192 cm q
0 g
48 48 m 48 35.617 52.789 23.715 61.359 14.777 c 69.934 5.84 81.625 0.562
 94 0.047 c 106.371 -0.469 118.465 3.816 127.75 12.008 c 137.039 20.195 
142.801 31.66 143.832 44 c 144.867 56.34 141.09 68.602 133.293 78.223 c 
125.5 87.844 114.285 94.082 102 95.629 c 102 162 l 102 165.312 99.312 168
 96 168 c 92.688 168 90 165.312 90 162 c 90 95.641 l 78.395 94.18 67.723
 88.527 59.992 79.754 c 52.258 70.98 47.992 59.684 48 47.988 c h
77.914 150.887 m 78.457 154.156 76.25 157.242 72.984 157.789 c 64.441 159.203
 57.625 161.328 53.125 163.703 c 51.469 164.496 49.965 165.57 48.684 166.883
 c 48.395 167.199 48.16 167.566 48 167.965 c 48 168 l 48.023 168.098 l 48.215
 168.492 l 48.688 169.188 49.273 169.797 49.957 170.293 c 51.938 171.852
 55.176 173.531 59.715 175.031 c 68.727 178.031 81.555 180 96.004 180 c 
110.453 180 123.281 178.043 132.293 175.031 c 136.828 173.52 140.07 171.852
 142.051 170.293 c 142.043 170.293 l 142.73 169.801 143.32 169.191 143.797
 168.492 c 143.977 168.098 l 144 168 l 144 167.953 l 143.84 167.555 143.605
 167.188 143.316 166.871 c 142.035 165.562 140.531 164.492 138.875 163.703
 c 134.363 161.328 127.559 159.203 119.016 157.789 c 117.406 157.57 115.957
 156.711 114.992 155.406 c 114.031 154.098 113.637 152.457 113.902 150.859
 c 114.168 149.258 115.074 147.832 116.406 146.91 c 117.742 145.984 119.391
 145.641 120.984 145.957 c 130.223 147.48 138.41 149.895 144.469 153.086
 c 150 156 156 160.801 156 168 c 156 173.113 152.879 177.023 149.473 179.723
 c 145.992 182.457 141.312 184.68 136.082 186.418 c 125.547 189.934 111.375
 191.996 96.004 191.996 c 80.633 191.996 66.461 189.934 55.926 186.418 c
 50.695 184.68 46.016 182.457 42.535 179.723 c 39.121 177.023 36 173.113
 36 168 c 36 160.812 42 156 47.531 153.086 c 53.59 149.895 61.773 147.48
 71.016 145.957 c 74.281 145.414 77.371 147.621 77.914 150.887 c f*
Q Q
showpage
%%Trailer
%%EOF
