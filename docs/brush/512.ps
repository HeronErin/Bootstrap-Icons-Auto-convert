%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 6 7 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 6 7 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 6 7 378 377 rectclip
1 0 0 -1 0 384 cm q
0 g
379.801 2.879 m 383.848 6.332 385.137 12.039 382.969 16.895 c 346.25 99.215
 269.137 212.973 212.688 272.254 c 212.688 272.258 l 196.848 288.816 177.34
 301.426 155.734 309.07 c 155.301 314.52 154.293 321.98 151.895 329.902 
c 147.07 345.719 135.887 365.398 110.902 371.664 c 86.711 377.438 61.633
 378.512 37.031 374.832 c 32.465 374.078 27.957 372.996 23.543 371.594 c
 19.473 370.344 15.68 368.332 12.359 365.664 c 10.164 363.816 8.48 361.438
 7.465 358.754 c 6.184 355.316 6.219 351.531 7.559 348.121 c 9.84 342.242
 15.145 339 18.621 337.273 c 28.078 332.547 33.621 326.402 39.43 317.449
 c 41.711 313.992 43.844 310.32 46.316 306.121 c 49.125 301.367 l 52.75 
295.246 56.949 288.406 62.23 281.016 c 74.902 263.281 91.055 258.816 104.133
 259.512 c 107.172 259.703 109.957 260.086 112.484 260.664 c 113.973 256.535
 115.891 251.543 118.195 246.07 c 124.461 231.215 133.988 212.016 146.684
 196.414 c 198.906 132.336 295.004 47.469 365.492 1.918 c 365.496 1.922 
l 369.953 -0.957 375.77 -0.566 379.801 2.879 c 112.922 285.887 m 109.738
 284.488 106.332 283.676 102.863 283.488 c 96.961 283.176 89.109 284.688
 81.766 294.984 c 77.039 301.586 73.246 307.754 69.766 313.633 c 67.246 
317.879 l 64.703 322.223 62.133 326.566 59.566 330.551 c 54.703 338.426 
48.535 345.41 41.328 351.215 c 57.887 353.902 82.992 353.879 105.098 348.336
 c 118.512 345 125.328 334.68 128.93 322.895 c 130.695 317.047 131.711 311
 131.953 304.895 c h
147.48 286.512 m 150.359 285.551 154.129 284.113 158.473 282.121 c 172.289
 275.691 184.781 266.738 195.312 255.719 c 240.914 207.816 301.199 122.039
 340.559 48.574 c 278.398 94.82 206.973 160.414 165.312 211.582 c 154.703
 224.613 146.234 241.414 140.305 255.406 c 137.402 262.316 135.168 268.367
 133.703 272.688 c 133.703 272.711 l 147.504 286.512 l h
28.129 359.473 m 28.297 359.352 l h
114.098 286.441 m 114.145 286.465 l 114.098 286.465 l h
114.098 286.441 m f
Q Q
showpage
%%Trailer
%%EOF
