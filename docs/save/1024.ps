%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
96 48 m 83.27 48 71.062 53.059 62.059 62.059 c 53.059 71.062 48 83.27 48
 96 c 48 672 l 48 684.73 53.059 696.938 62.059 705.941 c 71.062 714.941 
83.27 720 96 720 c 672 720 l 684.73 720 696.938 714.941 705.941 705.941 
c 714.941 696.938 720 684.73 720 672 c 720 96 l 720 83.27 714.941 71.062
 705.941 62.059 c 696.938 53.059 684.73 48 672 48 c 456 48 l 443.27 48 431.062
 53.059 422.059 62.059 c 413.059 71.062 408 83.27 408 96 c 408 446.062 l
 535.008 319.008 l 541.078 312.938 549.926 310.566 558.219 312.789 c 566.512
 315.012 572.988 321.488 575.211 329.781 c 577.434 338.074 575.062 346.922
 568.992 352.992 c 400.992 520.992 l 396.488 525.508 390.375 528.043 384
 528.043 c 377.625 528.043 371.512 525.508 367.008 520.992 c 199.008 352.992
 l 192.938 346.922 190.566 338.074 192.789 329.781 c 195.012 321.488 201.488
 315.012 209.781 312.789 c 218.074 310.566 226.922 312.938 232.992 319.008
 c 360 446.062 l 360 96 l 360 70.539 370.113 46.121 388.117 28.117 c 406.121
 10.113 430.539 0 456 0 c 672 0 l 697.461 0 721.879 10.113 739.883 28.117
 c 757.887 46.121 768 70.539 768 96 c 768 672 l 768 697.461 757.887 721.879
 739.883 739.883 c 721.879 757.887 697.461 768 672 768 c 96 768 l 70.539
 768 46.121 757.887 28.117 739.883 c 10.113 721.879 0 697.461 0 672 c 0 
96 l 0 70.539 10.113 46.121 28.117 28.117 c 46.121 10.113 70.539 0 96 0 
c 216 0 l 224.574 0 232.496 4.574 236.785 12 c 241.07 19.426 241.07 28.574
 236.785 36 c 232.496 43.426 224.574 48 216 48 c h
96 48 m f
Q Q
showpage
%%Trailer
%%EOF
