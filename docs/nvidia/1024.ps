%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
78.48 343.008 m 78.48 343.008 147.84 240.574 286.559 229.969 c 286.559 
192.816 l 132.961 205.105 0 335.184 0 335.184 c 0 335.184 75.359 552.91 
286.559 572.879 c 286.559 533.328 l 131.52 513.84 78.48 343.008 78.48 343.008
 c 286.559 454.801 m 286.559 490.945 l 169.438 470.066 136.895 348.289 136.895
 348.289 c 136.895 348.289 193.105 285.984 286.559 275.855 c 286.559 315.598
 l 286.367 315.598 l 237.359 309.695 199.008 355.438 199.008 355.438 c 199.008
 355.438 220.512 432.574 286.559 454.797 c 288 96 m 286.559 192.816 l 291.066
 192.453 295.578 192.18 300.098 192 c 474.672 186.098 588.434 335.184 588.434
 335.184 c 588.434 335.184 457.777 494.062 321.699 494.062 c 309.219 494
 297.508 492.957 286.562 490.941 c 286.562 533.324 l 295.906 534.57 305.668
 535.211 315.844 535.246 c 442.469 535.246 534.051 470.543 622.754 393.98
 c 637.488 405.789 697.684 434.395 710.066 446.973 c 625.73 517.531 429.172
 574.508 317.762 574.508 c 317.762 574.512 l 307.34 574.453 296.93 573.906
 286.559 572.879 c 286.559 672 l 768 672 l 769.441 96 l h
286.559 275.855 m 286.559 229.969 l 291.066 229.621 295.578 229.383 300.098
 229.246 c 425.664 225.309 508.035 337.148 508.035 337.148 c 508.031 337.152
 419.039 460.703 323.664 460.703 c 309.938 460.703 297.648 458.496 286.559
 454.801 c 286.559 315.602 l 335.422 321.504 345.262 343.059 374.637 392.066
 c 440.016 336.961 l 440.016 336.961 392.305 274.367 311.855 274.367 c 303.402
 274.418 294.961 274.914 286.559 275.855 c f
Q Q
showpage
%%Trailer
%%EOF
