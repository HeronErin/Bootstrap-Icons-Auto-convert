%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.613 2.68 m 0.613 2.68 1.156 1.879 2.238 1.797 c 2.238 1.508 l 1.039 1.602
 0 2.617 0 2.617 c 0 2.617 0.59 4.316 2.238 4.473 c 2.238 4.164 l 1.027 
4.012 0.613 2.676 0.613 2.676 c 2.238 3.555 m 2.238 3.836 l 1.324 3.672 
1.07 2.723 1.07 2.723 c 1.07 2.723 1.508 2.234 2.238 2.156 c 2.238 2.465
 l 1.855 2.418 1.555 2.777 1.555 2.777 c 1.555 2.777 1.723 3.379 2.238 3.555
 c 2.25 0.75 m 2.238 1.508 l 2.273 1.504 2.309 1.5 2.344 1.5 c 3.707 1.453
 4.598 2.617 4.598 2.617 c 4.598 2.617 3.578 3.859 2.516 3.859 c 2.418 3.859
 2.328 3.852 2.242 3.836 c 2.242 4.168 l 2.316 4.176 2.391 4.184 2.473 4.184
 c 3.461 4.184 4.176 3.68 4.871 3.078 c 4.984 3.172 5.457 3.395 5.555 3.492
 c 4.895 4.043 3.359 4.488 2.488 4.488 c 2.484 4.488 l 2.402 4.488 2.32 
4.484 2.238 4.477 c 2.238 5.25 l 6 5.25 l 6.012 0.75 l h
2.238 2.156 m 2.238 1.797 l 2.273 1.793 2.309 1.793 2.344 1.789 c 3.324
 1.758 3.969 2.633 3.969 2.633 c 3.969 2.633 3.273 3.598 2.527 3.598 c 2.422
 3.598 2.324 3.582 2.238 3.551 c 2.238 2.465 l 2.621 2.512 2.695 2.68 2.926
 3.062 c 3.438 2.633 l 3.438 2.633 3.066 2.145 2.438 2.145 c 2.371 2.145
 2.305 2.148 2.238 2.156 c f
Q Q
showpage
%%Trailer
%%EOF
