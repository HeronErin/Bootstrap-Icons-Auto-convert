%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
1.227 5.359 m 1.227 5.359 2.309 3.758 4.477 3.594 c 4.477 3.012 l 2.078
 3.203 0 5.238 0 5.238 c 0 5.238 1.176 8.641 4.477 8.953 c 4.477 8.336 l
 2.055 8.031 1.227 5.363 1.227 5.363 c 4.477 7.105 m 4.477 7.672 l 2.648
 7.344 2.137 5.441 2.137 5.441 c 2.141 5.441 3.016 4.469 4.477 4.309 c 4.477
 4.93 l 4.473 4.93 l 3.707 4.836 3.109 5.551 3.109 5.551 c 3.109 5.551 3.445
 6.758 4.477 7.102 c 4.5 1.5 m 4.477 3.012 l 4.547 3.008 4.617 3.004 4.688
 3 c 7.414 2.906 9.191 5.238 9.191 5.238 c 9.191 5.238 7.148 7.723 5.023
 7.723 c 4.828 7.723 4.645 7.707 4.473 7.676 c 4.473 8.34 l 4.617 8.359 
4.77 8.371 4.93 8.371 c 6.906 8.371 8.34 7.359 9.727 6.164 c 9.957 6.348
 10.898 6.797 11.09 6.992 c 9.773 8.094 6.699 8.984 4.961 8.984 c 4.965 
8.977 l 4.801 8.977 4.641 8.969 4.477 8.953 c 4.477 10.5 l 12 10.5 l 12.023
 1.5 l h
4.477 4.309 m 4.477 3.59 l 4.477 3.594 l 4.547 3.586 4.617 3.586 4.688 
3.582 c 6.648 3.52 7.938 5.27 7.938 5.27 c 7.938 5.27 6.547 7.199 5.059 
7.199 c 4.844 7.199 4.652 7.164 4.48 7.105 c 4.48 4.93 l 5.242 5.023 5.398
 5.359 5.855 6.125 c 6.875 5.266 l 6.875 5.266 6.129 4.289 4.871 4.289 c
 4.871 4.285 l 4.742 4.289 4.609 4.297 4.477 4.309 c f
Q Q
showpage
%%Trailer
%%EOF
