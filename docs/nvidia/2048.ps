%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
156.961 686.016 m 156.961 686.016 295.68 481.152 573.121 459.938 c 573.121
 385.633 l 265.922 410.207 0 670.367 0 670.367 c 0 670.367 150.719 1105.824
 573.121 1145.758 c 573.121 1066.652 l 263.043 1027.676 156.961 686.012 
156.961 686.012 c 573.121 909.602 m 573.121 981.891 l 338.883 940.129 273.793
 696.578 273.793 696.578 c 273.793 696.574 386.207 571.969 573.121 551.711
 c 573.121 631.199 l 572.738 631.199 l 474.723 619.391 398.02 710.879 398.02
 710.879 c 398.02 710.879 441.027 865.152 573.125 909.598 c 576 192 m 573.121
 385.633 l 582.133 384.906 591.156 384.363 600.191 384 c 949.344 372.191
 1176.863 670.367 1176.863 670.367 c 1176.863 670.367 915.551 988.129 643.391
 988.129 c 618.43 988 595.008 985.922 573.117 981.891 c 573.117 1066.66 
l 591.805 1069.156 611.324 1070.438 631.676 1070.5 c 884.922 1070.5 1068.09
 941.094 1245.5 787.973 c 1274.973 811.59 1395.355 868.805 1420.125 893.957
 c 1251.453 1035.078 858.332 1149.027 635.516 1149.027 c 635.52 1149.023
 l 614.68 1148.902 593.859 1147.816 573.121 1145.762 c 573.121 1344 l 1536
 1344 l 1538.879 192 l h
573.121 551.711 m 573.121 459.934 l 573.121 459.938 l 582.133 459.242 591.156
 458.762 600.191 458.496 c 851.328 450.625 1016.062 674.305 1016.062 674.305
 c 1016.062 674.305 838.078 921.406 647.328 921.406 c 619.871 921.406 595.297
 916.992 573.121 909.598 c 573.121 631.199 l 670.848 643.008 690.527 686.109
 749.281 784.129 c 880.031 673.922 l 880.031 673.922 784.605 548.738 623.711
 548.738 c 623.711 548.734 l 606.809 548.836 589.918 549.828 573.121 551.711
 c f
Q Q
showpage
%%Trailer
%%EOF
