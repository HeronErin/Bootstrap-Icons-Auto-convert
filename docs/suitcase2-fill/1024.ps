%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 144 0 624 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 144 0 624 768
768 768 cairo_set_page_size
%%EndPageSetup
q 144 0 480 768 rectclip
1 0 0 -1 0 768 cm q
0 g
312 0 m 305.637 0 299.531 2.527 295.031 7.031 c 290.527 11.531 288 17.637
 288 24 c 288 144 l 216 144 l 196.906 144 178.59 151.586 165.09 165.09 c
 151.586 178.59 144 196.906 144 216 c 144 648 l 143.992 662.922 148.621 
677.477 157.246 689.652 c 165.871 701.828 178.066 711.023 192.145 715.969
 c 191.141 728.953 195.453 741.785 204.098 751.527 c 212.742 761.27 224.973
 767.078 237.984 767.625 c 250.996 768.172 263.672 763.41 273.102 754.43
 c 282.531 745.449 287.91 733.023 288 720 c 480 720 l 479.934 733.125 485.238
 745.703 494.688 754.809 c 504.141 763.918 516.906 768.758 530.02 768.207
 c 543.129 767.656 555.445 761.758 564.094 751.891 c 572.746 742.02 576.98
 729.039 575.809 715.969 c 589.895 711.031 602.102 701.84 610.734 689.664
 c 619.367 677.484 624.004 662.926 624 648 c 624 216 l 624 196.906 616.414
 178.59 602.91 165.09 c 589.41 151.586 571.094 144 552 144 c 480 144 l 480
 24 l 480 17.637 477.473 11.531 472.969 7.031 c 468.469 2.527 462.363 0 
456 0 c h
432 144 m 336 144 l 336 48 l 432 48 l h
192 336 m 192 288 l 576 288 l 576 336 l h
192 336 m f
Q Q
showpage
%%Trailer
%%EOF
