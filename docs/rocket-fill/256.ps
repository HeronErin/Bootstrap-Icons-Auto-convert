%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 144 192 rectclip
1 0 0 -1 0 192 cm q
0 g
122.102 23.891 m 131.82 39.633 141.098 65.051 143.438 105.719 c 161.438
 127.68 l 165.688 133 168.004 139.613 168 146.426 c 168 186 l 168 188.582
 166.348 190.875 163.898 191.691 c 161.449 192.508 158.75 191.668 157.199
 189.602 c 143.699 171.602 l 141.707 168.938 138.66 166.801 134.676 164.762
 c 132.109 163.465 129.707 162.457 127.152 161.379 c 124.801 160.383 l 116.398
 165.516 106.199 168 96 168 c 85.801 168 75.602 165.516 67.199 160.379 c
 66.391 160.73 65.598 161.066 64.824 161.387 c 62.293 162.453 59.891 163.461
 57.324 164.758 c 53.34 166.797 50.293 168.934 48.301 171.598 c 34.801 189.602
 l 33.25 191.668 30.551 192.508 28.102 191.691 c 25.652 190.875 24 188.582
 24 186 c 24 146.426 l 24 139.609 26.32 133 30.574 127.68 c 30.621 127.621
 l 48.59 105.719 l 50.953 65.844 60.219 40.512 69.879 24.648 c 75.473 15.445
 81.16 9.504 85.598 5.809 c 87.832 3.934 90.25 2.285 92.809 0.887 c 93.777
 0.324 94.879 0.02 96 0 c 97.211 0 98.039 0.324 99 0.77 c 99.449 0.969 100.027
 1.27 100.738 1.668 c 102.152 2.461 104.062 3.672 106.293 5.449 c 110.77
 9.012 116.492 14.797 122.098 23.895 c 114 72 m 114 58.738 105.938 48 96
 48 c 86.062 48 78 58.738 78 72 c 78 85.262 86.062 96 96 96 c 105.938 96
 114 85.262 114 72 c f
96 174 m 102 174 107.988 173.449 113.746 172.332 c 100.801 189.602 l 99.668
 191.109 97.887 192 96 192 c 94.113 192 92.332 191.109 91.199 189.602 c 
78.25 172.332 l 84.012 173.449 90.012 174 95.996 174 c f
Q Q
showpage
%%Trailer
%%EOF
