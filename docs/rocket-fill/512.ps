%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
244.199 47.785 m 263.641 79.273 282.191 130.105 286.871 211.441 c 322.871
 255.363 l 322.871 255.359 l 331.379 266.004 336.008 279.223 336 292.848
 c 336 372 l 336 377.164 332.695 381.75 327.793 383.383 c 322.895 385.016
 317.5 383.332 314.398 379.199 c 287.398 343.199 l 283.414 337.871 277.32
 333.598 269.352 329.52 c 264.215 326.926 259.414 324.91 254.305 322.75 
c 249.602 320.758 l 232.801 331.031 212.398 336 192 336 c 171.602 336 151.199
 331.031 134.398 320.762 c 132.781 321.465 131.199 322.137 129.645 322.777
 c 124.582 324.914 119.781 326.93 114.645 329.52 c 106.676 333.598 100.582
 337.871 96.598 343.199 c 69.602 379.199 l 66.5 383.332 61.105 385.016 56.207
 383.383 c 51.305 381.75 48 377.164 48 372 c 48 292.848 l 48 279.223 52.637
 266 61.152 255.359 c 61.25 255.238 l 97.176 211.441 l 101.902 131.688 120.434
 81.027 139.75 49.297 c 150.934 30.891 162.309 19.008 171.191 11.617 c 175.664
 7.871 180.496 4.574 185.617 1.777 c 187.559 0.652 189.754 0.039 192 0 c
 194.426 0 196.078 0.648 198 1.535 c 198.895 1.934 200.055 2.535 201.48 
3.336 c 204.312 4.922 208.129 7.344 212.594 10.895 c 221.547 18.023 232.992
 29.59 244.203 47.781 c 228 144 m 228 117.48 211.871 96 192 96 c 172.129
 96 156 117.48 156 144 c 156 170.52 172.129 192 192 192 c 211.871 192 228
 170.52 228 144 c f
192 348 m 204 348 215.977 346.895 227.496 344.664 c 201.602 379.199 l 199.332
 382.223 195.777 384 192 384 c 188.223 384 184.668 382.223 182.398 379.199
 c 156.504 344.664 l 168.023 346.895 180.023 348 192 348 c f
Q Q
showpage
%%Trailer
%%EOF
