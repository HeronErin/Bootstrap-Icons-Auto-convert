%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
61.051 11.945 m 65.91 19.816 70.547 32.523 71.719 52.859 c 80.719 63.84
 l 82.844 66.5 84 69.805 84 73.211 c 84 93 l 84 94.293 83.172 95.438 81.949
 95.848 c 80.723 96.254 79.375 95.832 78.602 94.801 c 71.852 85.801 l 70.855
 84.469 69.332 83.402 67.34 82.379 c 66.055 81.73 64.855 81.227 63.578 80.688
 c 62.402 80.191 l 58.199 82.758 53.102 84 48 84 c 42.898 84 37.801 82.758
 33.602 80.191 c 33.199 80.367 32.801 80.535 32.414 80.695 c 31.148 81.23
 29.949 81.734 28.664 82.383 c 26.672 83.402 25.148 84.473 24.152 85.805
 c 17.398 94.801 l 16.625 95.832 15.277 96.254 14.051 95.848 c 12.828 95.438
 12 94.293 12 93 c 12 73.211 l 12 69.805 13.16 66.5 15.289 63.84 c 15.312
 63.809 l 24.293 52.859 l 25.477 32.922 30.105 20.254 34.938 12.324 c 37.734
 7.723 40.578 4.754 42.797 2.902 c 43.918 1.969 45.125 1.145 46.402 0.445
 c 46.891 0.164 47.438 0.012 48 0 c 48.605 0 49.02 0.16 49.5 0.383 c 49.723
 0.484 50.016 0.633 50.371 0.832 c 51.078 1.227 52.031 1.836 53.148 2.723
 c 55.387 4.504 58.25 7.398 61.051 11.945 c 57 36 m 57 29.371 52.969 24 
48 24 c 43.031 24 39 29.371 39 36 c 39 42.629 43.031 48 48 48 c 52.969 48
 57 42.629 57 36 c f
48 87 m 51 87 53.992 86.723 56.875 86.164 c 50.398 94.801 l 49.832 95.555
 48.945 96 48 96 c 47.055 96 46.168 95.555 45.602 94.801 c 39.129 86.168
 l 42.008 86.727 45.008 87.004 48.004 87.004 c f
Q Q
showpage
%%Trailer
%%EOF
