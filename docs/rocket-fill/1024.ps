%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
488.398 95.566 m 527.277 158.543 564.383 260.207 573.742 422.879 c 645.742
 510.719 l 662.754 532.008 672.016 558.449 672 585.695 c 672 744 l 672 750.758
 669.148 757.207 664.148 761.754 c 659.148 766.301 652.461 768.531 645.734
 767.895 c 639.004 767.254 632.855 763.809 628.801 758.398 c 574.801 686.398
 l 566.832 675.742 554.641 667.199 538.703 659.039 c 528.43 653.855 518.832
 649.824 508.605 645.504 c 499.199 641.52 l 465.602 662.062 424.801 672 
384 672 c 343.199 672 302.398 662.062 268.801 641.52 c 265.57 642.926 262.402
 644.273 259.297 645.551 c 249.168 649.824 239.57 653.855 229.297 659.039
 c 213.359 667.199 201.168 675.742 193.199 686.398 c 139.199 758.398 l 135.145
 763.809 128.996 767.254 122.266 767.895 c 115.539 768.531 108.852 766.301
 103.852 761.754 c 98.852 757.207 96 750.758 96 744 c 96 585.695 l 96 558.441
 105.277 532 122.305 510.719 c 122.496 510.48 l 194.352 422.879 l 203.809
 263.375 240.863 162.047 279.504 98.59 c 301.871 61.773 324.625 38.016 342.383
 23.23 c 351.332 15.742 360.992 9.148 371.23 3.551 c 375.117 1.301 379.512
 0.078 384 0 c 388.848 0 392.16 1.297 396 3.07 c 397.793 3.871 400.113 5.07
 402.961 6.672 c 408.625 9.84 416.258 14.688 425.184 21.793 c 443.086 36.051
 465.984 59.184 488.398 95.57 c 456 288 m 456 234.961 423.742 192 384 192
 c 344.258 192 312 234.961 312 288 c 312 341.039 344.258 384 384 384 c 423.742
 384 456 341.039 456 288 c f
384 696 m 408 696 431.953 693.793 454.992 689.328 c 403.199 758.398 l 398.668
 764.441 391.555 768 384 768 c 376.445 768 369.332 764.441 364.801 758.398
 c 313.008 689.328 l 336.047 693.793 360.047 696 384 696 c f
Q Q
showpage
%%Trailer
%%EOF
