%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
976.801 191.137 m 1054.562 317.09 1128.77 520.418 1147.488 845.762 c 1291.488
 1021.441 l 1325.508 1064.012 1344.027 1116.895 1344 1171.391 c 1344 1488
 l 1344 1501.52 1338.301 1514.41 1328.297 1523.508 c 1318.297 1532.605 1304.926
 1537.062 1291.465 1535.785 c 1278.008 1534.508 1265.711 1527.613 1257.602
 1516.801 c 1149.602 1372.801 l 1133.664 1351.488 1109.281 1334.402 1077.41
 1318.082 c 1056.867 1307.715 1037.668 1299.648 1017.219 1291.012 c 998.402
 1283.043 l 931.199 1324.129 849.602 1344 768 1344 c 686.398 1344 604.801
 1324.129 537.602 1283.039 c 531.137 1285.855 524.801 1288.543 518.594 1291.102
 c 498.336 1299.645 479.137 1307.711 458.594 1318.078 c 426.723 1334.398
 402.336 1351.484 386.402 1372.797 c 278.398 1516.801 l 270.289 1527.613
 257.992 1534.508 244.535 1535.785 c 231.074 1537.062 217.703 1532.605 207.703
 1523.508 c 197.699 1514.41 192 1501.52 192 1488 c 192 1171.391 l 192 1116.883
 210.551 1064 244.609 1021.441 c 244.992 1020.961 l 388.703 845.762 l 407.613
 526.754 481.727 324.098 559.008 197.188 c 603.742 123.555 649.246 76.035
 684.77 46.469 c 684.77 46.465 l 702.66 31.48 721.984 18.297 742.465 7.105
 c 750.234 2.602 759.023 0.156 768 0 c 777.695 0 784.32 2.594 792 6.145 
c 795.586 7.746 800.223 10.145 805.922 13.344 c 817.25 19.68 832.516 29.375
 850.371 43.582 c 886.18 72.094 931.973 118.367 976.805 191.133 c 912 576
 m 912 469.922 847.488 384 768 384 c 688.512 384 624 469.922 624 576 c 624
 682.078 688.512 768 768 768 c 847.488 768 912 682.078 912 576 c f
768 1392 m 816 1392 863.902 1387.586 909.984 1378.656 c 806.398 1516.801
 l 797.336 1528.887 783.109 1536 768 1536 c 752.891 1536 738.664 1528.887
 729.602 1516.801 c 626.016 1378.656 l 672.094 1387.586 720.094 1392 768
 1392 c f
Q Q
showpage
%%Trailer
%%EOF
