%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
300 0 m 141.938 0 l 132.391 0.008 123.242 3.809 116.496 10.559 c 58.535
 68.473 l 51.785 75.227 47.996 84.387 48 93.938 c 48 348 l 48 357.547 51.793
 366.703 58.543 373.457 c 65.297 380.207 74.453 384 84 384 c 300 384 l 309.547
 384 318.703 380.207 325.457 373.457 c 332.207 366.703 336 357.547 336 348
 c 336 36 l 336 26.453 332.207 17.297 325.457 10.543 c 318.703 3.793 309.547
 0 300 0 c 132 66 m 136.773 66 141.352 67.895 144.727 71.273 c 148.105 74.648
 150 79.227 150 84 c 150 132 l 150 138.43 146.57 144.375 141 147.59 c 135.43
 150.805 128.57 150.805 123 147.59 c 117.43 144.375 114 138.43 114 132 c
 114 84 l 114 79.227 115.895 74.648 119.273 71.273 c 122.648 67.895 127.227
 66 132 66 c 180 66 m 184.773 66 189.352 67.895 192.727 71.273 c 196.105
 74.648 198 79.227 198 84 c 198 132 l 198 138.43 194.57 144.375 189 147.59
 c 183.43 150.805 176.57 150.805 171 147.59 c 165.43 144.375 162 138.43 
162 132 c 162 84 l 162 79.227 163.895 74.648 167.273 71.273 c 170.648 67.895
 175.227 66 180 66 c 246 84 m 246 132 l 246 138.43 242.57 144.375 237 147.59
 c 231.43 150.805 224.57 150.805 219 147.59 c 213.43 144.375 210 138.43 
210 132 c 210 84 l 210 77.57 213.43 71.625 219 68.41 c 224.57 65.195 231.43
 65.195 237 68.41 c 242.57 71.625 246 77.57 246 84 c 276 66 m 280.773 66
 285.352 67.895 288.727 71.273 c 292.105 74.648 294 79.227 294 84 c 294 
132 l 294 138.43 290.57 144.375 285 147.59 c 279.43 150.805 272.57 150.805
 267 147.59 c 261.43 144.375 258 138.43 258 132 c 258 84 l 258 79.227 259.895
 74.648 263.273 71.273 c 266.648 67.895 271.227 66 276 66 c f
Q Q
showpage
%%Trailer
%%EOF
