%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
600 0 m 283.871 0 l 264.781 0.016 246.48 7.613 232.992 21.121 c 117.07 
136.945 l 103.57 150.453 95.992 168.773 96 187.871 c 96 696 l 96 715.094
 103.586 733.41 117.09 746.91 c 130.59 760.414 148.906 768 168 768 c 600
 768 l 619.094 768 637.41 760.414 650.91 746.91 c 664.414 733.41 672 715.094
 672 696 c 672 72 l 672 52.906 664.414 34.59 650.91 21.09 c 637.41 7.586
 619.094 0 600 0 c 264 132 m 273.547 132 282.703 135.793 289.457 142.543
 c 296.207 149.297 300 158.453 300 168 c 300 264 l 300 276.863 293.137 288.746
 282 295.176 c 270.863 301.609 257.137 301.609 246 295.176 c 234.863 288.746
 228 276.863 228 264 c 228 168 l 228 158.453 231.793 149.297 238.543 142.543
 c 245.297 135.793 254.453 132 264 132 c 360 132 m 369.547 132 378.703 135.793
 385.457 142.543 c 392.207 149.297 396 158.453 396 168 c 396 264 l 396 276.863
 389.137 288.746 378 295.176 c 366.863 301.609 353.137 301.609 342 295.176
 c 330.863 288.746 324 276.863 324 264 c 324 168 l 324 158.453 327.793 149.297
 334.543 142.543 c 341.297 135.793 350.453 132 360 132 c 492 168 m 492 264
 l 492 276.863 485.137 288.746 474 295.176 c 462.863 301.609 449.137 301.609
 438 295.176 c 426.863 288.746 420 276.863 420 264 c 420 168 l 420 155.137
 426.863 143.254 438 136.824 c 449.137 130.391 462.863 130.391 474 136.824
 c 485.137 143.254 492 155.137 492 168 c 552 132 m 561.547 132 570.703 135.793
 577.457 142.543 c 584.207 149.297 588 158.453 588 168 c 588 264 l 588 276.863
 581.137 288.746 570 295.176 c 558.863 301.609 545.137 301.609 534 295.176
 c 522.863 288.746 516 276.863 516 264 c 516 168 l 516 158.453 519.793 149.297
 526.543 142.543 c 533.297 135.793 542.453 132 552 132 c f
Q Q
showpage
%%Trailer
%%EOF
