%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1200 0 m 567.742 0 l 529.566 0.035 492.965 15.227 465.984 42.238 c 234.145
 273.887 l 207.145 300.906 191.984 337.547 192 375.742 c 192 1392 l 192 
1430.191 207.172 1466.816 234.176 1493.824 c 261.184 1520.828 297.809 1536
 336 1536 c 1200 1536 l 1238.191 1536 1274.816 1520.828 1301.824 1493.824
 c 1328.828 1466.816 1344 1430.191 1344 1392 c 1344 144 l 1344 105.809 1328.828
 69.184 1301.824 42.176 c 1274.816 15.172 1238.191 0 1200 0 c 528 264 m 
547.094 264 565.41 271.586 578.91 285.09 c 592.414 298.59 600 316.906 600
 336 c 600 528 l 600 553.723 586.277 577.492 564 590.355 c 541.723 603.215
 514.277 603.215 492 590.355 c 469.723 577.492 456 553.723 456 528 c 456
 336 l 456 316.906 463.586 298.59 477.09 285.09 c 490.59 271.586 508.906
 264 528 264 c 720 264 m 739.094 264 757.41 271.586 770.91 285.09 c 784.414
 298.59 792 316.906 792 336 c 792 528 l 792 553.723 778.277 577.492 756 
590.355 c 733.723 603.215 706.277 603.215 684 590.355 c 661.723 577.492 
648 553.723 648 528 c 648 336 l 648 316.906 655.586 298.59 669.09 285.09
 c 682.59 271.586 700.906 264 720 264 c 984 336 m 984 528 l 984 553.723 
970.277 577.492 948 590.355 c 925.723 603.215 898.277 603.215 876 590.355
 c 853.723 577.492 840 553.723 840 528 c 840 336 l 840 310.277 853.723 286.508
 876 273.645 c 898.277 260.785 925.723 260.785 948 273.645 c 970.277 286.508
 984 310.277 984 336 c 1104 264 m 1123.094 264 1141.41 271.586 1154.91 285.09
 c 1168.414 298.59 1176 316.906 1176 336 c 1176 528 l 1176 553.723 1162.277
 577.492 1140 590.355 c 1117.723 603.215 1090.277 603.215 1068 590.355 c
 1045.723 577.492 1032 553.723 1032 528 c 1032 336 l 1032 316.906 1039.586
 298.59 1053.09 285.09 c 1066.59 271.586 1084.906 264 1104 264 c f
Q Q
showpage
%%Trailer
%%EOF
