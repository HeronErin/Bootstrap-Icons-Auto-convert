%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 2 2 1533 1534
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 2 2 1533 1534
1536 1536 cairo_set_page_size
%%EndPageSetup
q 2 2 1531 1532 rectclip
1 0 0 -1 0 1536 cm q
0 g
257.281 736.895 m 880.32 112.512 l 952.559 41.781 1049.777 2.395 1150.875
 2.898 c 1251.973 3.398 1348.797 43.75 1420.328 115.195 c 1491.863 186.641
 1532.332 283.41 1532.961 384.508 c 1533.586 485.605 1494.32 582.875 1423.68
 655.199 c 1281.887 801.984 l 801.312 1282.559 l 655.105 1423.871 l 582.777
 1494.512 485.512 1533.781 384.414 1533.152 c 283.316 1532.523 186.543 1492.055
 115.098 1420.52 c 43.656 1348.988 3.305 1252.168 2.801 1151.066 c 2.297
 1049.969 41.688 952.75 112.414 880.512 c 112.512 880.32 l 256.992 737.09
 l 257.09 736.898 l h
805.441 462.527 m 793.316 450.387 775.637 445.637 759.059 450.066 c 742.48
 454.496 729.527 467.43 725.074 484 c 720.621 500.57 725.348 518.258 737.473
 530.398 c 749.664 542.176 767.164 546.648 783.512 542.164 c 799.855 537.684
 812.629 524.914 817.109 508.566 c 821.59 492.219 817.121 474.719 805.344
 462.527 c h
669.504 666.145 m 678.766 657.199 684.043 644.91 684.156 632.035 c 684.27
 619.16 679.203 606.781 670.098 597.676 c 660.996 588.574 648.617 583.508
 635.742 583.621 c 622.867 583.73 610.578 589.012 601.633 598.273 c 589.855
 610.465 585.383 627.965 589.867 644.309 c 594.348 660.656 607.121 673.43
 623.465 677.91 c 639.812 682.391 657.312 677.918 669.504 666.145 c 533.762
 801.984 m 545.902 789.859 550.652 772.18 546.223 755.602 c 541.793 739.027
 528.859 726.07 512.285 721.617 c 495.715 717.164 478.031 721.891 465.887
 734.016 c 456.875 743.016 451.805 755.23 451.797 767.965 c 451.789 780.703
 456.84 792.922 465.84 801.938 c 474.84 810.949 487.051 816.02 499.789 816.027
 c 512.527 816.035 524.746 810.984 533.762 801.984 c 805.25 1073.473 m 805.246
 1073.473 l 814.508 1064.527 819.789 1052.238 819.898 1039.363 c 820.012
 1026.488 814.945 1014.109 805.844 1005.004 c 796.738 995.902 784.359 990.836
 771.484 990.949 c 758.609 991.059 746.32 996.34 737.375 1005.602 c 725.602
 1017.793 721.129 1035.289 725.609 1051.637 c 730.094 1067.984 742.863 1080.758
 759.211 1085.238 c 775.559 1089.719 793.055 1085.246 805.246 1073.473 c
 940.988 869.855 m 940.992 869.855 l 932.047 860.594 919.758 855.316 906.883
 855.203 c 894.008 855.094 881.629 860.156 872.523 869.262 c 863.422 878.363
 858.355 890.746 858.469 903.621 c 858.578 916.492 863.859 928.785 873.121
 937.727 c 885.312 949.504 902.812 953.977 919.156 949.492 c 935.504 945.012
 948.277 932.242 952.758 915.895 c 957.238 899.547 952.766 882.047 940.992
 869.855 c 1076.734 801.984 m 1086.008 793.051 1091.305 780.77 1091.434 
767.898 c 1091.562 755.023 1086.516 742.637 1077.426 733.52 c 1068.336 724.402
 1055.965 719.32 1043.09 719.414 c 1030.215 719.508 1017.918 724.77 1008.961
 734.016 c 999.945 743.016 994.879 755.23 994.871 767.965 c 994.859 780.703
 999.91 792.922 1008.91 801.938 c 1017.914 810.949 1030.125 816.02 1042.863
 816.027 c 1055.598 816.035 1067.82 810.984 1076.832 801.984 c h
669.504 869.855 m 660.559 860.594 648.27 855.316 635.395 855.203 c 622.52
 855.094 610.141 860.156 601.035 869.262 c 591.934 878.363 586.867 890.746
 586.98 903.621 c 587.094 916.492 592.371 928.785 601.633 937.727 c 613.824
 949.504 631.324 953.977 647.668 949.492 c 664.016 945.012 676.789 932.242
 681.27 915.895 c 685.75 899.547 681.281 882.047 669.504 869.855 c 805.246
 801.984 m 817.391 789.859 822.141 772.18 817.711 755.602 c 813.281 739.027
 800.344 726.07 783.773 721.617 c 767.203 717.164 749.516 721.891 737.375
 734.016 c 728.363 743.016 723.293 755.23 723.285 767.965 c 723.277 780.703
 728.328 792.922 737.328 801.938 c 746.328 810.949 758.539 816.02 771.277
 816.027 c 784.016 816.035 796.234 810.984 805.246 801.984 c 940.988 598.273
 m 940.992 598.273 l 932.047 589.012 919.758 583.73 906.883 583.621 c 894.008
 583.508 881.629 588.574 872.523 597.676 c 863.422 606.781 858.355 619.16
 858.469 632.035 c 858.578 644.91 863.859 657.199 873.121 666.145 c 885.312
 677.918 902.812 682.391 919.156 677.91 c 935.504 673.43 948.277 660.656
 952.758 644.309 c 957.238 627.965 952.766 610.465 940.992 598.273 c 830.016
 321.984 m 1214.016 705.984 l 1281.984 638.016 l 897.984 254.016 l h
705.984 1214.016 m 321.984 830.016 l 254.016 897.984 l 638.016 1281.984
 l h
705.984 1214.016 m f
Q Q
showpage
%%Trailer
%%EOF
