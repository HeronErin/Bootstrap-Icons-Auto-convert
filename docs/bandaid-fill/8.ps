%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.004 2.879 m 3.438 0.441 l 4.027 -0.137 4.965 -0.129 5.547 0.449 c 6.129
 1.031 6.137 1.973 5.562 2.559 c 5.008 3.133 l 3.129 5.012 l 2.559 5.562
 l 1.973 6.137 1.031 6.129 0.449 5.551 c -0.133 4.969 -0.137 4.027 0.438
 3.441 c 1 2.883 l h
3.145 1.809 m 2.969 1.629 2.703 1.895 2.879 2.07 c 3.059 2.242 3.316 1.984
 3.145 1.809 c h
2.617 2.602 m 2.691 2.531 2.691 2.41 2.617 2.336 c 2.543 2.262 2.422 2.262
 2.352 2.336 c 2.18 2.516 2.438 2.773 2.617 2.602 c 2.086 3.133 m 2.262 
2.957 1.996 2.691 1.82 2.867 c 1.746 2.941 1.746 3.059 1.82 3.133 c 1.895
 3.207 2.012 3.207 2.086 3.133 c 3.145 4.191 m 3.223 4.121 3.223 4 3.148
 3.926 c 3.074 3.852 2.953 3.852 2.879 3.93 c 2.711 4.105 2.969 4.363 3.145
 4.191 c 3.676 3.395 m 3.676 3.398 l 3.602 3.324 3.484 3.32 3.41 3.395 c
 3.336 3.469 3.336 3.59 3.41 3.664 c 3.586 3.832 3.848 3.574 3.676 3.398
 c 4.207 3.133 m 4.281 3.059 4.281 2.941 4.207 2.867 c 4.133 2.793 4.016
 2.793 3.941 2.867 c 3.867 2.941 3.867 3.059 3.941 3.133 c 4.016 3.207 4.133
 3.207 4.207 3.133 c h
2.617 3.398 m 2.543 3.324 2.422 3.32 2.348 3.395 c 2.273 3.469 2.273 3.59
 2.352 3.664 c 2.527 3.832 2.785 3.574 2.617 3.398 c 3.148 3.133 m 3.145
 3.133 l 3.324 2.957 3.059 2.691 2.879 2.867 c 2.809 2.941 2.809 3.059 2.879
 3.133 c 2.953 3.207 3.07 3.207 3.145 3.133 c 3.676 2.336 m 3.602 2.262 
3.484 2.262 3.41 2.336 c 3.336 2.41 3.336 2.531 3.41 2.602 c 3.586 2.773
 3.848 2.516 3.676 2.336 c 3.242 1.258 m 4.742 2.758 l 5.008 2.492 l 3.508
 0.992 l h
2.758 4.742 m 1.258 3.242 l 0.992 3.508 l 2.492 5.008 l h
2.758 4.742 m f
Q Q
showpage
%%Trailer
%%EOF
