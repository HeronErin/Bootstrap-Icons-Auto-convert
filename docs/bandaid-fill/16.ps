%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:44 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
2.012 5.758 m 6.879 0.879 l 8.051 -0.27 9.934 -0.262 11.098 0.898 c 12.258
 2.062 12.27 3.941 11.121 5.117 c 10.012 6.266 l 6.258 10.02 l 5.117 11.125
 l 3.941 12.273 2.062 12.262 0.898 11.098 c -0.262 9.934 -0.273 8.055 0.879
 6.879 c 2.008 5.762 l h
6.293 3.613 m 6.145 3.469 5.91 3.465 5.762 3.613 c 5.617 3.758 5.613 3.996
 5.762 4.145 c 5.91 4.285 6.141 4.285 6.289 4.141 c 6.434 3.996 6.434 3.762
 6.293 3.613 c h
5.23 5.203 m 5.305 5.133 5.344 5.039 5.344 4.938 c 5.348 4.836 5.305 4.742
 5.234 4.668 c 5.164 4.598 5.066 4.559 4.965 4.559 c 4.867 4.559 4.77 4.602
 4.699 4.676 c 4.559 4.82 4.559 5.055 4.703 5.199 c 4.848 5.344 5.082 5.348
 5.23 5.203 c 4.172 6.266 m 4.316 6.117 4.316 5.883 4.172 5.734 c 4.023 
5.59 3.785 5.59 3.641 5.734 c 3.57 5.805 3.531 5.898 3.531 6 c 3.531 6.098
 3.57 6.195 3.641 6.266 c 3.785 6.41 4.023 6.41 4.172 6.266 c 6.293 8.387
 m 6.289 8.387 l 6.363 8.316 6.406 8.219 6.406 8.121 c 6.406 8.02 6.367 
7.922 6.297 7.852 c 6.223 7.781 6.129 7.742 6.027 7.742 c 5.926 7.742 5.832
 7.785 5.762 7.855 c 5.617 8.004 5.621 8.238 5.766 8.383 c 5.91 8.527 6.145
 8.527 6.289 8.387 c 7.348 6.797 m 7.352 6.797 l 7.281 6.723 7.188 6.684
 7.086 6.68 c 6.984 6.68 6.887 6.719 6.816 6.793 c 6.746 6.863 6.707 6.957
 6.707 7.059 c 6.707 7.16 6.75 7.258 6.82 7.324 c 6.969 7.469 7.203 7.465
 7.348 7.32 c 7.492 7.176 7.492 6.941 7.352 6.797 c 8.41 6.266 m 8.484 6.195
 8.527 6.102 8.527 6 c 8.527 5.898 8.488 5.801 8.418 5.73 c 8.348 5.66 8.25
 5.621 8.148 5.621 c 8.047 5.621 7.953 5.664 7.883 5.734 c 7.812 5.805 7.773
 5.898 7.773 6 c 7.773 6.098 7.812 6.195 7.883 6.266 c 8.027 6.41 8.266 
6.41 8.414 6.266 c h
5.23 6.797 m 5.16 6.723 5.066 6.684 4.965 6.68 c 4.863 6.68 4.766 6.719
 4.695 6.793 c 4.625 6.863 4.586 6.957 4.586 7.059 c 4.586 7.16 4.629 7.258
 4.699 7.324 c 4.848 7.469 5.082 7.465 5.227 7.32 c 5.371 7.176 5.371 6.941
 5.23 6.797 c 6.289 6.266 m 6.438 6.117 6.438 5.883 6.293 5.734 c 6.145 
5.59 5.906 5.59 5.762 5.734 c 5.691 5.805 5.652 5.898 5.652 6 c 5.652 6.098
 5.691 6.195 5.762 6.266 c 5.906 6.41 6.145 6.41 6.289 6.266 c 7.348 4.676
 m 7.352 4.676 l 7.281 4.602 7.188 4.559 7.086 4.559 c 6.984 4.559 6.887
 4.598 6.816 4.668 c 6.746 4.742 6.707 4.836 6.707 4.938 c 6.707 5.039 6.75
 5.133 6.82 5.203 c 6.969 5.348 7.203 5.344 7.348 5.199 c 7.492 5.055 7.492
 4.82 7.352 4.676 c 6.484 2.516 m 9.484 5.516 l 10.016 4.984 l 7.016 1.984
 l h
5.516 9.484 m 2.516 6.484 l 1.984 7.016 l 4.984 10.016 l h
5.516 9.484 m f
Q Q
showpage
%%Trailer
%%EOF
