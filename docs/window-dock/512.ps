%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
84 264 m 77.371 264 72 269.371 72 276 c 72 300 l 72 303.184 73.266 306.234
 75.516 308.484 c 77.766 310.734 80.816 312 84 312 c 108 312 l 111.184 312
 114.234 310.734 116.484 308.484 c 118.734 306.234 120 303.184 120 300 c
 120 276 l 120 272.816 118.734 269.766 116.484 267.516 c 114.234 265.266
 111.184 264 108 264 c h
168 276 m 168 269.371 173.371 264 180 264 c 204 264 l 207.184 264 210.234
 265.266 212.484 267.516 c 214.734 269.766 216 272.816 216 276 c 216 300
 l 216 303.184 214.734 306.234 212.484 308.484 c 210.234 310.734 207.184
 312 204 312 c 180 312 l 173.371 312 168 306.629 168 300 c h
276 264 m 269.371 264 264 269.371 264 276 c 264 300 l 264 303.184 265.266
 306.234 267.516 308.484 c 269.766 310.734 272.816 312 276 312 c 300 312
 l 303.184 312 306.234 310.734 308.484 308.484 c 310.734 306.234 312 303.184
 312 300 c 312 276 l 312 272.816 310.734 269.766 308.484 267.516 c 306.234
 265.266 303.184 264 300 264 c h
276 264 m f
336 24 m 348.73 24 360.938 29.059 369.941 38.059 c 378.941 47.062 384 59.27
 384 72 c 384 312 l 384 324.73 378.941 336.938 369.941 345.941 c 360.938
 354.941 348.73 360 336 360 c 48 360 l 35.27 360 23.062 354.941 14.059 345.941
 c 5.059 336.938 0 324.73 0 312 c 0 72 l 0 59.27 5.059 47.062 14.059 38.059
 c 23.062 29.059 35.27 24 48 24 c h
48 336 m 336 336 l 342.363 336 348.469 333.473 352.969 328.969 c 357.473
 324.469 360 318.363 360 312 c 360 120 l 24 120 l 24 312 l 24 318.363 26.527
 324.469 31.031 328.969 c 35.531 333.473 41.637 336 48 336 c 48 48 m 41.637
 48 35.531 50.527 31.031 55.031 c 26.527 59.531 24 65.637 24 72 c 24 96 
l 360 96 l 360 72 l 360 65.637 357.473 59.531 352.969 55.031 c 348.469 50.527
 342.363 48 336 48 c h
48 48 m f
Q Q
showpage
%%Trailer
%%EOF
