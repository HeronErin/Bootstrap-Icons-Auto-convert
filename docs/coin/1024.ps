%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
264 456.527 m 267.648 502.32 303.84 537.984 368.734 542.207 c 368.734 576
 l 397.535 576 l 397.535 541.969 l 464.734 537.266 504 501.359 504 449.234
 c 504 401.859 473.953 377.426 420.238 364.754 c 397.535 359.379 l 397.535
 267.359 l 426.336 270.625 444.672 286.367 449.086 308.16 c 499.582 308.16
 l 495.934 264.047 458.109 229.535 397.535 225.793 c 397.535 192 l 368.734
 192 l 368.734 226.512 l 311.375 232.129 272.254 266.641 272.254 315.457
 c 272.254 358.656 301.344 386.113 349.68 397.395 c 368.734 402.098 l 368.734
 499.73 l 339.215 495.266 319.68 479.09 315.262 456.531 c h
368.496 352.559 m 340.176 345.984 324.816 332.59 324.816 312.43 c 324.816
 289.871 341.375 272.973 368.738 268.031 c 368.738 352.512 l 368.5 352.512
 l h
401.711 409.824 m 436.125 417.793 452.016 430.703 452.016 453.504 c 452.016
 479.52 432.238 497.375 397.535 500.641 c 397.535 408.863 l h
401.711 409.824 m f
384 720 m 294.887 720 209.426 684.602 146.414 621.586 c 83.398 558.574 
48 473.113 48 384 c 48 294.887 83.398 209.426 146.414 146.414 c 209.426 
83.398 294.887 48 384 48 c 473.113 48 558.574 83.398 621.586 146.414 c 684.602
 209.426 720 294.887 720 384 c 720 473.113 684.602 558.574 621.586 621.586
 c 558.574 684.602 473.113 720 384 720 c 384 768 m 485.844 768 583.516 727.543
 655.527 655.527 c 727.543 583.516 768 485.844 768 384 c 768 282.156 727.543
 184.484 655.527 112.473 c 583.516 40.457 485.844 0 384 0 c 282.156 0 184.484
 40.457 112.473 112.473 c 40.457 184.484 0 282.156 0 384 c 0 485.844 40.457
 583.516 112.473 655.527 c 184.484 727.543 282.156 768 384 768 c f
384 648 m 313.984 648 246.832 620.188 197.324 570.676 c 147.812 521.168
 120 454.016 120 384 c 120 313.984 147.812 246.832 197.324 197.324 c 246.832
 147.812 313.984 120 384 120 c 454.016 120 521.168 147.812 570.676 197.324
 c 620.188 246.832 648 313.984 648 384 c 648 454.016 620.188 521.168 570.676
 570.676 c 521.168 620.188 454.016 648 384 648 c 384 672 m 460.383 672 533.637
 641.656 587.648 587.648 c 641.656 533.637 672 460.383 672 384 c 672 307.617
 641.656 234.363 587.648 180.352 c 533.637 126.344 460.383 96 384 96 c 307.617
 96 234.363 126.344 180.352 180.352 c 126.344 234.363 96 307.617 96 384 
c 96 460.383 126.344 533.637 180.352 587.648 c 234.363 641.656 307.617 672
 384 672 c f
Q Q
showpage
%%Trailer
%%EOF
