%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
132 228.266 m 133.824 251.16 151.922 268.992 184.367 271.105 c 184.367 
288 l 198.766 288 l 198.766 270.984 l 232.367 268.633 251.996 250.68 251.996
 224.617 c 251.996 200.93 236.973 188.715 210.117 182.379 c 198.766 179.691
 l 198.77 133.68 l 213.168 135.312 222.336 143.184 224.547 154.078 c 249.793
 154.078 l 247.969 132.023 229.059 114.766 198.77 112.895 c 198.77 96 l 
184.371 96 l 184.371 113.258 l 155.691 116.066 136.133 133.32 136.133 157.73
 c 136.133 179.332 150.676 193.059 174.844 198.699 c 184.371 201.051 l 184.371
 249.867 l 169.609 247.637 159.844 239.547 157.637 228.266 c h
184.246 176.281 m 170.086 172.992 162.406 166.297 162.406 156.219 c 162.406
 144.938 170.688 136.492 184.367 134.02 c 184.367 176.258 l 184.246 176.258
 l h
200.855 204.914 m 218.062 208.898 226.008 215.355 226.008 226.754 c 226.008
 239.762 216.121 248.691 198.77 250.32 c 198.77 204.434 l h
200.855 204.914 m f
192 360 m 147.445 360 104.711 342.301 73.207 310.793 c 41.699 279.289 24
 236.555 24 192 c 24 147.445 41.699 104.711 73.207 73.207 c 104.711 41.699
 147.445 24 192 24 c 236.555 24 279.289 41.699 310.793 73.207 c 342.301 
104.711 360 147.445 360 192 c 360 236.555 342.301 279.289 310.793 310.793
 c 279.289 342.301 236.555 360 192 360 c 192 384 m 242.922 384 291.758 363.773
 327.766 327.766 c 363.773 291.758 384 242.922 384 192 c 384 141.078 363.773
 92.242 327.766 56.234 c 291.758 20.227 242.922 0 192 0 c 141.078 0 92.242
 20.227 56.234 56.234 c 20.227 92.242 0 141.078 0 192 c 0 242.922 20.227
 291.758 56.234 327.766 c 92.242 363.773 141.078 384 192 384 c f
192 324 m 144.84 324 101.266 298.84 77.684 258 c 54.105 217.16 54.105 166.84
 77.684 126 c 101.266 85.16 144.84 60 192 60 c 239.16 60 282.734 85.16 306.316
 126 c 329.895 166.84 329.895 217.16 306.316 258 c 282.734 298.84 239.16
 324 192 324 c 192 336 m 243.445 336 290.984 308.555 316.707 264 c 342.43
 219.445 342.43 164.555 316.707 120 c 290.984 75.445 243.445 48 192 48 c
 140.555 48 93.016 75.445 67.293 120 c 41.57 164.555 41.57 219.445 67.293
 264 c 93.016 308.555 140.555 336 192 336 c f
Q Q
showpage
%%Trailer
%%EOF
