%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
816 192 m 927.102 191.988 1034.766 230.516 1120.637 301.012 c 1206.504 
371.512 1265.258 469.613 1286.879 578.594 c 1359.289 588.371 1425.273 625.309
 1471.469 681.922 c 1517.664 738.531 1540.613 810.586 1535.668 883.484 c
 1530.727 956.383 1498.262 1024.68 1444.848 1074.535 c 1391.434 1124.391
 1321.066 1152.082 1248 1152 c 336 1152 l 255.188 1152.02 177.078 1122.914
 115.984 1070.02 c 54.887 1017.125 14.906 943.98 3.359 864 c 528 864 l 545.148
 864 560.996 854.852 569.57 840 c 578.145 825.148 578.145 806.852 569.57
 792 c 560.996 777.148 545.148 768 528 768 c 3.359 768 l 15.852 681.332 
61.68 602.965 131.09 549.586 c 200.5 496.207 288.008 472.031 374.977 482.207
 c 412.078 396.023 473.625 322.602 552.008 271.023 c 630.387 219.445 722.168
 191.973 816 192 c 240 960 m 222.852 960 207.004 969.148 198.43 984 c 189.855
 998.852 189.855 1017.148 198.43 1032 c 207.004 1046.852 222.852 1056 240
 1056 c 1104 1056 l 1121.148 1056 1136.996 1046.852 1145.57 1032 c 1154.145
 1017.148 1154.145 998.852 1145.57 984 c 1136.996 969.148 1121.148 960 1104
 960 c h
0 1296 m 0 1283.27 5.059 1271.062 14.059 1262.059 c 23.062 1253.059 35.27
 1248 48 1248 c 912 1248 l 929.148 1248 944.996 1257.148 953.57 1272 c 962.145
 1286.852 962.145 1305.148 953.57 1320 c 944.996 1334.852 929.148 1344 912
 1344 c 48 1344 l 35.27 1344 23.062 1338.941 14.059 1329.941 c 5.059 1320.938
 0 1308.73 0 1296 c f
Q Q
showpage
%%Trailer
%%EOF
