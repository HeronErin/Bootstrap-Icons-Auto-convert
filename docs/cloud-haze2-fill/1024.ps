%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
408 96 m 463.551 95.992 517.383 115.258 560.316 150.508 c 603.254 185.754
 632.629 234.809 643.441 289.297 c 692.168 295.879 734.168 326.867 754.832
 371.484 c 775.496 416.102 771.965 468.18 745.469 509.602 c 718.969 551.02
 673.172 576.055 624 576 c 168 576 l 127.594 576.012 88.539 561.457 57.992
 535.012 c 27.445 508.562 7.453 471.992 1.68 432 c 264 432 l 272.574 432
 280.496 427.426 284.785 420 c 289.07 412.574 289.07 403.426 284.785 396
 c 280.496 388.574 272.574 384 264 384 c 1.68 384 l 7.926 340.668 30.84 
301.484 65.547 274.793 c 100.25 248.102 144.004 236.016 187.488 241.105 
c 206.039 198.012 236.812 161.301 276.004 135.512 c 315.195 109.723 361.086
 95.988 408 96 c 120 480 m 111.426 480 103.504 484.574 99.215 492 c 94.93
 499.426 94.93 508.574 99.215 516 c 103.504 523.426 111.426 528 120 528 
c 552 528 l 560.574 528 568.496 523.426 572.785 516 c 577.07 508.574 577.07
 499.426 572.785 492 c 568.496 484.574 560.574 480 552 480 c h
0 648 m 0 641.637 2.527 635.531 7.031 631.031 c 11.531 626.527 17.637 624
 24 624 c 456 624 l 464.574 624 472.496 628.574 476.785 636 c 481.07 643.426
 481.07 652.574 476.785 660 c 472.496 667.426 464.574 672 456 672 c 24 672
 l 17.637 672 11.531 669.473 7.031 664.969 c 2.527 660.469 0 654.363 0 648
 c f
Q Q
showpage
%%Trailer
%%EOF
