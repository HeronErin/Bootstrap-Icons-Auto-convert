%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
336 72 m 342.363 72 348.469 74.527 352.969 79.031 c 357.473 83.531 360 
89.637 360 96 c 360 288 l 360 294.363 357.473 300.469 352.969 304.969 c 
348.469 309.473 342.363 312 336 312 c 48 312 l 41.637 312 35.531 309.473
 31.031 304.969 c 26.527 300.469 24 294.363 24 288 c 24 96 l 24 89.637 26.527
 83.531 31.031 79.031 c 35.531 74.527 41.637 72 48 72 c h
48 48 m 35.27 48 23.062 53.059 14.059 62.059 c 5.059 71.062 0 83.27 0 96
 c 0 288 l 0 300.73 5.059 312.938 14.059 321.941 c 23.062 330.941 35.27 
336 48 336 c 336 336 l 348.73 336 360.938 330.941 369.941 321.941 c 378.941
 312.938 384 300.73 384 288 c 384 96 l 384 83.27 378.941 71.062 369.941 
62.059 c 360.938 53.059 348.73 48 336 48 c h
48 48 m f
48 132 m 48 125.371 53.371 120 60 120 c 108 120 l 111.184 120 114.234 121.266
 116.484 123.516 c 118.734 125.766 120 128.816 120 132 c 120 156 l 120 159.184
 118.734 162.234 116.484 164.484 c 114.234 166.734 111.184 168 108 168 c
 60 168 l 53.371 168 48 162.629 48 156 c h
48 204 m 48 197.371 53.371 192 60 192 c 180 192 l 186.629 192 192 197.371
 192 204 c 192 210.629 186.629 216 180 216 c 60 216 l 53.371 216 48 210.629
 48 204 c 48 252 m 48 245.371 53.371 240 60 240 c 84 240 l 90.629 240 96
 245.371 96 252 c 96 258.629 90.629 264 84 264 c 60 264 l 53.371 264 48 
258.629 48 252 c 120 252 m 120 245.371 125.371 240 132 240 c 156 240 l 162.629
 240 168 245.371 168 252 c 168 258.629 162.629 264 156 264 c 132 264 l 125.371
 264 120 258.629 120 252 c 192 252 m 192 245.371 197.371 240 204 240 c 228
 240 l 234.629 240 240 245.371 240 252 c 240 258.629 234.629 264 228 264
 c 204 264 l 197.371 264 192 258.629 192 252 c 264 252 m 264 245.371 269.371
 240 276 240 c 300 240 l 306.629 240 312 245.371 312 252 c 312 258.629 306.629
 264 300 264 c 276 264 l 269.371 264 264 258.629 264 252 c f
Q Q
showpage
%%Trailer
%%EOF
