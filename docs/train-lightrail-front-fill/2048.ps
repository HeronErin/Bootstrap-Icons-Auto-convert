%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
624 0 m 606.852 0 591.004 9.148 582.43 24 c 573.855 38.852 573.855 57.148
 582.43 72 c 591.004 86.852 606.852 96 624 96 c 720 96 l 720 193.055 l 573.602
 199.199 398.785 230.879 279.551 255.934 c 170.398 278.785 96 375.84 96 
485.281 c 96 1296 l 96 1338.129 107.09 1379.516 128.152 1416 c 149.219 1452.484
 179.516 1482.781 216 1503.848 c 252.484 1524.91 293.871 1536 336 1536 c
 1200 1536 l 1242.129 1536 1283.516 1524.91 1320 1503.848 c 1356.484 1482.781
 1386.781 1452.484 1407.848 1416 c 1428.91 1379.516 1440 1338.129 1440 1296
 c 1440 485.281 l 1440 375.84 1365.602 278.883 1256.449 255.84 c 1137.219
 230.879 962.402 199.199 816 193.055 c 816 96 l 912 96 l 929.148 96 944.996
 86.852 953.57 72 c 962.145 57.148 962.145 38.852 953.57 24 c 944.996 9.148
 929.148 0 912 0 c h
768 384 m 877.055 384 1021.922 403.199 1113.984 417.215 c 1193.184 429.312
 1244.16 503.613 1233.41 580.125 c 1231.234 595.484 1228.996 612.188 1226.691
 630.238 c 1213.727 729.215 1200 859.105 1200 960 c 1200 1001.09 1202.305
 1049.566 1205.953 1100.543 c 1212.289 1189.824 1222.656 1284.863 1231.488
 1358.016 c 1235.52 1390.656 1239.168 1418.879 1241.953 1440 c 1144.992 
1440 l 1132.23 1344.266 1121.762 1248.238 1113.602 1152 c 897.984 1152 l
 863.426 1152 830.398 1138.273 806.016 1113.984 c 799.68 1107.57 791.031
 1103.973 782.016 1104 c 753.984 1104 l 744.969 1103.973 736.32 1107.57 
729.984 1113.984 c 705.609 1138.391 672.508 1152.07 638.016 1152 c 422.398
 1152 l 414.207 1248.238 403.707 1344.266 390.91 1440 c 294.145 1440 l 296.93
 1418.879 300.578 1390.656 304.512 1358.016 c 313.344 1284.961 323.711 1189.824
 330.047 1100.543 c 333.695 1049.566 336 1001.086 336 960 c 336 859.105 
322.273 729.215 309.312 630.238 c 302.594 580.125 l 291.84 503.516 342.914
 429.309 422.02 417.215 c 514.176 403.105 658.945 384 768 384 c 638.016 
1056 m 429.121 1056 l 430.945 1022.113 432 989.566 432 960 c 432 871.008
 422.016 763.105 411.266 672 c 1124.738 672 l 1113.984 763.105 1104.004 
871.008 1104.004 960 c 1104.004 989.566 1105.059 1022.113 1106.883 1056 
c 897.984 1056 l 888.969 1056.027 880.32 1052.43 873.984 1046.016 c 849.609
 1021.609 816.508 1007.93 782.016 1008 c 753.984 1008 l 719.426 1008 686.398
 1021.727 662.016 1046.016 c 655.68 1052.43 647.031 1056.027 638.016 1056
 c 1137.121 576 m 398.883 576 l 397.637 566.785 l 397.633 566.785 l 395.598
 554.379 398.543 541.676 405.82 531.43 c 413.102 521.184 424.129 514.227
 436.512 512.062 c 528.48 498.047 666.91 480 768 480 c 869.09 480 1007.52
 498.047 1099.488 512.062 c 1111.871 514.227 1122.898 521.184 1130.18 531.43
 c 1137.457 541.676 1140.402 554.379 1138.367 566.785 c h
576 1296 m 576 1313.148 566.852 1328.996 552 1337.57 c 537.148 1346.145
 518.852 1346.145 504 1337.57 c 489.148 1328.996 480 1313.148 480 1296 c
 480 1278.852 489.148 1263.004 504 1254.43 c 518.852 1245.855 537.148 1245.855
 552 1254.43 c 566.852 1263.004 576 1278.852 576 1296 c 576 1296 m 576 1278.852
 585.148 1263.004 600 1254.43 c 614.852 1245.855 633.148 1245.855 648 1254.43
 c 662.852 1263.004 672 1278.852 672 1296 c 672 1313.148 662.852 1328.996
 648 1337.57 c 633.148 1346.145 614.852 1346.145 600 1337.57 c 585.148 1328.996
 576 1313.148 576 1296 c 960 1296 m 960 1313.148 950.852 1328.996 936 1337.57
 c 921.148 1346.145 902.852 1346.145 888 1337.57 c 873.148 1328.996 864 
1313.148 864 1296 c 864 1278.852 873.148 1263.004 888 1254.43 c 902.852 
1245.855 921.148 1245.855 936 1254.43 c 950.852 1263.004 960 1278.852 960
 1296 c 960 1296 m 960 1278.852 969.148 1263.004 984 1254.43 c 998.852 1245.855
 1017.148 1245.855 1032 1254.43 c 1046.852 1263.004 1056 1278.852 1056 1296
 c 1056 1313.148 1046.852 1328.996 1032 1337.57 c 1017.148 1346.145 998.852
 1346.145 984 1337.57 c 969.148 1328.996 960 1313.148 960 1296 c f
Q Q
showpage
%%Trailer
%%EOF
