%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
312 0 m 303.426 0 295.504 4.574 291.215 12 c 286.93 19.426 286.93 28.574
 291.215 36 c 295.504 43.426 303.426 48 312 48 c 360 48 l 360 96.527 l 286.801
 99.598 199.391 115.438 139.777 127.969 c 85.199 139.391 48 187.922 48 242.641
 c 48 648 l 48 679.824 60.645 710.348 83.148 732.852 c 105.652 755.355 136.176
 768 168 768 c 600 768 l 631.824 768 662.348 755.355 684.852 732.852 c 707.355
 710.348 720 679.824 720 648 c 720 242.641 l 720 187.922 682.801 139.441
 628.223 127.922 c 568.605 115.441 481.199 99.602 408 96.531 c 408 48 l 
456 48 l 464.574 48 472.496 43.426 476.785 36 c 481.07 28.574 481.07 19.426
 476.785 12 c 472.496 4.574 464.574 0 456 0 c h
384 192 m 438.527 192 510.961 201.602 556.992 208.609 c 596.594 214.656
 622.082 251.809 616.703 290.066 c 615.613 297.746 614.496 306.098 613.344
 315.121 c 606.863 364.609 600 429.551 600 480 c 600 500.543 601.152 524.785
 602.977 550.273 c 606.145 594.914 611.328 642.434 615.746 679.008 c 617.762
 695.328 619.586 709.441 620.977 720 c 572.496 720 l 566.113 672.133 560.883
 624.117 556.801 576 c 448.992 576 l 431.711 576 415.199 569.137 403.008
 556.992 c 399.84 553.785 395.516 551.988 391.008 552 c 376.992 552 l 372.484
 551.988 368.16 553.785 364.992 556.992 c 352.805 569.195 336.254 576.035
 319.008 576 c 211.199 576 l 207.102 624.117 201.852 672.133 195.457 720
 c 147.07 720 l 148.461 709.441 150.285 695.328 152.254 679.008 c 156.668
 642.48 161.855 594.91 165.023 550.273 c 166.848 524.785 168 500.547 168
 480 c 168 429.551 161.137 364.609 154.656 315.121 c 151.297 290.066 l 145.922
 251.762 171.457 214.66 211.008 208.609 c 257.09 201.551 329.473 192 384
 192 c 319.008 528 m 214.559 528 l 215.469 511.055 216 494.785 216 480 c
 216 435.504 211.008 381.551 205.633 336 c 562.367 336 l 556.992 381.551
 552 435.504 552 480 c 552 494.785 552.527 511.055 553.441 528 c 448.992
 528 l 444.484 528.012 440.16 526.215 436.992 523.008 c 424.805 510.805 
408.254 503.965 391.008 504 c 376.992 504 l 359.711 504 343.199 510.863 
331.008 523.008 c 327.84 526.215 323.516 528.012 319.008 528 c 568.559 288
 m 199.438 288 l 198.812 283.391 l 198.816 283.391 l 197.801 277.191 199.27
 270.84 202.91 265.715 c 206.551 260.594 212.066 257.113 218.258 256.031
 c 264.238 249.023 333.457 240 384 240 c 434.543 240 503.762 249.023 549.742
 256.031 c 555.934 257.113 561.449 260.594 565.09 265.715 c 568.73 270.84
 570.199 277.191 569.184 283.391 c h
288 648 m 288 656.574 283.426 664.496 276 668.785 c 268.574 673.07 259.426
 673.07 252 668.785 c 244.574 664.496 240 656.574 240 648 c 240 639.426 
244.574 631.504 252 627.215 c 259.426 622.93 268.574 622.93 276 627.215 
c 283.426 631.504 288 639.426 288 648 c 288 648 m 288 639.426 292.574 631.504
 300 627.215 c 307.426 622.93 316.574 622.93 324 627.215 c 331.426 631.504
 336 639.426 336 648 c 336 656.574 331.426 664.496 324 668.785 c 316.574
 673.07 307.426 673.07 300 668.785 c 292.574 664.496 288 656.574 288 648
 c 480 648 m 480 656.574 475.426 664.496 468 668.785 c 460.574 673.07 451.426
 673.07 444 668.785 c 436.574 664.496 432 656.574 432 648 c 432 639.426 
436.574 631.504 444 627.215 c 451.426 622.93 460.574 622.93 468 627.215 
c 475.426 631.504 480 639.426 480 648 c 480 648 m 480 639.426 484.574 631.504
 492 627.215 c 499.426 622.93 508.574 622.93 516 627.215 c 523.426 631.504
 528 639.426 528 648 c 528 656.574 523.426 664.496 516 668.785 c 508.574
 673.07 499.426 673.07 492 668.785 c 484.574 664.496 480 656.574 480 648
 c f
Q Q
showpage
%%Trailer
%%EOF
