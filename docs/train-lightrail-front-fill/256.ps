%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 192
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
78 0 m 74.688 0 72 2.688 72 6 c 72 9.312 74.688 12 78 12 c 90 12 l 90 24.133
 l 71.699 24.902 49.848 28.859 34.945 31.992 c 21.301 34.848 12 46.98 12
 60.66 c 12 162 l 12 169.957 15.16 177.586 20.785 183.215 c 26.414 188.84
 34.043 192 42 192 c 150 192 l 157.957 192 165.586 188.84 171.215 183.215
 c 176.84 177.586 180 169.957 180 162 c 180 60.66 l 180 46.98 170.699 34.859
 157.055 31.98 c 142.152 28.859 120.297 24.902 102 24.133 c 102 12 l 114
 12 l 117.312 12 120 9.312 120 6 c 120 2.688 117.312 0 114 0 c h
96 48 m 109.633 48 127.738 50.398 139.246 52.152 c 149.145 53.664 155.52
 62.953 154.176 72.516 c 153.902 74.438 153.625 76.523 153.336 78.781 c 
151.715 91.152 150 107.387 150 120 c 150 125.137 150.289 131.195 150.742
 137.566 c 151.535 148.727 152.832 160.605 153.934 169.75 c 154.438 173.828
 154.895 177.359 155.242 179.996 c 143.121 179.996 l 143.125 180 l 141.527
 168.031 140.219 156.031 139.199 144 c 112.246 144 l 107.926 144 103.797
 142.285 100.75 139.246 c 100.754 139.246 l 99.961 138.445 98.879 137.996
 97.754 138 c 94.246 138 l 93.121 137.996 92.039 138.445 91.246 139.246 
c 88.199 142.297 84.062 144.008 79.754 144 c 52.801 144 l 51.777 156.031
 50.465 168.031 48.863 180 c 36.77 180 l 37.117 177.359 37.574 173.832 38.066
 169.754 c 39.172 160.621 40.465 148.73 41.258 137.57 c 41.715 131.199 42
 125.137 42 120.004 c 42 107.391 40.285 91.156 38.664 78.785 c 37.824 72.52
 l 36.48 62.945 42.863 53.668 52.754 52.156 c 64.273 50.387 82.367 48 96
 48 c 79.754 132 m 53.641 132 l 53.867 127.766 54 123.695 54 120 c 54 108.875
 52.754 95.387 51.406 84 c 140.59 84 l 139.246 95.387 137.996 108.875 137.996
 120 c 137.996 123.695 138.129 127.766 138.355 132 c 112.246 132 l 111.121
 132.004 110.039 131.555 109.246 130.754 c 106.199 127.703 102.062 125.992
 97.754 126 c 94.25 126 l 89.93 126 85.801 127.715 82.754 130.754 c 81.961
 131.555 80.879 132.004 79.754 132 c 142.141 72 m 49.859 72 l 49.703 70.848
 l 49.176 67.621 51.344 64.57 54.562 64.008 c 66.059 62.258 83.363 60 96
 60 c 108.637 60 125.941 62.258 137.438 64.008 c 140.656 64.57 142.824 67.621
 142.297 70.848 c h
72 162 m 72 165.312 69.312 168 66 168 c 62.688 168 60 165.312 60 162 c 
60 158.688 62.688 156 66 156 c 69.312 156 72 158.688 72 162 c 72 162 m 72
 158.688 74.688 156 78 156 c 81.312 156 84 158.688 84 162 c 84 165.312 81.312
 168 78 168 c 74.688 168 72 165.312 72 162 c 120 162 m 120 165.312 117.312
 168 114 168 c 110.688 168 108 165.312 108 162 c 108 158.688 110.688 156
 114 156 c 117.312 156 120 158.688 120 162 c 120 162 m 120 158.688 122.688
 156 126 156 c 129.312 156 132 158.688 132 162 c 132 165.312 129.312 168
 126 168 c 122.688 168 120 165.312 120 162 c f
Q Q
showpage
%%Trailer
%%EOF
