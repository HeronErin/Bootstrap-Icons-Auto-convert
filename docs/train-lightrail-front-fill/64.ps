%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 0 45 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 0 45 48
48 48 cairo_set_page_size
%%EndPageSetup
q 3 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
19.5 0 m 18.672 0 18 0.672 18 1.5 c 18 2.328 18.672 3 19.5 3 c 22.5 3 l
 22.5 6.031 l 17.926 6.223 12.461 7.215 8.734 7.996 c 5.324 8.711 3 11.746
 3 15.164 c 3 40.5 l 3 42.488 3.789 44.398 5.195 45.805 c 6.602 47.211 8.512
 48 10.5 48 c 37.5 48 l 39.488 48 41.398 47.211 42.805 45.805 c 44.211 44.398
 45 42.488 45 40.5 c 45 15.164 l 45 11.742 42.676 8.715 39.266 7.992 c 35.539
 7.211 30.078 6.223 25.5 6.031 c 25.5 3 l 28.5 3 l 29.328 3 30 2.328 30 
1.5 c 30 0.672 29.328 0 28.5 0 c h
24 12 m 27.406 12 31.934 12.602 34.812 13.039 c 37.289 13.418 38.879 15.738
 38.543 18.129 c 38.477 18.609 38.406 19.133 38.332 19.695 c 37.93 22.789
 37.5 26.848 37.5 30 c 37.5 31.285 37.57 32.801 37.688 34.391 c 37.887 37.18
 38.211 40.152 38.484 42.438 c 38.609 43.457 38.723 44.34 38.812 45 c 35.781
 45 l 35.383 42.008 35.055 39.008 34.801 36 c 28.062 36 l 26.984 36 25.949
 35.57 25.188 34.812 c 24.988 34.613 24.719 34.5 24.438 34.5 c 23.562 34.5
 l 23.281 34.5 23.012 34.613 22.812 34.812 c 22.051 35.574 21.016 36.004
 19.938 36 c 13.199 36 l 12.945 39.008 12.617 42.008 12.215 45 c 9.191 45
 l 9.277 44.34 9.391 43.457 9.516 42.438 c 9.793 40.156 10.117 37.18 10.312
 34.391 c 10.426 32.797 10.5 31.281 10.5 30 c 10.5 26.848 10.07 22.789 9.664
 19.695 c 9.453 18.129 l 9.117 15.734 10.715 13.414 13.184 13.039 c 16.066
 12.598 20.594 12 24 12 c 19.938 33 m 13.41 33 l 13.469 31.941 13.5 30.926
 13.5 30 c 13.5 27.219 13.188 23.848 12.852 21 c 35.148 21 l 34.812 23.848
 34.5 27.219 34.5 30 c 34.5 30.926 34.531 31.941 34.59 33 c 28.062 33 l 
27.781 33 27.512 32.887 27.312 32.688 c 26.551 31.926 25.516 31.496 24.438
 31.5 c 23.562 31.5 l 22.484 31.5 21.449 31.93 20.688 32.688 c 20.488 32.887
 20.219 33 19.938 33 c 35.535 18 m 12.465 18 l 12.426 17.711 l 12.293 16.906
 12.836 16.141 13.641 16.004 c 16.516 15.562 20.84 15 24 15 c 27.16 15 31.484
 15.562 34.359 16.004 c 35.164 16.141 35.707 16.906 35.574 17.711 c h
18 40.5 m 18 41.328 17.328 42 16.5 42 c 15.672 42 15 41.328 15 40.5 c 15
 39.672 15.672 39 16.5 39 c 17.328 39 18 39.672 18 40.5 c 18 40.5 m 18 39.672
 18.672 39 19.5 39 c 20.328 39 21 39.672 21 40.5 c 21 41.328 20.328 42 19.5
 42 c 18.672 42 18 41.328 18 40.5 c 30 40.5 m 30 41.328 29.328 42 28.5 42
 c 27.672 42 27 41.328 27 40.5 c 27 39.672 27.672 39 28.5 39 c 29.328 39
 30 39.672 30 40.5 c 30 40.5 m 30 39.672 30.672 39 31.5 39 c 32.328 39 33
 39.672 33 40.5 c 33 41.328 32.328 42 31.5 42 c 30.672 42 30 41.328 30 40.5
 c f
Q Q
showpage
%%Trailer
%%EOF
