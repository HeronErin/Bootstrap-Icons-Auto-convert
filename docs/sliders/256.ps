%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 181
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 181
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 181 rectclip
1 0 0 -1 0 192 cm q
0 g
138 24 m 131.57 24 125.625 27.43 122.41 33 c 119.195 38.57 119.195 45.43
 122.41 51 c 125.625 56.57 131.57 60 138 60 c 144.43 60 150.375 56.57 153.59
 51 c 156.805 45.43 156.805 38.57 153.59 33 c 150.375 27.43 144.43 24 138
 24 c 108.602 36 m 110.449 26.887 116.422 19.148 124.766 15.047 c 133.113
 10.945 142.887 10.945 151.234 15.047 c 159.578 19.148 165.551 26.887 167.398
 36 c 192 36 l 192 48 l 167.398 48 l 165.551 57.113 159.578 64.852 151.234
 68.953 c 142.887 73.055 133.113 73.055 124.766 68.953 c 116.422 64.852 
110.449 57.113 108.602 48 c 0 48 l 0 36 l h
54 84 m 47.57 84 41.625 87.43 38.41 93 c 35.195 98.57 35.195 105.43 38.41
 111 c 41.625 116.57 47.57 120 54 120 c 60.43 120 66.375 116.57 69.59 111
 c 72.805 105.43 72.805 98.57 69.59 93 c 66.375 87.43 60.43 84 54 84 c 24.602
 96 m 26.449 86.887 32.422 79.148 40.766 75.047 c 49.113 70.945 58.887 70.945
 67.234 75.047 c 75.578 79.148 81.551 86.887 83.398 96 c 192 96 l 192 108
 l 83.398 108 l 81.551 117.113 75.578 124.852 67.234 128.953 c 58.887 133.055
 49.113 133.055 40.766 128.953 c 32.422 124.852 26.449 117.113 24.602 108
 c 0 108 l 0 96 l h
138 144 m 131.57 144 125.625 147.43 122.41 153 c 119.195 158.57 119.195
 165.43 122.41 171 c 125.625 176.57 131.57 180 138 180 c 144.43 180 150.375
 176.57 153.59 171 c 156.805 165.43 156.805 158.57 153.59 153 c 150.375 
147.43 144.43 144 138 144 c 108.602 156 m 110.449 146.887 116.422 139.148
 124.766 135.047 c 133.113 130.945 142.887 130.945 151.234 135.047 c 159.578
 139.148 165.551 146.887 167.398 156 c 192 156 l 192 168 l 167.398 168 l
 165.551 177.113 159.578 184.852 151.234 188.953 c 142.887 193.055 133.113
 193.055 124.766 188.953 c 116.422 184.852 110.449 177.113 108.602 168 c
 0 168 l 0 156 l h
108.602 156 m f*
Q Q
showpage
%%Trailer
%%EOF
