%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 168 0 670 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 168 0 670 768
768 768 cairo_set_page_size
%%EndPageSetup
q 168 0 502 768 rectclip
1 0 0 -1 0 768 cm q
0 g
667.297 16.031 m 669.656 21.949 669.566 28.566 667.047 34.418 c 664.523
 40.273 659.781 44.883 653.855 47.23 c 545.664 90.527 l 526.465 183.023 
l 544.512 187.582 560.785 193.344 573.121 200.641 c 584.066 207.121 600 
219.648 600 240 c 600 242.207 599.824 244.32 599.473 246.336 c 553.297 681.602
 l 551.812 699.434 542.629 715.734 528.145 726.238 c 504.719 742.559 456.434
 768 383.664 768 c 310.895 768 262.609 742.559 239.184 726.238 c 224.699
 715.734 215.516 699.434 214.031 681.602 c 168.48 246.336 l 168.18 244.238
 168.02 242.121 168 240 c 168 219.648 183.938 207.121 194.879 200.641 c 
207.453 193.25 224.016 187.395 242.398 182.785 c 279.551 173.473 329.617
 168 384 168 c 418.176 168 450.672 170.16 479.281 174.098 c 501.555 67.777
 l 501.551 67.777 l 503.273 60.023 508.719 53.629 516.098 50.688 c 636.098
 2.688 l 642.004 0.32 648.609 0.398 654.457 2.898 c 660.309 5.402 664.926
 10.125 667.297 16.031 c 468.863 221.137 m 440.711 217.633 412.367 215.918
 384 216 c 332.352 216 286.414 221.281 254.062 229.344 c 243.355 231.809
 232.93 235.379 222.961 240 c 229.969 243.504 240.336 247.199 254.066 250.656
 c 286.414 258.719 332.352 264 384 264 c 411.406 264 437.23 262.559 460.223
 259.922 c h
482.879 305.426 m 453.359 309.602 419.617 312 384 312 c 329.617 312 279.551
 306.527 242.398 297.215 c 235.367 295.449 228.402 293.414 221.52 291.121
 c 261.742 676.562 l 262.367 682.371 264.621 685.492 266.637 686.883 c 283.773
 698.836 322.699 720.004 383.66 720.004 c 444.621 720.004 483.547 698.836
 500.684 686.883 c 502.699 685.492 505.004 682.371 505.578 676.562 c 546.473
 291.121 l 546.48 291.121 l 539.598 293.414 532.633 295.449 525.602 297.215
 c 511.508 300.652 497.246 303.375 482.879 305.375 c h
214.414 234.434 m 214.414 234.434 214.559 234.531 214.652 234.723 c h
553.582 234.434 m 553.344 234.723 l h
544.992 240 m 535.715 235.617 525.996 232.238 516 229.922 c 511.246 251.281
 l 513.887 250.656 l 527.613 247.199 537.984 243.504 544.992 240 c f
Q Q
showpage
%%Trailer
%%EOF
