%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 42 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 42 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 42 0 126 192 rectclip
1 0 0 -1 0 192 cm q
0 g
166.824 4.008 m 167.414 5.488 167.391 7.141 166.762 8.605 c 166.133 10.066
 164.945 11.219 163.465 11.809 c 136.418 22.633 l 131.617 45.758 l 136.129
 46.898 140.195 48.336 143.281 50.16 c 146.016 51.781 150 54.914 150 60 
c 150 60.551 149.957 61.078 149.867 61.586 c 138.324 170.402 l 138.324 170.398
 l 137.953 174.859 135.656 178.934 132.035 181.559 c 126.18 185.637 114.105
 192 95.914 192 c 77.723 192 65.648 185.641 59.793 181.559 c 59.797 181.559
 l 56.176 178.934 53.879 174.859 53.508 170.398 c 42.121 61.586 l 42.047
 61.059 42.004 60.531 42 60 c 42 54.91 45.984 51.781 48.719 50.16 c 51.863
 48.312 56.004 46.848 60.598 45.695 c 69.887 43.367 82.402 42 96 42 c 104.543
 42 112.668 42.539 119.82 43.523 c 125.387 16.945 l 125.82 15.008 127.18
 13.406 129.023 12.672 c 159.023 0.672 l 162.098 -0.559 165.59 0.934 166.824
 4.008 c 117.215 55.285 m 110.18 54.41 103.094 53.98 96 54 c 83.09 54 71.605
 55.32 63.516 57.336 c 60.84 57.953 58.234 58.844 55.738 60 c 57.492 60.875
 60.082 61.801 63.516 62.664 c 71.605 64.68 83.09 66 96 66 c 102.852 66 
109.309 65.641 115.055 64.98 c h
120.719 76.355 m 113.34 77.398 104.902 78 96 78 c 82.402 78 69.887 76.633
 60.602 74.305 c 58.84 73.863 57.102 73.355 55.379 72.781 c 65.434 169.141
 l 65.59 170.594 66.152 171.371 66.656 171.719 c 70.941 174.707 80.672 180
 95.914 180 c 111.152 180 120.887 174.707 125.172 171.719 c 125.676 171.371
 126.25 170.59 126.395 169.141 c 136.617 72.781 l 136.621 72.781 l 134.898
 73.355 133.16 73.863 131.398 74.305 c 127.875 75.164 124.312 75.844 120.719
 76.344 c h
53.605 58.609 m 53.605 58.609 53.641 58.633 53.664 58.68 c h
138.398 58.609 m 138.34 58.68 l h
136.246 60 m 133.93 58.902 131.5 58.059 129 57.48 c 127.812 62.82 l 128.473
 62.664 l 131.906 61.801 134.496 60.875 136.25 60 c f
Q Q
showpage
%%Trailer
%%EOF
