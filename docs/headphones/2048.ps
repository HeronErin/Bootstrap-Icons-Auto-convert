%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 192 1344 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 192 1344 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 192 1152 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 288 m 640.695 288 518.605 338.57 428.59 428.59 c 338.57 518.605 288
 640.695 288 768 c 288 864 l 384 864 l 409.461 864 433.879 874.113 451.883
 892.117 c 469.887 910.121 480 934.539 480 960 c 480 1248 l 480 1273.461
 469.887 1297.879 451.883 1315.883 c 433.879 1333.887 409.461 1344 384 1344
 c 288 1344 l 262.539 1344 238.121 1333.887 220.117 1315.883 c 202.113 1297.879
 192 1273.461 192 1248 c 192 768 l 192 615.234 252.684 468.727 360.707 360.707
 c 468.727 252.684 615.234 192 768 192 c 920.766 192 1067.273 252.684 1175.293
 360.707 c 1283.316 468.727 1344 615.234 1344 768 c 1344 1248 l 1344 1273.461
 1333.887 1297.879 1315.883 1315.883 c 1297.879 1333.887 1273.461 1344 1248
 1344 c 1152 1344 l 1126.539 1344 1102.121 1333.887 1084.117 1315.883 c 
1066.113 1297.879 1056 1273.461 1056 1248 c 1056 960 l 1056 934.539 1066.113
 910.121 1084.117 892.117 c 1102.121 874.113 1126.539 864 1152 864 c 1248
 864 l 1248 768 l 1248 683.742 1225.82 600.969 1183.691 528 c 1141.562 455.031
 1080.969 394.438 1008 352.309 c 935.031 310.18 852.258 288 768 288 c f
Q Q
showpage
%%Trailer
%%EOF
