%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
48 384 m 48 377.637 50.527 371.531 55.031 367.031 c 59.531 362.527 65.637
 360 72 360 c 696 360 l 704.574 360 712.496 364.574 716.785 372 c 721.07
 379.426 721.07 388.574 716.785 396 c 712.496 403.426 704.574 408 696 408
 c 72 408 l 65.637 408 59.531 405.473 55.031 400.969 c 50.527 396.469 48
 390.363 48 384 c 384 0 m 390.363 0 396.469 2.527 400.969 7.031 c 405.473
 11.531 408 17.637 408 24 c 408 206.062 l 463.008 151.008 l 469.078 144.938
 477.926 142.566 486.219 144.789 c 494.512 147.012 500.988 153.488 503.211
 161.781 c 505.434 170.074 503.062 178.922 496.992 184.992 c 400.992 280.992
 l 396.488 285.508 390.375 288.043 384 288.043 c 377.625 288.043 371.512
 285.508 367.008 280.992 c 271.008 184.992 l 264.938 178.922 262.566 170.074
 264.789 161.781 c 267.012 153.488 273.488 147.012 281.781 144.789 c 290.074
 142.566 298.922 144.938 304.992 151.008 c 360 206.062 l 360 24 l 360 17.637
 362.527 11.531 367.031 7.031 c 371.531 2.527 377.637 0 384 0 c 360 561.938
 m 304.992 616.992 l 298.922 623.062 290.074 625.434 281.781 623.211 c 273.488
 620.988 267.012 614.512 264.789 606.219 c 262.566 597.926 264.938 589.078
 271.008 583.008 c 367.008 487.008 l 371.512 482.492 377.625 479.957 384
 479.957 c 390.375 479.957 396.488 482.492 400.992 487.008 c 496.992 583.008
 l 503.062 589.078 505.434 597.926 503.211 606.219 c 500.988 614.512 494.512
 620.988 486.219 623.211 c 477.926 625.434 469.078 623.062 463.008 616.992
 c 408 561.938 l 408 744 l 408 752.574 403.426 760.496 396 764.785 c 388.574
 769.07 379.426 769.07 372 764.785 c 364.574 760.496 360 752.574 360 744
 c h
360 561.938 m f*
Q Q
showpage
%%Trailer
%%EOF
