%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
108 120 m 114.629 120 120 114.629 120 108 c 120 101.371 114.629 96 108 
96 c 101.371 96 96 101.371 96 108 c 96 114.629 101.371 120 108 120 c 72 
108 m 72 114.629 66.629 120 60 120 c 53.371 120 48 114.629 48 108 c 48 101.371
 53.371 96 60 96 c 66.629 96 72 101.371 72 108 c f
0 96 m 0 83.27 5.059 71.062 14.059 62.059 c 23.062 53.059 35.27 48 48 48
 c 336 48 l 348.73 48 360.938 53.059 369.941 62.059 c 378.941 71.062 384
 83.27 384 96 c 384 120 l 384 132.73 378.941 144.938 369.941 153.941 c 360.938
 162.941 348.73 168 336 168 c 204 168 l 204 240 l 213.547 240 222.703 243.793
 229.457 250.543 c 236.207 257.297 240 266.453 240 276 c 372 276 l 378.629
 276 384 281.371 384 288 c 384 294.629 378.629 300 372 300 c 240 300 l 240
 309.547 236.207 318.703 229.457 325.457 c 222.703 332.207 213.547 336 204
 336 c 180 336 l 170.453 336 161.297 332.207 154.543 325.457 c 147.793 318.703
 144 309.547 144 300 c 12 300 l 5.371 300 0 294.629 0 288 c 0 281.371 5.371
 276 12 276 c 144 276 l 144 266.453 147.793 257.297 154.543 250.543 c 161.297
 243.793 170.453 240 180 240 c 180 168 l 48 168 l 35.27 168 23.062 162.941
 14.059 153.941 c 5.059 144.938 0 132.73 0 120 c h
24 96 m 24 120 l 24 126.363 26.527 132.469 31.031 136.969 c 35.531 141.473
 41.637 144 48 144 c 336 144 l 342.363 144 348.469 141.473 352.969 136.969
 c 357.473 132.469 360 126.363 360 120 c 360 96 l 360 89.637 357.473 83.531
 352.969 79.031 c 348.469 74.527 342.363 72 336 72 c 48 72 l 41.637 72 35.531
 74.527 31.031 79.031 c 26.527 83.531 24 89.637 24 96 c 168 276 m 168 300
 l 168 303.184 169.266 306.234 171.516 308.484 c 173.766 310.734 176.816
 312 180 312 c 204 312 l 207.184 312 210.234 310.734 212.484 308.484 c 214.734
 306.234 216 303.184 216 300 c 216 276 l 216 272.816 214.734 269.766 212.484
 267.516 c 210.234 265.266 207.184 264 204 264 c 180 264 l 173.371 264 168
 269.371 168 276 c f
Q Q
showpage
%%Trailer
%%EOF
