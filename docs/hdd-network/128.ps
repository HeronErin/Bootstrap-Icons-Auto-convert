%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
27 30 m 28.656 30 30 28.656 30 27 c 30 25.344 28.656 24 27 24 c 25.344 
24 24 25.344 24 27 c 24 28.656 25.344 30 27 30 c 18 27 m 18 28.656 16.656
 30 15 30 c 13.344 30 12 28.656 12 27 c 12 25.344 13.344 24 15 24 c 16.656
 24 18 25.344 18 27 c f
0 24 m 0 17.371 5.371 12 12 12 c 84 12 l 87.184 12 90.234 13.266 92.484
 15.516 c 94.734 17.766 96 20.816 96 24 c 96 30 l 96 33.184 94.734 36.234
 92.484 38.484 c 90.234 40.734 87.184 42 84 42 c 51 42 l 51 60 l 55.969 
60 60 64.031 60 69 c 93 69 l 94.656 69 96 70.344 96 72 c 96 73.656 94.656
 75 93 75 c 60 75 l 60 79.969 55.969 84 51 84 c 45 84 l 40.031 84 36 79.969
 36 75 c 3 75 l 1.344 75 0 73.656 0 72 c 0 70.344 1.344 69 3 69 c 36 69 
l 36 64.031 40.031 60 45 60 c 45 42 l 12 42 l 5.371 42 0 36.629 0 30 c h
6 24 m 6 30 l 6 31.59 6.633 33.117 7.758 34.242 c 8.883 35.367 10.41 36
 12 36 c 84 36 l 85.59 36 87.117 35.367 88.242 34.242 c 89.367 33.117 90
 31.59 90 30 c 90 24 l 90 22.41 89.367 20.883 88.242 19.758 c 87.117 18.633
 85.59 18 84 18 c 12 18 l 8.688 18 6 20.688 6 24 c 42 69 m 42 75 l 42 75.797
 42.316 76.559 42.879 77.121 c 43.441 77.684 44.203 78 45 78 c 51 78 l 51.797
 78 52.559 77.684 53.121 77.121 c 53.684 76.559 54 75.797 54 75 c 54 69 
l 54 68.203 53.684 67.441 53.121 66.879 c 52.559 66.316 51.797 66 51 66 
c 45 66 l 43.344 66 42 67.344 42 69 c f
Q Q
showpage
%%Trailer
%%EOF
