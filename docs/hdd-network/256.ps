%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
54 60 m 57.312 60 60 57.312 60 54 c 60 50.688 57.312 48 54 48 c 50.688 
48 48 50.688 48 54 c 48 57.312 50.688 60 54 60 c 36 54 m 36 57.312 33.312
 60 30 60 c 26.688 60 24 57.312 24 54 c 24 50.688 26.688 48 30 48 c 33.312
 48 36 50.688 36 54 c f
0 48 m 0 41.637 2.527 35.531 7.031 31.031 c 11.531 26.527 17.637 24 24 
24 c 168 24 l 174.363 24 180.469 26.527 184.969 31.031 c 189.473 35.531 
192 41.637 192 48 c 192 60 l 192 66.363 189.473 72.469 184.969 76.969 c 
180.469 81.473 174.363 84 168 84 c 102 84 l 102 120 l 106.773 120 111.352
 121.895 114.727 125.273 c 118.105 128.648 120 133.227 120 138 c 186 138
 l 189.312 138 192 140.688 192 144 c 192 147.312 189.312 150 186 150 c 120
 150 l 120 154.773 118.105 159.352 114.727 162.727 c 111.352 166.105 106.773
 168 102 168 c 90 168 l 85.227 168 80.648 166.105 77.273 162.727 c 73.895
 159.352 72 154.773 72 150 c 6 150 l 2.688 150 0 147.312 0 144 c 0 140.688
 2.688 138 6 138 c 72 138 l 72 133.227 73.895 128.648 77.273 125.273 c 80.648
 121.895 85.227 120 90 120 c 90 84 l 24 84 l 17.637 84 11.531 81.473 7.031
 76.969 c 2.527 72.469 0 66.363 0 60 c h
12 48 m 12 60 l 12 63.184 13.266 66.234 15.516 68.484 c 17.766 70.734 20.816
 72 24 72 c 168 72 l 171.184 72 174.234 70.734 176.484 68.484 c 178.734 
66.234 180 63.184 180 60 c 180 48 l 180 44.816 178.734 41.766 176.484 39.516
 c 174.234 37.266 171.184 36 168 36 c 24 36 l 17.371 36 12 41.371 12 48 
c 84 138 m 84 150 l 84 151.59 84.633 153.117 85.758 154.242 c 86.883 155.367
 88.41 156 90 156 c 102 156 l 103.59 156 105.117 155.367 106.242 154.242
 c 107.367 153.117 108 151.59 108 150 c 108 138 l 108 136.41 107.367 134.883
 106.242 133.758 c 105.117 132.633 103.59 132 102 132 c 90 132 l 86.688 
132 84 134.688 84 138 c f
Q Q
showpage
%%Trailer
%%EOF
