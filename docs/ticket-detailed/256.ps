%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 36 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 36 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 36 192 120 rectclip
1 0 0 -1 0 192 cm q
0 g
48 66 m 48 62.688 50.688 60 54 60 c 138 60 l 141.312 60 144 62.688 144 
66 c 144 69.312 141.312 72 138 72 c 54 72 l 50.688 72 48 69.312 48 66 c 
48 126 m 48 122.688 50.688 120 54 120 c 138 120 l 141.312 120 144 122.688
 144 126 c 144 129.312 141.312 132 138 132 c 54 132 l 50.688 132 48 129.312
 48 126 c 60 84 m 53.371 84 48 89.371 48 96 c 48 102.629 53.371 108 60 108
 c 132 108 l 138.629 108 144 102.629 144 96 c 144 89.371 138.629 84 132 
84 c h
60 84 m f
0 54 m 0 49.227 1.895 44.648 5.273 41.273 c 8.648 37.895 13.227 36 18 36
 c 174 36 l 178.773 36 183.352 37.895 186.727 41.273 c 190.105 44.648 192
 49.227 192 54 c 192 72 l 192 73.59 191.367 75.117 190.242 76.242 c 189.117
 77.367 187.59 78 186 78 c 179.57 78 173.625 81.43 170.41 87 c 167.195 92.57
 167.195 99.43 170.41 105 c 173.625 110.57 179.57 114 186 114 c 187.59 114
 189.117 114.633 190.242 115.758 c 191.367 116.883 192 118.41 192 120 c 
192 138 l 192 142.773 190.105 147.352 186.727 150.727 c 183.352 154.105 
178.773 156 174 156 c 18 156 l 13.227 156 8.648 154.105 5.273 150.727 c 
1.895 147.352 0 142.773 0 138 c 0 120 l 0 116.688 2.688 114 6 114 c 12.43
 114 18.375 110.57 21.59 105 c 24.805 99.43 24.805 92.57 21.59 87 c 18.375
 81.43 12.43 78 6 78 c 2.688 78 0 75.312 0 72 c h
18 48 m 14.688 48 12 50.688 12 54 c 12 66.602 l 21.113 68.449 28.852 74.422
 32.953 82.766 c 37.055 91.113 37.055 100.887 32.953 109.234 c 28.852 117.578
 21.113 123.551 12 125.398 c 12 138 l 12 139.59 12.633 141.117 13.758 142.242
 c 14.883 143.367 16.41 144 18 144 c 174 144 l 175.59 144 177.117 143.367
 178.242 142.242 c 179.367 141.117 180 139.59 180 138 c 180 125.398 l 170.887
 123.551 163.148 117.578 159.047 109.234 c 154.945 100.887 154.945 91.113
 159.047 82.766 c 163.148 74.422 170.887 68.449 180 66.602 c 180 54 l 180
 52.41 179.367 50.883 178.242 49.758 c 177.117 48.633 175.59 48 174 48 c
 h
18 48 m f
Q Q
showpage
%%Trailer
%%EOF
