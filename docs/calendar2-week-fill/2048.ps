%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 0 m 348.73 0 360.938 5.059 369.941 14.059 c 378.941 23.062 384 35.27
 384 48 c 384 96 l 1152 96 l 1152 48 l 1152 30.852 1161.148 15.004 1176 
6.43 c 1190.852 -2.145 1209.148 -2.145 1224 6.43 c 1238.852 15.004 1248 
30.852 1248 48 c 1248 96 l 1344 96 l 1377.703 96 1410.812 104.871 1440 121.723
 c 1469.188 138.574 1493.426 162.812 1510.277 192 c 1527.129 221.188 1536
 254.297 1536 288 c 1536 1344 l 1536 1377.703 1527.129 1410.812 1510.277
 1440 c 1493.426 1469.188 1469.188 1493.426 1440 1510.277 c 1410.812 1527.129
 1377.703 1536 1344 1536 c 192 1536 l 141.078 1536 92.242 1515.773 56.234
 1479.766 c 20.227 1443.758 0 1394.922 0 1344 c 0 288 l 0 237.078 20.227
 188.242 56.234 152.234 c 92.242 116.227 141.078 96 192 96 c 288 96 l 288
 48 l 288 35.27 293.059 23.062 302.059 14.059 c 311.062 5.059 323.27 0 336
 0 c 1291.586 288 m 244.32 288 l 215.52 288 192 309.504 192 336 c 192 432
 l 192 458.496 215.426 480 244.32 480 c 1291.68 480 l 1320.48 480 1344 458.496
 1344 432 c 1344 336 l 1344 309.504 1320.574 288 1291.586 288 c 816 672 
m 803.27 672 791.062 677.059 782.059 686.059 c 773.059 695.062 768 707.27
 768 720 c 768 816 l 768 828.73 773.059 840.938 782.059 849.941 c 791.062
 858.941 803.27 864 816 864 c 912 864 l 924.73 864 936.938 858.941 945.941
 849.941 c 954.941 840.938 960 828.73 960 816 c 960 720 l 960 707.27 954.941
 695.062 945.941 686.059 c 936.938 677.059 924.73 672 912 672 c h
1104 672 m 1091.27 672 1079.062 677.059 1070.059 686.059 c 1061.059 695.062
 1056 707.27 1056 720 c 1056 816 l 1056 828.73 1061.059 840.938 1070.059
 849.941 c 1079.062 858.941 1091.27 864 1104 864 c 1200 864 l 1212.73 864
 1224.938 858.941 1233.941 849.941 c 1242.941 840.938 1248 828.73 1248 816
 c 1248 720 l 1248 707.27 1242.941 695.062 1233.941 686.059 c 1224.938 677.059
 1212.73 672 1200 672 c h
288 1008 m 288 1104 l 288 1116.73 293.059 1128.938 302.059 1137.941 c 311.062
 1146.941 323.27 1152 336 1152 c 432 1152 l 444.73 1152 456.938 1146.941
 465.941 1137.941 c 474.941 1128.938 480 1116.73 480 1104 c 480 1008 l 480
 995.27 474.941 983.062 465.941 974.059 c 456.938 965.059 444.73 960 432
 960 c 336 960 l 323.27 960 311.062 965.059 302.059 974.059 c 293.059 983.062
 288 995.27 288 1008 c 624 960 m 611.27 960 599.062 965.059 590.059 974.059
 c 581.059 983.062 576 995.27 576 1008 c 576 1104 l 576 1116.73 581.059 
1128.938 590.059 1137.941 c 599.062 1146.941 611.27 1152 624 1152 c 720 
1152 l 732.73 1152 744.938 1146.941 753.941 1137.941 c 762.941 1128.938 
768 1116.73 768 1104 c 768 1008 l 768 995.27 762.941 983.062 753.941 974.059
 c 744.938 965.059 732.73 960 720 960 c h
624 960 m f
Q Q
showpage
%%Trailer
%%EOF
