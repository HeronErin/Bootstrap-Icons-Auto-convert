%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 1 1 5 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 1 1 5 5
6 6 cairo_set_page_size
%%EndPageSetup
q 1 1 4 4 rectclip
1 0 0 -1 0 6 cm q
0 g
4.5 4.5 m 4.598 4.5 4.695 4.461 4.766 4.391 c 4.836 4.32 4.875 4.223 4.875
 4.125 c 4.875 3.211 l 4.875 3.109 4.836 3.016 4.766 2.945 c 4.695 2.875
 4.598 2.836 4.5 2.836 c 3.98 2.836 l 3.98 2.703 3.988 2.574 4.004 2.441
 c 4.027 2.301 4.066 2.18 4.121 2.07 c 4.176 1.961 4.246 1.875 4.332 1.812
 c 4.418 1.742 4.527 1.707 4.656 1.707 c 4.652 1.125 l 4.434 1.125 4.246
 1.172 4.082 1.266 c 4.086 1.266 l 3.922 1.355 3.781 1.484 3.676 1.637 c
 3.57 1.805 3.492 1.988 3.445 2.184 c 3.398 2.398 3.375 2.617 3.375 2.836
 c 3.375 4.125 l 3.375 4.223 3.414 4.32 3.484 4.391 c 3.555 4.461 3.652 
4.5 3.75 4.5 c h
2.25 4.5 m 2.348 4.5 2.445 4.461 2.516 4.391 c 2.586 4.32 2.625 4.223 2.625
 4.125 c 2.625 3.211 l 2.625 3.109 2.586 3.016 2.516 2.945 c 2.445 2.875
 2.348 2.836 2.25 2.836 c 1.73 2.836 l 1.73 2.703 1.738 2.574 1.754 2.441
 c 1.777 2.301 1.816 2.18 1.871 2.07 c 1.926 1.961 1.996 1.875 2.082 1.812
 c 2.168 1.742 2.277 1.707 2.406 1.707 c 2.402 1.125 l 2.184 1.125 1.996
 1.172 1.832 1.266 c 1.836 1.266 l 1.672 1.355 1.531 1.484 1.426 1.637 c
 1.32 1.805 1.242 1.988 1.195 2.184 c 1.148 2.398 1.125 2.617 1.125 2.836
 c 1.125 4.125 l 1.125 4.223 1.164 4.32 1.234 4.391 c 1.305 4.461 1.402 
4.5 1.5 4.5 c h
2.25 4.5 m f
Q Q
showpage
%%Trailer
%%EOF
