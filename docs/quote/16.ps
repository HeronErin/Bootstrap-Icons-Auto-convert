%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 2 3 10 10
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 2 3 10 10
12 12 cairo_set_page_size
%%EndPageSetup
q 2 3 8 7 rectclip
1 0 0 -1 0 12 cm q
0 g
9 9 m 9.199 9 9.391 8.922 9.531 8.781 c 9.672 8.641 9.75 8.449 9.75 8.25
 c 9.75 6.418 l 9.75 6.219 9.672 6.027 9.531 5.887 c 9.391 5.746 9.199 5.668
 9 5.668 c 7.961 5.668 l 7.961 5.406 7.977 5.141 8.008 4.879 c 8.055 4.602
 8.133 4.352 8.242 4.137 c 8.352 3.918 8.492 3.75 8.66 3.625 c 8.832 3.484
 9.047 3.414 9.312 3.414 c 9.309 2.25 l 8.875 2.25 8.496 2.344 8.168 2.527
 c 7.844 2.711 7.566 2.969 7.355 3.273 c 7.141 3.609 6.984 3.98 6.891 4.367
 c 6.793 4.793 6.746 5.23 6.75 5.668 c 6.75 8.25 l 6.75 8.449 6.828 8.641
 6.969 8.781 c 7.109 8.922 7.301 9 7.5 9 c h
4.5 9 m 4.699 9 4.891 8.922 5.031 8.781 c 5.172 8.641 5.25 8.449 5.25 8.25
 c 5.25 6.418 l 5.25 6.219 5.172 6.027 5.031 5.887 c 4.891 5.746 4.699 5.668
 4.5 5.668 c 3.461 5.668 l 3.461 5.406 3.477 5.141 3.508 4.879 c 3.555 4.602
 3.633 4.352 3.742 4.137 c 3.852 3.918 3.992 3.75 4.16 3.625 c 4.332 3.484
 4.547 3.414 4.812 3.414 c 4.809 2.25 l 4.375 2.25 3.996 2.344 3.668 2.527
 c 3.344 2.711 3.066 2.969 2.855 3.273 c 2.641 3.609 2.484 3.98 2.391 4.367
 c 2.293 4.793 2.246 5.23 2.25 5.668 c 2.25 8.25 l 2.25 8.449 2.328 8.641
 2.469 8.781 c 2.609 8.922 2.801 9 3 9 c h
4.5 9 m f
Q Q
showpage
%%Trailer
%%EOF
