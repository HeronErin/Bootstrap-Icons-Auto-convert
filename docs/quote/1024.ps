%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 143 192 624 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 143 192 624 624
768 768 cairo_set_page_size
%%EndPageSetup
q 143 192 481 432 rectclip
1 0 0 -1 0 768 cm q
0 g
576 576 m 588.73 576 600.938 570.941 609.941 561.941 c 618.941 552.938 
624 540.73 624 528 c 624 410.785 l 624 398.055 618.941 385.844 609.941 376.844
 c 600.938 367.84 588.73 362.785 576 362.785 c 509.375 362.785 l 509.375
 345.922 510.367 329.059 512.352 312.191 c 515.328 294.336 520.289 278.465
 527.23 264.574 c 534.176 250.688 543.117 239.758 554.062 231.789 c 564.941
 222.859 578.832 218.398 595.727 218.398 c 595.727 144 l 567.949 144 543.629
 149.953 522.766 161.855 c 522.77 161.855 l 502.047 173.609 484.246 189.887
 470.688 209.473 c 457.039 231.031 446.984 254.668 440.93 279.457 c 434.801
 306.805 431.809 334.758 432 362.785 c 432 528 l 432 540.73 437.059 552.938
 446.059 561.941 c 455.062 570.941 467.27 576 480 576 c h
288 576 m 300.73 576 312.938 570.941 321.941 561.941 c 330.941 552.938 
336 540.73 336 528 c 336 410.785 l 336 398.055 330.941 385.844 321.941 376.844
 c 312.938 367.84 300.73 362.785 288 362.785 c 221.375 362.785 l 221.375
 345.922 222.367 329.059 224.352 312.191 c 227.359 294.336 232.32 278.465
 239.23 264.574 c 246.176 250.688 255.117 239.758 266.062 231.789 c 276.941
 222.859 290.832 218.398 307.727 218.398 c 307.727 144 l 279.949 144 255.629
 149.953 234.766 161.855 c 234.77 161.855 l 214.047 173.609 196.246 189.887
 182.688 209.473 c 169.039 231.031 158.984 254.668 152.93 279.457 c 146.801
 306.805 143.809 334.758 144 362.785 c 144 528 l 144 540.73 149.059 552.938
 158.059 561.941 c 167.062 570.941 179.27 576 192 576 c h
288 576 m f
Q Q
showpage
%%Trailer
%%EOF
