%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1440 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1440 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1440 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
672 240 m 672 227.27 677.059 215.062 686.059 206.059 c 695.062 197.059 
707.27 192 720 192 c 1392 192 l 1404.73 192 1416.938 197.059 1425.941 206.059
 c 1434.941 215.062 1440 227.27 1440 240 c 1440 336 l 1440 348.73 1434.941
 360.938 1425.941 369.941 c 1416.938 378.941 1404.73 384 1392 384 c 720 
384 l 707.27 384 695.062 378.941 686.059 369.941 c 677.059 360.938 672 348.73
 672 336 c h
0 1152 m 0 1075.617 30.344 1002.363 84.352 948.352 c 138.363 894.344 211.617
 864 288 864 c 364.383 864 437.637 894.344 491.648 948.352 c 545.656 1002.363
 576 1075.617 576 1152 c 576 1228.383 545.656 1301.637 491.648 1355.648 
c 437.637 1409.656 364.383 1440 288 1440 c 211.617 1440 138.363 1409.656
 84.352 1355.648 c 30.344 1301.637 0 1228.383 0 1152 c 672 1008 m 672 995.27
 677.059 983.062 686.059 974.059 c 695.062 965.059 707.27 960 720 960 c 
1392 960 l 1404.73 960 1416.938 965.059 1425.941 974.059 c 1434.941 983.062
 1440 995.27 1440 1008 c 1440 1104 l 1440 1116.73 1434.941 1128.938 1425.941
 1137.941 c 1416.938 1146.941 1404.73 1152 1392 1152 c 720 1152 l 707.27
 1152 695.062 1146.941 686.059 1137.941 c 677.059 1128.938 672 1116.73 672
 1104 c h
672 528 m 672 515.27 677.059 503.062 686.059 494.059 c 695.062 485.059 
707.27 480 720 480 c 1200 480 l 1217.148 480 1232.996 489.148 1241.57 504
 c 1250.145 518.852 1250.145 537.148 1241.57 552 c 1232.996 566.852 1217.148
 576 1200 576 c 720 576 l 707.27 576 695.062 570.941 686.059 561.941 c 677.059
 552.938 672 540.73 672 528 c 672 1296 m 672 1283.27 677.059 1271.062 686.059
 1262.059 c 695.062 1253.059 707.27 1248 720 1248 c 1200 1248 l 1217.148
 1248 1232.996 1257.148 1241.57 1272 c 1250.145 1286.852 1250.145 1305.148
 1241.57 1320 c 1232.996 1334.852 1217.148 1344 1200 1344 c 720 1344 l 707.27
 1344 695.062 1338.941 686.059 1329.941 c 677.059 1320.938 672 1308.73 672
 1296 c 288 96 m 211.617 96 138.363 126.344 84.352 180.352 c 30.344 234.363
 0 307.617 0 384 c 0 460.383 30.344 533.637 84.352 587.648 c 138.363 641.656
 211.617 672 288 672 c 364.383 672 437.637 641.656 491.648 587.648 c 545.656
 533.637 576 460.383 576 384 c 576 307.617 545.656 234.363 491.648 180.352
 c 437.637 126.344 364.383 96 288 96 c 288 528 m 236.555 528 189.016 500.555
 163.293 456 c 137.57 411.445 137.57 356.555 163.293 312 c 189.016 267.445
 236.555 240 288 240 c 339.445 240 386.984 267.445 412.707 312 c 438.43 
356.555 438.43 411.445 412.707 456 c 386.984 500.555 339.445 528 288 528
 c f
Q Q
showpage
%%Trailer
%%EOF
