%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 360 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 360 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 360 336 rectclip
1 0 0 -1 0 384 cm q
0 g
168 60 m 168 53.371 173.371 48 180 48 c 348 48 l 351.184 48 354.234 49.266
 356.484 51.516 c 358.734 53.766 360 56.816 360 60 c 360 84 l 360 87.184
 358.734 90.234 356.484 92.484 c 354.234 94.734 351.184 96 348 96 c 180 
96 l 173.371 96 168 90.629 168 84 c h
0 288 m 0 262.277 13.723 238.508 36 225.645 c 58.277 212.785 85.723 212.785
 108 225.645 c 130.277 238.508 144 262.277 144 288 c 144 313.723 130.277
 337.492 108 350.355 c 85.723 363.215 58.277 363.215 36 350.355 c 13.723
 337.492 0 313.723 0 288 c 168 252 m 168 245.371 173.371 240 180 240 c 348
 240 l 351.184 240 354.234 241.266 356.484 243.516 c 358.734 245.766 360
 248.816 360 252 c 360 276 l 360 279.184 358.734 282.234 356.484 284.484
 c 354.234 286.734 351.184 288 348 288 c 180 288 l 173.371 288 168 282.629
 168 276 c h
168 132 m 168 125.371 173.371 120 180 120 c 300 120 l 306.629 120 312 125.371
 312 132 c 312 138.629 306.629 144 300 144 c 180 144 l 173.371 144 168 138.629
 168 132 c 168 324 m 168 317.371 173.371 312 180 312 c 300 312 l 306.629
 312 312 317.371 312 324 c 312 330.629 306.629 336 300 336 c 180 336 l 173.371
 336 168 330.629 168 324 c 72 24 m 46.277 24 22.508 37.723 9.645 60 c -3.215
 82.277 -3.215 109.723 9.645 132 c 22.508 154.277 46.277 168 72 168 c 97.723
 168 121.492 154.277 134.355 132 c 147.215 109.723 147.215 82.277 134.355
 60 c 121.492 37.723 97.723 24 72 24 c 72 132 m 59.137 132 47.254 125.137
 40.824 114 c 34.391 102.863 34.391 89.137 40.824 78 c 47.254 66.863 59.137
 60 72 60 c 84.863 60 96.746 66.863 103.176 78 c 109.609 89.137 109.609 
102.863 103.176 114 c 96.746 125.137 84.863 132 72 132 c f
Q Q
showpage
%%Trailer
%%EOF
