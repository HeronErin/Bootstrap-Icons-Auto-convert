%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 720 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 720 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 720 672 rectclip
1 0 0 -1 0 768 cm q
0 g
336 120 m 336 113.637 338.527 107.531 343.031 103.031 c 347.531 98.527 
353.637 96 360 96 c 696 96 l 702.363 96 708.469 98.527 712.969 103.031 c
 717.473 107.531 720 113.637 720 120 c 720 168 l 720 174.363 717.473 180.469
 712.969 184.969 c 708.469 189.473 702.363 192 696 192 c 360 192 l 353.637
 192 347.531 189.473 343.031 184.969 c 338.527 180.469 336 174.363 336 168
 c h
0 576 m 0 524.555 27.445 477.016 72 451.293 c 116.555 425.57 171.445 425.57
 216 451.293 c 260.555 477.016 288 524.555 288 576 c 288 627.445 260.555
 674.984 216 700.707 c 171.445 726.43 116.555 726.43 72 700.707 c 27.445
 674.984 0 627.445 0 576 c 336 504 m 336 497.637 338.527 491.531 343.031
 487.031 c 347.531 482.527 353.637 480 360 480 c 696 480 l 702.363 480 708.469
 482.527 712.969 487.031 c 717.473 491.531 720 497.637 720 504 c 720 552
 l 720 558.363 717.473 564.469 712.969 568.969 c 708.469 573.473 702.363
 576 696 576 c 360 576 l 353.637 576 347.531 573.473 343.031 568.969 c 338.527
 564.469 336 558.363 336 552 c h
336 264 m 336 257.637 338.527 251.531 343.031 247.031 c 347.531 242.527
 353.637 240 360 240 c 600 240 l 608.574 240 616.496 244.574 620.785 252
 c 625.07 259.426 625.07 268.574 620.785 276 c 616.496 283.426 608.574 288
 600 288 c 360 288 l 353.637 288 347.531 285.473 343.031 280.969 c 338.527
 276.469 336 270.363 336 264 c 336 648 m 336 641.637 338.527 635.531 343.031
 631.031 c 347.531 626.527 353.637 624 360 624 c 600 624 l 608.574 624 616.496
 628.574 620.785 636 c 625.07 643.426 625.07 652.574 620.785 660 c 616.496
 667.426 608.574 672 600 672 c 360 672 l 353.637 672 347.531 669.473 343.031
 664.969 c 338.527 660.469 336 654.363 336 648 c 144 48 m 92.555 48 45.016
 75.445 19.293 120 c -6.43 164.555 -6.43 219.445 19.293 264 c 45.016 308.555
 92.555 336 144 336 c 195.445 336 242.984 308.555 268.707 264 c 294.43 219.445
 294.43 164.555 268.707 120 c 242.984 75.445 195.445 48 144 48 c 144 264
 m 118.277 264 94.508 250.277 81.645 228 c 68.785 205.723 68.785 178.277
 81.645 156 c 94.508 133.723 118.277 120 144 120 c 169.723 120 193.492 133.723
 206.355 156 c 219.215 178.277 219.215 205.723 206.355 228 c 193.492 250.277
 169.723 264 144 264 c f
Q Q
showpage
%%Trailer
%%EOF
