%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 96 1503 1489
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 96 1503 1489
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 96 1407 1393 rectclip
1 0 0 -1 0 1536 cm q
0 g
1488.191 186.238 m 1497.16 195.238 1502.199 207.422 1502.199 220.129 c 
1502.199 232.832 1497.16 245.02 1488.191 254.016 c 1388.062 354.238 l 1196.062
 162.238 l 1296.191 62.016 l 1305.191 53.016 1317.398 47.961 1330.129 47.961
 c 1342.855 47.961 1355.062 53.016 1364.062 62.016 c 1488.191 186.145 l 
h
1320.191 422.016 m 1128.191 230.016 l 474.145 884.16 l 468.859 889.441 
464.883 895.887 462.527 902.977 c 385.246 1134.719 l 383.371 1140.383 383.668
 1146.539 386.082 1151.992 c 388.496 1157.449 392.855 1161.809 398.312 1164.223
 c 403.766 1166.637 409.922 1166.934 415.586 1165.055 c 647.328 1087.773
 l 647.328 1087.777 l 654.41 1085.449 660.852 1081.504 666.145 1076.258 
c 1320.191 422.113 l h
1320.191 422.016 m f
96 1296 m 96 1334.191 111.172 1370.816 138.176 1397.824 c 165.184 1424.828
 201.809 1440 240 1440 c 1296 1440 l 1334.191 1440 1370.816 1424.828 1397.824
 1397.824 c 1424.828 1370.816 1440 1334.191 1440 1296 c 1440 720 l 1440 
702.852 1430.852 687.004 1416 678.43 c 1401.148 669.855 1382.852 669.855
 1368 678.43 c 1353.148 687.004 1344 702.852 1344 720 c 1344 1296 l 1344
 1308.73 1338.941 1320.938 1329.941 1329.941 c 1320.938 1338.941 1308.73
 1344 1296 1344 c 240 1344 l 227.27 1344 215.062 1338.941 206.059 1329.941
 c 197.059 1320.938 192 1308.73 192 1296 c 192 240 l 192 227.27 197.059 
215.062 206.059 206.059 c 215.062 197.059 227.27 192 240 192 c 864 192 l
 881.148 192 896.996 182.852 905.57 168 c 914.145 153.148 914.145 134.852
 905.57 120 c 896.996 105.148 881.148 96 864 96 c 240 96 l 201.809 96 165.184
 111.172 138.176 138.176 c 111.172 165.184 96 201.809 96 240 c h
96 1296 m f*
Q Q
showpage
%%Trailer
%%EOF
