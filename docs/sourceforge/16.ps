%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6.848 6.324 m 6.848 4.371 6.152 3.48 5.781 3.145 c 5.781 3.141 l 5.711 
3.078 5.594 3.137 5.609 3.234 c 5.68 4.34 4.289 4.613 4.289 6.344 c 4.289
 6.352 l 4.289 7.406 5.086 8.266 6.07 8.266 c 7.055 8.266 7.852 7.406 7.852
 6.352 c 7.852 6.344 l 7.852 5.852 7.668 5.383 7.484 5.035 c 7.441 4.965
 7.34 4.992 7.352 5.055 c 7.691 6.547 6.852 7.469 6.852 6.32 c h
6.848 6.324 m f
4.727 10.441 m 4.68 10.441 4.637 10.422 4.605 10.391 c 0.047 5.84 l -0.016
 5.777 -0.016 5.664 0.047 5.594 c 4.863 0.789 l 4.859 0.793 l 4.895 0.77
 4.934 0.754 4.973 0.75 c 6.355 0.75 l 6.438 0.75 6.488 0.801 6.508 0.852
 c 6.535 0.914 6.52 0.988 6.469 1.035 c 1.953 5.555 l 1.906 5.598 1.883 
5.656 1.883 5.719 c 1.883 5.781 1.906 5.84 1.953 5.883 c 5.527 9.461 l 5.59
 9.523 5.59 9.637 5.527 9.707 c 4.84 10.402 l 4.805 10.426 4.77 10.438 4.727
 10.441 c 5.637 11.238 m 5.641 11.238 l 5.488 11.242 5.414 11.055 5.527 
10.953 c 10.055 6.434 l 10.098 6.391 10.125 6.332 10.125 6.27 c 10.129 6.207
 10.102 6.148 10.055 6.105 c 6.469 2.527 l 6.406 2.465 6.406 2.352 6.469
 2.281 c 7.164 1.586 l 7.164 1.59 l 7.199 1.555 7.242 1.539 7.289 1.539 
c 7.34 1.539 7.371 1.57 7.402 1.602 c 11.949 6.152 l 11.98 6.184 12 6.223
 12 6.273 c 12 6.27 l 12 6.316 11.98 6.359 11.949 6.395 c 7.133 11.199 l
 7.102 11.23 7.059 11.25 7.012 11.25 c 5.641 11.25 l h
5.637 11.238 m f
Q Q
showpage
%%Trailer
%%EOF
