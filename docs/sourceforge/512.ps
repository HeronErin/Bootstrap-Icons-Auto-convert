%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
219.121 202.32 m 219.121 139.824 196.824 111.359 185.043 100.559 c 185.039
 100.559 l 183.992 99.625 182.469 99.438 181.227 100.098 c 179.988 100.758
 179.285 102.117 179.473 103.512 c 181.754 138.84 137.184 147.672 137.184
 202.969 c 137.184 203.281 l 137.184 236.977 162.742 264.48 194.207 264.48
 c 225.672 264.48 251.254 236.977 251.254 203.281 c 251.254 202.969 l 251.254
 187.25 245.352 172.199 239.445 161.09 c 238.125 158.785 234.859 159.77 
235.172 161.738 c 245.996 209.5 219.117 238.945 219.117 202.297 c h
219.121 202.32 m f
151.273 334.152 m 149.805 334.109 148.402 333.527 147.336 332.52 c 1.465
 186.938 l -0.48 184.969 -0.48 181.371 1.465 179.09 c 155.543 25.32 l 156.598
 24.566 157.832 24.109 159.121 24 c 203.379 24 l 205.996 24 207.625 25.633
 208.273 27.266 c 209.121 29.309 208.602 31.668 206.977 33.168 c 62.449 
177.77 l 61.035 179.141 60.238 181.027 60.238 183 c 60.238 184.973 61.035
 186.859 62.449 188.23 c 176.832 302.734 l 178.801 304.703 178.801 308.301
 176.832 310.605 c 154.871 332.852 l 154.871 332.855 l 153.812 333.605 152.566
 334.051 151.273 334.152 c 180.457 359.664 m 178.273 359.676 176.312 358.344
 175.512 356.312 c 174.715 354.285 175.25 351.973 176.855 350.496 c 321.719
 205.895 l 323.133 204.512 323.957 202.641 324.023 200.664 c 324.109 198.656
 323.258 196.727 321.719 195.434 c 207 80.93 l 205.031 78.961 205.031 75.363
 207 73.082 c 229.297 50.836 l 229.297 50.832 l 230.332 49.789 231.738 49.203
 233.207 49.199 c 234.863 49.199 235.848 50.16 236.809 51.145 c 382.367 
196.754 l 383.328 197.715 384 199.035 384 200.664 c 384.004 202.141 383.418
 203.559 382.367 204.602 c 228.289 358.371 l 228.289 358.367 l 227.258 359.406
 225.859 359.992 224.398 360 c 180.48 360 l h
180.457 359.664 m f
Q Q
showpage
%%Trailer
%%EOF
