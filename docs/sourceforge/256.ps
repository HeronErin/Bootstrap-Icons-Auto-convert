%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 180
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 168 rectclip
1 0 0 -1 0 192 cm q
0 g
109.559 101.16 m 109.559 69.914 98.41 55.68 92.52 50.281 c 91.996 49.812
 91.234 49.719 90.613 50.051 c 89.992 50.379 89.645 51.059 89.734 51.758
 c 90.875 69.422 68.59 73.836 68.59 101.484 c 68.59 101.641 l 68.59 118.488
 81.371 132.242 97.102 132.242 c 112.832 132.242 125.625 118.488 125.625
 101.641 c 125.625 101.484 l 125.625 93.625 122.672 86.102 119.723 80.543
 c 119.062 79.391 117.43 79.883 117.586 80.867 c 122.996 104.746 109.559
 119.473 109.559 101.148 c h
109.559 101.16 m f
75.637 167.074 m 74.902 167.055 74.203 166.762 73.668 166.262 c 0.73 93.469
 l -0.242 92.484 -0.242 90.684 0.73 89.543 c 77.77 12.66 l 77.773 12.66 
l 78.297 12.285 78.914 12.055 79.559 12 c 101.688 12 l 102.996 12 103.812
 12.816 104.137 13.633 c 104.559 14.656 104.301 15.832 103.488 16.586 c 
31.223 88.883 l 30.516 89.57 30.117 90.516 30.117 91.5 c 30.117 92.484 30.516
 93.43 31.223 94.117 c 88.414 151.371 l 89.398 152.355 89.398 154.156 88.414
 155.309 c 77.434 166.434 l 77.438 166.43 l 76.906 166.801 76.285 167.027
 75.637 167.074 c 90.23 179.832 m 90.227 179.832 l 89.137 179.836 88.156
 179.172 87.758 178.156 c 87.359 177.141 87.625 175.984 88.43 175.246 c 
160.863 102.945 l 160.859 102.949 l 161.566 102.258 161.98 101.32 162.012
 100.332 c 162.055 99.328 161.629 98.363 160.859 97.715 c 103.5 40.461 l
 102.516 39.477 102.516 37.676 103.5 36.535 c 114.648 25.41 l 114.648 25.414
 l 115.164 24.895 115.871 24.602 116.605 24.602 c 117.434 24.602 117.926
 25.082 118.406 25.574 c 191.188 98.379 l 191.668 98.859 192.004 99.52 192.004
 100.336 c 192 100.332 l 192.004 101.07 191.707 101.781 191.184 102.301 
c 114.145 179.184 l 113.629 179.703 112.93 179.996 112.199 180 c 90.238 
180 l h
90.23 179.832 m f
Q Q
showpage
%%Trailer
%%EOF
