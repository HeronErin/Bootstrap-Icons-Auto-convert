%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.422 3.16 m 3.422 2.184 3.074 1.738 2.891 1.57 c 2.855 1.539 2.797 1.57
 2.805 1.617 c 2.84 2.168 2.145 2.309 2.145 3.172 c 2.145 3.176 l 2.145 
3.703 2.543 4.133 3.035 4.133 c 3.527 4.133 3.926 3.703 3.926 3.176 c 3.926
 3.172 l 3.926 2.926 3.832 2.691 3.742 2.516 c 3.723 2.48 3.672 2.496 3.676
 2.527 c 3.844 3.273 3.426 3.734 3.426 3.16 c h
3.422 3.16 m f
2.363 5.223 m 2.34 5.219 2.32 5.211 2.301 5.195 c 0.023 2.922 l -0.008 
2.891 -0.008 2.836 0.023 2.801 c 2.43 0.398 l 2.43 0.395 l 2.445 0.383 2.465
 0.375 2.484 0.375 c 3.176 0.375 l 3.215 0.375 3.242 0.402 3.254 0.426 c
 3.266 0.457 3.258 0.496 3.234 0.52 c 0.977 2.777 l 0.93 2.824 0.93 2.895
 0.977 2.941 c 2.766 4.73 l 2.797 4.762 2.797 4.816 2.766 4.852 c 2.422 
5.199 l 2.418 5.199 l 2.402 5.211 2.383 5.219 2.363 5.223 c 2.82 5.621 m
 2.746 5.621 2.707 5.527 2.762 5.477 c 5.023 3.219 l 5.027 3.219 l 5.051
 3.195 5.062 3.168 5.062 3.137 c 5.062 3.105 5.051 3.074 5.027 3.055 c 3.234
 1.266 l 3.203 1.234 3.203 1.18 3.234 1.145 c 3.582 0.797 l 3.582 0.793 
l 3.598 0.777 3.621 0.77 3.645 0.77 c 3.672 0.77 3.688 0.785 3.699 0.801
 c 5.973 3.074 l 5.988 3.09 6 3.109 6 3.137 c 6 3.16 5.992 3.18 5.973 3.195
 c 3.566 5.598 l 3.551 5.617 3.527 5.625 3.508 5.625 c 2.82 5.625 l h
2.82 5.621 m f
Q Q
showpage
%%Trailer
%%EOF
