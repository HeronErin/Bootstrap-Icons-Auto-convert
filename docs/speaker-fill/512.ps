%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
216 96 m 216 104.574 211.426 112.496 204 116.785 c 196.574 121.07 187.426
 121.07 180 116.785 c 172.574 112.496 168 104.574 168 96 c 168 87.426 172.574
 79.504 180 75.215 c 187.426 70.93 196.574 70.93 204 75.215 c 211.426 79.504
 216 87.426 216 96 c 156 252 m 156 239.137 162.863 227.254 174 220.824 c
 185.137 214.391 198.863 214.391 210 220.824 c 221.137 227.254 228 239.137
 228 252 c 228 264.863 221.137 276.746 210 283.176 c 198.863 289.609 185.137
 289.609 174 283.176 c 162.863 276.746 156 264.863 156 252 c f
96 0 m 83.27 0 71.062 5.059 62.059 14.059 c 53.059 23.062 48 35.27 48 48
 c 48 336 l 48 348.73 53.059 360.938 62.059 369.941 c 71.062 378.941 83.27
 384 96 384 c 288 384 l 300.73 384 312.938 378.941 321.941 369.941 c 330.941
 360.938 336 348.73 336 336 c 336 48 l 336 35.27 330.941 23.062 321.941 
14.059 c 312.938 5.059 300.73 0 288 0 c h
240 96 m 240 113.148 230.852 128.996 216 137.57 c 201.148 146.145 182.852
 146.145 168 137.57 c 153.148 128.996 144 113.148 144 96 c 144 78.852 153.148
 63.004 168 54.43 c 182.852 45.855 201.148 45.855 216 54.43 c 230.852 63.004
 240 78.852 240 96 c 192 168 m 222.012 168 249.742 184.012 264.746 210 c
 279.75 235.988 279.75 268.012 264.746 294 c 249.742 319.988 222.012 336
 192 336 c 161.988 336 134.258 319.988 119.254 294 c 104.25 268.012 104.25
 235.988 119.254 210 c 134.258 184.012 161.988 168 192 168 c f
Q Q
showpage
%%Trailer
%%EOF
