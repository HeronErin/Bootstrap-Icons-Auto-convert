%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
408 453.023 m 408 408 l 360 408 l 360 453.023 l 360 456.957 359.516 460.875
 358.559 464.688 c 339.359 541.391 l 384 571.152 l 428.641 541.391 l 409.441
 464.688 l 408.484 460.875 408 456.957 408 453.023 c f
192 0 m 576 0 l 601.461 0 625.879 10.113 643.883 28.117 c 661.887 46.121
 672 70.539 672 96 c 672 672 l 672 697.461 661.887 721.879 643.883 739.883
 c 625.879 757.887 601.461 768 576 768 c 192 768 l 166.539 768 142.121 757.887
 124.117 739.883 c 106.113 721.879 96 697.461 96 672 c 96 96 l 96 70.539
 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c 312 408
 m 312 453.023 l 292.801 529.777 l 290.406 539.379 291.043 549.488 294.617
 558.715 c 298.191 567.945 304.531 575.844 312.77 581.328 c 357.41 611.09
 l 357.406 611.09 l 365.289 616.34 374.551 619.145 384.023 619.145 c 393.496
 619.145 402.758 616.34 410.641 611.09 c 455.281 581.328 l 463.508 575.836
 469.84 567.934 473.402 558.707 c 476.969 549.48 477.598 539.375 475.199
 529.777 c 456 453.023 l 456 408 l 456 395.27 450.941 383.062 441.941 374.059
 c 432.938 365.059 420.73 360 408 360 c 360 360 l 347.27 360 335.062 365.059
 326.059 374.059 c 317.059 383.062 312 395.27 312 408 c 360 144 m 312 144
 l 312 192 l 360 192 l 360 240 l 312 240 l 312 288 l 360 288 l 360 336 l
 432 336 l 432 288 l 384 288 l 384 240 l 432 240 l 432 192 l 384 192 l 384
 144 l 432 144 l 432 96 l 384 96 l 384 48 l 312 48 l 312 96 l 360 96 l h
360 144 m f
Q Q
showpage
%%Trailer
%%EOF
