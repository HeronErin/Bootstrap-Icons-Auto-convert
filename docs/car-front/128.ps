%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
24 54 m 24 57.312 21.312 60 18 60 c 14.688 60 12 57.312 12 54 c 12 50.688
 14.688 48 18 48 c 21.312 48 24 50.688 24 54 c 84 54 m 84 57.312 81.312 
60 78 60 c 74.688 60 72 57.312 72 54 c 72 50.688 74.688 48 78 48 c 81.312
 48 84 50.688 84 54 c 36 48 m 32.688 48 30 50.688 30 54 c 30 57.312 32.688
 60 36 60 c 60 60 l 63.312 60 66 57.312 66 54 c 66 50.688 63.312 48 60 48
 c h
29.172 25.656 m 23.438 37.141 l 22.957 38.125 23.043 39.289 23.66 40.195
 c 24.273 41.102 25.328 41.609 26.418 41.527 c 31.879 41.09 40.52 40.508
 48 40.508 c 55.48 40.508 64.129 41.09 69.582 41.527 c 70.672 41.609 71.727
 41.102 72.34 40.195 c 72.957 39.289 73.043 38.125 72.562 37.141 c 66.828
 25.664 l 66.828 25.66 l 66.32 24.645 65.281 24 64.145 24 c 31.855 24 l 
30.719 24 29.68 24.641 29.172 25.656 c f
15.121 21.09 m 16.277 18.391 18.203 16.09 20.656 14.473 c 23.109 12.855
 25.98 11.996 28.922 12 c 67.094 12 l 73.094 12 78.52 15.574 80.883 21.09
 c 85.637 32.18 l 86.086 33.23 86.898 34.094 87.918 34.605 c 90.918 36.105
 93.047 38.895 93.707 42.176 c 95.719 52.25 l 95.918 53.219 96.016 54.199
 96.012 55.191 c 96.012 57.668 l 96.012 62.551 93.672 66.926 90.012 69.648
 c 90.008 81 l 90.008 81.797 89.691 82.559 89.129 83.121 c 88.566 83.684
 87.801 84 87.008 84 c 75.008 84 l 73.348 84 72.008 82.656 72.008 81 c 72.008
 72.973 l 64.254 73.262 55.539 73.5 48.008 73.5 c 40.477 73.5 31.762 73.262
 24.008 72.973 c 24.008 81 l 24.008 81.797 23.691 82.559 23.129 83.121 c
 22.566 83.684 21.801 84 21.008 84 c 9.008 84 l 7.348 84 6.008 82.656 6.008
 81 c 6.008 69.648 l 2.348 66.926 0.008 62.551 0.008 57.668 c 0.008 55.188
 l 0.008 54.199 0.105 53.215 0.301 52.246 c 2.312 42.168 l 2.973 38.891 
5.102 36.098 8.098 34.602 c 8.094 34.602 l 9.121 34.094 9.934 33.234 10.379
 32.18 c 15.133 21.09 l h
28.922 18 m 25.316 18 22.062 20.148 20.645 23.461 c 15.891 34.543 l 15.895
 34.543 l 14.887 36.898 13.07 38.824 10.777 39.965 c 9.438 40.629 8.48 41.883
 8.195 43.352 c 6.18 53.426 l 6.062 54.004 6 54.594 6 55.188 c 6 57.664 
l 6 62.441 9.719 66.352 14.449 66.566 c 23.777 66.988 37.164 67.496 48 67.496
 c 58.836 67.496 72.223 66.992 81.551 66.566 c 81.551 66.57 l 86.297 66.34
 90.02 62.414 90 57.664 c 90 55.188 l 90 54.594 89.941 54.008 89.82 53.422
 c 87.809 43.344 l 87.523 41.879 86.57 40.629 85.23 39.965 c 82.934 38.824
 81.121 36.898 80.113 34.543 c 75.359 23.453 l 73.941 20.141 70.684 17.996
 67.078 18 c h
28.922 18 m f
Q Q
showpage
%%Trailer
%%EOF
