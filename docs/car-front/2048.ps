%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 864 m 384 898.297 365.703 929.988 336 947.137 c 306.297 964.289 269.703
 964.289 240 947.137 c 210.297 929.988 192 898.297 192 864 c 192 829.703
 210.297 798.012 240 780.863 c 269.703 763.711 306.297 763.711 336 780.863
 c 365.703 798.012 384 829.703 384 864 c 1344 864 m 1344 898.297 1325.703
 929.988 1296 947.137 c 1266.297 964.289 1229.703 964.289 1200 947.137 c
 1170.297 929.988 1152 898.297 1152 864 c 1152 829.703 1170.297 798.012 
1200 780.863 c 1229.703 763.711 1266.297 763.711 1296 780.863 c 1325.703
 798.012 1344 829.703 1344 864 c 576 768 m 541.703 768 510.012 786.297 492.863
 816 c 475.711 845.703 475.711 882.297 492.863 912 c 510.012 941.703 541.703
 960 576 960 c 960 960 l 994.297 960 1025.988 941.703 1043.137 912 c 1060.289
 882.297 1060.289 845.703 1043.137 816 c 1025.988 786.297 994.297 768 960
 768 c h
466.754 410.496 m 374.977 594.238 l 369.949 604.609 368.742 616.422 371.566
 627.594 c 374.395 638.766 381.066 648.582 390.418 655.32 c 399.77 662.055
 411.195 665.277 422.688 664.414 c 510.047 657.406 648.289 648.094 768 648.094
 c 887.711 648.094 1026.047 657.406 1113.312 664.414 c 1124.805 665.277 
1136.23 662.055 1145.582 655.32 c 1154.934 648.582 1161.605 638.766 1164.434
 627.594 c 1167.258 616.422 1166.051 604.609 1161.023 594.238 c 1069.246
 410.59 l 1069.246 410.594 l 1065.27 402.609 1059.148 395.895 1051.57 391.199
 c 1043.992 386.504 1035.254 384.008 1026.336 384 c 509.664 384 l 500.758
 384 492.027 386.48 484.449 391.156 c 476.871 395.836 470.742 402.531 466.754
 410.496 c f
241.922 337.441 m 260.438 294.238 291.234 257.43 330.488 231.574 c 369.738
 205.719 415.719 191.957 462.719 192 c 1073.473 192 l 1169.473 192 1256.258
 249.215 1294.082 337.441 c 1370.113 514.848 l 1377.312 531.648 1390.273
 545.473 1406.594 553.633 c 1454.594 577.633 1488.672 622.273 1499.234 674.785
 c 1531.395 835.969 l 1534.594 851.457 1536.164 867.137 1536.098 883.008
 c 1536.098 922.656 l 1536.098 1000.801 1498.656 1070.785 1440.098 1114.367
 c 1440.098 1296 l 1440.098 1308.73 1435.039 1320.938 1426.039 1329.941 
c 1417.035 1338.941 1404.828 1344 1392.098 1344 c 1200.098 1344 l 1187.367
 1344 1175.156 1338.941 1166.156 1329.941 c 1157.152 1320.938 1152.098 1308.73
 1152.098 1296 c 1152.098 1167.551 l 1028.066 1172.16 888.578 1176 768.098
 1176 c 647.617 1176 508.129 1172.16 384.098 1167.551 c 384.098 1296 l 384.098
 1308.73 379.039 1320.938 370.039 1329.941 c 361.035 1338.941 348.828 1344
 336.098 1344 c 144.098 1344 l 131.367 1344 119.156 1338.941 110.156 1329.941
 c 101.152 1320.938 96.098 1308.73 96.098 1296 c 96.098 1114.367 l 37.539
 1070.781 0.098 1000.801 0.098 922.656 c 0.098 883.008 l 0.113 867.211 1.688
 851.453 4.801 835.969 c 36.961 674.688 l 47.52 622.273 81.602 577.535 129.504
 553.633 c 145.938 545.484 158.91 531.73 166.078 514.848 c 242.109 337.441
 l h
462.719 288 m 434.523 288 406.949 296.281 383.418 311.812 c 359.883 327.34
 341.426 349.438 330.336 375.359 c 254.305 552.672 l 238.18 590.406 209.152
 621.168 172.414 639.457 c 150.969 650.086 135.707 670.105 131.137 693.602
 c 98.879 854.785 l 96.992 864.074 96.027 873.527 96 883.008 c 96 922.656
 l 96 999.07 155.52 1061.664 231.168 1065.121 c 380.449 1071.84 594.625 
1080 768 1080 c 941.375 1080 1155.551 1071.938 1304.832 1065.121 c 1341.371
 1063.34 1375.812 1047.539 1400.992 1021 c 1426.168 994.461 1440.141 959.238
 1440 922.656 c 1440 883.008 l 1440 873.535 1439.039 864.129 1437.121 854.785
 c 1404.961 693.504 l 1400.363 670.047 1385.102 650.066 1363.68 639.457 
c 1326.945 621.168 1297.918 590.406 1281.793 552.672 c 1205.762 375.266 
l 1194.648 349.344 1176.172 327.258 1152.621 311.742 c 1129.07 296.23 1101.48
 287.977 1073.281 288 c h
462.719 288 m f
Q Q
showpage
%%Trailer
%%EOF
