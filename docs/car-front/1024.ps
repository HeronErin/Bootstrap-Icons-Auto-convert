%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
192 432 m 192 449.148 182.852 464.996 168 473.57 c 153.148 482.145 134.852
 482.145 120 473.57 c 105.148 464.996 96 449.148 96 432 c 96 414.852 105.148
 399.004 120 390.43 c 134.852 381.855 153.148 381.855 168 390.43 c 182.852
 399.004 192 414.852 192 432 c 672 432 m 672 449.148 662.852 464.996 648
 473.57 c 633.148 482.145 614.852 482.145 600 473.57 c 585.148 464.996 576
 449.148 576 432 c 576 414.852 585.148 399.004 600 390.43 c 614.852 381.855
 633.148 381.855 648 390.43 c 662.852 399.004 672 414.852 672 432 c 288 
384 m 270.852 384 255.004 393.148 246.43 408 c 237.855 422.852 237.855 441.148
 246.43 456 c 255.004 470.852 270.852 480 288 480 c 480 480 l 497.148 480
 512.996 470.852 521.57 456 c 530.145 441.148 530.145 422.852 521.57 408
 c 512.996 393.148 497.148 384 480 384 c h
233.375 205.246 m 187.488 297.121 l 184.977 302.305 184.371 308.211 185.785
 313.797 c 187.195 319.383 190.535 324.293 195.211 327.66 c 199.883 331.027
 205.598 332.637 211.344 332.207 c 255.023 328.703 324.145 324.047 384 324.047
 c 443.855 324.047 513.023 328.703 556.656 332.207 c 562.402 332.637 568.117
 331.027 572.789 327.66 c 577.465 324.293 580.805 319.383 582.215 313.797
 c 583.629 308.211 583.023 302.305 580.512 297.121 c 534.625 205.297 l 532.637
 201.305 529.574 197.949 525.785 195.598 c 521.996 193.25 517.625 192.004
 513.168 192 c 254.832 192 l 250.379 192 246.012 193.238 242.223 195.578
 c 238.434 197.918 235.371 201.266 233.375 205.246 c f
120.961 168.719 m 130.219 147.121 145.617 128.715 165.242 115.785 c 184.871
 102.859 207.859 95.98 231.359 96 c 536.734 96 l 584.734 96 628.125 124.609
 647.039 168.719 c 685.055 257.422 l 688.656 265.82 695.133 272.734 703.293
 276.812 c 727.293 288.812 744.332 311.133 749.613 337.387 c 765.691 417.98
 l 767.293 425.723 768.074 433.566 768.043 441.5 c 768.043 461.324 l 768.043
 500.395 749.324 535.387 720.043 557.18 c 720.047 648 l 720.047 654.363 
717.52 660.469 713.02 664.969 c 708.52 669.473 702.414 672 696.047 672 c
 600.047 672 l 593.684 672 587.578 669.473 583.078 664.969 c 578.578 660.469
 576.047 654.363 576.047 648 c 576.047 583.777 l 514.031 586.082 444.285
 588 384.047 588 c 323.809 588 254.062 586.078 192.047 583.777 c 192.047
 648 l 192.047 654.363 189.52 660.469 185.02 664.969 c 180.52 669.473 174.414
 672 168.047 672 c 72.047 672 l 65.684 672 59.578 669.473 55.078 664.969
 c 50.578 660.469 48.047 654.363 48.047 648 c 48.047 557.184 l 18.766 535.391
 0.047 500.398 0.047 461.328 c 0.047 441.504 l 0.055 433.605 0.844 425.727
 2.398 417.984 c 18.477 337.344 l 23.758 311.137 40.797 288.77 64.75 276.816
 c 64.754 276.816 l 72.969 272.742 79.453 265.863 83.039 257.426 c 121.055
 168.723 l h
231.359 144 m 217.262 144 203.477 148.141 191.707 155.906 c 179.941 163.672
 170.715 174.719 165.168 187.68 c 127.152 276.336 l 119.09 295.203 104.574
 310.586 86.207 319.727 c 75.484 325.043 67.855 335.055 65.566 346.801 c
 49.441 427.391 l 48.496 432.039 48.016 436.766 48 441.504 c 48 461.328 
l 48 499.535 77.762 530.832 115.586 532.559 c 190.227 535.918 297.312 540
 384 540 c 470.688 540 577.777 535.969 652.414 532.559 c 670.684 531.672
 687.906 523.77 700.496 510.5 c 713.086 497.23 720.07 479.617 720 461.328
 c 720 441.504 l 720 436.77 719.52 432.062 718.559 427.391 c 702.48 346.75
 l 702.48 346.754 l 700.18 335.023 692.551 325.031 681.84 319.727 c 663.473
 310.586 648.957 295.203 640.895 276.336 c 602.879 187.633 l 597.324 174.672
 588.086 163.629 576.309 155.871 c 564.535 148.117 550.742 143.988 536.641
 144 c h
231.359 144 m f
Q Q
showpage
%%Trailer
%%EOF
