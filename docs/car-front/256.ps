%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 24 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 24 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 24 192 144 rectclip
1 0 0 -1 0 192 cm q
0 g
48 108 m 48 114.629 42.629 120 36 120 c 29.371 120 24 114.629 24 108 c 
24 101.371 29.371 96 36 96 c 42.629 96 48 101.371 48 108 c 168 108 m 168
 114.629 162.629 120 156 120 c 149.371 120 144 114.629 144 108 c 144 101.371
 149.371 96 156 96 c 162.629 96 168 101.371 168 108 c 72 96 m 65.371 96 
60 101.371 60 108 c 60 114.629 65.371 120 72 120 c 120 120 l 126.629 120
 132 114.629 132 108 c 132 101.371 126.629 96 120 96 c h
58.344 51.312 m 46.871 74.281 l 45.918 76.25 46.086 78.578 47.316 80.391
 c 48.551 82.199 50.652 83.215 52.836 83.051 c 63.758 82.176 81.035 81.012
 96 81.012 c 110.965 81.012 128.258 82.176 139.164 83.051 c 141.348 83.215
 143.449 82.199 144.684 80.391 c 145.914 78.578 146.082 76.25 145.129 74.281
 c 133.656 51.324 l 132.641 49.289 130.566 48.004 128.293 48 c 63.707 48
 l 61.438 48 59.359 49.281 58.344 51.312 c f
30.238 42.18 m 32.555 36.781 36.406 32.18 41.312 28.945 c 46.219 25.715
 51.965 23.996 57.84 24 c 134.184 24 l 146.184 24 157.031 31.152 161.758
 42.18 c 171.262 64.355 l 172.16 66.457 173.781 68.184 175.82 69.203 c 181.82
 72.203 186.082 77.781 187.398 84.348 c 191.418 104.496 l 191.816 106.434
 192.016 108.391 192.008 110.375 c 192.008 115.332 l 192.008 125.102 187.328
 133.848 180.008 139.297 c 180.012 162 l 180.012 163.59 179.379 165.117 
178.254 166.242 c 177.129 167.367 175.602 168 174.012 168 c 150.012 168 
l 146.699 168 144.012 165.312 144.012 162 c 144.012 145.945 l 128.508 146.52
 111.07 147 96.012 147 c 80.953 147 63.516 146.52 48.012 145.945 c 48.012
 162 l 48.012 163.59 47.379 165.117 46.254 166.242 c 45.129 167.367 43.602
 168 42.012 168 c 18.012 168 l 14.699 168 12.012 165.312 12.012 162 c 12.012
 139.297 l 4.691 133.848 0.012 125.102 0.012 115.332 c 0.012 110.375 l 0.016
 108.402 0.211 106.434 0.602 104.496 c 4.621 84.336 l 5.941 77.785 10.199
 72.191 16.188 69.203 c 18.242 68.188 19.863 66.465 20.762 64.355 c 30.266
 42.18 l h
57.84 36 m 54.316 36 50.867 37.035 47.926 38.977 c 44.984 40.918 42.68 
43.68 41.293 46.922 c 31.789 69.086 l 29.773 73.801 26.145 77.645 21.551
 79.934 c 18.871 81.262 16.965 83.762 16.391 86.699 c 12.359 106.848 l 12.125
 108.008 12.004 109.191 12 110.375 c 12 115.332 l 12 124.883 19.441 132.707
 28.895 133.141 c 47.555 133.98 74.328 135 96 135 c 117.672 135 144.445 
133.992 163.105 133.141 c 167.672 132.918 171.977 130.941 175.125 127.625
 c 178.27 124.309 180.02 119.906 180 115.332 c 180 110.375 l 180 109.191
 179.879 108.016 179.641 106.848 c 175.621 86.688 l 175.047 83.754 173.137
 81.258 170.461 79.934 c 165.867 77.645 162.238 73.801 160.223 69.086 c 
150.719 46.91 l 150.719 46.906 l 149.332 43.668 147.02 40.906 144.078 38.969
 c 141.133 37.027 137.684 35.996 134.16 36 c h
57.84 36 m f
Q Q
showpage
%%Trailer
%%EOF
