%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 384 1536 1250
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 384 1536 1250
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 384 1536 866 rectclip
1 0 0 -1 0 1536 cm q
0 g
264.961 293.855 m 276.148 287.746 289.305 286.336 301.535 289.938 c 313.762
 293.539 324.055 301.855 330.145 313.055 c 453.312 538.848 l 553.562 499.578
 660.332 479.613 768 480 c 875.668 479.613 982.438 499.578 1082.688 538.848
 c 1205.855 313.055 l 1211.754 301.539 1222.055 292.895 1234.418 289.074
 c 1246.781 285.258 1260.164 286.598 1271.527 292.781 c 1282.895 298.969
 1291.277 309.484 1294.781 321.938 c 1298.289 334.395 1296.613 347.738 1290.145
 358.945 c 1169.953 579.266 l 1389.602 697.535 1536 909.793 1536 1152 c 
0 1152 l 0 909.793 146.398 697.535 366.047 579.266 c 245.762 359.039 l 239.68
 347.863 238.285 334.727 241.887 322.52 c 245.484 310.316 253.785 300.039
 264.961 293.953 c h
480 960 m 514.297 960 545.988 941.703 563.137 912 c 580.289 882.297 580.289
 845.703 563.137 816 c 545.988 786.297 514.297 768 480 768 c 445.703 768
 414.012 786.297 396.863 816 c 379.711 845.703 379.711 882.297 396.863 912
 c 414.012 941.703 445.703 960 480 960 c 1056 960 m 1090.297 960 1121.988
 941.703 1139.137 912 c 1156.289 882.297 1156.289 845.703 1139.137 816 c
 1121.988 786.297 1090.297 768 1056 768 c 1021.703 768 990.012 786.297 972.863
 816 c 955.711 845.703 955.711 882.297 972.863 912 c 990.012 941.703 1021.703
 960 1056 960 c f
Q Q
showpage
%%Trailer
%%EOF
