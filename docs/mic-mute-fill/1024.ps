%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 79 0 689 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 79 0 689 768
768 768 cairo_set_page_size
%%EndPageSetup
q 79 0 610 768 rectclip
1 0 0 -1 0 768 cm q
0 g
624 384 m 624 411.07 619.488 437.137 611.23 461.426 c 572.16 422.355 l 
572.16 422.352 l 574.723 409.73 576.008 396.879 576 384 c 576 336 l 576 
327.426 580.574 319.504 588 315.215 c 595.426 310.93 604.574 310.93 612 
315.215 c 619.426 319.504 624 327.426 624 336 c h
384 576 m 423.266 576 459.742 564.238 490.176 543.984 c 524.641 578.496
 l 490.348 603.289 450.105 618.574 408 622.801 c 408 720 l 552 720 l 560.574
 720 568.496 724.574 572.785 732 c 577.07 739.426 577.07 748.574 572.785
 756 c 568.496 763.426 560.574 768 552 768 c 216 768 l 207.426 768 199.504
 763.426 195.215 756 c 190.93 748.574 190.93 739.426 195.215 732 c 199.504
 724.574 207.426 720 216 720 c 360 720 l 360 622.801 l 300.801 616.852 245.922
 589.125 206.012 545 c 166.098 500.875 144 443.496 144 384 c 144 336 l 144
 327.426 148.574 319.504 156 315.215 c 163.426 310.93 172.574 310.93 180
 315.215 c 187.426 319.504 192 327.426 192 336 c 192 384 l 192 417.703 200.871
 450.812 217.723 480 c 234.574 509.188 258.812 533.426 288 550.277 c 317.188
 567.129 350.297 576 384 576 c 528 144 m 528 378.191 l 247.586 97.777 l 
262.355 54.367 296.914 20.582 340.648 6.797 c 384.383 -6.988 432.066 0.871
 469.059 27.965 c 506.055 55.059 527.941 98.145 528 144 c f
455.328 509.137 m 240 293.762 l 240 384 l 239.984 435.316 267.277 482.762
 311.645 508.547 c 356.016 534.328 410.75 534.555 455.328 509.137 c 79.008
 64.992 m 655.008 640.992 l 688.992 607.008 l 112.992 31.008 l h
79.008 64.992 m f
Q Q
showpage
%%Trailer
%%EOF
