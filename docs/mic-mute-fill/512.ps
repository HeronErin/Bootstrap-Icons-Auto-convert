%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 39 0 345 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 39 0 345 384
384 384 cairo_set_page_size
%%EndPageSetup
q 39 0 306 384 rectclip
1 0 0 -1 0 384 cm q
0 g
312 192 m 312 205.535 309.742 218.566 305.617 230.711 c 286.082 211.176
 l 286.078 211.176 l 287.363 204.863 288.004 198.441 288 192 c 288 168 l
 288 161.371 293.371 156 300 156 c 306.629 156 312 161.371 312 168 c h
192 288 m 211.633 288 229.871 282.121 245.09 271.992 c 262.32 289.25 l 
262.32 289.246 l 245.172 301.645 225.055 309.285 204 311.398 c 204 360 l
 276 360 l 282.629 360 288 365.371 288 372 c 288 378.629 282.629 384 276
 384 c 108 384 l 101.371 384 96 378.629 96 372 c 96 365.371 101.371 360 
108 360 c 180 360 l 180 311.398 l 150.402 308.426 122.961 294.562 103.004
 272.5 c 83.051 250.438 72 221.75 72 192 c 72 168 l 72 161.371 77.371 156
 84 156 c 90.629 156 96 161.371 96 168 c 96 192 l 96 217.461 106.113 241.879
 124.117 259.883 c 142.121 277.887 166.539 288 192 288 c 264 72 m 264 189.098
 l 123.793 48.887 l 131.18 27.184 148.457 10.293 170.324 3.398 c 192.191
 -3.492 216.031 0.438 234.531 13.984 c 253.027 27.527 263.973 49.074 264
 72 c f
227.664 254.566 m 120 146.879 l 120 192 l 119.992 217.656 133.641 241.383
 155.824 254.273 c 178.008 267.164 205.375 267.277 227.664 254.566 c 39.504
 32.496 m 327.504 320.496 l 344.496 303.504 l 56.496 15.504 l h
39.504 32.496 m f
Q Q
showpage
%%Trailer
%%EOF
