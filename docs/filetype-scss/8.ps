%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
0.508 5.734 m 0.484 5.68 0.469 5.625 0.469 5.566 c 0.754 5.566 l 0.766 
5.625 0.801 5.676 0.848 5.711 c 0.875 5.73 0.906 5.742 0.941 5.754 c 0.977
 5.766 1.016 5.77 1.062 5.77 c 1.125 5.77 1.176 5.762 1.219 5.742 c 1.254
 5.727 1.289 5.703 1.312 5.668 c 1.336 5.637 1.344 5.598 1.344 5.559 c 1.348
 5.512 1.324 5.469 1.289 5.438 c 1.25 5.406 1.195 5.383 1.117 5.363 c 0.887
 5.309 l 0.883 5.312 l 0.809 5.297 0.742 5.27 0.68 5.23 c 0.625 5.199 0.578
 5.152 0.547 5.094 c 0.516 5.035 0.5 4.965 0.504 4.898 c 0.504 4.809 0.527
 4.727 0.574 4.66 c 0.621 4.594 0.688 4.539 0.773 4.5 c 0.859 4.461 0.953
 4.445 1.062 4.445 c 1.176 4.445 1.273 4.465 1.355 4.504 c 1.438 4.543 1.5
 4.594 1.543 4.656 c 1.59 4.719 1.613 4.789 1.617 4.867 c 1.336 4.867 l 
1.328 4.832 1.312 4.797 1.293 4.77 c 1.266 4.738 1.234 4.715 1.199 4.703
 c 1.156 4.684 1.109 4.676 1.059 4.676 c 0.977 4.676 0.914 4.695 0.867 4.734
 c 0.824 4.77 0.797 4.82 0.797 4.879 c 0.797 4.926 0.816 4.961 0.852 4.992
 c 0.852 4.988 l 0.898 5.023 0.949 5.047 1.004 5.055 c 1.238 5.109 l 1.32
 5.129 1.391 5.156 1.449 5.188 c 1.508 5.223 1.555 5.266 1.59 5.32 c 1.625
 5.375 1.641 5.445 1.641 5.531 c 1.641 5.625 1.617 5.707 1.57 5.777 c 1.52
 5.852 1.449 5.91 1.367 5.945 c 1.281 5.984 1.172 6.004 1.047 6.004 c 0.953
 6.004 0.867 5.992 0.797 5.969 c 0.73 5.949 0.672 5.918 0.617 5.875 c 0.57
 5.836 0.535 5.789 0.508 5.734 c 2.109 4.898 m 2.082 4.973 2.07 5.055 2.074
 5.137 c 2.074 5.324 l 2.074 5.418 2.086 5.496 2.113 5.559 c 2.109 5.555
 l 2.133 5.613 2.172 5.668 2.223 5.703 c 2.277 5.738 2.34 5.754 2.402 5.754
 c 2.453 5.754 2.504 5.742 2.551 5.719 c 2.594 5.699 2.629 5.664 2.656 5.625
 c 2.68 5.586 2.695 5.539 2.699 5.488 c 2.984 5.488 l 2.984 5.52 l 2.98 
5.609 2.953 5.695 2.902 5.77 c 2.848 5.844 2.777 5.902 2.695 5.941 c 2.602
 5.984 2.5 6.004 2.398 6.004 c 2.262 6.004 2.148 5.977 2.055 5.922 c 2.059
 5.922 l 1.965 5.867 1.887 5.785 1.844 5.688 c 1.797 5.586 1.77 5.465 1.77
 5.32 c 1.77 5.133 l 1.77 4.992 1.793 4.867 1.844 4.766 c 1.891 4.668 1.965
 4.586 2.059 4.527 c 2.152 4.473 2.27 4.445 2.402 4.445 c 2.484 4.445 2.559
 4.457 2.629 4.48 c 2.699 4.504 2.762 4.539 2.812 4.582 c 2.812 4.586 l 
2.918 4.676 2.98 4.805 2.984 4.945 c 2.984 4.973 l 2.699 4.973 l 2.695 4.922
 2.68 4.875 2.652 4.832 c 2.629 4.789 2.594 4.754 2.551 4.734 c 2.504 4.707
 2.453 4.695 2.402 4.695 c 2.34 4.695 2.277 4.711 2.223 4.75 c 2.172 4.785
 2.133 4.836 2.109 4.898 c 3.086 5.566 m 3.09 5.566 l 3.094 5.684 3.148 
5.797 3.238 5.875 c 3.285 5.914 3.348 5.945 3.418 5.969 c 3.488 5.992 3.57
 6.004 3.668 6.004 c 3.793 6.004 3.902 5.984 3.988 5.945 c 4.078 5.906 4.145
 5.852 4.191 5.781 c 4.191 5.777 l 4.238 5.707 4.266 5.621 4.262 5.531 c
 4.262 5.445 4.246 5.379 4.211 5.32 c 4.211 5.324 l 4.18 5.266 4.129 5.219
 4.07 5.188 c 4.004 5.152 3.934 5.125 3.859 5.109 c 3.625 5.055 l 3.629 
5.055 l 3.57 5.047 3.52 5.023 3.477 4.988 c 3.441 4.965 3.422 4.922 3.422
 4.879 c 3.422 4.82 3.445 4.773 3.492 4.734 c 3.539 4.695 3.602 4.676 3.684
 4.676 c 3.738 4.676 3.781 4.684 3.82 4.703 c 3.855 4.715 3.891 4.738 3.914
 4.77 c 3.938 4.797 3.953 4.832 3.957 4.867 c 4.238 4.867 l 4.234 4.789 
4.207 4.719 4.164 4.656 c 4.117 4.586 4.051 4.535 3.977 4.5 c 3.887 4.461
 3.785 4.441 3.684 4.445 c 3.574 4.445 3.477 4.465 3.395 4.5 c 3.309 4.539
 3.246 4.59 3.195 4.656 c 3.148 4.723 3.125 4.805 3.125 4.895 c 3.125 4.969
 3.141 5.035 3.172 5.09 c 3.203 5.145 3.246 5.191 3.305 5.227 c 3.363 5.262
 3.43 5.289 3.508 5.305 c 3.738 5.359 l 3.816 5.379 3.875 5.402 3.91 5.434
 c 3.91 5.438 l 3.949 5.469 3.969 5.512 3.969 5.559 c 3.969 5.598 3.957 
5.637 3.938 5.668 c 3.91 5.703 3.879 5.727 3.84 5.742 c 3.789 5.762 3.738
 5.77 3.684 5.766 c 3.641 5.766 3.598 5.762 3.562 5.75 c 3.566 5.754 l 3.531
 5.742 3.5 5.73 3.473 5.711 c 3.422 5.676 3.387 5.625 3.375 5.566 c h
4.398 5.734 m 4.402 5.734 l 4.379 5.68 4.363 5.625 4.363 5.566 c 4.648 
5.566 l 4.66 5.625 4.691 5.676 4.742 5.711 c 4.77 5.73 4.801 5.742 4.836
 5.754 c 4.871 5.766 4.91 5.77 4.957 5.77 c 5.02 5.77 5.07 5.762 5.113 5.742
 c 5.148 5.727 5.184 5.703 5.207 5.668 c 5.23 5.637 5.238 5.598 5.238 5.559
 c 5.242 5.512 5.219 5.469 5.184 5.438 c 5.145 5.406 5.086 5.383 5.012 5.363
 c 4.781 5.309 l 4.777 5.312 l 4.707 5.297 4.637 5.27 4.574 5.23 c 4.52 
5.199 4.473 5.152 4.441 5.094 c 4.41 5.035 4.395 4.965 4.398 4.898 c 4.398
 4.809 4.422 4.727 4.469 4.66 c 4.516 4.594 4.582 4.539 4.668 4.5 c 4.754
 4.461 4.848 4.445 4.957 4.445 c 5.07 4.445 5.168 4.465 5.25 4.504 c 5.332
 4.543 5.395 4.594 5.438 4.656 c 5.484 4.719 5.508 4.789 5.512 4.867 c 5.23
 4.867 l 5.223 4.832 5.207 4.797 5.184 4.77 c 5.16 4.738 5.129 4.715 5.094
 4.703 c 5.051 4.684 5 4.676 4.953 4.676 c 4.871 4.676 4.809 4.695 4.762
 4.734 c 4.719 4.77 4.691 4.82 4.691 4.879 c 4.691 4.926 4.711 4.961 4.746
 4.992 c 4.746 4.988 l 4.793 5.023 4.844 5.047 4.898 5.055 c 5.133 5.109
 l 5.215 5.129 5.285 5.156 5.344 5.188 c 5.402 5.223 5.449 5.266 5.484 5.32
 c 5.52 5.375 5.535 5.445 5.535 5.531 c 5.535 5.625 5.512 5.707 5.465 5.777
 c 5.414 5.852 5.344 5.91 5.262 5.945 c 5.176 5.984 5.066 6.004 4.941 6.004
 c 4.848 6.004 4.762 5.992 4.691 5.969 c 4.625 5.949 4.566 5.918 4.512 5.875
 c 4.465 5.836 4.43 5.789 4.402 5.734 c f*
Q Q
showpage
%%Trailer
%%EOF
