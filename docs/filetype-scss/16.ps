%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 8.25 l 9.75 8.25 l 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
1.016 11.469 m 0.969 11.363 0.938 11.246 0.934 11.129 c 1.508 11.129 l 
1.527 11.25 1.598 11.352 1.699 11.418 c 1.75 11.453 1.812 11.484 1.887 11.504
 c 1.957 11.523 2.039 11.535 2.125 11.535 c 2.246 11.535 2.352 11.52 2.434
 11.484 c 2.512 11.453 2.578 11.402 2.625 11.336 c 2.668 11.273 2.691 11.199
 2.691 11.121 c 2.695 11.023 2.652 10.934 2.574 10.875 c 2.5 10.816 2.383
 10.766 2.227 10.73 c 1.762 10.625 l 1.766 10.625 l 1.621 10.594 1.484 10.539
 1.359 10.465 c 1.25 10.395 1.16 10.301 1.098 10.188 c 1.035 10.066 1.004
 9.93 1.004 9.797 c 1.004 9.613 1.051 9.453 1.145 9.316 c 1.238 9.18 1.371
 9.074 1.539 9 c 1.707 8.926 1.902 8.887 2.121 8.887 c 2.348 8.887 2.543
 8.926 2.707 9 c 2.867 9.078 2.992 9.18 3.082 9.309 c 3.172 9.438 3.223 
9.578 3.23 9.734 c 2.668 9.734 l 2.672 9.734 l 2.66 9.664 2.629 9.594 2.582
 9.539 c 2.535 9.48 2.469 9.434 2.398 9.402 c 2.309 9.367 2.215 9.352 2.121
 9.352 c 1.957 9.352 1.832 9.391 1.738 9.465 c 1.734 9.469 l 1.645 9.535
 1.594 9.645 1.598 9.754 c 1.598 9.844 1.633 9.918 1.703 9.98 c 1.797 10.047
 1.898 10.09 2.008 10.113 c 2.473 10.219 l 2.637 10.258 2.777 10.309 2.898
 10.379 c 3.02 10.445 3.113 10.535 3.18 10.648 c 3.246 10.758 3.281 10.898
 3.281 11.07 c 3.281 11.254 3.234 11.418 3.141 11.562 c 3.141 11.559 l 3.039
 11.703 2.898 11.82 2.734 11.887 c 2.559 11.965 2.344 12.004 2.09 12.004
 c 1.898 12.004 1.734 11.98 1.59 11.938 c 1.594 11.938 l 1.461 11.898 1.34
 11.836 1.234 11.75 c 1.141 11.672 1.066 11.574 1.016 11.469 c 4.223 9.797
 m 4.168 9.945 4.141 10.109 4.145 10.27 c 4.145 10.641 l 4.145 10.824 4.172
 10.98 4.223 11.109 c 4.266 11.23 4.344 11.332 4.445 11.406 c 4.555 11.473
 4.68 11.508 4.805 11.504 c 4.91 11.504 5.012 11.484 5.105 11.438 c 5.188
 11.395 5.258 11.332 5.309 11.25 c 5.359 11.168 5.391 11.074 5.398 10.98
 c 5.973 10.98 l 5.973 11.039 l 5.973 11.035 l 5.965 11.219 5.906 11.395
 5.801 11.543 c 5.695 11.688 5.555 11.805 5.391 11.883 c 5.203 11.969 5.004
 12.008 4.801 12.004 c 4.531 12.004 4.301 11.949 4.117 11.84 c 4.113 11.844
 l 3.926 11.734 3.777 11.57 3.688 11.371 c 3.59 11.168 3.543 10.922 3.543
 10.641 c 3.543 10.266 l 3.543 9.98 3.594 9.738 3.691 9.531 c 3.688 9.535
 l 3.781 9.336 3.93 9.172 4.117 9.059 c 4.309 8.949 4.535 8.891 4.801 8.891
 c 4.965 8.891 5.117 8.914 5.258 8.965 c 5.398 9.012 5.52 9.078 5.625 9.168
 c 5.621 9.168 l 5.836 9.348 5.961 9.613 5.973 9.891 c 5.973 9.945 l 5.398
 9.945 l 5.391 9.848 5.359 9.746 5.309 9.66 c 5.258 9.578 5.188 9.512 5.102
 9.465 c 5.012 9.414 4.91 9.391 4.805 9.395 c 4.68 9.391 4.555 9.426 4.449
 9.496 c 4.344 9.57 4.266 9.676 4.223 9.797 c 6.18 11.133 m 6.18 11.129 
l 6.188 11.371 6.297 11.594 6.48 11.746 c 6.578 11.828 6.695 11.891 6.84
 11.934 c 6.98 11.98 7.148 12 7.34 12 c 7.594 12 7.809 11.961 7.984 11.883
 c 8.16 11.805 8.297 11.695 8.391 11.555 c 8.387 11.559 l 8.48 11.41 8.527
 11.238 8.527 11.066 c 8.527 10.898 8.492 10.758 8.426 10.645 c 8.355 10.531
 8.258 10.441 8.145 10.379 c 8.012 10.305 7.867 10.25 7.719 10.219 c 7.254
 10.109 l 7.254 10.113 l 7.145 10.09 7.039 10.047 6.949 9.98 c 6.883 9.926
 6.84 9.844 6.844 9.754 c 6.844 9.637 6.891 9.539 6.98 9.465 c 7.074 9.391
 7.203 9.352 7.363 9.352 c 7.469 9.352 7.562 9.367 7.641 9.402 c 7.715 9.434
 7.777 9.48 7.828 9.539 c 7.875 9.594 7.902 9.664 7.918 9.734 c 8.48 9.734
 l 8.469 9.582 8.418 9.434 8.328 9.309 c 8.234 9.176 8.105 9.066 7.953 9
 c 7.77 8.922 7.57 8.883 7.371 8.887 c 7.152 8.887 6.957 8.926 6.789 9 c
 6.621 9.074 6.488 9.18 6.395 9.316 c 6.301 9.453 6.254 9.613 6.254 9.797
 c 6.254 9.949 6.285 10.078 6.348 10.191 c 6.41 10.301 6.496 10.395 6.609
 10.465 c 6.723 10.535 6.859 10.59 7.016 10.625 c 7.477 10.734 l 7.633 10.77
 7.746 10.82 7.824 10.879 c 7.82 10.875 l 7.895 10.934 7.938 11.023 7.934
 11.121 c 7.938 11.199 7.914 11.273 7.871 11.336 c 7.824 11.402 7.758 11.453
 7.68 11.484 c 7.582 11.52 7.477 11.539 7.371 11.535 c 7.281 11.535 7.203
 11.523 7.133 11.504 c 7.129 11.504 l 7.062 11.488 7 11.457 6.945 11.418
 c 6.844 11.352 6.773 11.25 6.754 11.129 c h
8.805 11.469 m 8.758 11.363 8.73 11.246 8.723 11.129 c 9.297 11.129 l 9.316
 11.25 9.387 11.352 9.488 11.418 c 9.539 11.453 9.602 11.484 9.676 11.504
 c 9.746 11.523 9.828 11.535 9.914 11.535 c 10.035 11.535 10.141 11.52 10.223
 11.484 c 10.301 11.453 10.367 11.402 10.414 11.336 c 10.457 11.273 10.48
 11.199 10.477 11.121 c 10.48 11.023 10.441 10.934 10.363 10.875 c 10.285
 10.816 10.172 10.766 10.016 10.73 c 9.551 10.625 l 9.555 10.625 l 9.41 
10.594 9.273 10.539 9.148 10.465 c 9.039 10.395 8.949 10.301 8.887 10.188
 c 8.824 10.066 8.789 9.93 8.793 9.797 c 8.793 9.613 8.84 9.453 8.934 9.316
 c 9.027 9.18 9.16 9.074 9.328 9 c 9.496 8.926 9.691 8.887 9.91 8.887 c 
10.141 8.887 10.336 8.926 10.496 9 c 10.656 9.078 10.781 9.18 10.871 9.309
 c 10.961 9.438 11.012 9.578 11.02 9.734 c 10.457 9.734 l 10.461 9.734 l
 10.449 9.664 10.418 9.594 10.371 9.539 c 10.32 9.48 10.258 9.434 10.188
 9.402 c 10.098 9.367 10.004 9.352 9.91 9.352 c 9.746 9.352 9.621 9.391 
9.527 9.465 c 9.523 9.469 l 9.434 9.535 9.383 9.645 9.387 9.754 c 9.387 
9.844 9.422 9.918 9.492 9.98 c 9.582 10.047 9.688 10.09 9.797 10.113 c 10.262
 10.219 l 10.426 10.258 10.566 10.309 10.688 10.379 c 10.809 10.445 10.902
 10.535 10.969 10.648 c 11.035 10.758 11.07 10.898 11.07 11.07 c 11.07 11.254
 11.023 11.418 10.93 11.562 c 10.93 11.559 l 10.828 11.703 10.688 11.82 
10.523 11.887 c 10.348 11.965 10.133 12.004 9.879 12.004 c 9.688 12.004 
9.523 11.98 9.379 11.938 c 9.383 11.938 l 9.25 11.898 9.129 11.836 9.023
 11.75 c 8.93 11.672 8.855 11.574 8.805 11.469 c f*
Q Q
showpage
%%Trailer
%%EOF
