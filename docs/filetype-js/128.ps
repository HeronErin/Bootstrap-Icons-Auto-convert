%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 48 96 l 48 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
19.117 91.738 m 18.723 90.895 18.496 89.98 18.449 89.047 c 23.039 89.047
 l 23.211 89.992 23.762 90.828 24.57 91.352 c 24.992 91.645 25.488 91.871
 26.062 92.035 c 26.633 92.199 27.273 92.281 27.977 92.281 c 28.961 92.281
 29.785 92.141 30.453 91.859 c 30.457 91.859 l 31.066 91.633 31.598 91.227
 31.984 90.703 c 32.332 90.188 32.508 89.582 32.496 88.961 c 32.527 88.199
 32.184 87.469 31.578 87.008 c 30.973 86.527 30.051 86.141 28.805 85.852
 c 25.09 84.992 l 25.094 84.988 l 23.949 84.75 22.855 84.316 21.859 83.707
 c 20.977 83.164 20.254 82.406 19.754 81.504 c 19.25 80.535 18.996 79.453
 19.016 78.359 c 19.016 76.895 19.395 75.617 20.156 74.523 c 20.918 73.434
 21.973 72.59 23.324 71.992 c 24.668 71.391 26.219 71.094 27.98 71.098 c
 29.809 71.098 31.367 71.402 32.66 72.008 c 33.957 72.621 34.957 73.441 
35.66 74.469 c 36.379 75.488 36.781 76.621 36.859 77.863 c 32.359 77.863
 l 32.359 77.867 l 32.254 77.297 32.008 76.766 31.637 76.32 c 31.246 75.836
 30.734 75.461 30.156 75.234 c 29.453 74.945 28.699 74.805 27.941 74.824
 c 26.641 74.824 25.617 75.129 24.863 75.734 c 24.863 75.738 l 24.148 76.285
 23.738 77.141 23.762 78.043 c 23.762 78.762 24.047 79.363 24.621 79.844
 c 24.617 79.844 l 25.34 80.367 26.172 80.727 27.047 80.891 c 30.766 81.75
 l 32.074 82.051 33.207 82.473 34.16 83.016 c 35.121 83.559 35.871 84.277
 36.41 85.164 c 36.949 86.051 37.219 87.172 37.219 88.523 c 37.219 90.004
 36.844 91.316 36.09 92.461 c 36.098 92.461 l 35.301 93.637 34.176 94.555
 32.863 95.094 c 31.461 95.727 29.742 96.043 27.715 96.043 c 26.191 96.043
 24.859 95.863 23.727 95.504 c 23.723 95.504 l 22.68 95.188 21.703 94.676
 20.855 93.988 c 20.121 93.375 19.527 92.609 19.117 91.738 c 0.492 91.539
 m 0.492 91.543 l 0.16 90.648 -0.008 89.699 0 88.746 c 4.59 88.746 l 4.605
 89.312 4.758 89.867 5.027 90.367 c 5.594 91.324 6.641 91.895 7.754 91.844
 c 8.895 91.844 9.738 91.516 10.285 90.859 c 10.836 90.199 11.113 89.266
 11.113 88.062 c 11.113 71.594 l 15.852 71.594 l 15.852 87.945 l 15.852 
90.586 15.137 92.594 13.711 93.977 c 12.297 95.355 10.328 96.047 7.809 96.047
 c 7.805 96.043 l 6.645 96.062 5.488 95.871 4.391 95.477 c 3.473 95.125 
2.641 94.582 1.949 93.883 c 1.305 93.215 0.809 92.414 0.492 91.543 c f*
Q Q
showpage
%%Trailer
%%EOF
