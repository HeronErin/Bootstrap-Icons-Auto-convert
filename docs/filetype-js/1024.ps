%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 384 768 l 384 720 l 576 720 l 588.73 720 
600.938 714.941 609.941 705.941 c 618.941 696.938 624 684.73 624 672 c 624
 216 l 528 216 l 508.906 216 490.59 208.414 477.09 194.91 c 463.586 181.41
 456 163.094 456 144 c 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059
 62.059 c 149.059 71.062 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96
 70.539 106.113 46.121 124.117 28.117 c 142.121 10.113 166.539 0 192 0 c
 456 0 l h
152.93 733.922 m 149.77 727.148 147.961 719.828 147.602 712.367 c 184.32
 712.367 l 185.68 719.938 190.109 726.609 196.559 730.801 c 199.918 733.137
 203.902 734.961 208.512 736.273 c 213.086 737.586 218.191 738.242 223.824
 738.242 c 231.695 738.242 238.305 737.121 243.648 734.883 c 243.648 734.879
 l 248.543 733.047 252.797 729.828 255.887 725.617 c 258.652 721.508 260.078
 716.645 259.969 711.695 c 260.219 705.594 257.477 699.754 252.625 696.047
 c 247.793 692.207 240.402 689.117 230.449 686.781 c 200.738 679.918 l 200.734
 679.922 l 191.586 678.004 182.836 674.527 174.863 669.648 c 167.824 665.324
 162.023 659.258 158.016 652.031 c 153.996 644.266 151.965 635.625 152.113
 626.879 c 152.113 615.168 155.152 604.941 161.234 596.207 c 167.312 587.504
 175.762 580.75 186.578 575.949 c 197.332 571.148 209.746 568.766 223.824
 568.797 c 238.449 568.797 250.93 571.23 261.266 576.094 c 271.633 580.988
 279.633 587.551 285.266 595.773 c 291.027 603.934 294.227 612.988 294.867
 622.941 c 258.867 622.941 l 258.863 622.945 l 258.043 618.391 256.059 614.125
 253.105 610.559 c 249.969 606.688 245.887 603.695 241.246 601.871 c 235.641
 599.551 229.605 598.441 223.535 598.609 c 213.137 598.609 204.926 601.043
 198.91 605.906 c 198.91 605.902 l 193.195 610.285 189.914 617.133 190.078
 624.336 c 190.078 630.098 192.367 634.895 196.941 638.734 c 196.945 638.734
 l 202.719 642.949 209.359 645.816 216.383 647.137 c 246.145 654 l 256.609
 656.398 265.664 659.777 273.312 664.129 c 280.992 668.48 286.992 674.207
 291.312 681.312 c 295.633 688.418 297.793 697.375 297.793 708.191 c 297.793
 720.031 294.785 730.527 288.77 739.68 c 282.41 749.102 273.41 756.434 262.895
 760.754 c 251.664 765.809 237.934 768.34 221.711 768.34 c 209.52 768.34
 198.879 766.898 189.789 764.02 c 189.793 764.016 l 181.43 761.512 173.637
 757.402 166.848 751.922 c 160.953 747.004 156.203 740.859 152.93 733.922
 c 3.938 732.336 m 1.266 725.184 -0.066 717.602 0 709.969 c 36.719 709.969
 l 36.852 714.504 38.051 718.945 40.223 722.93 c 42.438 726.691 45.637 729.781
 49.477 731.863 c 53.316 733.945 57.652 734.938 62.016 734.734 c 71.137 
734.734 77.887 732.109 82.273 726.863 c 86.688 721.582 88.898 714.129 88.898
 704.496 c 88.898 572.734 l 126.82 572.734 l 126.82 703.535 l 126.82 724.656
 121.109 740.734 109.684 751.773 c 98.355 762.812 82.613 768.332 62.453 
768.332 c 62.449 768.336 l 53.145 768.5 43.891 766.969 35.137 763.824 c 
27.789 761.008 21.129 756.656 15.602 751.055 c 10.438 745.707 6.461 739.328
 3.938 732.336 c f*
Q Q
showpage
%%Trailer
%%EOF
