%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 192 384 l 192 360 l 288 360 l 294.363 360 
300.469 357.473 304.969 352.969 c 309.473 348.469 312 342.363 312 336 c 
312 108 l 264 108 l 254.453 108 245.297 104.207 238.543 97.457 c 231.793
 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031
 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27
 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
76.465 366.961 m 74.887 363.574 73.98 359.914 73.801 356.184 c 92.16 356.184
 l 92.84 359.969 95.055 363.305 98.281 365.398 c 99.961 366.566 101.953 
367.477 104.258 368.133 c 106.547 368.789 109.098 369.117 111.914 369.117
 c 115.852 369.117 119.152 368.559 121.824 367.438 c 121.824 367.441 l 124.27
 366.523 126.398 364.914 127.945 362.809 c 129.324 360.754 130.039 358.324
 129.984 355.848 c 130.109 352.797 128.738 349.875 126.312 348.023 c 123.898
 346.102 120.199 344.559 115.223 343.391 c 100.367 339.957 l 100.367 339.961
 l 95.793 339 91.418 337.266 87.434 334.824 c 83.914 332.66 81.012 329.629
 79.008 326.016 c 76.996 322.133 75.984 317.812 76.055 313.441 c 76.055 
307.586 77.574 302.473 80.613 298.105 c 83.652 293.754 87.879 290.379 93.285
 287.977 c 98.66 285.578 104.871 284.383 111.91 284.402 c 119.223 284.402
 125.461 285.617 130.629 288.051 c 135.812 290.5 139.812 293.777 142.629
 297.891 c 145.508 301.969 147.109 306.5 147.43 311.477 c 129.43 311.477
 l 129.434 311.473 l 129.02 309.195 128.027 307.062 126.551 305.281 c 124.984
 303.344 122.941 301.848 120.625 300.938 c 117.82 299.777 114.801 299.219
 111.77 299.305 c 106.57 299.305 102.465 300.52 99.457 302.953 c 96.598 
305.145 94.957 308.566 95.039 312.168 c 95.039 315.047 96.184 317.449 98.473
 319.367 c 101.359 321.473 104.68 322.91 108.191 323.566 c 123.07 327 l 
128.301 328.199 132.832 329.887 136.656 332.062 c 140.496 334.238 143.496
 337.102 145.656 340.656 c 147.816 344.207 148.895 348.688 148.895 354.098
 c 148.895 360.02 147.391 365.266 144.383 369.84 c 141.207 374.551 136.707
 378.219 131.449 380.375 c 125.832 382.902 118.969 384.168 110.855 384.168
 c 104.758 384.168 99.441 383.449 94.895 382.008 c 90.715 380.758 86.82 
378.703 83.426 375.961 c 80.477 373.5 78.102 370.43 76.465 366.961 c 1.969
 366.168 m 0.633 362.59 -0.035 358.801 0 354.984 c 18.359 354.984 l 18.426
 357.25 19.027 359.473 20.113 361.465 c 22.367 365.301 26.562 367.574 31.008
 367.367 c 35.566 367.367 38.945 366.055 41.137 363.43 c 43.344 360.789 
44.449 357.062 44.449 352.246 c 44.449 286.367 l 63.41 286.367 l 63.41 351.766
 l 63.41 362.324 60.555 370.367 54.844 375.887 c 49.18 381.406 41.309 384.168
 31.227 384.168 c 31.223 384.168 l 26.574 384.25 21.945 383.484 17.566 381.91
 c 13.895 380.504 10.562 378.328 7.801 375.527 c 5.219 372.852 3.23 369.664
 1.969 366.168 c f*
Q Q
showpage
%%Trailer
%%EOF
