%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 3 6 l 3 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766
 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 
l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 
0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75
 0.336 1.086 0 1.5 0 c 3.562 0 l h
1.195 5.734 m 1.172 5.68 1.156 5.625 1.152 5.566 c 1.441 5.566 l 1.449 
5.625 1.484 5.676 1.535 5.711 c 1.562 5.73 1.594 5.742 1.629 5.754 c 1.664
 5.766 1.703 5.77 1.75 5.77 c 1.812 5.77 1.863 5.762 1.906 5.742 c 1.902
 5.742 l 1.941 5.727 1.977 5.703 2 5.668 c 2.02 5.637 2.031 5.598 2.031 
5.559 c 2.031 5.512 2.012 5.469 1.973 5.438 c 1.934 5.406 1.879 5.383 1.801
 5.363 c 1.57 5.309 l 1.566 5.312 l 1.496 5.297 1.43 5.27 1.367 5.23 c 1.312
 5.199 1.266 5.152 1.234 5.094 c 1.203 5.035 1.188 4.965 1.188 4.898 c 1.188
 4.809 1.211 4.727 1.258 4.66 c 1.305 4.594 1.371 4.539 1.457 4.5 c 1.543
 4.461 1.637 4.445 1.746 4.445 c 1.859 4.445 1.957 4.465 2.039 4.504 c 2.121
 4.543 2.184 4.594 2.227 4.656 c 2.273 4.719 2.297 4.789 2.301 4.867 c 2.02
 4.867 l 2.023 4.867 l 2.016 4.832 2 4.797 1.977 4.77 c 1.953 4.738 1.922
 4.715 1.883 4.703 c 1.84 4.684 1.793 4.676 1.746 4.676 c 1.664 4.676 1.602
 4.695 1.555 4.734 c 1.508 4.77 1.484 4.82 1.484 4.879 c 1.484 4.926 1.504
 4.961 1.539 4.992 c 1.539 4.988 l 1.582 5.023 1.637 5.047 1.691 5.055 c
 1.926 5.109 l 2.008 5.129 2.078 5.156 2.137 5.188 c 2.195 5.223 2.242 5.266
 2.277 5.32 c 2.312 5.375 2.328 5.445 2.328 5.531 c 2.328 5.625 2.305 5.707
 2.258 5.777 c 2.207 5.852 2.137 5.91 2.055 5.945 c 1.969 5.984 1.859 6.004
 1.734 6.004 c 1.641 6.004 1.555 5.992 1.484 5.969 c 1.418 5.949 1.355 5.918
 1.305 5.875 c 1.258 5.836 1.219 5.789 1.195 5.734 c 0.031 5.723 m 0.012
 5.664 0 5.605 0 5.547 c 0.285 5.547 l 0.289 5.582 0.297 5.617 0.312 5.648
 c 0.348 5.707 0.414 5.742 0.484 5.738 c 0.555 5.738 0.609 5.719 0.645 5.676
 c 0.68 5.633 0.695 5.578 0.695 5.5 c 0.695 4.469 l 0.992 4.469 l 0.992 
5.492 l 0.992 5.656 0.949 5.781 0.859 5.867 c 0.77 5.953 0.648 5.996 0.492
 5.996 c 0.488 6.004 l 0.414 6.004 0.344 5.992 0.273 5.969 c 0.219 5.945
 0.164 5.91 0.121 5.867 c 0.082 5.824 0.051 5.777 0.031 5.723 c f*
Q Q
showpage
%%Trailer
%%EOF
