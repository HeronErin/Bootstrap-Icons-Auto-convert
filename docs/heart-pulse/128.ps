%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
48 16.488 m 43.699 12.066 l 33.602 1.688 15.086 5.27 8.398 18.316 c 5.508
 23.969 4.68 31.938 9.047 42 c 2.578 42 l -10.191 7.816 27.566 -10.98 46.941
 6.859 c 47.301 7.191 47.652 7.535 47.996 7.887 c 48 7.883 l 48.34 7.531
 48.691 7.191 49.055 6.863 c 68.434 -10.98 106.188 7.816 93.418 42 c 86.949
 42 l 91.316 31.938 90.488 23.969 87.598 18.316 c 80.914 5.27 62.398 1.68
 52.301 12.059 c h
13.273 60 m 21.164 60 l 27.559 67.098 36.301 74.746 48 82.77 c 59.695 74.746
 68.441 67.098 74.84 60 c 82.73 60 l 75.141 69.395 63.891 79.5 48.004 90
 c 32.117 79.5 20.867 69.395 13.277 60 c f
62.785 19.883 m 62.309 18.691 61.125 17.938 59.844 18.004 c 58.562 18.07
 57.465 18.945 57.113 20.18 c 47.527 53.734 l 38.785 31.883 l 38.367 30.852
 37.418 30.133 36.309 30.02 c 35.203 29.902 34.121 30.41 33.504 31.34 c 
22.391 48 l 3 48 l 1.344 48 0 49.344 0 51 c 0 52.656 1.344 54 3 54 c 24 
54 l 25.004 54 25.941 53.496 26.496 52.66 c 35.336 39.406 l 45.219 64.113
 l 45.215 64.117 l 45.691 65.309 46.875 66.062 48.156 65.996 c 49.438 65.93
 50.535 65.055 50.887 63.82 c 60.477 30.262 l 69.219 52.113 l 69.215 52.117
 l 69.672 53.254 70.773 54 72 54 c 93 54 l 94.656 54 96 52.656 96 51 c 96
 49.344 94.656 48 93 48 c 74.027 48 l h
62.785 19.883 m f
Q Q
showpage
%%Trailer
%%EOF
