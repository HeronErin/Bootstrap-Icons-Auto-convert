%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 263.809 m 699.168 193.055 l 537.602 26.977 241.344 84.289 134.398 293.09
 c 88.129 383.52 74.879 511.008 144.77 672 c 41.281 672 l -163.008 125.09
 441.121 -175.68 751.105 109.727 c 756.867 115.039 762.496 120.512 768 126.141
 c 768 126.145 l 773.406 120.477 779.043 115.031 784.895 109.824 c 1094.973
 -175.68 1699.008 125.09 1494.719 672 c 1391.23 672 l 1461.117 511.008 1447.871
 383.52 1401.598 293.09 c 1294.656 84.289 998.398 26.879 836.832 192.961
 c h
212.352 960 m 338.59 960 l 440.93 1073.566 580.801 1195.969 768 1324.32
 c 955.105 1195.969 1095.07 1073.566 1197.406 960 c 1323.645 960 l 1202.203
 1110.336 1022.203 1272 767.996 1440 c 513.789 1272 333.789 1110.336 212.348
 960 c f
1004.543 318.145 m 999.547 305.672 989.551 295.867 976.988 291.109 c 964.426
 286.352 950.441 287.074 938.438 293.109 c 926.43 299.141 917.504 309.926
 913.824 322.848 c 760.414 859.777 l 620.543 510.145 l 616.18 499.277 607.992
 490.383 597.527 485.129 c 587.059 479.879 575.035 478.637 563.715 481.633
 c 552.395 484.633 542.559 491.664 536.062 501.406 c 358.273 768 l 48 768
 l 30.852 768 15.004 777.148 6.43 792 c -2.145 806.852 -2.145 825.148 6.43
 840 c 15.004 854.852 30.852 864 48 864 c 384 864 l 400.055 863.992 415.043
 855.957 423.938 842.594 c 565.344 630.531 l 723.457 1025.859 l 723.457 
1025.855 l 728.453 1038.328 738.449 1048.133 751.012 1052.891 c 763.574 
1057.648 777.559 1056.926 789.562 1050.891 c 801.57 1044.859 810.496 1034.074
 814.176 1021.152 c 967.582 484.223 l 1107.453 833.855 l 1107.457 833.855
 l 1111.023 842.754 1117.172 850.379 1125.109 855.754 c 1133.047 861.125
 1142.414 863.996 1152 864 c 1488 864 l 1505.148 864 1520.996 854.852 1529.57
 840 c 1538.145 825.148 1538.145 806.852 1529.57 792 c 1520.996 777.148 
1505.148 768 1488 768 c 1184.449 768 l h
1004.543 318.145 m f
Q Q
showpage
%%Trailer
%%EOF
