%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 12 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 12 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 12 192 180 rectclip
1 0 0 -1 0 192 cm q
0 g
96 32.977 m 87.395 24.133 l 67.199 3.371 30.168 10.535 16.801 36.637 c 
11.016 47.941 9.359 63.875 18.098 84 c 5.16 84 l -20.375 15.637 55.141 -21.961
 93.887 13.715 c 94.605 14.379 95.312 15.062 96 15.766 c 96 15.77 l 96.676
 15.059 97.379 14.379 98.113 13.727 c 136.875 -21.961 212.379 15.633 186.84
 84 c 173.902 84 l 182.637 63.875 180.98 47.941 175.199 36.637 c 161.832
 10.535 124.801 3.359 104.605 24.121 c h
26.543 120 m 42.324 120 l 55.117 134.195 72.602 149.496 96 165.539 c 119.387
 149.496 136.883 134.195 149.676 120 c 165.457 120 l 150.277 138.793 127.777
 159 96 180 c 64.223 159 41.723 138.793 26.543 120 c f
125.566 39.77 m 124.613 37.387 122.25 35.875 119.688 36.008 c 117.125 36.141
 114.93 37.887 114.227 40.355 c 95.051 107.473 l 77.566 63.77 l 76.738 61.703
 74.832 60.266 72.617 60.035 c 70.402 59.809 68.242 60.824 67.008 62.676
 c 44.785 96 l 6 96 l 2.688 96 0 98.688 0 102 c 0 105.312 2.688 108 6 108
 c 48 108 l 50.008 108 51.879 106.996 52.992 105.324 c 70.668 78.816 l 90.434
 128.23 l 91.387 130.613 93.75 132.125 96.312 131.992 c 98.875 131.859 101.07
 130.113 101.773 127.645 c 120.949 60.527 l 138.434 104.23 l 139.344 106.508
 141.547 108 144 108 c 186 108 l 189.312 108 192 105.312 192 102 c 192 98.688
 189.312 96 186 96 c 148.055 96 l h
125.566 39.77 m f
Q Q
showpage
%%Trailer
%%EOF
