%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
384 131.902 m 349.586 96.527 l 268.801 13.488 120.672 42.145 67.199 146.543
 c 44.062 191.762 37.441 255.504 72.383 336 c 20.641 336 l -81.504 62.543
 220.562 -87.84 375.551 54.863 c 378.43 57.52 381.246 60.254 384 63.07 c
 386.703 60.238 389.523 57.516 392.449 54.91 c 547.488 -87.844 849.504 62.543
 747.359 336 c 695.617 336 l 730.562 255.504 723.938 191.762 700.801 146.543
 c 647.328 42.145 499.199 13.441 418.414 96.48 c h
106.176 480 m 169.297 480 l 220.465 536.785 290.398 597.984 384 662.16 
c 477.551 597.984 547.535 536.785 598.703 480 c 661.824 480 l 601.105 555.168
 511.105 636 384 720 c 256.895 636 166.895 555.168 106.176 480 c f
502.273 159.07 m 499.773 152.836 494.777 147.934 488.492 145.555 c 482.211
 143.176 475.219 143.539 469.219 146.555 c 463.215 149.57 458.754 154.965
 456.91 161.426 c 380.207 429.887 l 310.273 255.07 l 308.09 249.641 303.996
 245.191 298.762 242.566 c 293.531 239.941 287.516 239.316 281.855 240.816
 c 276.195 242.316 271.281 245.832 268.031 250.703 c 179.137 384 l 24 384
 l 15.426 384 7.504 388.574 3.215 396 c -1.07 403.426 -1.07 412.574 3.215
 420 c 7.504 427.426 15.426 432 24 432 c 192 432 l 200.027 431.996 207.52
 427.98 211.969 421.297 c 282.672 315.266 l 361.727 512.93 l 364.227 519.164
 369.223 524.066 375.508 526.445 c 381.789 528.824 388.781 528.461 394.781
 525.445 c 400.785 522.43 405.246 517.035 407.09 510.574 c 483.793 242.109
 l 553.73 416.926 l 553.727 416.93 l 555.512 421.379 558.586 425.191 562.555
 427.875 c 566.523 430.562 571.207 432 576 432 c 744 432 l 752.574 432 760.496
 427.426 764.785 420 c 769.07 412.574 769.07 403.426 764.785 396 c 760.496
 388.574 752.574 384 744 384 c 592.223 384 l h
502.273 159.07 m f
Q Q
showpage
%%Trailer
%%EOF
