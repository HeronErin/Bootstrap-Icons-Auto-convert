%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.25 0.375 m 2.043 0.375 1.875 0.543 1.875 0.75 c 1.875 1.125 l 1.809 1.125
 l 1.434 1.125 1.094 1.348 0.945 1.691 c 0.648 2.383 l 0.648 2.387 l 0.621
 2.453 0.57 2.504 0.504 2.539 c 0.316 2.633 0.184 2.809 0.141 3.012 c 0.02
 3.641 l 0.008 3.699 0 3.762 0 3.824 c 0 3.98 l 0 4.285 0.145 4.559 0.375
 4.73 c 0.375 5.438 l 0.375 5.543 0.461 5.625 0.562 5.625 c 1.312 5.625 
l 1.418 5.625 1.5 5.543 1.5 5.438 c 1.5 4.938 l 1.984 4.957 2.531 4.969 
3 4.969 c 3.469 4.969 4.016 4.953 4.5 4.938 c 4.5 5.438 l 4.5 5.543 4.586
 5.625 4.688 5.625 c 5.438 5.625 l 5.543 5.625 5.625 5.543 5.625 5.438 c
 5.625 4.727 l 5.855 4.555 6 4.281 6 3.977 c 6 3.82 l 6 3.758 5.992 3.695
 5.98 3.637 c 5.855 3.008 l 5.855 3.012 l 5.816 2.805 5.684 2.629 5.496 
2.539 c 5.43 2.504 5.379 2.453 5.352 2.387 c 5.055 1.695 l 5.055 1.691 l
 4.906 1.348 4.566 1.125 4.191 1.125 c 4.125 1.125 l 4.125 0.75 l 4.125 
0.652 4.086 0.555 4.016 0.484 c 3.945 0.414 3.848 0.375 3.75 0.375 c h
1.617 1.5 m 4.387 1.5 l 4.383 1.5 l 4.457 1.5 4.52 1.539 4.551 1.602 c 
4.91 2.32 l 4.973 2.453 4.871 2.605 4.723 2.594 c 4.383 2.566 3.465 2.531
 3 2.531 c 2.531 2.531 1.617 2.566 1.277 2.594 c 1.129 2.605 1.027 2.453
 1.09 2.32 c 1.449 1.602 l 1.48 1.539 1.543 1.5 1.617 1.5 c 1.5 3.75 m 1.5
 3.957 1.332 4.125 1.125 4.125 c 0.918 4.125 0.75 3.957 0.75 3.75 c 0.75
 3.543 0.918 3.375 1.125 3.375 c 1.332 3.375 1.5 3.543 1.5 3.75 c 5.25 3.75
 m 5.25 3.957 5.082 4.125 4.875 4.125 c 4.668 4.125 4.5 3.957 4.5 3.75 c
 4.5 3.543 4.668 3.375 4.875 3.375 c 5.082 3.375 5.25 3.543 5.25 3.75 c 
1.875 3.75 m 1.875 3.543 2.043 3.375 2.25 3.375 c 3.75 3.375 l 3.957 3.375
 4.125 3.543 4.125 3.75 c 4.125 3.957 3.957 4.125 3.75 4.125 c 2.25 4.125
 l 2.043 4.125 1.875 3.957 1.875 3.75 c f
Q Q
showpage
%%Trailer
%%EOF
