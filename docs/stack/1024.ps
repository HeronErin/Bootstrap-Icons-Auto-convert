%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 28 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 28 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 28 768 740 rectclip
1 0 0 -1 0 768 cm q
0 g
677.762 487.824 m 760.082 529.008 l 770.641 534.289 770.641 549.359 760.082
 554.641 c 396.816 736.32 l 388.742 740.332 379.258 740.332 371.184 736.32
 c 7.922 554.641 l 4.738 553.039 2.27 550.309 0.988 546.988 c -0.293 543.664
 -0.293 539.984 0.988 536.66 c 2.27 533.34 4.738 530.609 7.922 529.008 c
 90.289 487.824 l 345.504 615.457 l 369.742 627.555 398.305 627.555 422.496
 615.457 c 677.711 487.777 l h
371.184 3.023 m 379.258 -0.988 388.742 -0.988 396.816 3.023 c 760.082 184.656
 l 760.078 184.656 l 763.258 186.27 765.723 189.004 767.004 192.328 c 768.281
 195.656 768.281 199.336 767.004 202.664 c 765.723 205.988 763.258 208.723
 760.078 210.336 c 396.816 391.922 l 388.742 395.93 379.258 395.93 371.184
 391.922 c 7.922 210.336 l 4.723 208.738 2.238 206.008 0.945 202.676 c -0.344
 199.344 -0.344 195.648 0.945 192.316 c 2.238 188.984 4.723 186.254 7.922
 184.656 c h
371.184 3.023 m f
677.762 315.648 m 760.082 356.832 l 770.641 362.113 770.641 377.184 760.082
 382.465 c 396.816 564.098 l 388.742 568.109 379.258 568.109 371.184 564.098
 c 7.922 382.465 l 4.738 380.859 2.27 378.133 0.988 374.812 c -0.293 371.488
 -0.293 367.809 0.988 364.484 c 2.27 361.164 4.738 358.434 7.922 356.832
 c 90.289 315.648 l 345.504 443.281 l 369.742 455.379 398.305 455.379 422.496
 443.281 c h
677.762 315.648 m f
Q Q
showpage
%%Trailer
%%EOF
