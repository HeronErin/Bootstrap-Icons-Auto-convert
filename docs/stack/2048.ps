%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 57 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 57 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 57 1536 1479 rectclip
1 0 0 -1 0 1536 cm q
0 g
1355.52 975.648 m 1520.16 1058.016 l 1541.281 1068.574 1541.281 1098.719
 1520.16 1109.281 c 793.633 1472.641 l 777.484 1480.664 758.516 1480.664
 742.367 1472.641 c 15.84 1109.281 l 9.48 1106.074 4.539 1100.617 1.977 
1093.973 c -0.586 1087.328 -0.586 1079.969 1.977 1073.324 c 4.539 1066.676
 9.48 1061.223 15.84 1058.016 c 180.574 975.648 l 691.008 1230.914 l 739.488
 1255.105 796.609 1255.105 844.992 1230.914 c 1355.426 975.555 l h
742.367 6.047 m 758.516 -1.977 777.484 -1.977 793.633 6.047 c 1520.16 369.312
 l 1526.516 372.539 1531.449 378.008 1534.004 384.656 c 1536.562 391.309
 1536.562 398.676 1534.004 405.324 c 1531.449 411.977 1526.516 417.445 1520.16
 420.672 c 793.633 783.84 l 777.484 791.863 758.516 791.863 742.367 783.84
 c 15.84 420.672 l 9.445 417.48 4.473 412.016 1.895 405.352 c -0.684 398.688
 -0.684 391.297 1.895 384.633 c 4.473 377.969 9.445 372.504 15.84 369.312
 c h
742.367 6.047 m f
1355.52 631.297 m 1520.16 713.664 l 1541.281 724.223 1541.281 754.367 1520.16
 764.93 c 793.633 1128.195 l 793.633 1128.191 l 777.484 1136.215 758.516
 1136.215 742.367 1128.191 c 15.84 764.93 l 9.48 761.723 4.539 756.266 1.977
 749.621 c -0.586 742.977 -0.586 735.617 1.977 728.969 c 4.539 722.324 9.48
 716.871 15.84 713.664 c 180.574 631.297 l 691.008 886.562 l 739.488 910.754
 796.609 910.754 844.992 886.562 c h
1355.52 631.297 m f
Q Q
showpage
%%Trailer
%%EOF
