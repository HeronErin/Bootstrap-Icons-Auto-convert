%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 15 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 15 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 15 96 75 rectclip
1 0 0 -1 0 96 cm q
0 g
33.148 18.148 m 37.09 14.211 42.43 12 48 12 c 53.57 12 58.91 14.211 62.852
 18.148 c 63.41 18.73 64.176 19.059 64.98 19.066 c 65.785 19.074 66.559 
18.758 67.129 18.188 c 67.699 17.617 68.016 16.844 68.008 16.039 c 68 15.234
 67.672 14.469 67.094 13.906 c 62.027 8.844 55.16 6 48 6 c 40.84 6 33.973
 8.844 28.906 13.906 c 27.77 15.086 27.789 16.957 28.945 18.113 c 30.102
 19.27 31.973 19.285 33.148 18.148 c f
41.641 26.641 m 45.152 23.129 50.848 23.129 54.359 26.641 c 55.531 27.812
 57.434 27.812 58.609 26.641 c 59.781 25.469 59.781 23.566 58.609 22.391
 c 55.793 19.578 51.98 17.996 48 17.996 c 44.02 17.996 40.207 19.578 37.391
 22.391 c 36.254 23.57 36.27 25.441 37.43 26.598 c 38.586 27.754 40.457 
27.77 41.633 26.633 c h
41.641 26.641 m f
17.844 14.051 m 17.617 13.27 17.078 12.613 16.355 12.234 c 15.633 11.855
 14.789 11.789 14.016 12.047 c 13.242 12.305 12.605 12.867 12.254 13.602
 c 11.906 14.336 11.867 15.184 12.156 15.949 c 22.836 48 l 9 48 l 4.031 
48 0 52.031 0 57 c 0 69 l 0 73.969 4.031 78 9 78 c 12 78 l 12 78.797 12.316
 79.559 12.879 80.121 c 13.441 80.684 14.203 81 15 81 c 27 81 l 27.797 81
 28.559 80.684 29.121 80.121 c 29.684 79.559 30 78.797 30 78 c 66 78 l 66
 78.797 66.316 79.559 66.879 80.121 c 67.441 80.684 68.203 81 69 81 c 81
 81 l 81.797 81 82.559 80.684 83.121 80.121 c 83.684 79.559 84 78.797 84
 78 c 87 78 l 91.969 78 96 73.969 96 69 c 96 57 l 96 52.031 91.969 48 87
 48 c 73.164 48 l 83.844 15.949 l 84.133 15.184 84.094 14.336 83.746 13.602
 c 83.395 12.867 82.758 12.305 81.984 12.047 c 81.211 11.789 80.367 11.855
 79.645 12.234 c 78.922 12.613 78.383 13.27 78.156 14.051 c 66.84 48 l 29.16
 48 l h
15 66 m 13.344 66 12 64.656 12 63 c 12 61.344 13.344 60 15 60 c 16.656 
60 18 61.344 18 63 c 18 64.656 16.656 66 15 66 c 42 63 m 42 61.344 43.344
 60 45 60 c 46.656 60 48 61.344 48 63 c 48 64.656 46.656 66 45 66 c 43.344
 66 42 64.656 42 63 c 57 66 m 55.344 66 54 64.656 54 63 c 54 61.344 55.344
 60 57 60 c 58.656 60 60 61.344 60 63 c 60 64.656 58.656 66 57 66 c 66 63
 m 66 61.344 67.344 60 69 60 c 70.656 60 72 61.344 72 63 c 72 64.656 70.656
 66 69 66 c 67.344 66 66 64.656 66 63 c 78 63 m 78 61.344 79.344 60 81 60
 c 82.656 60 84 61.344 84 63 c 84 64.656 82.656 66 81 66 c 79.344 66 78 
64.656 78 63 c f
51 33 m 51 34.656 49.656 36 48 36 c 46.344 36 45 34.656 45 33 c 45 31.344
 46.344 30 48 30 c 49.656 30 51 31.344 51 33 c f
Q Q
showpage
%%Trailer
%%EOF
