%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
33 3 m 15 3 l 13.344 3 12 4.344 12 6 c 12 24 l 12 24.828 11.328 25.5 10.5
 25.5 c 9.672 25.5 9 24.828 9 24 c 9 6 l 9 2.688 11.688 0 15 0 c 33 0 l 
34.59 0 36.117 0.633 37.242 1.758 c 38.367 2.883 39 4.41 39 6 c 39 24 l 
39 24.828 38.328 25.5 37.5 25.5 c 36.672 25.5 36 24.828 36 24 c 36 6 l 36
 5.203 35.684 4.441 35.121 3.879 c 34.559 3.316 33.797 3 33 3 c 36 42 m 
36 42.797 35.684 43.559 35.121 44.121 c 34.559 44.684 33.797 45 33 45 c 
15 45 l 13.344 45 12 43.656 12 42 c 12 36 l 12 35.172 11.328 34.5 10.5 34.5
 c 9.672 34.5 9 35.172 9 36 c 9 42 l 9 43.59 9.633 45.117 10.758 46.242 
c 11.883 47.367 13.41 48 15 48 c 33 48 l 34.59 48 36.117 47.367 37.242 46.242
 c 38.367 45.117 39 43.59 39 42 c 39 36 l 39 35.172 38.328 34.5 37.5 34.5
 c 36.672 34.5 36 35.172 36 36 c h
5.141 23.863 m 5.891 23.516 6.219 22.625 5.871 21.871 c 5.523 21.121 4.633
 20.789 3.883 21.137 c 2.844 21.617 1.922 22.18 1.238 22.848 c 0.551 23.527
 0 24.418 0 25.5 c 0 27.137 1.223 28.32 2.469 29.102 c 3.789 29.938 5.598
 30.633 7.703 31.191 c 11.934 32.32 17.695 33 24 33 c 24.297 33 24.59 32.996
 24.883 32.992 c 21.438 36.438 l 20.852 37.023 20.852 37.977 21.438 38.562
 c 22.023 39.148 22.977 39.148 23.562 38.562 c 29.562 32.562 l 29.844 32.281
 30.004 31.898 30.004 31.5 c 30.004 31.102 29.844 30.719 29.562 30.438 c
 23.562 24.438 l 22.977 23.852 22.023 23.852 21.438 24.438 c 20.852 25.023
 20.852 25.977 21.438 26.562 c 24.871 29.996 l 24 30 l 17.879 30 12.391 
29.336 8.477 28.293 c 6.508 27.77 5.023 27.172 4.066 26.566 c 3.035 25.918
 3 25.52 3 25.5 c 3 25.492 3 25.324 3.336 24.988 c 3.68 24.652 4.266 24.262
 5.137 23.859 c h
44.121 21.141 m 44.117 21.137 l 43.367 20.789 42.477 21.121 42.129 21.871
 c 41.781 22.625 42.109 23.516 42.859 23.863 c 43.734 24.266 44.316 24.656
 44.66 24.996 c 45 25.324 45 25.492 45 25.504 c 45 25.512 45 25.699 44.609
 26.066 c 44.215 26.434 43.555 26.848 42.578 27.266 c 40.645 28.105 37.789
 28.836 34.289 29.328 c 34.289 29.32 l 33.48 29.449 32.926 30.203 33.039
 31.012 c 33.156 31.824 33.898 32.391 34.711 32.293 c 38.348 31.781 41.492
 31.004 43.77 30.02 c 44.91 29.527 45.91 28.949 46.648 28.258 c 47.387 27.57
 48 26.648 48 25.5 c 48 24.414 47.449 23.52 46.766 22.852 c 46.082 22.184
 45.16 21.617 44.121 21.137 c 22.5 6 m 21.672 6 21 6.672 21 7.5 c 21 8.328
 21.672 9 22.5 9 c 25.5 9 l 26.328 9 27 8.328 27 7.5 c 27 6.672 26.328 6
 25.5 6 c h
22.5 6 m f*
Q Q
showpage
%%Trailer
%%EOF
