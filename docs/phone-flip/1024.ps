%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
528 48 m 240 48 l 227.27 48 215.062 53.059 206.059 62.059 c 197.059 71.062
 192 83.27 192 96 c 192 384 l 192 392.574 187.426 400.496 180 404.785 c 
172.574 409.07 163.426 409.07 156 404.785 c 148.574 400.496 144 392.574 
144 384 c 144 96 l 144 70.539 154.113 46.121 172.117 28.117 c 190.121 10.113
 214.539 0 240 0 c 528 0 l 553.461 0 577.879 10.113 595.883 28.117 c 613.887
 46.121 624 70.539 624 96 c 624 384 l 624 392.574 619.426 400.496 612 404.785
 c 604.574 409.07 595.426 409.07 588 404.785 c 580.574 400.496 576 392.574
 576 384 c 576 96 l 576 83.27 570.941 71.062 561.941 62.059 c 552.938 53.059
 540.73 48 528 48 c 576 672 m 576 684.73 570.941 696.938 561.941 705.941
 c 552.938 714.941 540.73 720 528 720 c 240 720 l 227.27 720 215.062 714.941
 206.059 705.941 c 197.059 696.938 192 684.73 192 672 c 192 576 l 192 567.426
 187.426 559.504 180 555.215 c 172.574 550.93 163.426 550.93 156 555.215
 c 148.574 559.504 144 567.426 144 576 c 144 672 l 144 697.461 154.113 721.879
 172.117 739.883 c 190.121 757.887 214.539 768 240 768 c 528 768 l 553.461
 768 577.879 757.887 595.883 739.883 c 613.887 721.879 624 697.461 624 672
 c 624 576 l 624 567.426 619.426 559.504 612 555.215 c 604.574 550.93 595.426
 550.93 588 555.215 c 580.574 559.504 576 567.426 576 576 c h
82.223 381.793 m 90.008 378.199 95.285 370.727 96.07 362.188 c 96.852 353.648
 93.016 345.34 86.012 340.395 c 79.008 335.449 69.898 334.617 62.113 338.207
 c 45.457 345.887 30.723 354.91 19.777 365.566 c 8.832 376.414 0 390.672
 0 408 c 0 434.207 19.586 453.121 39.504 465.648 c 60.625 478.992 89.566
 490.129 123.266 499.055 c 190.945 517.105 283.105 528 384 528 c 388.734
 528 393.441 527.969 398.113 527.902 c 343.008 583.008 l 336.938 589.078
 334.566 597.926 336.789 606.219 c 339.012 614.512 345.488 620.988 353.781
 623.211 c 362.074 625.434 370.922 623.062 376.992 616.992 c 472.992 520.992
 l 477.508 516.488 480.043 510.375 480.043 504 c 480.043 497.625 477.508
 491.512 472.992 487.008 c 376.992 391.008 l 370.922 384.938 362.074 382.566
 353.781 384.789 c 345.488 387.012 339.012 393.488 336.789 401.781 c 334.566
 410.074 336.938 418.922 343.008 424.992 c 397.969 479.902 l 384 480 l 286.078
 480 198.238 469.391 135.648 452.688 c 104.16 444.289 80.402 434.734 65.09
 425.086 c 48.574 414.672 48 408.289 48 408 c 48 407.855 48 405.168 53.375
 399.84 c 58.895 394.465 68.254 388.223 82.176 381.793 c h
705.887 338.207 m 698.102 334.617 688.992 335.449 681.988 340.395 c 674.984
 345.34 671.148 353.648 671.93 362.188 c 672.715 370.727 677.992 378.199
 685.777 381.793 c 699.793 388.227 709.105 394.465 714.578 399.891 c 720.004
 405.172 720.004 407.859 720.004 408.004 c 720.004 408.148 720.004 411.125
 713.766 416.98 c 707.43 422.836 696.871 429.461 681.27 436.18 c 650.309
 449.621 604.66 461.285 548.645 469.156 c 548.641 469.152 l 540.27 470.484
 533.223 476.133 530.102 484.012 c 526.977 491.891 528.242 500.832 533.426
 507.535 c 538.613 514.242 546.949 517.715 555.359 516.672 c 613.535 508.512
 663.84 496.031 700.32 480.289 c 718.559 472.418 734.543 463.152 746.398
 452.113 c 758.207 441.121 768 426.336 768 408 c 768 390.625 759.168 376.32
 748.223 365.617 c 737.277 354.914 722.543 345.891 705.887 338.211 c 360
 96 m 351.426 96 343.504 100.574 339.215 108 c 334.93 115.426 334.93 124.574
 339.215 132 c 343.504 139.426 351.426 144 360 144 c 408 144 l 416.574 144
 424.496 139.426 428.785 132 c 433.07 124.574 433.07 115.426 428.785 108
 c 424.496 100.574 416.574 96 408 96 c h
360 96 m f*
Q Q
showpage
%%Trailer
%%EOF
