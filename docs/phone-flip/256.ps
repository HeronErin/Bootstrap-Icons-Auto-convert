%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
132 12 m 60 12 l 53.371 12 48 17.371 48 24 c 48 96 l 48 99.312 45.312 102
 42 102 c 38.688 102 36 99.312 36 96 c 36 24 l 36 17.637 38.527 11.531 43.031
 7.031 c 47.531 2.527 53.637 0 60 0 c 132 0 l 138.363 0 144.469 2.527 148.969
 7.031 c 153.473 11.531 156 17.637 156 24 c 156 96 l 156 99.312 153.312 
102 150 102 c 146.688 102 144 99.312 144 96 c 144 24 l 144 20.816 142.734
 17.766 140.484 15.516 c 138.234 13.266 135.184 12 132 12 c 144 168 m 144
 171.184 142.734 174.234 140.484 176.484 c 138.234 178.734 135.184 180 132
 180 c 60 180 l 53.371 180 48 174.629 48 168 c 48 144 l 48 140.688 45.312
 138 42 138 c 38.688 138 36 140.688 36 144 c 36 168 l 36 174.363 38.527 
180.469 43.031 184.969 c 47.531 189.473 53.637 192 60 192 c 132 192 l 138.363
 192 144.469 189.473 148.969 184.969 c 153.473 180.469 156 174.363 156 168
 c 156 144 l 156 140.688 153.312 138 150 138 c 146.688 138 144 140.688 144
 144 c h
20.555 95.449 m 23.566 94.059 24.879 90.496 23.488 87.484 c 22.102 84.477
 18.535 83.164 15.527 84.551 c 11.363 86.473 7.68 88.727 4.941 91.391 c 
2.207 94.105 0 97.668 0 102 c 0 108.551 4.895 113.281 9.875 116.41 c 15.156
 119.746 22.391 122.531 30.816 124.762 c 47.734 129.277 70.777 132 96 132
 c 97.184 132 98.359 131.992 99.527 131.977 c 85.75 145.754 l 85.754 145.754
 l 83.406 148.098 83.406 151.902 85.754 154.246 c 88.098 156.594 91.902 
156.594 94.246 154.246 c 118.246 130.246 l 119.375 129.121 120.012 127.594
 120.012 126 c 120.012 124.406 119.375 122.879 118.246 121.754 c 94.246 
97.754 l 91.902 95.406 88.098 95.406 85.754 97.754 c 83.406 100.098 83.406
 103.902 85.754 106.246 c 99.492 119.973 l 96 120 l 71.52 120 49.559 117.348
 33.91 113.172 c 26.039 111.07 20.098 108.684 16.27 106.273 c 12.145 103.668
 12 102.07 12 102 c 12 101.965 12 101.293 13.344 99.961 c 14.723 98.617 
17.062 97.059 20.543 95.449 c h
176.469 84.555 m 176.473 84.551 l 173.465 83.164 169.898 84.477 168.512
 87.484 c 167.121 90.496 168.434 94.059 171.445 95.449 c 174.949 97.059 
177.277 98.617 178.645 99.973 c 180 101.293 180 101.965 180 102 c 180 102.035
 180 102.781 178.441 104.242 c 176.855 105.707 174.219 107.363 170.316 109.043
 c 162.578 112.402 151.164 115.32 137.16 117.285 c 137.16 117.289 l 133.926
 117.801 131.703 120.812 132.16 124.055 c 132.621 127.293 135.59 129.57 
138.84 129.168 c 153.383 127.129 165.961 124.008 175.078 120.07 c 179.637
 118.102 183.633 115.785 186.598 113.027 c 189.551 110.281 191.996 106.582
 191.996 102 c 191.996 97.656 189.789 94.078 187.051 91.402 c 184.316 88.727
 180.629 86.469 176.465 84.551 c 90 24 m 86.688 24 84 26.688 84 30 c 84 
33.312 86.688 36 90 36 c 102 36 l 105.312 36 108 33.312 108 30 c 108 26.688
 105.312 24 102 24 c h
90 24 m f*
Q Q
showpage
%%Trailer
%%EOF
