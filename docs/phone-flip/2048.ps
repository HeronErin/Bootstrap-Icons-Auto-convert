%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 96 m 480 96 l 454.539 96 430.121 106.113 412.117 124.117 c 394.113
 142.121 384 166.539 384 192 c 384 768 l 384 785.148 374.852 800.996 360
 809.57 c 345.148 818.145 326.852 818.145 312 809.57 c 297.148 800.996 288
 785.148 288 768 c 288 192 l 288 141.078 308.227 92.242 344.234 56.234 c
 380.242 20.227 429.078 0 480 0 c 1056 0 l 1089.703 0 1122.812 8.871 1152
 25.723 c 1181.188 42.574 1205.426 66.812 1222.277 96 c 1239.129 125.188
 1248 158.297 1248 192 c 1248 768 l 1248 785.148 1238.852 800.996 1224 809.57
 c 1209.148 818.145 1190.852 818.145 1176 809.57 c 1161.148 800.996 1152
 785.148 1152 768 c 1152 192 l 1152 166.539 1141.887 142.121 1123.883 124.117
 c 1105.879 106.113 1081.461 96 1056 96 c 1152 1344 m 1152 1369.461 1141.887
 1393.879 1123.883 1411.883 c 1105.879 1429.887 1081.461 1440 1056 1440 
c 480 1440 l 454.539 1440 430.121 1429.887 412.117 1411.883 c 394.113 1393.879
 384 1369.461 384 1344 c 384 1152 l 384 1134.852 374.852 1119.004 360 1110.43
 c 345.148 1101.855 326.852 1101.855 312 1110.43 c 297.148 1119.004 288 
1134.852 288 1152 c 288 1344 l 288 1377.703 296.871 1410.812 313.723 1440
 c 330.574 1469.188 354.812 1493.426 384 1510.277 c 413.188 1527.129 446.297
 1536 480 1536 c 1056 1536 l 1089.703 1536 1122.812 1527.129 1152 1510.277
 c 1181.188 1493.426 1205.426 1469.188 1222.277 1440 c 1239.129 1410.812
 1248 1377.703 1248 1344 c 1248 1152 l 1248 1134.852 1238.852 1119.004 1224
 1110.43 c 1209.148 1101.855 1190.852 1101.855 1176 1110.43 c 1161.148 1119.004
 1152 1134.852 1152 1152 c h
164.449 763.586 m 180.02 756.398 190.574 741.453 192.137 724.375 c 193.699
 707.297 186.031 690.684 172.023 680.789 c 158.016 670.898 139.797 669.23
 124.223 676.414 c 90.91 691.773 61.438 709.82 39.551 731.133 c 17.664 752.832
 0 781.344 0 816 c 0 868.414 39.168 906.238 79.008 931.297 c 121.246 957.984
 179.137 980.258 246.527 998.113 c 381.887 1034.207 566.207 1056 768 1056
 c 777.473 1056 786.879 1055.938 796.223 1055.809 c 686.016 1166.016 l 673.875
 1178.156 669.133 1195.855 673.578 1212.438 c 678.02 1229.023 690.977 1241.98
 707.562 1246.422 c 724.145 1250.867 741.844 1246.125 753.984 1233.984 c
 945.984 1041.984 l 955.012 1032.98 960.086 1020.75 960.086 1008 c 960.086
 995.25 955.012 983.02 945.984 974.016 c 753.984 782.016 l 741.844 769.875
 724.145 765.133 707.562 769.578 c 690.977 774.02 678.02 786.977 673.578
 803.562 c 669.133 820.145 673.875 837.844 686.016 849.984 c 795.938 959.809
 l 768 960 l 572.16 960 396.48 938.785 271.297 905.375 c 208.32 888.574 
160.801 869.473 130.176 850.176 c 97.152 829.344 96 816.574 96 816 c 96 
815.711 96 810.336 106.754 799.68 c 117.793 788.926 136.516 776.449 164.355
 763.582 c h
1411.777 676.418 m 1411.777 676.414 l 1396.203 669.23 1377.984 670.898 
1363.977 680.789 c 1349.969 690.684 1342.301 707.297 1343.863 724.375 c 
1345.426 741.453 1355.98 756.398 1371.551 763.586 c 1399.582 776.449 1418.207
 788.93 1429.152 799.777 c 1440 810.336 1440 815.715 1440 816 c 1440 816.289
 1440 822.238 1427.52 833.953 c 1414.848 845.664 1393.727 858.914 1362.527
 872.352 c 1300.605 899.23 1209.312 922.559 1097.281 938.305 c 1080.539 
940.969 1066.445 952.262 1060.199 968.023 c 1053.953 983.781 1056.484 1001.664
 1066.855 1015.074 c 1077.223 1028.48 1093.898 1035.426 1110.719 1033.344
 c 1227.07 1017.023 1327.68 992.062 1400.641 960.574 c 1437.121 944.832 
1469.09 926.301 1492.801 904.223 c 1516.418 882.238 1536 852.672 1536 816
 c 1536 781.246 1518.336 752.641 1496.449 731.23 c 1474.562 709.824 1445.09
 691.773 1411.777 676.414 c 720 192 m 702.852 192 687.004 201.148 678.43
 216 c 669.855 230.852 669.855 249.148 678.43 264 c 687.004 278.852 702.852
 288 720 288 c 816 288 l 833.148 288 848.996 278.852 857.57 264 c 866.145
 249.148 866.145 230.852 857.57 216 c 848.996 201.148 833.148 192 816 192
 c h
720 192 m f*
Q Q
showpage
%%Trailer
%%EOF
