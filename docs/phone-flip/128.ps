%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
66 6 m 30 6 l 26.688 6 24 8.688 24 12 c 24 48 l 24 49.656 22.656 51 21 
51 c 19.344 51 18 49.656 18 48 c 18 12 l 18 5.371 23.371 0 30 0 c 66 0 l
 69.184 0 72.234 1.266 74.484 3.516 c 76.734 5.766 78 8.816 78 12 c 78 48
 l 78 49.656 76.656 51 75 51 c 73.344 51 72 49.656 72 48 c 72 12 l 72 10.41
 71.367 8.883 70.242 7.758 c 69.117 6.633 67.59 6 66 6 c 72 84 m 72 85.59
 71.367 87.117 70.242 88.242 c 69.117 89.367 67.59 90 66 90 c 30 90 l 26.688
 90 24 87.312 24 84 c 24 72 l 24 70.344 22.656 69 21 69 c 19.344 69 18 70.344
 18 72 c 18 84 l 18 87.184 19.266 90.234 21.516 92.484 c 23.766 94.734 26.816
 96 30 96 c 66 96 l 69.184 96 72.234 94.734 74.484 92.484 c 76.734 90.234
 78 87.184 78 84 c 78 72 l 78 70.344 76.656 69 75 69 c 73.344 69 72 70.344
 72 72 c h
10.277 47.723 m 11.781 47.031 12.438 45.246 11.746 43.742 c 11.051 42.238
 9.27 41.582 7.766 42.277 c 5.684 43.238 3.84 44.367 2.473 45.699 c 1.105
 47.051 0 48.836 0 51 c 0 54.277 2.449 56.641 4.938 58.207 c 7.578 59.875
 11.195 61.266 15.406 62.383 c 23.867 64.637 35.387 66 48 66 c 48.594 66
 49.18 65.996 49.766 65.988 c 42.879 72.875 l 42.875 72.875 l 41.703 74.051
 41.703 75.949 42.875 77.125 c 44.051 78.297 45.949 78.297 47.125 77.125
 c 59.125 65.125 l 59.688 64.562 60.004 63.797 60.004 63 c 60.004 62.203
 59.688 61.438 59.125 60.875 c 47.125 48.875 l 45.949 47.703 44.051 47.703
 42.875 48.875 c 41.703 50.051 41.703 51.949 42.875 53.125 c 49.746 59.988
 l 48 60 l 35.762 60 24.781 58.676 16.957 56.586 c 13.02 55.535 10.051 54.344
 8.137 53.137 c 6.07 51.836 6 51.035 6 51 c 6 50.98 6 50.645 6.672 49.98
 c 7.363 49.309 8.531 48.527 10.273 47.723 c h
88.234 42.273 m 88.234 42.277 l 86.73 41.582 84.949 42.238 84.254 43.742
 c 83.562 45.246 84.219 47.031 85.723 47.723 c 87.477 48.527 88.637 49.309
 89.324 49.984 c 90.004 50.645 90.004 50.98 90.004 51 c 90.004 51.02 90.004
 51.391 89.223 52.121 c 88.43 52.852 87.109 53.68 85.16 54.52 c 81.289 56.199
 75.586 57.656 68.582 58.641 c 68.578 58.645 l 66.965 58.902 65.852 60.406
 66.082 62.027 c 66.309 63.648 67.797 64.785 69.422 64.586 c 76.695 63.566
 82.98 62.008 87.543 60.039 c 89.824 59.055 91.82 57.898 93.305 56.516 c
 94.781 55.141 96.004 53.293 96.004 51 c 96.004 48.828 94.898 47.039 93.531
 45.703 c 92.164 44.363 90.32 43.238 88.238 42.277 c 45 12 m 43.344 12 42
 13.344 42 15 c 42 16.656 43.344 18 45 18 c 51 18 l 52.656 18 54 16.656 
54 15 c 54 13.344 52.656 12 51 12 c h
45 12 m f*
Q Q
showpage
%%Trailer
%%EOF
