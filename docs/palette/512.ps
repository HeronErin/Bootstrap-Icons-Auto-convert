%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 120 m 204.863 120 216.746 113.137 223.176 102 c 229.609 90.863 229.609
 77.137 223.176 66 c 216.746 54.863 204.863 48 192 48 c 179.137 48 167.254
 54.863 160.824 66 c 154.391 77.137 154.391 90.863 160.824 102 c 167.254
 113.137 179.137 120 192 120 c 288 192 m 300.863 192 312.746 185.137 319.176
 174 c 325.609 162.863 325.609 149.137 319.176 138 c 312.746 126.863 300.863
 120 288 120 c 275.137 120 263.254 126.863 256.824 138 c 250.391 149.137
 250.391 162.863 256.824 174 c 263.254 185.137 275.137 192 288 192 c 132
 168 m 132 180.863 125.137 192.746 114 199.176 c 102.863 205.609 89.137 
205.609 78 199.176 c 66.863 192.746 60 180.863 60 168 c 60 155.137 66.863
 143.254 78 136.824 c 89.137 130.391 102.863 130.391 114 136.824 c 125.137
 143.254 132 155.137 132 168 c 144 312 m 156.863 312 168.746 305.137 175.176
 294 c 181.609 282.863 181.609 269.137 175.176 258 c 168.746 246.863 156.863
 240 144 240 c 131.137 240 119.254 246.863 112.824 258 c 106.391 269.137
 106.391 282.863 112.824 294 c 119.254 305.137 131.137 312 144 312 c f
384 192 m 384 267.602 339.215 254.039 298.391 241.68 c 274.078 234.312 
251.16 227.352 240 240 c 225.527 256.391 228.602 283.656 231.574 310.078
 c 235.824 347.879 239.902 384 192 384 c 141.078 384 92.242 363.773 56.234
 327.766 c 20.227 291.758 0 242.922 0 192 c 0 141.078 20.227 92.242 56.234
 56.234 c 92.242 20.227 141.078 0 192 0 c 242.922 0 291.758 20.227 327.766
 56.234 c 363.773 92.242 384 141.078 384 192 c 192 360 m 206.664 360 207.695
 355.895 207.719 355.777 c 209.59 352.273 210.695 344.641 209.398 328.922
 c 209.062 324.891 208.512 320.043 207.934 314.738 c 206.688 303.602 205.246
 290.617 205.102 279.648 c 204.863 262.68 207.094 241.008 221.996 224.113
 c 230.852 214.105 242.277 210.242 252.523 209.281 c 262.219 208.371 272.012
 209.906 280.363 211.777 c 288.594 213.625 297.211 216.242 304.965 218.594
 c 305.637 218.785 l 313.941 221.305 321.43 223.562 328.508 225.168 c 344.18
 228.719 350.203 227.16 352.293 225.742 c 353.207 225.121 360 219.863 360
 192 c 360 147.445 342.301 104.711 310.793 73.207 c 279.289 41.699 236.555
 24 192 24 c 147.445 24 104.711 41.699 73.207 73.207 c 41.699 104.711 24
 147.445 24 192 c 24 236.555 41.699 279.289 73.207 310.793 c 104.711 342.301
 147.445 360 192 360 c f
Q Q
showpage
%%Trailer
%%EOF
