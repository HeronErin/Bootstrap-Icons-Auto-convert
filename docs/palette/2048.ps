%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 480 m 819.445 480 866.984 452.555 892.707 408 c 918.43 363.445 918.43
 308.555 892.707 264 c 866.984 219.445 819.445 192 768 192 c 716.555 192
 669.016 219.445 643.293 264 c 617.57 308.555 617.57 363.445 643.293 408
 c 669.016 452.555 716.555 480 768 480 c 1152 768 m 1203.445 768 1250.984
 740.555 1276.707 696 c 1302.43 651.445 1302.43 596.555 1276.707 552 c 1250.984
 507.445 1203.445 480 1152 480 c 1100.555 480 1053.016 507.445 1027.293 
552 c 1001.57 596.555 1001.57 651.445 1027.293 696 c 1053.016 740.555 1100.555
 768 1152 768 c 528 672 m 528 723.445 500.555 770.984 456 796.707 c 411.445
 822.43 356.555 822.43 312 796.707 c 267.445 770.984 240 723.445 240 672
 c 240 620.555 267.445 573.016 312 547.293 c 356.555 521.57 411.445 521.57
 456 547.293 c 500.555 573.016 528 620.555 528 672 c 576 1248 m 627.445 
1248 674.984 1220.555 700.707 1176 c 726.43 1131.445 726.43 1076.555 700.707
 1032 c 674.984 987.445 627.445 960 576 960 c 524.555 960 477.016 987.445
 451.293 1032 c 425.57 1076.555 425.57 1131.445 451.293 1176 c 477.016 1220.555
 524.555 1248 576 1248 c f
1536 768 m 1536 1070.398 1356.863 1016.16 1193.566 966.719 c 1096.32 937.246
 1004.641 909.406 960 960 c 902.113 1025.566 914.398 1134.625 926.305 1240.32
 c 943.297 1391.52 959.617 1536 768 1536 c 564.312 1536 368.969 1455.086
 224.941 1311.059 c 80.914 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969
 224.941 224.941 c 368.969 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914
 1311.059 224.941 c 1455.086 368.969 1536 564.312 1536 768 c 768 1440 m 
826.656 1440 830.785 1423.586 830.879 1423.105 c 838.367 1409.09 842.781
 1378.562 837.598 1315.68 c 836.254 1299.551 834.047 1280.16 831.742 1258.945
 c 826.75 1214.402 820.988 1162.465 820.414 1118.594 c 819.453 1050.723 
828.383 964.035 888 896.449 c 923.426 856.418 969.121 840.961 1010.113 837.121
 c 1048.898 833.473 1088.066 839.617 1121.473 847.105 c 1154.402 854.496
 1188.863 864.961 1219.871 874.371 c 1222.559 875.141 l 1255.773 885.219
 1285.727 894.246 1314.047 900.676 c 1376.734 914.883 1400.832 908.645 1409.184
 902.98 c 1412.832 900.48 1440 879.457 1440 768 c 1440 589.773 1369.199 
418.848 1243.176 292.824 c 1117.152 166.801 946.227 96 768 96 c 589.773 
96 418.848 166.801 292.824 292.824 c 166.801 418.848 96 589.773 96 768 c
 96 946.227 166.801 1117.152 292.824 1243.176 c 418.848 1369.199 589.773
 1440 768 1440 c f
Q Q
showpage
%%Trailer
%%EOF
