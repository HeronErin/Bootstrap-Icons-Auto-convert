%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 240 m 409.723 240 433.492 226.277 446.355 204 c 459.215 181.723 459.215
 154.277 446.355 132 c 433.492 109.723 409.723 96 384 96 c 358.277 96 334.508
 109.723 321.645 132 c 308.785 154.277 308.785 181.723 321.645 204 c 334.508
 226.277 358.277 240 384 240 c 576 384 m 601.723 384 625.492 370.277 638.355
 348 c 651.215 325.723 651.215 298.277 638.355 276 c 625.492 253.723 601.723
 240 576 240 c 550.277 240 526.508 253.723 513.645 276 c 500.785 298.277
 500.785 325.723 513.645 348 c 526.508 370.277 550.277 384 576 384 c 264
 336 m 264 361.723 250.277 385.492 228 398.355 c 205.723 411.215 178.277
 411.215 156 398.355 c 133.723 385.492 120 361.723 120 336 c 120 310.277
 133.723 286.508 156 273.645 c 178.277 260.785 205.723 260.785 228 273.645
 c 250.277 286.508 264 310.277 264 336 c 288 624 m 313.723 624 337.492 610.277
 350.355 588 c 363.215 565.723 363.215 538.277 350.355 516 c 337.492 493.723
 313.723 480 288 480 c 262.277 480 238.508 493.723 225.645 516 c 212.785
 538.277 212.785 565.723 225.645 588 c 238.508 610.277 262.277 624 288 624
 c f
768 384 m 768 535.199 678.434 508.078 596.785 483.359 c 548.16 468.625 
502.32 454.703 480 480 c 451.055 512.785 457.199 567.312 463.152 620.16 
c 471.648 695.762 479.809 768 384 768 c 282.156 768 184.484 727.543 112.473
 655.527 c 40.457 583.516 0 485.844 0 384 c 0 282.156 40.457 184.484 112.473
 112.473 c 184.484 40.457 282.156 0 384 0 c 485.844 0 583.516 40.457 655.527
 112.473 c 727.543 184.484 768 282.156 768 384 c 384 720 m 413.328 720 415.391
 711.793 415.441 711.551 c 419.184 704.543 421.395 689.277 418.801 657.84
 c 418.129 649.777 417.023 640.078 415.871 629.473 c 413.375 607.199 410.496
 581.234 410.207 559.297 c 409.727 525.359 414.191 482.016 444 448.227 c
 461.711 428.211 484.559 420.484 505.055 418.562 c 524.445 416.738 544.031
 419.809 560.734 423.555 c 577.199 427.25 594.43 432.484 609.934 437.188
 c 611.277 437.57 l 627.887 442.609 642.863 447.121 657.02 450.34 c 688.363
 457.445 700.41 454.324 704.586 451.492 c 706.414 450.238 720 439.727 720
 384 c 720 294.887 684.602 209.426 621.586 146.414 c 558.574 83.398 473.113
 48 384 48 c 294.887 48 209.426 83.398 146.414 146.414 c 83.398 209.426 
48 294.887 48 384 c 48 473.113 83.398 558.574 146.414 621.586 c 209.426 
684.602 294.887 720 384 720 c f
Q Q
showpage
%%Trailer
%%EOF
