%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
127.586 529.246 m 133.617 531.262 138.602 535.59 141.445 541.277 c 144.289
 546.965 144.758 553.551 142.754 559.586 c 118.754 631.586 l 116.926 637.848
 112.629 643.094 106.852 646.121 c 101.074 649.148 94.312 649.695 88.121
 647.633 c 81.934 645.57 76.852 641.078 74.047 635.188 c 71.238 629.301 
70.953 622.523 73.246 616.414 c 97.246 544.414 l 99.262 538.383 103.59 533.398
 109.277 530.555 c 114.965 527.711 121.551 527.242 127.586 529.246 c 583.586
 529.246 m 589.617 531.262 594.602 535.59 597.445 541.277 c 600.289 546.965
 600.758 553.551 598.754 559.586 c 574.754 631.586 l 572.926 637.848 568.629
 643.094 562.852 646.121 c 557.074 649.148 550.312 649.695 544.121 647.633
 c 537.934 645.57 532.852 641.078 530.047 635.188 c 527.238 629.301 526.953
 622.523 529.246 616.414 c 553.246 544.414 l 555.262 538.383 559.59 533.398
 565.277 530.555 c 570.965 527.711 577.551 527.242 583.586 529.246 c 223.586
 601.246 m 229.617 603.262 234.602 607.59 237.445 613.277 c 240.289 618.965
 240.758 625.551 238.754 631.586 c 214.754 703.586 l 212.926 709.848 208.629
 715.094 202.852 718.121 c 197.074 721.148 190.312 721.695 184.121 719.633
 c 177.934 717.57 172.852 713.078 170.047 707.188 c 167.238 701.301 166.953
 694.523 169.246 688.414 c 193.246 616.414 l 195.262 610.383 199.59 605.398
 205.277 602.555 c 210.965 599.711 217.551 599.242 223.586 601.246 c 679.586
 601.246 m 685.617 603.262 690.602 607.59 693.445 613.277 c 696.289 618.965
 696.758 625.551 694.754 631.586 c 670.754 703.586 l 668.926 709.848 664.629
 715.094 658.852 718.121 c 653.074 721.148 646.312 721.695 640.121 719.633
 c 633.934 717.57 628.852 713.078 626.047 707.188 c 623.238 701.301 622.953
 694.523 625.246 688.414 c 649.246 616.414 l 651.262 610.383 655.59 605.398
 661.277 602.555 c 666.965 599.711 673.551 599.242 679.586 601.246 c 643.441
 193.293 m 643.441 193.297 l 633.473 143.047 607.691 97.305 569.867 62.758
 c 532.039 28.211 484.156 6.672 433.211 1.285 c 382.27 -4.098 330.938 6.957
 286.727 32.832 c 242.516 58.707 207.742 98.051 187.488 145.105 c 157.125
 141.605 126.379 146.457 98.57 159.137 c 70.758 171.816 46.934 191.844 29.66
 217.059 c 12.387 242.277 2.32 271.727 0.547 302.242 c -1.23 332.754 5.352
 363.172 19.582 390.223 c 33.816 417.273 55.156 439.93 81.309 455.746 c 
107.461 471.566 137.434 479.953 168 480 c 624 480 l 673.172 480.055 718.969
 455.02 745.469 413.602 c 771.965 372.18 775.496 320.102 754.832 275.484
 c 734.168 230.867 692.168 199.879 643.441 193.297 c 408 48 m 455.23 47.988
 500.805 65.391 536.016 96.871 c 571.223 128.352 593.594 171.703 598.848
 218.641 c 599.5 224.539 602.312 229.984 606.746 233.93 c 611.18 237.871
 616.914 240.035 622.848 240 c 624 240 l 658.297 240 689.988 258.297 707.137
 288 c 724.289 317.703 724.289 354.297 707.137 384 c 689.988 413.703 658.297
 432 624 432 c 168 432 l 133.637 431.984 100.926 417.234 78.164 391.492 
c 55.398 365.746 44.766 331.48 48.953 297.371 c 53.145 263.266 71.754 232.59
 100.07 213.117 c 128.387 193.648 163.691 187.254 197.039 195.551 c 202.922
 197.02 209.141 196.207 214.445 193.277 c 219.754 190.348 223.754 185.52
 225.648 179.762 c 238.32 141.41 262.766 108.031 295.504 84.375 c 328.242
 60.719 367.609 47.988 408 48 c 338.543 541.246 m 340.539 537.266 343.602
 533.918 347.391 531.578 c 351.18 529.238 355.547 528 360 528 c 408 528 
l 415.711 528.004 422.949 531.715 427.457 537.973 c 431.961 544.227 433.188
 552.27 430.754 559.586 c 417.312 600 l 456 600 l 462.051 600.008 467.879
 602.305 472.309 606.426 c 476.742 610.547 479.453 616.191 479.898 622.227
 c 480.348 628.266 478.496 634.246 474.719 638.977 c 378.719 758.977 l 374.117
 764.691 367.156 767.988 359.816 767.926 c 352.48 767.863 345.574 764.445
 341.07 758.648 c 336.57 752.855 334.965 745.316 336.719 738.191 c 353.281
 672 l 312 672 l 303.68 672 295.949 667.688 291.578 660.609 c 287.207 653.527
 286.816 644.688 290.543 637.246 c h
338.543 541.246 m f
Q Q
showpage
%%Trailer
%%EOF
