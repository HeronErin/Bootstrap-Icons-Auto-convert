%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
1.992 8.27 m 2.191 8.336 2.297 8.547 2.23 8.742 c 1.855 9.867 l 1.828 9.965
 1.762 10.047 1.668 10.094 c 1.578 10.145 1.473 10.152 1.375 10.121 c 1.281
 10.086 1.199 10.016 1.156 9.926 c 1.113 9.832 1.109 9.727 1.145 9.633 c
 1.52 8.508 l 1.586 8.309 1.797 8.203 1.992 8.27 c 9.117 8.27 m 9.316 8.336
 9.422 8.547 9.355 8.742 c 8.98 9.867 l 8.953 9.965 8.887 10.047 8.793 10.094
 c 8.703 10.145 8.598 10.152 8.5 10.121 c 8.406 10.086 8.324 10.016 8.281
 9.926 c 8.238 9.832 8.234 9.727 8.27 9.633 c 8.645 8.508 l 8.711 8.309 
8.922 8.203 9.117 8.27 c 3.492 9.395 m 3.691 9.461 3.797 9.672 3.73 9.867
 c 3.355 10.992 l 3.328 11.09 3.262 11.172 3.168 11.219 c 3.078 11.27 2.973
 11.277 2.875 11.246 c 2.781 11.211 2.699 11.141 2.656 11.051 c 2.613 10.957
 2.609 10.852 2.645 10.758 c 3.02 9.633 l 3.086 9.434 3.297 9.328 3.492 
9.395 c 10.617 9.395 m 10.816 9.461 10.922 9.672 10.855 9.867 c 10.48 10.992
 l 10.453 11.09 10.387 11.172 10.293 11.219 c 10.203 11.27 10.098 11.277
 10 11.246 c 9.906 11.211 9.824 11.141 9.781 11.051 c 9.738 10.957 9.734
 10.852 9.77 10.758 c 10.145 9.633 l 10.211 9.434 10.422 9.328 10.617 9.395
 c 10.051 3.02 m 10.055 3.02 l 9.734 1.41 8.402 0.191 6.77 0.02 c 5.137 
-0.152 3.578 0.758 2.93 2.266 c 2.211 2.184 1.492 2.402 0.941 2.867 c 0.387
 3.332 0.051 4 0.008 4.723 c -0.035 5.441 0.223 6.148 0.719 6.676 c 1.215
 7.199 1.902 7.5 2.625 7.5 c 9.75 7.5 l 10.934 7.5 11.918 6.586 11.996 5.402
 c 12.078 4.219 11.227 3.18 10.055 3.02 c 6.375 0.75 m 7.902 0.75 9.188 
1.898 9.355 3.418 c 9.379 3.605 9.539 3.75 9.73 3.75 c 9.75 3.75 l 10.578
 3.75 11.25 4.422 11.25 5.25 c 11.25 6.078 10.578 6.75 9.75 6.75 c 2.625
 6.75 l 2.09 6.75 1.578 6.52 1.223 6.117 c 0.867 5.715 0.699 5.18 0.766 
4.645 c 0.832 4.113 1.121 3.633 1.562 3.328 c 2.008 3.027 2.559 2.926 3.078
 3.055 c 3.27 3.102 3.465 2.996 3.527 2.809 c 3.934 1.578 5.082 0.75 6.375
 0.75 c 5.289 8.457 m 5.352 8.332 5.484 8.25 5.625 8.25 c 6.375 8.25 l 6.496
 8.25 6.609 8.309 6.68 8.406 c 6.75 8.504 6.77 8.629 6.73 8.742 c 6.52 9.375
 l 7.125 9.375 l 7.27 9.375 7.398 9.457 7.461 9.586 c 7.523 9.719 7.508 
9.871 7.418 9.984 c 5.918 11.859 l 5.809 11.996 5.617 12.039 5.461 11.961
 c 5.301 11.883 5.219 11.703 5.262 11.535 c 5.52 10.5 l 4.875 10.5 l 4.746
 10.5 4.625 10.434 4.555 10.32 c 4.488 10.211 4.48 10.074 4.539 9.957 c 
h
5.289 8.457 m f
Q Q
showpage
%%Trailer
%%EOF
