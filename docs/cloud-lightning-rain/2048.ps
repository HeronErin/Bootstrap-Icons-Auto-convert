%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
255.168 1058.496 m 267.23 1062.527 277.199 1071.18 282.891 1082.555 c 288.578
 1093.93 289.516 1107.098 285.504 1119.168 c 237.504 1263.168 l 233.852 
1275.691 225.258 1286.191 213.699 1292.246 c 202.145 1298.301 188.621 1299.391
 176.246 1295.266 c 163.867 1291.141 153.703 1282.152 148.094 1270.375 c
 142.48 1258.598 141.902 1245.043 146.496 1232.832 c 194.496 1088.832 l 
198.527 1076.77 207.18 1066.801 218.555 1061.109 c 229.93 1055.422 243.098
 1054.484 255.168 1058.496 c 1167.168 1058.496 m 1179.23 1062.527 1189.199
 1071.18 1194.891 1082.555 c 1200.578 1093.93 1201.516 1107.098 1197.504
 1119.168 c 1149.504 1263.168 l 1145.852 1275.691 1137.258 1286.191 1125.699
 1292.246 c 1114.145 1298.301 1100.621 1299.391 1088.246 1295.266 c 1075.867
 1291.141 1065.703 1282.152 1060.094 1270.375 c 1054.48 1258.598 1053.902
 1245.043 1058.496 1232.832 c 1106.496 1088.832 l 1110.527 1076.77 1119.18
 1066.801 1130.555 1061.109 c 1141.93 1055.422 1155.098 1054.484 1167.168
 1058.496 c 447.168 1202.496 m 459.23 1206.527 469.199 1215.18 474.891 1226.555
 c 480.578 1237.93 481.516 1251.098 477.504 1263.168 c 429.504 1407.168 
l 425.852 1419.691 417.258 1430.191 405.699 1436.246 c 394.145 1442.301 
380.621 1443.391 368.246 1439.266 c 355.867 1435.141 345.703 1426.152 340.094
 1414.375 c 334.48 1402.598 333.902 1389.043 338.496 1376.832 c 386.496 
1232.832 l 390.527 1220.77 399.18 1210.801 410.555 1205.109 c 421.93 1199.422
 435.098 1198.484 447.168 1202.496 c 1359.168 1202.496 m 1371.23 1206.527
 1381.199 1215.18 1386.891 1226.555 c 1392.578 1237.93 1393.516 1251.098
 1389.504 1263.168 c 1341.504 1407.168 l 1337.852 1419.691 1329.258 1430.191
 1317.699 1436.246 c 1306.145 1442.301 1292.621 1443.391 1280.246 1439.266
 c 1267.867 1435.141 1257.703 1426.152 1252.094 1414.375 c 1246.48 1402.598
 1245.902 1389.043 1250.496 1376.832 c 1298.496 1232.832 l 1302.527 1220.77
 1311.18 1210.801 1322.555 1205.109 c 1333.93 1199.422 1347.098 1198.484
 1359.168 1202.496 c 1286.879 386.594 m 1266.945 286.094 1215.383 194.613
 1139.73 125.52 c 1064.082 56.422 968.312 13.344 866.422 2.574 c 764.535
 -8.195 661.875 13.914 573.453 65.664 c 485.027 117.418 415.48 196.102 374.977
 290.207 c 314.246 283.211 252.762 292.918 197.141 318.273 c 141.516 343.633
 93.867 383.688 59.32 434.121 c 24.773 484.551 4.641 543.453 1.09 604.48
 c -2.461 665.508 10.703 726.348 39.168 780.445 c 67.629 834.547 110.312
 879.855 162.617 911.496 c 214.926 943.133 274.871 959.906 336 960 c 1248
 960 l 1321.066 960.082 1391.434 932.391 1444.848 882.535 c 1498.262 832.68
 1530.727 764.383 1535.668 691.484 c 1540.613 618.586 1517.664 546.531 1471.469
 489.922 c 1425.273 433.309 1359.289 396.371 1286.879 386.594 c 816 96 m
 910.461 95.98 1001.613 130.777 1072.031 193.738 c 1142.445 256.699 1187.188
 343.406 1197.695 437.281 c 1199 449.074 1204.629 459.969 1213.492 467.855
 c 1222.355 475.746 1233.828 480.07 1245.695 480 c 1248 480 l 1298.922 480
 1347.758 500.227 1383.766 536.234 c 1419.773 572.242 1440 621.078 1440 
672 c 1440 722.922 1419.773 771.758 1383.766 807.766 c 1347.758 843.773 
1298.922 864 1248 864 c 336 864 l 290.566 863.977 246.07 851.059 207.688
 826.746 c 169.305 802.43 138.613 767.723 119.18 726.652 c 99.746 685.582
 92.371 639.84 97.91 594.742 c 103.449 549.648 121.672 507.051 150.469 471.902
 c 179.262 436.758 217.441 410.508 260.566 396.203 c 303.691 381.898 349.988
 380.133 394.078 391.105 c 405.844 394.039 418.281 392.414 428.895 386.555
 c 439.508 380.695 447.512 371.035 451.297 359.52 c 476.641 282.816 525.531
 216.059 591.008 168.75 c 656.488 121.438 735.219 95.98 816 96 c 677.09 
1082.496 m 681.078 1074.531 687.207 1067.836 694.785 1063.156 c 702.363 
1058.48 711.094 1056 720 1056 c 816 1056 l 831.422 1056.012 845.898 1063.43
 854.91 1075.945 c 863.926 1088.457 866.379 1104.539 861.504 1119.168 c 
834.625 1200 l 912 1200 l 924.105 1200.016 935.758 1204.609 944.621 1212.852
 c 953.484 1221.094 958.906 1232.383 959.801 1244.457 c 960.695 1256.527
 956.992 1268.492 949.441 1277.953 c 757.441 1517.953 l 748.238 1529.383
 734.309 1535.977 719.633 1535.852 c 704.957 1535.723 691.145 1528.891 682.145
 1517.297 c 673.141 1505.707 669.934 1490.637 673.441 1476.383 c 706.559
 1344 l 624 1344 l 607.355 1344 591.902 1335.379 583.16 1321.215 c 574.414
 1307.055 573.633 1289.375 581.09 1274.496 c h
677.09 1082.496 m f
Q Q
showpage
%%Trailer
%%EOF
