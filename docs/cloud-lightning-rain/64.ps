%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
7.973 33.078 m 8.758 33.34 9.184 34.188 8.922 34.973 c 7.422 39.473 l 7.309
 39.867 7.039 40.195 6.68 40.383 c 6.316 40.57 5.895 40.605 5.508 40.477
 c 5.121 40.348 4.805 40.066 4.629 39.699 c 4.453 39.332 4.434 38.906 4.578
 38.527 c 6.078 34.027 l 6.34 33.242 7.188 32.816 7.973 33.078 c 36.473 
33.078 m 37.258 33.34 37.684 34.188 37.422 34.973 c 35.922 39.473 l 35.809
 39.867 35.539 40.195 35.18 40.383 c 34.816 40.57 34.395 40.605 34.008 40.477
 c 33.621 40.348 33.305 40.066 33.129 39.699 c 32.953 39.332 32.934 38.906
 33.078 38.527 c 34.578 34.027 l 34.84 33.242 35.688 32.816 36.473 33.078
 c 13.973 37.578 m 14.758 37.84 15.184 38.688 14.922 39.473 c 13.422 43.973
 l 13.309 44.367 13.039 44.695 12.68 44.883 c 12.316 45.07 11.895 45.105
 11.508 44.977 c 11.121 44.848 10.805 44.566 10.629 44.199 c 10.453 43.832
 10.434 43.406 10.578 43.027 c 12.078 38.527 l 12.34 37.742 13.188 37.316
 13.973 37.578 c 42.473 37.578 m 43.258 37.84 43.684 38.688 43.422 39.473
 c 41.922 43.973 l 41.809 44.367 41.539 44.695 41.18 44.883 c 40.816 45.07
 40.395 45.105 40.008 44.977 c 39.621 44.848 39.305 44.566 39.129 44.199
 c 38.953 43.832 38.934 43.406 39.078 43.027 c 40.578 38.527 l 40.84 37.742
 41.688 37.316 42.473 37.578 c 40.215 12.082 m 39.379 7.867 36.773 4.211
 33.062 2.043 c 29.352 -0.121 24.891 -0.594 20.809 0.75 c 16.727 2.094 13.418
 5.121 11.719 9.07 c 8.848 8.738 5.973 9.605 3.762 11.461 c 1.551 13.32 
0.203 16.008 0.035 18.891 c -0.133 21.773 0.895 24.598 2.875 26.699 c 4.855
 28.801 7.613 29.996 10.5 30 c 39 30 l 43.738 30.004 47.668 26.336 47.988
 21.609 c 48.309 16.883 44.91 12.715 40.215 12.082 c 25.5 3 m 31.613 3 36.75
 7.59 37.43 13.664 c 37.512 14.43 38.16 15.004 38.93 15 c 39 15 l 42.312
 15 45 17.688 45 21 c 45 24.312 42.312 27 39 27 c 10.5 27 l 8.352 27 6.309
 26.078 4.887 24.469 c 3.461 22.859 2.797 20.719 3.059 18.586 c 3.32 16.453
 4.484 14.535 6.254 13.32 c 8.023 12.102 10.23 11.703 12.316 12.223 c 13.078
 12.414 13.859 11.98 14.102 11.234 c 15.727 6.32 20.32 3 25.5 3 c 21.16 
33.828 m 21.414 33.32 21.934 33 22.5 33 c 25.5 33 l 25.98 33 26.434 33.23
 26.715 33.625 c 26.996 34.016 27.074 34.516 26.922 34.973 c 26.082 37.5
 l 28.5 37.5 l 29.074 37.5 29.602 37.832 29.852 38.352 c 30.098 38.871 30.031
 39.484 29.672 39.938 c 23.672 47.438 l 23.23 47.984 22.465 48.152 21.836
 47.84 c 21.207 47.527 20.879 46.82 21.047 46.137 c 22.078 42 l 19.5 42 
l 18.98 42 18.496 41.73 18.223 41.289 c 17.949 40.844 17.926 40.293 18.16
 39.828 c h
21.16 33.828 m f
Q Q
showpage
%%Trailer
%%EOF
