%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 1 11 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 1 11 11
12 12 cairo_set_page_size
%%EndPageSetup
q 1 1 10 10 rectclip
1 0 0 -1 0 12 cm q
0 g
8.566 6 m 8.895 5.961 9.176 5.898 9.348 5.801 c 10.059 5.383 10.301 4.469
 9.887 3.754 c 9.477 3.039 8.566 2.793 7.848 3.199 c 7.676 3.297 7.48 3.508
 7.285 3.773 c 7.414 3.473 7.5 3.199 7.5 3 c 7.5 2.172 6.828 1.5 6 1.5 c
 5.172 1.5 4.5 2.172 4.5 3 c 4.5 3.199 4.586 3.473 4.715 3.777 c 4.52 3.512
 4.324 3.301 4.152 3.203 c 4.152 3.199 l 3.434 2.793 2.523 3.039 2.113 3.754
 c 1.699 4.469 1.941 5.383 2.652 5.801 c 2.824 5.898 3.105 5.961 3.434 6
 c 3.105 6.039 2.824 6.102 2.652 6.199 c 2.305 6.398 2.051 6.727 1.945 7.113
 c 1.84 7.496 1.895 7.91 2.094 8.254 c 2.293 8.602 2.625 8.852 3.012 8.957
 c 3.395 9.059 3.809 9 4.152 8.801 c 4.324 8.703 4.52 8.492 4.715 8.227 
c 4.586 8.527 4.5 8.801 4.5 9 c 4.5 9.828 5.172 10.5 6 10.5 c 6.828 10.5
 7.5 9.828 7.5 9 c 7.5 8.801 7.414 8.527 7.285 8.223 c 7.48 8.488 7.676 
8.699 7.848 8.797 c 7.848 8.801 l 8.191 9 8.605 9.059 8.988 8.957 c 9.375
 8.852 9.707 8.602 9.906 8.254 c 10.105 7.91 10.16 7.496 10.055 7.113 c 
9.949 6.727 9.695 6.398 9.348 6.199 c 9.176 6.102 8.895 6.039 8.566 6 c 
6.75 3 m 6.742 3.051 6.73 3.102 6.715 3.152 c 6.684 3.254 6.641 3.375 6.578
 3.516 c 6.438 3.832 6.277 4.137 6.102 4.434 c 6 4.605 l 5.898 4.434 l 5.723
 4.137 5.562 3.832 5.422 3.516 c 5.367 3.398 5.32 3.277 5.285 3.152 c 5.27
 3.102 5.258 3.051 5.25 3 c 5.25 2.586 5.586 2.25 6 2.25 c 6.414 2.25 6.75
 2.586 6.75 3 c 2.754 4.125 m 2.961 3.766 3.418 3.645 3.777 3.852 c 3.816
 3.883 3.855 3.918 3.895 3.957 c 3.965 4.031 4.047 4.133 4.141 4.258 c 4.324
 4.508 4.516 4.816 4.695 5.129 c 4.793 5.305 l 4.594 5.305 l 4.25 5.309 
3.902 5.293 3.559 5.258 c 3.43 5.246 3.305 5.227 3.176 5.199 c 3.125 5.184
 3.074 5.168 3.027 5.148 c 2.668 4.941 2.547 4.484 2.754 4.125 c 3.777 8.148
 m 3.418 8.352 2.965 8.23 2.758 7.871 c 2.551 7.516 2.672 7.059 3.027 6.852
 c 3.062 6.836 l 3.09 6.824 3.129 6.816 3.176 6.805 c 3.277 6.781 3.402 
6.762 3.559 6.742 c 3.902 6.707 4.25 6.691 4.594 6.695 c 4.66 6.695 4.727
 6.695 4.793 6.695 c 4.695 6.871 l 4.516 7.184 4.324 7.492 4.141 7.742 c
 4.137 7.742 l 4.062 7.848 3.98 7.949 3.895 8.043 c 3.855 8.082 3.816 8.117
 3.777 8.148 c 6.75 9 m 6.75 9.414 6.414 9.75 6 9.75 c 5.586 9.75 5.25 9.414
 5.25 9 c 5.258 8.949 5.27 8.895 5.285 8.844 c 5.312 8.746 5.359 8.625 5.422
 8.48 c 5.547 8.195 5.719 7.875 5.898 7.562 c 6 7.395 l 6.102 7.566 l 6.281
 7.879 6.453 8.199 6.578 8.484 c 6.641 8.625 6.688 8.746 6.715 8.848 c 6.73
 8.898 6.742 8.949 6.75 9 c 9.246 4.125 m 9.453 4.484 9.332 4.941 8.973 
5.148 c 8.926 5.168 8.875 5.184 8.824 5.199 c 8.723 5.223 8.598 5.242 8.441
 5.262 c 8.133 5.297 7.77 5.309 7.406 5.309 c 7.34 5.309 7.273 5.309 7.207
 5.309 c 7.305 5.133 l 7.484 4.82 7.676 4.512 7.859 4.262 c 7.863 4.258 
l 7.938 4.152 8.02 4.051 8.105 3.957 c 8.141 3.922 8.168 3.891 8.191 3.875
 c 8.223 3.852 l 8.582 3.645 9.039 3.766 9.246 4.125 c 8.223 8.148 m 8.184
 8.117 8.145 8.082 8.105 8.043 c 8.02 7.949 7.938 7.848 7.863 7.742 c 7.66
 7.461 7.477 7.172 7.305 6.871 c 7.207 6.695 l 7.406 6.695 l 7.766 6.695
 8.133 6.707 8.441 6.742 c 8.594 6.758 8.723 6.781 8.824 6.805 c 8.875 6.816
 8.91 6.828 8.938 6.836 c 8.973 6.852 l 9.148 6.949 9.273 7.113 9.328 7.305
 c 9.379 7.496 9.352 7.703 9.254 7.875 c 9.152 8.051 8.988 8.176 8.793 8.227
 c 8.602 8.277 8.395 8.25 8.223 8.148 c h
6 6.75 m 5.586 6.75 5.25 6.414 5.25 6 c 5.25 5.586 5.586 5.25 6 5.25 c 
6.414 5.25 6.75 5.586 6.75 6 c 6.75 6.414 6.414 6.75 6 6.75 c f
Q Q
showpage
%%Trailer
%%EOF
