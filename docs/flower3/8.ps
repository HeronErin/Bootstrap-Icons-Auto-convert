%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.285 3 m 4.449 2.98 4.59 2.949 4.676 2.898 c 5.031 2.691 5.148 2.234 4.945
 1.879 c 4.738 1.52 4.281 1.398 3.926 1.602 c 3.84 1.652 3.742 1.758 3.645
 1.891 c 3.707 1.734 3.75 1.598 3.75 1.5 c 3.75 1.086 3.414 0.75 3 0.75 
c 2.586 0.75 2.25 1.086 2.25 1.5 c 2.25 1.598 2.293 1.734 2.359 1.887 c 
2.262 1.754 2.164 1.648 2.078 1.598 c 2.074 1.602 l 1.719 1.398 1.262 1.52
 1.055 1.879 c 0.852 2.234 0.969 2.691 1.324 2.898 c 1.41 2.949 1.551 2.98
 1.715 3 c 1.551 3.02 1.41 3.051 1.324 3.102 c 1.152 3.199 1.023 3.363 0.973
 3.555 c 0.922 3.75 0.949 3.953 1.047 4.129 c 1.148 4.301 1.312 4.426 1.504
 4.477 c 1.699 4.527 1.902 4.5 2.074 4.398 c 2.16 4.348 2.258 4.242 2.355
 4.109 c 2.293 4.266 2.25 4.402 2.25 4.5 c 2.25 4.914 2.586 5.25 3 5.25 
c 3.414 5.25 3.75 4.914 3.75 4.5 c 3.75 4.402 3.707 4.266 3.641 4.113 c 
3.738 4.246 3.836 4.352 3.922 4.402 c 3.926 4.398 l 4.098 4.5 4.301 4.527
 4.496 4.477 c 4.688 4.426 4.852 4.301 4.953 4.129 c 5.051 3.953 5.078 3.75
 5.027 3.555 c 4.977 3.363 4.848 3.199 4.676 3.102 c 4.59 3.051 4.449 3.02
 4.285 3 c 3.375 1.5 m 3.371 1.527 3.363 1.551 3.359 1.578 c 3.344 1.629
 3.32 1.688 3.289 1.758 c 3.219 1.914 3.137 2.07 3.051 2.219 c 3 2.305 l
 2.949 2.219 l 2.863 2.07 2.781 1.914 2.711 1.758 c 2.684 1.699 2.66 1.641
 2.641 1.578 c 2.637 1.551 2.629 1.527 2.625 1.5 c 2.625 1.293 2.793 1.125
 3 1.125 c 3.207 1.125 3.375 1.293 3.375 1.5 c 1.375 2.062 m 1.48 1.883 
1.711 1.82 1.887 1.926 c 1.91 1.941 1.93 1.961 1.945 1.977 c 1.98 2.016 
2.023 2.062 2.066 2.125 c 2.16 2.25 2.254 2.406 2.344 2.562 c 2.391 2.648
 l 2.293 2.648 l 2.297 2.652 l 2.125 2.652 1.953 2.648 1.781 2.629 c 1.715
 2.625 1.652 2.613 1.59 2.598 c 1.562 2.594 1.539 2.586 1.512 2.574 c 1.336
 2.473 1.273 2.242 1.375 2.062 c 1.887 4.074 m 1.711 4.176 1.48 4.113 1.379
 3.938 c 1.273 3.758 1.336 3.531 1.512 3.426 c 1.531 3.418 l 1.547 3.414
 1.562 3.406 1.59 3.402 c 1.641 3.391 1.703 3.379 1.781 3.371 c 1.953 3.352
 2.125 3.348 2.297 3.348 c 2.332 3.348 2.363 3.348 2.398 3.348 c 2.348 3.434
 l 2.258 3.59 2.16 3.746 2.07 3.871 c 2.031 3.926 1.992 3.973 1.945 4.023
 c 1.93 4.039 1.91 4.059 1.887 4.074 c 3.375 4.5 m 3.375 4.707 3.207 4.875
 3 4.875 c 2.793 4.875 2.625 4.707 2.625 4.5 c 2.629 4.473 2.637 4.449 2.641
 4.422 c 2.656 4.371 2.68 4.312 2.711 4.242 c 2.773 4.102 2.859 3.938 2.949
 3.785 c 3 3.695 l 3.051 3.781 l 3.141 3.938 3.227 4.098 3.289 4.238 c 3.32
 4.309 3.344 4.371 3.359 4.418 c 3.359 4.422 l 3.367 4.449 3.371 4.473 3.375
 4.5 c 4.625 2.062 m 4.727 2.242 4.664 2.473 4.488 2.574 c 4.461 2.586 4.438
 2.594 4.41 2.598 c 4.359 2.609 4.297 2.621 4.219 2.629 c 4.062 2.645 3.883
 2.652 3.703 2.652 c 3.668 2.652 3.637 2.652 3.602 2.652 c 3.652 2.566 l
 3.742 2.41 3.84 2.254 3.93 2.129 c 3.969 2.074 4.008 2.027 4.055 1.977 
c 4.07 1.957 4.086 1.945 4.098 1.934 c 4.113 1.922 l 4.113 1.926 l 4.289
 1.82 4.52 1.883 4.625 2.062 c 4.113 4.074 m 4.09 4.059 4.07 4.039 4.055
 4.023 c 4.008 3.973 3.969 3.926 3.93 3.871 c 3.832 3.73 3.738 3.586 3.652
 3.434 c 3.605 3.348 l 3.703 3.348 l 3.883 3.348 4.066 3.352 4.219 3.371
 c 4.297 3.379 4.359 3.391 4.41 3.402 c 4.434 3.41 4.453 3.414 4.469 3.418
 c 4.488 3.426 l 4.574 3.473 4.637 3.555 4.664 3.652 c 4.691 3.75 4.676 
3.852 4.625 3.938 c 4.578 4.023 4.492 4.086 4.398 4.113 c 4.301 4.141 4.199
 4.125 4.113 4.074 c h
3 3.375 m 2.793 3.375 2.625 3.207 2.625 3 c 2.625 2.793 2.793 2.625 3 2.625
 c 3.207 2.625 3.375 2.793 3.375 3 c 3.375 3.207 3.207 3.375 3 3.375 c f
Q Q
showpage
%%Trailer
%%EOF
