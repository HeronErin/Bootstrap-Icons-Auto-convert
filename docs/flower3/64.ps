%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 7 6 41 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 7 6 41 42
48 48 cairo_set_page_size
%%EndPageSetup
q 7 6 34 36 rectclip
1 0 0 -1 0 48 cm q
0 g
34.273 24 m 35.586 23.844 36.707 23.594 37.395 23.195 c 37.391 23.195 l
 40.238 21.527 41.203 17.875 39.555 15.02 c 37.906 12.164 34.258 11.176 
31.391 12.805 c 30.703 13.199 29.922 14.047 29.133 15.105 c 29.656 13.891
 30 12.793 30 12 c 30 8.688 27.312 6 24 6 c 20.688 6 18 8.688 18 12 c 18
 12.793 18.344 13.891 18.863 15.105 c 18.074 14.047 17.293 13.199 16.605
 12.805 c 16.609 12.805 l 13.742 11.176 10.094 12.164 8.445 15.02 c 6.797
 17.875 7.762 21.527 10.609 23.195 c 11.297 23.59 12.418 23.844 13.73 24
 c 12.418 24.156 11.297 24.406 10.609 24.805 c 9.219 25.594 8.203 26.906
 7.781 28.449 c 7.363 29.988 7.578 31.637 8.379 33.02 c 9.176 34.402 10.496
 35.41 12.039 35.82 c 13.586 36.23 15.23 36.004 16.609 35.195 c 17.297 34.801
 18.078 33.953 18.867 32.895 c 18.344 34.109 18 35.207 18 36 c 18 39.312
 20.688 42 24 42 c 27.312 42 30 39.312 30 36 c 30 35.207 29.656 34.109 29.137
 32.895 c 29.926 33.953 30.707 34.801 31.395 35.195 c 31.391 35.195 l 32.77
 36.004 34.414 36.23 35.961 35.82 c 37.504 35.41 38.824 34.402 39.621 33.02
 c 40.422 31.637 40.637 29.988 40.219 28.449 c 39.797 26.906 38.781 25.594
 37.391 24.805 c 36.703 24.41 35.582 24.156 34.27 24 c 27 12 m 26.965 12.207
 26.922 12.414 26.863 12.613 c 26.746 13.012 26.562 13.496 26.312 14.066
 c 26.316 14.066 l 25.746 15.324 25.105 16.547 24.406 17.734 c 24 18.426
 l 23.594 17.734 l 22.895 16.547 22.254 15.324 21.684 14.066 c 21.469 13.594
 21.285 13.109 21.137 12.613 c 21.078 12.414 21.035 12.207 21 12 c 21 10.344
 22.344 9 24 9 c 25.656 9 27 10.344 27 12 c 11.012 16.5 m 11.84 15.066 13.672
 14.574 15.109 15.402 c 15.27 15.535 15.426 15.68 15.574 15.828 c 15.859
 16.129 16.184 16.527 16.551 17.027 c 17.285 18.027 18.059 19.27 18.777 
20.516 c 19.168 21.211 l 18.371 21.219 l 18.375 21.219 l 16.992 21.23 15.613
 21.172 14.238 21.039 c 13.723 20.988 13.211 20.906 12.707 20.789 c 12.504
 20.738 12.305 20.672 12.109 20.598 c 10.672 19.77 10.18 17.934 11.012 16.5
 c 15.109 32.598 m 13.676 33.414 11.852 32.918 11.027 31.488 c 10.203 30.062
 10.684 28.234 12.109 27.402 c 12.25 27.344 l 12.359 27.305 12.512 27.258
 12.711 27.211 c 13.113 27.113 13.625 27.031 14.242 26.961 c 14.238 26.961
 l 15.613 26.828 16.992 26.77 18.375 26.781 c 18.645 26.781 18.91 26.785
 19.172 26.789 c 18.777 27.484 l 18.059 28.73 17.285 29.973 16.551 30.973
 c 16.555 30.973 l 16.254 31.395 15.926 31.793 15.574 32.172 c 15.426 32.32
 15.27 32.465 15.109 32.598 c 27 36 m 27 37.656 25.656 39 24 39 c 22.344
 39 21 37.656 21 36 c 21.035 35.793 21.078 35.586 21.137 35.383 c 21.254
 34.988 21.438 34.504 21.688 33.934 c 22.184 32.801 22.875 31.508 23.598
 30.266 c 24 29.574 l 24.406 30.266 l 25.129 31.512 25.816 32.801 26.316
 33.934 c 26.562 34.504 26.746 34.988 26.867 35.387 c 26.863 35.387 l 26.926
 35.586 26.973 35.793 27 36 c 36.988 16.5 m 37.82 17.934 37.328 19.77 35.891
 20.598 c 35.695 20.672 35.496 20.738 35.293 20.789 c 34.891 20.887 34.379
 20.969 33.762 21.039 c 32.527 21.176 31.066 21.223 29.625 21.219 c 29.355
 21.219 29.09 21.215 28.828 21.211 c 29.223 20.516 l 29.941 19.27 30.715
 18.027 31.449 17.027 c 31.445 17.027 l 31.746 16.605 32.074 16.207 32.426
 15.828 c 32.566 15.68 32.68 15.57 32.77 15.5 c 32.891 15.402 l 34.328 14.574
 36.16 15.066 36.988 16.5 c 32.891 32.598 m 32.73 32.465 32.574 32.324 32.426
 32.176 c 32.074 31.797 31.746 31.395 31.445 30.977 c 30.645 29.852 29.898
 28.684 29.219 27.48 c 28.828 26.785 l 29.625 26.777 l 31.066 26.773 32.527
 26.824 33.762 26.957 c 34.379 27.027 34.887 27.109 35.293 27.207 c 35.488
 27.254 35.641 27.301 35.754 27.34 c 35.898 27.398 l 35.895 27.398 l 36.59
 27.793 37.098 28.449 37.309 29.223 c 37.516 29.992 37.41 30.816 37.012 
31.508 c 36.609 32.199 35.953 32.703 35.18 32.906 c 34.406 33.113 33.586
 33 32.895 32.594 c h
24 27 m 22.344 27 21 25.656 21 24 c 21 22.344 22.344 21 24 21 c 25.656 
21 27 22.344 27 24 c 27 25.656 25.656 27 24 27 c f
Q Q
showpage
%%Trailer
%%EOF
