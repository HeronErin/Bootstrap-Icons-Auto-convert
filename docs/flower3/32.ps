%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 3 3 21 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 3 3 21 21
24 24 cairo_set_page_size
%%EndPageSetup
q 3 3 18 18 rectclip
1 0 0 -1 0 24 cm q
0 g
17.137 12 m 17.793 11.922 18.352 11.797 18.695 11.598 c 20.117 10.766 20.602
 8.938 19.777 7.512 c 18.953 6.082 17.129 5.586 15.695 6.402 c 15.352 6.602
 14.961 7.023 14.566 7.555 c 14.828 6.945 15 6.395 15 6 c 15 4.344 13.656
 3 12 3 c 10.344 3 9 4.344 9 6 c 9 6.395 9.172 6.945 9.434 7.551 c 9.039
 7.02 8.648 6.598 8.305 6.398 c 8.305 6.402 l 6.871 5.586 5.047 6.082 4.223
 7.512 c 3.398 8.938 3.883 10.766 5.305 11.598 c 5.648 11.797 6.211 11.922
 6.863 12 c 6.207 12.078 5.648 12.203 5.305 12.402 c 4.609 12.797 4.102 
13.453 3.891 14.223 c 3.684 14.996 3.789 15.816 4.188 16.512 c 4.59 17.203
 5.246 17.707 6.02 17.91 c 6.793 18.113 7.613 18.004 8.305 17.598 c 8.648
 17.398 9.039 16.977 9.434 16.445 c 9.172 17.055 9 17.605 9 18 c 9 19.656
 10.344 21 12 21 c 13.656 21 15 19.656 15 18 c 15 17.605 14.828 17.055 14.566
 16.449 c 14.961 16.98 15.352 17.402 15.695 17.602 c 15.695 17.598 l 16.387
 18.004 17.207 18.113 17.98 17.91 c 18.754 17.707 19.41 17.203 19.812 16.512
 c 20.211 15.816 20.316 14.996 20.109 14.223 c 19.898 13.453 19.391 12.797
 18.695 12.402 c 18.352 12.203 17.789 12.078 17.137 12 c 13.5 6 m 13.484
 6.105 13.461 6.207 13.434 6.309 c 13.375 6.508 13.281 6.75 13.16 7.035 
c 13.156 7.035 l 12.871 7.66 12.555 8.273 12.203 8.867 c 12 9.215 l 11.797
 8.871 l 11.797 8.867 l 11.445 8.273 11.129 7.66 10.844 7.035 c 10.734 6.797
 10.645 6.555 10.566 6.309 c 10.539 6.207 10.516 6.105 10.5 6 c 10.5 5.172
 11.172 4.5 12 4.5 c 12.828 4.5 13.5 5.172 13.5 6 c 5.504 8.25 m 5.918 7.531
 6.836 7.285 7.555 7.699 c 7.637 7.77 7.715 7.84 7.789 7.914 c 7.93 8.062
 8.094 8.266 8.277 8.516 c 8.645 9.016 9.031 9.637 9.391 10.262 c 9.586 
10.609 l 9.188 10.613 l 9.188 10.609 l 8.496 10.617 7.805 10.586 7.117 10.52
 c 6.863 10.496 6.605 10.453 6.355 10.395 c 6.254 10.367 6.152 10.336 6.055
 10.301 c 5.336 9.887 5.09 8.969 5.504 8.25 c 7.555 16.301 m 6.836 16.707
 5.926 16.461 5.512 15.746 c 5.102 15.031 5.344 14.117 6.055 13.699 c 6.125
 13.668 l 6.18 13.648 6.258 13.625 6.355 13.602 c 6.559 13.555 6.812 13.512
 7.121 13.477 c 7.117 13.48 l 7.805 13.414 8.496 13.383 9.188 13.391 c 9.324
 13.391 9.457 13.391 9.586 13.395 c 9.391 13.742 l 9.031 14.367 8.645 14.988
 8.277 15.488 c 8.277 15.484 l 8.125 15.695 7.961 15.898 7.785 16.086 c 
7.711 16.16 7.637 16.23 7.555 16.301 c 13.5 18 m 13.5 18.828 12.828 19.5
 12 19.5 c 11.172 19.5 10.5 18.828 10.5 18 c 10.516 17.895 10.539 17.793
 10.566 17.691 c 10.625 17.492 10.715 17.25 10.84 16.969 c 11.09 16.402 
11.434 15.758 11.797 15.133 c 12 14.785 l 12.203 15.129 l 12.566 15.75 12.906
 16.395 13.16 16.965 c 13.285 17.25 13.375 17.492 13.434 17.691 c 13.465
 17.793 13.484 17.895 13.5 18 c 18.496 8.25 m 18.91 8.969 18.664 9.887 17.945
 10.301 c 17.848 10.336 17.746 10.367 17.645 10.395 c 17.441 10.441 17.188
 10.484 16.879 10.52 c 16.262 10.586 15.531 10.609 14.809 10.609 c 14.672
 10.609 14.539 10.609 14.41 10.605 c 14.605 10.258 l 14.965 9.633 15.352
 9.012 15.719 8.512 c 15.723 8.516 l 15.875 8.305 16.039 8.102 16.215 7.914
 c 16.285 7.84 16.344 7.785 16.387 7.75 c 16.449 7.703 l 16.445 7.699 l 
17.164 7.285 18.082 7.531 18.496 8.25 c 16.445 16.301 m 16.363 16.234 16.289
 16.16 16.215 16.086 c 16.039 15.898 15.875 15.699 15.723 15.488 c 15.32
 14.926 14.949 14.344 14.609 13.738 c 14.414 13.391 l 14.812 13.387 l 15.531
 13.387 16.262 13.41 16.883 13.477 c 17.191 13.512 17.445 13.555 17.648 
13.602 c 17.746 13.625 17.824 13.648 17.879 13.668 c 17.949 13.699 l 18.293
 13.898 18.551 14.227 18.652 14.609 c 18.758 14.996 18.703 15.406 18.504
 15.754 c 18.305 16.098 17.977 16.352 17.59 16.453 c 17.203 16.555 16.793
 16.5 16.449 16.297 c h
12 13.5 m 11.172 13.5 10.5 12.828 10.5 12 c 10.5 11.172 11.172 10.5 12 
10.5 c 12.828 10.5 13.5 11.172 13.5 12 c 13.5 12.828 12.828 13.5 12 13.5
 c f
Q Q
showpage
%%Trailer
%%EOF
