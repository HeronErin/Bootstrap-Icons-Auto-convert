%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
218.16 322.273 m 197.281 384 l 144 384 l 233.375 144 l 295.008 144 l 384
 384 l 327.984 384 l 307.105 322.273 l h
296.594 286.945 m 264 189.887 l 261.648 189.887 l 229.055 286.941 l h
296.594 286.945 m f
0 96 m 0 70.539 10.113 46.121 28.117 28.117 c 46.121 10.113 70.539 0 96
 0 c 432 0 l 457.461 0 481.879 10.113 499.883 28.117 c 517.887 46.121 528
 70.539 528 96 c 528 240 l 672 240 l 697.461 240 721.879 250.113 739.883
 268.117 c 757.887 286.121 768 310.539 768 336 c 768 672 l 768 697.461 757.887
 721.879 739.883 739.883 c 721.879 757.887 697.461 768 672 768 c 336 768
 l 310.539 768 286.121 757.887 268.117 739.883 c 250.113 721.879 240 697.461
 240 672 c 240 528 l 96 528 l 70.539 528 46.121 517.887 28.117 499.883 c
 10.113 481.879 0 457.461 0 432 c h
96 48 m 83.27 48 71.062 53.059 62.059 62.059 c 53.059 71.062 48 83.27 48
 96 c 48 432 l 48 444.73 53.059 456.938 62.059 465.941 c 71.062 474.941 
83.27 480 96 480 c 432 480 l 444.73 480 456.938 474.941 465.941 465.941 
c 474.941 456.938 480 444.73 480 432 c 480 96 l 480 83.27 474.941 71.062
 465.941 62.059 c 456.938 53.059 444.73 48 432 48 c h
438.625 527.762 m 447.871 542.195 457.953 555.73 468.863 568.371 c 432.961
 595.973 388.559 616.418 336 630.387 c 344.543 640.801 357.648 660.867 362.641
 672.004 c 416.641 654.773 462.48 631.492 501.168 600.293 c 538.465 632.215
 584.641 656.215 641.809 670.949 c 648.191 658.758 661.68 638.645 672 628.23
 c 618 616.086 573.266 594.918 536.641 566.598 c 569.328 530.742 595.297
 487.352 614.449 434.262 c 672 434.258 l 672 384 l 528 384 l 528 434.258
 l 564.719 434.258 l 549.453 474.77 529.199 508.465 503.664 536.496 c 496.605
 528.984 489.957 521.102 483.742 512.879 c 470.188 521.543 454.672 526.66
 438.625 527.762 c f
Q Q
showpage
%%Trailer
%%EOF
