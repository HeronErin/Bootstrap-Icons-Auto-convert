%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
27.27 40.285 m 24.66 48 l 18 48 l 29.172 18 l 36.875 18 l 48 48 l 40.996
 48 l 38.387 40.285 l h
37.074 35.871 m 33 23.734 l 32.707 23.734 l 28.633 35.867 l h
37.074 35.871 m f
0 12 m 0 5.371 5.371 0 12 0 c 54 0 l 57.184 0 60.234 1.266 62.484 3.516
 c 64.734 5.766 66 8.816 66 12 c 66 30 l 84 30 l 87.184 30 90.234 31.266
 92.484 33.516 c 94.734 35.766 96 38.816 96 42 c 96 84 l 96 87.184 94.734
 90.234 92.484 92.484 c 90.234 94.734 87.184 96 84 96 c 42 96 l 35.371 96
 30 90.629 30 84 c 30 66 l 12 66 l 5.371 66 0 60.629 0 54 c h
12 6 m 8.688 6 6 8.688 6 12 c 6 54 l 6 55.59 6.633 57.117 7.758 58.242 
c 8.883 59.367 10.41 60 12 60 c 54 60 l 55.59 60 57.117 59.367 58.242 58.242
 c 59.367 57.117 60 55.59 60 54 c 60 12 l 60 10.41 59.367 8.883 58.242 7.758
 c 57.117 6.633 55.59 6 54 6 c h
54.828 65.969 m 55.984 67.773 57.242 69.465 58.609 71.043 c 54.121 74.492
 48.57 77.051 42 78.797 c 43.066 80.098 44.707 82.605 45.328 84 c 52.078
 81.848 57.809 78.938 62.645 75.035 c 67.305 79.023 73.078 82.023 80.223
 83.867 c 81.02 82.344 82.707 79.828 83.996 78.527 c 77.246 77.008 71.652
 74.363 67.074 70.824 c 71.16 66.344 74.406 60.918 76.801 54.281 c 84 54.281
 l 84 48 l 66 48 l 66 54.281 l 70.59 54.281 l 68.684 59.344 66.148 63.559
 62.957 67.062 c 62.074 66.125 61.246 65.137 60.469 64.109 c 58.773 65.191
 56.836 65.832 54.828 65.969 c f
Q Q
showpage
%%Trailer
%%EOF
