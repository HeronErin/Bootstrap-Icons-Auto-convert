%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 360 rectclip
1 0 0 -1 0 384 cm q
0 g
183.504 380.496 m 185.754 382.754 188.812 384.02 192 384.02 c 195.188 384.02
 198.246 382.754 200.496 380.496 c 244.969 336 l 336 336 l 348.73 336 360.938
 330.941 369.941 321.941 c 378.941 312.938 384 300.73 384 288 c 384 72 l
 384 59.27 378.941 47.062 369.941 38.059 c 360.938 29.059 348.73 24 336 
24 c 48 24 l 35.27 24 23.062 29.059 14.059 38.059 c 5.059 47.062 0 59.27
 0 72 c 0 288 l 0 300.73 5.059 312.938 14.059 321.941 c 23.062 330.941 35.27
 336 48 336 c 139.031 336 l h
24 216 m 24 144 l 360 144 l 360 216 l h
360 240 m 360 288 l 360 294.363 357.473 300.469 352.969 304.969 c 348.469
 309.473 342.363 312 336 312 c 244.969 312 l 238.602 312 232.5 314.531 228
 319.031 c 192 355.031 l 156 319.031 l 151.5 314.531 145.398 312 139.031
 312 c 48 312 l 41.637 312 35.531 309.473 31.031 304.969 c 26.527 300.469
 24 294.363 24 288 c 24 240 l h
360 120 m 24 120 l 24 72 l 24 65.637 26.527 59.531 31.031 55.031 c 35.531
 50.527 41.637 48 48 48 c 336 48 l 342.363 48 348.469 50.527 352.969 55.031
 c 357.473 59.531 360 65.637 360 72 c h
48 276 m 48 279.184 49.266 282.234 51.516 284.484 c 53.766 286.734 56.816
 288 60 288 c 252 288 l 258.629 288 264 282.629 264 276 c 264 269.371 258.629
 264 252 264 c 60 264 l 53.371 264 48 269.371 48 276 c 48 180 m 48 183.184
 49.266 186.234 51.516 188.484 c 53.766 190.734 56.816 192 60 192 c 324 
192 l 330.629 192 336 186.629 336 180 c 336 173.371 330.629 168 324 168 
c 60 168 l 53.371 168 48 173.371 48 180 c 48 84 m 48 87.184 49.266 90.234
 51.516 92.484 c 53.766 94.734 56.816 96 60 96 c 204 96 l 210.629 96 216
 90.629 216 84 c 216 77.371 210.629 72 204 72 c 60 72 l 53.371 72 48 77.371
 48 84 c f
Q Q
showpage
%%Trailer
%%EOF
