%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 45 rectclip
1 0 0 -1 0 48 cm q
0 g
22.938 47.562 m 23.219 47.844 23.602 48.004 24 48.004 c 24.398 48.004 24.781
 47.844 25.062 47.562 c 30.621 42 l 42 42 l 43.59 42 45.117 41.367 46.242
 40.242 c 47.367 39.117 48 37.59 48 36 c 48 9 l 48 7.41 47.367 5.883 46.242
 4.758 c 45.117 3.633 43.59 3 42 3 c 6 3 l 2.688 3 0 5.688 0 9 c 0 36 l 
0 37.59 0.633 39.117 1.758 40.242 c 2.883 41.367 4.41 42 6 42 c 17.379 42
 l h
3 27 m 3 18 l 45 18 l 45 27 l h
45 30 m 45 36 l 45 36.797 44.684 37.559 44.121 38.121 c 43.559 38.684 42.797
 39 42 39 c 30.621 39 l 29.824 39 29.062 39.316 28.5 39.879 c 24 44.379 
l 19.5 39.879 l 18.938 39.316 18.176 39 17.379 39 c 6 39 l 4.344 39 3 37.656
 3 36 c 3 30 l h
45 15 m 3 15 l 3 9 l 3 7.344 4.344 6 6 6 c 42 6 l 42.797 6 43.559 6.316
 44.121 6.879 c 44.684 7.441 45 8.203 45 9 c h
6 34.5 m 6 34.898 6.156 35.281 6.438 35.562 c 6.719 35.844 7.102 36 7.5
 36 c 31.5 36 l 32.328 36 33 35.328 33 34.5 c 33 33.672 32.328 33 31.5 33
 c 7.5 33 l 6.672 33 6 33.672 6 34.5 c 6 22.5 m 6 22.898 6.156 23.281 6.438
 23.562 c 6.719 23.844 7.102 24 7.5 24 c 40.5 24 l 41.328 24 42 23.328 42
 22.5 c 42 21.672 41.328 21 40.5 21 c 7.5 21 l 6.672 21 6 21.672 6 22.5 
c 6 10.5 m 6 10.898 6.156 11.281 6.438 11.562 c 6.719 11.844 7.102 12 7.5
 12 c 25.5 12 l 26.328 12 27 11.328 27 10.5 c 27 9.672 26.328 9 25.5 9 c
 7.5 9 l 6.672 9 6 9.672 6 10.5 c f
Q Q
showpage
%%Trailer
%%EOF
