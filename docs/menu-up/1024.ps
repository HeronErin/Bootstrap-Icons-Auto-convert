%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
367.008 760.992 m 371.512 765.508 377.625 768.043 384 768.043 c 390.375
 768.043 396.488 765.508 400.992 760.992 c 489.938 672 l 672 672 l 697.461
 672 721.879 661.887 739.883 643.883 c 757.887 625.879 768 601.461 768 576
 c 768 144 l 768 118.539 757.887 94.121 739.883 76.117 c 721.879 58.113 
697.461 48 672 48 c 96 48 l 70.539 48 46.121 58.113 28.117 76.117 c 10.113
 94.121 0 118.539 0 144 c 0 576 l 0 601.461 10.113 625.879 28.117 643.883
 c 46.121 661.887 70.539 672 96 672 c 278.062 672 l h
48 432 m 48 288 l 720 288 l 720 432 l h
720 480 m 720 576 l 720 588.73 714.941 600.938 705.941 609.941 c 696.938
 618.941 684.73 624 672 624 c 489.938 624 l 477.207 624.004 465 629.062 
456 638.062 c 384 710.062 l 312 638.062 l 303 629.062 290.793 624.004 278.062
 624 c 96 624 l 83.27 624 71.062 618.941 62.059 609.941 c 53.059 600.938
 48 588.73 48 576 c 48 480 l h
720 240 m 48 240 l 48 144 l 48 131.27 53.059 119.062 62.059 110.059 c 71.062
 101.059 83.27 96 96 96 c 672 96 l 684.73 96 696.938 101.059 705.941 110.059
 c 714.941 119.062 720 131.27 720 144 c h
96 552 m 96 558.363 98.527 564.469 103.031 568.969 c 107.531 573.473 113.637
 576 120 576 c 504 576 l 512.574 576 520.496 571.426 524.785 564 c 529.07
 556.574 529.07 547.426 524.785 540 c 520.496 532.574 512.574 528 504 528
 c 120 528 l 113.637 528 107.531 530.527 103.031 535.031 c 98.527 539.531
 96 545.637 96 552 c 96 360 m 96 366.363 98.527 372.469 103.031 376.969 
c 107.531 381.473 113.637 384 120 384 c 648 384 l 656.574 384 664.496 379.426
 668.785 372 c 673.07 364.574 673.07 355.426 668.785 348 c 664.496 340.574
 656.574 336 648 336 c 120 336 l 113.637 336 107.531 338.527 103.031 343.031
 c 98.527 347.531 96 353.637 96 360 c 96 168 m 96 174.363 98.527 180.469
 103.031 184.969 c 107.531 189.473 113.637 192 120 192 c 408 192 l 416.574
 192 424.496 187.426 428.785 180 c 433.07 172.574 433.07 163.426 428.785
 156 c 424.496 148.574 416.574 144 408 144 c 120 144 l 113.637 144 107.531
 146.527 103.031 151.031 c 98.527 155.531 96 161.637 96 168 c f
Q Q
showpage
%%Trailer
%%EOF
