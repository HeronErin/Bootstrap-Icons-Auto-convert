%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
734.016 1521.984 m 743.02 1531.012 755.25 1536.086 768 1536.086 c 780.75
 1536.086 792.98 1531.012 801.984 1521.984 c 979.871 1344 l 1344 1344 l 
1377.703 1344 1410.812 1335.129 1440 1318.277 c 1469.188 1301.426 1493.426
 1277.188 1510.277 1248 c 1527.129 1218.812 1536 1185.703 1536 1152 c 1536
 288 l 1536 254.297 1527.129 221.188 1510.277 192 c 1493.426 162.812 1469.188
 138.574 1440 121.723 c 1410.812 104.871 1377.703 96 1344 96 c 192 96 l 
141.078 96 92.242 116.227 56.234 152.234 c 20.227 188.242 0 237.078 0 288
 c 0 1152 l 0 1185.703 8.871 1218.812 25.723 1248 c 42.574 1277.188 66.812
 1301.426 96 1318.277 c 125.188 1335.129 158.297 1344 192 1344 c 556.129
 1344 l h
96 864 m 96 576 l 1440 576 l 1440 864 l h
1440 960 m 1440 1152 l 1440 1177.461 1429.887 1201.879 1411.883 1219.883
 c 1393.879 1237.887 1369.461 1248 1344 1248 c 979.871 1248 l 954.414 1248.004
 930 1258.125 912 1276.129 c 768 1420.129 l 624 1276.129 l 606 1258.125 
581.586 1248.004 556.129 1248 c 192 1248 l 166.539 1248 142.121 1237.887
 124.117 1219.883 c 106.113 1201.879 96 1177.461 96 1152 c 96 960 l h
1440 480 m 96 480 l 96 288 l 96 262.539 106.113 238.121 124.117 220.117
 c 142.121 202.113 166.539 192 192 192 c 1344 192 l 1369.461 192 1393.879
 202.113 1411.883 220.117 c 1429.887 238.121 1440 262.539 1440 288 c h
192 1104 m 192 1116.73 197.059 1128.938 206.059 1137.941 c 215.062 1146.941
 227.27 1152 240 1152 c 1008 1152 l 1025.148 1152 1040.996 1142.852 1049.57
 1128 c 1058.145 1113.148 1058.145 1094.852 1049.57 1080 c 1040.996 1065.148
 1025.148 1056 1008 1056 c 240 1056 l 227.27 1056 215.062 1061.059 206.059
 1070.059 c 197.059 1079.062 192 1091.27 192 1104 c 192 720 m 192 732.73
 197.059 744.938 206.059 753.941 c 215.062 762.941 227.27 768 240 768 c 
1296 768 l 1313.148 768 1328.996 758.852 1337.57 744 c 1346.145 729.148 
1346.145 710.852 1337.57 696 c 1328.996 681.148 1313.148 672 1296 672 c 
240 672 l 227.27 672 215.062 677.059 206.059 686.059 c 197.059 695.062 192
 707.27 192 720 c 192 336 m 192 348.73 197.059 360.938 206.059 369.941 c
 215.062 378.941 227.27 384 240 384 c 816 384 l 833.148 384 848.996 374.852
 857.57 360 c 866.145 345.148 866.145 326.852 857.57 312 c 848.996 297.148
 833.148 288 816 288 c 240 288 l 227.27 288 215.062 293.059 206.059 302.059
 c 197.059 311.062 192 323.27 192 336 c f
Q Q
showpage
%%Trailer
%%EOF
