%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 22 111 1514 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 22 111 1514 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 22 111 1492 1329 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 96 m 780.73 96 792.938 101.059 801.941 110.059 c 810.941 119.062 816
 131.27 816 144 c 816 647.328 l 864 681.602 l 864 453.121 l 864 361.922 
937.922 288 1029.121 288 c 1079.426 288 1127.328 313.922 1167.648 344.832
 c 1209.023 376.703 1248.961 419.039 1284.383 462.816 c 1355.039 549.984
 1413.695 649.633 1436.062 700.895 c 1452.957 739.773 1473.789 812.254 1489.438
 893.949 c 1505.277 976.223 1516.605 1072.223 1512.477 1158.812 c 1508.637
 1242.043 1490.203 1330.652 1432.125 1382.492 c 1367.805 1440.094 1276.414
 1435.867 1168.988 1382.109 c 996.668 1295.996 l 996.672 1296 l 956.809 
1276.066 923.281 1245.43 899.848 1207.516 c 876.414 1169.602 864 1125.914
 864 1081.344 c 864 799.586 l 768 730.945 l 672 799.586 l 672 692.543 l 
662.398 692.543 652.609 695.422 644.16 701.473 c 404.16 872.93 l 393.344
 880.129 385.91 891.406 383.555 904.188 c 381.203 916.965 384.129 930.152
 391.668 940.738 c 399.211 951.32 410.719 958.391 423.566 960.34 c 436.414
 962.289 449.5 958.945 459.84 951.07 c 672 799.586 l 672 1081.348 l 672 
1081.344 l 672 1125.914 659.586 1169.602 636.152 1207.516 c 612.719 1245.43
 579.191 1276.066 539.328 1296 c 367.008 1382.113 l 259.488 1435.875 168.289
 1440 103.871 1382.496 c 45.793 1330.656 27.262 1242.047 23.422 1158.816
 c 19.391 1072.223 30.719 976.223 46.461 893.953 c 62.203 812.16 82.941 
739.777 100.027 700.801 c 122.301 649.633 180.957 549.984 251.613 462.816
 c 287.133 419.039 326.973 376.703 368.348 344.832 c 408.672 313.922 456.574
 288 506.879 288 c 598.078 288 672 361.922 672 453.121 c 672 681.602 l 720
 647.328 l 720 144 l 720 131.27 725.059 119.062 734.059 110.059 c 743.062
 101.059 755.27 96 768 96 c 1076.16 951.07 m 1086.5 958.945 1099.586 962.289
 1112.434 960.34 c 1125.281 958.391 1136.789 951.32 1144.332 940.738 c 1151.871
 930.152 1154.797 916.965 1152.445 904.188 c 1150.09 891.406 1142.656 880.129
 1131.84 872.93 c 891.84 701.473 l 883.715 695.672 873.984 692.551 864 692.543
 c 864 799.68 l h
1076.16 951.07 m f
Q Q
showpage
%%Trailer
%%EOF
