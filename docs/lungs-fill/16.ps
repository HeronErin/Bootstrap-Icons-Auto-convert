%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
6 0.75 m 6.098 0.75 6.195 0.789 6.266 0.859 c 6.336 0.93 6.375 1.027 6.375
 1.125 c 6.375 5.059 l 6.75 5.324 l 6.75 3.539 l 6.75 2.828 7.328 2.25 8.039
 2.25 c 8.434 2.25 8.805 2.453 9.121 2.695 c 9.445 2.945 9.758 3.273 10.031
 3.617 c 10.582 4.297 11.043 5.078 11.215 5.477 c 11.348 5.781 11.508 6.348
 11.633 6.984 c 11.758 7.629 11.844 8.379 11.812 9.055 c 11.781 9.703 11.637
 10.398 11.184 10.801 c 10.68 11.25 9.969 11.219 9.129 10.797 c 7.781 10.125
 l 7.785 10.125 l 7.152 9.809 6.75 9.156 6.75 8.449 c 6.75 6.246 l 6 5.711
 l 5.25 6.246 l 5.25 5.41 l 5.176 5.41 5.098 5.434 5.031 5.48 c 3.156 6.82
 l 3.074 6.875 3.016 6.965 2.996 7.062 c 2.977 7.164 3 7.266 3.059 7.348
 c 3.117 7.434 3.207 7.488 3.309 7.504 c 3.41 7.52 3.512 7.492 3.594 7.43
 c 5.25 6.246 l 5.25 8.449 l 5.25 9.156 4.848 9.809 4.215 10.125 c 2.867
 10.797 l 2.027 11.219 1.316 11.25 0.812 10.801 c 0.359 10.395 0.215 9.703
 0.184 9.055 c 0.152 8.379 0.242 7.629 0.363 6.984 c 0.484 6.344 0.648 5.781
 0.781 5.477 c 0.957 5.078 1.414 4.297 1.965 3.617 c 2.242 3.273 2.555 2.945
 2.875 2.695 c 3.191 2.453 3.566 2.25 3.961 2.25 c 4.672 2.25 5.25 2.828
 5.25 3.539 c 5.25 5.324 l 5.625 5.055 l 5.625 1.125 l 5.625 0.918 5.793
 0.75 6 0.75 c 8.406 7.43 m 8.488 7.492 8.59 7.52 8.691 7.504 c 8.793 7.488
 8.883 7.434 8.941 7.348 c 9 7.266 9.023 7.164 9.004 7.062 c 8.984 6.965
 8.926 6.875 8.844 6.82 c 6.969 5.48 l 6.902 5.434 6.828 5.41 6.75 5.41 
c 6.75 6.246 l h
8.406 7.43 m f
Q Q
showpage
%%Trailer
%%EOF
