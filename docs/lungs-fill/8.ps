%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 0.375 m 3.105 0.375 3.188 0.457 3.188 0.562 c 3.188 2.527 l 3.375 2.664
 l 3.375 1.77 l 3.375 1.414 3.664 1.125 4.02 1.125 c 4.215 1.125 4.402 1.227
 4.562 1.348 c 4.723 1.473 4.879 1.637 5.02 1.809 c 5.297 2.148 5.523 2.539
 5.613 2.738 c 5.68 2.891 5.762 3.172 5.82 3.492 c 5.883 3.812 5.926 4.188
 5.91 4.527 c 5.895 4.852 5.824 5.199 5.598 5.402 c 5.348 5.629 4.988 5.609
 4.57 5.402 c 3.898 5.066 l 3.895 5.062 l 3.574 4.902 3.375 4.578 3.375 
4.223 c 3.375 3.125 l 3 2.855 l 2.625 3.125 l 2.625 2.707 l 2.586 2.707 
2.551 2.719 2.516 2.742 c 1.578 3.41 l 1.492 3.469 1.469 3.59 1.531 3.676
 c 1.59 3.762 1.711 3.777 1.797 3.715 c 2.625 3.125 l 2.625 4.227 l 2.625
 4.223 l 2.625 4.578 2.426 4.902 2.105 5.062 c 1.434 5.398 l 1.012 5.609
 0.656 5.625 0.406 5.398 c 0.18 5.195 0.105 4.852 0.094 4.523 c 0.078 4.184
 0.121 3.809 0.184 3.488 c 0.246 3.168 0.324 2.887 0.395 2.734 c 0.48 2.535
 0.711 2.145 0.988 1.805 c 1.129 1.633 1.281 1.469 1.445 1.344 c 1.598 1.227
 1.785 1.125 1.98 1.125 c 2.336 1.125 2.625 1.414 2.625 1.77 c 2.625 2.664
 l 2.812 2.531 l 2.812 0.562 l 2.812 0.457 2.895 0.375 3 0.375 c 4.203 3.715
 m 4.289 3.777 4.41 3.762 4.469 3.676 c 4.531 3.59 4.508 3.469 4.422 3.41
 c 3.484 2.742 l 3.484 2.738 l 3.453 2.719 3.414 2.707 3.375 2.707 c 3.375
 3.125 l h
4.203 3.715 m f
Q Q
showpage
%%Trailer
%%EOF
