%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 2 13 190 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 2 13 190 180
192 192 cairo_set_page_size
%%EndPageSetup
q 2 13 188 167 rectclip
1 0 0 -1 0 192 cm q
0 g
96 12 m 97.59 12 99.117 12.633 100.242 13.758 c 101.367 14.883 102 16.41
 102 18 c 102 80.914 l 108 85.199 l 108 56.641 l 108 45.238 117.238 36 128.641
 36 c 134.93 36 140.918 39.238 145.957 43.105 c 151.129 47.09 156.121 52.383
 160.551 57.852 c 169.383 68.746 176.715 81.203 179.512 87.613 c 181.625
 92.473 184.227 101.535 186.184 111.746 c 188.164 122.031 189.578 134.031
 189.062 144.855 c 188.582 155.258 186.277 166.336 179.02 172.816 c 170.98
 180.016 159.555 179.488 146.129 172.77 c 124.59 162.004 l 124.586 162 l
 119.602 159.508 115.41 155.68 112.48 150.941 c 109.551 146.199 108 140.738
 108 135.168 c 108 99.949 l 96 91.371 l 84 99.949 l 84 86.566 l 82.801 86.566
 81.574 86.926 80.52 87.684 c 50.52 109.117 l 49.168 110.016 48.238 111.426
 47.945 113.023 c 47.648 114.621 48.016 116.27 48.957 117.594 c 49.902 118.914
 51.34 119.801 52.945 120.043 c 54.551 120.285 56.188 119.867 57.48 118.883
 c 84 99.949 l 84 135.168 l 84 140.738 82.449 146.199 79.52 150.941 c 76.59
 155.68 72.398 159.508 67.414 162 c 45.875 172.766 l 32.434 179.484 21.035
 180 12.984 172.812 c 5.723 166.332 3.41 155.258 2.93 144.852 c 2.426 134.027
 3.84 122.027 5.809 111.742 c 7.777 101.52 10.367 92.469 12.504 87.598 c
 15.289 81.203 22.621 68.746 31.453 57.852 c 35.895 52.379 40.875 47.086
 46.047 43.105 c 51.086 39.238 57.07 36 63.359 36 c 74.762 36 84 45.238 
84 56.641 c 84 85.199 l 90 80.914 l 90 18 l 90 14.688 92.688 12 96 12 c 
134.52 118.883 m 135.812 119.867 137.449 120.285 139.055 120.043 c 140.66
 119.801 142.098 118.914 143.043 117.594 c 143.984 116.27 144.352 114.621
 144.055 113.023 c 143.762 111.426 142.832 110.016 141.48 109.117 c 111.48
 87.684 l 110.465 86.961 109.246 86.57 108 86.566 c 108 99.961 l h
134.52 118.883 m f
Q Q
showpage
%%Trailer
%%EOF
