%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 5 27 379 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 5 27 379 360
384 384 cairo_set_page_size
%%EndPageSetup
q 5 27 374 333 rectclip
1 0 0 -1 0 384 cm q
0 g
192 24 m 195.184 24 198.234 25.266 200.484 27.516 c 202.734 29.766 204 
32.816 204 36 c 204 161.832 l 216 170.398 l 216 113.281 l 216 90.48 234.48
 72 257.281 72 c 269.855 72 281.832 78.48 291.914 86.207 c 302.258 94.176
 312.242 104.758 321.098 115.703 c 338.762 137.496 353.426 162.406 359.02
 175.223 c 363.242 184.941 368.453 203.062 372.363 223.488 c 376.324 244.055
 379.156 268.055 378.125 289.703 c 377.164 310.512 372.559 332.664 358.035
 345.625 c 341.957 360.023 319.105 358.969 292.25 345.527 c 249.172 324 
l 249.168 324 l 239.203 319.016 230.82 311.355 224.961 301.879 c 219.105
 292.402 216 281.48 216 270.336 c 216 199.895 l 192 182.734 l 168 199.895
 l 168 173.137 l 165.602 173.137 163.152 173.855 161.039 175.367 c 101.039
 218.23 l 98.336 220.031 96.477 222.852 95.891 226.047 c 95.301 229.242 
96.031 232.539 97.918 235.184 c 99.801 237.828 102.68 239.598 105.891 240.086
 c 109.102 240.57 112.375 239.734 114.961 237.77 c 168 199.895 l 168 270.336
 l 168 281.48 164.895 292.402 159.039 301.879 c 153.18 311.355 144.797 319.016
 134.832 324 c 91.754 345.527 l 64.875 358.969 42.074 360 25.969 345.625
 c 11.449 332.664 6.816 310.512 5.855 289.703 c 4.848 268.055 7.68 244.055
 11.617 223.488 c 15.555 203.039 20.738 184.945 25.008 175.199 c 30.574 
162.406 45.238 137.496 62.902 115.703 c 71.781 104.758 81.742 94.176 92.086
 86.207 c 102.168 78.48 114.145 72 126.719 72 c 149.52 72 168 90.48 168 
113.281 c 168 170.398 l 180 161.832 l 180 36 l 180 29.371 185.371 24 192
 24 c 269.039 237.77 m 271.625 239.734 274.898 240.57 278.109 240.086 c 
281.32 239.598 284.199 237.828 286.082 235.184 c 287.969 232.539 288.699
 229.242 288.109 226.047 c 287.523 222.852 285.664 220.031 282.961 218.23
 c 222.961 175.367 l 220.93 173.918 218.496 173.137 216 173.137 c 216 199.922
 l h
269.039 237.77 m f
Q Q
showpage
%%Trailer
%%EOF
