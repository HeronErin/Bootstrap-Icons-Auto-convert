%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 1 6 95 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 1 6 95 90
96 96 cairo_set_page_size
%%EndPageSetup
q 1 6 94 84 rectclip
1 0 0 -1 0 96 cm q
0 g
48 6 m 48.797 6 49.559 6.316 50.121 6.879 c 50.684 7.441 51 8.203 51 9 
c 51 40.457 l 54 42.602 l 54 28.32 l 54 22.621 58.621 18 64.32 18 c 67.465
 18 70.457 19.621 72.977 21.551 c 75.562 23.543 78.059 26.188 80.273 28.926
 c 84.688 34.375 88.355 40.602 89.754 43.805 c 90.809 46.234 92.113 50.766
 93.09 55.871 c 94.078 61.012 94.789 67.012 94.531 72.426 c 94.293 77.629
 93.141 83.164 89.508 86.406 c 85.488 90.008 79.777 89.742 73.062 86.383
 c 62.293 81 l 59.801 79.754 57.703 77.84 56.242 75.469 c 54.777 73.102 
54 70.371 54 67.586 c 54 49.973 l 48 45.684 l 42 49.973 l 42 43.285 l 41.398
 43.285 40.789 43.465 40.262 43.844 c 25.262 54.559 l 24.586 55.008 24.121
 55.715 23.973 56.512 c 23.824 57.309 24.008 58.133 24.48 58.797 c 24.949
 59.457 25.672 59.898 26.473 60.02 c 27.277 60.145 28.094 59.934 28.738 
59.441 c 42 49.973 l 42 67.586 l 42 70.371 41.223 73.102 39.758 75.469 c
 38.297 77.84 36.199 79.754 33.707 81 c 22.938 86.383 l 16.219 89.742 10.516
 90 6.492 86.406 c 2.863 83.168 1.703 77.629 1.465 72.426 c 1.211 67.016
 1.922 61.016 2.906 55.871 c 3.891 50.758 5.188 46.234 6.254 43.801 c 7.645
 40.602 11.312 34.375 15.727 28.926 c 17.945 26.191 20.438 23.543 23.023
 21.551 c 25.543 19.621 28.535 18 31.68 18 c 37.379 18 42 22.621 42 28.32
 c 42 42.602 l 45 40.461 l 45 9 l 45 7.344 46.344 6 48 6 c 67.262 59.441
 m 67.906 59.934 68.723 60.145 69.527 60.02 c 70.328 59.898 71.051 59.457
 71.52 58.797 c 71.992 58.133 72.176 57.309 72.027 56.512 c 71.879 55.715
 71.414 55.008 70.738 54.559 c 55.738 43.844 l 55.23 43.48 54.625 43.285
 54 43.285 c 54 49.98 l h
67.262 59.441 m f
Q Q
showpage
%%Trailer
%%EOF
