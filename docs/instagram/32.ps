%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
12 0 m 8.742 0 8.336 0.016 7.055 0.07 c 5.773 0.133 4.902 0.332 4.141 0.629
 c 3.34 0.93 2.613 1.402 2.016 2.016 c 1.402 2.613 0.93 3.34 0.629 4.141
 c 0.332 4.902 0.129 5.773 0.07 7.051 c 0.016 8.332 0 8.742 0 12 c 0 15.258
 0.016 15.664 0.07 16.945 c 0.129 18.223 0.332 19.094 0.629 19.859 c 0.938
 20.648 1.348 21.316 2.012 21.984 c 2.676 22.652 3.348 23.062 4.137 23.367
 c 4.902 23.664 5.773 23.867 7.051 23.926 c 8.332 23.984 8.742 24 12 24 
c 15.258 24 15.664 23.984 16.945 23.93 c 18.223 23.871 19.098 23.668 19.859
 23.371 c 19.863 23.371 l 20.664 23.07 21.387 22.598 21.984 21.984 c 22.652
 21.316 23.062 20.648 23.367 19.859 c 23.664 19.098 23.863 18.223 23.926
 16.945 c 23.984 15.668 24 15.258 24 12 c 24 8.742 23.984 8.332 23.93 7.051
 c 23.871 5.773 23.668 4.902 23.371 4.141 c 23.07 3.34 22.598 2.613 21.984
 2.016 c 21.387 1.402 20.66 0.93 19.859 0.629 c 19.094 0.332 18.223 0.129
 16.945 0.07 c 15.664 0.016 15.258 0 11.996 0 c h
10.926 2.164 m 12.004 2.164 l 15.207 2.164 15.586 2.176 16.852 2.234 c 
18.023 2.285 18.656 2.484 19.082 2.648 c 19.641 2.867 20.043 3.125 20.461
 3.547 c 20.883 3.969 21.141 4.367 21.359 4.926 c 21.523 5.348 21.719 5.984
 21.773 7.152 c 21.832 8.418 21.844 8.797 21.844 12 c 21.844 15.203 21.832
 15.582 21.773 16.848 c 21.723 18.02 21.523 18.652 21.359 19.074 c 21.355
 19.074 l 21.16 19.594 20.855 20.062 20.457 20.449 c 20.035 20.871 19.637
 21.129 19.078 21.348 c 18.656 21.512 18.023 21.707 16.852 21.762 c 15.586
 21.82 15.207 21.832 12.004 21.832 c 8.801 21.832 8.418 21.82 7.156 21.762
 c 5.984 21.707 5.352 21.512 4.93 21.348 c 4.926 21.348 l 4.402 21.156 3.934
 20.848 3.543 20.449 c 3.145 20.062 2.84 19.594 2.645 19.07 c 2.48 18.648
 2.285 18.012 2.23 16.844 c 2.172 15.578 2.16 15.199 2.16 11.996 c 2.16 
8.789 2.172 8.414 2.23 7.148 c 2.285 5.977 2.48 5.344 2.645 4.918 c 2.863
 4.359 3.121 3.957 3.543 3.539 c 3.965 3.117 4.363 2.859 4.922 2.641 c 5.344
 2.477 5.98 2.281 7.148 2.227 c 8.254 2.176 8.684 2.16 10.922 2.16 c h
18.406 4.156 m 17.609 4.156 16.965 4.801 16.965 5.594 c 16.965 6.391 17.609
 7.035 18.406 7.035 c 19.203 7.035 19.848 6.391 19.848 5.594 c 19.848 4.801
 19.203 4.156 18.406 4.156 c 12 5.84 m 10.352 5.812 8.758 6.449 7.582 7.609
 c 6.406 8.766 5.742 10.348 5.742 12 c 5.742 13.652 6.406 15.234 7.582 16.395
 c 8.758 17.551 10.352 18.188 12 18.164 c 15.367 18.109 18.07 15.367 18.07
 12 c 18.07 8.633 15.367 5.891 12 5.84 c 12 8 m 14.211 8 16.004 9.789 16.004
 12 c 16.004 14.211 14.211 16 12 16 c 9.793 16 8 14.211 8 12 c 8 9.789 9.793
 8 12 8 c f
Q Q
showpage
%%Trailer
%%EOF
