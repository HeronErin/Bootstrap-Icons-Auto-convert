%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 139.895 0 133.344 0.238 112.871 1.152 c 92.398 2.113 78.457 5.328
 66.238 10.078 c 53.422 14.887 41.812 22.449 32.23 32.23 c 22.449 41.812
 14.887 53.422 10.078 66.238 c 5.328 78.434 2.09 92.398 1.152 112.801 c 
0.238 133.32 0 139.848 0 192.023 c 0 244.152 0.238 250.68 1.152 271.152 
c 2.113 291.602 5.328 305.543 10.082 317.762 c 15.004 330.387 21.555 341.09
 32.234 351.77 c 42.891 362.449 53.594 369.027 66.219 373.922 c 78.457 378.676
 92.379 381.914 112.828 382.852 c 133.32 383.762 139.848 384 192 384 c 244.152
 384 250.656 383.762 271.152 382.848 c 291.578 381.887 305.566 378.672 317.785
 373.918 c 317.785 373.922 l 330.594 369.109 342.195 361.547 351.77 351.77
 c 362.449 341.09 369 330.387 373.922 317.762 c 378.648 305.547 381.891 
291.602 382.852 271.152 c 383.762 250.68 384 244.152 384 192 c 384 139.848
 383.762 133.32 382.848 112.824 c 381.887 92.398 378.648 78.434 373.918 
66.238 c 373.922 66.238 l 369.113 53.422 361.551 41.812 351.77 32.23 c 342.188
 22.449 330.578 14.887 317.762 10.078 c 305.523 5.324 291.555 2.086 271.129
 1.148 c 250.633 0.238 244.129 0 191.953 0 c h
174.793 34.609 m 192.023 34.609 l 243.289 34.609 249.359 34.777 269.59 
35.715 c 288.309 36.555 298.484 39.699 305.254 42.316 c 314.207 45.797 320.613
 49.973 327.332 56.691 c 334.051 63.41 338.203 69.797 341.684 78.77 c 344.324
 85.512 347.445 95.691 348.285 114.41 c 349.223 134.641 349.414 140.715 
349.414 191.953 c 349.414 243.191 349.223 249.289 348.285 269.52 c 347.445
 288.238 344.301 298.391 341.684 305.16 c 341.688 305.16 l 338.59 313.484
 333.68 321.02 327.312 327.215 c 320.594 333.934 314.207 338.086 305.234
 341.566 c 298.516 344.207 288.34 347.328 269.594 348.191 c 249.363 349.102
 243.289 349.32 192.027 349.32 c 140.762 349.32 134.668 349.105 114.434 
348.191 c 95.715 347.328 85.562 344.207 78.793 341.566 c 70.461 338.477 
62.918 333.574 56.711 327.215 c 50.336 321.016 45.414 313.473 42.312 305.137
 c 39.695 298.395 36.551 288.215 35.711 269.496 c 34.801 249.266 34.605 
243.191 34.605 191.902 c 34.605 140.613 34.797 134.59 35.711 114.359 c 36.574
 95.641 39.695 85.465 42.336 78.695 c 45.816 69.742 49.992 63.336 56.711
 56.617 c 63.43 49.898 69.816 45.746 78.789 42.266 c 85.559 39.625 95.711
 36.504 114.43 35.641 c 132.141 34.824 139.004 34.586 174.789 34.562 c h
294.504 66.48 m 286.273 66.48 278.668 70.871 274.551 78 c 270.434 85.129
 270.434 93.91 274.551 101.039 c 278.668 108.168 286.273 112.559 294.504
 112.559 c 302.734 112.559 310.34 108.168 314.457 101.039 c 318.574 93.91
 318.574 85.129 314.457 78 c 310.34 70.871 302.734 66.48 294.504 66.48 c
 192.023 93.41 m 192.023 93.406 l 165.605 92.996 140.129 103.203 121.301
 121.738 c 102.473 140.273 91.871 165.59 91.871 192.012 c 91.871 218.434
 102.473 243.75 121.301 262.285 c 140.129 280.82 165.605 291.027 192.023
 290.617 c 226.887 290.07 258.867 271.16 276.145 240.875 c 293.422 210.59
 293.422 173.434 276.145 143.148 c 258.867 112.863 226.887 93.953 192.023
 93.406 c 192.023 127.992 m 214.891 127.992 236.023 140.191 247.457 159.996
 c 258.891 179.801 258.891 204.199 247.457 224.004 c 236.023 243.809 214.891
 256.008 192.023 256.008 c 169.156 256.008 148.023 243.809 136.59 224.004
 c 125.156 204.199 125.156 179.801 136.59 159.996 c 148.023 140.191 169.156
 127.992 192.023 127.992 c f
Q Q
showpage
%%Trailer
%%EOF
