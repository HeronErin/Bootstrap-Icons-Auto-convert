%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 0 m 17.488 0 16.668 0.031 14.109 0.145 c 11.551 0.266 9.809 0.664 8.281
 1.262 c 6.676 1.859 5.227 2.805 4.027 4.027 c 2.805 5.227 1.859 6.676 1.262
 8.281 c 0.664 9.805 0.262 11.551 0.145 14.102 c 0.031 16.664 0 17.48 0 
24.004 c 0 30.52 0.031 31.336 0.145 33.895 c 0.266 36.449 0.668 38.195 1.262
 39.719 c 1.875 41.297 2.695 42.633 4.031 43.969 c 5.363 45.305 6.703 46.125
 8.277 46.738 c 9.809 47.332 11.547 47.738 14.102 47.855 c 16.664 47.969
 17.48 48 24 48 c 30.52 48 31.332 47.969 33.895 47.855 c 36.449 47.734 38.195
 47.332 39.723 46.738 c 41.324 46.137 42.773 45.195 43.973 43.973 c 45.309
 42.637 46.125 41.301 46.742 39.723 c 47.332 38.195 47.738 36.453 47.859
 33.898 c 47.969 31.336 48 30.52 48 24 c 48 17.48 47.969 16.664 47.855 14.102
 c 47.734 11.547 47.332 9.801 46.738 8.277 c 46.738 8.281 l 46.141 6.676
 45.195 5.227 43.973 4.027 c 42.773 2.805 41.324 1.859 39.719 1.262 c 38.188
 0.668 36.441 0.262 33.891 0.145 c 31.328 0.031 30.516 0 23.992 0 c h
21.848 4.324 m 24 4.324 l 30.406 4.324 31.168 4.344 33.695 4.461 c 36.035
 4.566 37.309 4.957 38.152 5.285 c 39.27 5.719 40.074 6.242 40.914 7.082
 c 41.754 7.922 42.273 8.719 42.707 9.844 c 43.035 10.688 43.426 11.957 
43.531 14.297 c 43.648 16.824 43.672 17.586 43.672 23.988 c 43.672 30.395
 43.648 31.156 43.531 33.684 c 43.426 36.023 43.035 37.293 42.707 38.137
 c 42.711 38.145 l 42.324 39.188 41.711 40.129 40.914 40.902 c 40.074 41.742
 39.277 42.262 38.152 42.695 c 37.312 43.023 36.039 43.414 33.699 43.523
 c 31.172 43.637 30.41 43.664 24.004 43.664 c 17.598 43.664 16.832 43.637
 14.305 43.523 c 11.965 43.414 10.695 43.027 9.852 42.695 c 9.848 42.695
 l 8.809 42.309 7.863 41.695 7.09 40.902 c 6.293 40.125 5.676 39.184 5.289
 38.141 c 4.961 37.297 4.57 36.027 4.465 33.688 c 4.352 31.16 4.328 30.398
 4.328 23.988 c 4.328 17.578 4.352 16.824 4.465 14.297 c 4.574 11.957 4.961
 10.684 5.293 9.84 c 5.727 8.723 6.25 7.918 7.09 7.078 c 7.93 6.238 8.727
 5.719 9.852 5.285 c 10.699 4.957 11.965 4.566 14.305 4.457 c 16.52 4.355
 17.375 4.324 21.852 4.32 c h
36.812 8.309 m 35.223 8.309 33.934 9.598 33.934 11.191 c 33.934 12.781 
35.223 14.07 36.812 14.07 c 38.402 14.07 39.691 12.781 39.691 11.191 c 39.691
 9.598 38.402 8.309 36.812 8.309 c 24.004 11.676 m 20.699 11.625 17.516 
12.898 15.164 15.219 c 12.809 17.535 11.484 20.699 11.484 24 c 11.484 27.305
 12.809 30.469 15.164 32.785 c 17.516 35.102 20.699 36.379 24.004 36.328
 c 30.734 36.223 36.137 30.734 36.137 24 c 36.137 17.27 30.734 11.781 24.004
 11.676 c 24.004 16 m 28.422 16 32.004 19.582 32.004 24 c 32.004 28.418 
28.422 32 24.004 32 c 19.586 32 16.004 28.418 16.004 24 c 16.004 19.582 
19.586 16 24.004 16 c f
Q Q
showpage
%%Trailer
%%EOF
