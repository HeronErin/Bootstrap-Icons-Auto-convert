%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 559.586 0 533.375 0.961 451.488 4.609 c 369.602 8.449 313.824 21.312
 264.961 40.32 c 213.68 59.551 167.246 89.797 128.93 128.93 c 89.797 167.246
 59.551 213.68 40.32 264.961 c 21.312 313.727 8.352 369.602 4.609 451.199
 c 0.961 533.281 0 559.391 0 768.098 c 0 976.609 0.961 1002.723 4.609 1084.609
 c 8.449 1166.402 21.312 1222.176 40.32 1271.043 c 60 1321.539 86.207 1364.355
 128.93 1407.074 c 171.555 1449.793 214.371 1476.098 264.867 1495.684 c 
313.828 1514.691 369.508 1527.652 451.301 1531.395 c 533.281 1535.039 559.391
 1536 768 1536 c 976.609 1536 1002.625 1535.039 1084.609 1531.391 c 1166.305
 1527.551 1222.273 1514.688 1271.137 1495.68 c 1322.379 1476.438 1368.781
 1446.191 1407.07 1407.07 c 1449.789 1364.352 1476 1321.535 1495.68 1271.039
 c 1514.59 1222.176 1527.551 1166.398 1531.391 1084.605 c 1535.039 1002.719
 1536 976.609 1536 768 c 1536 559.391 1535.039 533.281 1531.391 451.297 
c 1527.551 369.602 1514.59 313.73 1495.68 264.961 c 1476.449 213.68 1446.203
 167.246 1407.07 128.93 c 1368.754 89.797 1322.32 59.551 1271.039 40.32 
c 1222.078 21.312 1166.207 8.352 1084.512 4.609 c 1002.527 0.961 976.512
 0 767.809 0 c h
699.168 138.434 m 768.098 138.434 l 973.152 138.434 997.441 139.105 1078.371
 142.848 c 1153.25 146.207 1193.957 158.785 1221.027 169.246 c 1256.836 
183.168 1282.469 199.871 1309.348 226.75 c 1336.227 253.629 1352.836 279.164
 1366.754 315.07 c 1377.312 342.047 1389.793 382.75 1393.152 457.629 c 1396.895
 538.559 1397.664 562.844 1397.664 767.805 c 1397.664 972.766 1396.895 997.148
 1393.152 1078.078 c 1389.793 1152.957 1377.215 1193.566 1366.754 1220.637
 c 1366.754 1220.641 l 1354.352 1253.941 1334.711 1284.074 1309.246 1308.863
 c 1282.367 1335.742 1256.832 1352.352 1220.926 1366.27 c 1194.047 1376.828
 1153.34 1389.309 1078.367 1392.766 c 997.438 1396.414 973.152 1397.277 
768.094 1397.277 c 563.039 1397.277 538.652 1396.414 457.727 1392.766 c 
382.848 1389.309 342.238 1376.828 315.168 1366.27 c 315.168 1366.273 l 281.84
 1353.914 251.672 1334.305 226.848 1308.863 c 201.34 1284.059 181.664 1253.891
 169.246 1220.543 c 158.781 1193.566 146.207 1152.863 142.848 1077.984 c
 139.199 997.055 138.434 972.77 138.434 767.617 c 138.434 562.465 139.203
 538.371 142.848 457.441 c 146.305 382.562 158.785 341.855 169.344 314.785
 c 183.266 278.977 199.969 253.344 226.848 226.465 c 253.727 199.586 279.262
 182.977 315.168 169.059 c 342.238 158.5 382.848 146.02 457.727 142.562 
c 528.574 139.297 556.031 138.34 699.168 138.242 c h
1178.016 265.922 m 1145.09 265.922 1114.664 283.484 1098.203 312 c 1081.742
 340.516 1081.742 375.645 1098.203 404.16 c 1114.664 432.676 1145.09 450.238
 1178.016 450.238 c 1210.941 450.238 1241.367 432.676 1257.828 404.16 c 
1274.293 375.645 1274.293 340.516 1257.828 312 c 1241.367 283.484 1210.941
 265.922 1178.016 265.922 c 768.094 373.633 m 768.098 373.633 l 698.164 
372.539 629.203 390.062 568.273 424.398 c 507.344 458.738 456.641 508.656
 421.355 569.043 c 386.074 629.43 367.477 698.109 367.477 768.047 c 367.477
 837.988 386.074 906.668 421.355 967.055 c 456.641 1027.441 507.344 1077.359
 568.273 1111.695 c 629.203 1146.035 698.164 1163.555 768.098 1162.465 c
 871.637 1160.848 970.387 1118.582 1043.039 1044.793 c 1115.688 971 1156.406
 871.602 1156.406 768.047 c 1156.406 664.496 1115.688 565.094 1043.039 491.305
 c 970.387 417.512 871.637 375.246 768.098 373.633 c 768.098 511.969 m 836
 511.969 901.121 538.941 949.137 586.957 c 997.152 634.973 1024.129 700.098
 1024.129 768 c 1024.129 835.902 997.152 901.027 949.137 949.043 c 901.121
 997.059 836 1024.031 768.098 1024.031 c 700.191 1024.031 635.07 997.059
 587.055 949.043 c 539.039 901.027 512.062 835.902 512.062 768 c 512.062
 700.098 539.039 634.973 587.055 586.957 c 635.07 538.941 700.191 511.969
 768.098 511.969 c f
Q Q
showpage
%%Trailer
%%EOF
