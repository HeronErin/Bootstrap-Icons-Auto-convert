%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 279.793 0 266.688 0.48 225.742 2.305 c 184.801 4.223 156.91 10.656
 132.48 20.16 c 106.84 29.777 83.621 44.898 64.465 64.465 c 44.898 83.621
 29.777 106.84 20.16 132.48 c 10.656 156.863 4.176 184.801 2.305 225.602
 c 0.48 266.641 0 279.695 0 384.047 c 0 488.305 0.48 501.359 2.305 542.305
 c 4.227 583.199 10.656 611.09 20.16 635.52 c 30 660.766 43.105 682.176 
64.465 703.535 c 85.777 724.895 107.184 738.047 132.434 747.84 c 156.914
 757.344 184.754 763.824 225.648 765.695 c 266.641 767.52 279.695 768 384
 768 c 488.305 768 501.312 767.52 542.305 765.695 c 583.152 763.773 611.137
 757.344 635.57 747.84 c 635.566 747.84 l 661.191 738.219 684.391 723.094
 703.535 703.535 c 724.895 682.176 738 660.766 747.84 635.52 c 757.297 611.086
 763.777 583.199 765.695 542.305 c 767.52 501.359 768 488.305 768 384 c 
768 279.695 767.52 266.641 765.695 225.648 c 763.773 184.801 757.297 156.863
 747.84 132.48 c 738.223 106.84 723.102 83.621 703.535 64.465 c 684.379 
44.898 661.16 29.777 635.52 20.16 c 611.039 10.656 583.105 4.176 542.254
 2.305 c 501.266 0.48 488.258 0 383.902 0 c h
349.586 69.215 m 384.051 69.215 l 486.578 69.215 498.723 69.551 539.188
 71.422 c 576.629 73.102 596.98 79.391 610.516 84.621 c 628.418 91.582 641.234
 99.934 654.676 113.375 c 668.117 126.816 676.418 139.582 683.379 157.535
 c 688.66 171.023 694.898 191.375 696.578 228.816 c 698.449 269.281 698.836
 281.426 698.836 383.906 c 698.836 486.387 698.453 498.578 696.578 539.043
 c 694.898 576.484 688.609 596.785 683.379 610.324 c 683.375 610.32 l 677.176
 626.973 667.355 642.039 654.625 654.434 c 641.184 667.875 628.418 676.176
 610.465 683.137 c 597.023 688.418 576.672 694.656 539.184 696.383 c 498.719
 698.207 486.574 698.641 384.047 698.641 c 281.52 698.641 269.328 698.207
 228.863 696.383 c 191.422 694.656 171.121 688.414 157.582 683.137 c 157.586
 683.137 l 140.922 676.957 125.836 667.152 113.426 654.434 c 100.668 642.027
 90.832 626.945 84.625 610.273 c 79.395 596.785 73.105 576.434 71.426 538.992
 c 69.602 498.527 69.219 486.383 69.219 383.809 c 69.219 281.234 69.602 
269.184 71.426 228.719 c 73.152 191.277 79.395 170.926 84.672 157.391 c 
91.633 139.488 99.984 126.672 113.426 113.23 c 126.867 99.789 139.633 91.488
 157.586 84.527 c 171.121 79.246 191.426 73.008 228.867 71.281 c 264.293
 69.648 278.02 69.168 349.586 69.121 c h
589.012 132.957 m 589.008 132.961 l 572.547 132.961 557.332 141.742 549.102
 156 c 540.871 170.258 540.871 187.824 549.102 202.078 c 557.332 216.336
 572.547 225.121 589.008 225.121 c 605.473 225.121 620.684 216.336 628.914
 202.078 c 637.145 187.824 637.145 170.258 628.914 156 c 620.684 141.742
 605.473 132.961 589.008 132.961 c 384.047 186.816 m 349.082 186.27 314.602
 195.031 284.137 212.199 c 253.672 229.367 228.32 254.328 210.68 284.52 
c 193.035 314.715 183.738 349.055 183.738 384.023 c 183.738 418.992 193.035
 453.332 210.68 483.527 c 228.32 513.719 253.672 538.68 284.137 555.848 
c 314.602 573.016 349.082 581.777 384.047 581.23 c 435.816 580.426 485.195
 559.293 521.52 522.395 c 557.844 485.5 578.203 435.801 578.203 384.023 
c 578.203 332.246 557.844 282.547 521.52 245.652 c 485.195 208.758 435.816
 187.625 384.047 186.816 c 384.047 255.984 m 429.785 255.984 472.047 280.383
 494.914 319.992 c 517.781 359.602 517.781 408.398 494.914 448.008 c 472.047
 487.617 429.785 512.016 384.047 512.016 c 338.312 512.016 296.051 487.617
 273.184 448.008 c 250.316 408.398 250.316 359.602 273.184 319.992 c 296.051
 280.383 338.312 255.984 384.047 255.984 c f
Q Q
showpage
%%Trailer
%%EOF
