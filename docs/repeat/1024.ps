%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 61 768 707
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 61 768 707
768 768 cairo_set_page_size
%%EndPageSetup
q 0 61 768 646 rectclip
1 0 0 -1 0 768 cm q
0 g
528 262.367 m 528 192 l 240 192 l 196.25 191.996 153.809 206.934 119.703
 234.344 c 85.602 261.75 61.883 299.984 52.473 342.711 c 43.066 385.438 
48.531 430.098 67.969 469.297 c 71.793 476.98 71.227 486.117 66.484 493.27
 c 61.746 500.426 53.547 504.504 44.98 503.977 c 36.418 503.445 28.785 498.387
 24.961 490.703 c 0.637 441.703 -6.215 385.863 5.539 332.438 c 17.293 279.008
 46.945 231.199 89.586 196.93 c 132.227 162.66 185.297 143.984 240 144 c
 528 144 l 528 73.633 l 528 68.977 530.695 64.742 534.91 62.77 c 539.125
 60.797 544.102 61.438 547.68 64.414 c 660.961 158.781 l 666.723 163.582
 666.723 172.414 660.961 177.215 c 547.68 271.582 l 547.68 271.586 l 544.102
 274.562 539.125 275.203 534.91 273.23 c 530.695 271.258 528 267.023 528
 262.367 c 710.879 266.496 m 716.578 263.668 723.164 263.215 729.195 265.238
 c 735.227 267.266 740.207 271.602 743.039 277.297 c 767.363 326.297 774.215
 382.137 762.461 435.562 c 750.707 488.992 721.055 536.801 678.414 571.07
 c 635.773 605.34 582.703 624.016 528 624 c 240 624 l 240 694.367 l 240 
699.023 237.305 703.258 233.09 705.23 c 228.875 707.203 223.898 706.562 
220.32 703.586 c 107.039 609.219 l 107.039 609.215 l 104.305 606.938 102.727
 603.559 102.727 600 c 102.727 596.441 104.305 593.062 107.039 590.785 c
 220.32 496.418 l 220.32 496.414 l 223.898 493.438 228.875 492.797 233.09
 494.77 c 237.305 496.742 240 500.977 240 505.633 c 240 576 l 528 576 l 
571.758 576.016 614.207 561.082 648.32 533.68 c 682.43 506.273 706.156 468.039
 715.57 425.305 c 724.984 382.57 719.52 337.906 700.078 298.703 c 697.25
 293.008 696.797 286.418 698.824 280.391 c 700.848 274.359 705.184 269.379
 710.879 266.543 c h
710.879 266.496 m f
Q Q
showpage
%%Trailer
%%EOF
