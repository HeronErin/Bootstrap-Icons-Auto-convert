%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 123 1536 1413
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 123 1536 1413
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 123 1536 1290 rectclip
1 0 0 -1 0 1536 cm q
0 g
1056 524.734 m 1056 384 l 480 384 l 392.496 383.992 307.613 413.867 239.41
 468.684 c 171.203 523.5 123.766 599.965 104.945 685.422 c 86.129 770.879
 97.062 860.199 135.938 938.594 c 143.586 953.957 142.453 972.234 132.973
 986.543 c 123.488 1000.848 107.094 1009.008 89.965 1007.949 c 72.832 1006.891
 57.566 996.773 49.922 981.406 c 1.277 883.406 -12.426 771.727 11.078 664.871
 c 34.586 558.016 93.891 462.398 179.172 393.859 c 264.453 325.32 370.59
 287.969 480 288 c 1056 288 l 1056 147.266 l 1056.004 141.152 1058.336 135.27
 1062.527 130.82 c 1066.719 126.371 1072.449 123.688 1078.551 123.316 c 
1084.652 122.949 1090.664 124.922 1095.359 128.832 c 1321.918 317.566 l 
1333.438 327.168 1333.438 344.832 1321.918 354.43 c 1095.359 543.164 l 1095.359
 543.168 l 1090.664 547.078 1084.652 549.051 1078.551 548.684 c 1072.449
 548.312 1066.719 545.629 1062.527 541.18 c 1058.336 536.73 1056.004 530.848
 1056 524.734 c 1421.762 532.992 m 1433.156 527.332 1446.328 526.43 1458.391
 530.48 c 1470.449 534.531 1480.41 543.203 1486.078 554.594 c 1534.723 652.594
 1548.426 764.273 1524.922 871.129 c 1501.414 977.984 1442.109 1073.602 
1356.828 1142.141 c 1271.547 1210.68 1165.41 1248.031 1056 1248 c 480 1248
 l 480 1388.734 l 479.996 1394.848 477.664 1400.73 473.473 1405.18 c 469.281
 1409.629 463.551 1412.312 457.449 1412.684 c 451.348 1413.051 445.336 1411.078
 440.641 1407.168 c 214.082 1218.434 l 214.078 1218.434 l 208.613 1213.871
 205.449 1207.121 205.449 1200 c 205.449 1192.879 208.613 1186.129 214.078
 1181.566 c 440.637 992.832 l 440.641 992.832 l 445.336 988.922 451.348 
986.949 457.449 987.316 c 463.551 987.688 469.281 990.371 473.473 994.82
 c 477.664 999.27 479.996 1005.152 480 1011.266 c 480 1152 l 1056 1152 l
 1143.516 1152.031 1228.414 1122.168 1296.637 1067.355 c 1364.859 1012.543
 1412.316 936.074 1431.141 850.609 c 1449.969 765.145 1439.039 675.812 1400.16
 597.406 c 1394.5 586.012 1393.598 572.84 1397.648 560.777 c 1401.699 548.719
 1410.371 538.758 1421.762 533.09 c h
1421.762 532.992 m f
Q Q
showpage
%%Trailer
%%EOF
