%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 384 1440 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 384 1440 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 384 1344 864 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 384 m 96 358.539 106.113 334.121 124.117 316.117 c 142.121 298.113 166.539
 288 192 288 c 384 288 l 409.461 288 433.879 298.113 451.883 316.117 c 469.887
 334.121 480 358.539 480 384 c 480 576 l 480 601.461 469.887 625.879 451.883
 643.883 c 433.879 661.887 409.461 672 384 672 c 192 672 l 166.539 672 142.121
 661.887 124.117 643.883 c 106.113 625.879 96 601.461 96 576 c h
576 384 m 576 358.539 586.113 334.121 604.117 316.117 c 622.121 298.113
 646.539 288 672 288 c 864 288 l 889.461 288 913.879 298.113 931.883 316.117
 c 949.887 334.121 960 358.539 960 384 c 960 576 l 960 601.461 949.887 625.879
 931.883 643.883 c 913.879 661.887 889.461 672 864 672 c 672 672 l 646.539
 672 622.121 661.887 604.117 643.883 c 586.113 625.879 576 601.461 576 576
 c h
1056 384 m 1056 358.539 1066.113 334.121 1084.117 316.117 c 1102.121 298.113
 1126.539 288 1152 288 c 1344 288 l 1369.461 288 1393.879 298.113 1411.883
 316.117 c 1429.887 334.121 1440 358.539 1440 384 c 1440 576 l 1440 601.461
 1429.887 625.879 1411.883 643.883 c 1393.879 661.887 1369.461 672 1344 
672 c 1152 672 l 1126.539 672 1102.121 661.887 1084.117 643.883 c 1066.113
 625.879 1056 601.461 1056 576 c h
96 864 m 96 838.539 106.113 814.121 124.117 796.117 c 142.121 778.113 166.539
 768 192 768 c 384 768 l 409.461 768 433.879 778.113 451.883 796.117 c 469.887
 814.121 480 838.539 480 864 c 480 1056 l 480 1081.461 469.887 1105.879 
451.883 1123.883 c 433.879 1141.887 409.461 1152 384 1152 c 192 1152 l 166.539
 1152 142.121 1141.887 124.117 1123.883 c 106.113 1105.879 96 1081.461 96
 1056 c h
576 864 m 576 838.539 586.113 814.121 604.117 796.117 c 622.121 778.113
 646.539 768 672 768 c 864 768 l 889.461 768 913.879 778.113 931.883 796.117
 c 949.887 814.121 960 838.539 960 864 c 960 1056 l 960 1081.461 949.887
 1105.879 931.883 1123.883 c 913.879 1141.887 889.461 1152 864 1152 c 672
 1152 l 646.539 1152 622.121 1141.887 604.117 1123.883 c 586.113 1105.879
 576 1081.461 576 1056 c h
1056 864 m 1056 838.539 1066.113 814.121 1084.117 796.117 c 1102.121 778.113
 1126.539 768 1152 768 c 1344 768 l 1369.461 768 1393.879 778.113 1411.883
 796.117 c 1429.887 814.121 1440 838.539 1440 864 c 1440 1056 l 1440 1081.461
 1429.887 1105.879 1411.883 1123.883 c 1393.879 1141.887 1369.461 1152 1344
 1152 c 1152 1152 l 1126.539 1152 1102.121 1141.887 1084.117 1123.883 c 
1066.113 1105.879 1056 1081.461 1056 1056 c h
1056 864 m f
Q Q
showpage
%%Trailer
%%EOF
