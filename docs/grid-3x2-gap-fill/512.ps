%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 96 360 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 96 360 312
384 384 cairo_set_page_size
%%EndPageSetup
q 24 96 336 216 rectclip
1 0 0 -1 0 384 cm q
0 g
24 96 m 24 89.637 26.527 83.531 31.031 79.031 c 35.531 74.527 41.637 72
 48 72 c 96 72 l 102.363 72 108.469 74.527 112.969 79.031 c 117.473 83.531
 120 89.637 120 96 c 120 144 l 120 150.363 117.473 156.469 112.969 160.969
 c 108.469 165.473 102.363 168 96 168 c 48 168 l 41.637 168 35.531 165.473
 31.031 160.969 c 26.527 156.469 24 150.363 24 144 c h
144 96 m 144 89.637 146.527 83.531 151.031 79.031 c 155.531 74.527 161.637
 72 168 72 c 216 72 l 222.363 72 228.469 74.527 232.969 79.031 c 237.473
 83.531 240 89.637 240 96 c 240 144 l 240 150.363 237.473 156.469 232.969
 160.969 c 228.469 165.473 222.363 168 216 168 c 168 168 l 161.637 168 155.531
 165.473 151.031 160.969 c 146.527 156.469 144 150.363 144 144 c h
264 96 m 264 89.637 266.527 83.531 271.031 79.031 c 275.531 74.527 281.637
 72 288 72 c 336 72 l 342.363 72 348.469 74.527 352.969 79.031 c 357.473
 83.531 360 89.637 360 96 c 360 144 l 360 150.363 357.473 156.469 352.969
 160.969 c 348.469 165.473 342.363 168 336 168 c 288 168 l 281.637 168 275.531
 165.473 271.031 160.969 c 266.527 156.469 264 150.363 264 144 c h
24 216 m 24 209.637 26.527 203.531 31.031 199.031 c 35.531 194.527 41.637
 192 48 192 c 96 192 l 102.363 192 108.469 194.527 112.969 199.031 c 117.473
 203.531 120 209.637 120 216 c 120 264 l 120 270.363 117.473 276.469 112.969
 280.969 c 108.469 285.473 102.363 288 96 288 c 48 288 l 41.637 288 35.531
 285.473 31.031 280.969 c 26.527 276.469 24 270.363 24 264 c h
144 216 m 144 209.637 146.527 203.531 151.031 199.031 c 155.531 194.527
 161.637 192 168 192 c 216 192 l 222.363 192 228.469 194.527 232.969 199.031
 c 237.473 203.531 240 209.637 240 216 c 240 264 l 240 270.363 237.473 276.469
 232.969 280.969 c 228.469 285.473 222.363 288 216 288 c 168 288 l 161.637
 288 155.531 285.473 151.031 280.969 c 146.527 276.469 144 270.363 144 264
 c h
264 216 m 264 209.637 266.527 203.531 271.031 199.031 c 275.531 194.527
 281.637 192 288 192 c 336 192 l 342.363 192 348.469 194.527 352.969 199.031
 c 357.473 203.531 360 209.637 360 216 c 360 264 l 360 270.363 357.473 276.469
 352.969 280.969 c 348.469 285.473 342.363 288 336 288 c 288 288 l 281.637
 288 275.531 285.473 271.031 280.969 c 266.527 276.469 264 270.363 264 264
 c h
264 216 m f
Q Q
showpage
%%Trailer
%%EOF
