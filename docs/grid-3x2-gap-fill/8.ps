%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
0.375 1.5 m 0.375 1.293 0.543 1.125 0.75 1.125 c 1.5 1.125 l 1.598 1.125
 1.695 1.164 1.766 1.234 c 1.836 1.305 1.875 1.402 1.875 1.5 c 1.875 2.25
 l 1.875 2.348 1.836 2.445 1.766 2.516 c 1.695 2.586 1.598 2.625 1.5 2.625
 c 0.75 2.625 l 0.543 2.625 0.375 2.457 0.375 2.25 c h
2.25 1.5 m 2.25 1.293 2.418 1.125 2.625 1.125 c 3.375 1.125 l 3.473 1.125
 3.57 1.164 3.641 1.234 c 3.711 1.305 3.75 1.402 3.75 1.5 c 3.75 2.25 l 
3.75 2.348 3.711 2.445 3.641 2.516 c 3.57 2.586 3.473 2.625 3.375 2.625 
c 2.625 2.625 l 2.418 2.625 2.25 2.457 2.25 2.25 c h
4.125 1.5 m 4.125 1.293 4.293 1.125 4.5 1.125 c 5.25 1.125 l 5.348 1.125
 5.445 1.164 5.516 1.234 c 5.586 1.305 5.625 1.402 5.625 1.5 c 5.625 2.25
 l 5.625 2.348 5.586 2.445 5.516 2.516 c 5.445 2.586 5.348 2.625 5.25 2.625
 c 4.5 2.625 l 4.293 2.625 4.125 2.457 4.125 2.25 c h
0.375 3.375 m 0.375 3.168 0.543 3 0.75 3 c 1.5 3 l 1.598 3 1.695 3.039 
1.766 3.109 c 1.836 3.18 1.875 3.277 1.875 3.375 c 1.875 4.125 l 1.875 4.223
 1.836 4.32 1.766 4.391 c 1.695 4.461 1.598 4.5 1.5 4.5 c 0.75 4.5 l 0.543
 4.5 0.375 4.332 0.375 4.125 c h
2.25 3.375 m 2.25 3.168 2.418 3 2.625 3 c 3.375 3 l 3.473 3 3.57 3.039 
3.641 3.109 c 3.711 3.18 3.75 3.277 3.75 3.375 c 3.75 4.125 l 3.75 4.223
 3.711 4.32 3.641 4.391 c 3.57 4.461 3.473 4.5 3.375 4.5 c 2.625 4.5 l 2.418
 4.5 2.25 4.332 2.25 4.125 c h
4.125 3.375 m 4.125 3.168 4.293 3 4.5 3 c 5.25 3 l 5.348 3 5.445 3.039 
5.516 3.109 c 5.586 3.18 5.625 3.277 5.625 3.375 c 5.625 4.125 l 5.625 4.223
 5.586 4.32 5.516 4.391 c 5.445 4.461 5.348 4.5 5.25 4.5 c 4.5 4.5 l 4.293
 4.5 4.125 4.332 4.125 4.125 c h
4.125 3.375 m f
Q Q
showpage
%%Trailer
%%EOF
