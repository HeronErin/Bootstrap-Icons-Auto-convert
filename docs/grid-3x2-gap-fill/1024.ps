%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 192 720 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 192 720 624
768 768 cairo_set_page_size
%%EndPageSetup
q 48 192 672 432 rectclip
1 0 0 -1 0 768 cm q
0 g
48 192 m 48 179.27 53.059 167.062 62.059 158.059 c 71.062 149.059 83.27
 144 96 144 c 192 144 l 204.73 144 216.938 149.059 225.941 158.059 c 234.941
 167.062 240 179.27 240 192 c 240 288 l 240 300.73 234.941 312.938 225.941
 321.941 c 216.938 330.941 204.73 336 192 336 c 96 336 l 83.27 336 71.062
 330.941 62.059 321.941 c 53.059 312.938 48 300.73 48 288 c h
288 192 m 288 179.27 293.059 167.062 302.059 158.059 c 311.062 149.059 
323.27 144 336 144 c 432 144 l 444.73 144 456.938 149.059 465.941 158.059
 c 474.941 167.062 480 179.27 480 192 c 480 288 l 480 300.73 474.941 312.938
 465.941 321.941 c 456.938 330.941 444.73 336 432 336 c 336 336 l 323.27
 336 311.062 330.941 302.059 321.941 c 293.059 312.938 288 300.73 288 288
 c h
528 192 m 528 179.27 533.059 167.062 542.059 158.059 c 551.062 149.059 
563.27 144 576 144 c 672 144 l 684.73 144 696.938 149.059 705.941 158.059
 c 714.941 167.062 720 179.27 720 192 c 720 288 l 720 300.73 714.941 312.938
 705.941 321.941 c 696.938 330.941 684.73 336 672 336 c 576 336 l 563.27
 336 551.062 330.941 542.059 321.941 c 533.059 312.938 528 300.73 528 288
 c h
48 432 m 48 419.27 53.059 407.062 62.059 398.059 c 71.062 389.059 83.27
 384 96 384 c 192 384 l 204.73 384 216.938 389.059 225.941 398.059 c 234.941
 407.062 240 419.27 240 432 c 240 528 l 240 540.73 234.941 552.938 225.941
 561.941 c 216.938 570.941 204.73 576 192 576 c 96 576 l 83.27 576 71.062
 570.941 62.059 561.941 c 53.059 552.938 48 540.73 48 528 c h
288 432 m 288 419.27 293.059 407.062 302.059 398.059 c 311.062 389.059 
323.27 384 336 384 c 432 384 l 444.73 384 456.938 389.059 465.941 398.059
 c 474.941 407.062 480 419.27 480 432 c 480 528 l 480 540.73 474.941 552.938
 465.941 561.941 c 456.938 570.941 444.73 576 432 576 c 336 576 l 323.27
 576 311.062 570.941 302.059 561.941 c 293.059 552.938 288 540.73 288 528
 c h
528 432 m 528 419.27 533.059 407.062 542.059 398.059 c 551.062 389.059 
563.27 384 576 384 c 672 384 l 684.73 384 696.938 389.059 705.941 398.059
 c 714.941 407.062 720 419.27 720 432 c 720 528 l 720 540.73 714.941 552.938
 705.941 561.941 c 696.938 570.941 684.73 576 672 576 c 576 576 l 563.27
 576 551.062 570.941 542.059 561.941 c 533.059 552.938 528 540.73 528 528
 c h
528 432 m f
Q Q
showpage
%%Trailer
%%EOF
