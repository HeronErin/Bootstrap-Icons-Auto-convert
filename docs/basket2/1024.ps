%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 673 rectclip
1 0 0 -1 0 768 cm q
0 g
192 480 m 192 462.852 201.148 447.004 216 438.43 c 230.852 429.855 249.148
 429.855 264 438.43 c 278.852 447.004 288 462.852 288 480 c 288 576 l 288
 593.148 278.852 608.996 264 617.57 c 249.148 626.145 230.852 626.145 216
 617.57 c 201.148 608.996 192 593.148 192 576 c h
336 480 m 336 462.852 345.148 447.004 360 438.43 c 374.852 429.855 393.148
 429.855 408 438.43 c 422.852 447.004 432 462.852 432 480 c 432 576 l 432
 593.148 422.852 608.996 408 617.57 c 393.148 626.145 374.852 626.145 360
 617.57 c 345.148 608.996 336 593.148 336 576 c h
480 480 m 480 462.852 489.148 447.004 504 438.43 c 518.852 429.855 537.148
 429.855 552 438.43 c 566.852 447.004 576 462.852 576 480 c 576 576 l 576
 593.148 566.852 608.996 552 617.57 c 537.148 626.145 518.852 626.145 504
 617.57 c 489.148 608.996 480 593.148 480 576 c h
480 480 m f
276.336 51.406 m 281.797 54.68 285.738 59.984 287.285 66.16 c 288.832 72.336
 287.863 78.875 284.594 84.336 c 162.383 288 l 605.613 288 l 483.359 84.336
 l 478.953 76.98 478.805 67.828 482.973 60.336 c 487.141 52.84 494.988 48.137
 503.566 48 c 512.141 47.859 520.137 52.309 524.543 59.664 c 661.586 288
 l 744 288 l 750.363 288 756.469 290.527 760.969 295.031 c 765.473 299.531
 768 305.637 768 312 c 768 360 l 768 366.363 765.473 372.469 760.969 376.969
 c 756.469 381.473 750.363 384 744 384 c 714.098 384 l 625.586 693.887 l
 623.434 701.418 618.887 708.039 612.633 712.754 c 606.379 717.465 598.758
 720.008 590.93 720 c 177.121 720 l 169.289 720.008 161.668 717.465 155.414
 712.754 c 149.16 708.039 144.613 701.418 142.465 693.887 c 53.902 384 l
 24 384 l 17.637 384 11.531 381.473 7.031 376.969 c 2.527 372.469 0 366.363
 0 360 c 0 312 l 0 305.637 2.527 299.531 7.031 295.031 c 11.531 290.527 
17.637 288 24 288 c 106.414 288 l 243.359 59.664 l 246.633 54.203 251.938
 50.262 258.113 48.715 c 264.289 47.168 270.828 48.137 276.289 51.406 c 
h
103.824 384 m 186.098 672 l 581.906 672 l 664.18 384 l h
103.824 384 m f
Q Q
showpage
%%Trailer
%%EOF
