%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 1 0 10 12 rectclip
1 0 0 -1 0 12 cm q
0 g
3 0 m 2.172 0 1.5 0.672 1.5 1.5 c 1.5 10.5 l 1.5 10.898 1.656 11.281 1.938
 11.562 c 2.219 11.844 2.602 12 3 12 c 9 12 l 9.398 12 9.781 11.844 10.062
 11.562 c 10.344 11.281 10.5 10.898 10.5 10.5 c 10.5 1.5 l 10.5 1.102 10.344
 0.719 10.062 0.438 c 9.781 0.156 9.398 0 9 0 c h
3 0.75 m 9 0.75 l 9.199 0.75 9.391 0.828 9.531 0.969 c 9.672 1.109 9.75
 1.301 9.75 1.5 c 9.75 10.5 l 9.75 10.699 9.672 10.891 9.531 11.031 c 9.391
 11.172 9.199 11.25 9 11.25 c 3 11.25 l 2.586 11.25 2.25 10.914 2.25 10.5
 c 2.25 1.5 l 2.25 1.086 2.586 0.75 3 0.75 c f
3.453 9.066 m 3.305 9.008 3.188 8.895 3.125 8.75 c 2.98 8.461 3.027 8.168
 3.184 7.922 c 3.332 7.691 3.578 7.496 3.855 7.332 c 4.211 7.133 4.582 6.973
 4.969 6.852 c 5.27 6.309 5.535 5.754 5.766 5.18 c 5.625 4.867 5.52 4.543
 5.441 4.207 c 5.375 3.906 5.352 3.609 5.406 3.355 c 5.461 3.09 5.613 2.852
 5.895 2.738 c 6.039 2.68 6.195 2.648 6.348 2.68 c 6.5 2.715 6.633 2.816
 6.703 2.953 c 6.77 3.074 6.793 3.219 6.797 3.355 c 6.801 3.496 6.789 3.652
 6.762 3.816 c 6.699 4.199 6.559 4.668 6.371 5.16 c 6.375 5.164 l 6.582 
5.605 6.828 6.031 7.109 6.43 c 7.441 6.402 7.777 6.414 8.109 6.465 c 8.383
 6.512 8.66 6.609 8.828 6.812 c 8.918 6.922 8.973 7.051 8.977 7.199 c 8.98
 7.344 8.941 7.484 8.875 7.621 c 8.875 7.625 l 8.816 7.75 8.727 7.859 8.609
 7.938 c 8.496 8.012 8.363 8.047 8.227 8.043 c 7.977 8.031 7.734 7.895 7.527
 7.73 c 7.273 7.52 7.043 7.281 6.844 7.016 c 6.34 7.074 5.836 7.176 5.348
 7.32 c 5.125 7.719 4.867 8.098 4.582 8.453 c 4.363 8.715 4.125 8.945 3.887
 9.043 c 3.75 9.105 3.594 9.113 3.453 9.066 c 4.488 7.641 m 4.363 7.699 
4.25 7.758 4.145 7.82 c 3.898 7.965 3.738 8.109 3.66 8.23 c 3.59 8.34 3.59
 8.418 3.629 8.5 c 3.637 8.516 3.645 8.527 3.648 8.531 c 3.676 8.523 l 3.777
 8.48 3.941 8.348 4.152 8.094 c 4.148 8.094 l 4.27 7.949 4.383 7.797 4.488
 7.641 c 5.719 6.645 m 5.715 6.641 l 5.969 6.582 6.219 6.535 6.473 6.496
 c 6.336 6.289 6.211 6.074 6.09 5.855 c 5.973 6.121 5.848 6.383 5.715 6.641
 c h
7.555 6.98 m 7.668 7.102 7.777 7.203 7.883 7.289 c 8.062 7.43 8.188 7.48
 8.258 7.48 c 8.25 7.48 l 8.27 7.48 8.289 7.477 8.305 7.469 c 8.336 7.441
 8.359 7.41 8.375 7.375 c 8.398 7.328 8.414 7.277 8.418 7.223 c 8.418 7.207
 8.41 7.191 8.398 7.176 c 8.359 7.129 8.25 7.062 8.012 7.02 c 7.859 6.996
 7.703 6.98 7.551 6.98 c h
6.059 4.352 m 6.121 4.145 6.172 3.938 6.207 3.73 c 6.23 3.59 6.238 3.473
 6.234 3.383 c 6.238 3.379 l 6.238 3.328 6.23 3.281 6.215 3.23 c 6.176 3.234
 6.141 3.246 6.105 3.262 c 6.039 3.289 5.988 3.34 5.957 3.473 c 5.926 3.617
 5.934 3.824 5.992 4.09 c 6.012 4.172 6.031 4.262 6.059 4.348 c h
6.059 4.352 m f
Q Q
showpage
%%Trailer
%%EOF
