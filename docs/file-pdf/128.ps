%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 72 96 rectclip
1 0 0 -1 0 96 cm q
0 g
24 0 m 17.371 0 12 5.371 12 12 c 12 84 l 12 87.184 13.266 90.234 15.516
 92.484 c 17.766 94.734 20.816 96 24 96 c 72 96 l 75.184 96 78.234 94.734
 80.484 92.484 c 82.734 90.234 84 87.184 84 84 c 84 12 l 84 8.816 82.734
 5.766 80.484 3.516 c 78.234 1.266 75.184 0 72 0 c h
24 6 m 72 6 l 73.59 6 75.117 6.633 76.242 7.758 c 77.367 8.883 78 10.41
 78 12 c 78 84 l 78 85.59 77.367 87.117 76.242 88.242 c 75.117 89.367 73.59
 90 72 90 c 24 90 l 20.688 90 18 87.312 18 84 c 18 12 l 18 8.688 20.688 
6 24 6 c f
27.617 72.523 m 26.445 72.059 25.5 71.156 24.988 70.004 c 23.816 67.676
 24.207 65.348 25.469 63.391 c 26.656 61.547 28.625 59.984 30.852 58.668
 c 33.672 57.07 36.652 55.773 39.742 54.797 c 42.141 50.48 44.27 46.016 
46.117 41.438 c 45.016 38.934 44.152 36.332 43.535 33.664 c 43.02 31.266
 42.82 28.887 43.258 26.848 c 43.707 24.723 44.902 22.816 47.156 21.91 c
 48.309 21.449 49.555 21.191 50.77 21.449 c 50.773 21.449 l 52.008 21.711
 53.059 22.516 53.633 23.641 c 54.16 24.625 54.352 25.777 54.395 26.867 
c 54.438 27.988 54.324 29.238 54.113 30.551 c 53.609 33.609 52.492 37.355
 50.992 41.316 c 52.652 44.855 54.617 48.242 56.875 51.434 c 59.543 51.223
 62.23 51.324 64.879 51.73 c 67.062 52.121 69.281 52.902 70.641 54.52 c 
71.359 55.383 71.797 56.441 71.84 57.629 c 71.883 58.781 71.559 59.922 71.012
 61.008 c 70.535 62.016 69.805 62.875 68.887 63.504 c 67.977 64.094 66.906
 64.383 65.824 64.332 c 63.84 64.246 61.898 63.156 60.227 61.828 c 58.191
 60.148 56.359 58.234 54.762 56.129 c 50.703 56.59 46.695 57.402 42.781 
58.566 c 40.984 61.746 38.938 64.777 36.652 67.625 c 34.914 69.727 33.004
 71.555 31.098 72.348 c 30 72.84 28.758 72.902 27.617 72.523 c 35.891 61.117
 m 34.891 61.578 33.973 62.055 33.137 62.547 c 31.168 63.711 29.891 64.844
 29.254 65.828 c 28.691 66.699 28.68 67.328 29.016 67.992 c 29.078 68.121
 29.133 68.207 29.172 68.258 c 29.383 68.188 l 30.203 67.852 31.512 66.777
 33.191 64.754 c 34.148 63.582 35.051 62.371 35.891 61.117 c 45.73 53.137
 m 47.734 52.672 49.758 52.285 51.793 51.977 c 50.699 50.305 49.68 48.586
 48.73 46.828 c 47.789 48.957 46.789 51.059 45.73 53.129 c h
60.406 55.836 m 61.309 56.812 62.18 57.633 63.016 58.297 c 64.457 59.438
 65.457 59.816 66.004 59.832 c 66.008 59.832 l 66.152 59.855 66.301 59.824
 66.426 59.742 c 66.676 59.547 66.871 59.289 66.988 58.992 c 67.203 58.625
 67.324 58.215 67.344 57.793 c 67.336 57.652 67.281 57.52 67.188 57.414 
c 66.875 57.043 65.988 56.504 64.078 56.16 c 62.867 55.961 61.637 55.855
 60.406 55.844 c h
48.469 34.801 m 48.969 33.168 49.371 31.512 49.668 29.832 c 49.852 28.703
 49.93 27.773 49.895 27.043 c 49.898 26.637 49.836 26.238 49.703 25.855 
c 49.402 25.891 49.109 25.969 48.836 26.094 c 48.312 26.305 47.887 26.73
 47.66 27.793 c 47.422 28.945 47.48 30.605 47.938 32.727 c 48.082 33.395
 48.262 34.086 48.477 34.801 c h
48.469 34.801 m f
Q Q
showpage
%%Trailer
%%EOF
