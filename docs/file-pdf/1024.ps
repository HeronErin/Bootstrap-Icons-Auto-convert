%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 768 rectclip
1 0 0 -1 0 768 cm q
0 g
192 0 m 166.539 0 142.121 10.113 124.117 28.117 c 106.113 46.121 96 70.539
 96 96 c 96 672 l 96 697.461 106.113 721.879 124.117 739.883 c 142.121 757.887
 166.539 768 192 768 c 576 768 l 601.461 768 625.879 757.887 643.883 739.883
 c 661.887 721.879 672 697.461 672 672 c 672 96 l 672 70.539 661.887 46.121
 643.883 28.117 c 625.879 10.113 601.461 0 576 0 c h
192 48 m 576 48 l 588.73 48 600.938 53.059 609.941 62.059 c 618.941 71.062
 624 83.27 624 96 c 624 672 l 624 684.73 618.941 696.938 609.941 705.941
 c 600.938 714.941 588.73 720 576 720 c 192 720 l 179.27 720 167.062 714.941
 158.059 705.941 c 149.059 696.938 144 684.73 144 672 c 144 96 l 144 83.27
 149.059 71.062 158.059 62.059 c 167.062 53.059 179.27 48 192 48 c f
220.945 580.176 m 211.559 576.477 204.008 569.234 199.922 560.016 c 190.562
 541.391 193.684 522.77 203.762 507.121 c 213.266 492.387 229.008 479.855
 246.816 469.344 c 269.375 456.559 293.219 446.18 317.953 438.383 c 337.129
 403.836 354.152 368.137 368.93 331.488 c 360.121 311.457 353.211 290.648
 348.289 269.328 c 344.16 250.129 342.578 231.121 346.082 214.801 c 349.684
 197.809 359.234 182.543 377.281 175.297 c 386.496 171.602 396.48 169.535
 406.176 171.602 c 416.055 173.703 424.461 180.137 429.07 189.121 c 433.293
 196.992 434.832 206.211 435.168 214.945 c 435.504 223.922 434.594 233.906
 432.91 244.418 c 428.879 268.898 419.949 298.852 407.949 330.531 c 407.953
 330.527 l 421.207 358.844 436.945 385.926 454.992 411.457 c 476.355 409.789
 497.844 410.594 519.023 413.855 c 536.496 416.977 554.254 423.215 565.102
 436.176 c 570.863 443.086 574.367 451.535 574.703 461.039 c 575.039 470.254
 572.445 479.375 568.078 488.062 c 564.297 496.113 558.43 503.008 551.09
 508.031 c 543.824 512.754 535.262 515.07 526.609 514.656 c 510.723 513.984
 495.219 505.25 481.824 494.641 c 465.535 481.18 450.863 465.879 438.098
 449.039 c 405.633 452.711 373.559 459.234 342.238 468.527 c 327.883 493.969
 311.492 518.207 293.23 541.008 c 279.309 557.809 264.047 572.449 248.781
 578.785 c 248.785 578.785 l 240.008 582.719 230.07 583.215 220.945 580.176
 c 287.137 488.93 m 279.137 492.609 271.793 496.418 265.105 500.355 c 249.363
 509.668 239.137 518.738 234.051 526.613 c 229.539 533.574 229.441 538.613
 232.129 543.941 c 232.641 544.965 233.059 545.668 233.375 546.055 c 235.055
 545.48 l 241.629 542.793 252.094 534.199 265.535 518.023 c 265.535 518.016
 l 273.191 508.664 280.398 498.957 287.137 488.93 c 365.855 425.09 m 381.887
 421.363 398.059 418.27 414.336 415.824 c 405.609 402.441 397.441 388.703
 389.855 374.641 c 382.324 391.66 374.32 408.465 365.855 425.039 c h
483.262 446.691 m 490.492 454.5 497.453 461.059 504.141 466.371 c 515.66
 475.492 523.676 478.516 528.043 478.66 c 528.047 478.656 l 529.219 478.84
 530.414 478.582 531.406 477.938 c 533.418 476.371 534.973 474.301 535.922
 471.938 c 537.621 469.008 538.59 465.715 538.754 462.336 c 538.703 461.215
 538.262 460.145 537.504 459.312 c 535.008 456.336 527.902 452.016 512.641
 449.281 c 502.926 447.68 493.105 446.828 483.266 446.734 c h
387.742 278.398 m 391.746 265.359 394.953 252.086 397.344 238.656 c 398.816
 229.633 399.422 222.191 399.168 216.336 c 399.191 213.105 398.672 209.891
 397.633 206.832 c 395.227 207.117 392.883 207.766 390.672 208.754 c 386.496
 210.434 383.086 213.844 381.266 222.34 c 379.344 231.555 379.824 244.852
 383.473 261.797 c 384.625 267.141 386.066 272.676 387.793 278.406 c h
387.742 278.398 m f
Q Q
showpage
%%Trailer
%%EOF
