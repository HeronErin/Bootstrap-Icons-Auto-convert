%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.5 0 m 1.086 0 0.75 0.336 0.75 0.75 c 0.75 5.25 l 0.75 5.449 0.828 5.641
 0.969 5.781 c 1.109 5.922 1.301 6 1.5 6 c 4.5 6 l 4.699 6 4.891 5.922 5.031
 5.781 c 5.172 5.641 5.25 5.449 5.25 5.25 c 5.25 0.75 l 5.25 0.551 5.172
 0.359 5.031 0.219 c 4.891 0.078 4.699 0 4.5 0 c h
1.5 0.375 m 4.5 0.375 l 4.598 0.375 4.695 0.414 4.766 0.484 c 4.836 0.555
 4.875 0.652 4.875 0.75 c 4.875 5.25 l 4.875 5.348 4.836 5.445 4.766 5.516
 c 4.695 5.586 4.598 5.625 4.5 5.625 c 1.5 5.625 l 1.293 5.625 1.125 5.457
 1.125 5.25 c 1.125 0.75 l 1.125 0.543 1.293 0.375 1.5 0.375 c f
1.727 4.531 m 1.652 4.504 1.594 4.445 1.562 4.375 c 1.488 4.23 1.516 4.086
 1.594 3.961 c 1.668 3.848 1.789 3.746 1.93 3.664 c 1.93 3.668 l 2.105 3.566
 2.289 3.484 2.484 3.426 c 2.633 3.156 2.766 2.875 2.883 2.59 c 2.812 2.434
 2.758 2.27 2.723 2.105 c 2.691 1.957 2.68 1.809 2.707 1.68 c 2.734 1.547
 2.809 1.426 2.949 1.371 c 3.02 1.344 3.098 1.324 3.176 1.344 c 3.172 1.34
 l 3.25 1.355 3.316 1.406 3.352 1.477 c 3.383 1.539 3.398 1.609 3.398 1.68
 c 3.402 1.75 3.395 1.828 3.379 1.91 c 3.348 2.102 3.277 2.336 3.184 2.582
 c 3.188 2.582 l 3.289 2.805 3.414 3.016 3.555 3.215 c 3.723 3.203 3.891
 3.207 4.055 3.234 c 4.191 3.258 4.328 3.309 4.414 3.41 c 4.461 3.465 4.488
 3.531 4.488 3.605 c 4.492 3.676 4.469 3.75 4.438 3.816 c 4.438 3.812 l 
4.41 3.875 4.363 3.93 4.305 3.969 c 4.25 4.008 4.184 4.023 4.113 4.02 c 
3.988 4.016 3.867 3.945 3.762 3.863 c 3.766 3.863 l 3.637 3.758 3.523 3.641
 3.422 3.508 c 3.168 3.535 2.918 3.586 2.672 3.66 c 2.562 3.859 2.434 4.047
 2.289 4.227 c 2.18 4.359 2.062 4.473 1.941 4.523 c 1.945 4.523 l 1.875 
4.551 1.797 4.555 1.727 4.531 c 2.242 3.82 m 2.18 3.848 2.121 3.879 2.07
 3.91 c 1.949 3.984 1.867 4.055 1.828 4.117 c 1.793 4.172 1.793 4.211 1.812
 4.254 c 1.816 4.262 1.82 4.266 1.82 4.27 c 1.832 4.266 l 1.883 4.246 1.965
 4.176 2.07 4.051 c 2.074 4.047 l 2.133 3.973 2.191 3.898 2.242 3.82 c 2.855
 3.32 m 2.859 3.32 l 2.984 3.293 3.109 3.27 3.238 3.25 c 3.168 3.145 3.105
 3.035 3.047 2.926 c 2.988 3.059 2.926 3.191 2.859 3.32 c h
3.773 3.488 m 3.828 3.551 3.883 3.602 3.938 3.641 c 4.027 3.711 4.09 3.734
 4.125 3.738 c 4.133 3.742 4.145 3.738 4.152 3.734 c 4.168 3.723 4.18 3.707
 4.188 3.688 c 4.199 3.664 4.207 3.637 4.211 3.613 c 4.207 3.602 4.207 3.594
 4.199 3.59 c 4.18 3.566 4.125 3.531 4.004 3.512 c 3.93 3.496 3.852 3.492
 3.777 3.488 c h
3.027 2.176 m 3.059 2.074 3.086 1.969 3.105 1.863 c 3.117 1.793 3.121 1.734
 3.121 1.688 c 3.117 1.691 l 3.117 1.664 3.113 1.641 3.105 1.617 c 3.086
 1.617 3.07 1.625 3.051 1.633 c 3.02 1.645 2.992 1.672 2.977 1.738 c 2.961
 1.809 2.965 1.914 2.992 2.047 c 3 2.09 3.012 2.133 3.027 2.176 c h
3.027 2.176 m f
Q Q
showpage
%%Trailer
%%EOF
