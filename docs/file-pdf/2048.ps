%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
384 0 m 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242 192 141.078
 192 192 c 192 1344 l 192 1377.703 200.871 1410.812 217.723 1440 c 234.574
 1469.188 258.812 1493.426 288 1510.277 c 317.188 1527.129 350.297 1536 
384 1536 c 1152 1536 l 1185.703 1536 1218.812 1527.129 1248 1510.277 c 1277.188
 1493.426 1301.426 1469.188 1318.277 1440 c 1335.129 1410.812 1344 1377.703
 1344 1344 c 1344 192 l 1344 158.297 1335.129 125.188 1318.277 96 c 1301.426
 66.812 1277.188 42.574 1248 25.723 c 1218.812 8.871 1185.703 0 1152 0 c
 h
384 96 m 1152 96 l 1177.461 96 1201.879 106.113 1219.883 124.117 c 1237.887
 142.121 1248 166.539 1248 192 c 1248 1344 l 1248 1369.461 1237.887 1393.879
 1219.883 1411.883 c 1201.879 1429.887 1177.461 1440 1152 1440 c 384 1440
 l 358.539 1440 334.121 1429.887 316.117 1411.883 c 298.113 1393.879 288
 1369.461 288 1344 c 288 192 l 288 166.539 298.113 142.121 316.117 124.117
 c 334.121 106.113 358.539 96 384 96 c f
441.887 1160.352 m 423.121 1152.957 408.016 1138.473 399.84 1120.031 c 
381.121 1082.785 387.359 1045.535 407.52 1014.238 c 426.527 984.766 458.016
 959.711 493.633 938.688 c 538.754 913.113 586.438 892.359 635.902 876.77
 c 674.254 807.672 708.305 736.27 737.855 662.977 c 720.246 622.914 706.426
 581.293 696.574 538.656 c 688.316 500.258 685.148 462.242 692.16 429.602
 c 699.359 395.617 718.465 365.09 754.559 350.594 c 772.992 343.203 792.957
 339.074 812.352 343.203 c 812.352 343.199 l 832.105 347.406 848.922 360.273
 858.145 378.238 c 866.594 393.98 869.664 412.414 870.336 429.887 c 871.008
 447.84 869.184 467.809 865.824 488.832 c 857.762 537.793 839.902 597.695
 815.902 661.055 c 842.41 717.688 873.895 771.852 909.984 822.91 c 952.715
 819.578 995.688 821.188 1038.047 827.711 c 1072.992 833.949 1108.512 846.43
 1130.207 872.352 c 1141.727 886.176 1148.734 903.07 1149.406 922.078 c 
1150.078 940.512 1144.895 958.75 1136.16 976.125 c 1136.16 976.129 l 1128.594
 992.23 1116.859 1006.02 1102.176 1016.062 c 1087.648 1025.508 1070.523 
1030.145 1053.215 1029.312 c 1021.438 1027.969 990.43 1010.496 963.648 989.281
 c 931.07 962.359 901.723 931.754 876.191 898.078 c 811.27 905.422 747.117
 918.465 684.48 937.055 c 655.766 987.938 622.984 1036.414 586.465 1082.016
 c 558.625 1115.617 528.098 1144.895 497.57 1157.566 c 497.566 1157.566 
l 480.012 1165.438 460.141 1166.43 441.887 1160.352 c 574.27 977.855 m 558.27
 985.215 543.582 992.832 530.207 1000.703 c 498.719 1019.328 478.27 1037.473
 468.094 1053.215 c 459.07 1067.137 458.879 1077.215 464.254 1087.871 c 
465.277 1089.918 466.109 1091.328 466.75 1092.094 c 470.109 1090.941 l 483.262
 1085.566 504.188 1068.383 531.07 1036.031 c 546.379 1017.332 560.797 997.918
 574.273 977.855 c 731.715 850.176 m 731.711 850.176 l 763.773 842.723 796.121
 836.543 828.672 831.648 c 811.215 804.883 794.883 777.402 779.711 749.281
 c 764.645 783.316 748.641 816.93 731.711 850.078 c h
966.531 893.375 m 980.996 908.992 994.914 922.109 1008.293 932.734 c 1031.332
 950.973 1047.363 957.023 1056.102 957.309 c 1056.098 957.312 l 1058.438
 957.676 1060.832 957.164 1062.816 955.871 c 1066.832 952.742 1069.945 948.598
 1071.84 943.871 c 1075.238 938.02 1077.184 931.434 1077.504 924.672 c 1077.406
 922.426 1076.523 920.285 1075.008 918.625 c 1070.016 912.672 1055.809 904.031
 1025.281 898.562 c 1025.281 898.559 l 1005.855 895.359 986.215 893.66 966.527
 893.473 c h
775.488 556.801 m 783.496 530.719 789.906 504.172 794.688 477.312 c 797.633
 459.266 798.848 444.383 798.336 432.672 c 798.387 426.207 797.348 419.781
 795.266 413.664 c 790.457 414.234 785.766 415.531 781.344 417.504 c 772.992
 420.863 766.176 427.68 762.527 444.672 c 758.688 463.105 759.648 489.695
 766.941 523.582 c 769.246 534.27 772.125 545.344 775.582 556.797 c h
775.488 556.801 m f
Q Q
showpage
%%Trailer
%%EOF
