%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 18 96 78
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 18 96 78
96 96 cairo_set_page_size
%%EndPageSetup
q 0 18 96 60 rectclip
1 0 0 -1 0 96 cm q
0 g
24 29.102 m 24 34.5 l 30 34.5 l 30 29.102 l h
66 29.102 m 66 34.5 l 72 34.5 l 72 29.102 l h
24 39.902 m 24 45.301 l 30 45.301 l 30 39.902 l h
66 39.902 m 66 45.301 l 72 45.301 l 72 39.902 l h
24 50.703 m 24 56.102 l 30 56.102 l 30 50.703 l h
66 50.703 m 66 56.102 l 72 56.102 l 72 50.703 l h
24 61.504 m 24 66.902 l 30 66.902 l 30 61.504 l h
66 61.504 m 66 66.902 l 72 66.902 l 72 61.504 l h
66 61.504 m f
9 18 m 4.031 18 0 22.031 0 27 c 0 36 l 0 36.797 0.316 37.559 0.879 38.121
 c 1.441 38.684 2.203 39 3 39 c 7.969 39 12 43.031 12 48 c 12 52.969 7.969
 57 3 57 c 1.344 57 0 58.344 0 60 c 0 69 l 0 73.969 4.031 78 9 78 c 87 78
 l 91.969 78 96 73.969 96 69 c 96 60 l 96 59.203 95.684 58.441 95.121 57.879
 c 94.559 57.316 93.797 57 93 57 c 88.031 57 84 52.969 84 48 c 84 43.031
 88.031 39 93 39 c 93.797 39 94.559 38.684 95.121 38.121 c 95.684 37.559
 96 36.797 96 36 c 96 27 l 96 22.031 91.969 18 87 18 c h
6 27 m 6 25.344 7.344 24 9 24 c 87 24 l 87.797 24 88.559 24.316 89.121 
24.879 c 89.684 25.441 90 26.203 90 27 c 90 33.301 l 85.445 34.227 81.574
 37.211 79.523 41.383 c 77.473 45.555 77.473 50.445 79.523 54.617 c 81.574
 58.789 85.445 61.773 90 62.699 c 90 69 l 90 69.797 89.684 70.559 89.121
 71.121 c 88.559 71.684 87.797 72 87 72 c 9 72 l 7.344 72 6 70.656 6 69 
c 6 62.699 l 10.555 61.773 14.426 58.789 16.477 54.617 c 18.527 50.445 18.527
 45.555 16.477 41.383 c 14.426 37.211 10.555 34.227 6 33.301 c h
6 27 m f
Q Q
showpage
%%Trailer
%%EOF
