%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
192 232.801 m 192 276 l 240 276 l 240 232.801 l h
528 232.801 m 528 276 l 576 276 l 576 232.801 l h
192 319.199 m 192 362.398 l 240 362.398 l 240 319.199 l h
528 319.199 m 528 362.398 l 576 362.398 l 576 319.199 l h
192 405.598 m 192 448.797 l 240 448.797 l 240 405.598 l h
528 405.598 m 528 448.797 l 576 448.797 l 576 405.598 l h
192 491.996 m 192 535.195 l 240 535.195 l 240 491.996 l h
528 491.996 m 528 535.195 l 576 535.195 l 576 491.996 l h
528 491.996 m f
72 144 m 52.906 144 34.59 151.586 21.09 165.09 c 7.586 178.59 0 196.906
 0 216 c 0 288 l 0 294.363 2.527 300.469 7.031 304.969 c 11.531 309.473 
17.637 312 24 312 c 49.723 312 73.492 325.723 86.355 348 c 99.215 370.277
 99.215 397.723 86.355 420 c 73.492 442.277 49.723 456 24 456 c 17.637 456
 11.531 458.527 7.031 463.031 c 2.527 467.531 0 473.637 0 480 c 0 552 l 
0 571.094 7.586 589.41 21.09 602.91 c 34.59 616.414 52.906 624 72 624 c 
696 624 l 715.094 624 733.41 616.414 746.91 602.91 c 760.414 589.41 768 
571.094 768 552 c 768 480 l 768 473.637 765.473 467.531 760.969 463.031 
c 756.469 458.527 750.363 456 744 456 c 718.277 456 694.508 442.277 681.645
 420 c 668.785 397.723 668.785 370.277 681.645 348 c 694.508 325.723 718.277
 312 744 312 c 750.363 312 756.469 309.473 760.969 304.969 c 765.473 300.469
 768 294.363 768 288 c 768 216 l 768 196.906 760.414 178.59 746.91 165.09
 c 733.41 151.586 715.094 144 696 144 c h
48 216 m 48 209.637 50.527 203.531 55.031 199.031 c 59.531 194.527 65.637
 192 72 192 c 696 192 l 702.363 192 708.469 194.527 712.969 199.031 c 717.473
 203.531 720 209.637 720 216 c 720 266.398 l 683.551 273.801 652.59 297.688
 636.184 331.07 c 619.777 364.449 619.777 403.551 636.184 436.93 c 652.59
 470.312 683.551 494.199 720 501.602 c 720 552 l 720 558.363 717.473 564.469
 712.969 568.969 c 708.469 573.473 702.363 576 696 576 c 72 576 l 65.637
 576 59.531 573.473 55.031 568.969 c 50.527 564.469 48 558.363 48 552 c 
48 501.602 l 84.449 494.199 115.41 470.312 131.816 436.93 c 148.223 403.551
 148.223 364.449 131.816 331.07 c 115.41 297.688 84.449 273.801 48 266.398
 c h
48 216 m f
Q Q
showpage
%%Trailer
%%EOF
