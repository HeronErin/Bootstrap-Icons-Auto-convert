%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 528 m 435.445 528 482.984 500.555 508.707 456 c 534.43 411.445 534.43
 356.555 508.707 312 c 482.984 267.445 435.445 240 384 240 c 332.555 240
 285.016 267.445 259.293 312 c 233.57 356.555 233.57 411.445 259.293 456
 c 285.016 500.555 332.555 528 384 528 c f
671.855 248.16 m 673.945 186.805 652.441 126.98 611.77 80.996 c 571.094
 35.008 514.348 6.359 453.195 0.934 c 392.043 -4.488 331.137 13.73 283.008
 51.84 c 233.742 42.844 182.898 49.484 137.598 70.832 c 92.293 92.176 54.805
 127.16 30.379 170.879 c 5.953 214.598 -4.188 264.863 1.383 314.629 c 6.953
 364.398 27.953 411.18 61.441 448.414 c 43.223 500.203 43.309 556.672 61.684
 608.402 c 80.062 660.137 115.617 704.004 162.426 732.691 c 209.234 761.379
 264.461 773.152 318.898 766.047 c 373.336 758.941 423.691 733.387 461.566
 693.648 c 490.867 712.352 525.246 721.508 559.965 719.852 c 594.684 718.199
 628.035 705.816 655.422 684.41 c 682.809 663.004 702.883 633.633 712.875
 600.34 c 722.867 567.047 722.289 531.477 711.215 498.527 c 738.879 477.422
 757.969 447.016 764.957 412.926 c 771.945 378.836 766.355 343.371 749.223
 313.086 c 732.09 282.797 704.574 259.734 671.762 248.16 c h
623.855 246.527 m 623.512 256.738 626.438 266.793 632.207 275.23 c 637.973
 283.664 646.281 290.039 655.922 293.426 c 677.797 301.148 696.137 316.531
 707.555 336.73 c 718.969 356.93 722.688 380.574 718.023 403.305 c 713.359
 426.031 700.625 446.301 682.176 460.367 c 674.211 466.449 668.352 474.871
 665.418 484.453 c 662.48 494.035 662.617 504.293 665.809 513.793 c 676.449
 545.375 673.477 579.957 657.602 609.262 c 641.73 638.562 614.383 659.945
 582.117 668.285 c 549.852 676.625 515.574 671.172 487.488 653.23 c 478.109
 647.238 466.941 644.688 455.891 646.016 c 444.84 647.348 434.598 652.477
 426.91 660.527 c 396.617 692.352 356.328 712.824 312.762 718.527 c 269.195
 724.23 224.992 714.816 187.527 691.863 c 150.066 668.906 121.609 633.797
 106.906 592.391 c 92.207 550.988 92.152 505.793 106.754 464.352 c 109.605
 456.227 110.219 447.48 108.531 439.035 c 106.84 430.59 102.91 422.754 97.152
 416.352 c 70.355 386.562 53.547 349.137 49.086 309.316 c 44.625 269.496
 52.734 229.277 72.277 194.297 c 91.824 159.316 121.82 131.328 158.07 114.25
 c 194.316 97.176 235 91.867 274.414 99.07 c 288 101.543 301.992 98.047 
312.816 89.473 c 351.324 58.996 400.047 44.434 448.965 48.781 c 497.883 
53.129 543.273 76.055 575.805 112.848 c 608.336 149.637 625.531 197.496 
623.855 246.574 c h
623.855 246.527 m f
Q Q
showpage
%%Trailer
%%EOF
