%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 4.125 m 3.621 4.125 4.125 3.621 4.125 3 c 4.125 2.379 3.621 1.875 3 1.875
 c 2.379 1.875 1.875 2.379 1.875 3 c 1.875 3.621 2.379 4.125 3 4.125 c f
5.25 1.938 m 5.273 1.207 4.871 0.531 4.219 0.203 c 3.566 -0.129 2.785 -0.047
 2.211 0.406 c 1.422 0.262 0.629 0.633 0.238 1.336 c -0.152 2.035 -0.055
 2.906 0.48 3.504 c 0.188 4.336 0.516 5.262 1.27 5.723 c 2.023 6.188 2.996
 6.059 3.605 5.418 c 4.074 5.719 4.684 5.691 5.121 5.348 c 5.559 5.004 5.734
 4.422 5.555 3.895 c 5.887 3.645 6.051 3.234 5.984 2.824 c 5.922 2.418 5.637
 2.078 5.25 1.938 c h
4.875 1.926 m 4.867 2.09 4.969 2.238 5.125 2.293 c 5.383 2.383 5.574 2.609
 5.617 2.883 c 5.66 3.156 5.547 3.43 5.328 3.598 c 5.203 3.695 5.152 3.863
 5.203 4.016 c 5.328 4.391 5.203 4.809 4.891 5.051 c 4.578 5.297 4.145 5.316
 3.809 5.102 c 3.656 5.008 3.461 5.031 3.336 5.16 c 2.848 5.672 2.066 5.773
 1.465 5.406 c 0.863 5.035 0.598 4.293 0.836 3.629 c 0.879 3.5 0.852 3.355
 0.758 3.254 c 0.328 2.777 0.25 2.078 0.566 1.52 c 0.879 0.957 1.512 0.66
 2.145 0.773 c 2.25 0.793 2.359 0.766 2.445 0.699 c 2.902 0.336 3.531 0.273
 4.051 0.535 c 4.574 0.801 4.895 1.344 4.875 1.926 c h
4.875 1.926 m f
Q Q
showpage
%%Trailer
%%EOF
