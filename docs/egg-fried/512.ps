%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 264 m 217.723 264 241.492 250.277 254.355 228 c 267.215 205.723 267.215
 178.277 254.355 156 c 241.492 133.723 217.723 120 192 120 c 166.277 120
 142.508 133.723 129.645 156 c 116.785 178.277 116.785 205.723 129.645 228
 c 142.508 250.277 166.277 264 192 264 c f
335.93 124.078 m 336.973 93.402 326.219 63.488 305.883 40.496 c 285.547
 17.504 257.172 3.18 226.598 0.469 c 196.023 -2.242 165.57 6.863 141.504
 25.922 c 108.453 19.883 74.383 27.98 47.582 48.242 c 20.777 68.508 3.699
 99.078 0.496 132.523 c -2.711 165.969 8.254 199.227 30.719 224.207 c 18.48
 258.996 22.918 297.48 42.754 328.574 c 62.59 359.664 95.621 379.906 132.324
 383.473 c 169.031 387.035 205.34 373.52 230.785 346.824 c 250.438 359.371
 274.422 363.184 297 357.352 c 319.578 351.516 338.711 336.559 349.828 316.062
 c 360.941 295.562 363.035 271.367 355.609 249.266 c 369.441 238.711 378.984
 223.508 382.477 206.465 c 385.973 189.418 383.176 171.688 374.613 156.543
 c 366.047 141.398 352.289 129.867 335.879 124.078 c h
311.93 123.262 m 311.93 123.266 l 311.758 128.371 313.219 133.398 316.102
 137.613 c 318.984 141.832 323.141 145.02 327.961 146.711 c 338.898 150.574
 348.07 158.266 353.777 168.367 c 359.484 178.465 361.344 190.289 359.012
 201.652 c 356.68 213.016 350.312 223.148 341.09 230.184 c 337.105 233.227
 334.176 237.438 332.707 242.227 c 331.242 247.016 331.309 252.145 332.902
 256.895 c 338.223 272.688 336.738 289.98 328.801 304.629 c 320.863 319.281
 307.191 329.973 291.059 334.145 c 274.926 338.312 257.785 335.586 243.742
 326.617 c 239.055 323.617 233.473 322.344 227.945 323.008 c 222.422 323.676
 217.297 326.238 213.457 330.266 c 193.105 351.645 164.051 362.473 134.676
 359.629 c 105.297 356.785 78.859 340.586 62.984 315.703 c 47.113 290.816
 43.566 260.016 53.375 232.176 c 54.801 228.113 55.109 223.742 54.266 219.52
 c 53.422 215.297 51.457 211.379 48.574 208.176 c 30.598 188.191 21.82 161.582
 24.383 134.82 c 26.945 108.059 40.613 83.602 62.059 67.391 c 83.504 51.18
 110.762 44.703 137.207 49.535 c 144 50.773 150.996 49.023 156.406 44.734
 c 175.664 29.496 200.023 22.215 224.484 24.391 c 248.941 26.562 271.637
 38.027 287.902 56.422 c 304.168 74.82 312.766 98.746 311.93 123.289 c h
311.93 123.262 m f
Q Q
showpage
%%Trailer
%%EOF
