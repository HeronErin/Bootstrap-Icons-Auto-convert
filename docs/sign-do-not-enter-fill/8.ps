%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.59 1.605 m 1.469 1.605 l 1.469 2.145 l 1.59 2.145 l 1.738 2.145 1.809
 2.055 1.809 1.875 c 1.809 1.695 1.738 1.605 1.59 1.605 c 2.488 1.926 m 
2.488 1.82 l 2.488 1.664 2.41 1.59 2.305 1.59 c 2.199 1.59 2.117 1.668 2.117
 1.82 c 2.117 1.926 l 2.117 2.082 2.195 2.156 2.305 2.156 c 2.41 2.156 2.488
 2.078 2.488 1.926 c 4.051 1.926 m 4.051 1.82 l 4.051 1.664 3.973 1.59 3.867
 1.59 c 3.762 1.59 3.68 1.668 3.68 1.82 c 3.68 1.926 l 3.68 2.082 3.758 
2.156 3.867 2.156 c 3.973 2.156 4.051 2.078 4.051 1.926 c 4.055 4.109 m 
4.055 3.848 l 4.199 3.848 l 4.285 3.848 4.34 3.895 4.34 3.98 c 4.34 4.066
 4.285 4.109 4.195 4.109 c h
4.055 4.109 m f
3 6 m 4.656 6 6 4.656 6 3 c 6 1.344 4.656 0 3 0 c 1.344 0 0 1.344 0 3 c
 0 4.656 1.344 6 3 6 c 1.344 2.25 m 1.344 1.5 l 1.602 1.5 l 1.824 1.5 1.934
 1.633 1.934 1.875 c 1.934 2.117 1.824 2.25 1.602 2.25 c h
2.613 1.824 m 2.613 1.926 l 2.613 2.137 2.492 2.266 2.301 2.266 c 2.109
 2.266 1.988 2.141 1.988 1.926 c 1.988 1.824 l 1.988 1.609 2.109 1.484 2.301
 1.484 c 2.492 1.484 2.613 1.609 2.613 1.824 c h
2.996 1.711 m 2.996 2.25 l 2.875 2.25 l 2.875 1.5 l 2.984 1.5 l 3.336 2.039
 l 3.34 2.039 l 3.34 1.5 l 3.461 1.5 l 3.461 2.25 l 3.352 2.25 l 3 1.711
 l h
4.176 1.824 m 4.176 1.926 l 4.176 2.137 4.055 2.266 3.863 2.266 c 3.672
 2.266 3.551 2.141 3.551 1.926 c 3.551 1.824 l 3.551 1.609 3.672 1.484 3.863
 1.484 c 4.055 1.484 4.176 1.609 4.176 1.824 c h
4.512 1.605 m 4.512 2.25 l 4.387 2.25 l 4.387 1.605 l 4.168 1.605 l 4.168
 1.5 l 4.73 1.5 l 4.73 1.605 l h
2.031 4.395 m 2.031 4.5 l 1.562 4.5 l 1.562 3.75 l 2.031 3.75 l 2.031 3.855
 l 1.688 3.855 l 1.688 4.07 l 2.012 4.07 l 2.012 4.172 l 1.688 4.172 l 1.688
 4.398 l h
2.246 4.5 m 2.125 4.5 l 2.125 3.75 l 2.234 3.75 l 2.586 4.289 l 2.59 4.289
 l 2.59 3.75 l 2.711 3.75 l 2.711 4.5 l 2.602 4.5 l 2.25 3.961 l 2.246 3.961
 l h
3.102 4.5 m 2.973 4.5 l 2.973 3.855 l 2.754 3.855 l 2.754 3.75 l 3.32 3.75
 l 3.32 3.855 l 3.102 3.855 l h
3.832 4.395 m 3.832 4.5 l 3.363 4.5 l 3.363 3.75 l 3.832 3.75 l 3.832 3.855
 l 3.488 3.855 l 3.488 4.07 l 3.812 4.07 l 3.812 4.172 l 3.488 4.168 l 3.488
 4.395 l h
4.215 3.75 m 4.371 3.75 4.469 3.84 4.469 3.98 c 4.465 3.98 l 4.469 4.074
 4.414 4.156 4.328 4.191 c 4.48 4.5 l 4.34 4.5 l 4.203 4.211 l 4.047 4.211
 l 4.051 4.5 l 3.93 4.5 l 3.93 3.75 l h
1.312 2.625 m 4.688 2.625 l 4.793 2.625 4.875 2.707 4.875 2.812 c 4.875
 3.188 l 4.875 3.293 4.793 3.375 4.688 3.375 c 1.312 3.375 l 1.207 3.375
 1.125 3.293 1.125 3.188 c 1.125 2.812 l 1.125 2.707 1.207 2.625 1.312 2.625
 c f
Q Q
showpage
%%Trailer
%%EOF
