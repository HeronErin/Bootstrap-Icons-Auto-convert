%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
0 252 m 0 242.453 3.793 233.297 10.543 226.543 c 17.297 219.793 26.453 
216 36 216 c 60 216 l 69.547 216 78.703 219.793 85.457 226.543 c 92.207 
233.297 96 242.453 96 252 c 96 276 l 96 285.547 92.207 294.703 85.457 301.457
 c 78.703 308.207 69.547 312 60 312 c 36 312 l 26.453 312 17.297 308.207
 10.543 301.457 c 3.793 294.703 0 285.547 0 276 c h
36 240 m 29.371 240 24 245.371 24 252 c 24 276 l 24 279.184 25.266 282.234
 27.516 284.484 c 29.766 286.734 32.816 288 36 288 c 60 288 l 63.184 288
 66.234 286.734 68.484 284.484 c 70.734 282.234 72 279.184 72 276 c 72 252
 l 72 248.816 70.734 245.766 68.484 243.516 c 66.234 241.266 63.184 240 
60 240 c h
288 252 m 288 242.453 291.793 233.297 298.543 226.543 c 305.297 219.793
 314.453 216 324 216 c 348 216 l 357.547 216 366.703 219.793 373.457 226.543
 c 380.207 233.297 384 242.453 384 252 c 384 276 l 384 285.547 380.207 294.703
 373.457 301.457 c 366.703 308.207 357.547 312 348 312 c 324 312 l 314.453
 312 305.297 308.207 298.543 301.457 c 291.793 294.703 288 285.547 288 276
 c h
324 240 m 317.371 240 312 245.371 312 252 c 312 276 l 312 279.184 313.266
 282.234 315.516 284.484 c 317.766 286.734 320.816 288 324 288 c 348 288
 l 351.184 288 354.234 286.734 356.484 284.484 c 358.734 282.234 360 279.184
 360 276 c 360 252 l 360 248.816 358.734 245.766 356.484 243.516 c 354.234
 241.266 351.184 240 348 240 c h
144 108 m 144 98.453 147.793 89.297 154.543 82.543 c 161.297 75.793 170.453
 72 180 72 c 204 72 l 213.547 72 222.703 75.793 229.457 82.543 c 236.207
 89.297 240 98.453 240 108 c 240 132 l 240 141.547 236.207 150.703 229.457
 157.457 c 222.703 164.207 213.547 168 204 168 c 180 168 l 170.453 168 161.297
 164.207 154.543 157.457 c 147.793 150.703 144 141.547 144 132 c h
180 96 m 173.371 96 168 101.371 168 108 c 168 132 l 168 135.184 169.266
 138.234 171.516 140.484 c 173.766 142.734 176.816 144 180 144 c 204 144
 l 207.184 144 210.234 142.734 212.484 140.484 c 214.734 138.234 216 135.184
 216 132 c 216 108 l 216 104.816 214.734 101.766 212.484 99.516 c 210.234
 97.266 207.184 96 204 96 c h
180 96 m f*
144 108 m 44.785 108 l 41.238 101.855 35.152 97.598 28.168 96.363 c 21.18
 95.133 14.008 97.055 8.574 101.613 c 3.137 106.176 0 112.906 0 120 c 0 
127.094 3.137 133.824 8.574 138.387 c 14.008 142.945 21.18 144.867 28.168
 143.637 c 35.152 142.402 41.238 138.145 44.785 132 c 108.816 132 l 77.914
 151.516 54.816 181.234 43.535 216 c 60 216 l 62.977 216 65.84 216.344 68.594
 217.031 c 82.043 181.844 109.844 154.043 145.031 140.594 c 144.344 137.781
 143.996 134.895 144 132 c h
238.969 140.594 m 239.656 137.781 240.004 134.895 240 132 c 240 108 l 339.215
 108 l 342.762 101.855 348.848 97.598 355.832 96.363 c 362.82 95.133 369.992
 97.055 375.426 101.613 c 380.863 106.176 384 112.906 384 120 c 384 127.094
 380.863 133.824 375.426 138.387 c 369.992 142.945 362.82 144.867 355.832
 143.637 c 348.848 142.402 342.762 138.145 339.215 132 c 275.184 132 l 306.086
 151.516 329.184 181.234 340.465 216 c 324 216 l 321.039 216 318.176 216.344
 315.406 217.031 c 301.957 181.844 274.156 154.043 238.969 140.594 c f
Q Q
showpage
%%Trailer
%%EOF
