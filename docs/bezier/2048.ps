%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 1008 m 0 969.809 15.172 933.184 42.176 906.176 c 69.184 879.172 105.809
 864 144 864 c 240 864 l 278.191 864 314.816 879.172 341.824 906.176 c 368.828
 933.184 384 969.809 384 1008 c 384 1104 l 384 1142.191 368.828 1178.816
 341.824 1205.824 c 314.816 1232.828 278.191 1248 240 1248 c 144 1248 l 
105.809 1248 69.184 1232.828 42.176 1205.824 c 15.172 1178.816 0 1142.191
 0 1104 c h
144 960 m 131.27 960 119.062 965.059 110.059 974.059 c 101.059 983.062 
96 995.27 96 1008 c 96 1104 l 96 1116.73 101.059 1128.938 110.059 1137.941
 c 119.062 1146.941 131.27 1152 144 1152 c 240 1152 l 252.73 1152 264.938
 1146.941 273.941 1137.941 c 282.941 1128.938 288 1116.73 288 1104 c 288
 1008 l 288 995.27 282.941 983.062 273.941 974.059 c 264.938 965.059 252.73
 960 240 960 c h
1152 1008 m 1152 969.809 1167.172 933.184 1194.176 906.176 c 1221.184 879.172
 1257.809 864 1296 864 c 1392 864 l 1430.191 864 1466.816 879.172 1493.824
 906.176 c 1520.828 933.184 1536 969.809 1536 1008 c 1536 1104 l 1536 1142.191
 1520.828 1178.816 1493.824 1205.824 c 1466.816 1232.828 1430.191 1248 1392
 1248 c 1296 1248 l 1257.809 1248 1221.184 1232.828 1194.176 1205.824 c 
1167.172 1178.816 1152 1142.191 1152 1104 c h
1296 960 m 1283.27 960 1271.062 965.059 1262.059 974.059 c 1253.059 983.062
 1248 995.27 1248 1008 c 1248 1104 l 1248 1116.73 1253.059 1128.938 1262.059
 1137.941 c 1271.062 1146.941 1283.27 1152 1296 1152 c 1392 1152 l 1404.73
 1152 1416.938 1146.941 1425.941 1137.941 c 1434.941 1128.938 1440 1116.73
 1440 1104 c 1440 1008 l 1440 995.27 1434.941 983.062 1425.941 974.059 c
 1416.938 965.059 1404.73 960 1392 960 c h
576 432 m 576 393.809 591.172 357.184 618.176 330.176 c 645.184 303.172
 681.809 288 720 288 c 816 288 l 854.191 288 890.816 303.172 917.824 330.176
 c 944.828 357.184 960 393.809 960 432 c 960 528 l 960 566.191 944.828 602.816
 917.824 629.824 c 890.816 656.828 854.191 672 816 672 c 720 672 l 681.809
 672 645.184 656.828 618.176 629.824 c 591.172 602.816 576 566.191 576 528
 c h
720 384 m 707.27 384 695.062 389.059 686.059 398.059 c 677.059 407.062 
672 419.27 672 432 c 672 528 l 672 540.73 677.059 552.938 686.059 561.941
 c 695.062 570.941 707.27 576 720 576 c 816 576 l 828.73 576 840.938 570.941
 849.941 561.941 c 858.941 552.938 864 540.73 864 528 c 864 432 l 864 419.27
 858.941 407.062 849.941 398.059 c 840.938 389.059 828.73 384 816 384 c 
h
720 384 m f*
576 432 m 179.137 432 l 164.949 407.426 140.613 390.387 112.668 385.457
 c 84.723 380.531 56.027 388.219 34.289 406.461 c 12.551 424.699 -0.004 
451.625 -0.004 480 c -0.004 508.375 12.551 535.301 34.289 553.539 c 56.027
 571.781 84.723 579.469 112.668 574.543 c 140.613 569.613 164.949 552.574
 179.137 528 c 435.266 528 l 311.656 606.066 219.273 724.941 174.145 864
 c 240 864 l 251.902 864 263.359 865.375 274.367 868.129 c 300.973 798.531
 341.957 735.328 394.641 682.641 c 447.328 629.957 510.531 588.973 580.129
 562.367 c 577.375 551.121 575.988 539.582 576 528 c h
955.871 562.367 m 958.625 551.121 960.012 539.582 960 528 c 960 432 l 1356.863
 432 l 1371.051 407.426 1395.387 390.387 1423.332 385.457 c 1451.277 380.531
 1479.973 388.219 1501.711 406.461 c 1523.449 424.699 1536.004 451.625 1536.004
 480 c 1536.004 508.375 1523.449 535.301 1501.711 553.539 c 1479.973 571.781
 1451.277 579.469 1423.332 574.543 c 1395.387 569.613 1371.051 552.574 1356.863
 528 c 1100.734 528 l 1224.344 606.066 1316.727 724.941 1361.855 864 c 1296
 864 l 1284.16 864 1272.703 865.375 1261.633 868.129 c 1235.027 798.531 
1194.043 735.328 1141.359 682.641 c 1088.672 629.957 1025.469 588.973 955.871
 562.367 c f
Q Q
showpage
%%Trailer
%%EOF
