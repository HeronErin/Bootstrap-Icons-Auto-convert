%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
0 24 m 0 17.637 2.527 11.531 7.031 7.031 c 11.531 2.527 17.637 0 24 0 c
 168 0 l 176.574 0 184.496 4.574 188.785 12 c 193.07 19.426 193.07 28.574
 188.785 36 c 184.496 43.426 176.574 48 168 48 c 48 48 l 48 168 l 48 176.574
 43.426 184.496 36 188.785 c 28.574 193.07 19.426 193.07 12 188.785 c 4.574
 184.496 0 176.574 0 168 c h
576 24 m 576 17.637 578.527 11.531 583.031 7.031 c 587.531 2.527 593.637
 0 600 0 c 744 0 l 750.363 0 756.469 2.527 760.969 7.031 c 765.473 11.531
 768 17.637 768 24 c 768 168 l 768 176.574 763.426 184.496 756 188.785 c
 748.574 193.07 739.426 193.07 732 188.785 c 724.574 184.496 720 176.574
 720 168 c 720 48 l 600 48 l 593.637 48 587.531 45.473 583.031 40.969 c 
578.527 36.469 576 30.363 576 24 c 24 576 m 30.363 576 36.469 578.527 40.969
 583.031 c 45.473 587.531 48 593.637 48 600 c 48 720 l 168 720 l 176.574
 720 184.496 724.574 188.785 732 c 193.07 739.426 193.07 748.574 188.785
 756 c 184.496 763.426 176.574 768 168 768 c 24 768 l 17.637 768 11.531 
765.473 7.031 760.969 c 2.527 756.469 0 750.363 0 744 c 0 600 l 0 593.637
 2.527 587.531 7.031 583.031 c 11.531 578.527 17.637 576 24 576 c 744 576
 m 750.363 576 756.469 578.527 760.969 583.031 c 765.473 587.531 768 593.637
 768 600 c 768 744 l 768 750.363 765.473 756.469 760.969 760.969 c 756.469
 765.473 750.363 768 744 768 c 600 768 l 591.426 768 583.504 763.426 579.215
 756 c 574.93 748.574 574.93 739.426 579.215 732 c 583.504 724.574 591.426
 720 600 720 c 720 720 l 720 600 l 720 593.637 722.527 587.531 727.031 583.031
 c 731.531 578.527 737.637 576 744 576 c 192 192 m 240 192 l 240 240 l 192
 240 l h
192 192 m f
336 96 m 96 96 l 96 336 l 336 336 l h
144 144 m 288 144 l 288 288 l 144 288 l h
240 528 m 192 528 l 192 576 l 240 576 l h
240 528 m f
336 432 m 96 432 l 96 672 l 336 672 l h
144 480 m 288 480 l 288 624 l 144 624 l h
528 192 m 576 192 l 576 240 l 528 240 l h
528 192 m f
432 96 m 672 96 l 672 336 l 432 336 l h
480 144 m 480 288 l 624 288 l 624 144 l h
384 384 m 384 480 l 432 480 l 432 528 l 384 528 l 384 576 l 480 576 l 480
 480 l 528 480 l 528 576 l 576 576 l 576 528 l 672 528 l 672 480 l 528 480
 l 528 384 l h
480 480 m 432 480 l 432 432 l 480 432 l h
672 576 m 624 576 l 624 624 l 528 624 l 528 672 l 672 672 l h
480 672 m 480 624 l 384 624 l 384 672 l h
480 672 m f
576 384 96 48 re f
Q Q
showpage
%%Trailer
%%EOF
