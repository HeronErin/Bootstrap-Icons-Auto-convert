%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 48 m 0 35.27 5.059 23.062 14.059 14.059 c 23.062 5.059 35.27 0 48 0 c
 336 0 l 353.148 0 368.996 9.148 377.57 24 c 386.145 38.852 386.145 57.148
 377.57 72 c 368.996 86.852 353.148 96 336 96 c 96 96 l 96 336 l 96 353.148
 86.852 368.996 72 377.57 c 57.148 386.145 38.852 386.145 24 377.57 c 9.148
 368.996 0 353.148 0 336 c h
1152 48 m 1152 35.27 1157.059 23.062 1166.059 14.059 c 1175.062 5.059 1187.27
 0 1200 0 c 1488 0 l 1500.73 0 1512.938 5.059 1521.941 14.059 c 1530.941
 23.062 1536 35.27 1536 48 c 1536 336 l 1536 353.148 1526.852 368.996 1512
 377.57 c 1497.148 386.145 1478.852 386.145 1464 377.57 c 1449.148 368.996
 1440 353.148 1440 336 c 1440 96 l 1200 96 l 1187.27 96 1175.062 90.941 
1166.059 81.941 c 1157.059 72.938 1152 60.73 1152 48 c 48 1152 m 60.73 1152
 72.938 1157.059 81.941 1166.059 c 90.941 1175.062 96 1187.27 96 1200 c 
96 1440 l 336 1440 l 353.148 1440 368.996 1449.148 377.57 1464 c 386.145
 1478.852 386.145 1497.148 377.57 1512 c 368.996 1526.852 353.148 1536 336
 1536 c 48 1536 l 35.27 1536 23.062 1530.941 14.059 1521.941 c 5.059 1512.938
 0 1500.73 0 1488 c 0 1200 l 0 1187.27 5.059 1175.062 14.059 1166.059 c 
23.062 1157.059 35.27 1152 48 1152 c 1488 1152 m 1500.73 1152 1512.938 1157.059
 1521.941 1166.059 c 1530.941 1175.062 1536 1187.27 1536 1200 c 1536 1488
 l 1536 1500.73 1530.941 1512.938 1521.941 1521.941 c 1512.938 1530.941 
1500.73 1536 1488 1536 c 1200 1536 l 1182.852 1536 1167.004 1526.852 1158.43
 1512 c 1149.855 1497.148 1149.855 1478.852 1158.43 1464 c 1167.004 1449.148
 1182.852 1440 1200 1440 c 1440 1440 l 1440 1200 l 1440 1187.27 1445.059
 1175.062 1454.059 1166.059 c 1463.062 1157.059 1475.27 1152 1488 1152 c
 384 384 m 480 384 l 480 480 l 384 480 l h
384 384 m f
672 192 m 192 192 l 192 672 l 672 672 l h
288 288 m 576 288 l 576 576 l 288 576 l h
480 1056 m 384 1056 l 384 1152 l 480 1152 l h
480 1056 m f
672 864 m 192 864 l 192 1344 l 672 1344 l h
288 960 m 576 960 l 576 1248 l 288 1248 l h
1056 384 m 1152 384 l 1152 480 l 1056 480 l h
1056 384 m f
864 192 m 1344 192 l 1344 672 l 864 672 l h
960 288 m 960 576 l 1248 576 l 1248 288 l h
768 768 m 768 960 l 864 960 l 864 1056 l 768 1056 l 768 1152 l 960 1152
 l 960 960 l 1056 960 l 1056 1152 l 1152 1152 l 1152 1056 l 1344 1056 l 
1344 960 l 1056 960 l 1056 768 l h
960 960 m 864 960 l 864 864 l 960 864 l h
1344 1152 m 1248 1152 l 1248 1248 l 1056 1248 l 1056 1344 l 1344 1344 l
 h
960 1344 m 960 1248 l 768 1248 l 768 1344 l h
960 1344 m f
1152 768 192 96 re f
Q Q
showpage
%%Trailer
%%EOF
