%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 672 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 672 720
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 576 720 rectclip
1 0 0 -1 0 768 cm q
0 g
168 288 m 161.637 288 155.531 290.527 151.031 295.031 c 146.527 299.531
 144 305.637 144 312 c 144 696 l 144 702.363 146.527 708.469 151.031 712.969
 c 155.531 717.473 161.637 720 168 720 c 600 720 l 606.363 720 612.469 717.473
 616.969 712.969 c 621.473 708.469 624 702.363 624 696 c 624 312 l 624 305.637
 621.473 299.531 616.969 295.031 c 612.469 290.527 606.363 288 600 288 c
 504 288 l 495.426 288 487.504 283.426 483.215 276 c 478.93 268.574 478.93
 259.426 483.215 252 c 487.504 244.574 495.426 240 504 240 c 600 240 l 619.094
 240 637.41 247.586 650.91 261.09 c 664.414 274.59 672 292.906 672 312 c
 672 696 l 672 715.094 664.414 733.41 650.91 746.91 c 637.41 760.414 619.094
 768 600 768 c 168 768 l 148.906 768 130.59 760.414 117.09 746.91 c 103.586
 733.41 96 715.094 96 696 c 96 312 l 96 292.906 103.586 274.59 117.09 261.09
 c 130.59 247.586 148.906 240 168 240 c 264 240 l 272.574 240 280.496 244.574
 284.785 252 c 289.07 259.426 289.07 268.574 284.785 276 c 280.496 283.426
 272.574 288 264 288 c h
168 288 m f*
367.008 568.992 m 371.512 573.508 377.625 576.043 384 576.043 c 390.375
 576.043 396.488 573.508 400.992 568.992 c 544.992 424.992 l 551.062 418.922
 553.434 410.074 551.211 401.781 c 548.988 393.488 542.512 387.012 534.219
 384.789 c 525.926 382.566 517.078 384.938 511.008 391.008 c 408 494.062
 l 408 72 l 408 63.426 403.426 55.504 396 51.215 c 388.574 46.93 379.426
 46.93 372 51.215 c 364.574 55.504 360 63.426 360 72 c 360 494.062 l 256.992
 391.008 l 250.922 384.938 242.074 382.566 233.781 384.789 c 225.488 387.012
 219.012 393.488 216.789 401.781 c 214.566 410.074 216.938 418.922 223.008
 424.992 c h
367.008 568.992 m f*
Q Q
showpage
%%Trailer
%%EOF
