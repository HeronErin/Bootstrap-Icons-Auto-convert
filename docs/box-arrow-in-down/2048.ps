%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:28 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
336 576 m 323.27 576 311.062 581.059 302.059 590.059 c 293.059 599.062 
288 611.27 288 624 c 288 1392 l 288 1404.73 293.059 1416.938 302.059 1425.941
 c 311.062 1434.941 323.27 1440 336 1440 c 1200 1440 l 1212.73 1440 1224.938
 1434.941 1233.941 1425.941 c 1242.941 1416.938 1248 1404.73 1248 1392 c
 1248 624 l 1248 611.27 1242.941 599.062 1233.941 590.059 c 1224.938 581.059
 1212.73 576 1200 576 c 1008 576 l 990.852 576 975.004 566.852 966.43 552
 c 957.855 537.148 957.855 518.852 966.43 504 c 975.004 489.148 990.852 
480 1008 480 c 1200 480 l 1238.191 480 1274.816 495.172 1301.824 522.176
 c 1328.828 549.184 1344 585.809 1344 624 c 1344 1392 l 1344 1430.191 1328.828
 1466.816 1301.824 1493.824 c 1274.816 1520.828 1238.191 1536 1200 1536 
c 336 1536 l 297.809 1536 261.184 1520.828 234.176 1493.824 c 207.172 1466.816
 192 1430.191 192 1392 c 192 624 l 192 585.809 207.172 549.184 234.176 522.176
 c 261.184 495.172 297.809 480 336 480 c 528 480 l 545.148 480 560.996 489.148
 569.57 504 c 578.145 518.852 578.145 537.148 569.57 552 c 560.996 566.852
 545.148 576 528 576 c h
336 576 m f*
734.016 1137.984 m 743.02 1147.012 755.25 1152.086 768 1152.086 c 780.75
 1152.086 792.98 1147.012 801.984 1137.984 c 1089.984 849.984 l 1102.125
 837.844 1106.867 820.145 1102.422 803.562 c 1097.98 786.977 1085.023 774.02
 1068.438 769.578 c 1051.855 765.133 1034.156 769.875 1022.016 782.016 c
 816 988.129 l 816 144 l 816 126.852 806.852 111.004 792 102.43 c 777.148
 93.855 758.852 93.855 744 102.43 c 729.148 111.004 720 126.852 720 144 
c 720 988.129 l 513.984 782.016 l 501.844 769.875 484.145 765.133 467.562
 769.578 c 450.977 774.02 438.02 786.977 433.578 803.562 c 429.133 820.145
 433.875 837.844 446.016 849.984 c h
734.016 1137.984 m f*
Q Q
showpage
%%Trailer
%%EOF
