%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 768 m 485.844 768 583.516 727.543 655.527 655.527 c 727.543 583.516
 768 485.844 768 384 c 768 282.156 727.543 184.484 655.527 112.473 c 583.516
 40.457 485.844 0 384 0 c 282.156 0 184.484 40.457 112.473 112.473 c 40.457
 184.484 0 282.156 0 384 c 0 485.844 40.457 583.516 112.473 655.527 c 184.484
 727.543 282.156 768 384 768 c 199.008 247.008 m 203.512 242.492 209.625
 239.957 216 239.957 c 222.375 239.957 228.488 242.492 232.992 247.008 c
 264 278.062 l 295.008 247.008 l 301.078 240.938 309.926 238.566 318.219
 240.789 c 326.512 243.012 332.988 249.488 335.211 257.781 c 337.434 266.074
 335.062 274.922 328.992 280.992 c 297.938 312 l 328.992 343.008 l 335.062
 349.078 337.434 357.926 335.211 366.219 c 332.988 374.512 326.512 380.988
 318.219 383.211 c 309.926 385.434 301.078 383.062 295.008 376.992 c 264
 345.938 l 232.992 376.992 l 226.922 383.062 218.074 385.434 209.781 383.211
 c 201.488 380.988 195.012 374.512 192.789 366.219 c 190.566 357.926 192.938
 349.078 199.008 343.008 c 230.062 312 l 199.008 280.992 l 194.492 276.488
 191.957 270.375 191.957 264 c 191.957 257.625 194.492 251.512 199.008 247.008
 c 439.008 247.008 m 443.512 242.492 449.625 239.957 456 239.957 c 462.375
 239.957 468.488 242.492 472.992 247.008 c 504 278.062 l 535.008 247.008
 l 541.078 240.938 549.926 238.566 558.219 240.789 c 566.512 243.012 572.988
 249.488 575.211 257.781 c 577.434 266.074 575.062 274.922 568.992 280.992
 c 537.938 312 l 568.992 343.008 l 575.062 349.078 577.434 357.926 575.211
 366.219 c 572.988 374.512 566.512 380.988 558.219 383.211 c 549.926 385.434
 541.078 383.062 535.008 376.992 c 504 345.938 l 472.992 376.992 l 466.922
 383.062 458.074 385.434 449.781 383.211 c 441.488 380.988 435.012 374.512
 432.789 366.219 c 430.566 357.926 432.938 349.078 439.008 343.008 c 470.062
 312 l 439.008 280.992 l 434.492 276.488 431.957 270.375 431.957 264 c 431.957
 257.625 434.492 251.512 439.008 247.008 c 384 624 m 349.703 624 318.012
 605.703 300.863 576 c 283.711 546.297 283.711 509.703 300.863 480 c 318.012
 450.297 349.703 432 384 432 c 418.297 432 449.988 450.297 467.137 480 c
 484.289 509.703 484.289 546.297 467.137 576 c 449.988 605.703 418.297 624
 384 624 c f
Q Q
showpage
%%Trailer
%%EOF
