%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 673
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 673
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 673 rectclip
1 0 0 -1 0 768 cm q
0 g
144 648 m 144 641.637 146.527 635.531 151.031 631.031 c 155.531 626.527
 161.637 624 168 624 c 600 624 l 608.574 624 616.496 628.574 620.785 636
 c 625.07 643.426 625.07 652.574 620.785 660 c 616.496 667.426 608.574 672
 600 672 c 168 672 l 161.637 672 155.531 669.473 151.031 664.969 c 146.527
 660.469 144 654.363 144 648 c 144 744 m 144 737.637 146.527 731.531 151.031
 727.031 c 155.531 722.527 161.637 720 168 720 c 600 720 l 608.574 720 616.496
 724.574 620.785 732 c 625.07 739.426 625.07 748.574 620.785 756 c 616.496
 763.426 608.574 768 600 768 c 168 768 l 161.637 768 155.531 765.473 151.031
 760.969 c 146.527 756.469 144 750.363 144 744 c 643.441 289.297 m 633.473
 239.047 607.691 193.305 569.867 158.758 c 532.039 124.211 484.156 102.672
 433.211 97.285 c 382.27 91.902 330.938 102.957 286.727 128.832 c 242.516
 154.707 207.742 194.051 187.488 241.105 c 157.125 237.605 126.379 242.457
 98.57 255.137 c 70.758 267.816 46.934 287.844 29.66 313.059 c 12.387 338.277
 2.32 367.727 0.547 398.242 c -1.23 428.754 5.352 459.172 19.582 486.223
 c 33.816 513.273 55.156 535.93 81.309 551.746 c 107.461 567.566 137.434
 575.953 168 576 c 624 576 l 673.172 576.055 718.969 551.02 745.469 509.602
 c 771.965 468.18 775.496 416.102 754.832 371.484 c 734.168 326.867 692.168
 295.879 643.441 289.297 c 408 144 m 455.23 143.988 500.805 161.391 536.016
 192.871 c 571.223 224.352 593.594 267.703 598.848 314.641 c 599.5 320.539
 602.312 325.984 606.746 329.93 c 611.18 333.871 616.914 336.035 622.848
 336 c 624 336 l 658.297 336 689.988 354.297 707.137 384 c 724.289 413.703
 724.289 450.297 707.137 480 c 689.988 509.703 658.297 528 624 528 c 168
 528 l 133.637 527.984 100.926 513.234 78.164 487.492 c 55.398 461.746 44.766
 427.48 48.953 393.371 c 53.145 359.266 71.754 328.59 100.07 309.117 c 128.387
 289.648 163.691 283.254 197.039 291.551 c 202.922 293.02 209.141 292.207
 214.445 289.277 c 219.754 286.348 223.754 281.52 225.648 275.762 c 238.32
 237.41 262.766 204.031 295.504 180.375 c 328.242 156.719 367.609 143.988
 408 144 c f
Q Q
showpage
%%Trailer
%%EOF
