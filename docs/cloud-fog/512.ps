%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 337
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 337 rectclip
1 0 0 -1 0 384 cm q
0 g
72 324 m 72 317.371 77.371 312 84 312 c 300 312 l 306.629 312 312 317.371
 312 324 c 312 330.629 306.629 336 300 336 c 84 336 l 77.371 336 72 330.629
 72 324 c 72 372 m 72 365.371 77.371 360 84 360 c 300 360 l 306.629 360 
312 365.371 312 372 c 312 378.629 306.629 384 300 384 c 84 384 l 77.371 
384 72 378.629 72 372 c 321.719 144.648 m 315.031 110.926 294.203 81.691
 264.512 64.355 c 234.824 47.02 199.129 43.246 166.473 53.992 c 133.816 
64.738 107.336 88.973 93.742 120.551 c 70.793 117.906 47.766 124.832 30.082
 139.699 c 12.398 154.562 1.613 176.059 0.273 199.121 c -1.07 222.184 7.148
 244.781 22.988 261.598 c 38.828 278.414 60.898 287.965 84 288 c 312 288
 l 336.586 288.027 359.484 275.512 372.734 254.801 c 385.98 234.09 387.746
 208.051 377.414 185.742 c 367.086 163.434 346.082 147.938 321.719 144.648
 c 204 72 m 227.613 71.996 250.402 80.695 268.008 96.434 c 285.613 112.176
 296.797 133.852 299.426 157.32 c 300.102 163.426 305.281 168.039 311.426
 168 c 312 168 l 329.148 168 344.996 177.148 353.57 192 c 362.145 206.852
 362.145 225.148 353.57 240 c 344.996 254.852 329.148 264 312 264 c 84 264
 l 66.816 263.992 50.465 256.617 39.082 243.746 c 27.699 230.875 22.383 
213.738 24.477 196.688 c 26.57 179.633 35.879 164.293 50.035 154.559 c 64.195
 144.824 81.848 141.625 98.52 145.777 c 104.621 147.297 110.859 143.852 
112.824 137.879 c 119.16 118.703 131.383 102.016 147.754 90.188 c 164.121
 78.359 183.805 71.996 204 72 c f
Q Q
showpage
%%Trailer
%%EOF
