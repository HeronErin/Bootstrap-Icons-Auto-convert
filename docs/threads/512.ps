%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
151.703 144.383 m 145.223 140.062 123.719 125.137 123.719 125.137 c 141.863
 99.191 165.789 89.09 198.887 89.09 c 222.285 89.09 242.16 96.938 256.344
 111.844 c 270.527 126.746 278.617 148.059 280.465 175.301 c 288.336 178.613
 295.578 182.484 302.184 186.918 c 328.801 204.797 343.441 231.559 343.441
 262.207 c 343.441 327.391 290.016 384.008 193.297 384.008 c 110.258 384
 24 335.688 24 191.855 c 24 48.816 107.566 0 193.055 0 c 232.559 0 325.199
 5.832 360 120.863 c 327.359 129.336 l 300.383 47.375 243.91 34.32 192.145
 34.32 c 106.586 34.32 58.176 86.426 58.176 197.281 c 58.176 296.715 112.273
 349.512 193.297 349.512 c 259.945 349.512 309.625 314.879 309.625 264.168
 c 309.625 229.656 280.633 213.121 279.145 213.121 c 273.48 242.738 258.312
 292.562 191.688 292.562 c 152.855 292.562 119.375 265.73 119.375 230.594
 c 119.375 180.434 166.992 162.266 204.574 162.266 c 218.637 162.266 235.629
 163.227 244.484 165 c 244.484 149.711 231.523 123.527 198.883 123.527 c
 168.883 123.527 161.297 133.246 151.676 144.359 c h
209.184 196.559 m 160.223 196.559 153.887 217.438 153.887 230.543 c 153.887
 251.613 178.918 258.574 192.285 258.574 c 216.766 258.574 241.895 251.805
 245.852 200.422 c 245.855 200.426 l 233.84 197.621 221.52 196.324 209.184
 196.559 c f
Q Q
showpage
%%Trailer
%%EOF
