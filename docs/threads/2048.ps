%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
606.816 577.535 m 580.895 560.254 494.879 500.543 494.879 500.543 c 567.453
 396.766 663.168 356.352 795.551 356.352 c 889.152 356.352 968.641 387.742
 1025.375 447.359 c 1082.109 506.977 1114.465 592.223 1121.855 701.184 c
 1153.344 714.43 1182.305 729.918 1208.734 747.648 c 1315.199 819.168 1373.758
 926.207 1373.758 1048.801 c 1373.758 1309.535 1160.062 1536 773.184 1536
 c 441.023 1536 96 1342.754 96 767.426 c 96 195.266 430.273 0 772.223 0 
c 930.238 0 1300.801 23.328 1440 483.457 c 1309.441 517.344 l 1201.535 189.504
 975.648 137.281 768.574 137.281 c 426.336 137.281 232.703 345.695 232.703
 789.121 c 232.703 1186.848 449.086 1398.051 773.184 1398.051 c 1039.777
 1398.051 1238.496 1259.523 1238.496 1056.676 c 1238.496 918.629 1122.527
 852.484 1116.574 852.484 c 1093.918 970.949 1033.246 1170.246 766.75 1170.246
 c 611.422 1170.246 477.504 1062.918 477.504 922.375 c 477.504 721.734 667.969
 649.062 818.305 649.062 c 874.562 649.062 942.527 652.902 977.953 660.008
 c 977.953 598.855 926.113 494.121 795.555 494.121 c 675.555 494.121 645.219
 533 606.723 577.449 c h
836.734 786.238 m 640.895 786.238 615.551 869.758 615.551 922.176 c 615.551
 1006.465 715.68 1034.305 769.152 1034.305 c 867.074 1034.305 967.586 1007.234
 983.426 801.695 c 935.359 790.48 886.082 785.289 836.734 786.238 c f
Q Q
showpage
%%Trailer
%%EOF
