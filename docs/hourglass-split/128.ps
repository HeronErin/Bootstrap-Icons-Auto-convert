%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 6 84 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 6 84 90
96 96 cairo_set_page_size
%%EndPageSetup
q 12 6 72 84 rectclip
1 0 0 -1 0 96 cm q
0 g
15 90 m 13.344 90 12 88.656 12 87 c 12 85.344 13.344 84 15 84 c 21 84 l
 21 78 l 21 72.906 22.438 67.914 25.152 63.605 c 27.867 59.293 31.746 55.84
 36.344 53.641 c 38.082 52.805 39 51.379 39 50.102 c 39 45.902 l 39 44.625
 38.074 43.195 36.344 42.363 c 36.344 42.359 l 31.746 40.16 27.867 36.707
 25.152 32.395 c 22.438 28.086 21 23.094 21 18 c 21 12 l 15 12 l 13.344 
12 12 10.656 12 9 c 12 7.344 13.344 6 15 6 c 81 6 l 82.656 6 84 7.344 84
 9 c 84 10.656 82.656 12 81 12 c 75 12 l 75 18 l 75 23.094 73.562 28.086
 70.848 32.395 c 68.133 36.707 64.254 40.16 59.656 42.359 c 57.918 43.195
 57 44.621 57 45.898 c 57 50.098 l 57 51.375 57.926 52.805 59.656 53.637
 c 59.656 53.641 l 64.254 55.84 68.133 59.293 70.848 63.605 c 73.562 67.914
 75 72.906 75 78 c 75 84 l 81 84 l 82.656 84 84 85.344 84 87 c 84 88.656
 82.656 90 81 90 c h
27 12 m 27 18 l 27 21.223 27.719 24.27 29.023 27 c 66.98 27 l 68.277 24.27
 69.004 21.223 69.004 18 c 69 12 l h
45 50.102 m 45 54.309 42.133 57.516 38.934 59.055 c 38.934 59.051 l 35.359
 60.762 32.344 63.449 30.23 66.801 c 28.117 70.156 27 74.039 27 78 c 27 
78 32.195 70.207 45 69.121 c h
51 50.102 m 51 69.121 l 63.805 70.207 69 78 69 78 c 69 74.039 67.883 70.156
 65.77 66.801 c 63.656 63.449 60.641 60.762 57.066 59.051 c 53.867 57.516
 51 54.312 51 50.105 c h
51 50.102 m f
Q Q
showpage
%%Trailer
%%EOF
