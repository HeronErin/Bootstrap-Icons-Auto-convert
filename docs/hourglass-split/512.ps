%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 24 336 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 24 336 360
384 384 cairo_set_page_size
%%EndPageSetup
q 48 24 288 336 rectclip
1 0 0 -1 0 384 cm q
0 g
60 360 m 53.371 360 48 354.629 48 348 c 48 341.371 53.371 336 60 336 c 
84 336 l 84 312 l 83.996 291.625 89.754 271.66 100.613 254.418 c 111.473
 237.176 126.988 223.359 145.367 214.559 c 152.328 211.223 156 205.512 156
 200.398 c 156 183.598 l 156 178.484 152.305 172.773 145.367 169.438 c 145.367
 169.441 l 126.988 160.641 111.473 146.824 100.613 129.582 c 89.754 112.34
 83.996 92.375 84 72 c 84 48 l 60 48 l 53.371 48 48 42.629 48 36 c 48 29.371
 53.371 24 60 24 c 324 24 l 330.629 24 336 29.371 336 36 c 336 42.629 330.629
 48 324 48 c 300 48 l 300 72 l 300.004 92.375 294.246 112.34 283.387 129.582
 c 272.527 146.824 257.012 160.641 238.633 169.441 c 231.672 172.777 228
 178.488 228 183.602 c 228 200.402 l 228 205.516 231.695 211.227 238.633
 214.562 c 238.633 214.559 l 257.012 223.359 272.527 237.176 283.387 254.418
 c 294.246 271.66 300.004 291.625 300 312 c 300 336 l 324 336 l 330.629 
336 336 341.371 336 348 c 336 354.629 330.629 360 324 360 c h
108 48 m 108 72 l 108 84.887 110.879 97.078 116.09 108 c 267.914 108 l 
273.098 97.078 276.004 84.887 276.004 72 c 276 48 l h
180 200.398 m 180 217.223 168.527 230.062 155.734 236.207 c 141.438 243.051
 129.371 253.797 120.922 267.211 c 112.477 280.621 107.996 296.148 108 312
 c 108 312 128.785 280.824 180 276.48 c h
204 200.398 m 204 276.477 l 255.215 280.82 276 311.996 276 311.996 c 276
 312 l 276.004 296.148 271.523 280.621 263.078 267.211 c 254.629 253.797
 242.562 243.051 228.266 236.207 c 215.473 230.062 204 217.246 204 200.426
 c h
204 200.398 m f
Q Q
showpage
%%Trailer
%%EOF
