%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
1.703 7.148 m 2.645 7.148 3.41 6.383 3.41 5.441 c 3.41 4.5 2.645 3.738 
1.703 3.738 c 0.762 3.738 0 4.5 0 5.441 c 0 6.387 0.762 7.148 1.703 7.148
 c h
8.805 3.41 m 9.746 3.41 10.508 2.645 10.508 1.703 c 10.508 0.762 9.746 
0 8.805 0 c 7.863 0 7.102 0.762 7.102 1.703 c 7.102 2.645 7.863 3.41 8.805
 3.41 c 5.551 9.832 m 4.328 9.574 3.289 8.781 2.719 7.672 c 2.262 7.879 
1.754 7.941 1.262 7.852 c 1.953 9.562 3.449 10.816 5.258 11.199 c 5.656 
11.285 6.062 11.324 6.469 11.324 c 6.152 10.914 5.98 10.414 5.969 9.898 
c 5.828 9.883 5.688 9.859 5.551 9.832 c 8.422 11.547 m 8.422 11.543 l 9.363
 11.543 10.125 10.781 10.125 9.84 c 10.125 8.898 9.363 8.137 8.422 8.137
 c 7.48 8.137 6.715 8.898 6.715 9.84 c 6.715 10.781 7.48 11.543 8.422 11.543
 c 10.793 9.211 m 10.793 9.215 l 12.293 7.32 12.406 4.684 11.074 2.668 c
 10.875 3.133 10.539 3.523 10.113 3.793 c 10.809 5.102 10.758 6.684 9.977
 7.945 c 10.375 8.27 10.66 8.715 10.793 9.215 c 1.574 3 m 2.074 2.973 2.57
 3.102 2.996 3.363 c 3.758 2.262 5.004 1.594 6.344 1.57 c 6.371 1.066 6.551
 0.586 6.859 0.188 c 6.863 0.191 l 4.703 0.027 2.645 1.121 1.574 3 c f
Q Q
showpage
%%Trailer
%%EOF
