%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.852 3.574 m 1.324 3.574 1.703 3.191 1.703 2.723 c 1.703 2.25 1.324 1.867
 0.852 1.867 c 0.383 1.867 0 2.25 0 2.723 c 0 3.191 0.383 3.574 0.852 3.574
 c h
4.402 1.707 m 4.402 1.703 l 4.875 1.703 5.254 1.324 5.254 0.852 c 5.254
 0.383 4.875 0 4.402 0 c 3.934 0 3.551 0.383 3.551 0.852 c 3.551 1.324 3.934
 1.703 4.402 1.703 c 2.773 4.914 m 2.164 4.785 1.645 4.391 1.359 3.836 c
 1.133 3.938 0.875 3.969 0.629 3.926 c 0.977 4.781 1.727 5.41 2.629 5.602
 c 2.828 5.645 3.031 5.664 3.234 5.664 c 3.078 5.457 2.988 5.207 2.984 4.949
 c 2.914 4.941 2.844 4.93 2.773 4.914 c 4.207 5.77 m 4.211 5.773 l 4.68 
5.773 5.062 5.391 5.062 4.922 c 5.062 4.449 4.68 4.066 4.211 4.066 c 3.738
 4.066 3.359 4.449 3.359 4.922 c 3.359 5.391 3.738 5.773 4.211 5.773 c 5.398
 4.609 m 5.398 4.605 l 6.145 3.66 6.203 2.34 5.535 1.336 c 5.438 1.566 5.27
 1.762 5.059 1.895 c 5.406 2.551 5.379 3.34 4.988 3.973 c 5.188 4.137 5.332
 4.359 5.398 4.605 c 0.785 1.5 m 1.035 1.488 1.285 1.551 1.5 1.68 c 1.879
 1.129 2.504 0.797 3.172 0.785 c 3.188 0.535 3.277 0.293 3.43 0.094 c 2.352
 0.012 1.324 0.559 0.785 1.5 c f
Q Q
showpage
%%Trailer
%%EOF
