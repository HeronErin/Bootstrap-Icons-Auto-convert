%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
96 12 m 96 5.371 90.629 0 84 0 c 77.371 0 72 5.371 72 12 c 72 24 l 48 24
 l 35.27 24 23.062 29.059 14.059 38.059 c 5.059 47.062 0 59.27 0 72 c 0 
96 l 384 96 l 384 72 l 384 59.27 378.941 47.062 369.941 38.059 c 360.938
 29.059 348.73 24 336 24 c 312 24 l 312 12 l 312 5.371 306.629 0 300 0 c
 293.371 0 288 5.371 288 12 c 288 24 l 96 24 l h
384 336 m 384 348.73 378.941 360.938 369.941 369.941 c 360.938 378.941 
348.73 384 336 384 c 48 384 l 35.27 384 23.062 378.941 14.059 369.941 c 
5.059 360.938 0 348.73 0 336 c 0 120 l 384 120 l h
269.16 188.52 m 271.969 188.656 274.707 187.637 276.742 185.695 c 278.777
 183.758 279.93 181.07 279.93 178.262 c 279.93 175.449 278.777 172.762 276.742
 170.824 c 274.707 168.883 271.969 167.863 269.16 168 c 266.414 167.973 
263.773 169.055 261.836 170.992 c 259.895 172.934 258.812 175.574 258.84
 178.32 c 258.84 184.031 263.449 188.52 269.16 188.52 c 277.223 202.031 
m 261.094 202.031 l 261.094 300.551 l 277.223 300.551 l h
112.414 300.551 m 112.414 245.352 l 166.68 245.352 l 166.68 230.711 l 112.414
 230.711 l 112.414 187.223 l 171.551 187.223 l 171.551 172.582 l 96 172.586
 l 96 300.555 l h
191.52 300.551 m 207.742 300.551 l 207.742 239.52 l 207.742 226.223 213.191
 215.352 230.613 215.352 c 233.613 215.352 236.805 215.449 238.508 215.711
 c 238.508 201 l 238.512 201 l 236.492 200.711 234.457 200.551 232.414 200.52
 c 218.445 200.52 211.031 208.199 208.125 214.129 c 207.645 214.129 l 207.645
 202.031 l 191.52 202.031 l h
191.52 300.551 m f
Q Q
showpage
%%Trailer
%%EOF
