%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 480 0 1056 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 480 0 1056 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 480 0 576 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
528 144 m 528 105.809 543.172 69.184 570.176 42.176 c 597.184 15.172 633.809
 0 672 0 c 864 0 l 902.191 0 938.816 15.172 965.824 42.176 c 992.828 69.184
 1008 105.809 1008 144 c 1008 1200 l 1008 1236.598 994.07 1271.82 969.035
 1298.516 c 944 1325.211 909.738 1341.371 873.215 1343.711 c 906.816 1372.992
 956.926 1408.801 1029.504 1445.086 c 1029.504 1445.09 l 1042.484 1451.594
 1051.82 1463.625 1054.902 1477.812 c 1057.984 1492 1054.48 1506.82 1045.367
 1518.125 c 1036.258 1529.426 1022.52 1536 1008 1536 c 528 1536 l 513.48
 1536 499.742 1529.426 490.633 1518.125 c 481.52 1506.82 478.016 1492 481.098
 1477.812 c 484.18 1463.625 493.516 1451.594 506.496 1445.09 c 579.07 1408.801
 629.09 1373.09 662.785 1343.715 c 662.785 1343.711 l 626.262 1341.371 592
 1325.211 566.965 1298.516 c 541.93 1271.82 528 1236.598 528 1200 c h
672 96 m 659.27 96 647.062 101.059 638.059 110.059 c 629.059 119.062 624
 131.27 624 144 c 624 1200 l 624 1212.73 629.059 1224.938 638.059 1233.941
 c 647.062 1242.941 659.27 1248 672 1248 c 864 1248 l 876.73 1248 888.938
 1242.941 897.941 1233.941 c 906.941 1224.938 912 1212.73 912 1200 c 912
 144 l 912 131.27 906.941 119.062 897.941 110.059 c 888.938 101.059 876.73
 96 864 96 c h
672 96 m f
816 240 m 816 257.148 806.852 272.996 792 281.57 c 777.148 290.145 758.852
 290.145 744 281.57 c 729.148 272.996 720 257.148 720 240 c 720 222.852 
729.148 207.004 744 198.43 c 758.852 189.855 777.148 189.855 792 198.43 
c 806.852 207.004 816 222.852 816 240 c 816 432 m 816 449.148 806.852 464.996
 792 473.57 c 777.148 482.145 758.852 482.145 744 473.57 c 729.148 464.996
 720 449.148 720 432 c 720 414.852 729.148 399.004 744 390.43 c 758.852 
381.855 777.148 381.855 792 390.43 c 806.852 399.004 816 414.852 816 432
 c 816 624 m 816 641.148 806.852 656.996 792 665.57 c 777.148 674.145 758.852
 674.145 744 665.57 c 729.148 656.996 720 641.148 720 624 c 720 606.852 
729.148 591.004 744 582.43 c 758.852 573.855 777.148 573.855 792 582.43 
c 806.852 591.004 816 606.852 816 624 c 816 816 m 816 833.148 806.852 848.996
 792 857.57 c 777.148 866.145 758.852 866.145 744 857.57 c 729.148 848.996
 720 833.148 720 816 c 720 798.852 729.148 783.004 744 774.43 c 758.852 
765.855 777.148 765.855 792 774.43 c 806.852 783.004 816 798.852 816 816
 c f
Q Q
showpage
%%Trailer
%%EOF
