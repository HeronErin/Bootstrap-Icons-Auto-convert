%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 120 0 264 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 120 0 264 384
384 384 cairo_set_page_size
%%EndPageSetup
q 120 0 144 384 rectclip
1 0 0 -1 0 384 cm q
0 g
132 36 m 132 26.453 135.793 17.297 142.543 10.543 c 149.297 3.793 158.453
 0 168 0 c 216 0 l 225.547 0 234.703 3.793 241.457 10.543 c 248.207 17.297
 252 26.453 252 36 c 252 300 l 252 309.148 248.516 317.957 242.258 324.629
 c 236 331.301 227.434 335.344 218.305 335.93 c 226.703 343.25 239.234 352.203
 257.375 361.273 c 262.348 363.766 264.957 369.348 263.676 374.762 c 262.395
 380.176 257.562 384 252 384 c 132 384 l 126.438 384 121.605 380.176 120.324
 374.762 c 119.043 369.348 121.652 363.766 126.625 361.273 c 144.77 352.203
 157.273 343.273 165.695 335.93 c 156.566 335.344 148 331.301 141.742 324.629
 c 135.484 317.957 132 309.148 132 300 c h
168 24 m 161.371 24 156 29.371 156 36 c 156 300 l 156 303.184 157.266 306.234
 159.516 308.484 c 161.766 310.734 164.816 312 168 312 c 216 312 l 219.184
 312 222.234 310.734 224.484 308.484 c 226.734 306.234 228 303.184 228 300
 c 228 36 l 228 32.816 226.734 29.766 224.484 27.516 c 222.234 25.266 219.184
 24 216 24 c h
168 24 m f
204 60 m 204 66.629 198.629 72 192 72 c 185.371 72 180 66.629 180 60 c 
180 53.371 185.371 48 192 48 c 198.629 48 204 53.371 204 60 c 204 108 m 
204 114.629 198.629 120 192 120 c 185.371 120 180 114.629 180 108 c 180 
101.371 185.371 96 192 96 c 198.629 96 204 101.371 204 108 c 204 156 m 204
 162.629 198.629 168 192 168 c 185.371 168 180 162.629 180 156 c 180 149.371
 185.371 144 192 144 c 198.629 144 204 149.371 204 156 c 204 204 m 204 210.629
 198.629 216 192 216 c 185.371 216 180 210.629 180 204 c 180 197.371 185.371
 192 192 192 c 198.629 192 204 197.371 204 204 c f
Q Q
showpage
%%Trailer
%%EOF
