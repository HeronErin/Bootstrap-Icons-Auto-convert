%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
137.664 0 m 132.082 0 126.578 1.297 121.586 3.793 c 43.871 42.625 l 37.895
 45.617 32.871 50.219 29.363 55.906 c 25.852 61.594 23.996 68.148 24 74.832
 c 24 207.07 l 72 192.672 l 72 120 l 72 113.637 74.527 107.531 79.031 103.031
 c 83.531 98.527 89.637 96 96 96 c 288 96 l 294.363 96 300.469 98.527 304.969
 103.031 c 309.473 107.531 312 113.637 312 120 c 312 192.672 l 360 207.07
 l 360 74.832 l 360 68.145 358.137 61.586 354.617 55.898 c 351.098 50.207
 346.066 45.613 340.078 42.625 c 262.465 3.793 l 257.457 1.293 251.934 -0.008
 246.336 0 c h
360 232.129 m 227.93 192.527 l 226.809 192.184 225.645 192.008 224.473 
192 c 204 192 l 204 384 l 300 384 l 315.914 384 331.176 377.68 342.426 366.426
 c 353.68 355.176 360 339.914 360 324 c h
180 384 m 180 192 l 159.527 192 l 158.359 192 157.191 192.168 156.07 192.504
 c 24 232.129 l 24 324 l 24 339.914 30.32 355.176 41.574 366.426 c 52.824
 377.68 68.086 384 84 384 c h
156 48 m 228 48 l 234.629 48 240 53.371 240 60 c 240 66.629 234.629 72 
228 72 c 156 72 l 149.371 72 144 66.629 144 60 c 144 53.371 149.371 48 156
 48 c 288 120 m 288 185.473 l 234.816 169.512 l 231.469 168.508 227.992 
168 224.496 168 c 204 168 l 204 120 l h
180 120 m 180 168 l 159.527 168 l 156.023 167.996 152.539 168.508 149.184
 169.512 c 96 185.473 l 96 120 l h
84 240 m 90.629 240 96 245.371 96 252 c 96 258.629 90.629 264 84 264 c 
77.371 264 72 258.629 72 252 c 72 245.371 77.371 240 84 240 c 300 240 m 
306.629 240 312 245.371 312 252 c 312 258.629 306.629 264 300 264 c 293.371
 264 288 258.629 288 252 c 288 245.371 293.371 240 300 240 c 120 312 m 120
 320.574 115.426 328.496 108 332.785 c 100.574 337.07 91.426 337.07 84 332.785
 c 76.574 328.496 72 320.574 72 312 c 72 303.426 76.574 295.504 84 291.215
 c 91.426 286.93 100.574 286.93 108 291.215 c 115.426 295.504 120 303.426
 120 312 c 288 336 m 279.426 336 271.504 331.426 267.215 324 c 262.93 316.574
 262.93 307.426 267.215 300 c 271.504 292.574 279.426 288 288 288 c 296.574
 288 304.496 292.574 308.785 300 c 313.07 307.426 313.07 316.574 308.785
 324 c 304.496 331.426 296.574 336 288 336 c f
Q Q
showpage
%%Trailer
%%EOF
