%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 0 180 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 0 180 192
192 192 cairo_set_page_size
%%EndPageSetup
q 12 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
68.832 0 m 66.043 0 63.289 0.648 60.793 1.895 c 21.938 21.312 l 18.949 
22.809 16.438 25.109 14.68 27.953 c 12.926 30.797 11.996 34.074 12 37.414
 c 12 103.535 l 36 96.336 l 36 60 l 36 53.371 41.371 48 48 48 c 144 48 l
 147.184 48 150.234 49.266 152.484 51.516 c 154.734 53.766 156 56.816 156
 60 c 156 96.336 l 180 103.535 l 180 37.414 l 180 34.07 179.066 30.793 177.309
 27.949 c 175.551 25.105 173.031 22.805 170.039 21.312 c 131.23 1.895 l 
128.727 0.645 125.969 -0.004 123.168 0 c h
180 116.062 m 113.965 96.262 l 113.965 96.266 l 113.402 96.094 112.82 96.004
 112.234 96 c 102 96 l 102 192 l 150 192 l 157.957 192 165.586 188.84 171.215
 183.215 c 176.84 177.586 180 169.957 180 162 c h
90 192 m 90 96 l 79.766 96 l 79.18 96 78.598 96.086 78.035 96.254 c 12 
116.062 l 12 162 l 12 169.957 15.16 177.586 20.785 183.215 c 26.414 188.84
 34.043 192 42 192 c h
78 24 m 114 24 l 117.312 24 120 26.688 120 30 c 120 33.312 117.312 36 114
 36 c 78 36 l 74.688 36 72 33.312 72 30 c 72 26.688 74.688 24 78 24 c 144
 60 m 144 92.734 l 117.406 84.754 l 117.406 84.758 l 115.734 84.254 113.996
 84 112.246 84 c 102 84 l 102 60 l h
90 60 m 90 84 l 79.766 84 l 78.012 84 76.27 84.254 74.594 84.758 c 48 92.734
 l 48 60 l h
42 120 m 45.312 120 48 122.688 48 126 c 48 129.312 45.312 132 42 132 c 
38.688 132 36 129.312 36 126 c 36 122.688 38.688 120 42 120 c 150 120 m 
153.312 120 156 122.688 156 126 c 156 129.312 153.312 132 150 132 c 146.688
 132 144 129.312 144 126 c 144 122.688 146.688 120 150 120 c 60 156 m 60
 162.629 54.629 168 48 168 c 41.371 168 36 162.629 36 156 c 36 149.371 41.371
 144 48 144 c 54.629 144 60 149.371 60 156 c 144 168 m 137.371 168 132 162.629
 132 156 c 132 149.371 137.371 144 144 144 c 150.629 144 156 149.371 156
 156 c 156 162.629 150.629 168 144 168 c f
Q Q
showpage
%%Trailer
%%EOF
