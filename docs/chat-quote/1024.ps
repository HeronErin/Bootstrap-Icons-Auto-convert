%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 3 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 3 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 3 768 717 rectclip
1 0 0 -1 0 768 cm q
0 g
128.543 570.91 m 138.633 581.039 143.68 595.133 142.32 609.359 c 138.938
 641.883 132.543 674.02 123.215 705.359 c 190.176 689.855 231.07 671.902
 249.648 662.496 c 260.184 657.16 272.316 655.895 283.727 658.945 c 316.43
 667.695 350.148 672.086 384 672 c 575.809 672 720 537.266 720 384 c 720
 230.734 575.809 96 384 96 c 192.191 96 48 230.785 48 384 c 48 454.465 77.617
 519.84 128.543 570.91 c 104.879 758.352 m 93.508 760.605 82.098 762.668
 70.656 764.543 c 61.055 766.078 53.762 756.094 57.551 747.168 c 61.801 
737.113 65.707 726.914 69.266 716.594 c 69.41 716.113 l 81.312 681.555 91.012
 641.809 94.562 604.801 c 35.664 545.762 0 468.48 0 384 c 0 198.434 171.938
 48 384 48 c 596.062 48 768 198.434 768 384 c 768 569.566 596.062 720 384
 720 c 345.965 720.086 308.086 715.145 271.344 705.312 c 246.383 717.938
 192.672 740.93 104.879 758.352 c f
339.168 324.48 m 326.617 304.934 306.18 291.812 283.18 288.539 c 260.18
 285.266 236.895 292.164 219.387 307.434 c 201.879 322.703 191.883 344.832
 192 368.062 c 192.012 387.258 198.922 405.812 211.477 420.336 c 224.027
 434.859 241.379 444.387 260.371 447.18 c 279.363 449.973 298.727 445.848
 314.93 435.551 c 308.641 454.223 296.93 474.145 277.633 494.109 c 277.633
 494.113 l 272.66 499.258 270.809 506.664 272.777 513.543 c 274.746 520.422
 280.234 525.727 287.176 527.461 c 294.117 529.199 301.457 527.098 306.434
 521.953 c 377.762 448.031 368.496 367.68 339.168 324.578 c h
531.168 324.48 m 518.617 304.934 498.18 291.812 475.18 288.539 c 452.18
 285.266 428.895 292.164 411.387 307.434 c 393.879 322.703 383.883 344.832
 384 368.062 c 384.012 387.258 390.922 405.812 403.477 420.336 c 416.027
 434.859 433.379 444.387 452.371 447.18 c 471.363 449.973 490.727 445.848
 506.93 435.551 c 500.641 454.223 488.93 474.145 469.633 494.109 c 469.633
 494.113 l 464.66 499.258 462.809 506.664 464.777 513.543 c 466.746 520.422
 472.234 525.727 479.176 527.461 c 486.117 529.199 493.457 527.098 498.434
 521.953 c 569.762 448.031 560.496 367.68 531.168 324.578 c h
531.168 324.48 m f
Q Q
showpage
%%Trailer
%%EOF
