%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 1 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 1 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 1 384 359 rectclip
1 0 0 -1 0 384 cm q
0 g
64.273 285.457 m 69.316 290.52 71.84 297.566 71.16 304.68 c 69.469 320.941
 66.27 337.012 61.609 352.68 c 95.09 344.926 115.539 335.953 124.824 331.246
 c 130.094 328.578 136.16 327.949 141.863 329.473 c 158.215 333.848 175.074
 336.043 192 336 c 287.902 336 360 268.633 360 192 c 360 115.367 287.902
 48 192 48 c 96.098 48 24 115.391 24 192 c 24 227.23 38.809 259.922 64.273
 285.457 c 52.441 379.176 m 46.754 380.301 41.047 381.336 35.328 382.273
 c 30.527 383.043 26.879 378.051 28.777 373.586 c 30.902 368.555 32.855 
363.457 34.633 358.297 c 34.703 358.059 l 40.656 340.777 45.504 320.906 
47.277 302.402 c 17.832 272.879 0 234.238 0 192 c 0 99.215 85.969 24 192
 24 c 298.031 24 384 99.215 384 192 c 384 284.785 298.031 360 192 360 c 
172.984 360.043 154.043 357.574 135.672 352.656 c 123.191 358.969 96.336
 370.465 52.441 379.176 c f
169.586 162.238 m 163.309 152.465 153.09 145.906 141.59 144.27 c 130.09
 142.633 118.449 146.082 109.695 153.715 c 100.941 161.352 95.941 172.418
 96 184.031 c 96.004 193.629 99.461 202.906 105.738 210.168 c 112.012 217.43
 120.691 222.195 130.188 223.59 c 139.684 224.988 149.363 222.922 157.465
 217.777 c 154.32 227.113 148.465 237.074 138.816 247.059 c 138.816 247.055
 l 134.973 251.031 135.078 257.371 139.055 261.215 c 143.031 265.059 149.371
 264.953 153.215 260.977 c 188.879 224.016 184.246 183.84 169.582 162.289
 c h
265.586 162.238 m 259.309 152.465 249.09 145.906 237.59 144.27 c 226.09
 142.633 214.449 146.082 205.695 153.715 c 196.941 161.352 191.941 172.418
 192 184.031 c 192.004 193.629 195.461 202.906 201.738 210.168 c 208.012
 217.43 216.691 222.195 226.188 223.59 c 235.684 224.988 245.363 222.922
 253.465 217.777 c 250.32 227.113 244.465 237.074 234.816 247.059 c 234.816
 247.055 l 230.973 251.031 231.078 257.371 235.055 261.215 c 239.031 265.059
 245.371 264.953 249.215 260.977 c 284.879 224.016 280.246 183.84 265.582
 162.289 c h
265.586 162.238 m f
Q Q
showpage
%%Trailer
%%EOF
