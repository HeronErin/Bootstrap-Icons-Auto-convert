%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.004 4.461 m 1.082 4.539 1.121 4.648 1.113 4.762 c 1.086 5.016 1.035 5.266
 0.961 5.512 c 1.484 5.391 1.805 5.25 1.949 5.176 c 2.031 5.133 2.129 5.125
 2.215 5.148 c 2.473 5.215 2.734 5.25 3 5.25 c 4.5 5.25 5.625 4.199 5.625
 3 c 5.625 1.801 4.5 0.75 3 0.75 c 1.5 0.75 0.375 1.805 0.375 3 c 0.375 
3.551 0.605 4.062 1.004 4.461 c 0.82 5.926 m 0.73 5.941 0.641 5.957 0.551
 5.973 c 0.477 5.984 0.418 5.906 0.449 5.836 c 0.484 5.758 0.512 5.68 0.543
 5.598 c 0.543 5.594 l 0.637 5.324 0.711 5.012 0.738 4.723 c 0.277 4.266
 0 3.66 0 3 c 0 1.551 1.344 0.375 3 0.375 c 4.656 0.375 6 1.551 6 3 c 6 
4.449 4.656 5.625 3 5.625 c 2.703 5.625 2.406 5.586 2.121 5.512 c 1.926 
5.609 1.508 5.789 0.82 5.926 c f
2.648 2.535 m 2.5 2.301 2.215 2.195 1.945 2.273 c 1.68 2.352 1.5 2.598 
1.5 2.875 c 1.5 3.102 1.625 3.312 1.824 3.422 c 2.023 3.531 2.27 3.523 2.461
 3.402 c 2.41 3.547 2.32 3.703 2.168 3.859 c 2.023 4.012 2.25 4.227 2.395
 4.078 c 2.953 3.5 2.879 2.871 2.648 2.535 c h
4.148 2.535 m 4 2.301 3.715 2.195 3.445 2.273 c 3.18 2.352 3 2.598 3 2.875
 c 3 3.102 3.125 3.312 3.324 3.422 c 3.523 3.531 3.77 3.523 3.961 3.402 
c 3.91 3.547 3.82 3.703 3.668 3.859 c 3.523 4.012 3.75 4.227 3.895 4.078
 c 4.453 3.5 4.379 2.871 4.148 2.535 c h
4.148 2.535 m f
Q Q
showpage
%%Trailer
%%EOF
