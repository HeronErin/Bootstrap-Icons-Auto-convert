%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:35 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 361
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 361
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 361 rectclip
1 0 0 -1 0 384 cm q
0 g
138.168 25.703 m 140.898 27.34 142.867 29.992 143.645 33.082 c 144.418 
36.168 143.934 39.438 142.297 42.168 c 81.191 144 l 302.809 144 l 241.68
 42.168 l 238.273 36.48 240.121 29.109 245.809 25.703 c 251.496 22.297 258.867
 24.145 262.273 29.832 c 330.793 144 l 360 144 l 366.363 144 372.469 146.527
 376.969 151.031 c 381.473 155.531 384 161.637 384 168 c 384 192 l 384 198.363
 381.473 204.469 376.969 208.969 c 372.469 213.473 366.363 216 360 216 c
 360 324 l 360 339.914 353.68 355.176 342.426 366.426 c 331.176 377.68 315.914
 384 300 384 c 84 384 l 68.086 384 52.824 377.68 41.574 366.426 c 30.32 
355.176 24 339.914 24 324 c 24 216 l 17.637 216 11.531 213.473 7.031 208.969
 c 2.527 204.469 0 198.363 0 192 c 0 168 l 0 161.637 2.527 155.531 7.031
 151.031 c 11.531 146.527 17.637 144 24 144 c 53.207 144 l 121.68 29.832
 l 123.316 27.102 125.969 25.133 129.059 24.355 c 132.145 23.582 135.414
 24.066 138.145 25.703 c h
48 216 m 48 324 l 48 333.547 51.793 342.703 58.543 349.457 c 65.297 356.207
 74.453 360 84 360 c 300 360 l 309.547 360 318.703 356.207 325.457 349.457
 c 332.207 342.703 336 333.547 336 324 c 336 216 l h
24 168 m 24 192 l 360 192 l 360 168 l h
96 240 m 99.184 240 102.234 241.266 104.484 243.516 c 106.734 245.766 108
 248.816 108 252 c 108 324 l 108 330.629 102.629 336 96 336 c 89.371 336
 84 330.629 84 324 c 84 252 l 84 245.371 89.371 240 96 240 c 144 240 m 147.184
 240 150.234 241.266 152.484 243.516 c 154.734 245.766 156 248.816 156 252
 c 156 324 l 156 330.629 150.629 336 144 336 c 137.371 336 132 330.629 132
 324 c 132 252 l 132 245.371 137.371 240 144 240 c 192 240 m 195.184 240
 198.234 241.266 200.484 243.516 c 202.734 245.766 204 248.816 204 252 c
 204 324 l 204 330.629 198.629 336 192 336 c 185.371 336 180 330.629 180
 324 c 180 252 l 180 245.371 185.371 240 192 240 c 240 240 m 243.184 240
 246.234 241.266 248.484 243.516 c 250.734 245.766 252 248.816 252 252 c
 252 324 l 252 330.629 246.629 336 240 336 c 233.371 336 228 330.629 228
 324 c 228 252 l 228 245.371 233.371 240 240 240 c 288 240 m 291.184 240
 294.234 241.266 296.484 243.516 c 298.734 245.766 300 248.816 300 252 c
 300 324 l 300 330.629 294.629 336 288 336 c 281.371 336 276 330.629 276
 324 c 276 252 l 276 245.371 281.371 240 288 240 c f
Q Q
showpage
%%Trailer
%%EOF
