%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 721 rectclip
1 0 0 -1 0 768 cm q
0 g
276.336 51.406 m 281.797 54.68 285.738 59.984 287.285 66.16 c 288.832 72.336
 287.863 78.875 284.594 84.336 c 162.383 288 l 605.613 288 l 483.359 84.336
 l 478.953 76.98 478.805 67.828 482.973 60.336 c 487.141 52.84 494.988 48.137
 503.566 48 c 512.141 47.859 520.137 52.309 524.543 59.664 c 661.586 288
 l 720 288 l 732.73 288 744.938 293.059 753.941 302.059 c 762.941 311.062
 768 323.27 768 336 c 768 384 l 768 396.73 762.941 408.938 753.941 417.941
 c 744.938 426.941 732.73 432 720 432 c 720 648 l 720 679.824 707.355 710.348
 684.852 732.852 c 662.348 755.355 631.824 768 600 768 c 168 768 l 136.176
 768 105.652 755.355 83.148 732.852 c 60.645 710.348 48 679.824 48 648 c
 48 432 l 35.27 432 23.062 426.941 14.059 417.941 c 5.059 408.938 0 396.73
 0 384 c 0 336 l 0 323.27 5.059 311.062 14.059 302.059 c 23.062 293.059 
35.27 288 48 288 c 106.414 288 l 243.359 59.664 l 246.633 54.203 251.938
 50.262 258.113 48.715 c 264.289 47.168 270.828 48.137 276.289 51.406 c 
h
96 432 m 96 648 l 96 667.094 103.586 685.41 117.09 698.91 c 130.59 712.414
 148.906 720 168 720 c 600 720 l 619.094 720 637.41 712.414 650.91 698.91
 c 664.414 685.41 672 667.094 672 648 c 672 432 l h
48 336 m 48 384 l 720 384 l 720 336 l h
192 480 m 198.363 480 204.469 482.527 208.969 487.031 c 213.473 491.531
 216 497.637 216 504 c 216 648 l 216 656.574 211.426 664.496 204 668.785
 c 196.574 673.07 187.426 673.07 180 668.785 c 172.574 664.496 168 656.574
 168 648 c 168 504 l 168 497.637 170.527 491.531 175.031 487.031 c 179.531
 482.527 185.637 480 192 480 c 288 480 m 294.363 480 300.469 482.527 304.969
 487.031 c 309.473 491.531 312 497.637 312 504 c 312 648 l 312 656.574 307.426
 664.496 300 668.785 c 292.574 673.07 283.426 673.07 276 668.785 c 268.574
 664.496 264 656.574 264 648 c 264 504 l 264 497.637 266.527 491.531 271.031
 487.031 c 275.531 482.527 281.637 480 288 480 c 384 480 m 390.363 480 396.469
 482.527 400.969 487.031 c 405.473 491.531 408 497.637 408 504 c 408 648
 l 408 656.574 403.426 664.496 396 668.785 c 388.574 673.07 379.426 673.07
 372 668.785 c 364.574 664.496 360 656.574 360 648 c 360 504 l 360 497.637
 362.527 491.531 367.031 487.031 c 371.531 482.527 377.637 480 384 480 c
 480 480 m 486.363 480 492.469 482.527 496.969 487.031 c 501.473 491.531
 504 497.637 504 504 c 504 648 l 504 656.574 499.426 664.496 492 668.785
 c 484.574 673.07 475.426 673.07 468 668.785 c 460.574 664.496 456 656.574
 456 648 c 456 504 l 456 497.637 458.527 491.531 463.031 487.031 c 467.531
 482.527 473.637 480 480 480 c 576 480 m 582.363 480 588.469 482.527 592.969
 487.031 c 597.473 491.531 600 497.637 600 504 c 600 648 l 600 656.574 595.426
 664.496 588 668.785 c 580.574 673.07 571.426 673.07 564 668.785 c 556.574
 664.496 552 656.574 552 648 c 552 504 l 552 497.637 554.527 491.531 559.031
 487.031 c 563.531 482.527 569.637 480 576 480 c f
Q Q
showpage
%%Trailer
%%EOF
