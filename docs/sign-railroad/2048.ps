%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1085.09 632.062 m 1187.234 632.062 l 1244.066 632.062 1277.09 664.125 1277.09
 713.086 c 1277.09 713.09 l 1277.457 728.352 1273.211 743.375 1264.906 756.188
 c 1256.598 769 1244.617 779.004 1230.527 784.895 c 1281.984 888 l 1225.344
 888 l 1180.512 792.574 l 1135.105 792.574 l 1135.105 888 l 1085.09 888 
l h
1135.105 671.805 m 1135.105 754.461 l 1179.266 754.461 l 1207.297 754.461
 1224.77 741.02 1224.77 714.047 c 1224.77 686.59 1206.723 671.809 1179.938
 671.809 c h
293.09 632.062 m 395.234 632.062 l 452.066 632.062 485.09 664.125 485.09
 713.086 c 485.09 750.527 461.859 775.871 438.531 784.895 c 489.988 888 
l 433.348 888 l 388.516 792.574 l 343.109 792.574 l 343.109 888 l 293.094
 888 l h
343.105 671.805 m 343.105 754.461 l 387.266 754.461 l 415.297 754.461 432.77
 741.02 432.77 714.047 c 432.77 686.59 414.723 671.809 387.938 671.809 c
 h
343.105 671.805 m f
667.199 41.762 m 722.879 -13.918 813.121 -13.918 868.801 41.762 c 1494.242
 667.297 l 1549.922 722.977 1549.922 813.121 1494.242 868.703 c 868.801 
1494.238 l 813.121 1549.918 722.977 1549.918 667.395 1494.238 c 41.762 868.801
 l 14.969 842.137 -0.094 805.895 -0.094 768.098 c -0.094 730.297 14.969 
694.055 41.762 667.391 c h
801.598 108.961 m 801.602 108.961 l 792.688 100.051 780.602 95.043 768 
95.043 c 755.398 95.043 743.312 100.051 734.398 108.961 c 472.609 370.656
 l 768 666.145 l 1063.488 370.754 l 801.602 108.863 l h
1165.246 472.609 m 869.855 768 l 1165.246 1063.488 l 1427.133 801.602 l
 1427.137 801.602 l 1436.047 792.688 1441.051 780.602 1441.051 768 c 1441.051
 755.398 1436.047 743.312 1427.137 734.398 c h
1063.484 1165.25 m 768 869.855 l 472.609 1165.246 l 734.402 1427.133 l 
734.398 1427.137 l 743.312 1436.047 755.398 1441.051 768 1441.051 c 780.602
 1441.051 792.688 1436.047 801.602 1427.137 c h
370.75 1063.488 m 666.145 768 l 370.754 472.609 l 108.863 734.398 l 99.953
 743.312 94.949 755.398 94.949 768 c 94.949 780.602 99.953 792.688 108.863
 801.602 c h
370.75 1063.488 m f
Q Q
showpage
%%Trailer
%%EOF
