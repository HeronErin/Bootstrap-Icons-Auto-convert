%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 42 rectclip
1 0 0 -1 0 48 cm q
0 g
24.633 6.141 m 24.23 5.953 23.77 5.953 23.367 6.141 c 0.867 16.641 l 0.324
 16.895 -0.016 17.445 0.004 18.043 c 0.02 18.637 0.387 19.168 0.941 19.391
 c 23.441 28.391 l 23.801 28.535 24.199 28.535 24.559 28.391 c 42 21.422
 l 42 39 l 40.344 39 39 40.344 39 42 c 39 48 l 48 48 l 48 42 l 48 41.203
 47.684 40.441 47.121 39.879 c 46.559 39.316 45.797 39 45 39 c 45 20.219
 l 47.059 19.395 l 47.059 19.391 l 47.613 19.168 47.98 18.637 47.996 18.043
 c 48.016 17.445 47.676 16.895 47.133 16.641 c h
24 25.379 m 5.273 17.895 l 24 9.156 l 42.727 17.895 l h
24 25.379 m f
12.527 27.098 m 12.137 26.949 11.703 26.973 11.328 27.156 c 10.957 27.344
 10.676 27.676 10.559 28.078 c 9.059 33.18 l 9.059 33.176 l 8.844 33.918
 9.223 34.703 9.941 34.992 c 23.441 40.391 l 23.801 40.535 24.199 40.535
 24.559 40.391 c 38.059 34.992 l 38.777 34.703 39.156 33.918 38.941 33.176
 c 37.441 28.074 l 37.441 28.078 l 37.324 27.676 37.043 27.344 36.672 27.156
 c 36.297 26.973 35.863 26.949 35.473 27.098 c 24 31.398 l h
12.324 32.715 m 12.984 30.473 l 23.473 34.406 l 23.473 34.402 l 23.812 
34.531 24.188 34.531 24.527 34.402 c 35.016 30.469 l 35.676 32.711 l 24 
37.379 l h
12.324 32.715 m f
Q Q
showpage
%%Trailer
%%EOF
