%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 42 rectclip
1 0 0 -1 0 48 cm q
0 g
25.5 4.5 m 25.5 3.672 24.828 3 24 3 c 23.172 3 22.5 3.672 22.5 4.5 c 22.5
 20.23 l 21 21.301 l 21 14.16 l 21 11.309 18.691 9 15.84 9 c 14.27 9 12.77
 9.809 11.512 10.777 c 10.219 11.773 8.973 13.098 7.863 14.465 c 5.656 17.188
 3.824 20.305 3.125 21.906 c 2.598 23.121 1.945 25.387 1.457 27.938 c 0.961
 30.508 0.609 33.508 0.734 36.215 c 0.855 38.816 1.434 41.586 3.25 43.203
 c 5.262 45.004 8.117 44.871 11.473 43.191 c 16.859 40.5 l 16.855 40.5 l
 19.395 39.23 21 36.633 21 33.793 c 21 31.5 l 21 30.672 20.328 30 19.5 30
 c 18.672 30 18 30.672 18 31.5 c 18 33.793 l 18 35.496 17.035 37.055 15.512
 37.816 c 10.129 40.508 l 7.195 41.977 5.883 41.535 5.246 40.965 c 4.406
 40.215 3.844 38.562 3.73 36.074 c 3.621 33.688 3.934 30.945 4.402 28.5 
c 4.875 26.039 5.473 24.027 5.875 23.102 c 6.445 21.789 8.125 18.902 10.195
 16.352 c 11.223 15.086 12.305 13.953 13.344 13.156 c 14.418 12.328 15.262
 12 15.844 12 c 15.84 12 l 17.031 12 18 12.969 18 14.16 c 18 23.441 l 12.629
 27.281 l 12.004 27.777 11.879 28.68 12.34 29.328 c 12.805 29.977 13.695
 30.152 14.371 29.723 c 24 22.844 l 33.629 29.723 l 33.953 29.969 34.363
 30.07 34.762 30.012 c 35.164 29.949 35.523 29.73 35.762 29.398 c 35.996
 29.066 36.086 28.656 36.016 28.254 c 35.941 27.855 35.707 27.504 35.371
 27.277 c 30 23.441 l 30 14.16 l 30 12.969 30.969 12 32.16 12 c 32.742 12
 33.586 12.328 34.66 13.156 c 35.699 13.953 36.777 15.086 37.809 16.355 
c 39.871 18.906 41.551 21.789 42.125 23.102 c 42.527 24.027 43.129 26.043
 43.598 28.5 c 44.066 30.941 44.379 33.691 44.27 36.074 c 44.156 38.562 
43.598 40.215 42.754 40.965 c 42.113 41.535 40.805 41.977 37.871 40.508 
c 32.484 37.816 l 32.488 37.816 l 30.961 37.055 30 35.496 30 33.793 c 30
 31.5 l 30 30.672 29.328 30 28.5 30 c 27.672 30 27 30.672 27 31.5 c 27 33.793
 l 27 36.633 28.605 39.23 31.145 40.5 c 36.531 43.191 l 39.891 44.871 42.742
 45 44.754 43.203 c 46.57 41.582 47.148 38.812 47.27 36.215 c 47.395 33.508
 47.043 30.508 46.551 27.938 c 46.059 25.383 45.41 23.121 44.875 21.902 
c 44.18 20.305 42.348 17.188 40.137 14.465 c 39.027 13.098 37.781 11.773
 36.488 10.777 c 35.23 9.809 33.73 9 32.16 9 c 29.309 9 27 11.309 27 14.16
 c 27 21.301 l 25.5 20.23 l h
25.5 4.5 m f
Q Q
showpage
%%Trailer
%%EOF
