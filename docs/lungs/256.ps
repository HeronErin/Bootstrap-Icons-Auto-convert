%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 2 13 190 180
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 2 13 190 180
192 192 cairo_set_page_size
%%EndPageSetup
q 2 13 188 167 rectclip
1 0 0 -1 0 192 cm q
0 g
102 18 m 102 14.688 99.312 12 96 12 c 92.688 12 90 14.688 90 18 c 90 80.914
 l 84 85.199 l 84 56.641 l 84 45.238 74.762 36 63.359 36 c 57.07 36 51.082
 39.238 46.043 43.105 c 40.871 47.09 35.879 52.383 31.449 57.852 c 22.617
 68.746 15.285 81.203 12.488 87.613 c 10.375 92.473 7.773 101.535 5.816 
111.746 c 3.836 122.031 2.422 134.031 2.926 144.855 c 3.406 155.258 5.723
 166.336 12.98 172.816 c 21.02 180.016 32.445 179.488 45.871 172.77 c 67.41
 162.004 l 67.414 162 l 72.398 159.508 76.59 155.68 79.52 150.941 c 82.449
 146.199 84 140.738 84 135.168 c 84 126 l 84 122.688 81.312 120 78 120 c
 74.688 120 72 122.688 72 126 c 72 135.168 l 72 138.512 71.066 141.789 69.309
 144.637 c 67.551 147.48 65.031 149.777 62.039 151.273 c 40.512 162.039 
l 28.777 167.906 23.531 166.156 20.977 163.863 c 17.617 160.863 15.371 154.25
 14.918 144.305 c 14.473 134.766 15.734 123.785 17.605 114.004 c 19.488 
104.164 21.891 96.113 23.496 92.402 c 25.777 87.145 32.496 75.602 40.777
 65.402 c 44.883 60.34 49.215 55.812 53.367 52.621 c 57.664 49.309 61.035
 48 63.363 48 c 63.359 48 l 68.133 48 72 51.867 72 56.641 c 72 93.77 l 50.52
 109.129 l 48.02 111.113 47.512 114.711 49.367 117.312 c 51.223 119.91 54.789
 120.602 57.48 118.883 c 96 91.367 l 134.52 118.883 l 135.812 119.867 137.449
 120.285 139.055 120.043 c 140.66 119.801 142.098 118.914 143.043 117.594
 c 143.984 116.27 144.352 114.621 144.055 113.023 c 143.762 111.426 142.832
 110.016 141.48 109.117 c 120 93.77 l 120 56.641 l 120 51.867 123.867 48
 128.641 48 c 130.969 48 134.34 49.32 138.637 52.621 c 142.789 55.812 147.109
 60.336 151.238 65.414 c 159.496 75.613 166.215 87.145 168.508 92.402 c 
170.117 96.109 172.516 104.164 174.398 114.004 c 176.27 123.773 177.52 134.766
 177.086 144.305 c 176.629 154.254 174.398 160.863 171.027 163.863 c 168.473
 166.145 163.227 167.906 151.492 162.039 c 129.953 151.273 l 129.949 151.273
 l 126.957 149.777 124.441 147.477 122.688 144.633 c 120.93 141.789 120 
138.512 120 135.168 c 120 126 l 120 122.688 117.312 120 114 120 c 110.688
 120 108 122.688 108 126 c 108 135.168 l 108 140.738 109.551 146.199 112.48
 150.941 c 115.41 155.68 119.602 159.508 124.586 162 c 146.125 172.766 l
 159.566 179.484 170.965 180 179.016 172.812 c 186.277 166.332 188.59 155.258
 189.07 144.852 c 189.574 134.027 188.16 122.027 186.191 111.742 c 184.223
 101.52 181.633 92.469 179.496 87.598 c 176.711 81.203 169.379 68.746 160.547
 57.852 c 156.105 52.379 151.125 47.086 145.953 43.105 c 140.914 39.238 
134.93 36 128.641 36 c 117.238 36 108 45.238 108 56.641 c 108 85.199 l 102
 80.914 l h
102 18 m f
Q Q
showpage
%%Trailer
%%EOF
