%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.188 0.562 m 3.188 0.312 2.812 0.312 2.812 0.562 c 2.812 2.527 l 2.625
 2.664 l 2.625 1.77 l 2.625 1.414 2.336 1.125 1.98 1.125 c 1.785 1.125 1.598
 1.227 1.438 1.348 c 1.277 1.473 1.121 1.637 0.98 1.809 c 0.703 2.148 0.477
 2.539 0.387 2.738 c 0.32 2.891 0.238 3.172 0.18 3.492 c 0.117 3.812 0.074
 4.188 0.09 4.527 c 0.105 4.852 0.176 5.199 0.402 5.402 c 0.652 5.629 1.012
 5.609 1.43 5.402 c 2.102 5.066 l 2.105 5.062 l 2.426 4.902 2.625 4.578 
2.625 4.223 c 2.625 3.938 l 2.625 3.688 2.25 3.688 2.25 3.938 c 2.25 4.223
 l 2.25 4.438 2.129 4.633 1.938 4.727 c 1.266 5.062 l 0.898 5.246 0.734 
5.191 0.656 5.121 c 0.551 5.027 0.48 4.82 0.469 4.512 c 0.453 4.215 0.496
 3.871 0.555 3.566 c 0.613 3.258 0.688 3.008 0.738 2.891 c 0.809 2.727 1.02
 2.367 1.277 2.047 c 1.406 1.887 1.539 1.746 1.672 1.648 c 1.805 1.547 1.91
 1.504 1.984 1.504 c 1.98 1.5 l 2.129 1.5 2.25 1.621 2.25 1.77 c 2.25 2.93
 l 1.578 3.41 l 1.395 3.559 1.598 3.844 1.797 3.715 c 3 2.855 l 4.203 3.715
 l 4.289 3.777 4.41 3.762 4.469 3.676 c 4.531 3.59 4.508 3.469 4.422 3.41
 c 3.75 2.93 l 3.75 1.77 l 3.75 1.621 3.871 1.5 4.02 1.5 c 4.094 1.5 4.199
 1.543 4.332 1.645 c 4.461 1.746 4.598 1.887 4.727 2.043 c 4.984 2.363 5.195
 2.723 5.266 2.887 c 5.316 3.004 5.391 3.254 5.449 3.562 c 5.508 3.867 5.547
 4.211 5.535 4.508 c 5.52 4.82 5.449 5.023 5.348 5.117 c 5.27 5.188 5.105
 5.242 4.738 5.059 c 4.066 4.723 l 4.062 4.727 l 3.871 4.633 3.75 4.438 
3.75 4.223 c 3.75 3.938 l 3.75 3.688 3.375 3.688 3.375 3.938 c 3.375 4.223
 l 3.375 4.578 3.574 4.902 3.895 5.062 c 4.566 5.398 l 4.988 5.609 5.344
 5.625 5.594 5.398 c 5.82 5.195 5.895 4.852 5.906 4.523 c 5.922 4.184 5.879
 3.809 5.816 3.488 c 5.754 3.168 5.676 2.887 5.605 2.734 c 5.52 2.535 5.289
 2.145 5.012 1.805 c 4.871 1.633 4.719 1.469 4.555 1.344 c 4.402 1.227 4.215
 1.125 4.02 1.125 c 3.664 1.125 3.375 1.414 3.375 1.77 c 3.375 2.664 l 3.188
 2.531 l h
3.188 0.562 m f
Q Q
showpage
%%Trailer
%%EOF
