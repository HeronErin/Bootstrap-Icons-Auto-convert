%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 26 192 166
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 26 192 166
192 192 cairo_set_page_size
%%EndPageSetup
q 0 26 192 140 rectclip
1 0 0 -1 0 192 cm q
0 g
36.602 36.602 m 20.844 52.352 11.992 73.719 11.992 96 c 11.992 118.281 
20.844 139.648 36.602 155.398 c 38.875 157.754 38.84 161.496 36.527 163.812
 c 34.211 166.125 30.469 166.156 28.117 163.883 c 10.113 145.879 -0.004 
121.461 -0.004 96 c -0.004 70.539 10.113 46.121 28.117 28.117 c 29.234 26.957
 30.77 26.297 32.379 26.285 c 33.988 26.27 35.535 26.902 36.676 28.043 c
 37.812 29.18 38.445 30.727 38.43 32.336 c 38.418 33.945 37.758 35.48 36.602
 36.602 c 155.402 28.117 m 155.398 28.117 l 157.742 25.773 161.539 25.773
 163.883 28.117 c 181.887 46.121 192.004 70.539 192.004 96 c 192.004 121.461
 181.887 145.879 163.883 163.883 c 161.531 166.156 157.789 166.125 155.473
 163.812 c 153.16 161.496 153.125 157.754 155.398 155.398 c 171.156 139.648
 180.008 118.281 180.008 96 c 180.008 73.719 171.156 52.352 155.398 36.602
 c 153.059 34.258 153.059 30.461 155.398 28.117 c 72 132 m 72 138.629 66.629
 144 60 144 c 53.371 144 48 138.629 48 132 c 48 125.371 53.371 120 60 120
 c 66.629 120 72 125.371 72 132 c 132 54 m 132 50.688 129.312 48 126 48 
c 122.688 48 120 50.688 120 54 c 120 79.402 l 99.086 66.84 l 96.242 65.137
 92.555 66.062 90.852 68.902 c 89.148 71.746 90.074 75.434 92.914 77.137
 c 114.336 90 l 92.914 102.852 l 90.074 104.555 89.148 108.242 90.852 111.086
 c 92.555 113.926 96.242 114.852 99.086 113.148 c 120 100.598 l 120 126 
l 120 129.312 122.688 132 126 132 c 129.312 132 132 129.312 132 126 c 132
 100.598 l 152.914 113.148 l 155.758 114.852 159.445 113.926 161.148 111.086
 c 162.852 108.242 161.926 104.555 159.086 102.852 c 137.664 90 l 159.086
 77.148 l 161.926 75.445 162.852 71.758 161.148 68.914 c 159.445 66.074 
155.758 65.148 152.914 66.852 c 132 79.402 l h
132 54 m f*
Q Q
showpage
%%Trailer
%%EOF
