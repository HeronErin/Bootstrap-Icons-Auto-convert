%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 13 96 83
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 13 96 83
96 96 cairo_set_page_size
%%EndPageSetup
q 0 13 96 70 rectclip
1 0 0 -1 0 96 cm q
0 g
18.301 18.301 m 10.422 26.176 5.996 36.859 5.996 48 c 5.996 59.141 10.422
 69.824 18.301 77.699 c 19.438 78.879 19.422 80.75 18.262 81.906 c 17.105
 83.062 15.234 83.078 14.059 81.941 c 5.055 72.941 0 60.73 0 48 c 0 35.27
 5.055 23.059 14.059 14.059 c 14.617 13.48 15.387 13.148 16.191 13.141 c
 16.996 13.137 17.77 13.453 18.336 14.02 c 18.906 14.59 19.223 15.363 19.215
 16.168 c 19.207 16.973 18.879 17.742 18.301 18.301 c 77.699 14.059 m 78.871
 12.887 80.77 12.887 81.941 14.059 c 90.945 23.059 96 35.27 96 48 c 96 60.73
 90.945 72.941 81.941 81.941 c 80.766 83.078 78.895 83.062 77.738 81.906
 c 76.578 80.75 76.562 78.879 77.699 77.699 c 85.578 69.824 90.004 59.141
 90.004 48 c 90.004 36.859 85.578 26.176 77.699 18.301 c 76.527 17.129 76.527
 15.23 77.699 14.059 c 36 66 m 36 69.312 33.312 72 30 72 c 26.688 72 24 
69.312 24 66 c 24 62.688 26.688 60 30 60 c 33.312 60 36 62.688 36 66 c 66
 27 m 66 25.344 64.656 24 63 24 c 61.344 24 60 25.344 60 27 c 60 39.703 
l 49.543 33.422 l 48.121 32.57 46.277 33.031 45.426 34.453 c 44.574 35.875
 45.035 37.715 46.457 38.566 c 57.168 45 l 46.457 51.426 l 45.035 52.277
 44.574 54.121 45.426 55.543 c 46.277 56.965 48.121 57.426 49.543 56.574
 c 60 50.297 l 60 63 l 60 64.656 61.344 66 63 66 c 64.656 66 66 64.656 66
 63 c 66 50.297 l 76.457 56.574 l 77.879 57.426 79.723 56.965 80.574 55.543
 c 81.426 54.121 80.965 52.277 79.543 51.426 c 68.832 45 l 79.543 38.574
 l 80.965 37.723 81.426 35.879 80.574 34.457 c 79.723 33.035 77.879 32.574
 76.457 33.426 c 66 39.703 l h
66 27 m f*
Q Q
showpage
%%Trailer
%%EOF
