%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 42
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 42
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 36 rectclip
1 0 0 -1 0 48 cm q
0 g
9.148 9.148 m 5.211 13.09 3 18.43 3 24 c 3 29.57 5.211 34.91 9.148 38.852
 c 9.719 39.438 9.711 40.375 9.133 40.953 c 8.555 41.531 7.617 41.539 7.027
 40.973 c 2.527 36.469 0 30.367 0 24 c 0 17.633 2.527 11.531 7.027 7.027
 c 7.309 6.738 7.691 6.574 8.094 6.57 c 8.496 6.566 8.883 6.727 9.168 7.012
 c 9.453 7.293 9.613 7.684 9.609 8.086 c 9.605 8.488 9.438 8.871 9.148 9.148
 c 38.848 7.027 m 38.852 7.027 l 39.438 6.445 40.387 6.445 40.973 7.027 
c 45.473 11.531 48 17.633 48 24 c 48 30.367 45.473 36.469 40.973 40.973 
c 40.383 41.539 39.445 41.531 38.867 40.953 c 38.289 40.375 38.281 39.438
 38.852 38.852 c 42.789 34.91 45 29.57 45 24 c 45 18.43 42.789 13.09 38.852
 9.148 c 38.266 8.562 38.266 7.613 38.852 7.027 c 18 33 m 18 34.656 16.656
 36 15 36 c 13.344 36 12 34.656 12 33 c 12 31.344 13.344 30 15 30 c 16.656
 30 18 31.344 18 33 c 33 13.5 m 33 12.672 32.328 12 31.5 12 c 30.672 12 
30 12.672 30 13.5 c 30 19.852 l 24.77 16.711 l 24.059 16.285 23.141 16.516
 22.715 17.227 c 22.289 17.938 22.52 18.859 23.23 19.285 c 28.586 22.5 l
 23.23 25.715 l 22.52 26.141 22.289 27.059 22.715 27.77 c 23.141 28.48 24.059
 28.711 24.77 28.285 c 30 25.148 l 30 31.5 l 30 32.328 30.672 33 31.5 33
 c 32.328 33 33 32.328 33 31.5 c 33 25.148 l 38.23 28.285 l 38.941 28.711
 39.859 28.48 40.285 27.77 c 40.711 27.059 40.48 26.141 39.77 25.715 c 34.414
 22.5 l 39.77 19.285 l 40.48 18.859 40.711 17.941 40.285 17.23 c 39.859 
16.52 38.941 16.289 38.23 16.715 c 33 19.852 l h
33 13.5 m f*
Q Q
showpage
%%Trailer
%%EOF
