%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1419
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1419
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1323 rectclip
1 0 0 -1 0 1536 cm q
0 g
1152 1248 m 1152 1354.078 1044.48 1440 912 1440 c 779.52 1440 672 1354.078
 672 1248 c 672 1141.922 779.52 1056 912 1056 c 1044.48 1056 1152 1141.922
 1152 1248 c f
1056 288 96 960 re f*
1056 270.719 m 1056.012 248.535 1063.711 227.039 1077.781 209.887 c 1091.852
 192.738 1111.43 180.988 1133.184 176.641 c 1421.184 119.039 l 1449.375 
113.406 1478.609 120.703 1500.844 138.922 c 1523.082 157.145 1535.984 184.371
 1536 213.121 c 1536 384 l 1056 480 l h
1056 270.719 m f
0 1104 m 0 1091.27 5.059 1079.062 14.059 1070.059 c 23.062 1061.059 35.27
 1056 48 1056 c 384 1056 l 401.148 1056 416.996 1065.148 425.57 1080 c 434.145
 1094.852 434.145 1113.148 425.57 1128 c 416.996 1142.852 401.148 1152 384
 1152 c 48 1152 l 35.27 1152 23.062 1146.941 14.059 1137.941 c 5.059 1128.938
 0 1116.73 0 1104 c 0 720 m 0 707.27 5.059 695.062 14.059 686.059 c 23.062
 677.059 35.27 672 48 672 c 768 672 l 785.148 672 800.996 681.148 809.57
 696 c 818.145 710.852 818.145 729.148 809.57 744 c 800.996 758.852 785.148
 768 768 768 c 48 768 l 35.27 768 23.062 762.941 14.059 753.941 c 5.059 
744.938 0 732.73 0 720 c 0 336 m 0 323.27 5.059 311.062 14.059 302.059 c
 23.062 293.059 35.27 288 48 288 c 768 288 l 785.148 288 800.996 297.148
 809.57 312 c 818.145 326.852 818.145 345.148 809.57 360 c 800.996 374.852
 785.148 384 768 384 c 48 384 l 35.27 384 23.062 378.941 14.059 369.941 
c 5.059 360.938 0 348.73 0 336 c f*
Q Q
showpage
%%Trailer
%%EOF
