%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:45 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 710
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 710
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 662 rectclip
1 0 0 -1 0 768 cm q
0 g
576 624 m 576 677.039 522.238 720 456 720 c 389.762 720 336 677.039 336
 624 c 336 570.961 389.762 528 456 528 c 522.238 528 576 570.961 576 624
 c f
528 144 48 480 re f*
528 135.359 m 528.008 124.266 531.855 113.52 538.891 104.945 c 545.926 
96.367 555.715 90.492 566.594 88.32 c 710.594 59.52 l 724.688 56.703 739.305
 60.352 750.422 69.461 c 761.539 78.57 767.992 92.188 768 106.559 c 768 
192 l 528 240 l h
528 135.359 m f
0 552 m 0 545.637 2.527 539.531 7.031 535.031 c 11.531 530.527 17.637 528
 24 528 c 192 528 l 200.574 528 208.496 532.574 212.785 540 c 217.07 547.426
 217.07 556.574 212.785 564 c 208.496 571.426 200.574 576 192 576 c 24 576
 l 17.637 576 11.531 573.473 7.031 568.969 c 2.527 564.469 0 558.363 0 552
 c 0 360 m 0 353.637 2.527 347.531 7.031 343.031 c 11.531 338.527 17.637
 336 24 336 c 384 336 l 392.574 336 400.496 340.574 404.785 348 c 409.07
 355.426 409.07 364.574 404.785 372 c 400.496 379.426 392.574 384 384 384
 c 24 384 l 17.637 384 11.531 381.473 7.031 376.969 c 2.527 372.469 0 366.363
 0 360 c 0 168 m 0 161.637 2.527 155.531 7.031 151.031 c 11.531 146.527 
17.637 144 24 144 c 384 144 l 392.574 144 400.496 148.574 404.785 156 c 
409.07 163.426 409.07 172.574 404.785 180 c 400.496 187.426 392.574 192 
384 192 c 24 192 l 17.637 192 11.531 189.473 7.031 184.969 c 2.527 180.469
 0 174.363 0 168 c f*
Q Q
showpage
%%Trailer
%%EOF
