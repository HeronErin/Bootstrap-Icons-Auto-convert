%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 2 14 94 86
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 2 14 94 86
96 96 cairo_set_page_size
%%EndPageSetup
q 2 14 92 72 rectclip
1 0 0 -1 0 96 cm q
0 g
64.234 19.766 m 58.902 18.59 53.461 18 48 18 c 31.555 18 16.34 23.293 3.977
 32.273 c 3.297 32.785 2.871 33.566 2.816 34.414 c 2.762 35.266 3.082 36.098
 3.691 36.691 c 4.773 37.75 6.469 37.879 7.699 36.988 c 19.43 28.523 33.535
 23.98 48 24 c 51.785 24 55.488 24.297 59.113 24.887 c h
48 36 m 36.57 36 25.922 39.359 17.004 45.156 c 16.281 45.645 15.82 46.434
 15.746 47.301 c 15.672 48.168 15.996 49.023 16.625 49.625 c 17.68 50.652
 19.305 50.816 20.539 50.016 c 26.902 45.938 34.098 43.336 41.598 42.395
 c h
63.574 44.426 m 68.285 39.715 l 72.074 41.164 75.645 42.977 78.996 45.156
 c 79.715 45.645 80.176 46.434 80.246 47.301 c 80.32 48.168 80 49.023 79.375
 49.625 c 78.32 50.652 76.695 50.816 75.461 50.016 c 71.758 47.648 67.766
 45.77 63.582 44.426 c h
48 60 m 53.598 54.402 l 57.805 55.008 61.887 56.301 65.676 58.223 c 67.387
 59.094 67.633 61.367 66.277 62.723 c 66.188 62.812 l 65.207 63.762 63.73
 63.977 62.52 63.355 c 58 61.145 53.031 59.996 48 60 c 77.43 30.57 m 81.91
 26.09 l 85.453 27.895 88.824 29.953 92.02 32.27 c 92.023 32.27 l 92.707
 32.777 93.129 33.562 93.184 34.414 c 93.238 35.266 92.918 36.098 92.305
 36.691 c 91.219 37.75 89.527 37.879 88.297 36.988 c 84.879 34.523 81.242
 32.375 77.43 30.57 c 54.121 70.68 m 55.551 71.52 55.535 73.465 54.359 74.641
 c 50.117 78.875 l 48.945 80.047 47.047 80.047 45.875 78.875 c 41.633 74.633
 l 40.461 73.461 40.449 71.523 41.871 70.672 c 41.875 70.676 l 43.73 69.574
 45.844 68.996 48 69 c 50.242 69 52.34 69.613 54.125 70.68 c h
80.25 11.25 m 81.492 10.008 83.508 10.008 84.75 11.25 c 85.992 12.492 85.992
 14.508 84.75 15.75 c 20.25 80.25 l 19.008 81.492 16.992 81.492 15.75 80.25
 c 14.508 79.008 14.508 76.992 15.75 75.75 c h
80.25 11.25 m f
Q Q
showpage
%%Trailer
%%EOF
