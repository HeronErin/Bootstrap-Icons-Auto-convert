%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.016 1.234 m 3.68 1.16 3.34 1.125 3 1.125 c 1.973 1.125 1.02 1.457 0.25
 2.016 c 0.16 2.086 0.152 2.215 0.23 2.293 c 0.297 2.359 0.402 2.367 0.48
 2.312 c 1.215 1.781 2.098 1.5 3 1.5 c 3.238 1.5 3.469 1.52 3.695 1.555 
c h
3 2.25 m 2.285 2.25 1.621 2.461 1.062 2.82 c 0.969 2.887 0.957 3.023 1.039
 3.102 c 1.105 3.164 1.207 3.176 1.285 3.125 c 1.68 2.871 2.133 2.707 2.602
 2.648 c h
3.973 2.777 m 4.266 2.484 l 4.504 2.574 4.727 2.688 4.934 2.824 c 4.938
 2.82 l 5.031 2.887 5.043 3.023 4.961 3.102 c 4.895 3.164 4.793 3.176 4.715
 3.125 c 4.484 2.977 4.234 2.859 3.973 2.777 c h
3 3.75 m 3.352 3.398 l 3.613 3.438 3.867 3.52 4.105 3.641 c 4.211 3.695
 4.227 3.836 4.145 3.922 c 4.141 3.926 l 4.137 3.926 l 4.074 3.984 3.984
 4 3.906 3.961 c 3.625 3.82 3.316 3.75 3 3.75 c 4.84 1.91 m 5.121 1.629 
l 5.344 1.742 5.555 1.871 5.754 2.016 c 5.75 2.016 l 5.84 2.082 5.848 2.215
 5.77 2.293 c 5.703 2.359 5.594 2.367 5.52 2.312 c 5.305 2.156 5.078 2.023
 4.84 1.91 c 3.383 4.418 m 3.473 4.469 3.473 4.594 3.398 4.664 c 3.133 4.93
 l 3.059 5.004 2.941 5.004 2.867 4.93 c 2.602 4.664 l 2.527 4.59 2.527 4.469
 2.617 4.418 c 2.734 4.348 2.867 4.312 3 4.312 c 3.141 4.312 3.27 4.352 
3.383 4.418 c h
5.016 0.703 m 5.203 0.516 5.484 0.797 5.297 0.984 c 1.266 5.016 l 1.078
 5.203 0.797 4.922 0.984 4.734 c h
5.016 0.703 m f
Q Q
showpage
%%Trailer
%%EOF
