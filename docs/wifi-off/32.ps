%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 22
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 22
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 19 rectclip
1 0 0 -1 0 24 cm q
0 g
16.059 4.941 m 14.727 4.648 13.363 4.5 12 4.5 c 7.887 4.5 4.086 5.824 0.996
 8.07 c 0.824 8.195 0.719 8.391 0.703 8.605 c 0.691 8.816 0.77 9.023 0.922
 9.172 c 1.195 9.438 1.617 9.469 1.926 9.246 c 4.855 7.133 8.383 5.996 12
 6 c 12.945 6 13.871 6.074 14.777 6.223 c h
12 9 m 9.141 9 6.48 9.84 4.25 11.289 c 4.07 11.41 3.953 11.609 3.938 11.824
 c 3.918 12.043 4 12.258 4.156 12.406 c 4.418 12.664 4.824 12.703 5.133 
12.504 c 6.727 11.484 8.523 10.832 10.398 10.598 c h
15.895 11.105 m 17.07 9.93 l 18.016 10.293 18.91 10.746 19.746 11.289 c
 19.75 11.289 l 19.93 11.41 20.043 11.609 20.062 11.824 c 20.082 12.043 
20 12.254 19.844 12.406 c 19.582 12.664 19.176 12.703 18.867 12.504 c 17.941
 11.91 16.941 11.441 15.895 11.105 c h
12 15 m 13.398 13.602 l 14.453 13.754 15.473 14.074 16.418 14.555 c 16.844
 14.773 16.906 15.34 16.566 15.68 c 16.543 15.703 l 16.547 15.703 l 16.301
 15.941 15.934 15.996 15.629 15.84 c 14.5 15.285 13.258 15 12 15 c 19.359
 7.641 m 20.48 6.52 l 21.367 6.969 22.207 7.484 23.008 8.066 c 23.004 8.066
 l 23.176 8.195 23.281 8.391 23.297 8.602 c 23.309 8.816 23.23 9.023 23.074
 9.172 c 22.805 9.438 22.383 9.469 22.074 9.246 c 21.219 8.629 20.309 8.094
 19.359 7.641 c 13.531 17.672 m 13.887 17.883 13.887 18.367 13.59 18.66 
c 12.531 19.719 l 12.238 20.012 11.762 20.012 11.469 19.719 c 10.41 18.66
 l 10.117 18.367 10.113 17.883 10.469 17.672 c 10.469 17.668 l 10.934 17.395
 11.461 17.25 12 17.25 c 12.562 17.25 13.086 17.402 13.531 17.672 c h
20.062 2.812 m 20.375 2.5 20.875 2.5 21.188 2.812 c 21.5 3.125 21.5 3.625
 21.188 3.938 c 5.062 20.062 l 4.75 20.375 4.25 20.375 3.938 20.062 c 3.625
 19.75 3.625 19.25 3.938 18.938 c h
20.062 2.812 m f
Q Q
showpage
%%Trailer
%%EOF
