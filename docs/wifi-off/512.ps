%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 11 59 373 343
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 11 59 373 343
384 384 cairo_set_page_size
%%EndPageSetup
q 11 59 362 284 rectclip
1 0 0 -1 0 384 cm q
0 g
256.945 79.055 m 235.613 74.367 213.84 72 192 72 c 126.215 72 65.352 93.168
 15.91 129.098 c 13.184 131.133 11.484 134.266 11.266 137.664 c 11.043 141.059
 12.32 144.383 14.762 146.762 c 19.102 151.008 25.867 151.516 30.793 147.961
 c 77.719 114.098 134.133 95.914 192 96 c 207.137 96 221.953 97.184 236.449
 99.551 c h
192 144 m 146.281 144 103.68 157.441 68.016 180.625 c 65.125 182.574 63.273
 185.727 62.98 189.203 c 62.688 192.676 63.984 196.098 66.504 198.504 c 
70.715 202.613 77.211 203.262 82.152 200.062 c 107.609 183.75 136.391 173.336
 166.391 169.586 c h
254.305 177.695 m 273.145 158.855 l 288.297 164.648 302.578 171.902 315.984
 180.625 c 318.859 182.586 320.699 185.738 320.992 189.203 c 321.285 192.672
 320 196.086 317.496 198.504 c 313.285 202.613 306.789 203.262 301.848 200.062
 c 287.039 190.59 271.066 183.074 254.328 177.695 c h
192 240 m 214.391 217.609 l 231.223 220.035 247.539 225.199 262.703 232.895
 c 269.543 236.375 270.527 245.469 265.102 250.895 c 264.742 251.254 l 264.742
 251.258 l 260.824 255.043 254.926 255.914 250.078 253.414 c 231.996 244.574
 212.129 239.984 192 240 c 309.719 122.281 m 327.648 104.352 l 341.824 111.566
 355.305 119.809 368.09 129.07 c 370.82 131.113 372.52 134.25 372.738 137.656
 c 372.953 141.059 371.668 144.387 369.215 146.762 c 364.875 151.008 358.109
 151.516 353.184 147.961 c 339.512 138.09 324.961 129.496 309.719 122.281
 c 216.48 282.719 m 222.191 286.078 222.145 293.855 217.441 298.559 c 200.473
 315.504 l 195.785 320.188 188.191 320.188 183.504 315.504 c 166.535 298.535
 l 161.855 293.855 161.809 286.102 167.496 282.695 c 174.914 278.305 183.379
 275.992 192 276 c 200.977 276 209.352 278.449 216.504 282.719 c h
321 45 m 325.969 40.031 334.031 40.031 339 45 c 343.969 49.969 343.969 
58.031 339 63 c 81 321 l 76.031 325.969 67.969 325.969 63 321 c 58.031 316.031
 58.031 307.969 63 303 c h
321 45 m f
Q Q
showpage
%%Trailer
%%EOF
