%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 12 23 169 169
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 12 23 169 169
192 192 cairo_set_page_size
%%EndPageSetup
q 12 23 157 146 rectclip
1 0 0 -1 0 192 cm q
0 g
138.434 168.121 m 157.594 149.016 168.348 123.059 168.312 96 c 168.348 
68.941 157.594 42.984 138.434 23.879 c 129.938 32.363 l 146.836 49.227 156.324
 72.125 156.301 96 c 156.301 120.852 146.223 143.352 129.938 159.637 c h
138.434 168.121 m f
121.453 151.152 m 136.102 136.539 144.324 116.691 144.301 96 c 144.324 
75.309 136.102 55.461 121.453 40.848 c 112.969 49.332 l 125.367 61.695 132.324
 78.492 132.301 96 c 132.332 113.512 125.379 130.312 112.98 142.68 c h
121.453 151.152 m f
120.301 96 m 120.301 110.32 114.609 124.059 104.484 134.184 c 96 125.699
 l 103.875 117.824 108.301 107.141 108.301 96 c 108.301 84.406 103.598 73.906
 96 66.301 c 104.484 57.816 l 114.609 67.941 120.301 81.68 120.301 96 c 
84 48 m 83.996 45.695 82.676 43.598 80.598 42.602 c 78.52 41.602 76.055 
41.883 74.258 43.32 c 45.898 66 l 18 66 l 14.688 66 12 68.688 12 72 c 12
 120 l 12 121.59 12.633 123.117 13.758 124.242 c 14.883 125.367 16.41 126
 18 126 c 45.898 126 l 74.254 148.68 l 74.258 148.68 l 76.055 150.117 78.52
 150.398 80.598 149.398 c 82.676 148.402 83.996 146.305 84 144 c h
51.742 76.68 m 72 60.48 l 72 131.52 l 51.742 115.32 l 50.684 114.469 49.363
 114.004 48 114 c 24 114 l 24 78 l 48 78 l 49.363 77.996 50.684 77.531 51.742
 76.68 c f
Q Q
showpage
%%Trailer
%%EOF
