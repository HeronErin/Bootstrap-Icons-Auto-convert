%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 191 1347 1345
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 191 1347 1345
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 191 1251 1154 rectclip
1 0 0 -1 0 1536 cm q
0 g
1107.457 1344.961 m 1183.359 1269.289 1243.555 1179.359 1284.578 1080.344
 c 1325.602 981.328 1346.645 875.18 1346.496 768 c 1346.645 660.82 1325.602
 554.672 1284.578 455.656 c 1243.555 356.641 1183.359 266.711 1107.457 191.039
 c 1039.488 258.91 l 1106.434 325.703 1159.527 405.055 1195.723 492.418 
c 1231.914 579.781 1250.496 673.438 1250.398 768 c 1250.398 966.816 1169.758
 1146.816 1039.488 1277.09 c h
1107.457 1344.961 m f
971.617 1209.215 m 1029.645 1151.34 1075.668 1082.566 1107.035 1006.848
 c 1138.402 931.129 1154.5 849.957 1154.398 768 c 1154.5 686.043 1138.402
 604.871 1107.035 529.152 c 1075.668 453.434 1029.645 384.66 971.617 326.785
 c 903.746 394.656 l 903.742 394.656 l 952.859 443.621 991.809 501.812 1018.352
 565.887 c 1044.891 629.957 1058.504 698.648 1058.398 768 c 1058.527 837.363
 1044.938 906.066 1018.414 970.156 c 991.887 1034.246 952.949 1092.457 903.84
 1141.441 c h
971.617 1209.215 m f
962.398 768 m 962.402 824.73 951.227 880.906 929.516 933.32 c 907.809 985.734
 875.988 1033.355 835.871 1073.473 c 768 1005.602 l 799.199 974.398 823.949
 937.355 840.832 896.586 c 857.715 855.82 866.402 812.125 866.398 768 c 
866.398 675.266 828.766 591.266 768 530.398 c 835.871 462.527 l 875.988 
502.645 907.809 550.266 929.516 602.68 c 951.227 655.094 962.402 711.27 
962.398 768 c 672 384 m 671.984 371.895 667.391 360.242 659.148 351.379 
c 650.906 342.516 639.617 337.094 627.543 336.199 c 615.473 335.305 603.508
 339.008 594.047 346.559 c 367.199 528 l 144 528 l 131.27 528 119.062 533.059
 110.059 542.059 c 101.059 551.062 96 563.27 96 576 c 96 960 l 96 972.73
 101.059 984.938 110.059 993.941 c 119.062 1002.941 131.27 1008 144 1008
 c 367.199 1008 l 594.047 1189.441 l 603.508 1196.992 615.473 1200.695 627.543
 1199.801 c 639.617 1198.906 650.906 1193.484 659.148 1184.621 c 667.391
 1175.758 671.984 1164.105 672 1152 c h
413.953 613.441 m 576 483.84 l 576 1052.16 l 413.953 922.559 l 405.457 
915.742 394.895 912.02 384 912 c 192 912 l 192 624 l 384 624 l 394.895 623.98
 405.457 620.258 413.953 613.441 c f
Q Q
showpage
%%Trailer
%%EOF
