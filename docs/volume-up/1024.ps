%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 95 674 673
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 95 674 673
768 768 cairo_set_page_size
%%EndPageSetup
q 48 95 626 578 rectclip
1 0 0 -1 0 768 cm q
0 g
553.727 672.48 m 591.68 634.645 621.777 589.68 642.289 540.172 c 662.801
 490.664 673.32 437.59 673.246 384 c 673.32 330.41 662.801 277.336 642.289
 227.828 c 621.777 178.32 591.68 133.355 553.727 95.52 c 519.742 129.457
 l 553.215 162.852 579.762 202.527 597.859 246.211 c 615.957 289.891 625.25
 336.719 625.199 384 c 625.199 483.406 584.879 573.406 519.742 638.543 c
 h
553.727 672.48 m f
485.809 604.609 m 514.824 575.668 537.832 541.281 553.52 503.422 c 569.203
 465.566 577.25 424.98 577.199 384 c 577.25 343.02 569.203 302.434 553.52
 264.578 c 537.832 226.719 514.824 192.332 485.809 163.391 c 451.871 197.328
 l 476.43 221.809 495.902 250.906 509.176 282.941 c 522.445 314.98 529.25
 349.324 529.199 384 c 529.266 418.68 522.469 453.031 509.207 485.078 c 
495.945 517.121 476.473 546.227 451.922 570.719 c h
485.809 604.609 m f
481.199 384 m 481.199 412.367 475.613 440.453 464.758 466.66 c 453.902 
492.867 437.992 516.68 417.938 536.734 c 384 502.801 l 399.602 487.199 411.973
 468.676 420.414 448.293 c 428.859 427.91 433.203 406.062 433.199 384 c 
433.199 337.633 414.383 295.633 384 265.199 c 417.938 231.262 l 417.938 
231.266 l 437.992 251.32 453.902 275.133 464.758 301.34 c 475.613 327.547
 481.199 355.633 481.199 384 c 336 192 m 335.992 185.949 333.695 180.121
 329.574 175.691 c 325.453 171.258 319.809 168.547 313.773 168.102 c 307.734
 167.652 301.754 169.504 297.023 173.281 c 183.602 264 l 72 264 l 65.637
 264 59.531 266.527 55.031 271.031 c 50.527 275.531 48 281.637 48 288 c 
48 480 l 48 486.363 50.527 492.469 55.031 496.969 c 59.531 501.473 65.637
 504 72 504 c 183.602 504 l 297.027 594.719 l 297.023 594.719 l 301.754 
598.496 307.734 600.348 313.773 599.898 c 319.809 599.453 325.453 596.742
 329.574 592.309 c 333.695 587.879 335.992 582.051 336 576 c h
206.977 306.719 m 288 241.922 l 288 526.082 l 206.977 461.281 l 202.727
 457.871 197.445 456.008 192 456 c 96 456 l 96 312 l 192 312 l 197.445 311.992
 202.727 310.129 206.977 306.719 c f
Q Q
showpage
%%Trailer
%%EOF
