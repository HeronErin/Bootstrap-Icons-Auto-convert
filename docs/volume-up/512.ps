%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 47 337 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 47 337 337
384 384 cairo_set_page_size
%%EndPageSetup
q 24 47 313 290 rectclip
1 0 0 -1 0 384 cm q
0 g
276.863 336.238 m 295.84 317.324 310.887 294.84 321.145 270.086 c 331.398
 245.332 336.66 218.793 336.625 192 c 336.66 165.207 331.398 138.668 321.145
 113.914 c 310.887 89.16 295.84 66.676 276.863 47.762 c 259.871 64.73 l 
259.871 64.727 l 276.609 81.426 289.883 101.266 298.93 123.105 c 307.98 
144.945 312.625 168.359 312.602 192 c 312.602 241.703 292.441 286.703 259.875
 319.273 c h
276.863 336.238 m f
242.902 302.305 m 272.207 273.082 288.652 233.383 288.602 192 c 288.652
 150.617 272.207 110.918 242.902 81.695 c 225.934 98.664 l 225.938 98.664
 l 250.734 123.387 264.652 156.98 264.602 192 c 264.664 227.023 250.758 
260.625 225.961 285.359 c h
242.902 302.305 m f
240.602 192 m 240.602 220.645 229.223 248.113 208.969 268.367 c 192 251.398
 l 207.754 235.645 216.602 214.277 216.602 192 c 216.602 168.816 207.195
 147.816 192 132.602 c 208.969 115.633 l 229.223 135.887 240.602 163.355
 240.602 192 c 168 96 m 167.992 91.391 165.348 87.195 161.195 85.199 c 157.043
 83.207 152.113 83.766 148.512 86.641 c 91.801 132 l 36 132 l 29.371 132
 24 137.371 24 144 c 24 240 l 24 243.184 25.266 246.234 27.516 248.484 c
 29.766 250.734 32.816 252 36 252 c 91.801 252 l 148.512 297.359 l 152.113
 300.234 157.043 300.793 161.195 298.801 c 165.348 296.805 167.992 292.609
 168 288 c h
103.488 153.359 m 144 120.961 l 144 263.039 l 103.488 230.641 l 101.363
 228.938 98.723 228.004 96 228 c 48 228 l 48 156 l 96 156 l 98.723 155.996
 101.363 155.062 103.488 153.359 c f
Q Q
showpage
%%Trailer
%%EOF
