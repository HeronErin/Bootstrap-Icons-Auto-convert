%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 4 47 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 4 47 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 4 47 380 313 rectclip
1 0 0 -1 0 384 cm q
0 g
12 72 m 12.961 92.879 l 6.648 102.094 3.742 113.219 4.754 124.344 c 20.043
 292.344 l 20.039 292.344 l 21.125 304.27 26.625 315.359 35.469 323.438 
c 44.309 331.516 55.848 335.996 67.824 336 c 216 336 l 216 312 l 67.824 
312 l 61.836 311.996 56.066 309.75 51.648 305.711 c 47.23 301.668 44.484
 296.125 43.945 290.16 c 28.656 122.16 l 28.051 115.445 30.293 108.785 34.84
 103.812 c 39.387 98.836 45.82 96 52.559 96 c 331.441 96 l 338.18 96 344.613
 98.836 349.16 103.812 c 353.707 108.785 355.949 115.445 355.344 122.16 
c 348.961 192 l 373.082 192 l 379.227 124.344 l 379.223 124.344 l 380.445
 110.918 375.961 97.594 366.871 87.637 c 357.781 77.68 344.922 72.004 331.441
 72 c 235.871 72 l 223.145 71.996 210.938 66.938 201.938 57.938 c 182.062
 38.062 l 173.062 29.062 160.855 24.004 148.129 24 c 60 24 l 47.27 24 35.062
 29.059 26.059 38.059 c 17.059 47.062 12 59.27 12 72 c 148.129 48 m 154.492
 48 160.598 50.531 165.098 55.031 c 182.062 72 l 52.559 72 l 46.766 72.031
 41.301 72.992 36.168 74.879 c 36 71.52 l 36.125 65.238 38.711 59.258 43.195
 54.859 c 47.684 50.461 53.719 48 60 48 c h
148.129 48 m f
380.496 243.504 m 382.754 245.754 384.02 248.812 384.02 252 c 384.02 255.188
 382.754 258.246 380.496 260.496 c 308.496 332.496 l 303.809 337.18 296.215
 337.18 291.527 332.496 c 255.527 296.496 l 253.273 294.246 252.008 291.191
 252.004 288.008 c 252.004 284.824 253.266 281.77 255.516 279.516 c 260.203
 274.824 267.805 274.82 272.496 279.504 c 300 307.031 l 363.504 243.504 
l 365.754 241.246 368.812 239.98 372 239.98 c 375.188 239.98 378.246 241.246
 380.496 243.504 c f
Q Q
showpage
%%Trailer
%%EOF
