%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 9 95 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 9 95 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 9 95 759 625 rectclip
1 0 0 -1 0 768 cm q
0 g
24 144 m 25.922 185.762 l 13.293 204.188 7.488 226.441 9.504 248.688 c 
40.078 584.688 l 42.246 608.539 53.254 630.719 70.934 646.875 c 88.617 663.027
 111.699 671.992 135.648 672 c 432 672 l 432 624 l 135.648 624 l 123.672
 623.988 112.137 619.5 103.297 611.422 c 94.461 603.34 88.965 592.246 87.887
 580.32 c 57.312 244.32 l 56.098 230.895 60.59 217.574 69.684 207.621 c 
78.777 197.668 91.637 192 105.121 192 c 662.883 192 l 662.879 192 l 676.363
 192 689.223 197.668 698.316 207.621 c 707.41 217.574 711.902 230.895 710.688
 244.32 c 697.922 384 l 746.16 384 l 758.449 248.688 l 760.887 221.832 751.922
 195.191 733.742 175.277 c 715.562 155.363 689.844 144.012 662.879 144 c
 471.742 144 l 446.285 143.996 421.871 133.875 403.871 115.871 c 364.129
 76.129 l 346.129 58.125 321.715 48.004 296.258 48 c 120 48 l 94.539 48 
70.121 58.113 52.117 76.117 c 34.113 94.121 24 118.539 24 144 c 296.258 
96 m 308.984 96.004 321.191 101.062 330.191 110.062 c 364.129 144 l 105.121
 144 l 93.535 144.062 82.609 145.984 72.336 149.762 c 72 143.039 l 72.25
 130.477 77.418 118.512 86.395 109.719 c 95.367 100.922 107.434 95.996 120
 96 c h
296.258 96 m f
760.992 487.008 m 765.508 491.512 768.043 497.625 768.043 504 c 768.043
 510.375 765.508 516.488 760.992 520.992 c 616.992 664.992 l 612.492 669.492
 606.387 672.02 600.023 672.02 c 593.66 672.02 587.559 669.492 583.055 664.992
 c 511.055 592.992 l 506.551 588.492 504.016 582.387 504.012 576.016 c 504.008
 569.648 506.531 563.539 511.031 559.031 c 515.531 554.527 521.637 551.992
 528.008 551.988 c 534.375 551.98 540.484 554.508 544.992 559.008 c 600 
614.062 l 727.008 487.008 l 731.512 482.492 737.625 479.957 744 479.957 
c 750.375 479.957 756.488 482.492 760.992 487.008 c f
Q Q
showpage
%%Trailer
%%EOF
