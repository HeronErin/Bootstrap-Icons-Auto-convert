%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 288 384 rectclip
1 0 0 -1 0 384 cm q
0 g
150 84 m 150 77.57 146.57 71.625 141 68.41 c 135.43 65.195 128.57 65.195
 123 68.41 c 117.43 71.625 114 77.57 114 84 c 114 132 l 114 138.43 117.43
 144.375 123 147.59 c 128.57 150.805 135.43 150.805 141 147.59 c 146.57 
144.375 150 138.43 150 132 c h
198 84 m 198 77.57 194.57 71.625 189 68.41 c 183.43 65.195 176.57 65.195
 171 68.41 c 165.43 71.625 162 77.57 162 84 c 162 132 l 162 138.43 165.43
 144.375 171 147.59 c 176.57 150.805 183.43 150.805 189 147.59 c 194.57 
144.375 198 138.43 198 132 c h
246 84 m 246 77.57 242.57 71.625 237 68.41 c 231.43 65.195 224.57 65.195
 219 68.41 c 213.43 71.625 210 77.57 210 84 c 210 132 l 210 138.43 213.43
 144.375 219 147.59 c 224.57 150.805 231.43 150.805 237 147.59 c 242.57 
144.375 246 138.43 246 132 c h
294 84 m 294 77.57 290.57 71.625 285 68.41 c 279.43 65.195 272.57 65.195
 267 68.41 c 261.43 71.625 258 77.57 258 84 c 258 132 l 258 138.43 261.43
 144.375 267 147.59 c 272.57 150.805 279.43 150.805 285 147.59 c 290.57 
144.375 294 138.43 294 132 c h
294 84 m f
141.938 0 m 300 0 l 309.547 0 318.703 3.793 325.457 10.543 c 332.207 17.297
 336 26.453 336 36 c 336 348 l 336 357.547 332.207 366.703 325.457 373.457
 c 318.703 380.207 309.547 384 300 384 c 84 384 l 74.453 384 65.297 380.207
 58.543 373.457 c 51.793 366.703 48 357.547 48 348 c 48 93.938 l 48 84.387
 51.793 75.219 58.559 68.496 c 116.473 10.535 l 123.227 3.785 132.387 -0.004
 141.938 0 c 312 36 m 312 32.816 310.734 29.766 308.484 27.516 c 306.234
 25.266 303.184 24 300 24 c 141.938 24 l 138.758 24 135.715 25.262 133.465
 27.504 c 75.504 85.465 l 73.262 87.715 72 90.758 72 93.938 c 72 348 l 72
 351.184 73.266 354.234 75.516 356.484 c 77.766 358.734 80.816 360 84 360
 c 300 360 l 303.184 360 306.234 358.734 308.484 356.484 c 310.734 354.234
 312 351.184 312 348 c h
312 36 m f*
Q Q
showpage
%%Trailer
%%EOF
