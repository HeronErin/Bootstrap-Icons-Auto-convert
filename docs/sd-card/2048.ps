%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
600 336 m 600 310.277 586.277 286.508 564 273.645 c 541.723 260.785 514.277
 260.785 492 273.645 c 469.723 286.508 456 310.277 456 336 c 456 528 l 456
 553.723 469.723 577.492 492 590.355 c 514.277 603.215 541.723 603.215 564
 590.355 c 586.277 577.492 600 553.723 600 528 c h
792 336 m 792 310.277 778.277 286.508 756 273.645 c 733.723 260.785 706.277
 260.785 684 273.645 c 661.723 286.508 648 310.277 648 336 c 648 528 l 648
 553.723 661.723 577.492 684 590.355 c 706.277 603.215 733.723 603.215 756
 590.355 c 778.277 577.492 792 553.723 792 528 c h
984 336 m 984 310.277 970.277 286.508 948 273.645 c 925.723 260.785 898.277
 260.785 876 273.645 c 853.723 286.508 840 310.277 840 336 c 840 528 l 840
 553.723 853.723 577.492 876 590.355 c 898.277 603.215 925.723 603.215 948
 590.355 c 970.277 577.492 984 553.723 984 528 c h
1176 336 m 1176 310.277 1162.277 286.508 1140 273.645 c 1117.723 260.785
 1090.277 260.785 1068 273.645 c 1045.723 286.508 1032 310.277 1032 336 
c 1032 528 l 1032 553.723 1045.723 577.492 1068 590.355 c 1090.277 603.215
 1117.723 603.215 1140 590.355 c 1162.277 577.492 1176 553.723 1176 528 
c h
1176 336 m f
567.742 0 m 1200 0 l 1238.191 0 1274.816 15.172 1301.824 42.176 c 1328.828
 69.184 1344 105.809 1344 144 c 1344 1392 l 1344 1430.191 1328.828 1466.816
 1301.824 1493.824 c 1274.816 1520.828 1238.191 1536 1200 1536 c 336 1536
 l 297.809 1536 261.184 1520.828 234.176 1493.824 c 207.172 1466.816 192
 1430.191 192 1392 c 192 375.742 l 192 337.535 207.168 300.863 234.238 273.98
 c 465.887 42.145 l 492.906 15.145 529.547 -0.016 567.742 0 c 1248 144 m
 1248 131.27 1242.941 119.062 1233.941 110.059 c 1224.938 101.059 1212.73
 96 1200 96 c 567.742 96 l 555.039 96.004 542.852 101.043 533.855 110.016
 c 302.016 341.855 l 293.043 350.852 288.004 363.039 288 375.742 c 288 1392
 l 288 1404.73 293.059 1416.938 302.059 1425.941 c 311.062 1434.941 323.27
 1440 336 1440 c 1200 1440 l 1212.73 1440 1224.938 1434.941 1233.941 1425.941
 c 1242.941 1416.938 1248 1404.73 1248 1392 c h
1248 144 m f*
Q Q
showpage
%%Trailer
%%EOF
