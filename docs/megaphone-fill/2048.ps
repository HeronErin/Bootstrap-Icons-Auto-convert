%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 86 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 86 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 86 1536 1354 rectclip
1 0 0 -1 0 1536 cm q
0 g
1248 240 m 1248 188.555 1275.445 141.016 1320 115.293 c 1364.555 89.57 
1419.445 89.57 1464 115.293 c 1508.555 141.016 1536 188.555 1536 240 c 1536
 1296 l 1536 1347.445 1508.555 1394.984 1464 1420.707 c 1419.445 1446.43
 1364.555 1446.43 1320 1420.707 c 1275.445 1394.984 1248 1347.445 1248 1296
 c h
1152 309.504 m 953.566 400.703 716.258 451.68 480 468.48 c 480 1067.234
 l 480 1067.23 l 514.871 1069.191 549.695 1071.914 584.449 1075.391 c 781.539
 1094.977 972.098 1139.52 1152 1225.152 c h
384 1062.238 m 384 473.664 l 318.719 476.258 249.695 477.793 191.23 478.754
 c 140.383 479.457 91.848 500.105 56.078 536.254 c 20.312 572.398 0.172 
621.148 0 672 c 0 864 l 0 970.176 86.016 1055.617 191.426 1056.863 c 239.043
 1057.633 l 239.039 1057.633 l 287.375 1058.598 335.699 1060.133 384 1062.238
 c 517.441 1166.016 m 544.832 1168.062 572.035 1170.559 599.043 1173.504
 c 623.332 1335.742 l 623.328 1335.742 l 628.68 1363.855 621.211 1392.887
 602.961 1414.926 c 584.707 1436.965 557.574 1449.715 528.961 1449.695 c
 476.352 1449.695 l 457.691 1449.695 439.438 1444.254 423.82 1434.043 c 
408.203 1423.828 395.898 1409.285 388.414 1392.191 c 262.27 1154.113 l 262.273
 1154.113 l 316.441 1155.465 370.59 1157.512 424.703 1160.258 c 456.129 
1161.922 487.039 1163.844 517.438 1166.02 c f
Q Q
showpage
%%Trailer
%%EOF
