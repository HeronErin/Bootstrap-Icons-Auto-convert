%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 43 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 43 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 43 768 677 rectclip
1 0 0 -1 0 768 cm q
0 g
624 120 m 624 94.277 637.723 70.508 660 57.645 c 682.277 44.785 709.723
 44.785 732 57.645 c 754.277 70.508 768 94.277 768 120 c 768 648 l 768 673.723
 754.277 697.492 732 710.355 c 709.723 723.215 682.277 723.215 660 710.355
 c 637.723 697.492 624 673.723 624 648 c h
576 154.754 m 476.785 200.355 358.129 225.844 240 234.242 c 240 533.617
 l 257.438 534.598 274.848 535.957 292.223 537.695 c 390.766 547.488 486.047
 569.758 576 612.574 c h
192 531.121 m 192 236.832 l 159.359 238.129 124.848 238.895 95.617 239.375
 c 70.191 239.727 45.926 250.055 28.039 268.125 c 10.156 286.199 0.086 310.574
 0 336 c 0 432 l 0 485.09 43.008 527.809 95.711 528.434 c 119.52 528.816
 l 143.688 529.297 167.852 530.066 192 531.121 c 258.719 583.008 m 272.414
 584.031 286.016 585.281 299.52 586.75 c 311.664 667.871 l 314.34 681.926
 310.605 696.445 301.48 707.465 c 292.355 718.484 278.789 724.855 264.48
 724.848 c 238.176 724.848 l 228.848 724.848 219.719 722.129 211.91 717.02
 c 204.102 711.914 197.949 704.645 194.207 696.098 c 131.137 577.059 l 131.137
 577.055 l 158.219 577.734 185.293 578.758 212.352 580.129 c 228.062 580.961
 243.52 581.922 258.719 583.008 c f
Q Q
showpage
%%Trailer
%%EOF
