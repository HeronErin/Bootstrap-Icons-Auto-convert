%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
51 30.203 m 51 36.805 l 56.719 33.504 l 59.719 38.707 l 54 42 l 59.719 
45.301 l 56.719 50.496 l 51 47.195 l 51 53.797 l 45 53.797 l 45 47.195 l
 39.281 50.496 l 36.281 45.301 l 42 42 l 36.281 38.699 l 39.281 33.504 l
 45 36.805 l 45 30.203 l h
79.5 54 m 78.672 54 78 54.672 78 55.5 c 78 58.5 l 78 59.328 78.672 60 79.5
 60 c 82.5 60 l 82.898 60 83.281 59.844 83.562 59.562 c 83.844 59.281 84
 58.898 84 58.5 c 84 55.5 l 84 55.102 83.844 54.719 83.562 54.438 c 83.281
 54.156 82.898 54 82.5 54 c h
78 67.5 m 78 66.672 78.672 66 79.5 66 c 82.5 66 l 82.898 66 83.281 66.156
 83.562 66.438 c 83.844 66.719 84 67.102 84 67.5 c 84 70.5 l 84 70.898 83.844
 71.281 83.562 71.562 c 83.281 71.844 82.898 72 82.5 72 c 79.5 72 l 78.672
 72 78 71.328 78 70.5 c h
79.5 78 m 78.672 78 78 78.672 78 79.5 c 78 82.5 l 78 83.328 78.672 84 79.5
 84 c 82.5 84 l 82.898 84 83.281 83.844 83.562 83.562 c 83.844 83.281 84
 82.898 84 82.5 c 84 79.5 l 84 79.102 83.844 78.719 83.562 78.438 c 83.281
 78.156 82.898 78 82.5 78 c h
13.5 54 m 12.672 54 12 54.672 12 55.5 c 12 58.5 l 12 59.328 12.672 60 13.5
 60 c 16.5 60 l 16.898 60 17.281 59.844 17.562 59.562 c 17.844 59.281 18
 58.898 18 58.5 c 18 55.5 l 18 55.102 17.844 54.719 17.562 54.438 c 17.281
 54.156 16.898 54 16.5 54 c h
13.5 66 m 12.672 66 12 66.672 12 67.5 c 12 70.5 l 12 71.328 12.672 72 13.5
 72 c 16.5 72 l 16.898 72 17.281 71.844 17.562 71.562 c 17.844 71.281 18
 70.898 18 70.5 c 18 67.5 l 18 67.102 17.844 66.719 17.562 66.438 c 17.281
 66.156 16.898 66 16.5 66 c h
12 79.5 m 12 78.672 12.672 78 13.5 78 c 16.5 78 l 16.898 78 17.281 78.156
 17.562 78.438 c 17.844 78.719 18 79.102 18 79.5 c 18 82.5 l 18 82.898 17.844
 83.281 17.562 83.562 c 17.281 83.844 16.898 84 16.5 84 c 13.5 84 l 12.672
 84 12 83.328 12 82.5 c h
12 79.5 m f
30 6 m 30 2.688 32.688 0 36 0 c 60 0 l 61.59 0 63.117 0.633 64.242 1.758
 c 65.367 2.883 66 4.41 66 6 c 66 12 l 67.59 12 69.117 12.633 70.242 13.758
 c 71.367 14.883 72 16.41 72 18 c 72 42 l 90 42 l 91.59 42 93.117 42.633
 94.242 43.758 c 95.367 44.883 96 46.41 96 48 c 96 90 l 96 91.59 95.367 
93.117 94.242 94.242 c 93.117 95.367 91.59 96 90 96 c 6 96 l 2.688 96 0 
93.312 0 90 c 0 48 l 0 44.688 2.688 42 6 42 c 24 42 l 24 18 l 24 14.688 
26.688 12 30 12 c h
42 90 m 54 90 l 54 72 l 42 72 l h
60 90 m 66 90 l 66 18 l 30 18 l 30 90 l 36 90 l 36 72 l 36 68.688 38.688
 66 42 66 c 54 66 l 55.59 66 57.117 66.633 58.242 67.758 c 59.367 68.883
 60 70.41 60 72 c h
60 6 m 36 6 l 36 12 l 60 12 l h
72 48 m 72 90 l 90 90 l 90 48 l h
24 90 m 24 48 l 6 48 l 6 90 l h
24 90 m f
Q Q
showpage
%%Trailer
%%EOF
