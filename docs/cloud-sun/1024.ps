%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:23 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 720 rectclip
1 0 0 -1 0 768 cm q
0 g
336 384 m 365.789 383.996 395.047 391.914 420.77 406.941 c 446.492 421.973
 467.758 443.57 482.383 469.523 c 497.008 495.477 504.469 524.852 504 554.641
 c 503.887 562.117 507.266 569.223 513.137 573.852 c 519.012 578.484 526.707
 580.113 533.953 578.258 c 555.52 572.73 578.43 577.473 596.031 591.105 
c 613.633 604.738 623.957 625.734 624 648 c 624 667.094 616.414 685.41 602.91
 698.91 c 589.41 712.414 571.094 720 552 720 c 144 720 l 118.219 719.855
 93.578 709.344 75.629 690.836 c 57.68 672.328 47.926 647.375 48.57 621.602
 c 49.219 595.828 60.203 571.395 79.055 553.805 c 97.906 536.219 123.043
 526.953 148.801 528.098 c 154.332 528.379 159.789 526.742 164.25 523.465
 c 168.715 520.184 171.902 515.461 173.281 510.098 c 182.574 474.008 203.605
 442.031 233.062 419.207 c 262.523 396.379 298.734 383.992 336 384 c 550.703
 528 m 545.305 479.336 523.527 433.949 488.949 399.281 c 454.371 364.613
 409.039 342.727 360.387 337.203 c 311.738 331.68 262.652 342.848 221.184
 368.883 c 179.711 394.914 148.316 434.266 132.145 480.48 c 82.25 484.562
 38.059 514.27 15.434 558.926 c -7.188 603.582 -4.996 656.785 21.227 699.43
 c 47.449 742.074 93.938 768.039 144 768 c 552 768 l 594.871 768 634.488
 745.129 655.922 708 c 677.359 670.871 677.359 625.129 655.922 588 c 634.488
 550.871 594.871 528 552 528 c h
550.703 528 m f
504 72 m 504 63.426 499.426 55.504 492 51.215 c 484.574 46.93 475.426 46.93
 468 51.215 c 460.574 55.504 456 63.426 456 72 c 456 120 l 456 128.574 460.574
 136.496 468 140.785 c 475.426 145.07 484.574 145.07 492 140.785 c 499.426
 136.496 504 128.574 504 120 c h
683.664 166.273 m 688.293 161.801 690.934 155.656 690.988 149.219 c 691.047
 142.781 688.512 136.59 683.961 132.039 c 679.41 127.488 673.219 124.953
 666.781 125.012 c 660.344 125.066 654.199 127.707 649.727 132.336 c 615.742
 166.273 l 609.672 172.344 607.301 181.191 609.523 189.484 c 611.746 197.777
 618.223 204.254 626.516 206.477 c 634.809 208.699 643.656 206.328 649.727
 200.258 c h
310.273 132.336 m 304.176 126.449 295.426 124.211 287.254 126.453 c 279.078
 128.695 272.695 135.078 270.453 143.254 c 268.211 151.426 270.449 160.176
 276.336 166.273 c 310.273 200.258 l 316.344 206.328 325.191 208.699 333.484
 206.477 c 341.777 204.254 348.254 197.777 350.477 189.484 c 352.699 181.191
 350.328 172.344 344.258 166.273 c h
393.504 294.289 m 405.574 269.273 427.887 250.715 454.68 243.398 c 481.473
 236.082 510.121 240.73 533.227 256.141 c 556.332 271.551 571.633 296.211
 575.18 323.758 c 578.723 351.305 570.164 379.035 551.711 399.793 c 561.312
 413.328 569.566 427.695 576.48 442.898 c 576.48 442.895 l 609.445 413.113
 626.816 369.781 623.551 325.477 c 620.289 281.168 596.758 240.848 559.789
 216.215 c 522.82 191.582 476.547 185.391 434.402 199.441 c 392.254 213.488
 358.953 246.207 344.16 288.098 c 361.09 288.641 377.535 290.707 393.504
 294.289 c 608.734 489.84 m 637.535 500.16 662.734 518.16 681.789 541.297
 c 681.793 541.297 l 687.078 537.016 690.297 530.695 690.656 523.906 c 691.012
 517.113 688.473 510.488 683.664 505.68 c 649.727 471.742 l 645.141 467.129
 638.871 464.574 632.363 464.668 c 625.855 464.762 619.664 467.492 615.207
 472.238 c 610.754 476.984 608.418 483.34 608.734 489.84 c 696 312 m 687.426
 312 679.504 316.574 675.215 324 c 670.93 331.426 670.93 340.574 675.215
 348 c 679.504 355.426 687.426 360 696 360 c 744 360 l 752.574 360 760.496
 355.426 764.785 348 c 769.07 340.574 769.07 331.426 764.785 324 c 760.496
 316.574 752.574 312 744 312 c h
696 312 m f
Q Q
showpage
%%Trailer
%%EOF
