%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.625 3 m 2.977 3 3.312 3.141 3.559 3.391 c 3.809 3.641 3.941 3.98 3.938
 4.332 c 3.938 4.457 4.051 4.547 4.172 4.52 c 4.34 4.473 4.52 4.512 4.656
 4.617 c 4.793 4.723 4.875 4.887 4.875 5.062 c 4.875 5.375 4.625 5.625 4.312
 5.625 c 1.125 5.625 l 0.922 5.625 0.73 5.543 0.59 5.398 c 0.449 5.254 0.375
 5.059 0.379 4.855 c 0.383 4.656 0.469 4.465 0.617 4.328 c 0.766 4.188 0.961
 4.117 1.164 4.125 c 1.25 4.129 1.332 4.07 1.355 3.984 c 1.504 3.406 2.027
 3 2.625 3 c 4.301 4.125 m 4.215 3.344 3.598 2.723 2.816 2.633 c 2.031 2.547
 1.293 3.012 1.031 3.754 c 0.43 3.805 -0.023 4.316 0 4.922 c 0.023 5.523
 0.52 6 1.125 6 c 4.312 6 l 4.832 6 5.25 5.582 5.25 5.062 c 5.25 4.543 4.832
 4.125 4.312 4.125 c h
4.301 4.125 m f
3.938 0.562 m 3.938 0.312 3.562 0.312 3.562 0.562 c 3.562 0.938 l 3.562
 1.188 3.938 1.188 3.938 0.938 c h
5.34 1.301 m 5.418 1.227 5.418 1.105 5.344 1.031 c 5.27 0.957 5.148 0.957
 5.074 1.035 c 4.809 1.301 l 4.633 1.477 4.898 1.742 5.074 1.566 c h
2.422 1.035 m 2.426 1.035 l 2.246 0.863 1.988 1.121 2.16 1.301 c 2.426 
1.566 l 2.602 1.742 2.867 1.477 2.691 1.301 c h
3.07 2.301 m 3.074 2.301 l 3.168 2.105 3.344 1.957 3.551 1.902 c 3.762 
1.844 3.984 1.879 4.164 2 c 4.348 2.121 4.465 2.312 4.492 2.531 c 4.52 2.746
 4.453 2.961 4.309 3.125 c 4.383 3.23 4.449 3.344 4.504 3.461 c 4.762 3.227
 4.898 2.891 4.871 2.543 c 4.848 2.195 4.664 1.883 4.375 1.688 c 4.086 1.496
 3.723 1.449 3.395 1.559 c 3.066 1.668 2.805 1.922 2.688 2.25 c 2.82 2.254
 2.949 2.27 3.074 2.297 c 4.754 3.824 m 4.98 3.906 5.176 4.047 5.324 4.227
 c 5.328 4.23 l 5.414 4.16 5.418 4.031 5.34 3.949 c 5.074 3.684 l 4.953 
3.562 4.746 3.656 4.754 3.828 c 5.438 2.438 m 5.188 2.438 5.188 2.812 5.438
 2.812 c 5.812 2.812 l 6.062 2.812 6.062 2.438 5.812 2.438 c h
5.438 2.438 m f
Q Q
showpage
%%Trailer
%%EOF
