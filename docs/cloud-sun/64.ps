%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:20 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 45 rectclip
1 0 0 -1 0 48 cm q
0 g
21 24 m 23.812 24 26.508 25.129 28.484 27.133 c 30.457 29.137 31.543 31.852
 31.5 34.664 c 31.492 35.133 31.703 35.578 32.07 35.867 c 32.438 36.156 
32.918 36.258 33.371 36.141 c 34.719 35.797 36.152 36.094 37.254 36.945 
c 38.352 37.797 38.996 39.109 39 40.5 c 39 42.984 36.984 45 34.5 45 c 9 
45 l 7.387 44.992 5.848 44.336 4.727 43.176 c 3.605 42.02 2.996 40.461 3.035
 38.852 c 3.074 37.238 3.762 35.711 4.941 34.613 c 6.121 33.512 7.691 32.934
 9.301 33.008 c 10.012 33.043 10.652 32.57 10.828 31.883 c 12.023 27.242
 16.211 24 21 24 c 34.418 33 m 33.723 26.734 28.785 21.785 22.523 21.074
 c 16.262 20.363 10.34 24.082 8.258 30.031 c 3.445 30.426 -0.199 34.547 
0 39.371 c 0.199 44.195 4.172 48.004 9 48 c 34.5 48 l 38.641 48 42 44.641
 42 40.5 c 42 36.359 38.641 33 34.5 33 c h
34.418 33 m f
31.5 4.5 m 31.5 3.672 30.828 3 30 3 c 29.172 3 28.5 3.672 28.5 4.5 c 28.5
 7.5 l 28.5 8.328 29.172 9 30 9 c 30.828 9 31.5 8.328 31.5 7.5 c h
42.73 10.391 m 43.02 10.113 43.184 9.727 43.188 9.324 c 43.191 8.922 43.031
 8.535 42.746 8.254 c 42.465 7.969 42.078 7.809 41.676 7.812 c 41.273 7.816
 40.887 7.98 40.609 8.27 c 38.484 10.391 l 37.898 10.98 37.898 11.93 38.484
 12.516 c 39.07 13.102 40.02 13.102 40.609 12.516 c h
19.395 8.27 m 19.391 8.27 l 18.805 7.703 17.867 7.711 17.289 8.289 c 16.711
 8.867 16.703 9.805 17.27 10.391 c 19.391 12.516 l 19.98 13.102 20.93 13.102
 21.516 12.516 c 22.102 11.93 22.102 10.98 21.516 10.391 c h
24.598 18.391 m 24.594 18.395 l 25.348 16.828 26.742 15.668 28.418 15.211
 c 30.094 14.754 31.883 15.047 33.328 16.008 c 34.77 16.973 35.727 18.512
 35.949 20.234 c 36.172 21.957 35.637 23.691 34.48 24.988 c 35.082 25.836
 35.598 26.73 36.027 27.684 c 36.031 27.68 l 38.09 25.82 39.176 23.109 38.973
 20.344 c 38.77 17.574 37.297 15.055 34.988 13.512 c 32.676 11.973 29.785
 11.586 27.148 12.465 c 24.516 13.344 22.434 15.387 21.512 18.008 c 22.57
 18.043 23.598 18.172 24.598 18.395 c 38.051 30.617 m 39.852 31.262 41.426
 32.387 42.617 33.832 c 42.613 33.832 l 42.941 33.562 43.145 33.168 43.164
 32.742 c 43.188 32.32 43.031 31.906 42.73 31.605 c 40.609 29.484 l 40.172
 29.043 39.508 28.918 38.938 29.168 c 38.371 29.422 38.016 29.996 38.047
 30.613 c 43.5 19.5 m 42.672 19.5 42 20.172 42 21 c 42 21.828 42.672 22.5
 43.5 22.5 c 46.5 22.5 l 47.328 22.5 48 21.828 48 21 c 48 20.172 47.328 
19.5 46.5 19.5 c h
43.5 19.5 m f
Q Q
showpage
%%Trailer
%%EOF
