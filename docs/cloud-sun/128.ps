%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
42 48 m 47.629 48 53.02 50.258 56.969 54.266 c 60.914 58.277 63.09 63.703
 63 69.328 c 62.984 70.266 63.406 71.152 64.141 71.73 c 64.875 72.309 65.84
 72.516 66.742 72.281 c 69.441 71.59 72.305 72.184 74.504 73.887 c 76.703
 75.594 77.996 78.219 78 81 c 78 85.969 73.969 90 69 90 c 18 90 l 14.777
 89.98 11.695 88.668 9.453 86.355 c 7.211 84.039 5.992 80.922 6.07 77.699
 c 6.152 74.477 7.523 71.426 9.883 69.227 c 12.238 67.027 15.379 65.867 
18.602 66.012 c 20.023 66.086 21.305 65.145 21.66 63.762 c 22.82 59.25 25.449
 55.254 29.133 52.402 c 32.816 49.547 37.34 48 42 48 c 68.84 66 m 67.93 
57.828 63.352 50.516 56.395 46.133 c 49.438 41.75 40.863 40.777 33.102 43.488
 c 25.336 46.199 19.234 52.301 16.52 60.059 c 10.281 60.57 4.758 64.285 
1.93 69.867 c -0.898 75.449 -0.625 82.098 2.652 87.43 c 5.93 92.758 11.742
 96.004 18 96 c 69 96 l 74.359 96 79.312 93.141 81.992 88.5 c 84.668 83.859
 84.668 78.141 81.992 73.5 c 79.312 68.859 74.359 66 69 66 c h
68.84 66 m f
63 9 m 63 7.344 61.656 6 60 6 c 58.344 6 57 7.344 57 9 c 57 15 l 57 16.656
 58.344 18 60 18 c 61.656 18 63 16.656 63 15 c h
85.457 20.785 m 86.035 20.227 86.367 19.457 86.375 18.652 c 86.379 17.848
 86.062 17.074 85.496 16.504 c 84.926 15.938 84.152 15.621 83.348 15.625
 c 82.543 15.633 81.773 15.965 81.215 16.543 c 76.969 20.785 l 75.797 21.957
 75.797 23.859 76.969 25.031 c 78.141 26.203 80.043 26.203 81.215 25.031
 c h
38.781 16.543 m 38.785 16.543 l 37.605 15.406 35.734 15.422 34.578 16.578
 c 33.422 17.734 33.406 19.605 34.543 20.785 c 38.785 25.031 l 39.957 26.203
 41.859 26.203 43.031 25.031 c 44.203 23.859 44.203 21.957 43.031 20.785
 c h
49.184 36.785 m 49.188 36.785 l 50.695 33.66 53.484 31.34 56.836 30.426
 c 60.184 29.512 63.766 30.09 66.652 32.016 c 69.543 33.945 71.453 37.027
 71.898 40.469 c 72.34 43.914 71.27 47.379 68.965 49.973 c 70.164 51.664
 71.195 53.461 72.062 55.359 c 72.059 55.363 l 76.18 51.641 78.352 46.223
 77.945 40.684 c 77.535 35.145 74.594 30.105 69.973 27.027 c 65.352 23.949
 59.57 23.172 54.301 24.93 c 49.031 26.688 44.871 30.777 43.02 36.012 c 
45.137 36.078 47.191 36.336 49.188 36.785 c 76.09 61.23 m 79.691 62.52 82.84
 64.77 85.223 67.664 c 85.223 67.66 l 85.883 67.129 86.289 66.336 86.332
 65.488 c 86.375 64.641 86.059 63.812 85.457 63.211 c 81.215 58.969 l 80.34
 58.086 79.012 57.836 77.875 58.34 c 76.742 58.84 76.031 59.988 76.094 61.23
 c 87 39 m 85.344 39 84 40.344 84 42 c 84 43.656 85.344 45 87 45 c 93 45
 l 94.656 45 96 43.656 96 42 c 96 40.344 94.656 39 93 39 c h
87 39 m f
Q Q
showpage
%%Trailer
%%EOF
