%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 13 14 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 13 14 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 13 14 755 754 rectclip
1 0 0 -1 0 768 cm q
0 g
759.602 5.762 m 763.539 9.121 766.285 13.672 767.426 18.723 c 768.57 23.773
 768.047 29.062 765.938 33.793 c 692.496 198.434 538.273 425.953 425.379
 544.512 c 425.375 544.512 l 393.695 577.633 354.68 602.852 311.473 618.145
 c 310.609 629.039 308.594 643.969 303.793 659.809 c 294.145 691.441 271.777
 730.801 221.809 743.328 c 173.418 754.871 123.266 757.023 74.062 749.664
 c 64.926 748.156 55.91 745.992 47.09 743.184 c 38.949 740.684 31.359 736.66
 24.719 731.328 c 20.328 727.633 16.957 722.871 14.93 717.504 c 12.371 710.633
 12.438 703.062 15.121 696.238 c 19.68 684.477 30.289 678 37.25 674.543 
c 56.16 665.086 67.25 652.801 78.867 634.895 c 83.426 627.984 87.699 620.637
 92.645 612.238 c 98.262 602.734 l 105.508 590.496 113.91 576.812 124.469
 562.031 c 149.812 526.559 182.117 517.633 208.277 519.023 c 214.355 519.406
 219.926 520.176 224.98 521.328 c 227.957 513.07 231.797 503.09 236.406 
492.145 c 248.934 462.434 267.992 424.031 293.383 392.832 c 397.832 264.672
 590.023 94.945 731 3.84 c 730.992 3.84 l 735.332 1.039 740.461 -0.289 745.613
 0.059 c 750.77 0.402 755.672 2.402 759.602 5.762 c f
Q Q
showpage
%%Trailer
%%EOF
