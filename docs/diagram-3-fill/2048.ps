%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 336 m 576 297.809 591.172 261.184 618.176 234.176 c 645.184 207.172
 681.809 192 720 192 c 816 192 l 854.191 192 890.816 207.172 917.824 234.176
 c 944.828 261.184 960 297.809 960 336 c 960 432 l 960 470.191 944.828 506.816
 917.824 533.824 c 890.816 560.828 854.191 576 816 576 c 816 672 l 1344 
672 l 1356.73 672 1368.938 677.059 1377.941 686.059 c 1386.941 695.062 1392
 707.27 1392 720 c 1392 816 l 1392 833.148 1382.852 848.996 1368 857.57 
c 1353.148 866.145 1334.852 866.145 1320 857.57 c 1305.148 848.996 1296 
833.148 1296 816 c 1296 768 l 816 768 l 816 816 l 816 833.148 806.852 848.996
 792 857.57 c 777.148 866.145 758.852 866.145 744 857.57 c 729.148 848.996
 720 833.148 720 816 c 720 768 l 240 768 l 240 816 l 240 833.148 230.852
 848.996 216 857.57 c 201.148 866.145 182.852 866.145 168 857.57 c 153.148
 848.996 144 833.148 144 816 c 144 720 l 144 707.27 149.059 695.062 158.059
 686.059 c 167.062 677.059 179.27 672 192 672 c 720 672 l 720 576 l 681.809
 576 645.184 560.828 618.176 533.824 c 591.172 506.816 576 470.191 576 432
 c h
0 1104 m 0 1065.809 15.172 1029.184 42.176 1002.176 c 69.184 975.172 105.809
 960 144 960 c 240 960 l 278.191 960 314.816 975.172 341.824 1002.176 c 
368.828 1029.184 384 1065.809 384 1104 c 384 1200 l 384 1238.191 368.828
 1274.816 341.824 1301.824 c 314.816 1328.828 278.191 1344 240 1344 c 144
 1344 l 105.809 1344 69.184 1328.828 42.176 1301.824 c 15.172 1274.816 0
 1238.191 0 1200 c h
576 1104 m 576 1065.809 591.172 1029.184 618.176 1002.176 c 645.184 975.172
 681.809 960 720 960 c 816 960 l 854.191 960 890.816 975.172 917.824 1002.176
 c 944.828 1029.184 960 1065.809 960 1104 c 960 1200 l 960 1238.191 944.828
 1274.816 917.824 1301.824 c 890.816 1328.828 854.191 1344 816 1344 c 720
 1344 l 681.809 1344 645.184 1328.828 618.176 1301.824 c 591.172 1274.816
 576 1238.191 576 1200 c h
1152 1104 m 1152 1065.809 1167.172 1029.184 1194.176 1002.176 c 1221.184
 975.172 1257.809 960 1296 960 c 1392 960 l 1430.191 960 1466.816 975.172
 1493.824 1002.176 c 1520.828 1029.184 1536 1065.809 1536 1104 c 1536 1200
 l 1536 1238.191 1520.828 1274.816 1493.824 1301.824 c 1466.816 1328.828
 1430.191 1344 1392 1344 c 1296 1344 l 1257.809 1344 1221.184 1328.828 1194.176
 1301.824 c 1167.172 1274.816 1152 1238.191 1152 1200 c h
1152 1104 m f*
Q Q
showpage
%%Trailer
%%EOF
