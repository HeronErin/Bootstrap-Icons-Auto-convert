%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
144 84 m 144 74.453 147.793 65.297 154.543 58.543 c 161.297 51.793 170.453
 48 180 48 c 204 48 l 213.547 48 222.703 51.793 229.457 58.543 c 236.207
 65.297 240 74.453 240 84 c 240 108 l 240 117.547 236.207 126.703 229.457
 133.457 c 222.703 140.207 213.547 144 204 144 c 204 168 l 336 168 l 339.184
 168 342.234 169.266 344.484 171.516 c 346.734 173.766 348 176.816 348 180
 c 348 204 l 348 210.629 342.629 216 336 216 c 329.371 216 324 210.629 324
 204 c 324 192 l 204 192 l 204 204 l 204 210.629 198.629 216 192 216 c 185.371
 216 180 210.629 180 204 c 180 192 l 60 192 l 60 204 l 60 210.629 54.629
 216 48 216 c 41.371 216 36 210.629 36 204 c 36 180 l 36 173.371 41.371 
168 48 168 c 180 168 l 180 144 l 170.453 144 161.297 140.207 154.543 133.457
 c 147.793 126.703 144 117.547 144 108 c h
0 276 m 0 266.453 3.793 257.297 10.543 250.543 c 17.297 243.793 26.453 
240 36 240 c 60 240 l 69.547 240 78.703 243.793 85.457 250.543 c 92.207 
257.297 96 266.453 96 276 c 96 300 l 96 309.547 92.207 318.703 85.457 325.457
 c 78.703 332.207 69.547 336 60 336 c 36 336 l 26.453 336 17.297 332.207
 10.543 325.457 c 3.793 318.703 0 309.547 0 300 c h
144 276 m 144 266.453 147.793 257.297 154.543 250.543 c 161.297 243.793
 170.453 240 180 240 c 204 240 l 213.547 240 222.703 243.793 229.457 250.543
 c 236.207 257.297 240 266.453 240 276 c 240 300 l 240 309.547 236.207 318.703
 229.457 325.457 c 222.703 332.207 213.547 336 204 336 c 180 336 l 170.453
 336 161.297 332.207 154.543 325.457 c 147.793 318.703 144 309.547 144 300
 c h
288 276 m 288 266.453 291.793 257.297 298.543 250.543 c 305.297 243.793
 314.453 240 324 240 c 348 240 l 357.547 240 366.703 243.793 373.457 250.543
 c 380.207 257.297 384 266.453 384 276 c 384 300 l 384 309.547 380.207 318.703
 373.457 325.457 c 366.703 332.207 357.547 336 348 336 c 324 336 l 314.453
 336 305.297 332.207 298.543 325.457 c 291.793 318.703 288 309.547 288 300
 c h
288 276 m f*
Q Q
showpage
%%Trailer
%%EOF
