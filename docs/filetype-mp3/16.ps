%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 9 11.25 l 9.199 11.25 9.391 11.172 9.531 11.031 
c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
6.816 10.629 m 6.484 10.629 l 6.484 10.172 l 6.801 10.172 l 6.883 10.172
 6.969 10.152 7.043 10.117 c 7.109 10.082 7.168 10.031 7.207 9.965 c 7.246
 9.902 7.266 9.828 7.266 9.754 c 7.27 9.641 7.219 9.531 7.133 9.461 c 7.039
 9.383 6.922 9.34 6.801 9.348 c 6.738 9.344 6.672 9.355 6.613 9.379 c 6.559
 9.395 6.512 9.426 6.469 9.461 c 6.391 9.527 6.34 9.621 6.332 9.723 c 5.781
 9.723 l 5.785 9.605 5.812 9.496 5.859 9.395 c 5.906 9.293 5.973 9.207 6.062
 9.129 c 6.152 9.055 6.258 8.992 6.383 8.949 c 6.512 8.906 6.656 8.883 6.82
 8.883 c 7.031 8.883 7.211 8.914 7.363 8.98 c 7.516 9.047 7.633 9.141 7.719
 9.258 c 7.715 9.266 l 7.801 9.383 7.848 9.523 7.848 9.668 c 7.852 9.797
 7.82 9.922 7.754 10.027 c 7.652 10.195 7.484 10.316 7.293 10.359 c 7.293
 10.391 l 7.293 10.387 l 7.512 10.414 7.707 10.531 7.828 10.715 c 7.906 
10.828 7.941 10.965 7.938 11.105 c 7.938 11.246 7.91 11.375 7.852 11.484
 c 7.789 11.598 7.707 11.695 7.602 11.77 c 7.496 11.844 7.375 11.902 7.238
 11.945 c 7.102 11.984 6.957 12.004 6.801 12.004 c 6.574 12.004 6.383 11.965
 6.223 11.891 c 6.078 11.82 5.949 11.715 5.859 11.582 c 5.777 11.457 5.73
 11.309 5.727 11.16 c 6.27 11.16 l 6.277 11.23 6.305 11.297 6.348 11.352
 c 6.402 11.41 6.465 11.457 6.535 11.488 c 6.621 11.52 6.711 11.535 6.805
 11.539 c 6.902 11.539 7 11.52 7.094 11.48 c 7.168 11.445 7.234 11.387 7.281
 11.316 c 7.328 11.246 7.348 11.164 7.348 11.078 c 7.352 10.91 7.25 10.754
 7.098 10.688 c 7.008 10.645 6.914 10.625 6.816 10.629 c h
0.531 11.945 m 0.531 9.949 l 0.559 9.949 l 1.273 11.57 l 1.66 11.57 l 2.371
 9.949 l 2.398 9.949 l 2.398 11.945 l 2.934 11.945 l 2.934 8.945 l 2.332
 8.945 l 1.477 10.891 l 1.457 10.891 l 0.602 8.945 l 0 8.945 l 0 11.945 
l h
4.625 8.945 m 3.426 8.945 l 3.426 11.945 l 4.02 11.945 l 4.02 10.938 l 
4.621 10.938 l 4.836 10.938 5.02 10.895 5.172 10.809 c 5.324 10.719 5.441
 10.602 5.52 10.453 c 5.516 10.453 l 5.598 10.297 5.641 10.121 5.637 9.945
 c 5.637 9.758 5.598 9.59 5.52 9.438 c 5.438 9.289 5.32 9.164 5.172 9.078
 c 5.004 8.984 4.816 8.938 4.621 8.945 c 5.031 9.945 m 5.035 10.043 5.012
 10.141 4.969 10.23 c 4.93 10.305 4.867 10.371 4.789 10.41 c 4.703 10.453
 4.605 10.473 4.508 10.473 c 4.012 10.473 l 4.012 9.418 l 4.508 9.418 l 
4.672 9.418 4.801 9.465 4.891 9.555 c 4.984 9.645 5.027 9.777 5.027 9.945
 c f*
Q Q
showpage
%%Trailer
%%EOF
