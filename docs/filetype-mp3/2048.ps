%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1344 432 m 1344 1344 l 1344 1377.703 1335.129 1410.812 1318.277 1440 c 
1301.426 1469.188 1277.188 1493.426 1248 1510.277 c 1218.812 1527.129 1185.703
 1536 1152 1536 c 1152 1440 l 1177.461 1440 1201.879 1429.887 1219.883 1411.883
 c 1237.887 1393.879 1248 1369.461 1248 1344 c 1248 432 l 1056 432 l 1017.809
 432 981.184 416.828 954.176 389.824 c 927.172 362.816 912 326.191 912 288
 c 912 96 l 384 96 l 358.539 96 334.121 106.113 316.117 124.117 c 298.113
 142.121 288 166.539 288 192 c 288 1056 l 192 1056 l 192 192 l 192 141.078
 212.227 92.242 248.234 56.234 c 284.242 20.227 333.078 0 384 0 c 912 0 
l h
872.543 1360.32 m 830.016 1360.32 l 830.016 1301.855 l 870.527 1301.855
 l 881.242 1302.02 891.844 1299.617 901.441 1294.848 c 910.082 1290.469 
917.379 1283.836 922.559 1275.648 c 927.668 1267.496 930.211 1257.996 929.855
 1248.383 c 930.316 1233.906 924.086 1220.027 912.961 1210.754 c 901.086
 1200.863 885.969 1195.734 870.527 1196.352 c 862.289 1196.168 854.09 1197.504
 846.336 1200.289 c 839.543 1202.684 833.258 1206.328 827.809 1211.039 c
 817.754 1219.402 811.551 1231.5 810.625 1244.543 c 740.16 1244.543 l 740.734
 1229.504 744 1215.52 749.953 1202.59 c 755.969 1189.66 764.609 1178.398
 775.875 1168.797 c 787.141 1159.07 800.836 1151.484 816.965 1146.043 c 
833.285 1140.602 851.941 1137.785 872.934 1137.594 c 899.688 1137.402 922.82
 1141.625 942.34 1150.266 c 961.797 1158.906 976.898 1170.809 987.652 1185.977
 c 987.648 1185.984 l 998.605 1200.996 1004.43 1219.145 1004.258 1237.727
 c 1005.152 1253.836 1001.133 1269.84 992.734 1283.617 c 979.559 1305.23
 958.066 1320.469 933.312 1325.762 c 933.312 1329.699 l 933.312 1329.695
 l 961.285 1332.809 986.48 1348.039 1002.238 1371.359 c 1011.863 1386.223
 1016.691 1403.68 1016.062 1421.375 c 1016.254 1439.613 1012.512 1455.84
 1004.832 1470.047 c 997.234 1484.414 986.43 1496.832 973.246 1506.336 c
 959.805 1516.062 944.254 1523.551 926.59 1528.801 c 909.117 1533.922 890.461
 1536.48 870.621 1536.48 c 841.758 1536.48 817.117 1531.586 796.699 1521.793
 c 796.703 1521.793 l 777.859 1513.121 761.707 1499.523 749.953 1482.434
 c 739.438 1466.309 733.527 1447.621 732.863 1428.383 c 802.559 1428.383
 l 803.309 1437.496 806.863 1446.148 812.734 1453.152 c 819.336 1460.578
 827.5 1466.445 836.641 1470.336 c 847.574 1474.555 859.191 1476.734 870.91
 1476.77 c 883.586 1477.07 896.172 1474.578 907.777 1469.473 c 917.641 1464.945
 926.027 1457.727 931.969 1448.641 c 937.805 1439.516 940.75 1428.844 940.414
 1418.016 c 940.598 1407.434 937.652 1397.035 931.949 1388.121 c 926.242
 1379.207 918.035 1372.172 908.352 1367.902 c 897.23 1362.543 884.98 1359.941
 872.641 1360.32 c h
67.777 1528.801 m 67.777 1273.441 l 71.426 1273.441 l 162.816 1480.801 
l 212.352 1480.801 l 303.168 1273.441 l 306.816 1273.441 l 306.816 1528.801
 l 375.457 1528.801 l 375.457 1144.898 l 298.656 1144.898 l 189.215 1394.113
 l 186.719 1394.113 l 77.277 1144.898 l 0 1144.895 l 0 1528.895 l h
591.746 1144.898 m 438.145 1144.898 l 438.145 1528.898 l 514.176 1528.898
 l 514.176 1400.066 l 591.266 1400.066 l 618.785 1400.066 642.211 1394.531
 661.539 1383.457 c 680.996 1372.129 695.812 1356.93 705.988 1337.855 c 
705.984 1337.855 l 716.523 1317.84 721.84 1295.484 721.441 1272.863 c 721.441
 1248.926 716.387 1227.262 706.273 1207.871 c 696.141 1188.766 680.84 1172.898
 662.113 1162.078 c 640.672 1150.02 616.332 1144.074 591.742 1144.895 c 
644.062 1272.863 m 644.406 1285.543 641.602 1298.109 635.902 1309.441 c 
630.816 1319.238 622.887 1327.27 613.152 1332.48 c 601.969 1337.988 589.613
 1340.688 577.152 1340.352 c 513.793 1340.352 l 513.793 1205.375 l 577.152
 1205.375 l 598.145 1205.375 614.559 1211.199 626.398 1222.848 c 638.176
 1234.434 644.062 1251.105 644.062 1272.863 c f*
Q Q
showpage
%%Trailer
%%EOF
