%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 336 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 336 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 336 l 336 348.73 330.941 360.938 321.941 369.941 c 312.938
 378.941 300.73 384 288 384 c 288 360 l 294.363 360 300.469 357.473 304.969
 352.969 c 309.473 348.469 312 342.363 312 336 c 312 108 l 264 108 l 254.453
 108 245.297 104.207 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c
 228 24 l 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531 
72 41.637 72 48 c 72 264 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059
 14.059 c 71.062 5.059 83.27 0 96 0 c 228 0 l h
218.137 340.078 m 207.504 340.078 l 207.504 325.461 l 217.633 325.461 l
 217.633 325.465 l 220.312 325.504 222.961 324.902 225.359 323.711 c 227.52
 322.617 229.344 320.957 230.641 318.91 c 231.918 316.875 232.555 314.5 
232.465 312.098 c 232.578 308.477 231.02 305.008 228.238 302.688 c 225.273
 300.215 221.492 298.934 217.633 299.09 c 215.574 299.043 213.523 299.375
 211.586 300.07 c 209.887 300.672 208.312 301.582 206.953 302.762 c 204.438
 304.852 202.887 307.875 202.656 311.137 c 185.039 311.137 l 185.184 307.375
 186 303.879 187.488 300.648 c 188.992 297.418 191.152 294.602 193.969 292.199
 c 196.785 289.766 200.207 287.871 204.242 286.512 c 208.32 285.152 212.984
 284.449 218.234 284.398 c 224.922 284.352 230.707 285.406 235.586 287.566
 c 240.449 289.727 244.227 292.703 246.914 296.496 c 246.91 296.496 l 249.652
 300.25 251.105 304.785 251.062 309.434 c 251.289 313.461 250.285 317.461
 248.184 320.902 c 244.891 326.309 239.516 330.117 233.328 331.441 c 233.328
 332.426 l 240.32 333.203 246.621 337.012 250.559 342.84 c 252.965 346.555
 254.172 350.922 254.016 355.344 c 254.062 359.902 253.129 363.961 251.207
 367.512 c 249.309 371.102 246.605 374.207 243.312 376.586 c 239.953 379.02
 236.066 380.891 231.648 382.203 c 227.281 383.484 222.617 384.125 217.656
 384.125 c 210.441 384.125 204.281 382.902 199.176 380.453 c 199.176 380.449
 l 194.465 378.281 190.426 374.879 187.488 370.609 c 184.859 366.578 183.383
 361.906 183.215 357.098 c 200.641 357.098 l 200.828 359.375 201.715 361.535
 203.184 363.289 c 204.836 365.145 206.875 366.609 209.16 367.586 c 211.895
 368.637 214.797 369.184 217.727 369.191 c 220.898 369.266 224.043 368.645
 226.945 367.367 c 229.41 366.238 231.508 364.43 232.992 362.16 c 234.449
 359.879 235.188 357.211 235.105 354.504 c 235.195 349.094 232.039 344.16
 227.09 341.977 c 224.309 340.637 221.246 339.984 218.16 340.078 c h
16.945 382.199 m 16.945 318.359 l 17.855 318.359 l 40.703 370.199 l 53.086
 370.199 l 75.789 318.359 l 76.699 318.359 l 76.699 382.199 l 93.859 382.199
 l 93.859 286.223 l 74.66 286.223 l 47.301 348.527 l 46.676 348.527 l 19.316
 286.223 l 0 286.223 l 0 382.223 l h
147.938 286.223 m 109.539 286.223 l 109.539 382.223 l 128.547 382.223 l
 128.547 350.016 l 147.82 350.016 l 154.699 350.016 160.555 348.633 165.387
 345.863 c 170.25 343.031 173.953 339.23 176.5 334.465 c 176.496 334.465
 l 179.133 329.461 180.461 323.871 180.359 318.215 c 180.359 312.23 179.094
 306.816 176.566 301.969 c 174.035 297.191 170.211 293.223 165.527 290.52
 c 160.168 287.504 154.082 286.02 147.938 286.223 c 161.016 318.215 m 161.102
 321.387 160.402 324.527 158.977 327.359 c 157.703 329.809 155.723 331.816
 153.289 333.121 c 150.492 334.496 147.402 335.172 144.289 335.09 c 128.449
 335.09 l 128.449 301.348 l 144.289 301.348 l 149.535 301.348 153.641 302.805
 156.602 305.715 c 159.547 308.609 161.016 312.777 161.016 318.219 c f*
Q Q
showpage
%%Trailer
%%EOF
