%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 576 720 l 588.73 720 600.938 714.941 609.941
 705.941 c 618.941 696.938 624 684.73 624 672 c 624 216 l 528 216 l 508.906
 216 490.59 208.414 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c
 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062
 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 
124.117 28.117 c 142.121 10.113 166.539 0 192 0 c 456 0 l h
436.273 680.16 m 415.008 680.16 l 415.008 650.93 l 435.266 650.93 l 440.621
 651.008 445.922 649.809 450.719 647.426 c 455.039 645.234 458.688 641.918
 461.281 637.824 c 463.836 633.75 465.105 629 464.93 624.191 c 465.16 616.953
 462.043 610.012 456.48 605.375 c 450.543 600.434 442.984 597.867 435.266
 598.176 c 431.145 598.086 427.047 598.754 423.168 600.145 c 419.77 601.34
 416.629 603.164 413.902 605.52 c 408.879 609.699 405.773 615.75 405.312
 622.273 c 370.078 622.273 l 370.367 614.754 372 607.762 374.973 601.297
 c 377.98 594.832 382.301 589.199 387.934 584.402 c 393.566 579.539 400.414
 575.746 408.477 573.027 c 416.637 570.309 425.965 568.898 436.461 568.805
 c 449.836 568.707 461.406 570.82 471.164 575.141 c 480.891 579.461 488.445
 585.414 493.82 592.996 c 493.824 592.992 l 499.301 600.5 502.215 609.57
 502.129 618.863 c 502.574 626.918 500.566 634.918 496.367 641.809 c 489.777
 652.613 479.035 660.234 466.656 662.879 c 466.656 664.848 l 480.641 666.402
 493.242 674.02 501.121 685.68 c 505.934 693.109 508.344 701.84 508.031 
710.688 c 508.129 719.809 506.254 727.918 502.414 735.023 c 498.617 742.207
 493.215 748.414 486.625 753.168 c 479.906 758.031 472.129 761.777 463.297
 764.398 c 454.562 766.957 445.234 768.238 435.312 768.238 c 420.879 768.238
 408.559 765.789 398.352 760.895 c 388.93 756.559 380.855 749.762 374.977
 741.215 c 369.719 733.156 366.766 723.809 366.434 714.191 c 401.281 714.191
 l 401.652 718.746 403.43 723.074 406.367 726.574 c 409.668 730.289 413.75
 733.223 418.32 735.168 c 423.789 737.277 429.594 738.367 435.457 738.383
 c 441.793 738.535 448.086 737.289 453.887 734.734 c 458.82 732.473 463.016
 728.863 465.984 724.32 c 468.902 719.758 470.375 714.422 470.207 709.008
 c 470.297 703.719 468.824 698.516 465.973 694.059 c 463.121 689.602 459.02
 686.086 454.176 683.953 c 448.617 681.27 442.492 679.969 436.32 680.16 
c h
33.887 764.398 m 33.887 636.719 l 35.711 636.719 l 81.406 740.398 l 106.176
 740.398 l 151.582 636.719 l 153.406 636.719 l 153.406 764.398 l 187.727
 764.398 l 187.727 572.445 l 149.328 572.445 l 94.609 697.055 l 93.363 697.055
 l 38.645 572.445 l 0 572.449 l 0 764.449 l h
295.871 572.445 m 219.07 572.445 l 219.07 764.445 l 257.086 764.445 l 257.086
 700.031 l 295.629 700.031 l 309.391 700.031 321.102 697.262 330.766 691.727
 c 340.492 686.062 347.902 678.461 352.988 668.926 c 352.992 668.93 l 358.262
 658.918 360.922 647.742 360.719 636.434 c 360.719 624.465 358.191 613.633
 353.133 603.938 c 353.137 603.938 l 348.07 594.383 340.418 586.449 331.055
 581.039 c 320.336 575.012 308.164 572.039 295.871 572.449 c 322.031 636.434
 m 322.203 642.77 320.801 649.055 317.953 654.719 c 315.41 659.621 311.441
 663.637 306.574 666.238 c 300.984 668.992 294.805 670.344 288.574 670.176
 c 256.895 670.176 l 256.895 602.688 l 288.574 602.688 l 299.07 602.688 
307.277 605.598 313.199 611.422 c 319.086 617.215 322.031 625.551 322.031
 636.43 c f*
Q Q
showpage
%%Trailer
%%EOF
