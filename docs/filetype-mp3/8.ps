%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766 5.516 c 4.836
 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 l 3.812 1.688 
3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125 0.543
 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086 0 
1.5 0 c 3.562 0 l h
3.41 5.312 m 3.242 5.312 l 3.242 5.086 l 3.402 5.086 l 3.441 5.086 3.484
 5.078 3.52 5.059 c 3.555 5.039 3.582 5.016 3.605 4.984 c 3.625 4.949 3.633
 4.914 3.633 4.875 c 3.633 4.82 3.609 4.766 3.566 4.73 c 3.52 4.691 3.461
 4.672 3.402 4.672 c 3.367 4.672 3.336 4.68 3.305 4.688 c 3.281 4.699 3.254
 4.711 3.234 4.73 c 3.195 4.762 3.172 4.812 3.168 4.863 c 2.891 4.863 l 
2.895 4.805 2.906 4.75 2.93 4.699 c 2.953 4.648 2.988 4.605 3.031 4.566 
c 3.074 4.527 3.129 4.5 3.191 4.477 c 3.254 4.457 3.328 4.445 3.41 4.445
 c 3.516 4.445 3.605 4.461 3.68 4.496 c 3.754 4.531 3.816 4.578 3.855 4.637
 c 3.859 4.633 l 3.902 4.691 3.922 4.762 3.922 4.836 c 3.926 4.898 3.91 
4.961 3.879 5.016 c 3.828 5.098 3.742 5.156 3.645 5.18 c 3.645 5.195 l 3.754
 5.207 3.852 5.266 3.914 5.355 c 3.953 5.414 3.973 5.484 3.969 5.551 c 3.969
 5.621 3.953 5.684 3.926 5.742 c 3.895 5.797 3.852 5.848 3.801 5.883 c 3.75
 5.922 3.688 5.949 3.617 5.969 c 3.551 5.988 3.477 6 3.398 6 c 3.285 6 3.188
 5.98 3.109 5.941 c 3.113 5.945 l 3.039 5.91 2.977 5.859 2.93 5.789 c 2.887
 5.727 2.867 5.656 2.863 5.578 c 3.137 5.578 l 3.137 5.613 3.152 5.648 3.176
 5.676 c 3.199 5.707 3.23 5.727 3.27 5.742 c 3.312 5.762 3.355 5.77 3.402
 5.77 c 3.453 5.77 3.5 5.762 3.547 5.738 c 3.586 5.723 3.617 5.695 3.641
 5.66 c 3.664 5.625 3.676 5.582 3.672 5.539 c 3.676 5.453 3.625 5.379 3.547
 5.344 c 3.504 5.324 3.457 5.312 3.41 5.312 c h
0.266 5.973 m 0.266 4.977 l 0.281 4.977 l 0.637 5.785 l 0.832 5.785 l 1.188
 4.977 l 1.203 4.977 l 1.203 5.973 l 1.473 5.973 l 1.473 4.473 l 1.172 4.473
 l 0.746 5.445 l 0.738 5.445 l 0.312 4.473 l 0 4.473 l 0 5.973 l h
2.312 4.473 m 1.711 4.473 l 1.711 5.973 l 2.008 5.973 l 2.008 5.469 l 2.309
 5.469 l 2.418 5.469 2.508 5.445 2.582 5.402 c 2.656 5.359 2.715 5.297 2.754
 5.223 c 2.758 5.227 l 2.801 5.148 2.82 5.059 2.816 4.973 c 2.816 4.879 
2.797 4.793 2.758 4.719 c 2.719 4.645 2.66 4.582 2.586 4.539 c 2.504 4.492
 2.406 4.469 2.312 4.473 c 2.516 4.973 m 2.516 5.023 2.508 5.07 2.484 5.113
 c 2.465 5.152 2.434 5.184 2.395 5.203 c 2.352 5.227 2.305 5.238 2.254 5.234
 c 2.008 5.234 l 2.008 4.707 l 2.254 4.707 l 2.336 4.707 2.398 4.73 2.445
 4.773 c 2.492 4.82 2.516 4.883 2.516 4.969 c f*
Q Q
showpage
%%Trailer
%%EOF
