%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:55 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 48 471 1449 1154
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 48 471 1449 1154
1536 1536 cairo_set_page_size
%%EndPageSetup
q 48 471 1401 683 rectclip
1 0 0 -1 0 1536 cm q
0 g
211.586 1063.488 m 285.219 1063.488 326.883 1029.312 346.562 992.734 c 
352.227 992.734 l 352.223 1056 l 468.957 1056 l 468.961 721.824 l 468.961
 595.68 378.051 550.656 266.402 550.656 c 130.078 550.656 72 616.32 66.238
 697.922 c 182.973 697.922 l 189.117 666.914 213.02 644.93 263.613 644.93
 c 314.207 644.93 346.559 668.832 346.559 718.945 c 346.559 763.488 l 225.215
 763.488 l 109.922 763.488 48 822.527 48 911.617 c 48 1005.41 114.527 1063.488
 211.586 1063.488 c 251.906 972.578 m 209.668 972.578 170.785 950.02 170.785
 903.648 c 170.785 865.727 196.609 837.984 251.426 837.984 c 346.562 837.984
 l 346.562 889.633 l 346.562 937.922 303.938 972.578 251.906 972.578 c 788.836
 1062.531 m 905.57 1062.531 975.844 979.105 975.844 840.77 c 975.844 773.379
 l 975.844 635.141 906.051 552.098 790.66 552.098 c 719.43 552.098 663.172
 585.41 646.758 637.441 c 640.711 637.441 l 640.703 382.367 l 516.863 382.367
 l 516.863 1056 l 638.785 1056 l 638.785 980.062 l 644.93 980.062 l 665.09
 1031.133 719.426 1062.621 788.832 1062.621 c h
747.555 964.133 m 684.195 964.133 640.707 914.406 640.707 841.254 c 640.703
 779.52 l 640.703 700.32 681.023 650.59 746.109 650.59 c 811.773 650.59 
849.309 700.316 849.309 786.527 c 849.309 829.727 l 849.309 914.973 812.254
 964.223 747.547 964.223 c h
1019.617 836.645 m 1019.617 977.766 1103.137 1064.934 1240.898 1064.934
 c 1376.836 1064.934 1446.242 990.34 1448.066 895.688 c 1334.211 895.688
 l 1328.449 936.488 1304.164 965.961 1244.645 965.961 c 1181.285 965.961
 1143.844 916.809 1143.844 836.168 c 1143.844 776.168 l 1143.844 698.406
 1179.461 648.68 1244.164 648.68 c 1305.125 648.68 1328.547 689.48 1332.293
 723.176 c 1446.246 723.176 l 1444.324 628.52 1370.695 549.801 1240.805 
549.801 c 1105.445 549.801 1019.621 637.93 1019.621 774.25 c h
1019.617 836.645 m f
Q Q
showpage
%%Trailer
%%EOF
