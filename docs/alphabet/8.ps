%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 1 6 5
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 1 6 5
6 6 cairo_set_page_size
%%EndPageSetup
q 0 1 6 4 rectclip
1 0 0 -1 0 6 cm q
0 g
0.828 4.152 m 1.117 4.152 1.277 4.02 1.355 3.875 c 1.379 3.875 l 1.375 
4.125 l 1.832 4.125 l 1.832 2.82 l 1.832 2.328 1.477 2.152 1.039 2.152 c
 0.508 2.152 0.281 2.406 0.258 2.727 c 0.715 2.727 l 0.738 2.605 0.832 2.52
 1.031 2.52 c 1.23 2.52 1.355 2.613 1.355 2.809 c 1.355 2.984 l 0.879 2.98
 l 0.43 2.98 0.188 3.215 0.188 3.562 c 0.188 3.93 0.449 4.156 0.828 4.156
 c 0.984 3.801 m 0.82 3.801 0.668 3.711 0.668 3.531 c 0.668 3.383 0.77 3.273
 0.984 3.273 c 1.355 3.273 l 1.355 3.477 l 1.355 3.664 1.188 3.801 0.984
 3.801 c 3.082 4.152 m 3.539 4.152 3.812 3.828 3.812 3.285 c 3.812 3.023
 l 3.812 2.484 3.539 2.16 3.09 2.16 c 2.812 2.16 2.594 2.289 2.527 2.492
 c 2.504 2.492 l 2.504 1.492 l 2.02 1.492 l 2.02 4.125 l 2.496 4.125 l 2.496
 3.828 l 2.52 3.828 l 2.598 4.027 2.809 4.152 3.082 4.152 c h
2.922 3.77 m 2.676 3.77 2.504 3.574 2.504 3.289 c 2.504 3.047 l 2.504 2.738
 2.66 2.543 2.914 2.543 c 3.172 2.543 3.316 2.738 3.316 3.074 c 3.316 3.242
 l 3.316 3.574 3.172 3.766 2.918 3.766 c h
3.984 3.273 m 3.984 3.824 4.312 4.164 4.848 4.164 c 5.379 4.164 5.648 3.871
 5.656 3.504 c 5.211 3.504 l 5.188 3.664 5.094 3.777 4.859 3.777 c 4.613
 3.777 4.465 3.586 4.465 3.27 c 4.465 3.035 l 4.465 2.73 4.605 2.539 4.855
 2.539 c 5.094 2.539 5.184 2.699 5.199 2.828 c 5.645 2.828 l 5.637 2.457
 5.348 2.152 4.844 2.152 c 4.316 2.152 3.98 2.496 3.98 3.027 c h
3.984 3.273 m f
Q Q
showpage
%%Trailer
%%EOF
