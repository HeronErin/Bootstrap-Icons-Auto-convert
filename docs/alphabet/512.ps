%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 12 117 363 289
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 12 117 363 289
384 384 cairo_set_page_size
%%EndPageSetup
q 12 117 351 172 rectclip
1 0 0 -1 0 384 cm q
0 g
52.895 265.871 m 71.301 265.871 81.719 257.328 86.637 248.184 c 88.051 
248.184 l 88.055 264 l 117.238 264 l 117.238 180.457 l 117.238 148.922 94.512
 137.664 66.598 137.664 c 32.52 137.664 18 154.078 16.559 174.48 c 45.742
 174.48 l 47.277 166.727 53.254 161.234 65.902 161.234 c 78.551 161.234 
86.637 167.211 86.637 179.738 c 86.637 190.875 l 56.305 190.871 l 27.48 
190.871 12 205.633 12 227.902 c 12 251.352 28.633 265.871 52.895 265.871
 c 62.973 243.145 m 52.414 243.145 42.691 237.504 42.691 225.914 c 42.691
 216.434 49.148 209.5 62.852 209.5 c 86.637 209.5 l 86.637 222.41 l 86.637
 234.48 75.98 243.145 62.973 243.145 c 197.203 265.633 m 226.387 265.633
 243.957 244.777 243.957 210.191 c 243.957 193.344 l 243.957 158.785 226.508
 138.023 197.66 138.023 c 179.852 138.023 165.789 146.352 161.684 159.359
 c 160.172 159.359 l 160.176 95.594 l 129.215 95.594 l 129.215 264 l 159.695
 264 l 159.695 245.016 l 161.23 245.016 l 166.27 257.785 179.855 265.656
 197.207 265.656 c h
186.883 241.031 m 171.043 241.031 160.172 228.598 160.172 210.312 c 160.176
 194.879 l 160.176 175.078 170.254 162.648 186.527 162.648 c 202.941 162.648
 212.328 175.082 212.328 196.633 c 212.328 207.434 l 212.328 228.746 203.062
 241.059 186.887 241.059 c h
254.898 209.16 m 254.898 244.441 275.777 266.23 310.219 266.23 c 344.203
 266.23 361.555 247.582 362.012 223.918 c 333.547 223.918 l 332.105 234.117
 326.035 241.484 311.156 241.484 c 295.316 241.484 285.957 229.195 285.957
 209.035 c 285.957 194.035 l 285.957 174.594 294.859 162.164 311.035 162.164
 c 326.273 162.164 332.133 172.363 333.066 180.789 c 361.555 180.789 l 361.074
 157.125 342.668 137.445 310.195 137.445 c 276.355 137.445 254.898 159.477
 254.898 193.559 c h
254.898 209.16 m f
Q Q
showpage
%%Trailer
%%EOF
