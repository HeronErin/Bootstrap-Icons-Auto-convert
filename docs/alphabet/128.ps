%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 3 29 91 73
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 3 29 91 73
96 96 cairo_set_page_size
%%EndPageSetup
q 3 29 88 44 rectclip
1 0 0 -1 0 96 cm q
0 g
13.223 66.469 m 17.824 66.469 20.43 64.332 21.66 62.047 c 22.016 62.047
 l 22.016 66 l 29.312 66 l 29.309 45.113 l 29.309 37.23 23.625 34.414 16.648
 34.414 c 8.129 34.414 4.5 38.52 4.141 43.621 c 11.438 43.621 l 11.82 41.684
 13.316 40.309 16.477 40.309 c 19.637 40.309 21.66 41.801 21.66 44.934 c
 21.66 47.719 l 14.074 47.719 l 6.871 47.719 3 51.406 3 56.977 c 3 62.84
 7.156 66.469 13.223 66.469 c 15.742 60.785 m 13.102 60.785 10.672 59.375
 10.672 56.477 c 10.672 54.105 12.285 52.371 15.711 52.371 c 21.656 52.371
 l 21.656 55.598 l 21.656 58.617 18.992 60.781 15.742 60.781 c 49.301 66.402
 m 56.598 66.402 60.988 61.188 60.988 52.543 c 60.988 48.332 l 60.988 39.691
 56.625 34.504 49.414 34.504 c 44.961 34.504 41.445 36.586 40.422 39.84 
c 40.043 39.84 l 40.043 23.898 l 32.305 23.898 l 32.305 66 l 39.926 66 l
 39.926 61.254 l 40.309 61.254 l 41.57 64.445 44.965 66.414 49.301 66.414
 c h
46.723 60.254 m 42.762 60.254 40.043 57.145 40.043 52.574 c 40.043 48.719
 l 40.043 43.77 42.562 40.66 46.633 40.66 c 50.738 40.66 53.082 43.77 53.082
 49.156 c 53.082 51.855 l 53.082 57.184 50.766 60.262 46.723 60.262 c h
63.727 52.285 m 63.727 61.105 68.945 66.555 77.555 66.555 c 86.051 66.555
 90.391 61.895 90.504 55.977 c 83.387 55.977 l 83.027 58.527 81.508 60.367
 77.789 60.367 c 73.828 60.367 71.488 57.297 71.488 52.254 c 71.488 48.504
 l 71.488 43.645 73.715 40.535 77.758 40.535 c 81.566 40.535 83.031 43.086
 83.266 45.191 c 90.387 45.191 l 90.266 39.277 85.664 34.355 77.547 34.355
 c 69.086 34.355 63.723 39.863 63.723 48.383 c h
63.727 52.285 m f
Q Q
showpage
%%Trailer
%%EOF
