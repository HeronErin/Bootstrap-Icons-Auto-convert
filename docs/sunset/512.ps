%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 84 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 84 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 84 384 276 rectclip
1 0 0 -1 0 384 cm q
0 g
183.504 116.496 m 185.754 118.754 188.812 120.02 192 120.02 c 195.188 120.02
 198.246 118.754 200.496 116.496 c 236.496 80.496 l 241.188 75.805 241.188
 68.195 236.496 63.504 c 231.805 58.812 224.195 58.812 219.504 63.504 c 
204 79.031 l 204 36 l 204 29.371 198.629 24 192 24 c 185.371 24 180 29.371
 180 36 c 180 79.031 l 164.496 63.504 l 159.805 58.812 152.195 58.812 147.504
 63.504 c 142.812 68.195 142.812 75.805 147.504 80.496 c h
56.23 104.258 m 60.918 99.57 68.516 99.57 73.199 104.258 c 107.137 138.168
 l 111.684 142.875 111.617 150.359 106.988 154.988 c 102.359 159.617 94.875
 159.684 90.168 155.137 c 56.23 121.199 l 51.547 116.516 51.547 108.918 
56.23 104.23 c h
327.766 104.258 m 327.77 104.258 l 332.438 108.938 332.438 116.516 327.77
 121.199 c 293.832 155.137 l 291.598 157.453 288.523 158.77 285.305 158.801
 c 282.086 158.828 278.992 157.562 276.715 155.285 c 274.438 153.008 273.172
 149.914 273.199 146.695 c 273.23 143.477 274.547 140.402 276.863 138.168
 c 310.801 104.23 l 315.484 99.547 323.082 99.547 327.77 104.23 c h
192 168 m 208.93 167.996 225.32 173.957 238.293 184.836 c 251.262 195.715
 259.984 210.816 262.926 227.488 c 265.867 244.164 262.84 261.34 254.375
 276 c 129.602 276 l 121.133 261.336 118.105 244.156 121.051 227.48 c 123.996
 210.809 132.723 195.703 145.695 184.824 c 158.672 173.945 175.066 167.988
 192 168 c 281.039 276 m 292.988 246.41 289.453 212.816 271.605 186.363 
c 253.762 159.91 223.934 144.055 192.023 144.055 c 160.113 144.055 130.289
 159.91 112.441 186.363 c 94.594 212.816 91.059 246.41 103.008 276 c 11.977
 276 l 5.348 276 -0.023 281.371 -0.023 288 c -0.023 294.629 5.348 300 11.977
 300 c 371.977 300 l 378.602 300 383.977 294.629 383.977 288 c 383.977 281.371
 378.602 276 371.977 276 c 281.016 276 l h
0 240 m 0 233.371 5.371 228 12 228 c 60 228 l 66.629 228 72 233.371 72 
240 c 72 246.629 66.629 252 60 252 c 12 252 l 5.371 252 0 246.629 0 240 
c 312 240 m 312 233.371 317.371 228 324 228 c 372 228 l 378.629 228 384 
233.371 384 240 c 384 246.629 378.629 252 372 252 c 324 252 l 317.371 252
 312 246.629 312 240 c f
Q Q
showpage
%%Trailer
%%EOF
