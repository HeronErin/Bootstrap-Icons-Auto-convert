%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1248 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1248 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 960 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 96 m 666.156 96 568.484 136.457 496.473 208.473 c 424.457 280.484 384
 378.156 384 480 c 384 581.844 424.457 679.516 496.473 751.527 c 568.484
 823.543 666.156 864 768 864 c 869.844 864 967.516 823.543 1039.527 751.527
 c 1111.543 679.516 1152 581.844 1152 480 c 1152 378.156 1111.543 280.484
 1039.527 208.473 c 967.516 136.457 869.844 96 768 96 c 288 480 m 288 355.473
 336.398 235.816 422.973 146.305 c 509.547 56.793 627.52 4.43 751.98 0.273
 c 876.441 -3.883 997.645 40.492 1089.996 124.031 c 1182.348 207.566 1238.621
 323.727 1246.93 447.977 c 1255.238 572.23 1214.934 694.848 1134.527 789.938
 c 1054.121 885.027 939.906 945.148 816 957.602 c 816 1152 l 1008 1152 l
 1025.148 1152 1040.996 1161.148 1049.57 1176 c 1058.145 1190.852 1058.145
 1209.148 1049.57 1224 c 1040.996 1238.852 1025.148 1248 1008 1248 c 816
 1248 l 816 1488 l 816 1505.148 806.852 1520.996 792 1529.57 c 777.148 1538.145
 758.852 1538.145 744 1529.57 c 729.148 1520.996 720 1505.148 720 1488 c
 720 1248 l 528 1248 l 510.852 1248 495.004 1238.852 486.43 1224 c 477.855
 1209.148 477.855 1190.852 486.43 1176 c 495.004 1161.148 510.852 1152 528
 1152 c 720 1152 l 720 957.602 l 601.602 945.699 491.844 890.246 412.02 
801.996 c 332.195 713.75 288 598.996 288 480 c f*
Q Q
showpage
%%Trailer
%%EOF
