%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1326
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1326
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1326 rectclip
1 0 0 -1 0 1536 cm q
0 g
292.801 292.801 m 209.379 376.211 149.387 480.113 118.852 594.062 c 88.316
 708.012 88.316 827.988 118.852 941.938 c 149.387 1055.887 209.379 1159.789
 292.801 1243.199 c 304.574 1255.391 309.047 1272.891 304.566 1289.238 c
 300.086 1305.586 287.312 1318.355 270.965 1322.836 c 254.617 1327.32 237.121
 1322.848 224.93 1311.07 c 129.598 1215.746 61.035 1097.004 26.145 966.781
 c -8.75 836.559 -8.75 699.441 26.145 569.219 c 61.035 438.996 129.598 320.254
 224.93 224.93 c 237.121 213.152 254.617 208.68 270.965 213.164 c 287.312
 217.645 300.086 230.414 304.566 246.762 c 309.047 263.109 304.574 280.609
 292.801 292.801 c 496.512 496.512 m 424.523 568.523 384.082 666.176 384.082
 768 c 384.082 869.824 424.523 967.477 496.512 1039.488 c 508.652 1051.629
 513.395 1069.324 508.949 1085.91 c 504.508 1102.496 491.551 1115.449 474.969
 1119.895 c 458.383 1124.34 440.684 1119.598 428.543 1107.457 c 368.945 
1047.875 326.086 973.652 304.273 892.254 c 282.457 810.855 282.457 725.145
 304.273 643.746 c 326.086 562.348 368.945 488.125 428.543 428.543 c 440.684
 416.402 458.383 411.66 474.969 416.105 c 491.551 420.551 504.508 433.504
 508.949 450.09 c 513.395 466.676 508.652 484.371 496.512 496.512 c 1039.488
 428.543 m 1048.492 419.516 1060.719 414.441 1073.473 414.441 c 1086.223
 414.441 1098.449 419.516 1107.457 428.543 c 1167.055 488.125 1209.914 562.348
 1231.727 643.746 c 1253.543 725.145 1253.543 810.855 1231.727 892.254 c
 1209.914 973.652 1167.055 1047.875 1107.457 1107.457 c 1095.316 1119.598
 1077.617 1124.34 1061.031 1119.895 c 1044.449 1115.449 1031.492 1102.496
 1027.051 1085.91 c 1022.605 1069.324 1027.348 1051.629 1039.488 1039.488
 c 1111.477 967.477 1151.918 869.824 1151.918 768 c 1151.918 666.176 1111.477
 568.523 1039.488 496.512 c 1030.461 487.508 1025.387 475.281 1025.387 462.527
 c 1025.387 449.777 1030.461 437.551 1039.488 428.543 c 1243.199 225.023
 m 1252.203 216.023 1264.406 210.969 1277.137 210.969 c 1289.863 210.969
 1302.07 216.023 1311.07 225.023 c 1455.078 369.051 1535.98 564.379 1535.98
 768.047 c 1535.98 971.719 1455.078 1167.047 1311.07 1311.07 c 1298.879 
1322.848 1281.383 1327.32 1265.035 1322.836 c 1248.688 1318.355 1235.914
 1305.586 1231.434 1289.238 c 1226.953 1272.891 1231.426 1255.391 1243.199
 1243.199 c 1326.621 1159.789 1386.613 1055.887 1417.148 941.938 c 1447.684
 827.988 1447.684 708.012 1417.148 594.062 c 1386.613 480.113 1326.621 376.211
 1243.199 292.801 c 1234.203 283.797 1229.145 271.594 1229.145 258.863 c
 1229.145 246.137 1234.203 233.93 1243.199 224.93 c h
576 768 m 576.012 719.879 594.094 673.516 626.668 638.09 c 659.238 602.668
 703.926 580.766 751.879 576.727 c 799.832 572.688 847.555 586.801 885.594
 616.273 c 923.637 645.75 949.223 688.434 957.285 735.875 c 965.348 783.316
 955.305 832.059 929.137 872.445 c 902.973 912.832 862.594 941.922 816 953.953
 c 816 1488 l 816 1505.148 806.852 1520.996 792 1529.57 c 777.148 1538.145
 758.852 1538.145 744 1529.57 c 729.148 1520.996 720 1505.148 720 1488 c
 720 953.953 l 678.777 943.309 642.262 919.266 616.195 885.605 c 590.129
 851.945 575.988 810.574 576 768 c f
Q Q
showpage
%%Trailer
%%EOF
