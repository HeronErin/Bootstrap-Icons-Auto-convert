%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.145 1.145 m 0.652 1.637 0.375 2.305 0.375 3 c 0.375 3.695 0.652 4.363
 1.145 4.855 c 1.312 5.031 1.055 5.293 0.879 5.121 c 0.316 4.559 0 3.797
 0 3 c 0 2.203 0.316 1.441 0.879 0.879 c 1.055 0.707 1.312 0.969 1.145 1.145
 c 1.941 1.941 m 1.355 2.523 1.355 3.477 1.941 4.059 c 2.117 4.238 1.852
 4.504 1.676 4.324 c 1.32 3.973 1.125 3.496 1.125 3 c 1.125 2.504 1.32 2.027
 1.676 1.676 c 1.852 1.496 2.117 1.762 1.941 1.941 c 4.062 1.676 m 4.059
 1.676 l 4.133 1.602 4.254 1.602 4.324 1.676 c 4.68 2.027 4.875 2.504 4.875
 3 c 4.875 3.496 4.68 3.973 4.324 4.324 c 4.148 4.504 3.883 4.238 4.059 
4.059 c 4.645 3.477 4.645 2.523 4.059 1.941 c 3.988 1.867 3.988 1.746 4.059
 1.676 c 4.855 0.879 m 4.93 0.805 5.047 0.805 5.121 0.879 c 6.293 2.051 
6.293 3.949 5.121 5.121 c 4.945 5.293 4.688 5.031 4.855 4.855 c 5.348 4.363
 5.625 3.695 5.625 3 c 5.625 2.305 5.348 1.637 4.855 1.145 c 4.781 1.07 
4.781 0.953 4.855 0.879 c h
2.25 3 m 2.25 2.715 2.414 2.453 2.672 2.328 c 2.926 2.199 3.234 2.23 3.461
 2.406 c 3.688 2.582 3.793 2.871 3.734 3.152 c 3.676 3.434 3.465 3.656 3.188
 3.727 c 3.188 5.812 l 3.188 6.062 2.812 6.062 2.812 5.812 c 2.812 3.727
 l 2.48 3.641 2.25 3.344 2.25 3 c f
Q Q
showpage
%%Trailer
%%EOF
