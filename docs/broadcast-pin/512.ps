%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 332
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 332
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 332 rectclip
1 0 0 -1 0 384 cm q
0 g
73.199 73.199 m 52.344 94.055 37.348 120.027 29.715 148.516 c 22.078 177.004
 22.078 206.996 29.715 235.484 c 37.348 263.973 52.344 289.945 73.199 310.801
 c 77.746 315.508 77.684 322.992 73.055 327.621 c 68.426 332.25 60.941 332.316
 56.23 327.77 c 32.398 303.938 15.258 274.25 6.535 241.695 c -2.188 209.141
 -2.188 174.859 6.535 142.305 c 15.258 109.75 32.398 80.062 56.23 56.23 
c 60.941 51.684 68.426 51.75 73.055 56.379 c 77.684 61.008 77.746 68.492
 73.199 73.199 c 124.129 124.129 m 106.129 142.129 96.02 166.543 96.02 192
 c 96.02 217.457 106.129 241.871 124.129 259.871 c 128.82 264.562 128.82
 272.172 124.129 276.863 c 119.438 281.555 111.828 281.555 107.137 276.863
 c 84.625 254.359 71.977 223.832 71.977 192 c 71.977 160.168 84.625 129.641
 107.137 107.137 c 111.828 102.445 119.438 102.445 124.129 107.137 c 128.82
 111.828 128.82 119.438 124.129 124.129 c 259.871 107.137 m 262.125 104.879
 265.18 103.609 268.367 103.609 c 271.555 103.609 274.613 104.879 276.863
 107.137 c 299.375 129.641 312.023 160.168 312.023 192 c 312.023 223.832
 299.375 254.359 276.863 276.863 c 272.172 281.555 264.562 281.555 259.871
 276.863 c 255.18 272.172 255.18 264.562 259.871 259.871 c 277.871 241.871
 287.98 217.457 287.98 192 c 287.98 166.543 277.871 142.129 259.871 124.129
 c 257.613 121.875 256.348 118.82 256.348 115.633 c 256.348 112.445 257.613
 109.387 259.871 107.137 c 310.801 56.258 m 315.484 51.57 323.082 51.57 
327.77 56.258 c 363.77 92.262 383.996 141.094 383.996 192.012 c 383.996 
242.93 363.77 291.762 327.77 327.77 c 323.059 332.316 315.574 332.25 310.945
 327.621 c 306.316 322.992 306.254 315.508 310.801 310.801 c 331.656 289.945
 346.652 263.973 354.285 235.484 c 361.922 206.996 361.922 177.004 354.285
 148.516 c 346.652 120.027 331.656 94.055 310.801 73.199 c 306.117 68.516
 306.117 60.918 310.801 56.23 c h
144 192 m 144.004 179.969 148.523 168.379 156.668 159.523 c 164.809 150.668
 175.98 145.191 187.969 144.184 c 199.957 143.172 211.887 146.699 221.398
 154.07 c 230.91 161.438 237.305 172.109 239.32 183.969 c 241.336 195.828
 238.824 208.016 232.285 218.109 c 225.742 228.207 215.648 235.48 204 238.488
 c 204 372 l 204 378.629 198.629 384 192 384 c 185.371 384 180 378.629 180
 372 c 180 238.488 l 169.695 235.828 160.566 229.816 154.051 221.402 c 147.531
 212.984 143.996 202.645 144 192 c f
Q Q
showpage
%%Trailer
%%EOF
