%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
3.199 5.32 m 3.199 5.125 l 3.199 5.027 3.184 4.949 3.156 4.883 c 3.133 
4.824 3.09 4.773 3.035 4.738 c 2.984 4.707 2.922 4.691 2.859 4.691 c 2.797
 4.691 2.738 4.707 2.684 4.738 c 2.629 4.773 2.59 4.824 2.562 4.883 c 2.535
 4.945 2.52 5.027 2.52 5.125 c 2.52 5.32 l 2.52 5.418 2.535 5.496 2.562 
5.562 c 2.59 5.621 2.629 5.672 2.684 5.707 c 2.738 5.738 2.797 5.754 2.859
 5.754 c 2.922 5.754 2.984 5.738 3.035 5.707 c 3.09 5.672 3.133 5.621 3.156
 5.562 c 3.188 5.484 3.203 5.402 3.199 5.32 c 3.5 5.125 m 3.5 5.316 l 3.5
 5.457 3.473 5.578 3.422 5.68 c 3.371 5.781 3.297 5.859 3.199 5.914 c 3.105
 5.969 2.988 5.996 2.855 5.996 c 2.723 5.996 2.605 5.969 2.512 5.914 c 2.516
 5.918 l 2.418 5.863 2.344 5.781 2.293 5.684 c 2.242 5.57 2.215 5.445 2.219
 5.32 c 2.219 5.129 l 2.219 4.988 2.246 4.863 2.297 4.762 c 2.348 4.66 2.422
 4.582 2.52 4.527 c 2.617 4.473 2.73 4.445 2.863 4.445 c 2.996 4.445 3.113
 4.473 3.207 4.527 c 3.305 4.582 3.375 4.66 3.43 4.762 c 3.48 4.863 3.508
 4.984 3.508 5.125 c 1.234 4.926 m 0.957 5.973 l 0.684 5.973 l 0.289 4.473
 l 0.609 4.473 l 0.836 5.562 l 0.852 5.562 l 1.117 4.473 l 1.375 4.473 l
 1.641 5.562 l 1.656 5.562 l 1.879 4.473 l 2.199 4.473 l 1.805 5.973 l 1.531
 5.973 l 1.254 4.926 l h
4.008 5.973 m 4.008 5.375 l 4.609 5.375 l 4.609 5.137 l 4.008 5.137 l 4.008
 4.719 l 4.668 4.719 l 4.668 4.473 l 3.707 4.473 l 3.707 5.973 l h
5.129 5.375 m 5.129 5.973 l 4.832 5.973 l 4.832 4.473 l 5.789 4.473 l 5.789
 4.719 l 5.129 4.719 l 5.129 5.137 l 5.73 5.137 l 5.73 5.375 l h
5.129 5.375 m f*
Q Q
showpage
%%Trailer
%%EOF
