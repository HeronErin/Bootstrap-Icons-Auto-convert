%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 8 0 186 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 8 0 186 192
192 192 cairo_set_page_size
%%EndPageSetup
q 8 0 178 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 132 l 156 132 l 156 54 l 132 54 l 127.227 54 122.648 52.105
 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114 12 l 48 12 l 41.371
 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637 26.527 11.531 
31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
102.434 170.258 m 102.434 163.992 l 102.434 160.902 101.965 158.34 101.031
 156.301 c 101.027 156.301 l 100.23 154.398 98.879 152.781 97.152 151.656
 c 95.469 150.613 93.52 150.074 91.535 150.109 c 89.539 150.074 87.57 150.617
 85.871 151.668 c 84.164 152.801 82.828 154.414 82.031 156.301 c 81.102 
158.34 80.641 160.906 80.641 163.992 c 80.641 170.258 l 80.641 173.328 81.109
 175.895 82.043 177.949 c 82.836 179.84 84.168 181.453 85.871 182.594 c 
87.586 183.609 89.543 184.133 91.535 184.105 c 93.512 184.121 95.453 183.602
 97.152 182.594 c 98.879 181.469 100.227 179.855 101.027 177.961 c 102.039
 175.52 102.516 172.895 102.434 170.258 c 112.07 164.066 m 112.07 170.223
 l 112.07 174.727 111.25 178.617 109.609 181.898 c 107.969 185.145 105.609
 187.656 102.531 189.422 c 99.492 191.148 95.828 192.016 91.539 192.016 
c 87.266 192.016 83.586 191.152 80.5 189.422 c 80.496 189.422 l 77.434 187.68
 74.965 185.059 73.414 181.895 c 71.699 178.25 70.859 174.25 70.969 170.219
 c 70.969 164.062 l 70.969 159.512 71.789 155.609 73.43 152.363 c 75.07 
149.074 77.426 146.566 80.496 144.84 c 83.586 143.078 87.266 142.199 91.535
 142.199 c 95.824 142.199 99.492 143.078 102.539 144.84 c 105.609 146.594
 107.969 149.113 109.605 152.398 c 111.238 155.645 112.059 159.535 112.066
 164.062 c 39.297 157.629 m 30.418 191.109 l 21.656 191.109 l 8.996 143.109
 l 19.258 143.109 l 26.469 177.945 l 26.926 177.945 l 35.398 143.109 l 43.594
 143.109 l 52.066 177.945 l 52.547 177.945 l 59.699 143.109 l 69.996 143.109
 l 57.336 191.109 l 48.574 191.109 l 39.695 157.629 l h
128.074 191.109 m 128.074 172.004 l 147.348 172.004 l 147.348 164.348 l
 128.074 164.348 l 128.074 150.945 l 149.172 150.945 l 149.172 143.109 l
 118.586 143.113 l 118.586 191.113 l h
163.93 172.004 m 163.93 191.098 l 154.438 191.098 l 154.438 143.109 l 185.012
 143.109 l 185.012 150.945 l 163.926 150.945 l 163.926 164.348 l 183.188
 164.348 l 183.188 172.004 l h
163.93 172.004 m f*
Q Q
showpage
%%Trailer
%%EOF
