%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 336 336 rectclip
1 0 0 -1 0 384 cm q
0 g
300 216 m 330.012 216 357.742 232.012 372.746 258 c 387.75 283.988 387.75
 316.012 372.746 342 c 357.742 367.988 330.012 384 300 384 c 269.988 384
 242.258 367.988 227.254 342 c 212.25 316.012 212.25 283.988 227.254 258
 c 242.258 232.012 269.988 216 300 216 c 308.496 356.496 m 344.496 320.496
 l 349.188 315.805 349.188 308.195 344.496 303.504 c 339.805 298.812 332.195
 298.812 327.504 303.504 c 312 319.031 l 312 252 l 312 245.371 306.629 240
 300 240 c 293.371 240 288 245.371 288 252 c 288 319.031 l 272.496 303.504
 l 267.805 298.812 260.195 298.812 255.504 303.504 c 250.812 308.195 250.812
 315.805 255.504 320.496 c 291.504 356.496 l 293.754 358.754 296.812 360.02
 300 360.02 c 303.188 360.02 306.246 358.754 308.496 356.496 c 264 120 m
 264 145.723 250.277 169.492 228 182.355 c 205.723 195.215 178.277 195.215
 156 182.355 c 133.723 169.492 120 145.723 120 120 c 120 94.277 133.723 
70.508 156 57.645 c 178.277 44.785 205.723 44.785 228 57.645 c 250.277 70.508
 264 94.277 264 120 c f
48 312 m 48 336 72 336 72 336 c 198.145 336 l 194.066 324.438 191.988 312.262
 192 300 c 192 268.777 205.512 239.078 229.055 218.566 c 217.855 216.887
 205.504 216.031 192 216 c 72 216 48 288 48 312 c f
Q Q
showpage
%%Trailer
%%EOF
