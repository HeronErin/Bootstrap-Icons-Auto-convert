%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1344 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
1200 864 m 1289.113 864 1374.574 899.398 1437.586 962.414 c 1500.602 1025.426
 1536 1110.887 1536 1200 c 1536 1289.113 1500.602 1374.574 1437.586 1437.586
 c 1374.574 1500.602 1289.113 1536 1200 1536 c 1110.887 1536 1025.426 1500.602
 962.414 1437.586 c 899.398 1374.574 864 1289.113 864 1200 c 864 1110.887
 899.398 1025.426 962.414 962.414 c 1025.426 899.398 1110.887 864 1200 864
 c 1233.984 1425.984 m 1377.984 1281.984 l 1390.125 1269.844 1394.867 1252.145
 1390.422 1235.562 c 1385.98 1218.977 1373.023 1206.02 1356.438 1201.578
 c 1339.855 1197.133 1322.156 1201.875 1310.016 1214.016 c 1248 1276.129
 l 1248 1008 l 1248 990.852 1238.852 975.004 1224 966.43 c 1209.148 957.855
 1190.852 957.855 1176 966.43 c 1161.148 975.004 1152 990.852 1152 1008 
c 1152 1276.129 l 1089.984 1214.016 l 1077.844 1201.875 1060.145 1197.133
 1043.562 1201.578 c 1026.977 1206.02 1014.02 1218.977 1009.578 1235.562
 c 1005.133 1252.145 1009.875 1269.844 1022.016 1281.984 c 1166.016 1425.984
 l 1175.02 1435.012 1187.25 1440.086 1200 1440.086 c 1212.75 1440.086 1224.98
 1435.012 1233.984 1425.984 c 1056 480 m 1056 556.383 1025.656 629.637 971.648
 683.648 c 917.637 737.656 844.383 768 768 768 c 691.617 768 618.363 737.656
 564.352 683.648 c 510.344 629.637 480 556.383 480 480 c 480 403.617 510.344
 330.363 564.352 276.352 c 618.363 222.344 691.617 192 768 192 c 844.383
 192 917.637 222.344 971.648 276.352 c 1025.656 330.363 1056 403.617 1056
 480 c f
192 1248 m 192 1344 288 1344 288 1344 c 792.574 1344 l 776.27 1297.742 
767.957 1249.047 768 1200 c 768 1138.27 781.23 1077.254 806.797 1021.066
 c 832.367 964.879 869.68 914.824 916.223 874.273 c 871.426 867.551 822.016
 864.129 768 864 c 288 864 192 1152 192 1248 c f
Q Q
showpage
%%Trailer
%%EOF
