%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:22:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 360 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 360 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 360 336 rectclip
1 0 0 -1 0 384 cm q
0 g
0 60 m 0 53.371 5.371 48 12 48 c 48 48 l 53.508 48 58.309 51.754 59.641
 57.098 c 69.359 96 l 348 96 l 351.695 96 355.18 97.703 357.453 100.613 
c 359.727 103.523 360.535 107.32 359.641 110.902 c 323.641 254.902 l 322.309
 260.246 317.508 264 312 264 c 96 264 l 90.492 264 85.691 260.246 84.359
 254.902 c 38.641 72 l 12 72 l 5.371 72 0 66.629 0 60 c 75.359 120 m 87.359
 168 l 120 168 l 120 120 l h
144 120 m 144 168 l 192 168 l 192 120 l h
216 120 m 216 168 l 264 168 l 264 120 l h
288 120 m 288 168 l 320.641 168 l 332.641 120 l h
314.641 192 m 288 192 l 288 240 l 302.641 240 l h
264 192 m 216 192 l 216 240 l 264 240 l h
192 192 m 144 192 l 144 240 l 192 240 l h
120 192 m 93.359 192 l 105.359 240 l 120 240 l h
120 312 m 111.426 312 103.504 316.574 99.215 324 c 94.93 331.426 94.93 
340.574 99.215 348 c 103.504 355.426 111.426 360 120 360 c 128.574 360 136.496
 355.426 140.785 348 c 145.07 340.574 145.07 331.426 140.785 324 c 136.496
 316.574 128.574 312 120 312 c 72 336 m 72 318.852 81.148 303.004 96 294.43
 c 110.852 285.855 129.148 285.855 144 294.43 c 158.852 303.004 168 318.852
 168 336 c 168 353.148 158.852 368.996 144 377.57 c 129.148 386.145 110.852
 386.145 96 377.57 c 81.148 368.996 72 353.148 72 336 c 288 312 m 279.426
 312 271.504 316.574 267.215 324 c 262.93 331.426 262.93 340.574 267.215
 348 c 271.504 355.426 279.426 360 288 360 c 296.574 360 304.496 355.426
 308.785 348 c 313.07 340.574 313.07 331.426 308.785 324 c 304.496 316.574
 296.574 312 288 312 c 240 336 m 240 318.852 249.148 303.004 264 294.43 
c 278.852 285.855 297.148 285.855 312 294.43 c 326.852 303.004 336 318.852
 336 336 c 336 353.148 326.852 368.996 312 377.57 c 297.148 386.145 278.852
 386.145 264 377.57 c 249.148 368.996 240 353.148 240 336 c f
Q Q
showpage
%%Trailer
%%EOF
