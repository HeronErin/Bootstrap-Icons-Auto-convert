%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:17 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 8.25 12 l 8.25 11.25 l 9 11.25 l 9.199 11.25 9.391
 11.172 9.531 11.031 c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l
 8.25 3.375 l 7.629 3.375 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l
 2.586 0.75 2.25 1.086 2.25 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672
 2.172 0 3 0 c 7.125 0 l h
2.547 11.129 m 2.555 11.371 2.664 11.594 2.848 11.746 c 2.945 11.828 3.066
 11.891 3.207 11.934 c 3.348 11.98 3.516 12 3.707 12 c 3.961 12 4.176 11.961
 4.352 11.883 c 4.527 11.805 4.664 11.695 4.754 11.555 c 4.848 11.414 4.895
 11.25 4.895 11.062 c 4.895 10.895 4.859 10.754 4.793 10.641 c 4.793 10.645
 l 4.727 10.531 4.629 10.441 4.512 10.379 c 4.379 10.305 4.238 10.25 4.09
 10.219 c 3.625 10.109 l 3.621 10.113 l 3.512 10.09 3.41 10.047 3.32 9.98
 c 3.25 9.926 3.211 9.844 3.211 9.754 c 3.211 9.637 3.258 9.539 3.352 9.465
 c 3.445 9.391 3.574 9.352 3.734 9.352 c 3.84 9.352 3.934 9.367 4.012 9.402
 c 4.082 9.434 4.148 9.48 4.195 9.539 c 4.242 9.594 4.273 9.664 4.285 9.734
 c 4.848 9.734 l 4.84 9.582 4.789 9.434 4.699 9.309 c 4.605 9.176 4.473 
9.066 4.324 9 c 4.141 8.922 3.941 8.883 3.738 8.887 c 3.52 8.887 3.324 8.926
 3.156 9 c 2.988 9.074 2.855 9.18 2.762 9.316 c 2.668 9.453 2.621 9.613 
2.621 9.797 c 2.621 9.949 2.652 10.078 2.711 10.191 c 2.773 10.305 2.859
 10.395 2.977 10.465 c 3.09 10.535 3.227 10.59 3.379 10.625 c 3.844 10.734
 l 4 10.77 4.113 10.82 4.191 10.879 c 4.191 10.875 l 4.266 10.934 4.309 
11.023 4.305 11.121 c 4.305 11.199 4.281 11.273 4.238 11.336 c 4.191 11.402
 4.125 11.453 4.047 11.484 c 3.965 11.52 3.859 11.535 3.738 11.535 c 3.652
 11.535 3.57 11.523 3.5 11.504 c 3.434 11.488 3.371 11.457 3.312 11.418 
c 3.211 11.352 3.145 11.25 3.121 11.129 c h
0.605 10.27 m 0.605 10.082 0.633 9.926 0.684 9.793 c 0.68 9.797 l 0.727
 9.676 0.805 9.57 0.906 9.496 c 1.012 9.426 1.137 9.391 1.266 9.395 c 1.379
 9.395 1.477 9.418 1.562 9.469 c 1.562 9.465 l 1.648 9.512 1.719 9.578 1.766
 9.66 c 1.82 9.746 1.848 9.844 1.855 9.945 c 2.43 9.945 l 2.43 9.891 l 2.422
 9.613 2.293 9.352 2.082 9.168 c 1.973 9.078 1.848 9.008 1.715 8.965 c 1.566
 8.914 1.414 8.891 1.258 8.895 c 0.992 8.895 0.762 8.949 0.574 9.062 c 0.387
 9.172 0.242 9.332 0.145 9.535 c 0.047 9.738 -0.004 9.984 -0.004 10.27 c
 -0.004 10.645 l -0.004 10.93 0.043 11.172 0.141 11.375 c 0.238 11.578 0.383
 11.734 0.57 11.844 c 0.758 11.953 0.984 12.008 1.254 12.008 c 1.473 12.008
 1.668 11.969 1.844 11.887 c 2.016 11.805 2.152 11.691 2.258 11.547 c 2.262
 11.543 l 2.363 11.395 2.422 11.219 2.43 11.035 c 2.43 10.977 l 1.855 10.977
 l 1.855 10.98 l 1.852 11.078 1.82 11.172 1.77 11.254 c 1.719 11.332 1.648
 11.398 1.566 11.441 c 1.469 11.484 1.367 11.508 1.266 11.504 c 1.137 11.508
 1.012 11.473 0.906 11.406 c 0.801 11.332 0.723 11.23 0.68 11.113 c 0.625
 10.961 0.602 10.801 0.605 10.641 c h
5.086 11.469 m 5.035 11.363 5.008 11.246 5 11.129 c 5.574 11.129 l 5.598
 11.25 5.664 11.352 5.766 11.418 c 5.82 11.453 5.883 11.484 5.953 11.504
 c 6.023 11.523 6.105 11.535 6.191 11.535 c 6.312 11.535 6.418 11.52 6.5
 11.484 c 6.504 11.484 l 6.578 11.453 6.645 11.402 6.695 11.336 c 6.738 
11.273 6.758 11.199 6.758 11.121 c 6.762 11.023 6.719 10.934 6.645 10.875
 c 6.57 10.816 6.453 10.766 6.297 10.73 c 5.832 10.625 l 5.688 10.594 5.551
 10.539 5.43 10.465 c 5.316 10.395 5.227 10.301 5.164 10.188 c 5.102 10.066
 5.07 9.93 5.07 9.797 c 5.07 9.613 5.117 9.453 5.211 9.316 c 5.305 9.18 
5.438 9.074 5.605 9 c 5.773 8.926 5.969 8.887 6.188 8.887 c 6.414 8.887 
6.609 8.926 6.773 9 c 6.938 9.078 7.062 9.18 7.148 9.309 c 7.238 9.438 7.289
 9.578 7.297 9.734 c 6.734 9.734 l 6.738 9.734 l 6.727 9.664 6.695 9.594
 6.648 9.539 c 6.602 9.48 6.539 9.434 6.465 9.402 c 6.379 9.367 6.281 9.352
 6.188 9.352 c 6.027 9.352 5.898 9.391 5.805 9.465 c 5.805 9.469 l 5.715
 9.535 5.664 9.645 5.664 9.754 c 5.664 9.844 5.699 9.918 5.77 9.98 c 5.773
 9.98 l 5.863 10.047 5.965 10.09 6.074 10.113 c 6.539 10.219 l 6.703 10.258
 6.844 10.309 6.965 10.379 c 7.086 10.445 7.18 10.535 7.246 10.648 c 7.312
 10.758 7.348 10.898 7.348 11.07 c 7.348 11.254 7.301 11.418 7.207 11.562
 c 7.207 11.559 l 7.109 11.703 6.969 11.82 6.805 11.887 c 6.629 11.965 6.414
 12.004 6.16 12.004 c 5.969 12.004 5.805 11.98 5.66 11.938 c 5.531 11.898
 5.41 11.836 5.301 11.75 c 5.211 11.672 5.137 11.574 5.086 11.469 c f*
Q Q
showpage
%%Trailer
%%EOF
