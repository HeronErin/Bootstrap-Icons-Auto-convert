%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:19 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 66 96 l 66 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
20.383 89.047 m 20.453 90.957 21.324 92.75 22.789 93.984 c 23.57 94.633
 24.523 95.137 25.656 95.496 c 26.793 95.859 28.121 96.043 29.645 96.043
 c 31.672 96.043 33.391 95.727 34.797 95.094 c 36.211 94.461 37.289 93.582
 38.031 92.453 c 38.777 91.316 39.152 90.004 39.152 88.516 c 39.152 87.172
 38.883 86.051 38.348 85.156 c 38.352 85.156 l 37.805 84.258 37.027 83.52
 36.102 83.016 c 35.039 82.426 33.895 82 32.707 81.758 c 28.98 80.895 l 
28.98 80.891 l 28.105 80.727 27.277 80.363 26.555 79.836 c 26 79.406 25.68
 78.742 25.691 78.043 c 25.691 77.105 26.062 76.34 26.801 75.738 c 27.555
 75.129 28.578 74.828 29.871 74.828 c 30.727 74.828 31.469 74.965 32.09 
75.234 c 32.094 75.234 l 32.672 75.461 33.18 75.836 33.57 76.32 c 33.938
 76.766 34.188 77.297 34.289 77.867 c 38.789 77.867 l 38.711 76.648 38.297
 75.473 37.59 74.473 c 36.832 73.395 35.797 72.543 34.59 72.012 c 33.117
 71.363 31.52 71.051 29.91 71.102 c 28.152 71.102 26.602 71.402 25.254 72
 c 23.906 72.598 22.852 73.438 22.094 74.527 c 21.332 75.621 20.953 76.898
 20.953 78.363 c 20.953 79.57 21.195 80.621 21.684 81.508 c 22.18 82.398
 22.883 83.133 23.797 83.711 c 24.707 84.281 25.785 84.707 27.031 84.988
 c 30.738 85.852 l 31.977 86.145 32.902 86.531 33.516 87.008 c 34.121 87.469
 34.461 88.199 34.43 88.961 c 34.441 89.582 34.262 90.188 33.918 90.703 
c 33.531 91.227 33 91.633 32.387 91.859 c 31.719 92.141 30.895 92.281 29.91
 92.281 c 29.211 92.281 28.57 92.203 27.988 92.043 c 27.988 92.039 l 27.457
 91.898 26.953 91.664 26.504 91.352 c 25.695 90.828 25.141 89.992 24.973
 89.047 c h
4.836 82.156 m 4.836 80.664 5.039 79.398 5.449 78.359 c 5.805 77.402 6.434
 76.57 7.262 75.965 c 8.098 75.398 9.098 75.109 10.109 75.145 c 11.008 75.145
 11.805 75.34 12.496 75.727 c 13.176 76.086 13.738 76.625 14.129 77.285 
c 14.547 77.98 14.797 78.762 14.852 79.57 c 19.441 79.57 l 19.441 79.137
 l 19.441 79.141 l 19.359 76.906 18.344 74.809 16.645 73.355 c 15.785 72.621
 14.789 72.066 13.711 71.723 c 12.539 71.324 11.309 71.125 10.074 71.141
 c 7.938 71.141 6.117 71.586 4.609 72.48 c 3.109 73.367 1.965 74.633 1.176
 76.273 c 0.395 77.914 0.004 79.871 0 82.148 c 0 85.137 l 0 87.41 0.387 
89.359 1.156 90.992 c 1.945 92.621 3.09 93.871 4.59 94.75 c 6.09 95.617 
7.918 96.051 10.074 96.051 c 11.832 96.051 13.398 95.723 14.785 95.066 c
 16.168 94.41 17.27 93.504 18.086 92.344 c 18.086 92.34 l 18.91 91.148 19.383
 89.746 19.441 88.297 c 19.441 87.84 l 14.855 87.84 l 14.801 88.613 14.555
 89.359 14.148 90.02 c 13.75 90.656 13.184 91.172 12.516 91.52 c 11.766 
91.875 10.941 92.055 10.109 92.039 c 9.098 92.066 8.098 91.793 7.242 91.246
 c 6.418 90.664 5.793 89.844 5.449 88.895 c 5.008 87.691 4.801 86.414 4.836
 85.133 c h
40.68 91.738 m 40.285 90.895 40.059 89.98 40.016 89.047 c 44.602 89.047
 l 44.598 89.047 l 44.77 89.992 45.32 90.828 46.129 91.352 c 46.555 91.645
 47.055 91.871 47.629 92.035 c 48.195 92.199 48.836 92.281 49.543 92.281
 c 50.523 92.281 51.348 92.141 52.02 91.859 c 52.633 91.633 53.164 91.227
 53.551 90.703 c 53.895 90.188 54.074 89.582 54.059 88.961 c 54.09 88.199
 53.75 87.469 53.141 87.008 c 52.531 86.527 51.605 86.141 50.363 85.852 
c 46.656 84.992 l 46.656 84.988 l 45.512 84.75 44.418 84.316 43.422 83.707
 c 42.543 83.164 41.816 82.406 41.316 81.504 c 40.812 80.535 40.559 79.453
 40.578 78.359 c 40.578 76.895 40.957 75.617 41.719 74.523 c 42.48 73.434
 43.531 72.59 44.879 71.992 c 46.227 71.391 47.781 71.094 49.539 71.098 
c 51.363 71.098 52.922 71.402 54.215 72.008 c 55.52 72.621 56.52 73.441 
57.215 74.469 c 57.934 75.488 58.336 76.621 58.414 77.863 c 53.914 77.863
 l 53.914 77.867 l 53.812 77.297 53.566 76.766 53.195 76.32 c 52.805 75.836
 52.297 75.461 51.719 75.234 c 51.016 74.941 50.262 74.805 49.5 74.824 c
 48.203 74.824 47.18 75.129 46.43 75.734 c 46.43 75.738 l 45.715 76.285 
45.305 77.141 45.324 78.043 c 45.324 78.762 45.609 79.363 46.184 79.844 
c 46.902 80.367 47.73 80.727 48.605 80.891 c 52.332 81.75 l 53.637 82.051
 54.77 82.473 55.727 83.016 c 56.688 83.559 57.438 84.277 57.977 85.164 
c 58.516 86.051 58.785 87.172 58.785 88.523 c 58.785 90.004 58.41 91.316
 57.656 92.461 c 57.66 92.461 l 56.867 93.637 55.742 94.555 54.426 95.094
 c 53.023 95.727 51.305 96.043 49.277 96.043 c 47.754 96.043 46.422 95.863
 45.289 95.504 c 44.242 95.188 43.27 94.676 42.422 93.988 c 41.684 93.375
 41.09 92.609 40.68 91.738 c f*
Q Q
showpage
%%Trailer
%%EOF
