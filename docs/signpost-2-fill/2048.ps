%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 60 0 1476 1497
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 60 0 1476 1497
1536 1536 cairo_set_page_size
%%EndPageSetup
q 60 0 1416 1497 rectclip
1 0 0 -1 0 1536 cm q
0 g
700.129 67.871 m 682.125 85.871 672.004 110.285 672 135.742 c 672 192 l
 192 192 l 166.539 192 142.121 202.113 124.117 220.117 c 106.113 238.121
 96 262.539 96 288 c 96 480 l 96 505.461 106.113 529.879 124.117 547.883
 c 142.121 565.887 166.539 576 192 576 c 672 576 l 672 672 l 240 672 l 209.785
 672 181.328 686.227 163.199 710.398 c 69.602 835.199 l 63.367 843.508 60
 853.613 60 864 c 60 874.387 63.367 884.492 69.602 892.801 c 163.203 1017.602
 l 163.199 1017.602 l 181.328 1041.773 209.785 1056 240 1056 c 672 1056 
l 672 1536 l 864 1536 l 864 1056 l 1344 1056 l 1369.461 1056 1393.879 1045.887
 1411.883 1027.883 c 1429.887 1009.879 1440 985.461 1440 960 c 1440 768 
l 1440 742.539 1429.887 718.121 1411.883 700.117 c 1393.879 682.113 1369.461
 672 1344 672 c 864 672 l 864 576 l 1296 576 l 1326.215 576 1354.672 561.773
 1372.801 537.602 c 1466.402 412.801 l 1466.398 412.801 l 1472.633 404.492
 1476 394.387 1476 384 c 1476 373.613 1472.633 363.508 1466.398 355.199 
c 1372.801 230.398 l 1354.672 206.227 1326.215 192 1296 192 c 864 192 l 
864 135.742 l 863.996 110.289 853.879 85.875 835.875 67.875 c 817.875 49.879
 793.461 39.766 768.004 39.766 c 742.547 39.766 718.133 49.875 700.129 67.871
 c f
Q Q
showpage
%%Trailer
%%EOF
