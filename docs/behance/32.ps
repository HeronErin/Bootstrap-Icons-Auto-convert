%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 4 24 20
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 4 24 20
24 24 cairo_set_page_size
%%EndPageSetup
q 0 4 24 16 rectclip
1 0 0 -1 0 24 cm q
0 g
6.98 4.5 m 7.672 4.5 8.312 4.551 8.898 4.711 c 9.484 4.816 9.965 5.035 
10.391 5.297 c 10.816 5.559 11.137 5.938 11.352 6.418 c 11.562 6.898 11.676
 7.484 11.676 8.125 c 11.676 8.867 11.516 9.508 11.141 9.988 c 10.816 10.469
 10.293 10.898 9.645 11.215 c 10.555 11.48 11.246 11.957 11.668 12.598 c
 12.09 13.238 12.359 14.031 12.359 14.941 c 12.359 15.684 12.203 16.324 
11.934 16.859 c 11.934 16.855 l 11.664 17.395 11.262 17.852 10.762 18.188
 c 10.281 18.512 9.695 18.773 9.055 18.93 c 8.43 19.098 7.785 19.184 7.137
 19.195 c 0 19.203 l 0 4.5 l h
6.555 10.469 m 7.141 10.469 7.621 10.312 7.988 10.043 c 8.355 9.773 8.52
 9.297 8.52 8.711 c 8.52 8.387 8.469 8.07 8.363 7.859 c 8.25 7.645 8.086
 7.461 7.883 7.324 c 7.668 7.207 7.434 7.117 7.191 7.062 c 6.926 7.012 6.656
 7.012 6.34 7.012 c 3.254 7.008 l 3.254 10.473 l 3.254 10.465 6.555 10.465
 6.555 10.465 c h
6.711 16.758 m 7.035 16.758 7.352 16.707 7.621 16.652 c 7.887 16.602 8.156
 16.492 8.363 16.328 c 8.574 16.164 8.738 16.004 8.898 15.742 c 9.004 15.477
 9.109 15.156 9.109 14.781 c 9.109 14.039 8.898 13.504 8.469 13.129 c 8.043
 12.805 7.453 12.648 6.762 12.648 c 3.254 12.648 l 3.254 16.75 l 6.711 16.75
 l h
16.996 16.707 m 17.426 17.133 18.062 17.348 18.914 17.348 c 19.5 17.348
 20.031 17.188 20.461 16.918 c 20.887 16.598 21.152 16.277 21.258 15.957
 c 23.867 15.957 l 23.438 17.234 22.801 18.141 21.949 18.73 c 21.102 19.262
 20.086 19.578 18.859 19.578 c 18.859 19.574 l 18.078 19.578 17.301 19.434
 16.57 19.148 c 15.914 18.906 15.328 18.5 14.863 17.973 c 14.371 17.484 
14.004 16.879 13.797 16.215 c 13.535 15.523 13.422 14.781 13.422 13.922 
c 13.422 13.125 13.527 12.375 13.797 11.684 c 14.066 10.992 14.438 10.406
 14.918 9.875 c 15.398 9.395 15.984 8.965 16.625 8.703 c 16.621 8.703 l 
17.336 8.418 18.094 8.273 18.863 8.273 c 19.773 8.273 20.57 8.43 21.262 
8.805 c 21.953 9.18 22.488 9.602 22.914 10.242 c 23.34 10.828 23.656 11.52
 23.875 12.266 c 23.98 13.008 24.031 13.758 23.98 14.609 c 16.254 14.609
 l 16.254 15.48 16.57 16.273 16.996 16.703 c 20.355 11.105 m 19.98 10.73
 19.391 10.52 18.699 10.52 c 18.219 10.52 17.852 10.625 17.527 10.785 c 
17.203 10.945 16.992 11.16 16.785 11.371 c 16.789 11.367 l 16.594 11.574
 16.461 11.832 16.414 12.113 c 16.359 12.375 16.309 12.594 16.309 12.805
 c 21.102 12.805 l 20.996 12.016 20.727 11.48 20.355 11.105 c h
15.664 5.512 m 21.633 5.512 l 21.633 6.945 l 15.664 6.945 l h
15.664 5.512 m f
Q Q
showpage
%%Trailer
%%EOF
