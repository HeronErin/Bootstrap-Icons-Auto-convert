%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 17 96 78
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 17 96 78
96 96 cairo_set_page_size
%%EndPageSetup
q 0 17 96 61 rectclip
1 0 0 -1 0 96 cm q
0 g
27.926 18 m 30.691 18 33.246 18.211 35.594 18.84 c 37.934 19.262 39.859
 20.137 41.57 21.188 c 43.281 22.238 44.551 23.742 45.418 25.668 c 46.258
 27.59 46.715 29.934 46.715 32.488 c 46.715 35.465 46.078 38.02 44.578 39.941
 c 43.289 41.863 41.184 43.578 38.598 44.844 c 42.234 45.898 45 47.82 46.688
 50.375 c 48.375 52.93 49.453 56.117 49.453 59.754 c 49.453 62.73 48.824
 65.285 47.742 67.422 c 47.734 67.422 l 46.664 69.574 45.047 71.41 43.043
 72.742 c 41.121 74.031 38.777 75.082 36.223 75.719 c 33.719 76.383 31.145
 76.738 28.555 76.777 c 0 76.816 l 0 18 l h
26.215 41.867 m 28.555 41.867 30.477 41.238 31.957 40.156 c 33.434 39.078
 34.086 37.176 34.086 34.836 c 34.086 33.539 33.875 32.281 33.457 31.434
 c 32.996 30.578 32.34 29.848 31.535 29.305 c 30.668 28.828 29.734 28.473
 28.77 28.246 c 27.715 28.035 26.633 28.035 25.367 28.035 c 13.02 28.039
 l 13.02 41.898 l 13.02 41.867 26.219 41.867 26.219 41.867 c h
26.844 67.023 m 28.133 67.023 29.398 66.812 30.48 66.602 c 31.535 66.391
 32.617 65.965 33.457 65.305 c 34.297 64.645 34.957 64.016 35.594 62.965
 c 36.016 61.91 36.434 60.617 36.434 59.117 c 36.434 56.141 35.594 54.004
 33.879 52.504 c 32.168 51.215 29.824 50.582 27.059 50.582 c 13.02 50.594
 l 13.02 66.996 l 26.848 66.996 l h
67.992 66.812 m 69.703 68.52 72.262 69.371 75.66 69.367 c 78 69.367 80.137
 68.73 81.852 67.652 c 83.555 66.371 84.617 65.094 85.031 63.812 c 95.473
 63.812 l 93.758 68.918 91.199 72.555 87.805 74.902 c 84.41 77.031 80.348
 78.297 75.445 78.297 c 75.445 78.301 l 72.309 78.32 69.199 77.738 66.281
 76.59 c 63.652 75.621 61.309 74.008 59.461 71.898 c 57.484 69.938 56.02
 67.523 55.188 64.867 c 54.137 62.102 53.688 59.125 53.688 55.699 c 53.688
 52.512 54.109 49.508 55.188 46.742 c 56.266 43.98 57.742 41.629 59.668 
39.5 c 61.59 37.578 63.934 35.863 66.488 34.809 c 66.492 34.805 l 69.34 
33.668 72.383 33.09 75.449 33.098 c 79.086 33.098 82.27 33.727 85.039 35.227
 c 87.801 36.727 89.941 38.418 91.652 40.973 c 93.363 43.312 94.629 46.078
 95.5 49.062 c 95.922 52.039 96.129 55.039 95.922 58.441 c 65.023 58.441
 l 65.023 61.922 66.285 65.102 68 66.816 c 81.441 44.426 m 79.941 42.926
 77.59 42.078 74.824 42.078 c 72.902 42.078 71.43 42.5 70.137 43.133 c 68.848
 43.77 68 44.633 67.16 45.473 c 67.152 45.473 l 66.367 46.297 65.848 47.336
 65.652 48.457 c 65.438 49.508 65.23 50.379 65.23 51.219 c 84.406 51.219
 l 83.984 48.062 82.906 45.926 81.426 44.426 c h
62.68 22.059 m 86.547 22.059 l 86.547 27.801 l 62.68 27.801 l h
62.68 22.059 m f
Q Q
showpage
%%Trailer
%%EOF
