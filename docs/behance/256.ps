%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 35 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 35 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 35 192 121 rectclip
1 0 0 -1 0 192 cm q
0 g
55.848 36 m 61.379 36 66.492 36.422 71.184 37.68 c 75.863 38.52 79.715 
40.273 83.137 42.371 c 86.559 44.473 89.102 47.484 90.828 51.336 c 92.508
 55.176 93.422 59.867 93.422 64.98 c 93.422 70.934 92.148 76.043 89.148 
79.883 c 86.57 83.723 82.355 87.156 77.184 89.688 c 84.457 91.801 89.988
 95.641 93.359 100.75 c 96.73 105.863 98.891 112.234 98.891 119.508 c 98.891
 125.461 97.629 130.57 95.469 134.844 c 95.473 134.844 l 93.324 139.148 
90.09 142.82 86.09 145.488 c 82.25 148.066 77.559 150.168 72.445 151.441
 c 67.438 152.766 62.285 153.477 57.109 153.551 c 0 153.637 l 0 36 l h
52.426 83.734 m 57.105 83.734 60.945 82.473 63.91 80.312 c 66.863 78.152
 68.172 74.348 68.172 69.668 c 68.172 67.074 67.75 64.555 66.91 62.863 c
 66.91 62.867 l 65.996 61.16 64.676 59.695 63.07 58.609 c 61.332 57.652 
59.473 56.941 57.539 56.496 c 55.426 56.074 53.266 56.074 50.734 56.074 
c 26.039 56.074 l 26.039 83.793 l 26.039 83.734 52.438 83.734 52.438 83.734
 c h
53.688 134.051 m 56.266 134.051 58.801 133.629 60.961 133.211 c 63.074 
132.789 65.234 131.938 66.914 130.617 c 68.594 129.297 69.914 128.039 71.188
 125.938 c 72.027 123.824 72.867 121.246 72.867 118.246 c 72.867 112.293
 71.188 108.023 67.754 105.023 c 64.332 102.445 59.641 101.184 54.109 101.184
 c 26.039 101.184 l 26.039 133.992 l 53.699 133.992 l h
135.984 133.629 m 139.41 137.043 144.52 138.75 151.32 138.742 c 156 138.742
 160.273 137.469 163.703 135.309 c 167.109 132.75 169.23 130.188 170.062
 127.629 c 190.941 127.629 l 187.508 137.84 182.398 145.113 175.605 149.805
 c 168.812 154.066 160.691 156.598 150.887 156.598 c 150.887 156.602 l 144.617
 156.637 138.398 155.477 132.562 153.18 c 127.305 151.238 122.613 148.012
 118.922 143.797 c 114.969 139.875 112.035 135.047 110.375 129.73 c 108.273
 124.199 107.375 118.246 107.375 111.395 c 107.375 105.023 108.215 99.012
 110.375 93.48 c 112.535 87.961 115.488 83.258 119.34 78.996 c 123.18 75.156
 127.871 71.723 132.984 69.613 c 138.684 67.336 144.766 66.176 150.898 66.191
 c 158.172 66.191 164.543 67.453 170.074 70.453 c 175.594 73.453 179.879
 76.836 183.297 81.949 c 186.719 86.629 189.25 92.16 190.988 98.125 c 191.828
 104.078 192.25 110.078 191.828 116.883 c 130.027 116.883 l 130.027 123.844
 132.547 130.203 135.98 133.637 c 162.859 88.852 m 159.859 85.852 155.156
 84.16 149.625 84.16 c 145.785 84.16 142.832 85 140.254 86.273 c 137.676
 87.547 135.98 89.273 134.301 90.953 c 134.305 90.949 l 132.738 92.598 131.695
 94.672 131.305 96.91 c 130.871 99.012 130.465 100.75 130.465 102.43 c 168.816
 102.43 l 167.977 96.117 165.816 91.844 162.852 88.844 c h
125.336 44.117 m 173.07 44.117 l 173.07 55.602 l 125.336 55.602 l h
125.336 44.117 m f
Q Q
showpage
%%Trailer
%%EOF
