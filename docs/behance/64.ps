%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 8 48 39
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 8 48 39
48 48 cairo_set_page_size
%%EndPageSetup
q 0 8 48 31 rectclip
1 0 0 -1 0 48 cm q
0 g
13.961 9 m 15.344 9 16.621 9.105 17.797 9.422 c 18.969 9.633 19.93 10.07
 20.785 10.594 c 21.641 11.117 22.277 11.871 22.707 12.836 c 23.129 13.797
 23.355 14.969 23.355 16.246 c 23.355 17.734 23.039 19.012 22.289 19.973
 c 21.645 20.934 20.59 21.789 19.297 22.422 c 21.113 22.949 22.496 23.91
 23.34 25.188 c 24.184 26.465 24.723 28.059 24.723 29.875 c 24.723 31.363
 24.406 32.641 23.867 33.711 c 23.332 34.789 22.523 35.703 21.523 36.371
 c 20.562 37.016 19.391 37.543 18.113 37.859 c 18.109 37.859 l 16.859 38.191
 15.57 38.367 14.277 38.387 c 0 38.41 l 0 9 l h
13.105 20.934 m 14.277 20.934 15.234 20.617 15.977 20.078 c 16.715 19.539
 17.043 18.586 17.043 17.418 c 17.043 16.77 16.938 16.141 16.727 15.719 
c 16.5 15.289 16.168 14.926 15.77 14.652 c 15.332 14.414 14.867 14.234 14.387
 14.125 c 13.859 14.02 13.32 14.02 12.688 14.02 c 6.512 14.02 l 6.512 20.949
 l 6.512 20.934 13.113 20.934 13.113 20.934 c h
13.422 33.512 m 14.066 33.512 14.699 33.406 15.238 33.301 c 15.766 33.195
 16.305 32.984 16.727 32.652 c 17.148 32.324 17.477 32.008 17.793 31.48 
c 18.004 30.953 18.215 30.309 18.215 29.559 c 18.215 28.07 17.793 27.004
 16.938 26.254 c 16.082 25.609 14.91 25.293 13.527 25.293 c 6.512 25.297
 l 6.512 33.5 l 13.426 33.5 l h
33.996 33.406 m 34.852 34.262 36.129 34.688 37.832 34.684 c 39.004 34.684
 40.07 34.367 40.93 33.824 c 41.781 33.184 42.312 32.543 42.52 31.902 c 
47.738 31.902 l 46.879 34.457 45.602 36.273 43.902 37.445 c 42.203 38.512
 40.172 39.145 37.723 39.145 c 37.723 39.148 l 36.156 39.16 34.598 38.871
 33.141 38.297 c 31.824 37.809 30.652 37.004 29.73 35.949 c 28.742 34.969
 28.008 33.762 27.594 32.434 c 27.07 31.051 26.844 29.562 26.844 27.848 
c 26.844 26.254 27.055 24.75 27.594 23.367 c 28.133 21.988 28.871 20.812
 29.836 19.746 c 30.797 18.785 31.969 17.93 33.246 17.398 c 33.246 17.402
 l 34.672 16.836 36.191 16.543 37.727 16.547 c 39.543 16.547 41.137 16.863
 42.52 17.613 c 43.898 18.363 44.969 19.211 45.824 20.488 c 46.68 21.66 
47.312 23.043 47.746 24.531 c 47.957 26.02 48.062 27.52 47.957 29.219 c 
32.508 29.219 l 32.508 30.957 33.137 32.547 33.996 33.406 c 40.715 22.211
 m 39.965 21.461 38.789 21.039 37.406 21.039 c 36.445 21.039 35.707 21.25
 35.062 21.566 c 34.418 21.883 33.996 22.316 33.574 22.738 c 33.184 23.148
 32.922 23.668 32.824 24.227 c 32.715 24.75 32.613 25.188 32.613 25.605 
c 42.203 25.605 l 41.992 24.027 41.453 22.961 40.711 22.211 c h
31.332 11.027 m 43.266 11.027 l 43.266 13.898 l 31.332 13.898 l h
31.332 11.027 m f
Q Q
showpage
%%Trailer
%%EOF
