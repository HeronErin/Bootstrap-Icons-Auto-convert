%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 15 0 369 375
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 15 0 369 375
384 384 cairo_set_page_size
%%EndPageSetup
q 15 0 354 375 rectclip
1 0 0 -1 0 384 cm q
0 g
168 33.938 m 168 48 l 48 48 l 41.637 48 35.531 50.527 31.031 55.031 c 26.527
 59.531 24 65.637 24 72 c 24 120 l 24 126.363 26.527 132.469 31.031 136.969
 c 35.531 141.473 41.637 144 48 144 c 168 144 l 168 168 l 60 168 l 52.445
 168 45.332 171.559 40.801 177.602 c 17.398 208.801 l 14.199 213.066 14.199
 218.934 17.398 223.199 c 40.797 254.398 l 40.801 254.398 l 45.332 260.441
 52.445 264 60 264 c 168 264 l 168 384 l 216 384 l 216 264 l 336 264 l 342.363
 264 348.469 261.473 352.969 256.969 c 357.473 252.469 360 246.363 360 240
 c 360 192 l 360 185.637 357.473 179.531 352.969 175.031 c 348.469 170.527
 342.363 168 336 168 c 216 168 l 216 144 l 324 144 l 331.555 144 338.668
 140.441 343.199 134.398 c 366.598 103.199 l 366.602 103.199 l 369.801 98.934
 369.801 93.066 366.602 88.801 c 343.199 57.602 l 338.668 51.559 331.555
 48 324 48 c 216 48 l 216 33.938 l 216 25.363 211.426 17.438 204 13.152 
c 196.574 8.863 187.426 8.863 180 13.152 c 172.574 17.438 168 25.363 168
 33.938 c 324 72 m 342 96 l 324 120 l 48 120 l 48 72 l h
336 192 m 336 240 l 60 240 l 42 216 l 60 192 l h
336 192 m f
Q Q
showpage
%%Trailer
%%EOF
