%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 14 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 14 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 14 0 754 768 rectclip
1 0 0 -1 0 768 cm q
0 g
760.992 7.008 m 764.316 10.336 766.586 14.566 767.523 19.176 c 768.465 
23.781 768.027 28.566 766.273 32.93 c 631.875 368.93 l 631.871 368.93 l 
629.598 374.965 624.984 379.832 619.082 382.43 c 613.176 385.027 606.473
 385.141 600.484 382.738 c 594.496 380.34 589.727 375.629 587.25 369.672
 c 584.777 363.711 584.805 357.008 587.328 351.07 c 678.289 123.645 l 318.578
 483.355 l 384.625 587.133 l 384.625 587.137 l 389.227 594.371 389.621 603.516
 385.656 611.121 c 381.691 618.727 373.973 623.641 365.402 624.012 c 356.832
 624.379 348.715 620.148 344.113 612.91 c 270.625 497.375 l 30.863 344.832
 l 23.359 340.07 17.879 332.703 15.484 324.145 c 13.086 315.586 13.938 306.445
 17.875 298.48 c 21.812 290.512 28.562 284.285 36.816 280.992 c 735.07 1.777
 l 739.434 0.02 744.219 -0.418 748.824 0.523 c 753.434 1.461 757.664 3.734
 760.992 7.055 c h
284.641 449.426 m 644.352 89.715 l 76.367 316.895 l h
284.641 449.426 m f*
600 768 m 644.555 768 687.289 750.301 718.793 718.793 c 750.301 687.289
 768 644.555 768 600 c 768 555.445 750.301 512.711 718.793 481.207 c 687.289
 449.699 644.555 432 600 432 c 555.445 432 512.711 449.699 481.207 481.207
 c 449.699 512.711 432 555.445 432 600 c 432 644.555 449.699 687.289 481.207
 718.793 c 512.711 750.301 555.445 768 600 768 c 616.992 511.008 m 612.363
 506.383 606.043 503.852 599.5 503.996 c 592.957 504.141 586.758 506.949
 582.336 511.777 c 527.184 571.777 l 521.387 578.094 519.402 587.027 521.977
 595.207 c 524.551 603.387 531.293 609.57 539.664 611.43 c 548.035 613.289
 556.766 610.543 562.559 604.223 c 576 589.582 l 576 672 l 576 680.574 580.574
 688.496 588 692.785 c 595.426 697.07 604.574 697.07 612 692.785 c 619.426
 688.496 624 680.574 624 672 c 624 585.938 l 643.008 604.992 l 649.078 611.062
 657.926 613.434 666.219 611.211 c 674.512 608.988 680.988 602.512 683.211
 594.219 c 685.434 585.926 683.062 577.078 676.992 571.008 c h
616.992 511.008 m f*
Q Q
showpage
%%Trailer
%%EOF
