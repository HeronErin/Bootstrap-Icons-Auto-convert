%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 28 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 28 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 28 0 1508 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1521.984 14.016 m 1528.629 20.672 1533.172 29.133 1535.051 38.352 c 1536.93
 47.566 1536.055 57.133 1532.543 65.855 c 1263.742 737.855 l 1259.191 749.93
 1249.973 759.664 1238.16 764.859 c 1226.352 770.059 1212.945 770.281 1200.969
 765.48 c 1188.992 760.68 1179.453 751.258 1174.504 739.34 c 1169.551 727.426
 1169.605 714.02 1174.656 702.145 c 1356.578 247.297 l 637.152 966.723 l
 769.25 1174.273 l 769.246 1174.273 l 778.457 1188.746 779.246 1207.031 
771.316 1222.246 c 763.383 1237.457 747.941 1247.281 730.801 1248.02 c 713.664
 1248.758 697.434 1240.297 688.223 1225.824 c 541.246 994.754 l 61.727 689.664
 l 46.719 680.145 35.762 665.406 30.965 648.289 c 26.172 631.176 27.875 
612.891 35.75 596.957 c 43.629 581.023 57.121 568.566 73.633 561.984 c 1470.145
 3.551 l 1478.867 0.039 1488.434 -0.832 1497.648 1.047 c 1506.867 2.922 
1515.328 7.465 1521.984 14.113 c h
569.281 898.848 m 1288.707 179.422 l 152.734 633.793 l h
569.281 898.848 m f*
1200 1536 m 1289.113 1536 1374.574 1500.602 1437.586 1437.586 c 1500.602
 1374.574 1536 1289.113 1536 1200 c 1536 1110.887 1500.602 1025.426 1437.586
 962.414 c 1374.574 899.398 1289.113 864 1200 864 c 1110.887 864 1025.426
 899.398 962.414 962.414 c 899.398 1025.426 864 1110.887 864 1200 c 864 
1289.113 899.398 1374.574 962.414 1437.586 c 1025.426 1500.602 1110.887 
1536 1200 1536 c 1233.984 1022.016 m 1224.723 1012.766 1212.086 1007.699
 1199 1007.988 c 1185.914 1008.281 1173.516 1013.902 1164.672 1023.551 c
 1054.367 1143.551 l 1042.777 1156.191 1038.805 1174.055 1043.957 1190.414
 c 1049.105 1206.77 1062.59 1219.141 1079.332 1222.859 c 1096.074 1226.582
 1113.527 1221.086 1125.121 1208.449 c 1152 1179.168 l 1152 1344 l 1152 
1361.148 1161.148 1376.996 1176 1385.57 c 1190.852 1394.145 1209.148 1394.145
 1224 1385.57 c 1238.852 1376.996 1248 1361.148 1248 1344 c 1248 1171.871
 l 1286.016 1209.984 l 1298.156 1222.125 1315.855 1226.867 1332.438 1222.422
 c 1349.023 1217.98 1361.98 1205.023 1366.422 1188.438 c 1370.867 1171.855
 1366.125 1154.156 1353.984 1142.016 c h
1233.984 1022.016 m f*
Q Q
showpage
%%Trailer
%%EOF
