%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 768 m 377.637 768 371.531 765.473 367.031 760.969 c 362.527 756.469
 360 750.363 360 744 c 360 681.938 l 328.992 712.992 l 322.922 719.055 314.078
 721.418 305.793 719.191 c 297.508 716.965 291.039 710.488 288.824 702.199
 c 286.609 693.91 288.984 685.07 295.055 679.008 c 360 614.062 l 360 425.566
 l 196.801 519.789 l 172.992 608.59 l 172.992 608.594 l 170.762 616.875 
164.285 623.34 155.996 625.551 c 147.707 627.762 138.871 625.383 132.812
 619.309 c 126.754 613.238 124.395 604.395 126.625 596.113 c 138 553.777
 l 84.238 584.785 l 76.82 589.004 67.715 588.965 60.332 584.68 c 52.949 
580.395 48.398 572.512 48.379 563.973 c 48.359 555.438 52.875 547.535 60.238
 543.215 c 114 512.207 l 71.566 500.832 l 63.285 498.602 56.82 492.125 54.609
 483.836 c 52.398 475.547 54.777 466.711 60.852 460.652 c 66.922 454.594
 75.766 452.234 84.047 454.465 c 172.75 478.227 l 336 384 l 172.801 289.777
 l 84 313.539 l 84 313.535 l 75.773 315.586 67.074 313.145 61.117 307.109
 c 55.16 301.078 52.828 292.348 54.984 284.148 c 57.141 275.945 63.461 269.492
 71.617 267.168 c 114 255.793 l 60.238 224.785 l 54.684 221.625 50.617 216.379
 48.941 210.207 c 47.266 204.039 48.121 197.457 51.316 191.922 c 54.516 
186.383 59.789 182.352 65.969 180.719 c 72.148 179.082 78.727 179.984 84.238
 183.215 c 138 214.223 l 126.625 171.84 l 124.859 165.652 125.656 159.016
 128.828 153.418 c 132.004 147.82 137.293 143.734 143.512 142.074 c 149.727
 140.414 156.352 141.316 161.895 144.586 c 167.438 147.855 171.438 153.211
 172.992 159.457 c 196.754 248.211 l 360 342.434 l 360 153.938 l 295.055
 88.992 l 290.551 84.492 288.016 78.387 288.012 72.016 c 288.008 65.648 
290.531 59.539 295.031 55.031 c 299.531 50.527 305.637 47.992 312.008 47.988
 c 318.375 47.98 324.484 50.508 328.992 55.008 c 360 86.062 l 360 24 l 360
 15.426 364.574 7.504 372 3.215 c 379.426 -1.07 388.574 -1.07 396 3.215 
c 403.426 7.504 408 15.426 408 24 c 408 86.062 l 439.055 55.008 l 445.125
 48.945 453.969 46.582 462.254 48.809 c 470.539 51.035 477.008 57.512 479.223
 65.801 c 481.438 74.09 479.062 82.93 472.992 88.992 c 408 153.938 l 408
 342.434 l 571.199 248.211 l 595.008 159.41 l 595.008 159.406 l 597.238 
151.125 603.715 144.66 612.004 142.449 c 620.293 140.238 629.129 142.617
 635.188 148.691 c 641.246 154.762 643.605 163.605 641.375 171.887 c 630.047
 214.223 l 683.809 183.215 l 691.23 178.996 700.332 179.035 707.715 183.32
 c 715.098 187.605 719.652 195.488 719.672 204.027 c 719.688 212.562 715.172
 220.465 707.809 224.785 c 654.047 255.793 l 696.43 267.168 l 696.434 267.168
 l 704.715 269.398 711.18 275.875 713.391 284.164 c 715.602 292.453 713.223
 301.289 707.148 307.348 c 701.078 313.406 692.234 315.766 683.953 313.535
 c 595.25 289.773 l 432 384 l 595.199 478.223 l 683.953 454.461 l 683.953
 454.465 l 692.234 452.242 701.074 454.609 707.137 460.672 c 713.203 466.734
 715.57 475.574 713.355 483.855 c 711.137 492.141 704.668 498.609 696.383
 500.832 c 654 512.207 l 707.762 543.215 l 715.125 547.535 719.641 555.438
 719.621 563.973 c 719.602 572.512 715.051 580.395 707.668 584.68 c 700.285
 588.965 691.18 589.004 683.762 584.785 c 630 553.777 l 641.328 596.16 l
 643.094 602.348 642.297 608.984 639.121 614.582 c 635.945 620.18 630.656
 624.266 624.441 625.926 c 618.223 627.586 611.602 626.684 606.059 623.414
 c 600.516 620.145 596.516 614.789 594.961 608.543 c 571.199 519.789 l 408
 425.566 l 408 614.062 l 472.945 679.008 l 479.016 685.07 481.391 693.91
 479.176 702.199 c 476.961 710.488 470.492 716.965 462.207 719.191 c 453.922
 721.418 445.078 719.055 439.008 712.992 c 407.953 681.938 l 407.953 744
 l 407.953 750.363 405.422 756.469 400.922 760.969 c 396.422 765.473 390.316
 768 383.953 768 c h
384 768 m f
Q Q
showpage
%%Trailer
%%EOF
