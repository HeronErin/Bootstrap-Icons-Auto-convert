%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 0 45 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 0 45 48
48 48 cairo_set_page_size
%%EndPageSetup
q 3 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
24 48 m 23.172 48 22.5 47.328 22.5 46.5 c 22.5 42.621 l 20.562 44.562 l
 19.977 45.148 19.023 45.148 18.441 44.559 c 17.855 43.973 17.855 43.023
 18.441 42.438 c 22.5 38.379 l 22.5 26.598 l 12.301 32.488 l 10.812 38.039
 l 10.812 38.035 l 10.598 38.836 9.773 39.312 8.973 39.098 c 8.172 38.879
 7.699 38.059 7.914 37.258 c 8.625 34.613 l 5.266 36.551 l 4.547 36.957 
3.637 36.711 3.223 35.996 c 2.812 35.281 3.055 34.367 3.766 33.949 c 7.125
 32.012 l 4.473 31.301 l 3.672 31.086 3.199 30.262 3.414 29.465 c 3.629 
28.664 4.453 28.188 5.254 28.402 c 10.797 29.887 l 21 24 l 10.801 18.109
 l 5.25 19.594 l 5.25 19.598 l 4.457 19.793 3.648 19.32 3.438 18.527 c 3.227
 17.738 3.688 16.922 4.477 16.699 c 7.125 15.988 l 3.766 14.051 l 3.418 
13.852 3.164 13.523 3.059 13.137 c 2.953 12.754 3.008 12.34 3.207 11.996
 c 3.406 11.648 3.738 11.398 4.121 11.293 c 4.508 11.191 4.922 11.25 5.266
 11.449 c 8.625 13.387 l 7.914 10.738 l 7.805 10.352 7.852 9.938 8.051 9.59
 c 8.25 9.238 8.582 8.984 8.969 8.879 c 9.359 8.777 9.773 8.832 10.117 9.035
 c 10.465 9.242 10.715 9.574 10.812 9.965 c 12.297 15.512 l 22.5 21.402 
l 22.5 9.621 l 18.441 5.562 l 18.16 5.281 18 4.898 18 4.5 c 18 4.102 18.16
 3.723 18.441 3.441 c 19.023 2.852 19.977 2.852 20.562 3.438 c 22.5 5.379
 l 22.5 1.5 l 22.5 0.672 23.172 0 24 0 c 24.828 0 25.5 0.672 25.5 1.5 c 
25.5 5.379 l 27.441 3.438 l 28.027 2.852 28.977 2.852 29.562 3.441 c 30.148
 4.027 30.148 4.977 29.562 5.562 c 25.5 9.621 l 25.5 21.402 l 35.699 15.512
 l 37.188 9.961 l 37.188 9.965 l 37.402 9.164 38.227 8.688 39.027 8.902 
c 39.828 9.121 40.301 9.941 40.086 10.742 c 39.379 13.387 l 42.738 11.449
 l 43.453 11.043 44.367 11.289 44.777 12.004 c 45.191 12.719 44.949 13.633
 44.238 14.051 c 40.879 15.988 l 43.527 16.699 l 44.328 16.914 44.801 17.738
 44.586 18.535 c 44.371 19.336 43.547 19.812 42.746 19.598 c 37.203 18.113
 l 27 24 l 37.199 29.891 l 42.746 28.406 l 42.746 28.402 l 43.547 28.188
 44.371 28.664 44.586 29.465 c 44.801 30.266 44.324 31.086 43.523 31.301
 c 40.875 32.012 l 44.234 33.949 l 44.945 34.367 45.188 35.281 44.777 35.996
 c 44.363 36.711 43.453 36.957 42.734 36.551 c 39.375 34.613 l 40.082 37.262
 l 40.191 37.648 40.145 38.062 39.945 38.41 c 39.746 38.762 39.418 39.016
 39.027 39.121 c 38.641 39.223 38.227 39.168 37.879 38.965 c 37.531 38.758
 37.281 38.426 37.184 38.035 c 35.699 32.488 l 25.5 26.598 l 25.5 38.379
 l 29.559 42.438 l 30.145 43.023 30.145 43.973 29.559 44.559 c 28.977 45.148
 28.023 45.148 27.438 44.562 c 25.496 42.621 l 25.496 46.5 l 25.496 46.898
 25.34 47.281 25.059 47.562 c 24.777 47.844 24.395 48 23.996 48 c h
24 48 m f
Q Q
showpage
%%Trailer
%%EOF
