%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 48 0 348 378
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 48 0 348 378
384 384 cairo_set_page_size
%%EndPageSetup
q 48 0 300 378 rectclip
1 0 0 -1 0 384 cm q
0 g
166.945 41.879 m 168.504 19.441 189.793 2.09 212.734 7.801 c 219 9.387 
l 230.113 12.172 239.977 20.332 243.289 32.547 c 248.57 52.133 256.082 92.812
 244.777 140.785 c 248.309 140.297 251.855 139.891 255.406 139.559 c 272.52
 138 295.461 137.832 315.789 144.598 c 328.223 148.75 339.645 160.941 344.59
 175.148 c 349.004 187.918 348.43 203.035 338.973 216.742 c 340.348 219.621
 341.453 222.527 342.285 225.453 c 344.133 231.934 344.996 239.062 344.996
 245.996 c 344.996 252.934 344.133 260.059 342.285 266.539 c 341.348 269.777
 340.125 273.09 338.445 276.234 c 342.5 285.523 341.012 295.891 338.375 
303.785 c 338.375 303.793 l 335.66 311.582 331.703 318.883 326.664 325.414
 c 327.961 329.062 328.488 332.902 328.488 336.574 c 328.488 343.895 326.352
 351.574 322.418 358.461 c 314.398 372.527 298.488 384 276 384 c 192 384
 l 177.48 384 166.32 382.055 156.816 378.77 c 148.641 375.789 140.832 371.891
 133.535 367.152 c 132.383 366.434 l 120.285 359.066 108.406 351.816 82.75
 349.105 c 64.367 347.137 48 332.305 48 312 c 48 216 l 48 195.602 64.441
 181.633 80.566 177.238 c 100.941 171.672 118.344 158.352 131.734 143.398
 c 145.176 128.352 153.672 112.68 156.672 104.062 c 161.449 90.262 165.215
 67.125 166.945 41.902 c h
166.945 41.879 m f
Q Q
showpage
%%Trailer
%%EOF
