%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 87 95
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 87 95
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 75 95 rectclip
1 0 0 -1 0 96 cm q
0 g
41.734 10.469 m 42.125 4.859 47.449 0.523 53.184 1.949 c 54.75 2.344 l 
57.527 3.039 59.992 5.078 60.82 8.133 c 62.141 13.027 64.02 23.199 61.191
 35.191 c 61.195 35.195 l 62.078 35.074 62.965 34.973 63.852 34.891 c 68.129
 34.5 73.867 34.457 78.949 36.152 c 82.059 37.191 84.914 40.238 86.148 43.789
 c 87.254 46.98 87.109 50.762 84.746 54.188 c 85.09 54.906 85.367 55.633
 85.574 56.367 c 86.035 57.988 86.254 59.77 86.254 61.504 c 86.254 63.238
 86.039 65.02 85.574 66.641 c 85.34 67.449 85.035 68.277 84.613 69.066 c
 85.629 71.387 85.254 73.98 84.594 75.953 c 84.594 75.949 l 83.914 77.895
 82.926 79.723 81.664 81.355 c 81.988 82.266 82.121 83.227 82.121 84.145
 c 82.121 85.973 81.586 87.895 80.602 89.617 c 78.602 93.133 74.621 96 69
 96 c 48 96 l 44.371 96 41.578 95.516 39.203 94.691 c 37.16 93.945 35.207
 92.973 33.383 91.789 c 33.094 91.609 l 30.07 89.766 27.102 87.957 20.688
 87.277 c 16.094 86.785 12 83.074 12 78 c 12 54 l 12 48.898 16.109 45.406
 20.141 44.309 c 25.234 42.918 29.586 39.586 32.934 35.848 c 36.293 32.086
 38.418 28.168 39.168 26.012 c 40.363 22.562 41.305 16.777 41.734 10.473
 c h
41.734 10.469 m f
Q Q
showpage
%%Trailer
%%EOF
