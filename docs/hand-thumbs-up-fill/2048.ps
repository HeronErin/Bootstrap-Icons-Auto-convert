%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1390 1510
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1390 1510
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1198 1510 rectclip
1 0 0 -1 0 1536 cm q
0 g
667.777 167.52 m 674.016 77.762 759.168 8.352 850.945 31.199 c 876 37.535
 l 920.449 48.672 959.902 81.312 973.152 130.176 c 994.273 208.512 1024.32
 371.23 979.105 563.137 c 993.242 561.188 1007.422 559.555 1021.633 558.238
 c 1090.082 552 1181.855 551.328 1263.168 578.398 c 1312.895 595.008 1358.594
 643.773 1378.367 700.605 c 1396.031 751.676 1393.727 812.156 1355.902 866.973
 c 1361.406 878.492 1365.824 890.109 1369.148 901.82 c 1376.539 927.742 
1379.996 956.254 1379.996 983.996 c 1379.996 1011.738 1376.539 1040.254 
1369.148 1066.172 c 1365.406 1079.133 1360.508 1092.379 1353.789 1104.957
 c 1370.012 1142.109 1364.062 1183.582 1353.5 1215.164 c 1353.504 1215.168
 l 1342.637 1246.328 1326.816 1275.535 1306.656 1301.664 c 1311.84 1316.258
 1313.953 1331.617 1313.953 1346.305 c 1313.953 1375.586 1305.41 1406.305
 1289.664 1433.855 c 1257.602 1490.113 1193.953 1536 1104 1536 c 768 1536
 l 709.922 1536 665.281 1528.223 627.266 1515.07 c 594.57 1503.148 563.328
 1487.562 534.145 1468.609 c 529.535 1465.73 l 481.152 1436.258 433.633 
1407.266 331.008 1396.418 c 257.473 1388.543 192 1329.215 192 1248 c 192
 864 l 192 782.398 257.762 726.527 322.273 708.961 c 403.777 686.688 473.379
 633.41 526.945 573.602 c 580.707 513.41 614.688 450.723 626.688 416.258
 c 645.793 361.059 660.863 268.516 667.777 167.617 c h
667.777 167.52 m f
Q Q
showpage
%%Trailer
%%EOF
