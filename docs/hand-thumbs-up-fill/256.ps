%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 0 174 189
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 0 174 189
192 192 cairo_set_page_size
%%EndPageSetup
q 24 0 150 189 rectclip
1 0 0 -1 0 192 cm q
0 g
83.473 20.941 m 84.254 9.719 94.895 1.043 106.367 3.898 c 109.5 4.691 l
 115.055 6.082 119.988 10.164 121.645 16.27 c 124.285 26.062 128.039 46.402
 122.387 70.391 c 124.156 70.148 125.926 69.945 127.703 69.781 c 136.258
 69 147.73 68.918 157.895 72.301 c 164.109 74.375 169.824 80.473 172.293
 87.578 c 174.5 93.961 174.215 101.523 169.484 108.375 c 170.172 109.816
 170.723 111.266 171.141 112.73 c 172.066 115.969 172.496 119.535 172.496
 123.004 c 172.496 126.473 172.062 130.035 171.141 133.277 c 170.672 134.898
 170.062 136.555 169.219 138.125 c 171.246 142.77 170.504 147.953 169.184
 151.902 c 169.188 151.895 l 167.828 155.793 165.852 159.441 163.332 162.707
 c 163.98 164.531 164.242 166.449 164.242 168.285 c 164.242 171.945 163.176
 175.785 161.207 179.23 c 157.199 186.266 149.242 192 138 192 c 96 192 l
 88.738 192 83.16 191.027 78.406 189.383 c 74.32 187.895 70.418 185.945 
66.77 183.574 c 66.195 183.215 l 60.148 179.531 54.207 175.906 41.379 174.551
 c 32.184 173.566 24 166.152 24 156 c 24 108 l 24 97.801 32.219 90.816 40.285
 88.621 c 50.473 85.836 59.172 79.176 65.871 71.699 c 72.59 64.176 76.84
 56.34 78.34 52.031 c 80.727 45.133 82.613 33.562 83.477 20.953 c h
83.473 20.941 m f
Q Q
showpage
%%Trailer
%%EOF
