%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 0 695 755
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 0 695 755
768 768 cairo_set_page_size
%%EndPageSetup
q 96 0 599 755 rectclip
1 0 0 -1 0 768 cm q
0 g
333.887 83.762 m 337.008 38.879 379.586 4.176 425.473 15.602 c 438 18.77
 l 460.223 24.336 479.953 40.656 486.574 65.09 c 497.133 104.258 512.16 
185.617 489.551 281.57 c 489.551 281.566 l 496.621 280.594 503.711 279.777
 510.816 279.121 c 545.039 276 590.93 275.664 631.586 289.199 c 656.449 
297.504 679.297 321.887 689.188 350.305 c 698.02 375.84 696.867 406.082 
677.957 433.488 c 680.711 439.25 682.918 445.055 684.582 450.914 c 688.277
 463.875 690.008 478.129 690.008 492.004 c 690.008 505.875 688.281 520.133
 684.582 533.094 c 682.711 539.574 680.262 546.199 676.902 552.484 c 685.016
 571.059 682.039 591.797 676.758 607.59 c 676.754 607.586 l 671.316 623.164
 663.41 637.77 653.328 650.832 c 655.922 658.129 656.977 665.809 656.977
 673.152 c 656.977 687.793 652.703 703.152 644.832 716.93 c 628.801 745.055
 596.977 768 552 768 c 384 768 l 354.961 768 332.641 764.113 313.633 757.535
 c 297.285 751.574 281.664 743.781 267.07 734.305 c 264.766 732.863 l 240.574
 718.129 216.812 703.633 165.5 698.207 c 128.734 694.273 96 664.609 96 624
 c 96 432 l 96 391.199 128.879 363.266 161.137 354.48 c 201.891 343.344 
236.688 316.703 263.473 286.801 c 290.352 256.703 307.344 225.359 313.344
 208.129 c 322.895 180.527 330.434 134.258 333.887 83.809 c h
333.887 83.762 m f
Q Q
showpage
%%Trailer
%%EOF
