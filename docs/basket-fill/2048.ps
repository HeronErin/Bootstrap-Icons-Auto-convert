%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1441
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1441
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1441 rectclip
1 0 0 -1 0 1536 cm q
0 g
486.816 119.328 m 495.629 104.613 511.625 95.723 528.773 95.996 c 545.926
 96.273 561.625 105.68 569.957 120.668 c 578.293 135.66 578 153.957 569.184
 168.672 c 324.77 576 l 1211.234 576 l 966.719 168.672 l 957.906 153.957
 957.609 135.66 965.945 120.668 c 974.281 105.68 989.98 96.273 1007.129 
95.996 c 1024.277 95.723 1040.273 104.613 1049.09 119.328 c 1323.168 576
 l 1488 576 l 1500.73 576 1512.938 581.059 1521.941 590.059 c 1530.941 599.062
 1536 611.27 1536 624 c 1536 816 l 1536 828.73 1530.941 840.938 1521.941
 849.941 c 1512.938 858.941 1500.73 864 1488 864 c 1440 864 l 1440 1344 
l 1440 1377.703 1431.129 1410.812 1414.277 1440 c 1397.426 1469.188 1373.188
 1493.426 1344 1510.277 c 1314.812 1527.129 1281.703 1536 1248 1536 c 288
 1536 l 237.078 1536 188.242 1515.773 152.234 1479.766 c 116.227 1443.758
 96 1394.922 96 1344 c 96 864 l 48 864 l 35.27 864 23.062 858.941 14.059
 849.941 c 5.059 840.938 0 828.73 0 816 c 0 624 l 0 611.27 5.059 599.062
 14.059 590.059 c 23.062 581.059 35.27 576 48 576 c 212.832 576 l h
336 1008 m 336 990.852 326.852 975.004 312 966.43 c 297.148 957.855 278.852
 957.855 264 966.43 c 249.148 975.004 240 990.852 240 1008 c 240 1296 l 
240 1313.148 249.148 1328.996 264 1337.57 c 278.852 1346.145 297.148 1346.145
 312 1337.57 c 326.852 1328.996 336 1313.148 336 1296 c h
576 1008 m 576 990.852 566.852 975.004 552 966.43 c 537.148 957.855 518.852
 957.855 504 966.43 c 489.148 975.004 480 990.852 480 1008 c 480 1296 l 
480 1313.148 489.148 1328.996 504 1337.57 c 518.852 1346.145 537.148 1346.145
 552 1337.57 c 566.852 1328.996 576 1313.148 576 1296 c h
816 1008 m 816 990.852 806.852 975.004 792 966.43 c 777.148 957.855 758.852
 957.855 744 966.43 c 729.148 975.004 720 990.852 720 1008 c 720 1296 l 
720 1313.148 729.148 1328.996 744 1337.57 c 758.852 1346.145 777.148 1346.145
 792 1337.57 c 806.852 1328.996 816 1313.148 816 1296 c h
1056 1008 m 1056 990.852 1046.852 975.004 1032 966.43 c 1017.148 957.855
 998.852 957.855 984 966.43 c 969.148 975.004 960 990.852 960 1008 c 960
 1296 l 960 1313.148 969.148 1328.996 984 1337.57 c 998.852 1346.145 1017.148
 1346.145 1032 1337.57 c 1046.852 1328.996 1056 1313.148 1056 1296 c h
1296 1008 m 1296 990.852 1286.852 975.004 1272 966.43 c 1257.148 957.855
 1238.852 957.855 1224 966.43 c 1209.148 975.004 1200 990.852 1200 1008 
c 1200 1296 l 1200 1313.148 1209.148 1328.996 1224 1337.57 c 1238.852 1346.145
 1257.148 1346.145 1272 1337.57 c 1286.852 1328.996 1296 1313.148 1296 1296
 c h
1296 1008 m f
Q Q
showpage
%%Trailer
%%EOF
