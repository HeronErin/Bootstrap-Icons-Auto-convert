%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 721 rectclip
1 0 0 -1 0 768 cm q
0 g
243.406 59.664 m 247.816 52.309 255.812 47.859 264.387 48 c 272.961 48.137
 280.812 52.84 284.98 60.336 c 289.148 67.828 289 76.98 284.594 84.336 c
 162.383 288 l 605.613 288 l 483.359 84.336 l 478.953 76.98 478.805 67.828
 482.973 60.336 c 487.141 52.84 494.988 48.137 503.566 48 c 512.141 47.859
 520.137 52.309 524.543 59.664 c 661.586 288 l 744 288 l 750.363 288 756.469
 290.527 760.969 295.031 c 765.473 299.531 768 305.637 768 312 c 768 408
 l 768 414.363 765.473 420.469 760.969 424.969 c 756.469 429.473 750.363
 432 744 432 c 720 432 l 720 672 l 720 697.461 709.887 721.879 691.883 739.883
 c 673.879 757.887 649.461 768 624 768 c 144 768 l 118.539 768 94.121 757.887
 76.117 739.883 c 58.113 721.879 48 697.461 48 672 c 48 432 l 24 432 l 17.637
 432 11.531 429.473 7.031 424.969 c 2.527 420.469 0 414.363 0 408 c 0 312
 l 0 305.637 2.527 299.531 7.031 295.031 c 11.531 290.527 17.637 288 24 
288 c 106.414 288 l h
168 504 m 168 495.426 163.426 487.504 156 483.215 c 148.574 478.93 139.426
 478.93 132 483.215 c 124.574 487.504 120 495.426 120 504 c 120 648 l 120
 656.574 124.574 664.496 132 668.785 c 139.426 673.07 148.574 673.07 156
 668.785 c 163.426 664.496 168 656.574 168 648 c h
288 504 m 288 495.426 283.426 487.504 276 483.215 c 268.574 478.93 259.426
 478.93 252 483.215 c 244.574 487.504 240 495.426 240 504 c 240 648 l 240
 656.574 244.574 664.496 252 668.785 c 259.426 673.07 268.574 673.07 276
 668.785 c 283.426 664.496 288 656.574 288 648 c h
408 504 m 408 495.426 403.426 487.504 396 483.215 c 388.574 478.93 379.426
 478.93 372 483.215 c 364.574 487.504 360 495.426 360 504 c 360 648 l 360
 656.574 364.574 664.496 372 668.785 c 379.426 673.07 388.574 673.07 396
 668.785 c 403.426 664.496 408 656.574 408 648 c h
528 504 m 528 495.426 523.426 487.504 516 483.215 c 508.574 478.93 499.426
 478.93 492 483.215 c 484.574 487.504 480 495.426 480 504 c 480 648 l 480
 656.574 484.574 664.496 492 668.785 c 499.426 673.07 508.574 673.07 516
 668.785 c 523.426 664.496 528 656.574 528 648 c h
648 504 m 648 495.426 643.426 487.504 636 483.215 c 628.574 478.93 619.426
 478.93 612 483.215 c 604.574 487.504 600 495.426 600 504 c 600 648 l 600
 656.574 604.574 664.496 612 668.785 c 619.426 673.07 628.574 673.07 636
 668.785 c 643.426 664.496 648 656.574 648 648 c h
648 504 m f
Q Q
showpage
%%Trailer
%%EOF
