%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
43.211 95.801 m 35.605 95.016 28.301 92.422 21.898 88.242 c 16.512 84.73
 15.293 83.285 15.293 80.406 c 15.293 74.617 21.664 64.469 32.566 52.91 
c 38.754 46.34 47.383 38.641 48.312 38.852 c 50.125 39.258 64.621 53.391
 70.043 60.039 c 78.621 70.559 82.57 79.172 80.566 83.012 c 79.043 85.926
 69.586 91.633 62.645 93.824 c 56.922 95.629 49.402 96.398 43.211 95.805
 c 8.016 74.383 m 3.535 67.52 1.273 60.762 0.18 50.98 c -0.18 47.746 -0.047
 45.906 1 39.281 c 2.309 31.02 7.012 21.461 12.672 15.582 c 15.078 13.078
 15.293 13.02 18.227 14.004 c 21.797 15.203 25.605 17.832 31.504 23.172 
c 34.949 26.285 l 33.07 28.594 l 24.336 39.316 15.121 54.516 11.641 63.918
 c 9.75 69.031 8.988 74.16 9.805 76.297 c 10.352 77.738 9.848 77.195 8.004
 74.383 c h
86.621 75.555 m 87.066 73.395 86.508 69.434 85.191 65.434 c 82.352 56.777
 72.863 40.664 64.145 29.715 c 61.402 26.266 l 64.367 23.543 l 68.242 19.984
 70.938 17.855 73.848 16.043 c 76.133 14.621 79.41 13.355 80.812 13.355 
c 81.684 13.355 84.738 16.523 87.203 19.98 c 87.203 19.973 l 91.125 25.566
 93.863 31.898 95.262 38.586 c 96.18 42.953 96.258 52.301 95.406 56.656 
c 94.605 60.559 93.398 64.367 91.805 68.016 c 90.73 70.375 88.062 74.953
 86.883 76.441 c 86.281 77.211 86.281 77.203 86.625 75.555 c h
44.012 11.711 m 39.992 9.672 33.789 7.48 30.355 6.895 c 28.848 6.664 27.324
 6.578 25.801 6.637 c 22.977 6.781 23.102 6.637 27.637 4.488 c 31.191 2.781
 34.949 1.531 38.82 0.77 c 43.621 -0.246 52.656 -0.25 57.383 0.738 c 62.484
 1.816 68.5 4.051 71.891 6.137 c 72.898 6.754 l 70.59 6.633 l 65.992 6.406
 59.309 8.254 52.121 11.75 c 49.957 12.805 48.066 13.645 47.926 13.621 c
 47.93 13.625 l 46.602 13.027 45.293 12.391 44.004 11.711 c h
44.012 11.711 m f
Q Q
showpage
%%Trailer
%%EOF
