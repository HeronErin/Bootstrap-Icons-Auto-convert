%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:16 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
345.695 766.414 m 284.859 760.121 226.406 739.387 175.199 705.938 c 132.094
 677.859 122.352 666.289 122.352 643.25 c 122.352 596.93 173.328 515.762
 260.543 423.266 c 310.031 370.703 379.055 309.121 386.496 310.801 c 400.992
 314.066 516.961 427.105 560.352 480.289 c 628.992 564.434 660.574 633.359
 644.543 664.082 c 632.352 687.41 556.703 733.059 501.168 750.578 c 455.375
 765.027 395.23 771.172 345.695 766.418 c 64.129 595.059 m 28.273 540.145
 10.176 486.098 1.441 407.855 c -1.438 381.984 -0.383 367.246 8.016 314.254
 c 18.48 248.156 56.113 171.695 101.375 124.652 c 120.621 104.637 122.352
 104.156 145.824 112.027 c 174.383 121.629 204.863 142.652 252.047 185.371
 c 279.598 210.281 l 264.574 228.762 l 194.688 314.543 120.961 436.129 93.121
 511.344 c 78 552.238 71.906 593.281 78.434 610.367 c 82.801 621.887 78.77
 617.566 64.035 595.055 c h
692.977 604.418 m 696.527 587.137 692.066 555.457 681.551 523.441 c 658.848
 454.176 582.91 325.297 513.168 237.699 c 491.23 210.098 l 514.941 188.305
 l 545.949 159.84 567.5 142.801 590.781 128.305 c 609.07 116.93 635.277 
106.801 646.508 106.801 c 653.469 106.801 677.898 132.145 697.629 159.793
 c 697.633 159.793 l 728.988 204.543 750.918 255.199 762.098 308.688 c 769.441
 343.633 770.066 418.414 763.25 453.262 c 763.246 453.266 l 756.848 484.477
 747.195 514.93 734.449 544.129 c 725.855 562.992 704.496 599.617 695.09
 611.52 c 690.289 617.664 690.289 617.617 693.027 604.414 c h
352.078 93.695 m 319.918 77.375 270.285 59.855 242.832 55.152 c 230.781
 53.309 218.582 52.617 206.398 53.09 c 183.789 54.242 184.797 53.09 221.086
 35.906 c 221.09 35.902 l 249.539 22.254 279.602 12.254 310.559 6.145 c 
348.957 -1.969 421.246 -2.016 459.07 5.906 c 499.871 14.547 548.016 32.402
 575.133 49.105 c 583.195 54.051 l 564.715 53.09 l 527.945 51.266 474.477
 66.051 416.973 94.035 c 399.645 102.484 384.523 109.203 383.422 109.012
 c 383.426 109.008 l 372.809 104.223 362.34 99.117 352.031 93.695 c h
352.078 93.695 m f
Q Q
showpage
%%Trailer
%%EOF
