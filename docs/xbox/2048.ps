%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
691.391 1532.832 m 569.719 1520.242 452.809 1478.773 350.398 1411.871 c
 264.191 1355.711 244.703 1332.574 244.703 1286.496 c 244.703 1193.855 346.656
 1031.52 521.086 846.527 c 620.062 741.406 758.113 618.238 772.992 621.602
 c 801.984 628.129 1033.922 854.211 1120.703 960.578 c 1257.984 1128.867
 1321.152 1266.723 1289.086 1328.164 c 1264.703 1374.82 1113.406 1466.117
 1002.332 1501.156 c 910.746 1530.051 790.461 1542.34 691.387 1532.836 c
 128.25 1190.117 m 56.543 1080.289 20.352 972.191 2.879 815.711 c -2.883
 763.969 -0.77 734.496 16.031 628.512 c 36.961 496.32 112.223 343.391 202.75
 249.312 c 241.246 209.281 244.703 208.32 291.645 224.066 c 348.766 243.266
 409.723 285.312 504.094 370.754 c 559.199 420.578 l 529.152 457.539 l 389.375
 629.09 241.922 872.258 186.238 1022.688 c 156 1104.48 143.805 1186.559 
156.863 1220.734 c 165.598 1243.773 157.535 1235.133 128.062 1190.109 c 
h
1385.945 1208.836 m 1393.051 1174.277 1384.121 1110.914 1363.098 1046.883
 c 1317.691 908.355 1165.816 650.594 1026.328 475.395 c 982.457 420.195 
l 1029.883 376.609 l 1091.898 319.68 1135.004 285.602 1181.562 256.609 c
 1218.137 233.855 1270.555 213.602 1293.02 213.602 c 1306.941 213.602 1355.805
 264.289 1395.258 319.586 c 1395.266 319.586 l 1457.977 409.086 1501.84 
510.402 1524.191 617.375 c 1538.879 687.262 1540.129 836.832 1526.496 906.527
 c 1513.699 968.949 1494.391 1029.859 1468.895 1088.258 c 1451.711 1125.984
 1408.992 1199.234 1390.176 1223.043 c 1380.574 1235.332 1380.574 1235.234
 1386.047 1208.836 c h
704.16 187.391 m 639.84 154.75 540.574 119.711 485.664 110.301 c 485.664
 110.305 l 461.562 106.617 437.164 105.234 412.801 106.176 c 367.586 108.48
 369.602 106.176 442.176 71.809 c 499.078 44.508 559.203 24.508 621.121 
12.289 c 697.922 -3.934 842.496 -4.031 918.145 11.809 c 999.746 29.09 1096.031
 64.801 1150.273 98.207 c 1166.402 108.094 l 1129.441 106.172 l 1055.906
 102.523 948.961 132.094 833.953 188.059 c 799.297 204.953 769.059 218.395
 766.848 218.012 c 766.848 218.016 l 745.617 208.445 724.676 198.23 704.062
 187.391 c h
704.16 187.391 m f
Q Q
showpage
%%Trailer
%%EOF
