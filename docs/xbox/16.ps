%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
5.402 11.977 m 4.449 11.875 3.539 11.555 2.738 11.031 c 2.066 10.594 1.914
 10.41 1.914 10.051 c 1.914 9.328 2.711 8.059 4.074 6.613 c 4.844 5.793 
5.922 4.828 6.039 4.855 c 6.266 4.906 8.078 6.672 8.754 7.504 c 9.828 8.82
 10.32 9.895 10.07 10.375 c 9.879 10.738 8.699 11.453 7.828 11.727 c 7.113
 11.953 6.172 12.047 5.398 11.973 c 1 9.297 m 0.441 8.441 0.16 7.594 0.023
 6.371 c -0.023 5.969 -0.004 5.738 0.125 4.91 c 0.289 3.879 0.875 2.684 
1.582 1.949 c 1.883 1.637 1.91 1.629 2.277 1.754 c 2.723 1.902 3.199 2.23
 3.938 2.898 c 4.367 3.289 l 4.133 3.578 l 3.043 4.914 1.891 6.816 1.453
 7.988 c 1.219 8.629 1.121 9.27 1.223 9.535 c 1.289 9.715 1.227 9.648 0.996
 9.297 c h
10.824 9.441 m 10.879 9.172 10.809 8.676 10.645 8.176 c 10.289 7.094 9.102
 5.078 8.012 3.711 c 7.668 3.281 l 8.039 2.941 l 8.523 2.496 8.859 2.23 
9.223 2.004 c 9.508 1.824 9.918 1.668 10.094 1.668 c 10.203 1.668 10.586
 2.062 10.891 2.496 c 10.902 2.496 l 11.391 3.195 11.734 3.988 11.906 4.824
 c 12.02 5.371 12.031 6.539 11.926 7.082 c 11.824 7.57 11.676 8.047 11.477
 8.504 c 11.344 8.797 11.008 9.371 10.863 9.559 c 10.789 9.656 10.789 9.652
 10.832 9.449 c h
5.5 1.465 m 4.996 1.211 4.223 0.938 3.793 0.863 c 3.605 0.832 3.414 0.82
 3.227 0.828 c 2.875 0.848 2.891 0.828 3.457 0.559 c 3.453 0.562 l 3.898
 0.348 4.367 0.191 4.852 0.098 c 5.453 -0.027 6.582 -0.031 7.172 0.094 c
 7.809 0.23 8.562 0.508 8.984 0.77 c 9.109 0.848 l 8.82 0.832 l 8.246 0.805
 7.41 1.035 6.512 1.473 c 6.242 1.605 6.004 1.711 5.988 1.707 c 5.992 1.703
 l 5.824 1.629 5.66 1.547 5.5 1.465 c h
5.5 1.465 m f
Q Q
showpage
%%Trailer
%%EOF
