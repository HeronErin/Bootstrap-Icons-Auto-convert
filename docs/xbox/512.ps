%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:15 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
172.848 383.207 m 142.43 380.062 113.203 369.691 87.602 352.969 c 66.051
 338.93 61.176 333.145 61.176 321.625 c 61.176 298.465 86.664 257.883 130.273
 211.633 c 155.016 185.352 189.527 154.559 193.246 155.398 c 200.492 157.031
 258.477 213.551 280.176 240.141 c 314.496 282.211 330.289 316.676 322.273
 332.035 c 316.176 343.699 278.352 366.523 250.586 375.281 c 227.691 382.504
 197.617 385.578 172.852 383.203 c 32.066 297.523 m 14.137 270.07 5.09 243.047
 0.719 203.93 c -0.723 190.992 -0.191 183.625 4.008 157.129 c 9.238 124.082
 28.055 85.848 50.688 62.328 c 60.312 52.32 61.176 52.082 72.91 56.016 c
 87.191 60.816 102.43 71.328 126.023 92.688 c 139.801 105.145 l 132.289 
114.383 l 97.344 157.273 60.48 218.062 46.559 255.672 c 39 276.121 35.949
 296.641 39.215 305.184 c 41.398 310.945 39.383 308.785 32.016 297.527 c
 h
346.492 302.203 m 348.27 293.562 346.035 277.723 340.781 261.715 c 329.43
 227.082 291.461 162.645 256.59 118.844 c 245.621 105.043 l 257.477 94.148
 l 272.98 79.918 283.758 71.395 295.398 64.148 c 304.543 58.461 317.645 
53.395 323.262 53.395 c 326.742 53.395 338.957 66.066 348.82 79.891 c 348.816
 79.895 l 364.492 102.273 375.461 127.602 381.047 154.344 c 384.719 171.816
 385.031 209.207 381.621 226.633 c 381.625 226.633 l 378.426 242.238 373.598
 257.465 367.223 272.062 c 362.926 281.496 352.246 299.805 347.543 305.758
 c 345.145 308.828 345.145 308.805 346.512 302.207 c h
176.039 46.848 m 159.961 38.688 135.145 29.926 121.414 27.574 c 115.391
 26.656 109.289 26.309 103.199 26.543 c 91.895 27.117 92.398 26.543 110.543
 17.949 c 110.543 17.953 l 124.77 11.125 139.801 6.125 155.281 3.07 c 174.48
 -0.984 210.625 -1.008 229.539 2.949 c 249.938 7.27 274.012 16.195 287.57
 24.551 c 291.602 27.023 l 282.363 26.543 l 263.98 25.633 237.242 33.023
 208.492 47.016 c 199.828 51.238 192.27 54.602 191.715 54.504 c 191.711 
54.504 l 186.402 52.109 181.168 49.559 176.016 46.848 c h
176.039 46.848 m f
Q Q
showpage
%%Trailer
%%EOF
