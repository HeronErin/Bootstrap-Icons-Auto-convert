%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.699 5.988 m 2.227 5.938 1.77 5.777 1.367 5.516 c 1.031 5.297 0.953 5.207
 0.953 5.027 c 0.953 4.664 1.352 4.031 2.031 3.309 c 2.422 2.895 2.961 2.414
 3.02 2.43 c 3.133 2.457 4.039 3.34 4.379 3.754 c 4.914 4.41 5.16 4.949 
5.035 5.191 c 4.941 5.375 4.348 5.73 3.914 5.867 c 3.555 5.98 3.086 6.027
 2.699 5.992 c 0.5 4.652 m 0.223 4.219 0.078 3.797 0.012 3.188 c -0.012 
2.984 -0.004 2.871 0.062 2.457 c 0.145 1.941 0.438 1.344 0.793 0.977 c 0.941
 0.82 0.957 0.816 1.141 0.879 c 1.363 0.953 1.602 1.117 1.969 1.453 c 2.184
 1.648 l 2.066 1.793 l 1.52 2.457 0.945 3.406 0.727 3.996 c 0.609 4.316 
0.562 4.637 0.613 4.77 c 0.648 4.859 0.617 4.824 0.5 4.648 c h
5.414 4.727 m 5.441 4.59 5.406 4.344 5.324 4.094 c 5.148 3.551 4.555 2.547
 4.008 1.863 c 3.836 1.648 l 4.02 1.477 l 4.262 1.254 4.43 1.121 4.613 1.008
 c 4.758 0.918 4.961 0.84 5.047 0.84 c 5.102 0.84 5.293 1.039 5.445 1.254
 c 5.449 1.25 l 5.695 1.598 5.867 1.992 5.953 2.41 c 6.012 2.684 6.016 3.266
 5.961 3.539 c 5.961 3.543 l 5.914 3.785 5.836 4.023 5.738 4.25 c 5.672 
4.398 5.504 4.684 5.43 4.777 c 5.391 4.824 5.391 4.824 5.414 4.723 c h
2.75 0.73 m 2.5 0.602 2.109 0.465 1.898 0.43 c 1.805 0.418 1.707 0.41 1.613
 0.414 c 1.438 0.422 1.445 0.414 1.727 0.281 c 1.949 0.176 2.184 0.098 2.426
 0.047 c 2.727 -0.016 3.289 -0.016 3.586 0.047 c 3.906 0.113 4.281 0.254
 4.492 0.383 c 4.555 0.422 l 4.41 0.414 l 4.121 0.398 3.707 0.516 3.258 
0.734 c 3.121 0.801 3.004 0.852 2.996 0.852 c 2.914 0.812 2.832 0.773 2.75
 0.73 c h
2.75 0.73 m f
Q Q
showpage
%%Trailer
%%EOF
