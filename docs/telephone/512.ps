%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
87.695 31.871 m 84.828 28.184 80.52 25.906 75.855 25.617 c 71.195 25.328
 66.637 27.055 63.336 30.359 c 38.52 55.199 l 26.926 66.816 22.656 83.254
 27.719 97.68 c 48.762 157.371 82.949 211.57 127.754 256.273 c 172.453 301.078
 226.652 335.262 286.344 356.305 c 300.77 361.367 317.207 357.098 328.824
 345.504 c 353.641 320.688 l 356.945 317.387 358.672 312.828 358.383 308.168
 c 358.094 303.508 355.816 299.195 352.129 296.328 c 296.762 253.273 l 292.812
 250.219 287.684 249.141 282.84 250.344 c 230.281 263.473 l 216.008 267.016
 200.926 262.836 190.512 252.457 c 131.566 193.488 l 121.18 183.078 116.992
 167.996 120.527 153.719 c 133.68 101.16 l 134.883 96.316 133.805 91.188
 130.754 87.238 c h
45.215 12.266 m 53.711 3.766 65.449 -0.676 77.441 0.074 c 89.438 0.824 
100.531 6.688 107.902 16.176 c 150.961 71.52 l 158.855 81.672 161.641 94.895
 158.52 107.375 c 145.391 159.934 l 145.391 159.938 l 144.02 165.473 145.641
 171.324 149.664 175.367 c 208.633 234.336 l 212.68 238.367 218.543 239.988
 224.09 238.609 c 276.625 225.48 l 289.102 222.379 302.316 225.164 312.48
 233.039 c 367.824 276.094 l 387.719 291.574 389.543 320.973 371.734 338.758
 c 346.918 363.574 l 329.156 381.336 302.613 389.133 277.871 380.422 c 277.871
 380.426 l 214.527 358.164 157.02 321.906 109.633 274.344 c 62.074 226.961
 25.812 169.465 3.551 106.129 c -5.137 81.41 2.664 54.84 20.422 37.082 c
 h
45.215 12.266 m f
Q Q
showpage
%%Trailer
%%EOF
