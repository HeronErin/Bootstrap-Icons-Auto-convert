%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 384 m 576 358.539 586.113 334.121 604.117 316.117 c 622.121 298.113
 646.539 288 672 288 c 864 288 l 889.461 288 913.879 298.113 931.883 316.117
 c 949.887 334.121 960 358.539 960 384 c 960 1152 l 960 1177.461 949.887
 1201.879 931.883 1219.883 c 913.879 1237.887 889.461 1248 864 1248 c 672
 1248 l 646.539 1248 622.121 1237.887 604.117 1219.883 c 586.113 1201.879
 576 1177.461 576 1152 c h
768 576 m 802.297 576 833.988 557.703 851.137 528 c 868.289 498.297 868.289
 461.703 851.137 432 c 833.988 402.297 802.297 384 768 384 c 733.703 384
 702.012 402.297 684.863 432 c 667.711 461.703 667.711 498.297 684.863 528
 c 702.012 557.703 733.703 576 768 576 c 768 864 m 802.297 864 833.988 845.703
 851.137 816 c 868.289 786.297 868.289 749.703 851.137 720 c 833.988 690.297
 802.297 672 768 672 c 733.703 672 702.012 690.297 684.863 720 c 667.711
 749.703 667.711 786.297 684.863 816 c 702.012 845.703 733.703 864 768 864
 c 864 1056 m 864 1021.703 845.703 990.012 816 972.863 c 786.297 955.711
 749.703 955.711 720 972.863 c 690.297 990.012 672 1021.703 672 1056 c 672
 1090.297 690.297 1121.988 720 1139.137 c 749.703 1156.289 786.297 1156.289
 816 1139.137 c 845.703 1121.988 864 1090.297 864 1056 c f
868.801 41.762 m 813.121 -13.918 722.879 -13.918 667.199 41.762 c 41.855
 667.199 l -13.824 722.879 -13.824 813.023 41.855 868.605 c 667.391 1494.141
 l 723.07 1549.82 813.215 1549.82 868.797 1494.141 c 1494.332 868.605 l 
1550.012 812.926 1550.012 722.781 1494.332 667.199 c h
734.402 108.961 m 734.398 108.961 l 743.312 100.051 755.398 95.043 768 
95.043 c 780.602 95.043 792.688 100.051 801.602 108.961 c 1427.137 734.402
 l 1427.137 734.398 l 1436.047 743.312 1441.051 755.398 1441.051 768 c 1441.051
 780.602 1436.047 792.688 1427.137 801.602 c 801.602 1427.137 l 792.688 
1436.047 780.602 1441.051 768 1441.051 c 755.398 1441.051 743.312 1436.047
 734.398 1427.137 c 108.863 801.602 l 99.953 792.688 94.949 780.602 94.949
 768 c 94.949 755.398 99.953 743.312 108.863 734.398 c 734.398 108.863 l
 h
734.402 108.961 m f
Q Q
showpage
%%Trailer
%%EOF
