%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
96 45 m 96 47.871 95.176 50.68 93.629 53.098 c 92.082 55.512 89.871 57.434
 87.266 58.633 c 86.219 56.797 84.906 55.129 83.363 53.688 c 88.164 52.379
 90.992 47.43 89.684 42.633 c 88.379 37.836 83.43 35.004 78.629 36.312 c
 77.789 36.539 76.895 36.391 76.172 35.906 c 75.449 35.422 74.977 34.648
 74.867 33.785 c 74.301 29.18 71.973 24.973 68.375 22.039 c 64.777 19.105
 60.188 17.68 55.562 18.051 c 50.934 18.422 46.629 20.566 43.547 24.035 
c 40.984 23.918 38.414 24.098 35.891 24.562 c 38.977 18.883 44.227 14.684
 50.449 12.922 c 56.668 11.156 63.34 11.98 68.945 15.199 c 74.555 18.418
 78.629 23.762 80.242 30.023 c 84.348 29.816 88.355 31.301 91.336 34.133
 c 94.312 36.965 96 40.891 96 45 c f
42 30 m 48.641 30 55.051 32.445 60.004 36.875 c 64.953 41.301 68.102 47.398
 68.84 54 c 69 54 l 74.359 54 79.312 56.859 81.992 61.5 c 84.668 66.141 
84.668 71.859 81.992 76.5 c 79.312 81.141 74.359 84 69 84 c 18 84 l 11.742
 84.004 5.93 80.758 2.652 75.43 c -0.625 70.098 -0.898 63.449 1.93 57.867
 c 4.758 52.285 10.281 48.57 16.52 48.059 c 18.371 42.781 21.816 38.207 
26.383 34.973 c 30.949 31.734 36.406 30 42 30 c 63 57 m 63.004 50.121 59.641
 43.676 53.992 39.746 c 48.348 35.816 41.133 34.906 34.684 37.301 c 28.238
 39.695 23.371 45.098 21.66 51.762 c 21.305 53.145 20.023 54.086 18.602 
54.012 c 15.379 53.867 12.238 55.027 9.883 57.227 c 7.523 59.426 6.152 62.477
 6.07 65.699 c 5.992 68.922 7.211 72.039 9.453 74.355 c 11.695 76.668 14.777
 77.98 18 78 c 69 78 l 71.582 77.992 74.035 76.879 75.738 74.941 c 77.445
 73 78.234 70.426 77.906 67.863 c 77.582 65.301 76.172 63.004 74.035 61.555
 c 71.898 60.105 69.246 59.641 66.742 60.281 c 65.84 60.516 64.875 60.309
 64.141 59.73 c 63.406 59.152 62.984 58.266 63 57.328 c h
63 57 m f
Q Q
showpage
%%Trailer
%%EOF
