%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 1 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 1 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 1 0 95 96 rectclip
1 0 0 -1 0 96 cm q
0 g
95.785 4.117 m 96.23 3 95.969 1.73 95.121 0.879 c 94.27 0.031 93 -0.23 
91.883 0.215 c 4.602 35.129 l 3.035 35.758 1.949 37.207 1.793 38.891 c 1.637
 40.57 2.434 42.199 3.859 43.105 c 33.828 62.172 l 43.016 76.609 l 43.918
 77.969 45.742 78.359 47.125 77.484 c 48.504 76.609 48.926 74.789 48.078
 73.391 c 39.82 60.422 l 84.785 15.457 l 73.414 43.887 l 73.414 43.883 l
 73.102 44.625 73.098 45.465 73.406 46.207 c 73.715 46.953 74.312 47.543
 75.062 47.844 c 75.809 48.141 76.648 48.129 77.387 47.805 c 78.125 47.48
 78.699 46.871 78.984 46.117 c h
80.547 11.215 m 35.578 56.18 l 9.547 39.613 l h
80.547 11.215 m f
89.852 60.148 m 84.543 54.844 76.812 52.773 69.566 54.715 c 62.316 56.656
 56.656 62.316 54.715 69.566 c 52.773 76.812 54.844 84.543 60.148 89.852
 c 65.457 95.156 73.188 97.227 80.434 95.285 c 87.684 93.344 93.344 87.684
 95.285 80.434 c 97.227 73.188 95.156 65.457 89.852 60.148 c 64.395 64.391
 m 64.391 64.391 l 66.836 61.945 70.051 60.422 73.492 60.07 c 76.934 59.723
 80.391 60.578 83.273 62.484 c 62.484 83.273 l 60.578 80.391 59.723 76.934
 60.07 73.492 c 60.422 70.051 61.945 66.836 64.391 64.391 c 66.73 87.516
 m 87.516 66.727 l 90.074 70.602 90.695 75.445 89.191 79.844 c 87.691 84.238
 84.238 87.691 79.844 89.191 c 75.445 90.695 70.602 90.074 66.727 87.516
 c h
66.73 87.516 m f
Q Q
showpage
%%Trailer
%%EOF
