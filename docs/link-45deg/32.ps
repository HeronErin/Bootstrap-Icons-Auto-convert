%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:41 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 3 4 21 22
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 3 4 21 22
24 24 cairo_set_page_size
%%EndPageSetup
q 3 4 18 18 rectclip
1 0 0 -1 0 24 cm q
0 g
7.074 9.812 m 5.016 11.871 l 3.258 13.629 3.258 16.477 5.016 18.234 c 6.773
 19.992 9.621 19.992 11.379 18.234 c 14.121 15.492 l 15.152 14.461 15.621
 12.988 15.375 11.551 c 15.129 10.109 14.195 8.879 12.879 8.25 c 12 9.129
 l 11.91 9.219 11.832 9.32 11.77 9.426 c 12.789 9.723 13.578 10.531 13.844
 11.562 c 14.109 12.59 13.812 13.684 13.059 14.434 c 10.32 17.176 l 9.148
 18.348 7.246 18.348 6.074 17.176 c 4.902 16.004 4.902 14.102 6.074 12.93
 c 7.266 11.742 l 7.098 11.113 7.031 10.461 7.074 9.812 c h
7.074 9.812 m f
9.879 7.008 m 8.848 8.039 8.379 9.512 8.625 10.949 c 8.871 12.391 9.805
 13.621 11.121 14.25 c 12.285 13.086 l 11.25 12.809 10.441 12 10.164 10.965
 c 9.887 9.93 10.184 8.824 10.941 8.066 c 13.68 5.324 l 14.852 4.152 16.754
 4.152 17.926 5.324 c 19.098 6.496 19.098 8.398 17.926 9.57 c 16.734 10.758
 l 16.902 11.387 16.969 12.039 16.926 12.688 c 18.984 10.629 l 20.742 8.871
 20.742 6.023 18.984 4.266 c 17.227 2.508 14.379 2.508 12.621 4.266 c h
9.879 7.008 m f
Q Q
showpage
%%Trailer
%%EOF
