%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 14 17 82 85
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 14 17 82 85
96 96 cairo_set_page_size
%%EndPageSetup
q 14 17 68 68 rectclip
1 0 0 -1 0 96 cm q
0 g
28.289 39.254 m 20.059 47.484 l 15.512 52.031 13.734 58.66 15.398 64.871
 c 17.062 71.086 21.914 75.938 28.129 77.602 c 34.34 79.266 40.969 77.488
 45.516 72.941 c 56.484 61.969 l 60.613 57.836 62.484 51.957 61.496 46.199
 c 60.508 40.441 56.789 35.52 51.516 33 c 48 36.516 l 47.645 36.875 47.332
 37.273 47.074 37.711 c 51.16 38.883 54.32 42.129 55.379 46.246 c 56.441
 50.359 55.25 54.73 52.242 57.73 c 41.281 68.699 l 36.59 73.391 28.988 73.391
 24.301 68.699 c 19.609 64.012 19.609 56.41 24.301 51.719 c 29.059 46.965
 l 29.059 46.969 l 28.387 44.453 28.125 41.844 28.289 39.246 c h
28.289 39.254 m f
39.516 28.031 m 35.387 32.164 33.516 38.043 34.504 43.801 c 35.492 49.559
 39.211 54.48 44.484 57 c 49.133 52.344 l 44.992 51.234 41.762 48 40.652
 43.859 c 39.543 39.719 40.727 35.301 43.758 32.27 c 54.719 21.301 l 59.41
 16.609 67.012 16.609 71.699 21.301 c 76.391 25.988 76.391 33.59 71.699 
38.281 c 66.941 43.035 l 67.613 45.555 67.871 48.164 67.711 50.758 c 75.941
 42.527 l 75.941 42.523 l 80.488 37.973 82.266 31.348 80.602 25.133 c 78.938
 18.922 74.086 14.07 67.871 12.406 c 61.66 10.742 55.031 12.516 50.484 17.062
 c h
39.516 28.031 m f
Q Q
showpage
%%Trailer
%%EOF
