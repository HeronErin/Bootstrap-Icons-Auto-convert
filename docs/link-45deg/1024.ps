%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 118 142 650 674
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 118 142 650 674
768 768 cairo_set_page_size
%%EndPageSetup
q 118 142 532 532 rectclip
1 0 0 -1 0 768 cm q
0 g
226.32 314.016 m 160.465 379.871 l 124.082 416.254 109.875 469.281 123.191
 518.977 c 136.508 568.676 175.324 607.492 225.023 620.809 c 274.719 634.125
 327.746 619.918 364.129 583.535 c 451.871 495.742 l 484.922 462.691 499.871
 415.656 491.969 369.586 c 484.07 323.52 454.301 284.152 412.129 264 c 384
 292.129 l 381.145 294.988 378.66 298.199 376.609 301.68 c 409.277 311.074
 434.547 337.043 443.039 369.961 c 451.531 402.875 441.984 437.828 417.938
 461.855 c 330.238 549.602 l 305.973 573.867 270.605 583.344 237.461 574.461
 c 204.312 565.578 178.422 539.688 169.539 506.539 c 160.656 473.395 170.133
 438.027 194.398 413.762 c 232.461 375.746 l 232.465 375.742 l 227.078 355.621
 225.004 334.758 226.32 313.969 c h
226.32 314.016 m f
316.129 224.258 m 283.078 257.309 268.129 304.344 276.031 350.414 c 283.93
 396.48 313.699 435.848 355.871 456 c 393.07 418.754 l 359.949 409.867 334.082
 383.988 325.211 350.863 c 316.34 317.734 325.812 282.391 350.062 258.145
 c 437.762 170.398 l 462.027 146.133 497.395 136.656 530.539 145.539 c 563.688
 154.422 589.578 180.312 598.461 213.461 c 607.344 246.605 597.867 281.973
 573.602 306.238 c 535.539 344.254 l 540.914 364.414 542.98 385.293 541.684
 406.031 c 607.539 340.176 l 607.535 340.176 l 643.918 303.797 658.125 250.77
 644.809 201.07 c 631.492 151.375 592.676 112.555 542.977 99.238 c 493.281
 85.922 440.254 100.133 403.871 136.512 c h
316.129 224.258 m f
Q Q
showpage
%%Trailer
%%EOF
