%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 59 71 325 337
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 59 71 325 337
384 384 cairo_set_page_size
%%EndPageSetup
q 59 71 266 266 rectclip
1 0 0 -1 0 384 cm q
0 g
113.16 157.008 m 80.23 189.938 l 62.043 208.125 54.938 234.641 61.594 259.488
 c 68.254 284.336 87.664 303.746 112.512 310.406 c 137.359 317.062 163.875
 309.957 182.062 291.77 c 225.934 247.875 l 225.938 247.871 l 242.461 231.344
 249.934 207.828 245.984 184.793 c 242.035 161.762 227.148 142.078 206.062
 132 c 192 146.062 l 190.57 147.492 189.328 149.098 188.305 150.84 c 204.641
 155.535 217.273 168.52 221.52 184.98 c 225.766 201.438 220.992 218.914 
208.969 230.93 c 165.121 274.801 l 152.988 286.934 135.305 291.672 118.73
 287.23 c 102.156 282.789 89.211 269.844 84.77 253.27 c 80.328 236.695 85.066
 219.012 97.199 206.879 c 116.23 187.871 l 113.539 177.812 112.5 167.379
 113.16 156.984 c h
113.16 157.008 m f
158.062 112.129 m 141.539 128.656 134.066 152.172 138.016 175.207 c 141.965
 198.238 156.852 217.922 177.938 228 c 196.539 209.375 l 196.535 209.375
 l 179.973 204.934 167.039 191.996 162.605 175.43 c 158.168 158.867 162.906
 141.195 175.031 129.07 c 218.879 85.199 l 231.012 73.066 248.695 68.328
 265.27 72.77 c 281.844 77.211 294.789 90.156 299.23 106.73 c 303.672 123.305
 298.934 140.988 286.801 153.121 c 267.77 172.129 l 270.457 182.207 271.488
 192.648 270.84 203.016 c 303.77 170.086 l 303.77 170.09 l 321.957 151.898
 329.062 125.383 322.406 100.535 c 315.746 75.688 296.336 56.277 271.488
 49.621 c 246.641 42.961 220.125 50.066 201.938 68.258 c h
158.062 112.129 m f
Q Q
showpage
%%Trailer
%%EOF
