%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 96 48 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 96 48 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 96 48 576 720 rectclip
1 0 0 -1 0 768 cm q
0 g
384 240 m 409.723 240 433.492 226.277 446.355 204 c 459.215 181.723 459.215
 154.277 446.355 132 c 433.492 109.723 409.723 96 384 96 c 358.277 96 334.508
 109.723 321.645 132 c 308.785 154.277 308.785 181.723 321.645 204 c 334.508
 226.277 358.277 240 384 240 c 384 432 m 409.723 432 433.492 418.277 446.355
 396 c 459.215 373.723 459.215 346.277 446.355 324 c 433.492 301.723 409.723
 288 384 288 c 358.277 288 334.508 301.723 321.645 324 c 308.785 346.277
 308.785 373.723 321.645 396 c 334.508 418.277 358.277 432 384 432 c 456
 552 m 456 577.723 442.277 601.492 420 614.355 c 397.723 627.215 370.277
 627.215 348 614.355 c 325.723 601.492 312 577.723 312 552 c 312 526.277
 325.723 502.508 348 489.645 c 370.277 476.785 397.723 476.785 420 489.645
 c 442.277 502.508 456 526.277 456 552 c f
192 96 m 192 70.539 202.113 46.121 220.117 28.117 c 238.121 10.113 262.539
 0 288 0 c 480 0 l 505.461 0 529.879 10.113 547.883 28.117 c 565.887 46.121
 576 70.539 576 96 c 672 96 l 663.984 120 633.602 172.801 576 192 c 576 
288 l 672 288 l 663.984 312 633.602 364.801 576 384 c 576 480 l 672 480 
l 663.984 504 633.602 556.801 576 576 c 576 624 l 576 649.461 565.887 673.879
 547.883 691.883 c 529.879 709.887 505.461 720 480 720 c 288 720 l 262.539
 720 238.121 709.887 220.117 691.883 c 202.113 673.879 192 649.461 192 624
 c 192 576 l 134.398 556.801 104.016 504 96 480 c 192 480 l 192 384 l 134.398
 364.801 104.016 312 96 288 c 192 288 l 192 192 l 134.398 172.801 104.016
 120 96 96 c h
288 48 m 275.27 48 263.062 53.059 254.059 62.059 c 245.059 71.062 240 83.27
 240 96 c 240 624 l 240 636.73 245.059 648.938 254.059 657.941 c 263.062
 666.941 275.27 672 288 672 c 480 672 l 492.73 672 504.938 666.941 513.941
 657.941 c 522.941 648.938 528 636.73 528 624 c 528 96 l 528 83.27 522.941
 71.062 513.941 62.059 c 504.938 53.059 492.73 48 480 48 c h
288 48 m f
Q Q
showpage
%%Trailer
%%EOF
