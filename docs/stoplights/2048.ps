%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 96 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 96 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 96 1152 1440 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 480 m 819.445 480 866.984 452.555 892.707 408 c 918.43 363.445 918.43
 308.555 892.707 264 c 866.984 219.445 819.445 192 768 192 c 716.555 192
 669.016 219.445 643.293 264 c 617.57 308.555 617.57 363.445 643.293 408
 c 669.016 452.555 716.555 480 768 480 c 768 864 m 819.445 864 866.984 836.555
 892.707 792 c 918.43 747.445 918.43 692.555 892.707 648 c 866.984 603.445
 819.445 576 768 576 c 716.555 576 669.016 603.445 643.293 648 c 617.57 
692.555 617.57 747.445 643.293 792 c 669.016 836.555 716.555 864 768 864
 c 912 1104 m 912 1155.445 884.555 1202.984 840 1228.707 c 795.445 1254.43
 740.555 1254.43 696 1228.707 c 651.445 1202.984 624 1155.445 624 1104 c
 624 1052.555 651.445 1005.016 696 979.293 c 740.555 953.57 795.445 953.57
 840 979.293 c 884.555 1005.016 912 1052.555 912 1104 c f
384 192 m 384 141.078 404.227 92.242 440.234 56.234 c 476.242 20.227 525.078
 0 576 0 c 960 0 l 993.703 0 1026.812 8.871 1056 25.723 c 1085.188 42.574
 1109.426 66.812 1126.277 96 c 1143.129 125.188 1152 158.297 1152 192 c 
1344 192 l 1327.969 240 1267.199 345.602 1152 384 c 1152 576 l 1344 576 
l 1327.969 624 1267.199 729.602 1152 768 c 1152 960 l 1344 960 l 1327.969
 1008 1267.199 1113.602 1152 1152 c 1152 1248 l 1152 1281.703 1143.129 1314.812
 1126.277 1344 c 1109.426 1373.188 1085.188 1397.426 1056 1414.277 c 1026.812
 1431.129 993.703 1440 960 1440 c 576 1440 l 525.078 1440 476.242 1419.773
 440.234 1383.766 c 404.227 1347.758 384 1298.922 384 1248 c 384 1152 l 
268.801 1113.602 208.031 1008 192 960 c 384 960 l 384 768 l 268.801 729.602
 208.031 624 192 576 c 384 576 l 384 384 l 268.801 345.602 208.031 240 192
 192 c h
576 96 m 550.539 96 526.121 106.113 508.117 124.117 c 490.113 142.121 480
 166.539 480 192 c 480 1248 l 480 1273.461 490.113 1297.879 508.117 1315.883
 c 526.121 1333.887 550.539 1344 576 1344 c 960 1344 l 985.461 1344 1009.879
 1333.887 1027.883 1315.883 c 1045.887 1297.879 1056 1273.461 1056 1248 
c 1056 192 l 1056 166.539 1045.887 142.121 1027.883 124.117 c 1009.879 106.113
 985.461 96 960 96 c h
576 96 m f
Q Q
showpage
%%Trailer
%%EOF
