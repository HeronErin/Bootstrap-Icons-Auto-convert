%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 66 m 41.57 66 35.625 62.57 32.41 57 c 29.195 51.43 29.195 44.57 32.41
 39 c 35.625 33.43 41.57 30 48 30 c 54.43 30 60.375 33.43 63.59 39 c 66.805
 44.57 66.805 51.43 63.59 57 c 60.375 62.57 54.43 66 48 66 c 48 72 m 56.574
 72 64.496 67.426 68.785 60 c 73.07 52.574 73.07 43.426 68.785 36 c 64.496
 28.574 56.574 24 48 24 c 39.426 24 31.504 28.574 27.215 36 c 22.93 43.426
 22.93 52.574 27.215 60 c 31.504 67.426 39.426 72 48 72 c 48 0 m 48.797 
0 49.559 0.316 50.121 0.879 c 50.684 1.441 51 2.203 51 3 c 51 15 l 51 16.656
 49.656 18 48 18 c 46.344 18 45 16.656 45 15 c 45 3 l 45 1.344 46.344 0 
48 0 c 48 78 m 48.797 78 49.559 78.316 50.121 78.879 c 50.684 79.441 51 
80.203 51 81 c 51 93 l 51 94.656 49.656 96 48 96 c 46.344 96 45 94.656 45
 93 c 45 81 l 45 79.344 46.344 78 48 78 c 96 48 m 96 48.797 95.684 49.559
 95.121 50.121 c 94.559 50.684 93.797 51 93 51 c 81 51 l 79.344 51 78 49.656
 78 48 c 78 46.344 79.344 45 81 45 c 93 45 l 93.797 45 94.559 45.316 95.121
 45.879 c 95.684 46.441 96 47.203 96 48 c 18 48 m 18 48.797 17.684 49.559
 17.121 50.121 c 16.559 50.684 15.797 51 15 51 c 3 51 l 1.344 51 0 49.656
 0 48 c 0 46.344 1.344 45 3 45 c 15 45 l 15.797 45 16.559 45.316 17.121 
45.879 c 17.684 46.441 18 47.203 18 48 c 81.941 14.059 m 83.113 15.23 83.113
 17.129 81.941 18.301 c 73.457 26.789 l 72.285 27.961 70.383 27.961 69.215
 26.785 c 68.043 25.613 68.043 23.715 69.215 22.543 c 77.699 14.059 l 78.871
 12.887 80.77 12.887 81.941 14.059 c 26.785 69.215 m 27.957 70.387 27.957
 72.285 26.785 73.457 c 18.301 81.941 l 17.121 83.078 15.25 83.062 14.094
 81.906 c 12.938 80.75 12.922 78.879 14.059 77.699 c 22.543 69.215 l 23.715
 68.043 25.613 68.043 26.785 69.215 c 81.941 81.941 m 80.77 83.113 78.871
 83.113 77.699 81.941 c 69.215 73.457 l 68.078 72.281 68.094 70.41 69.254
 69.254 c 70.41 68.094 72.281 68.078 73.457 69.215 c 81.941 77.699 l 83.113
 78.871 83.113 80.77 81.941 81.941 c 26.785 26.789 m 25.613 27.961 23.715
 27.961 22.543 26.789 c 14.059 18.301 l 13.48 17.742 13.148 16.973 13.141
 16.168 c 13.137 15.363 13.453 14.59 14.02 14.02 c 14.59 13.453 15.363 13.137
 16.168 13.141 c 16.973 13.148 17.742 13.48 18.301 14.059 c 26.785 22.543
 l 27.348 23.105 27.664 23.867 27.664 24.664 c 27.664 25.465 27.348 26.227
 26.785 26.789 c f
Q Q
showpage
%%Trailer
%%EOF
