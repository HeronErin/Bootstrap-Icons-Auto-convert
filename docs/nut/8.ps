%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:27 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
4.281 0.75 m 5.566 3 l 4.281 5.25 l 1.719 5.25 l 0.434 3 l 1.719 0.75 l
 h
1.719 0.375 m 1.582 0.375 1.457 0.445 1.391 0.562 c 0.105 2.812 l 0.039
 2.93 0.039 3.07 0.105 3.188 c 1.391 5.438 l 1.457 5.555 1.582 5.625 1.719
 5.625 c 4.285 5.625 l 4.281 5.625 l 4.418 5.625 4.543 5.555 4.609 5.438
 c 5.895 3.188 l 5.961 3.07 5.961 2.93 5.895 2.812 c 4.609 0.562 l 4.543
 0.445 4.418 0.375 4.281 0.375 c h
1.719 0.375 m f
2.566 2.227 m 2.352 2.348 2.191 2.555 2.125 2.793 c 2.062 3.035 2.094 3.293
 2.219 3.508 c 2.344 3.727 2.551 3.883 2.793 3.945 c 3.031 4.012 3.289 3.977
 3.504 3.848 c 3.949 3.59 4.102 3.016 3.844 2.57 c 3.586 2.125 3.016 1.969
 2.566 2.227 c 1.898 3.695 m 1.902 3.691 l 1.719 3.391 1.668 3.031 1.754
 2.688 c 1.844 2.348 2.066 2.059 2.371 1.879 c 2.676 1.703 3.035 1.66 3.375
 1.754 c 3.715 1.848 4.004 2.074 4.172 2.379 c 4.531 3.008 4.312 3.805 3.688
 4.164 c 3.062 4.527 2.266 4.316 1.898 3.691 c h
1.898 3.695 m f
Q Q
showpage
%%Trailer
%%EOF
