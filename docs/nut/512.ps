%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 3 24 381 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 3 24 381 360
384 384 cairo_set_page_size
%%EndPageSetup
q 3 24 378 336 rectclip
1 0 0 -1 0 384 cm q
0 g
274.078 48 m 356.352 192 l 274.078 336 l 109.922 336 l 27.648 192 l 109.922
 48 l h
109.922 24 m 105.691 24 101.535 25.121 97.875 27.246 c 94.219 29.371 91.188
 32.422 89.09 36.098 c 6.816 180.098 l 2.602 187.473 2.602 196.527 6.816
 203.902 c 89.09 347.902 l 91.188 351.578 94.219 354.629 97.875 356.754 
c 101.535 358.879 105.691 360 109.922 360 c 274.082 360 l 274.078 360 l 
278.309 360 282.465 358.879 286.125 356.754 c 289.781 354.629 292.812 351.578
 294.91 347.902 c 377.207 203.902 l 381.422 196.527 381.422 187.473 377.207
 180.098 c 294.91 36.098 l 292.812 32.422 289.781 29.371 286.125 27.246 
c 282.465 25.121 278.309 24 274.078 24 c h
109.922 24 m f
164.352 142.391 m 150.457 150.293 140.289 163.406 136.102 178.832 c 131.914
 194.254 134.055 210.711 142.047 224.551 c 150.039 238.391 163.219 248.473
 178.672 252.559 c 194.121 256.645 210.566 254.395 224.352 246.312 c 242.762
 235.52 254.055 215.758 254.008 194.418 c 253.961 173.078 242.578 153.367
 224.121 142.656 c 205.664 131.945 182.902 131.844 164.352 142.391 c 121.633
 236.352 m 110.035 217.039 106.684 193.879 112.324 172.07 c 117.969 150.262
 132.133 131.633 151.641 120.367 c 171.148 109.102 194.363 106.145 216.074
 112.16 c 237.781 118.172 256.164 132.656 267.098 152.352 c 281.863 178.324
 281.723 210.188 266.727 236.027 c 251.73 261.871 224.137 277.805 194.262
 277.871 c 164.383 277.938 136.719 262.125 121.609 236.352 c h
121.633 236.352 m f
Q Q
showpage
%%Trailer
%%EOF
