%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:37 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
0 60 m 0 50.453 3.793 41.297 10.543 34.543 c 17.297 27.793 26.453 24 36
 24 c 300 24 l 309.547 24 318.703 27.793 325.457 34.543 c 332.207 41.297
 336 50.453 336 60 c 336 312.672 l 336 319.871 334.801 328.367 330.289 336
 c 348 336 l 351.184 336 354.234 334.734 356.484 332.484 c 358.734 330.234
 360 327.184 360 324 c 360 108 l 360 101.371 365.371 96 372 96 c 378.629
 96 384 101.371 384 108 c 384 324 l 384 333.547 380.207 342.703 373.457 
349.457 c 366.703 356.207 357.547 360 348 360 c 35.93 360 l 26.387 360 17.238
 356.203 10.496 349.453 c 3.758 342.699 -0.02 333.543 0 324 c h
288 336 m 296.879 336 303.695 330.938 308.473 325.414 c 310.68 322.871 
312 318.719 312 312.672 c 312 60 l 312 56.816 310.734 53.766 308.484 51.516
 c 306.234 49.266 303.184 48 300 48 c 36 48 l 29.371 48 24 53.371 24 60 
c 24 324 l 24 330.672 29.352 336 35.93 336 c h
288 336 m f
48 72 m 288 72 l 288 120 l 48 120 l h
48 144 m 144 144 l 144 216 l 48 216 l h
48 240 m 144 240 l 144 264 l 48 264 l h
48 288 m 144 288 l 144 312 l 48 312 l h
168 144 m 216 144 l 216 168 l 168 168 l h
240 144 m 288 144 l 288 168 l 240 168 l h
168 192 m 216 192 l 216 216 l 168 216 l h
240 192 m 288 192 l 288 216 l 240 216 l h
168 240 m 216 240 l 216 264 l 168 264 l h
240 240 m 288 240 l 288 264 l 240 264 l h
168 288 m 216 288 l 216 312 l 168 312 l h
240 288 m 288 288 l 288 312 l 240 312 l h
240 288 m f
Q Q
showpage
%%Trailer
%%EOF
