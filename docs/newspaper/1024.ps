%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
0 120 m 0 100.906 7.586 82.59 21.09 69.09 c 34.59 55.586 52.906 48 72 48
 c 600 48 l 619.094 48 637.41 55.586 650.91 69.09 c 664.414 82.59 672 100.906
 672 120 c 672 625.344 l 672 639.742 669.602 656.734 660.574 672 c 696 672
 l 702.363 672 708.469 669.473 712.969 664.969 c 717.473 660.469 720 654.363
 720 648 c 720 216 l 720 207.426 724.574 199.504 732 195.215 c 739.426 190.93
 748.574 190.93 756 195.215 c 763.426 199.504 768 207.426 768 216 c 768 
648 l 768 667.094 760.414 685.41 746.91 698.91 c 733.41 712.414 715.094 
720 696 720 c 71.855 720 l 52.773 720 34.477 712.41 20.996 698.902 c 7.516
 685.395 -0.039 667.082 0 648 c h
576 672 m 593.762 672 607.391 661.871 616.945 650.832 c 621.359 645.742
 624 637.441 624 625.344 c 624 120 l 624 113.637 621.473 107.531 616.969
 103.031 c 612.469 98.527 606.363 96 600 96 c 72 96 l 65.637 96 59.531 98.527
 55.031 103.031 c 50.527 107.531 48 113.637 48 120 c 48 648 l 48 661.344
 58.703 672 71.855 672 c h
576 672 m f
96 144 m 576 144 l 576 240 l 96 240 l h
96 288 m 288 288 l 288 432 l 96 432 l h
96 480 m 288 480 l 288 528 l 96 528 l h
96 576 m 288 576 l 288 624 l 96 624 l h
336 288 m 432 288 l 432 336 l 336 336 l h
480 288 m 576 288 l 576 336 l 480 336 l h
336 384 m 432 384 l 432 432 l 336 432 l h
480 384 m 576 384 l 576 432 l 480 432 l h
336 480 m 432 480 l 432 528 l 336 528 l h
480 480 m 576 480 l 576 528 l 480 528 l h
336 576 m 432 576 l 432 624 l 336 624 l h
480 576 m 576 576 l 576 624 l 480 624 l h
480 576 m f
Q Q
showpage
%%Trailer
%%EOF
