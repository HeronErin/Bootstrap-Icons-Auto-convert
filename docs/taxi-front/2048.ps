%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 96 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 96 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 96 1536 1344 rectclip
1 0 0 -1 0 1536 cm q
0 g
466.754 506.496 m 374.977 690.238 l 369.949 700.609 368.742 712.422 371.566
 723.594 c 374.395 734.766 381.066 744.582 390.418 751.32 c 399.77 758.055
 411.195 761.277 422.688 760.414 c 510.047 753.406 648.289 744.094 768 744.094
 c 887.711 744.094 1026.047 753.406 1113.312 760.414 c 1124.805 761.277 
1136.23 758.055 1145.582 751.32 c 1154.934 744.582 1161.605 734.766 1164.434
 723.594 c 1167.258 712.422 1166.051 700.609 1161.023 690.238 c 1069.246
 506.59 l 1069.246 506.594 l 1065.27 498.609 1059.148 491.895 1051.57 487.199
 c 1043.992 482.504 1035.254 480.008 1026.336 480 c 509.664 480 l 500.758
 480 492.027 482.48 484.449 487.156 c 476.871 491.836 470.742 498.531 466.754
 506.496 c 384 960 m 384 994.297 365.703 1025.988 336 1043.137 c 306.297
 1060.289 269.703 1060.289 240 1043.137 c 210.297 1025.988 192 994.297 192
 960 c 192 925.703 210.297 894.012 240 876.863 c 269.703 859.711 306.297
 859.711 336 876.863 c 365.703 894.012 384 925.703 384 960 c 1344 960 m 
1344 994.297 1325.703 1025.988 1296 1043.137 c 1266.297 1060.289 1229.703
 1060.289 1200 1043.137 c 1170.297 1025.988 1152 994.297 1152 960 c 1152
 925.703 1170.297 894.012 1200 876.863 c 1229.703 859.711 1266.297 859.711
 1296 876.863 c 1325.703 894.012 1344 925.703 1344 960 c 480 960 m 480 934.539
 490.113 910.121 508.117 892.117 c 526.121 874.113 550.539 864 576 864 c
 960 864 l 994.297 864 1025.988 882.297 1043.137 912 c 1060.289 941.703 
1060.289 978.297 1043.137 1008 c 1025.988 1037.703 994.297 1056 960 1056
 c 576 1056 l 550.539 1056 526.121 1045.887 508.117 1027.883 c 490.113 1009.879
 480 985.461 480 960 c f
576 96 m 550.539 96 526.121 106.113 508.117 124.117 c 490.113 142.121 480
 166.539 480 192 c 480 288 l 462.625 288 l 415.637 287.977 369.68 301.746
 330.445 327.602 c 291.215 353.453 260.434 390.254 241.922 433.441 c 165.891
 610.848 l 165.887 610.848 l 158.742 627.711 145.805 641.469 129.406 649.633
 c 81.406 673.633 47.328 718.273 36.766 770.785 c 4.801 931.969 l 1.688 
947.453 0.113 963.211 0.098 979.008 c 0.098 1018.656 l 0.098 1096.801 37.539
 1166.785 96.098 1210.367 c 96.098 1392 l 96.098 1404.73 101.152 1416.938
 110.156 1425.941 c 119.156 1434.941 131.367 1440 144.098 1440 c 336.098
 1440 l 348.828 1440 361.035 1434.941 370.039 1425.941 c 379.039 1416.938
 384.098 1404.73 384.098 1392 c 384.098 1263.551 l 508.129 1268.16 647.617
 1272 768.098 1272 c 888.578 1272 1028.066 1268.16 1152.098 1263.551 c 1152.098
 1392 l 1152.098 1404.73 1157.152 1416.938 1166.156 1425.941 c 1175.156 
1434.941 1187.367 1440 1200.098 1440 c 1392.098 1440 l 1404.828 1440 1417.035
 1434.941 1426.039 1425.941 c 1435.039 1416.938 1440.098 1404.73 1440.098
 1392 c 1440.098 1210.367 l 1498.656 1166.781 1536.098 1096.801 1536.098
 1018.656 c 1536.098 979.008 l 1536.098 963.137 1534.531 947.457 1531.395
 931.969 c 1499.234 770.688 l 1499.23 770.688 l 1494.086 744.777 1483.066
 720.395 1467.023 699.41 c 1450.98 678.422 1430.34 661.395 1406.688 649.633
 c 1390.258 641.484 1377.281 627.73 1370.113 610.848 c 1294.082 433.441 
l 1294.078 433.441 l 1275.566 390.254 1244.785 353.453 1205.555 327.602 
c 1166.32 301.746 1120.363 287.977 1073.375 288 c 1056 288 l 1056 192 l 
1056 166.539 1045.887 142.121 1027.883 124.117 c 1009.879 106.113 985.461
 96 960 96 c h
462.625 384 m 1073.379 384 l 1073.375 384 l 1101.57 384 1129.145 392.281
 1152.68 407.812 c 1176.215 423.34 1194.668 445.438 1205.762 471.359 c 1281.793
 648.672 l 1297.918 686.406 1326.945 717.168 1363.68 735.457 c 1384.992 
746.211 1400.254 766.176 1404.961 789.602 c 1437.219 950.785 l 1439.141 
960.129 1440.066 969.539 1440.004 979.008 c 1440.004 1018.656 l 1440 1018.656
 l 1440.141 1055.238 1426.168 1090.461 1400.992 1117 c 1375.812 1143.539
 1341.371 1159.34 1304.832 1161.121 c 1155.551 1167.84 941.375 1176 768 
1176 c 594.625 1176 380.449 1167.938 231.168 1161.121 c 194.629 1159.34 
160.188 1143.539 135.008 1117 c 109.832 1090.461 95.859 1055.238 96 1018.656
 c 96 979.008 l 96 969.535 96.961 960.129 98.879 950.785 c 131.039 789.504
 l 135.637 766.047 150.898 746.066 172.32 735.457 c 209.09 717.219 238.082
 686.402 254.207 648.672 c 330.238 471.266 l 341.352 445.344 359.828 423.258
 383.379 407.742 c 406.93 392.23 434.52 383.977 462.719 384 c h
462.625 384 m f
Q Q
showpage
%%Trailer
%%EOF
