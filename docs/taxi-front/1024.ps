%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 48 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 48 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 48 768 672 rectclip
1 0 0 -1 0 768 cm q
0 g
233.375 253.246 m 187.488 345.121 l 184.977 350.305 184.371 356.211 185.785
 361.797 c 187.195 367.383 190.535 372.293 195.211 375.66 c 199.883 379.027
 205.598 380.637 211.344 380.207 c 255.023 376.703 324.145 372.047 384 372.047
 c 443.855 372.047 513.023 376.703 556.656 380.207 c 562.402 380.637 568.117
 379.027 572.789 375.66 c 577.465 372.293 580.805 367.383 582.215 361.797
 c 583.629 356.211 583.023 350.305 580.512 345.121 c 534.625 253.297 l 532.637
 249.305 529.574 245.949 525.785 243.598 c 521.996 241.25 517.625 240.004
 513.168 240 c 254.832 240 l 250.379 240 246.012 241.238 242.223 243.578
 c 238.434 245.918 235.371 249.266 233.375 253.246 c 192 480 m 192 497.148
 182.852 512.996 168 521.57 c 153.148 530.145 134.852 530.145 120 521.57
 c 105.148 512.996 96 497.148 96 480 c 96 462.852 105.148 447.004 120 438.43
 c 134.852 429.855 153.148 429.855 168 438.43 c 182.852 447.004 192 462.852
 192 480 c 672 480 m 672 497.148 662.852 512.996 648 521.57 c 633.148 530.145
 614.852 530.145 600 521.57 c 585.148 512.996 576 497.148 576 480 c 576 
462.852 585.148 447.004 600 438.43 c 614.852 429.855 633.148 429.855 648
 438.43 c 662.852 447.004 672 462.852 672 480 c 240 480 m 240 467.27 245.059
 455.062 254.059 446.059 c 263.062 437.059 275.27 432 288 432 c 480 432 
l 497.148 432 512.996 441.148 521.57 456 c 530.145 470.852 530.145 489.148
 521.57 504 c 512.996 518.852 497.148 528 480 528 c 288 528 l 275.27 528
 263.062 522.941 254.059 513.941 c 245.059 504.938 240 492.73 240 480 c f
288 48 m 275.27 48 263.062 53.059 254.059 62.059 c 245.059 71.062 240 83.27
 240 96 c 240 144 l 231.312 144 l 207.82 143.988 184.84 150.875 165.223 
163.801 c 145.605 176.727 130.215 195.129 120.961 216.719 c 82.945 305.422
 l 82.945 305.426 l 79.371 313.855 72.902 320.734 64.703 324.816 c 40.703
 336.816 23.664 359.137 18.383 385.391 c 2.398 465.984 l 0.844 473.727 0.055
 481.605 0.047 489.504 c 0.047 509.328 l 0.047 548.398 18.766 583.391 48.047
 605.184 c 48.047 696 l 48.047 702.363 50.578 708.469 55.078 712.969 c 59.578
 717.473 65.684 720 72.047 720 c 168.047 720 l 174.414 720 180.52 717.473
 185.02 712.969 c 189.52 708.469 192.047 702.363 192.047 696 c 192.047 631.777
 l 254.062 634.082 323.809 636 384.047 636 c 444.285 636 514.031 634.078
 576.047 631.777 c 576.047 696 l 576.047 702.363 578.578 708.469 583.078
 712.969 c 587.578 717.473 593.684 720 600.047 720 c 696.047 720 l 702.414
 720 708.52 717.473 713.02 712.969 c 717.52 708.469 720.047 702.363 720.047
 696 c 720.047 605.184 l 749.328 583.391 768.047 548.398 768.047 509.328
 c 768.047 489.504 l 768.047 481.566 767.262 473.727 765.695 465.984 c 749.617
 385.344 l 744.402 359.09 727.312 336.734 703.344 324.816 c 695.129 320.742
 688.641 313.863 685.055 305.426 c 647.039 216.723 l 647.039 216.719 l 637.785
 195.129 622.395 176.727 602.777 163.801 c 583.16 150.875 560.18 143.988
 536.688 144 c 528 144 l 528 96 l 528 83.27 522.941 71.062 513.941 62.059
 c 504.938 53.059 492.73 48 480 48 c h
231.312 192 m 536.688 192 l 550.785 192 564.574 196.141 576.34 203.906 
c 588.105 211.672 597.336 222.719 602.879 235.68 c 640.895 324.336 l 648.957
 343.203 663.473 358.586 681.84 367.727 c 692.496 373.102 700.129 383.086
 702.48 394.797 c 718.609 475.391 l 719.57 480.062 720.035 484.766 720 489.504
 c 720 509.328 l 720.07 527.617 713.086 545.23 700.496 558.5 c 687.906 571.77
 670.684 579.672 652.414 580.559 c 577.773 583.918 470.688 588 384 588 c
 297.312 588 190.223 583.969 115.586 580.559 c 97.316 579.672 80.094 571.77
 67.504 558.5 c 54.914 545.23 47.93 527.617 48 509.328 c 48 489.504 l 48
 484.77 48.48 480.062 49.441 475.391 c 65.52 394.75 l 65.52 394.754 l 67.82
 383.023 75.449 373.031 86.16 367.727 c 104.543 358.605 119.039 343.199 
127.105 324.336 c 165.121 235.633 l 170.676 222.672 179.914 211.629 191.691
 203.871 c 203.465 196.117 217.258 191.988 231.359 192 c h
231.312 192 m f
Q Q
showpage
%%Trailer
%%EOF
