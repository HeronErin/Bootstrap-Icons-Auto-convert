%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 1 24 23
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 1 24 23
24 24 cairo_set_page_size
%%EndPageSetup
q 0 1 24 22 rectclip
1 0 0 -1 0 24 cm q
0 g
7.293 7.914 m 5.859 10.785 l 5.738 11.031 5.762 11.324 5.914 11.547 c 6.07
 11.773 6.332 11.902 6.605 11.883 c 7.969 11.773 10.129 11.629 12 11.629
 c 13.871 11.629 16.031 11.773 17.395 11.883 c 17.668 11.902 17.93 11.773
 18.086 11.547 c 18.238 11.324 18.262 11.031 18.141 10.785 c 16.707 7.914
 l 16.582 7.66 16.32 7.5 16.035 7.5 c 7.965 7.5 l 7.68 7.5 7.422 7.66 7.293
 7.914 c 6 15 m 6 15.828 5.328 16.5 4.5 16.5 c 3.672 16.5 3 15.828 3 15 
c 3 14.172 3.672 13.5 4.5 13.5 c 5.328 13.5 6 14.172 6 15 c 21 15 m 21 15.828
 20.328 16.5 19.5 16.5 c 18.672 16.5 18 15.828 18 15 c 18 14.172 18.672 
13.5 19.5 13.5 c 20.328 13.5 21 14.172 21 15 c 7.5 15 m 7.5 14.172 8.172
 13.5 9 13.5 c 15 13.5 l 15.828 13.5 16.5 14.172 16.5 15 c 16.5 15.828 15.828
 16.5 15 16.5 c 9 16.5 l 8.172 16.5 7.5 15.828 7.5 15 c f
9 1.5 m 8.172 1.5 7.5 2.172 7.5 3 c 7.5 4.5 l 7.227 4.5 l 5.727 4.5 4.371
 5.395 3.781 6.773 c 2.594 9.547 l 2.594 9.543 l 2.48 9.809 2.277 10.023
 2.023 10.152 c 1.273 10.527 0.742 11.227 0.574 12.047 c 0.074 14.562 l 
0.027 14.805 0 15.051 0 15.297 c 0 15.918 l 0 17.141 0.586 18.234 1.5 18.914
 c 1.5 21.75 l 1.5 21.949 1.582 22.141 1.723 22.281 c 1.863 22.422 2.051
 22.5 2.25 22.5 c 5.25 22.5 l 5.449 22.5 5.641 22.422 5.781 22.281 c 5.922
 22.141 6 21.949 6 21.75 c 6 19.742 l 7.938 19.812 10.117 19.875 12 19.875
 c 13.883 19.875 16.062 19.816 18 19.742 c 18 21.75 l 18 21.949 18.082 22.141
 18.223 22.281 c 18.363 22.422 18.551 22.5 18.75 22.5 c 21.75 22.5 l 21.949
 22.5 22.141 22.422 22.281 22.281 c 22.422 22.141 22.5 21.949 22.5 21.75
 c 22.5 18.91 l 23.414 18.23 24 17.137 24 15.914 c 24 15.293 l 24 15.047
 23.977 14.801 23.926 14.559 c 23.422 12.039 l 23.426 12.043 l 23.262 11.223
 22.727 10.523 21.98 10.152 c 21.723 10.023 21.52 9.809 21.406 9.543 c 20.219
 6.77 l 20.219 6.773 l 19.629 5.395 18.273 4.5 16.773 4.5 c 16.5 4.5 l 16.5
 3 l 16.5 2.602 16.344 2.219 16.062 1.938 c 15.781 1.656 15.398 1.5 15 1.5
 c h
7.227 6 m 16.773 6 l 17.672 6 18.484 6.535 18.84 7.363 c 20.027 10.133 
l 20.027 10.137 l 20.281 10.727 20.734 11.207 21.309 11.492 c 21.641 11.66
 21.879 11.973 21.953 12.34 c 22.457 14.859 l 22.488 15.004 22.5 15.152 
22.5 15.301 c 22.5 15.922 l 22.5 15.918 l 22.504 17.105 21.574 18.086 20.387
 18.141 c 18.055 18.246 14.707 18.375 12 18.375 c 9.289 18.375 5.945 18.25
 3.613 18.141 c 2.426 18.086 1.496 17.105 1.5 15.918 c 1.5 15.297 l 1.5 
15.148 1.516 15 1.547 14.855 c 2.051 12.336 l 2.047 12.336 l 2.121 11.969
 2.359 11.656 2.691 11.492 c 3.266 11.207 3.719 10.727 3.973 10.137 c 5.16
 7.363 l 5.516 6.535 6.328 6 7.23 6 c h
7.227 6 m f
Q Q
showpage
%%Trailer
%%EOF
