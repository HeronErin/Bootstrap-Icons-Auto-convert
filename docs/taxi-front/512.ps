%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 24 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 24 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 24 384 336 rectclip
1 0 0 -1 0 384 cm q
0 g
116.688 126.625 m 93.742 172.559 l 91.836 176.5 92.176 181.16 94.637 184.781
 c 97.098 188.402 101.305 190.43 105.672 190.105 c 127.512 188.352 162.07
 186.027 192 186.027 c 221.93 186.027 256.512 188.355 278.328 190.105 c 
282.695 190.43 286.902 188.402 289.363 184.781 c 291.824 181.16 292.164 
176.5 290.258 172.559 c 267.312 126.648 l 265.285 122.578 261.129 120.004
 256.586 120 c 127.414 120 l 122.875 120 118.723 122.562 116.688 126.625
 c 96 240 m 96 248.574 91.426 256.496 84 260.785 c 76.574 265.07 67.426 
265.07 60 260.785 c 52.574 256.496 48 248.574 48 240 c 48 231.426 52.574
 223.504 60 219.215 c 67.426 214.93 76.574 214.93 84 219.215 c 91.426 223.504
 96 231.426 96 240 c 336 240 m 336 248.574 331.426 256.496 324 260.785 c
 316.574 265.07 307.426 265.07 300 260.785 c 292.574 256.496 288 248.574
 288 240 c 288 231.426 292.574 223.504 300 219.215 c 307.426 214.93 316.574
 214.93 324 219.215 c 331.426 223.504 336 231.426 336 240 c 120 240 m 120
 233.637 122.527 227.531 127.031 223.031 c 131.531 218.527 137.637 216 144
 216 c 240 216 l 248.574 216 256.496 220.574 260.785 228 c 265.07 235.426
 265.07 244.574 260.785 252 c 256.496 259.426 248.574 264 240 264 c 144 
264 l 137.637 264 131.531 261.473 127.031 256.969 c 122.527 252.469 120 
246.363 120 240 c f
144 24 m 137.637 24 131.531 26.527 127.031 31.031 c 122.527 35.531 120 
41.637 120 48 c 120 72 l 115.656 72 l 103.91 71.996 92.418 75.438 82.613
 81.898 c 72.805 88.363 65.109 97.562 60.48 108.359 c 41.473 152.711 l 39.684
 156.93 36.449 160.367 32.352 162.406 c 20.352 168.406 11.832 179.566 9.191
 192.695 c 1.199 232.992 l 0.422 236.863 0.027 240.805 0.023 244.754 c 0.023
 254.664 l 0.023 274.199 9.383 291.695 24.023 302.594 c 24.023 348 l 24.023
 351.184 25.289 354.234 27.539 356.484 c 29.789 358.734 32.84 360 36.023
 360 c 84.023 360 l 87.207 360 90.258 358.734 92.508 356.484 c 94.758 354.234
 96.023 351.184 96.023 348 c 96.023 315.887 l 127.031 317.039 161.902 318
 192.023 318 c 222.145 318 257.016 317.039 288.023 315.887 c 288.023 348
 l 288.023 351.184 289.289 354.234 291.539 356.484 c 293.789 358.734 296.84
 360 300.023 360 c 348.023 360 l 351.207 360 354.258 358.734 356.508 356.484
 c 358.758 354.234 360.023 351.184 360.023 348 c 360.023 302.594 l 374.664
 291.699 384.023 274.203 384.023 254.664 c 384.023 244.754 l 384.023 240.785
 383.633 236.867 382.848 232.992 c 374.809 192.672 l 372.199 179.543 363.656
 168.367 351.672 162.406 c 347.562 160.371 344.32 156.934 342.527 152.711
 c 323.52 108.359 l 318.891 97.562 311.195 88.363 301.387 81.898 c 291.582
 75.438 280.09 71.996 268.344 72 c 264 72 l 264 48 l 264 41.637 261.473 
35.531 256.969 31.031 c 252.469 26.527 246.363 24 240 24 c h
115.656 96 m 268.344 96 l 275.395 96 282.285 98.07 288.172 101.953 c 294.055
 105.836 298.668 111.359 301.441 117.84 c 320.449 162.168 l 324.48 171.602
 331.738 179.293 340.922 183.863 c 346.25 186.551 350.066 191.543 351.242
 197.398 c 359.305 237.695 l 359.785 240.031 360.016 242.383 360 244.75 
c 360 254.664 l 360.035 263.809 356.543 272.617 350.246 279.25 c 343.953
 285.883 335.344 289.836 326.207 290.281 c 288.887 291.961 235.344 294 192
 294 c 148.656 294 95.113 291.984 57.793 290.281 c 48.656 289.836 40.047
 285.883 33.754 279.25 c 27.457 272.617 23.965 263.809 24 254.664 c 24 244.754
 l 24 242.387 24.238 240.035 24.719 237.699 c 32.758 197.379 l 32.762 197.375
 l 33.91 191.512 37.723 186.516 43.078 183.863 c 52.27 179.305 59.52 171.598
 63.551 162.168 c 82.559 117.816 l 85.336 111.336 89.957 105.812 95.844 
101.938 c 101.734 98.059 108.629 95.992 115.68 96 c h
115.656 96 m f
Q Q
showpage
%%Trailer
%%EOF
