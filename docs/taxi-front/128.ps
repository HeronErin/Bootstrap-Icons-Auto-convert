%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 84 rectclip
1 0 0 -1 0 96 cm q
0 g
29.172 31.656 m 23.438 43.141 l 22.957 44.125 23.043 45.289 23.66 46.195
 c 24.273 47.102 25.328 47.609 26.418 47.527 c 31.879 47.09 40.52 46.508
 48 46.508 c 55.48 46.508 64.129 47.09 69.582 47.527 c 70.672 47.609 71.727
 47.102 72.34 46.195 c 72.957 45.289 73.043 44.125 72.562 43.141 c 66.828
 31.664 l 66.828 31.66 l 66.32 30.645 65.281 30 64.145 30 c 31.855 30 l 
30.719 30 29.68 30.641 29.172 31.656 c 24 60 m 24 63.312 21.312 66 18 66
 c 14.688 66 12 63.312 12 60 c 12 56.688 14.688 54 18 54 c 21.312 54 24 
56.688 24 60 c 84 60 m 84 63.312 81.312 66 78 66 c 74.688 66 72 63.312 72
 60 c 72 56.688 74.688 54 78 54 c 81.312 54 84 56.688 84 60 c 30 60 m 30
 56.688 32.688 54 36 54 c 60 54 l 63.312 54 66 56.688 66 60 c 66 63.312 
63.312 66 60 66 c 36 66 l 32.688 66 30 63.312 30 60 c f
36 6 m 32.688 6 30 8.688 30 12 c 30 18 l 28.914 18 l 25.977 18 23.105 18.859
 20.652 20.477 c 18.199 22.09 16.277 24.391 15.121 27.09 c 10.367 38.18 
l 9.922 39.23 9.113 40.09 8.09 40.602 c 5.09 42.102 2.961 44.891 2.301 48.172
 c 0.301 58.246 l 0.105 59.215 0.008 60.199 0.008 61.188 c 0.008 63.664 
l 0.008 68.547 2.348 72.922 6.008 75.645 c 6.008 87 l 6.008 87.797 6.32 
88.559 6.883 89.121 c 7.449 89.684 8.211 90 9.008 90 c 21.008 90 l 21.801
 90 22.566 89.684 23.129 89.121 c 23.691 88.559 24.008 87.797 24.008 87 
c 24.008 78.973 l 31.762 79.262 40.477 79.5 48.008 79.5 c 55.539 79.5 64.254
 79.262 72.008 78.973 c 72.008 87 l 72.008 87.797 72.32 88.559 72.883 89.121
 c 73.449 89.684 74.211 90 75.008 90 c 87.008 90 l 87.801 90 88.566 89.684
 89.129 89.121 c 89.691 88.559 90.008 87.797 90.008 87 c 90.008 75.648 l
 93.668 72.926 96.008 68.551 96.008 63.668 c 96.008 61.191 l 96.008 60.199
 95.91 59.219 95.715 58.25 c 93.703 48.172 l 93.703 48.168 l 93.051 44.887
 90.914 42.094 87.918 40.602 c 86.891 40.094 86.082 39.234 85.633 38.18 
c 80.879 27.09 l 79.723 24.391 77.801 22.09 75.348 20.477 c 72.895 18.859
 70.023 18 67.086 18 c 66 18 l 66 12 l 66 10.41 65.367 8.883 64.242 7.758
 c 63.117 6.633 61.59 6 60 6 c h
28.914 24 m 67.086 24 l 70.688 24 73.941 26.148 75.359 29.461 c 80.113 
40.543 l 81.121 42.898 82.934 44.824 85.23 45.965 c 86.562 46.637 87.516
 47.887 87.809 49.348 c 89.824 59.422 l 89.945 60.008 90.004 60.594 90 61.188
 c 90 63.664 l 90.02 68.414 86.297 72.34 81.551 72.57 c 72.223 72.992 58.836
 73.5 48 73.5 c 37.164 73.5 23.777 72.996 14.449 72.57 c 9.703 72.34 5.98
 68.414 6 63.664 c 6 61.188 l 6 60.594 6.059 60.008 6.18 59.422 c 8.191 
49.344 l 8.477 47.879 9.43 46.629 10.77 45.965 c 13.066 44.824 14.879 42.898
 15.887 40.539 c 20.641 29.449 l 20.641 29.453 l 22.059 26.141 25.316 23.996
 28.922 24 c h
28.914 24 m f
Q Q
showpage
%%Trailer
%%EOF
