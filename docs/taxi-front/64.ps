%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:20:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 3 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 3 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 3 48 42 rectclip
1 0 0 -1 0 48 cm q
0 g
14.586 15.828 m 11.719 21.57 l 11.48 22.062 11.523 22.645 11.828 23.098
 c 12.137 23.551 12.664 23.805 13.211 23.762 c 15.941 23.543 20.262 23.25
 24 23.25 c 27.742 23.25 32.062 23.539 34.789 23.762 c 35.336 23.805 35.863
 23.551 36.172 23.098 c 36.477 22.645 36.52 22.062 36.281 21.57 c 33.414
 15.832 l 33.16 15.324 32.641 15 32.074 15 c 15.926 15 l 15.359 15 14.84
 15.32 14.586 15.828 c 12 30 m 12 31.656 10.656 33 9 33 c 7.344 33 6 31.656
 6 30 c 6 28.344 7.344 27 9 27 c 10.656 27 12 28.344 12 30 c 42 30 m 42 
31.656 40.656 33 39 33 c 37.344 33 36 31.656 36 30 c 36 28.344 37.344 27
 39 27 c 40.656 27 42 28.344 42 30 c 15 30 m 15 28.344 16.344 27 18 27 c
 30 27 l 31.656 27 33 28.344 33 30 c 33 31.656 31.656 33 30 33 c 18 33 l
 16.344 33 15 31.656 15 30 c f
18 3 m 16.344 3 15 4.344 15 6 c 15 9 l 14.457 9 l 11.457 9 8.742 10.785
 7.559 13.547 c 5.184 19.09 l 4.961 19.617 4.555 20.047 4.043 20.301 c 2.543
 21.051 1.477 22.445 1.148 24.086 c 0.148 29.125 l 0.055 29.609 0.004 30.102
 0.004 30.594 c 0.004 31.832 l 0.004 34.273 1.176 36.461 3.004 37.824 c 
3.004 43.5 l 3.004 43.898 3.16 44.281 3.441 44.562 c 3.723 44.844 4.105 
45 4.504 45 c 10.504 45 l 10.902 45 11.281 44.844 11.562 44.562 c 11.844
 44.281 12.004 43.898 12.004 43.5 c 12.004 39.484 l 15.879 39.629 20.238
 39.75 24.004 39.75 c 27.77 39.75 32.129 39.629 36.004 39.484 c 36.004 43.5
 l 36.004 43.898 36.16 44.281 36.441 44.562 c 36.723 44.844 37.105 45 37.504
 45 c 43.504 45 l 43.902 45 44.281 44.844 44.562 44.562 c 44.844 44.281 
45.004 43.898 45.004 43.5 c 45.004 37.824 l 46.832 36.461 48.004 34.273 
48.004 31.832 c 48.004 30.594 l 48.004 30.098 47.953 29.609 47.855 29.125
 c 46.852 24.086 l 46.523 22.441 45.457 21.047 43.961 20.301 c 43.445 20.047
 43.039 19.617 42.816 19.09 c 40.441 13.547 l 39.258 10.785 36.543 9 33.543
 9 c 33 9 l 33 6 l 33 5.203 32.684 4.441 32.121 3.879 c 31.559 3.316 30.797
 3 30 3 c h
14.457 12 m 33.543 12 l 35.344 12 36.973 13.074 37.68 14.73 c 40.055 20.27
 l 40.559 21.449 41.469 22.41 42.613 22.984 c 43.277 23.32 43.758 23.945
 43.902 24.676 c 44.91 29.711 l 44.969 30.004 45 30.297 44.996 30.594 c 
44.996 31.832 l 45 31.832 l 45.008 34.207 43.148 36.168 40.777 36.285 c 
36.113 36.496 29.418 36.75 24 36.75 c 18.582 36.75 11.891 36.496 7.223 36.285
 c 4.852 36.168 2.992 34.207 3 31.832 c 3 30.594 l 3 30.297 3.031 30.004
 3.09 29.711 c 4.094 24.672 l 4.238 23.938 4.715 23.316 5.387 22.984 c 6.535
 22.414 7.441 21.453 7.945 20.273 c 10.32 14.73 l 10.32 14.727 l 11.031 
13.07 12.66 12 14.461 12 c h
14.457 12 m f
Q Q
showpage
%%Trailer
%%EOF
