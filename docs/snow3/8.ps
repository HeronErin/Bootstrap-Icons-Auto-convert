%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3 2.812 m 2.75 2.812 2.75 3.188 3 3.188 c 3.25 3.188 3.25 2.812 3 2.812
 c f
3 6 m 2.895 6 2.812 5.918 2.812 5.812 c 2.812 5.328 l 2.57 5.57 l 2.395
 5.746 2.129 5.48 2.305 5.305 c 2.812 4.797 l 2.812 4.23 l 2.043 3.77 l 
1.539 4.062 l 1.352 4.758 l 1.352 4.754 l 1.285 4.996 0.926 4.898 0.988 
4.656 c 1.078 4.324 l 0.656 4.566 l 0.656 4.57 l 0.441 4.691 0.258 4.371
 0.469 4.242 c 0.891 4 l 0.559 3.91 l 0.559 3.914 l 0.457 3.887 0.398 3.785
 0.422 3.684 c 0.449 3.582 0.555 3.523 0.656 3.551 c 1.352 3.738 l 1.875
 3.434 l 1.875 2.566 l 1.352 2.262 l 0.656 2.449 l 0.414 2.516 0.316 2.152
 0.559 2.086 c 0.891 1.996 l 0.469 1.754 l 0.469 1.758 l 0.258 1.629 0.441
 1.309 0.656 1.43 c 1.078 1.672 l 0.988 1.34 l 0.988 1.344 l 0.961 1.242
 1.02 1.137 1.121 1.109 c 1.223 1.082 1.324 1.145 1.352 1.246 c 1.539 1.941
 l 2.043 2.234 l 2.812 1.77 l 2.812 1.203 l 2.305 0.695 l 2.23 0.621 2.23
 0.504 2.305 0.43 c 2.379 0.355 2.496 0.355 2.57 0.43 c 2.812 0.672 l 2.812
 0.188 l 2.812 -0.062 3.188 -0.062 3.188 0.188 c 3.188 0.672 l 3.43 0.43
 l 3.605 0.254 3.871 0.52 3.695 0.695 c 3.188 1.203 l 3.188 1.77 l 3.957
 2.23 l 4.461 1.938 l 4.648 1.242 l 4.648 1.246 l 4.715 1.004 5.074 1.102
 5.012 1.344 c 4.922 1.676 l 5.344 1.434 l 5.344 1.43 l 5.559 1.309 5.742
 1.629 5.531 1.758 c 5.109 2 l 5.441 2.09 l 5.441 2.086 l 5.684 2.152 5.586
 2.516 5.344 2.449 c 4.652 2.262 l 4.129 2.566 l 4.129 3.434 l 4.652 3.738
 l 5.348 3.551 l 5.344 3.551 l 5.586 3.484 5.684 3.848 5.441 3.914 c 5.109
 4.004 l 5.531 4.246 l 5.531 4.242 l 5.742 4.371 5.559 4.691 5.344 4.57 
c 4.922 4.328 l 5.012 4.66 l 5.012 4.656 l 5.039 4.758 4.98 4.863 4.879 
4.891 c 4.777 4.918 4.676 4.855 4.648 4.754 c 4.461 4.059 l 3.957 3.766 
l 3.188 4.23 l 3.188 4.797 l 3.695 5.305 l 3.871 5.48 3.605 5.746 3.43 5.57
 c 3.188 5.328 l 3.188 5.812 l 3.188 5.918 3.105 6 3 6 c 3.75 3.457 m 3.75
 2.543 l 3 2.094 l 2.25 2.543 l 2.25 3.457 l 3 3.906 l h
3.75 3.457 m f
Q Q
showpage
%%Trailer
%%EOF
