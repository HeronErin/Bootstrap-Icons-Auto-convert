%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:40 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
87 18 m 87.797 18 88.559 18.316 89.121 18.879 c 89.684 19.441 90 20.203
 90 21 c 90 75 l 90 75.797 89.684 76.559 89.121 77.121 c 88.559 77.684 87.797
 78 87 78 c 9 78 l 7.344 78 6 76.656 6 75 c 6 21 l 6 19.344 7.344 18 9 18
 c h
9 12 m 4.031 12 0 16.031 0 21 c 0 75 l 0 79.969 4.031 84 9 84 c 87 84 l
 91.969 84 96 79.969 96 75 c 96 21 l 96 16.031 91.969 12 87 12 c h
9 12 m f
42 33 m 42 31.344 43.344 30 45 30 c 75 30 l 76.656 30 78 31.344 78 33 c
 78 34.656 76.656 36 75 36 c 45 36 l 43.344 36 42 34.656 42 33 c 33.023 
27.875 m 33.59 28.438 33.906 29.203 33.906 30 c 33.906 30.797 33.59 31.562
 33.023 32.125 c 24.023 41.125 l 23.461 41.688 22.695 42.004 21.898 42.004
 c 21.102 42.004 20.34 41.688 19.777 41.125 c 16.777 38.125 l 15.602 36.949
 15.602 35.051 16.777 33.875 c 17.949 32.703 19.852 32.703 21.023 33.875
 c 21.898 34.758 l 28.773 27.875 l 28.777 27.875 l 29.34 27.312 30.102 26.996
 30.898 26.996 c 31.695 26.996 32.461 27.312 33.023 27.875 c 42 57 m 42 
55.344 43.344 54 45 54 c 75 54 l 76.656 54 78 55.344 78 57 c 78 58.656 76.656
 60 75 60 c 45 60 l 43.344 60 42 58.656 42 57 c 33.023 51.875 m 33.59 52.438
 33.906 53.203 33.906 54 c 33.906 54.797 33.59 55.562 33.023 56.125 c 24.023
 65.125 l 23.461 65.688 22.695 66.004 21.898 66.004 c 21.102 66.004 20.34
 65.688 19.777 65.125 c 16.777 62.125 l 15.602 60.949 15.602 59.051 16.777
 57.875 c 17.949 56.703 19.852 56.703 21.023 57.875 c 21.898 58.758 l 28.773
 51.875 l 28.777 51.875 l 29.34 51.312 30.102 50.996 30.898 50.996 c 31.695
 50.996 32.461 51.312 33.023 51.875 c f
Q Q
showpage
%%Trailer
%%EOF
