%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:09 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
653.762 883.586 m 653.762 844.227 672.672 781.633 819.555 781.633 c 864.578
 781.633 892.324 784.898 929.57 793.25 c 917.668 947.426 842.211 967.777
 768.867 967.777 c 728.738 967.777 653.668 946.848 653.668 883.586 c h
653.762 883.586 m f
248.641 1536 m 1287.359 1536 l 1353.305 1536 1416.547 1509.805 1463.176
 1463.176 c 1509.805 1416.547 1536 1353.305 1536 1287.359 c 1536 248.641
 l 1536 182.695 1509.805 119.453 1463.176 72.824 c 1416.547 26.195 1353.305
 0 1287.359 0 c 248.641 0 l 182.695 0 119.453 26.195 72.824 72.824 c 26.195
 119.453 0 182.695 0 248.641 c 0 1287.359 l 0 1353.305 26.195 1416.547 72.824
 1463.176 c 119.453 1509.805 182.695 1536 248.641 1536 c 563.137 567.359
 m 617.57 489.598 689.375 459.262 788.738 459.262 c 858.816 459.262 918.434
 482.879 961.059 527.52 c 1003.586 572.254 1027.875 636.191 1033.441 717.887
 c 1056.992 727.742 1078.688 739.359 1098.531 752.734 c 1178.402 806.398
 1222.371 886.656 1222.371 978.621 c 1222.371 1174.172 1062.051 1343.996
 771.938 1343.996 c 522.816 1343.996 264 1199.035 264 767.613 c 264 338.496
 514.656 192 771.168 192 c 889.633 192 1167.551 209.473 1272 554.594 c 1174.078
 579.938 l 1093.246 334.176 923.805 295.008 768.574 295.008 c 511.773 295.008
 366.621 451.297 366.621 783.938 c 366.621 1082.211 528.859 1240.609 771.934
 1240.609 c 971.902 1240.609 1120.988 1136.738 1120.988 984.578 c 1120.988
 880.992 1034.012 831.457 1029.5 831.457 c 1012.508 920.258 967.004 1069.73
 767.133 1069.73 c 650.684 1069.73 550.172 989.281 550.172 883.875 c 550.172
 733.348 693.02 678.82 805.82 678.82 c 848.059 678.82 898.941 681.699 925.531
 687.078 c 925.531 641.191 886.746 562.664 788.637 562.664 c 701.18 562.664
 677.277 590.312 649.438 622.566 c 647.133 625.16 l 627.742 612.199 563.133
 567.465 563.133 567.465 c h
563.137 567.359 m f
Q Q
showpage
%%Trailer
%%EOF
