%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.555 3.453 m 2.555 3.301 2.629 3.055 3.203 3.055 c 3.379 3.055 3.488 3.066
 3.633 3.102 c 3.586 3.703 3.293 3.785 3.004 3.785 c 2.848 3.785 2.555 3.703
 2.555 3.457 c h
2.555 3.453 m f
0.973 6 m 5.031 6 l 5.027 6 l 5.566 6 6 5.566 6 5.027 c 6 0.973 l 6 0.434
 5.566 0 5.027 0 c 0.973 0 l 0.434 0 0 0.434 0 0.973 c 0 5.031 l 0 5.027
 l 0 5.566 0.434 6 0.973 6 c 2.199 2.215 m 2.41 1.91 2.691 1.793 3.082 1.793
 c 3.355 1.793 3.59 1.887 3.754 2.059 c 3.922 2.234 4.016 2.484 4.035 2.801
 c 4.129 2.84 4.211 2.883 4.289 2.938 c 4.602 3.148 4.773 3.461 4.773 3.82
 c 4.773 4.586 4.148 5.246 3.016 5.246 c 2.043 5.246 1.031 4.68 1.031 2.996
 c 1.031 1.32 2.012 0.75 3.012 0.75 c 3.473 0.75 4.559 0.816 4.969 2.168
 c 4.586 2.266 l 4.27 1.305 3.609 1.152 3 1.152 c 1.996 1.152 1.43 1.762
 1.43 3.062 c 1.43 4.227 2.062 4.848 3.012 4.848 c 3.793 4.848 4.375 4.441
 4.375 3.848 c 4.375 3.441 4.035 3.25 4.02 3.25 c 3.953 3.598 3.777 4.18
 2.996 4.18 c 2.543 4.18 2.148 3.867 2.148 3.453 c 2.148 2.863 2.707 2.652
 3.148 2.652 c 3.312 2.652 3.512 2.664 3.617 2.684 c 3.617 2.504 3.465 2.199
 3.082 2.199 c 2.742 2.199 2.648 2.309 2.539 2.434 c 2.531 2.445 l 2.457
 2.395 2.203 2.219 2.203 2.219 c h
2.199 2.215 m f
Q Q
showpage
%%Trailer
%%EOF
