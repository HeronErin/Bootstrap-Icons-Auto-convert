%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
5.109 6.902 m 5.109 6.594 5.258 6.105 6.406 6.105 c 6.758 6.105 6.977 6.133
 7.266 6.195 c 7.172 7.398 6.582 7.559 6.012 7.559 c 5.699 7.559 5.113 7.395
 5.113 6.902 c h
5.109 6.902 m f
1.941 12 m 10.059 12 l 11.129 12 12 11.129 12 10.059 c 12 1.941 l 12 0.871
 11.129 0 10.059 0 c 1.941 0 l 0.871 0 0 0.871 0 1.941 c 0 10.059 l 0 11.129
 0.871 12 1.941 12 c 4.398 4.434 m 4.824 3.824 5.383 3.59 6.16 3.59 c 6.707
 3.59 7.172 3.773 7.508 4.125 c 7.84 4.473 8.031 4.973 8.074 5.613 c 8.258
 5.691 8.426 5.781 8.582 5.887 c 9.207 6.305 9.551 6.934 9.551 7.652 c 9.551
 9.18 8.297 10.508 6.031 10.508 c 4.086 10.508 2.062 9.375 2.062 6.004 c
 2.062 2.645 4.02 1.5 6.023 1.5 c 6.949 1.5 9.121 1.637 9.938 4.332 c 9.172
 4.531 l 8.539 2.609 7.215 2.305 6.004 2.305 c 3.996 2.305 2.863 3.527 2.863
 6.125 c 2.863 8.457 4.129 9.691 6.031 9.691 c 7.594 9.691 8.758 8.879 8.758
 7.691 c 8.758 6.883 8.078 6.496 8.043 6.496 c 7.91 7.191 7.555 8.359 5.992
 8.359 c 5.082 8.359 4.297 7.73 4.297 6.906 c 4.297 5.73 5.414 5.305 6.293
 5.305 c 6.621 5.305 7.02 5.328 7.227 5.371 c 7.227 5.012 6.922 4.398 6.156
 4.398 c 5.473 4.398 5.285 4.613 5.07 4.867 c 5.051 4.887 l 4.898 4.785 
4.395 4.438 4.395 4.438 c h
4.398 4.434 m f
Q Q
showpage
%%Trailer
%%EOF
