%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:08 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
326.879 441.793 m 326.879 422.113 336.336 390.816 409.773 390.816 c 432.285
 390.816 446.156 392.449 464.781 396.625 c 458.828 473.715 421.102 483.891
 384.43 483.891 c 364.367 483.891 326.828 473.426 326.828 441.793 c h
326.879 441.793 m f
124.32 768 m 643.68 768 l 676.652 768 708.273 754.902 731.586 731.586 c
 754.902 708.273 768 676.652 768 643.68 c 768 124.32 l 768 91.348 754.902
 59.727 731.586 36.414 c 708.273 13.098 676.652 0 643.68 0 c 124.32 0 l 
91.348 0 59.727 13.098 36.414 36.414 c 13.098 59.727 0 91.348 0 124.32 c
 0 643.68 l 0 676.652 13.098 708.273 36.414 731.586 c 59.727 754.902 91.348
 768 124.32 768 c 281.566 283.68 m 308.781 244.801 344.688 229.633 394.367
 229.633 c 429.406 229.633 459.215 241.441 480.527 263.762 c 501.793 286.129
 513.934 318.098 516.719 358.945 c 528.496 363.875 539.344 369.68 549.262
 376.371 c 589.199 403.203 611.184 443.332 611.184 489.316 c 611.184 587.094
 531.023 672.004 385.969 672.004 c 261.41 672.004 132 599.523 132 383.812
 c 132 169.246 257.328 96 385.586 96 c 444.816 96 583.777 104.734 636 277.297
 c 587.039 289.969 l 546.625 167.09 461.902 147.504 384.285 147.504 c 255.887
 147.504 183.309 225.648 183.309 391.969 c 183.309 541.105 264.43 620.305
 385.965 620.305 c 485.949 620.305 560.492 568.367 560.492 492.289 c 560.492
 440.496 517.004 415.73 514.75 415.73 c 506.254 460.129 483.504 534.867 
383.566 534.867 c 325.344 534.867 275.086 494.645 275.086 441.938 c 275.086
 366.672 346.512 339.41 402.91 339.41 c 424.031 339.41 449.469 340.852 462.766
 343.539 c 462.766 320.594 443.375 281.332 394.316 281.332 c 350.59 281.332
 338.637 295.156 324.715 311.285 c 323.562 312.582 l 313.867 306.102 281.562
 283.734 281.562 283.734 c h
281.566 283.68 m f
Q Q
showpage
%%Trailer
%%EOF
