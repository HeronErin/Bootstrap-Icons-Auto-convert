%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
163.441 220.895 m 163.441 211.055 168.168 195.406 204.891 195.406 c 216.148
 195.406 223.082 196.223 232.395 198.309 c 229.418 236.852 210.555 241.941
 192.219 241.941 c 182.188 241.941 163.418 236.711 163.418 220.895 c h
163.441 220.895 m f
62.16 384 m 321.84 384 l 338.324 384 354.137 377.449 365.793 365.793 c 
377.449 354.137 384 338.324 384 321.84 c 384 62.16 l 384 45.676 377.449 
29.863 365.793 18.207 c 354.137 6.551 338.324 0 321.84 0 c 62.16 0 l 45.676
 0 29.863 6.551 18.207 18.207 c 6.551 29.863 0 45.676 0 62.16 c 0 321.84
 l 0 338.324 6.551 354.137 18.207 365.793 c 29.863 377.449 45.676 384 62.16
 384 c 140.785 141.84 m 154.395 122.398 172.344 114.816 197.184 114.816 
c 214.703 114.816 229.609 120.719 240.262 131.879 c 250.895 143.062 256.965
 159.047 258.359 179.473 c 264.246 181.938 269.672 184.84 274.633 188.184
 c 294.602 201.598 305.594 221.664 305.594 244.656 c 305.594 293.543 265.516
 336 192.984 336 c 130.703 336 66 299.762 66 191.902 c 66 84.625 128.664
 48 192.793 48 c 222.41 48 291.891 52.367 318 138.648 c 293.52 144.984 l
 273.312 83.543 230.953 73.754 192.145 73.754 c 127.945 73.754 91.656 112.824
 91.656 195.984 c 91.656 270.551 132.215 310.152 192.984 310.152 c 242.977
 310.152 280.25 284.184 280.25 246.145 c 280.25 220.25 258.508 207.863 257.379
 207.863 c 253.133 230.062 241.754 267.43 191.785 267.43 c 162.672 267.43
 137.547 247.316 137.547 220.965 c 137.547 183.332 173.258 169.699 201.457
 169.699 c 212.016 169.699 224.738 170.418 231.387 171.762 c 231.387 160.289
 221.691 140.656 197.164 140.656 c 175.301 140.656 169.324 147.566 162.363
 155.633 c 161.789 156.281 l 156.941 153.043 140.789 141.855 140.789 141.855
 c h
140.785 141.84 m f
Q Q
showpage
%%Trailer
%%EOF
