%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
408 192 m 367.602 191.98 328.223 204.703 295.477 228.359 c 262.727 252.016
 238.273 285.402 225.602 323.762 c 223.793 330.027 219.512 335.289 213.742
 338.336 c 207.977 341.379 201.215 341.945 195.023 339.902 c 188.828 337.859
 183.73 333.383 180.906 327.504 c 178.082 321.625 177.773 314.848 180.047
 308.734 c 196.711 258.422 229.551 215.035 273.449 185.34 c 317.352 155.645
 369.844 141.309 422.742 144.57 c 475.641 147.832 525.977 168.504 565.898
 203.363 c 605.82 238.227 633.082 285.316 643.441 337.297 c 692.168 343.879
 734.168 374.867 754.832 419.484 c 775.496 464.102 771.965 516.18 745.469
 557.602 c 718.969 599.02 673.172 624.055 624 624 c 24 624 l 15.426 624 
7.504 619.426 3.215 612 c -1.07 604.574 -1.07 595.426 3.215 588 c 7.504 
580.574 15.426 576 24 576 c 624 576 l 658.297 576.008 689.996 557.719 707.152
 528.02 c 724.305 498.324 724.316 461.727 707.176 432.02 c 690.031 402.312
 658.344 384.008 624.047 384 c 622.801 384 l 616.867 384.035 611.129 381.871
 606.699 377.93 c 602.266 373.984 599.453 368.539 598.801 362.641 c 593.547
 315.711 571.184 272.363 535.984 240.887 c 500.785 209.406 455.223 192.004
 408 192 c 0 408 m 0 401.637 2.527 395.531 7.031 391.031 c 11.531 386.527
 17.637 384 24 384 c 360 384 l 368.574 384 376.496 388.574 380.785 396 c
 385.07 403.426 385.07 412.574 380.785 420 c 376.496 427.426 368.574 432
 360 432 c 24 432 l 17.637 432 11.531 429.473 7.031 424.969 c 2.527 420.469
 0 414.363 0 408 c 0 504 m 0 497.637 2.527 491.531 7.031 487.031 c 11.531
 482.527 17.637 480 24 480 c 456 480 l 464.574 480 472.496 484.574 476.785
 492 c 481.07 499.426 481.07 508.574 476.785 516 c 472.496 523.426 464.574
 528 456 528 c 24 528 l 17.637 528 11.531 525.473 7.031 520.969 c 2.527 
516.469 0 510.363 0 504 c f
Q Q
showpage
%%Trailer
%%EOF
