%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 72 384 312
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 72 384 312
384 384 cairo_set_page_size
%%EndPageSetup
q 0 72 384 240 rectclip
1 0 0 -1 0 384 cm q
0 g
204 96 m 183.801 95.988 164.113 102.352 147.738 114.18 c 131.363 126.008
 119.137 142.699 112.801 161.879 c 111.895 165.012 109.758 167.645 106.871
 169.168 c 103.988 170.691 100.609 170.973 97.512 169.949 c 94.414 168.93
 91.867 166.691 90.453 163.75 c 89.043 160.812 88.887 157.426 90.023 154.367
 c 101.211 120.586 126.809 93.508 159.906 80.441 c 193.008 67.375 230.199
 69.668 261.441 86.699 c 292.688 103.734 314.766 133.75 321.719 168.648 
c 346.082 171.938 367.086 187.434 377.414 209.742 c 387.746 232.051 385.98
 258.09 372.734 278.801 c 359.484 299.512 336.586 312.027 312 312 c 12 312
 l 5.371 312 0 306.629 0 300 c 0 293.371 5.371 288 12 288 c 312 288 l 329.148
 288.004 344.996 278.859 353.574 264.012 c 362.152 249.16 362.156 230.863
 353.586 216.012 c 345.016 201.156 329.172 192.004 312.023 192 c 311.398
 192 l 305.254 192.039 300.074 187.426 299.398 181.32 c 296.773 157.855 
285.59 136.184 267.992 120.441 c 250.395 104.703 227.609 96 204 96 c 0 204
 m 0 197.371 5.371 192 12 192 c 180 192 l 186.629 192 192 197.371 192 204
 c 192 210.629 186.629 216 180 216 c 12 216 l 5.371 216 0 210.629 0 204 
c 0 252 m 0 245.371 5.371 240 12 240 c 228 240 l 234.629 240 240 245.371
 240 252 c 240 258.629 234.629 264 228 264 c 12 264 l 5.371 264 0 258.629
 0 252 c f
Q Q
showpage
%%Trailer
%%EOF
