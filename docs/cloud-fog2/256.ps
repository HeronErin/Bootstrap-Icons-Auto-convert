%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 36 192 156
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 36 192 156
192 192 cairo_set_page_size
%%EndPageSetup
q 0 36 192 120 rectclip
1 0 0 -1 0 192 cm q
0 g
102 48 m 91.898 47.996 82.055 51.176 73.867 57.09 c 65.684 63.004 59.57
 71.352 56.398 80.941 c 55.949 82.508 54.879 83.82 53.438 84.582 c 51.992
 85.344 50.305 85.484 48.754 84.977 c 47.207 84.465 45.934 83.348 45.227
 81.875 c 44.52 80.406 44.441 78.711 45.012 77.184 c 50.605 60.293 63.402
 46.754 79.953 40.223 c 96.504 33.688 115.098 34.836 130.723 43.352 c 146.344
 51.867 157.383 66.875 160.859 84.324 c 173.043 85.969 183.543 93.719 188.707
 104.871 c 193.875 116.027 192.992 129.047 186.367 139.398 c 179.742 149.754
 168.293 156.016 156 156 c 6 156 l 2.688 156 0 153.312 0 150 c 0 146.688
 2.688 144 6 144 c 156 144 l 164.574 144.004 172.5 139.43 176.789 132.004
 c 181.078 124.582 181.078 115.434 176.793 108.004 c 172.508 100.578 164.586
 96.004 156.012 96 c 155.699 96 l 152.629 96.02 150.039 93.715 149.699 90.66
 c 148.387 78.93 142.797 68.09 133.996 60.223 c 125.195 52.352 113.805 48
 102 48 c 0 102 m 0 98.688 2.688 96 6 96 c 90 96 l 93.312 96 96 98.688 96
 102 c 96 105.312 93.312 108 90 108 c 6 108 l 2.688 108 0 105.312 0 102 
c 0 126 m 0 122.688 2.688 120 6 120 c 114 120 l 117.312 120 120 122.688 
120 126 c 120 129.312 117.312 132 114 132 c 6 132 l 2.688 132 0 129.312 
0 126 c f
Q Q
showpage
%%Trailer
%%EOF
