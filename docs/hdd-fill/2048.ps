%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 288 1536 1248
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 288 1536 1248
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 288 1536 960 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 960 m 0 909.078 20.227 860.242 56.234 824.234 c 92.242 788.227 141.078
 768 192 768 c 1344 768 l 1377.703 768 1410.812 776.871 1440 793.723 c 1469.188
 810.574 1493.426 834.812 1510.277 864 c 1527.129 893.188 1536 926.297 1536
 960 c 1536 1056 l 1536 1089.703 1527.129 1122.812 1510.277 1152 c 1493.426
 1181.188 1469.188 1205.426 1440 1222.277 c 1410.812 1239.129 1377.703 1248
 1344 1248 c 192 1248 l 141.078 1248 92.242 1227.773 56.234 1191.766 c 20.227
 1155.758 0 1106.922 0 1056 c h
240 1056 m 257.148 1056 272.996 1046.852 281.57 1032 c 290.145 1017.148
 290.145 998.852 281.57 984 c 272.996 969.148 257.148 960 240 960 c 222.852
 960 207.004 969.148 198.43 984 c 189.855 998.852 189.855 1017.148 198.43
 1032 c 207.004 1046.852 222.852 1056 240 1056 c 432 1056 m 449.148 1056
 464.996 1046.852 473.57 1032 c 482.145 1017.148 482.145 998.852 473.57 
984 c 464.996 969.148 449.148 960 432 960 c 414.852 960 399.004 969.148 
390.43 984 c 381.855 998.852 381.855 1017.148 390.43 1032 c 399.004 1046.852
 414.852 1056 432 1056 c 87.359 691.586 m 120.719 678.609 156.207 671.969
 192 672 c 1344 672 l 1380.863 672 1416.191 678.91 1448.641 691.586 c 1269.41
 363.074 l 1269.406 363.07 l 1257.023 340.355 1238.746 321.395 1216.496 
308.184 c 1194.246 294.973 1168.852 288 1142.977 288 c 393.023 288 l 367.148
 288 341.754 294.973 319.504 308.184 c 297.254 321.395 278.977 340.355 266.594
 363.07 c h
87.359 691.586 m f
Q Q
showpage
%%Trailer
%%EOF
