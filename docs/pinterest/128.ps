%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 32.957 -0.008 18.781 7.031 9.703 19.023 c 0.621 31.016 -2.312 46.566
 1.777 61.043 c 5.863 75.52 16.5 87.242 30.512 92.711 c 30.09 88.914 29.707
 83.074 30.672 78.93 c 31.547 75.18 36.301 55.066 36.301 55.066 c 36.301
 55.066 34.867 52.191 34.867 47.945 c 34.867 41.266 38.738 36.289 43.555
 36.289 c 47.648 36.289 49.625 39.359 49.625 43.051 c 49.625 47.168 47.004
 53.324 45.648 59.027 c 44.52 63.805 48.047 67.703 52.758 67.703 c 61.289
 67.703 67.848 58.703 67.848 45.719 c 67.848 34.23 59.586 26.195 47.797 
26.195 c 34.141 26.195 26.125 36.438 26.125 47.02 c 26.125 51.148 27.715
 55.57 29.695 57.977 c 30.039 58.348 30.168 58.871 30.031 59.359 c 29.664
 60.871 28.855 64.137 28.699 64.801 c 28.488 65.676 28.004 65.863 27.09 
65.441 c 21.09 62.652 17.348 53.887 17.348 46.84 c 17.348 31.703 28.352 
17.801 49.062 17.801 c 65.711 17.801 78.656 29.664 78.656 45.52 c 78.656
 62.062 68.223 75.375 53.75 75.375 c 48.883 75.375 44.312 72.848 42.746 
69.859 c 39.758 81.27 l 38.672 85.441 35.742 90.664 33.789 93.852 c 33.785
 93.859 l 47.141 97.988 61.633 96.09 73.477 88.66 c 85.316 81.23 93.332 
69.008 95.422 55.188 c 97.516 41.367 93.48 27.32 84.371 16.715 c 75.258 
6.113 61.98 0.012 48 0 c f
Q Q
showpage
%%Trailer
%%EOF
