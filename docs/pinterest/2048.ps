%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 0 m 588.93 -0.113 415.449 62.352 277.555 176.59 c 139.66 290.828 46.02
 449.664 12.824 625.629 c -20.371 801.594 8.965 983.629 95.762 1140.254 
c 182.559 1296.883 321.355 1418.258 488.16 1483.391 c 481.441 1422.621 475.297
 1329.215 490.754 1262.879 c 504.77 1202.879 580.801 881.086 580.801 881.086
 c 580.801 881.086 557.855 835.102 557.855 767.133 c 557.855 660.285 619.777
 580.605 696.863 580.605 c 762.336 580.605 794.016 629.758 794.016 688.797
 c 794.016 754.652 752.062 853.148 730.367 944.445 c 712.32 1020.859 768.766
 1083.262 844.129 1083.262 c 980.641 1083.262 1085.57 939.262 1085.57 731.52
 c 1085.57 547.68 953.379 419.137 764.738 419.137 c 546.242 419.137 417.984
 583.008 417.984 752.352 c 417.984 818.398 443.426 889.152 475.105 927.648
 c 480.652 933.551 482.695 941.934 480.48 949.727 c 474.625 973.918 461.664
 1026.141 459.168 1036.797 c 455.809 1050.812 448.031 1053.789 433.441 1047.07
 c 337.441 1002.43 277.539 862.176 277.539 749.469 c 277.539 507.262 453.602
 284.828 784.996 284.828 c 1051.395 284.828 1258.469 474.621 1258.469 728.348
 c 1258.469 993.02 1091.523 1206.043 859.973 1206.043 c 782.117 1206.043
 708.965 1165.629 683.91 1117.82 c 636.102 1300.414 l 618.727 1367.133 571.879
 1450.75 540.582 1501.727 c 540.574 1501.727 l 681.797 1545.395 832.621 
1547.375 974.941 1507.438 c 1117.262 1467.496 1245.035 1387.336 1342.922
 1276.57 c 1440.805 1165.809 1504.648 1029.148 1526.781 882.996 c 1548.914
 736.844 1528.398 587.41 1467.699 452.629 c 1407 317.848 1308.691 203.449
 1184.578 123.16 c 1060.465 42.871 915.82 0.109 768 0 c f
Q Q
showpage
%%Trailer
%%EOF
