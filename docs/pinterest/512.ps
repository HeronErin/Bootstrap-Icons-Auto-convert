%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
192 0 m 147.234 -0.027 103.863 15.586 69.391 44.148 c 34.914 72.707 11.504
 112.414 3.207 156.406 c -5.094 200.398 2.242 245.906 23.941 285.062 c 45.641
 324.223 80.34 354.562 122.039 370.848 c 120.359 355.656 118.824 332.305
 122.688 315.719 c 126.191 300.719 145.199 220.27 145.199 220.27 c 145.199
 220.27 139.465 208.773 139.465 191.781 c 139.465 165.07 154.945 145.148
 174.219 145.148 c 190.586 145.148 198.508 157.438 198.508 172.195 c 198.508
 188.66 188.02 213.285 182.598 236.105 c 178.086 255.211 192.199 270.809
 211.039 270.809 c 245.168 270.809 271.398 234.809 271.398 182.871 c 271.398
 136.91 238.352 104.773 191.191 104.773 c 136.566 104.773 104.504 145.742
 104.504 188.078 c 104.504 204.59 110.863 222.277 118.785 231.902 c 118.777
 231.91 l 120.164 233.387 120.672 235.484 120.121 237.434 c 118.656 243.48
 115.418 256.539 114.793 259.203 c 113.953 262.707 112.008 263.449 108.359
 261.77 c 84.359 250.609 69.383 215.547 69.383 187.371 c 69.383 126.82 113.398
 71.211 196.246 71.211 c 262.848 71.211 314.613 118.66 314.613 182.09 c 
314.613 248.258 272.879 301.516 214.988 301.516 c 195.523 301.516 177.234
 291.41 170.973 279.461 c 159.02 325.109 l 154.676 341.789 142.965 362.695
 135.141 375.438 c 135.145 375.434 l 170.449 386.348 208.156 386.844 243.734
 376.859 c 279.316 366.875 311.258 346.832 335.73 319.145 c 360.203 291.453
 376.16 257.285 381.695 220.75 c 387.23 184.211 382.102 146.852 366.926 
113.156 c 351.75 79.461 327.172 50.863 296.145 30.789 c 265.117 10.719 228.953
 0.027 192 0 c f
Q Q
showpage
%%Trailer
%%EOF
