%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
384 0 m 294.465 -0.059 207.727 31.176 138.777 88.293 c 69.832 145.414 23.012
 224.832 6.414 312.812 c -10.184 400.797 4.484 491.812 47.879 570.129 c 
91.277 648.441 160.68 709.129 244.078 741.695 c 240.719 711.312 237.645 
664.605 245.375 631.438 c 252.383 601.438 290.398 440.543 290.398 440.543
 c 290.398 440.543 278.926 417.551 278.926 383.566 c 278.926 330.141 309.887
 290.301 348.43 290.301 c 381.164 290.301 397.004 314.875 397.004 344.398
 c 397.004 377.328 376.027 426.574 365.18 472.223 c 356.156 510.43 384.379
 541.629 422.059 541.629 c 490.316 541.629 542.777 469.629 542.777 365.758
 c 542.777 273.836 476.68 209.566 382.363 209.566 c 273.117 209.566 208.988
 291.504 208.988 376.176 c 208.988 409.199 221.707 444.574 237.547 463.824
 c 237.551 463.824 l 240.328 466.777 241.348 470.969 240.238 474.863 c 237.309
 486.961 230.832 513.07 229.582 518.398 c 227.902 525.406 224.016 526.895
 216.719 523.535 c 168.719 501.215 138.766 431.086 138.766 374.734 c 138.766
 253.629 226.797 142.414 392.492 142.414 c 525.691 142.414 629.227 237.309
 629.227 364.176 c 629.227 496.512 545.754 603.023 429.98 603.023 c 391.051
 603.023 354.477 582.816 341.949 558.91 c 318.047 650.207 l 309.359 683.566
 285.934 725.375 270.285 750.863 c 270.289 750.863 l 340.898 772.695 416.312
 773.688 487.473 753.719 c 558.633 733.75 622.516 693.668 671.461 638.285
 c 720.402 582.902 752.324 514.574 763.391 441.496 c 774.457 368.422 764.199
 293.703 733.852 226.312 c 703.5 158.926 654.348 101.723 592.289 61.578 
c 530.234 21.438 457.91 0.055 384 0 c f
Q Q
showpage
%%Trailer
%%EOF
