%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 26 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 26 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 26 384 310 rectclip
1 0 0 -1 0 384 cm q
0 g
268.223 346.297 m 204.262 346.297 152.398 303.098 152.398 249.863 c 152.398
 196.582 204.215 153.383 268.176 153.383 c 332.137 153.383 384 196.586 384
 249.863 c 384 278.902 368.398 305.086 344.016 322.727 c 341.203 324.688
 340.027 328.27 341.137 331.512 c 346.367 350.953 l 346.695 351.863 346.926
 352.805 347.062 353.762 c 347.012 355.887 345.301 357.598 343.176 357.648
 c 342.391 357.594 341.633 357.344 340.969 356.93 c 315.602 342.289 l 313.75
 341.152 311.625 340.539 309.457 340.512 c 308.301 340.516 307.152 340.684
 306.047 341.016 c 293.75 344.535 281.016 346.312 268.223 346.297 c 217.535
 229.008 m 220.508 233.566 225.645 236.238 231.082 236.051 c 236.523 235.863
 241.465 232.84 244.113 228.09 c 246.762 223.336 246.727 217.543 244.023
 212.82 c 241.32 208.098 236.344 205.133 230.902 205.008 c 226.785 205 222.836
 206.637 219.926 209.551 c 217.016 212.465 215.387 216.418 215.398 220.535
 c 215.223 223.516 215.98 226.477 217.559 229.008 c h
295.102 229.031 m 295.105 229.031 l 298.09 233.59 303.25 236.246 308.695
 236.027 c 314.141 235.809 319.07 232.746 321.68 227.965 c 324.293 223.184
 324.199 217.379 321.441 212.684 c 318.68 207.984 313.656 205.078 308.207
 205.031 c 304.109 205.039 300.184 206.668 297.285 209.566 c 294.391 212.465
 292.758 216.391 292.754 220.488 c 292.664 223.508 293.484 226.484 295.105
 229.031 c f
0 163.824 m 0 198.746 18.742 230.184 48.023 251.566 c 51.379 253.93 52.777
 258.219 51.457 262.105 c 47.594 276.504 l 45.195 285.457 l 45.191 285.457
 l 44.777 286.535 44.516 287.664 44.426 288.816 c 44.406 290.051 44.887 
291.238 45.758 292.113 c 46.633 292.984 47.82 293.469 49.055 293.449 c 50.016
 293.449 50.902 293.219 51.719 292.754 c 82.152 275.16 l 84.379 273.801 
86.934 273.07 89.543 273.047 c 90.949 273.047 92.32 273.246 93.648 273.648
 c 106.348 277.301 119.441 279.395 132.648 279.887 c 129.828 270.129 128.398
 260.023 128.398 249.863 c 128.398 179.398 195.238 129.383 268.176 129.383
 c 271.777 129.43 l 254.09 82.297 201.406 48 139.105 48 c 62.305 48 0 99.84
 0 163.824 c 111.168 126.504 m 111.168 133.105 107.645 139.207 101.93 142.508
 c 96.211 145.809 89.164 145.809 83.449 142.508 c 77.73 139.207 74.207 133.105
 74.207 126.504 c 74.207 119.902 77.73 113.801 83.449 110.5 c 89.164 107.199
 96.211 107.199 101.93 110.5 c 107.645 113.801 111.168 119.902 111.168 126.504
 c 204.168 126.504 m 204.168 133.105 200.645 139.207 194.93 142.508 c 189.211
 145.809 182.164 145.809 176.449 142.508 c 170.73 139.207 167.207 133.105
 167.207 126.504 c 167.207 119.902 170.73 113.801 176.449 110.5 c 182.164
 107.199 189.211 107.199 194.93 110.5 c 200.645 113.801 204.168 119.902 
204.168 126.504 c f
Q Q
showpage
%%Trailer
%%EOF
