%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 13 192 168
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 13 192 168
192 192 cairo_set_page_size
%%EndPageSetup
q 0 13 192 155 rectclip
1 0 0 -1 0 192 cm q
0 g
134.113 173.148 m 102.133 173.148 76.203 151.547 76.203 124.934 c 76.203
 98.293 102.109 76.695 134.09 76.695 c 166.066 76.691 192 98.293 192 124.934
 c 192 139.453 184.199 152.547 172.008 161.367 c 172.008 161.363 l 170.602
 162.344 170.016 164.133 170.566 165.758 c 173.184 175.477 l 173.348 175.93
 173.465 176.402 173.531 176.879 c 173.508 177.941 172.652 178.797 171.59
 178.824 c 171.195 178.797 170.816 178.672 170.484 178.465 c 157.801 171.145
 l 156.875 170.574 155.812 170.27 154.727 170.258 c 154.152 170.258 153.578
 170.344 153.023 170.508 c 146.875 172.27 140.508 173.156 134.113 173.148
 c 108.77 114.504 m 110.254 116.785 112.824 118.121 115.543 118.023 c 118.262
 117.93 120.73 116.422 122.055 114.043 c 123.379 111.668 123.363 108.77 
122.012 106.41 c 120.66 104.047 118.172 102.566 115.453 102.504 c 113.395
 102.5 111.418 103.316 109.961 104.773 c 108.508 106.23 107.695 108.211 
107.699 110.27 c 107.613 111.758 107.988 113.238 108.781 114.504 c h
147.555 114.516 m 147.551 114.516 l 149.047 116.793 151.625 118.121 154.348
 118.012 c 157.07 117.902 159.535 116.375 160.84 113.984 c 162.145 111.59
 162.102 108.691 160.719 106.34 c 159.34 103.992 156.828 102.539 154.105
 102.516 c 149.84 102.523 146.383 105.98 146.375 110.242 c 146.332 111.754
 146.742 113.242 147.551 114.516 c f
0 81.91 m 0 99.371 9.371 115.09 24.012 125.781 c 24.012 125.785 l 25.691
 126.965 26.391 129.109 25.727 131.051 c 23.793 138.25 l 22.594 142.727 
l 22.598 142.727 l 22.387 143.266 22.258 143.832 22.211 144.406 c 22.203
 145.023 22.441 145.621 22.879 146.055 c 23.316 146.492 23.91 146.734 24.527
 146.723 c 25.008 146.723 25.453 146.605 25.859 146.375 c 41.074 137.578
 l 42.191 136.898 43.469 136.535 44.773 136.523 c 45.477 136.523 46.16 136.625
 46.824 136.824 c 53.172 138.648 59.723 139.699 66.324 139.945 c 64.914 
135.066 64.199 130.012 64.199 124.934 c 64.199 89.703 97.621 64.695 134.086
 64.695 c 135.887 64.719 l 127.043 41.148 100.703 24 69.551 24 c 31.152 
24 0 49.922 0 81.91 c 55.586 63.25 m 55.586 63.254 l 55.586 68.355 51.445
 72.492 46.344 72.492 c 41.242 72.492 37.105 68.355 37.105 63.254 c 37.105
 58.148 41.242 54.012 46.344 54.012 c 51.445 54.012 55.586 58.148 55.586
 63.254 c 102.086 63.254 m 102.086 68.355 97.945 72.492 92.844 72.492 c 
87.742 72.492 83.605 68.355 83.605 63.254 c 83.605 58.148 87.742 54.012 
92.844 54.012 c 97.945 54.012 102.086 58.148 102.086 63.254 c f
Q Q
showpage
%%Trailer
%%EOF
