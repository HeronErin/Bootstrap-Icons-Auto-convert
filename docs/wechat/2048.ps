%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 105 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 105 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 105 1536 1239 rectclip
1 0 0 -1 0 1536 cm q
0 g
1072.895 1385.184 m 817.055 1385.184 609.598 1212.383 609.598 999.457 c
 609.598 786.336 816.863 613.535 1072.703 613.535 c 1328.543 613.535 1536
 786.336 1536 999.457 c 1536 1115.617 1473.602 1220.352 1376.062 1290.914
 c 1376.062 1290.91 l 1370.59 1294.723 1366.504 1300.215 1364.426 1306.551
 c 1362.348 1312.891 1362.391 1319.734 1364.543 1326.047 c 1385.473 1403.809
 l 1386.773 1407.449 1387.707 1411.211 1388.258 1415.039 c 1388.16 1419.133
 1386.488 1423.035 1383.594 1425.93 c 1380.699 1428.824 1376.797 1430.496
 1372.703 1430.594 c 1369.57 1430.371 1366.535 1429.379 1363.871 1427.711
 c 1262.398 1369.152 l 1255 1364.605 1246.508 1362.148 1237.824 1362.047
 c 1233.207 1362.062 1228.617 1362.738 1224.191 1364.062 c 1174.996 1378.145
 1124.066 1385.254 1072.895 1385.184 c 870.145 916.031 m 882.023 934.27 
902.582 944.957 924.336 944.203 c 946.086 943.449 965.859 931.367 976.449
 912.352 c 987.039 893.336 986.906 870.168 976.094 851.277 c 965.285 832.387
 945.375 820.531 923.617 820.031 c 907.145 820.008 891.34 826.547 879.703
 838.203 c 868.062 849.859 861.551 865.672 861.602 882.145 c 860.898 894.062
 863.918 905.906 870.238 916.031 c h
1180.418 916.129 m 1180.414 916.129 l 1192.359 934.359 1213 944.98 1234.777
 944.109 c 1256.555 943.234 1276.277 930.992 1286.723 911.859 c 1297.168
 892.73 1296.801 869.523 1285.762 850.73 c 1274.723 831.938 1254.625 820.32
 1232.832 820.129 c 1216.441 820.152 1200.734 826.676 1189.145 838.266 c
 1177.555 849.852 1171.035 865.562 1171.008 881.953 c 1170.66 894.027 1173.938
 905.93 1180.414 916.129 c f
0 655.297 m 0 794.977 74.977 920.738 192.098 1006.273 c 198.633 1010.867
 203.504 1017.461 205.977 1025.059 c 208.453 1032.656 208.398 1040.852 205.824
 1048.414 c 190.367 1106.016 l 180.766 1141.824 l 180.77 1141.824 l 179.102
 1146.133 178.066 1150.66 177.695 1155.266 c 177.617 1160.203 179.543 1164.961
 183.035 1168.453 c 186.527 1171.945 191.285 1173.871 196.223 1173.793 c
 200.062 1173.793 203.613 1172.863 206.879 1171.008 c 328.605 1100.641 l
 328.609 1100.641 l 337.516 1095.195 347.738 1092.277 358.176 1092.191 c
 363.809 1092.191 369.281 1092.992 374.59 1094.59 c 374.594 1094.594 l 425.391
 1109.195 477.773 1117.578 530.594 1119.551 c 519.309 1080.52 513.59 1040.09
 513.602 999.457 c 513.602 717.602 780.961 517.535 1072.707 517.535 c 1087.105
 517.727 l 1016.352 329.184 805.633 192 556.414 192 c 249.215 192 0 399.359
 0 655.297 c 444.672 506.016 m 444.672 532.426 430.582 556.828 407.711 570.031
 c 384.84 583.238 356.664 583.238 333.793 570.031 c 310.922 556.828 296.832
 532.426 296.832 506.016 c 296.832 479.605 310.922 455.203 333.793 442 c
 356.664 428.793 384.84 428.793 407.711 442 c 430.582 455.203 444.672 479.605
 444.672 506.016 c 816.672 506.016 m 816.672 532.426 802.582 556.828 779.711
 570.031 c 756.84 583.238 728.664 583.238 705.793 570.031 c 682.922 556.828
 668.832 532.426 668.832 506.016 c 668.832 479.605 682.922 455.203 705.793
 442 c 728.664 428.793 756.84 428.793 779.711 442 c 802.582 455.203 816.672
 479.605 816.672 506.016 c f
Q Q
showpage
%%Trailer
%%EOF
