%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 6 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 6 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 6 96 78 rectclip
1 0 0 -1 0 96 cm q
0 g
67.055 86.574 m 51.066 86.574 38.098 75.773 38.098 62.465 c 38.098 49.145
 51.051 38.344 67.043 38.344 c 83.035 38.348 96 49.145 96 62.465 c 96 69.727
 92.102 76.27 86.004 80.68 c 86.004 80.684 l 85.301 81.172 85.008 82.066
 85.285 82.879 c 86.594 87.738 l 86.672 87.965 86.73 88.199 86.766 88.441
 c 86.754 88.973 86.324 89.398 85.793 89.41 c 85.598 89.398 85.41 89.336
 85.242 89.23 c 78.898 85.57 l 78.438 85.289 77.906 85.133 77.363 85.129
 c 77.074 85.129 76.789 85.172 76.512 85.254 c 73.438 86.133 70.254 86.578
 67.055 86.574 c 54.383 57.254 m 55.125 58.391 56.41 59.059 57.77 59.012
 c 59.129 58.965 60.367 58.211 61.027 57.023 c 61.691 55.832 61.68 54.387
 61.008 53.203 c 60.332 52.023 59.086 51.285 57.727 51.254 c 56.695 51.25
 55.707 51.66 54.98 52.387 c 54.254 53.117 53.848 54.105 53.852 55.133 c
 53.805 55.879 53.996 56.617 54.391 57.254 c h
73.773 57.262 m 73.777 57.258 l 74.523 58.398 75.812 59.062 77.172 59.008
 c 78.535 58.953 79.766 58.188 80.422 56.992 c 81.074 55.797 81.051 54.344
 80.359 53.172 c 79.672 51.996 78.414 51.27 77.051 51.258 c 74.918 51.262
 73.191 52.988 73.188 55.121 c 73.168 55.875 73.371 56.621 73.777 57.258
 c f
0 40.957 m 0 49.688 4.688 57.547 12.008 62.895 c 12.008 62.891 l 12.844
 63.48 13.195 64.555 12.863 65.527 c 11.898 69.129 l 11.297 71.367 l 11.297
 71.363 l 11.195 71.633 11.129 71.918 11.105 72.203 c 11.102 72.512 11.223
 72.809 11.441 73.027 c 11.656 73.246 11.957 73.367 12.266 73.363 c 12.504
 73.363 12.727 73.305 12.93 73.188 c 20.539 68.789 l 21.094 68.449 21.734
 68.266 22.387 68.262 c 22.738 68.262 23.082 68.312 23.414 68.41 c 23.41
 68.41 l 26.586 69.324 29.859 69.848 33.16 69.973 c 32.457 67.531 32.098
 65.004 32.102 62.465 c 32.102 44.848 48.812 32.344 67.047 32.344 c 67.945
 32.355 l 63.523 20.574 50.352 12 34.777 12 c 15.574 12 0 24.961 0 40.957
 c 27.793 31.629 m 27.793 31.625 l 27.793 34.176 25.723 36.246 23.172 36.246
 c 20.621 36.246 18.551 34.176 18.551 31.625 c 18.551 29.074 20.621 27.008
 23.172 27.008 c 25.723 27.008 27.793 29.074 27.793 31.625 c 51.043 31.625
 m 51.043 34.176 48.973 36.246 46.422 36.246 c 43.871 36.246 41.801 34.176
 41.801 31.625 c 41.801 29.074 43.871 27.008 46.422 27.008 c 48.973 27.008
 51.043 29.074 51.043 31.625 c f
Q Q
showpage
%%Trailer
%%EOF
