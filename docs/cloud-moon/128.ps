%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 90
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 90
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 90 rectclip
1 0 0 -1 0 96 cm q
0 g
42 48 m 47.629 48 53.02 50.258 56.969 54.266 c 60.914 58.277 63.09 63.703
 63 69.328 c 62.984 70.266 63.41 71.156 64.145 71.734 c 64.879 72.312 65.844
 72.516 66.75 72.281 c 69.445 71.594 72.309 72.188 74.508 73.891 c 76.703
 75.594 77.992 78.219 78 81 c 78 85.969 73.969 90 69 90 c 18 90 l 14.777
 89.98 11.695 88.668 9.453 86.355 c 7.211 84.039 5.992 80.922 6.07 77.699
 c 6.152 74.477 7.523 71.426 9.883 69.227 c 12.238 67.027 15.379 65.867 
18.602 66.012 c 20.023 66.082 21.301 65.141 21.652 63.762 c 22.816 59.25
 25.445 55.254 29.129 52.398 c 32.812 49.547 37.34 47.996 42 48 c 68.84 
66 m 67.93 57.828 63.352 50.516 56.395 46.133 c 49.438 41.75 40.863 40.777
 33.102 43.488 c 25.336 46.199 19.234 52.301 16.52 60.059 c 10.281 60.57
 4.758 64.285 1.93 69.867 c -0.898 75.449 -0.625 82.098 2.652 87.43 c 5.93
 92.758 11.742 96.004 18 96 c 69 96 l 74.359 96 79.312 93.141 81.992 88.5
 c 84.668 83.859 84.668 78.141 81.992 73.5 c 79.312 68.859 74.359 66 69 
66 c h
68.84 66 m f
67.715 10.668 m 68.422 9.609 68.387 8.223 67.625 7.203 c 66.863 6.184 65.539
 5.758 64.324 6.137 c 58.113 8.082 52.789 12.164 49.297 17.66 c 45.805 23.152
 44.371 29.707 45.246 36.156 c 47.391 36.367 49.512 36.785 51.574 37.41 
c 50.648 33.461 50.848 29.332 52.16 25.492 c 53.469 21.652 55.832 18.262
 58.98 15.703 c 56.875 23.82 58.582 32.453 63.613 39.16 c 68.645 45.867 
76.457 49.918 84.84 50.164 c 80.906 52.898 76.176 54.234 71.395 53.969 c
 72.371 55.875 73.16 57.875 73.758 59.969 c 82.543 59.598 90.625 55.047 
95.504 47.73 c 96.207 46.672 96.172 45.285 95.41 44.266 c 94.648 43.246 
93.324 42.82 92.113 43.199 c 86.402 44.992 80.203 44.332 75 41.371 c 69.801
 38.414 66.059 33.43 64.68 27.605 c 63.297 21.781 64.402 15.648 67.723 10.668
 c h
67.715 10.668 m f
Q Q
showpage
%%Trailer
%%EOF
