%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 720
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 720
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 624 rectclip
1 0 0 -1 0 768 cm q
0 g
384 434.398 m 426.871 434.398 466.488 411.527 487.922 374.398 c 509.359
 337.273 509.359 291.527 487.922 254.398 c 466.488 217.273 426.871 194.398
 384 194.398 c 341.129 194.398 301.512 217.273 280.078 254.398 c 258.641
 291.527 258.641 337.273 280.078 374.398 c 301.512 411.527 341.129 434.398
 384 434.398 c f
48 48 m 35.27 48 23.062 53.059 14.059 62.059 c 5.059 71.062 0 83.27 0 96
 c 0 624 l 0 636.73 5.059 648.938 14.059 657.941 c 23.062 666.941 35.27 
672 48 672 c 72 672 l 78.363 672 84.469 669.473 88.969 664.969 c 93.473 
660.469 96 654.363 96 648 c 96 639.426 100.574 631.504 108 627.215 c 115.426
 622.93 124.574 622.93 132 627.215 c 139.426 631.504 144 639.426 144 648
 c 144 654.363 146.527 660.469 151.031 664.969 c 155.531 669.473 161.637
 672 168 672 c 600 672 l 606.363 672 612.469 669.473 616.969 664.969 c 621.473
 660.469 624 654.363 624 648 c 624 639.426 628.574 631.504 636 627.215 c
 643.426 622.93 652.574 622.93 660 627.215 c 667.426 631.504 672 639.426
 672 648 c 672 654.363 674.527 660.469 679.031 664.969 c 683.531 669.473
 689.637 672 696 672 c 720 672 l 732.73 672 744.938 666.941 753.941 657.941
 c 762.941 648.938 768 636.73 768 624 c 768 144 l 768 131.27 762.941 119.062
 753.941 110.059 c 744.938 101.059 732.73 96 720 96 c 321.938 96 l 288 62.062
 l 279 53.062 266.793 48.004 254.062 48 c h
48 96 m 254.062 96 l 288 129.938 l 297 138.938 309.207 143.996 321.938 
144 c 720 144 l 720 624 l 715.922 624 l 707.965 601.52 689.391 584.438 666.324
 578.383 c 643.262 572.324 618.691 578.086 600.719 593.762 c 570.48 538.703
 506.594 480 384 480 c 261.359 480 197.473 538.754 167.328 593.762 c 149.355
 578.086 124.789 572.324 101.723 578.383 c 78.656 584.438 60.086 601.52 
52.129 624 c 48 624 l h
48 96 m f
Q Q
showpage
%%Trailer
%%EOF
