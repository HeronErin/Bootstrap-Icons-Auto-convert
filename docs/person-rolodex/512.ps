%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:57 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 360
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 360
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 312 rectclip
1 0 0 -1 0 384 cm q
0 g
192 217.199 m 213.438 217.199 233.242 205.766 243.961 187.199 c 254.68 
168.637 254.68 145.766 243.961 127.199 c 233.242 108.637 213.438 97.199 
192 97.199 c 170.562 97.199 150.758 108.637 140.039 127.199 c 129.32 145.766
 129.32 168.637 140.039 187.199 c 150.758 205.766 170.562 217.199 192 217.199
 c f
24 24 m 17.637 24 11.531 26.527 7.031 31.031 c 2.527 35.531 0 41.637 0 
48 c 0 312 l 0 318.363 2.527 324.469 7.031 328.969 c 11.531 333.473 17.637
 336 24 336 c 36 336 l 39.184 336 42.234 334.734 44.484 332.484 c 46.734
 330.234 48 327.184 48 324 c 48 317.371 53.371 312 60 312 c 66.629 312 72
 317.371 72 324 c 72 327.184 73.266 330.234 75.516 332.484 c 77.766 334.734
 80.816 336 84 336 c 300 336 l 303.184 336 306.234 334.734 308.484 332.484
 c 310.734 330.234 312 327.184 312 324 c 312 317.371 317.371 312 324 312
 c 330.629 312 336 317.371 336 324 c 336 327.184 337.266 330.234 339.516
 332.484 c 341.766 334.734 344.816 336 348 336 c 360 336 l 366.363 336 372.469
 333.473 376.969 328.969 c 381.473 324.469 384 318.363 384 312 c 384 72 
l 384 65.637 381.473 59.531 376.969 55.031 c 372.469 50.527 366.363 48 360
 48 c 160.969 48 l 144 31.031 l 139.5 26.531 133.398 24 127.031 24 c h
24 48 m 127.031 48 l 144 64.969 l 148.5 69.469 154.602 72 160.969 72 c 
360 72 l 360 312 l 357.961 312 l 353.98 300.758 344.695 292.219 333.164 
289.191 c 321.629 286.164 309.348 289.043 300.359 296.879 c 285.238 269.352
 253.297 240 192 240 c 130.68 240 98.734 269.375 83.664 296.879 c 74.68 
289.043 62.395 286.164 50.859 289.191 c 39.328 292.219 30.043 300.758 26.062
 312 c 24 312 l h
24 48 m f
Q Q
showpage
%%Trailer
%%EOF
