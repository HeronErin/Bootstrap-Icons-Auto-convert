%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 6 48 45
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 6 48 45
48 48 cairo_set_page_size
%%EndPageSetup
q 0 6 48 39 rectclip
1 0 0 -1 0 48 cm q
0 g
24 27.148 m 28.141 27.148 31.5 23.793 31.5 19.648 c 31.5 15.508 28.141 
12.148 24 12.148 c 19.859 12.148 16.5 15.508 16.5 19.648 c 16.5 23.793 19.859
 27.148 24 27.148 c f
3 3 m 1.344 3 0 4.344 0 6 c 0 39 l 0 39.797 0.316 40.559 0.879 41.121 c
 1.441 41.684 2.203 42 3 42 c 4.5 42 l 4.898 42 5.281 41.844 5.562 41.562
 c 5.844 41.281 6 40.898 6 40.5 c 6 39.672 6.672 39 7.5 39 c 8.328 39 9 
39.672 9 40.5 c 9 40.898 9.156 41.281 9.438 41.562 c 9.719 41.844 10.102
 42 10.5 42 c 37.5 42 l 37.898 42 38.281 41.844 38.562 41.562 c 38.844 41.281
 39 40.898 39 40.5 c 39 39.672 39.672 39 40.5 39 c 41.328 39 42 39.672 42
 40.5 c 42 40.898 42.156 41.281 42.438 41.562 c 42.719 41.844 43.102 42 
43.5 42 c 45 42 l 45.797 42 46.559 41.684 47.121 41.121 c 47.684 40.559 
48 39.797 48 39 c 48 9 l 48 8.203 47.684 7.441 47.121 6.879 c 46.559 6.316
 45.797 6 45 6 c 20.121 6 l 18 3.879 l 17.438 3.316 16.676 3 15.879 3 c 
h
3 6 m 15.879 6 l 18 8.121 l 18.562 8.684 19.324 9 20.121 9 c 45 9 l 45 
39 l 44.746 39 l 44.246 37.594 43.086 36.527 41.645 36.148 c 40.203 35.77
 38.668 36.129 37.547 37.109 c 35.656 33.668 31.66 30 24 30 c 16.336 30 
12.344 33.672 10.457 37.109 c 9.336 36.129 7.801 35.77 6.359 36.148 c 4.914
 36.527 3.754 37.594 3.258 39 c 3 39 l h
3 6 m f
Q Q
showpage
%%Trailer
%%EOF
