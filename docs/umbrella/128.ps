%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
48 0 m 48.797 0 49.559 0.316 50.121 0.879 c 50.684 1.441 51 2.203 51 3 
c 51 6.086 l 75.75 7.43 96 25.32 96 48 c 96 48 96 51 93 51 c 92.105 51 90.887
 50.129 90.887 50.129 c 90.863 50.105 l 90.715 49.969 l 89.684 49.074 88.566
 48.281 87.383 47.605 c 84.535 45.938 81.301 45.039 78 45 c 74.172 45 70.934
 46.277 68.617 47.605 c 67.434 48.281 66.316 49.074 65.285 49.969 c 65.137
 50.105 l 65.117 50.125 l 65.117 50.125 63.895 51 63 51 c 62.105 51 60.887
 50.129 60.887 50.129 c 60.863 50.105 l 60.715 49.969 l 59.684 49.074 58.566
 48.281 57.383 47.605 c 55.406 46.461 53.246 45.672 51 45.266 c 51 81 l 
48 81 l 51 81 l 51 81.234 l 50.969 81.73 l 50.801 84.031 50.195 86.273 49.184
 88.344 c 48.145 90.473 46.566 92.293 44.605 93.625 c 42.359 95.105 39.523
 96 36 96 c 32.477 96 29.633 95.113 27.395 93.625 c 25.434 92.293 23.855
 90.473 22.816 88.344 c 21.73 86.125 21.117 83.703 21.008 81.234 c 21.008
 81.086 l 21 81.031 l 21 81.012 l 21 81.012 21 81 24 81 c 21 81 l 21 78 
l 21 76.344 22.344 75 24 75 c 25.656 75 27 76.344 27 78 c 27 81.035 l 27.02
 81.301 l 27.129 82.812 27.527 84.289 28.188 85.656 c 28.758 86.801 29.566
 87.859 30.727 88.625 c 31.867 89.387 33.523 90 36 90 c 38.477 90 40.133
 89.387 41.273 88.625 c 42.43 87.855 43.242 86.801 43.816 85.656 c 44.516
 84.211 44.918 82.641 45 81.035 c 45 45.266 l 42.754 45.672 40.594 46.461
 38.617 47.605 c 37.375 48.316 36.207 49.156 35.137 50.105 c 35.113 50.129
 l 35.113 50.129 33.898 51 33 51 c 32.102 51 30.887 50.129 30.887 50.129
 c 30.863 50.105 l 29.793 49.156 28.625 48.316 27.383 47.605 c 24.535 45.938
 21.301 45.039 18 45 c 14.172 45 10.938 46.277 8.617 47.605 c 7.375 48.316
 6.207 49.156 5.137 50.105 c 5.113 50.129 l 5.113 50.129 3.898 51 3 51 c
 0 51 0 48 0 48 c 0 25.32 20.25 7.43 45 6.086 c 45 3 l 45 1.344 46.344 0
 48 0 c 39.461 12.738 m 22.465 15.738 9.52 27.484 6.617 41.863 c 10.125 
40.004 14.031 39.023 18 39 c 22.836 39 26.879 40.5 29.773 42.066 c 29.875
 37.281 30.57 32.531 31.836 27.918 c 33.289 22.711 35.676 17.328 39.461 
12.738 c 35.77 42.316 m 35.773 42.316 l 39.496 40.18 43.707 39.035 48 39
 c 52.293 39.035 56.504 40.18 60.227 42.316 c 60.145 38 59.527 33.707 58.387
 29.539 c 56.605 23.148 53.387 16.98 48 12.703 c 42.613 16.977 39.395 23.145
 37.613 29.527 c 36.473 33.695 35.855 37.988 35.773 42.312 c h
56.531 12.738 m 60.316 17.328 62.711 22.711 64.164 27.918 c 65.562 32.914
 66.133 37.879 66.227 42.066 c 69.836 40.086 73.883 39.031 78 39 c 82.621
 39 86.52 40.379 89.383 41.863 c 86.48 27.488 73.535 15.734 56.539 12.738
 c h
56.531 12.738 m f
Q Q
showpage
%%Trailer
%%EOF
