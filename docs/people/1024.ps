%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
720 672 m 720 672 768 672 768 624 c 768 576 720 432 528 432 c 336 432 288
 576 288 624 c 288 672 336 672 336 672 c h
337.055 624 m 336 623.809 l 336.047 611.137 344.016 574.367 372.48 541.25
 c 398.977 510.191 445.535 480 528 480 c 610.414 480 656.977 510.238 683.52
 541.246 c 711.984 574.367 719.902 611.184 720 623.805 c 719.617 623.902
 l 718.945 624 l h
528 336 m 562.297 336 593.988 317.703 611.137 288 c 628.289 258.297 628.289
 221.703 611.137 192 c 593.988 162.297 562.297 144 528 144 c 493.703 144
 462.012 162.297 444.863 192 c 427.711 221.703 427.711 258.297 444.863 288
 c 462.012 317.703 493.703 336 528 336 c 672 240 m 672 291.445 644.555 338.984
 600 364.707 c 555.445 390.43 500.555 390.43 456 364.707 c 411.445 338.984
 384 291.445 384 240 c 384 188.555 411.445 141.016 456 115.293 c 500.555
 89.57 555.445 89.57 600 115.293 c 644.555 141.016 672 188.555 672 240 c
 332.93 445.441 m 313.715 439.438 293.93 435.461 273.887 433.586 c 262.625
 432.484 251.316 431.957 240 432 c 48 432 0 576 0 624 c 0 656 16 672 48 
672 c 250.367 672 l 243.254 657.016 239.707 640.586 240 624 c 240 575.52
 258.098 525.984 292.32 484.609 c 303.984 470.496 317.566 457.297 332.93
 445.441 c 236.16 480 m 207.77 522.695 192.426 572.73 192 624 c 48 624 l
 48 611.52 55.871 574.559 84.48 541.246 c 110.641 510.719 156.098 480.957
 236.16 480.047 c h
72 264 m 72 212.555 99.445 165.016 144 139.293 c 188.555 113.57 243.445
 113.57 288 139.293 c 332.555 165.016 360 212.555 360 264 c 360 315.445 
332.555 362.984 288 388.707 c 243.445 414.43 188.555 414.43 144 388.707 
c 99.445 362.984 72 315.445 72 264 c 216 168 m 181.703 168 150.012 186.297
 132.863 216 c 115.711 245.703 115.711 282.297 132.863 312 c 150.012 341.703
 181.703 360 216 360 c 250.297 360 281.988 341.703 299.137 312 c 316.289
 282.297 316.289 245.703 299.137 216 c 281.988 186.297 250.297 168 216 168
 c f
Q Q
showpage
%%Trailer
%%EOF
