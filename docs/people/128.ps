%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 12 96 84
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 12 96 84
96 96 cairo_set_page_size
%%EndPageSetup
q 0 12 96 72 rectclip
1 0 0 -1 0 96 cm q
0 g
90 84 m 90 84 96 84 96 78 c 96 72 90 54 66 54 c 42 54 36 72 36 78 c 36 
84 42 84 42 84 c h
42.133 78 m 42 77.977 l 42.008 76.391 43.004 71.797 46.559 67.656 c 49.871
 63.773 55.691 60 66 60 c 76.301 60 82.121 63.781 85.441 67.656 c 89 71.797
 89.988 76.398 90 77.977 c 89.953 77.988 l 89.867 78 l h
66 42 m 72.629 42 78 36.629 78 30 c 78 23.371 72.629 18 66 18 c 59.371 
18 54 23.371 54 30 c 54 36.629 59.371 42 66 42 c 84 30 m 84 36.43 80.57 
42.375 75 45.59 c 69.43 48.805 62.57 48.805 57 45.59 c 51.43 42.375 48 36.43
 48 30 c 48 23.57 51.43 17.625 57 14.41 c 62.57 11.195 69.43 11.195 75 14.41
 c 80.57 17.625 84 23.57 84 30 c 41.617 55.68 m 39.215 54.93 36.742 54.434
 34.234 54.199 c 32.828 54.062 31.414 53.996 30 54 c 6 54 0 72 0 78 c 0 
82 2 84 6 84 c 31.297 84 l 30.406 82.125 29.965 80.074 30 78 c 30 71.941
 32.262 65.746 36.539 60.574 c 37.996 58.809 39.695 57.16 41.613 55.68 c
 29.52 60 m 25.973 65.336 24.055 71.59 24 78 c 6 78 l 6 76.441 6.984 71.82
 10.559 67.656 c 13.828 63.84 19.512 60.121 29.52 60.008 c h
9 33 m 9 26.57 12.43 20.625 18 17.41 c 23.57 14.195 30.43 14.195 36 17.41
 c 41.57 20.625 45 26.57 45 33 c 45 39.43 41.57 45.375 36 48.59 c 30.43 
51.805 23.57 51.805 18 48.59 c 12.43 45.375 9 39.43 9 33 c 27 21 m 20.371
 21 15 26.371 15 33 c 15 39.629 20.371 45 27 45 c 33.629 45 39 39.629 39
 33 c 39 26.371 33.629 21 27 21 c f
Q Q
showpage
%%Trailer
%%EOF
