%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 48 384 336
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 48 384 336
384 384 cairo_set_page_size
%%EndPageSetup
q 0 48 384 288 rectclip
1 0 0 -1 0 384 cm q
0 g
360 336 m 360 336 384 336 384 312 c 384 288 360 216 264 216 c 168 216 144
 288 144 312 c 144 336 168 336 168 336 c h
168.527 312 m 168 311.902 l 168.023 305.566 172.008 287.184 186.238 270.621
 c 199.488 255.098 222.77 240 264 240 c 305.207 240 328.488 255.121 341.762
 270.625 c 355.992 287.184 359.953 305.594 360 311.906 c 359.809 311.953
 l 359.473 312 l h
264 168 m 281.148 168 296.996 158.852 305.57 144 c 314.145 129.148 314.145
 110.852 305.57 96 c 296.996 81.148 281.148 72 264 72 c 246.852 72 231.004
 81.148 222.43 96 c 213.855 110.852 213.855 129.148 222.43 144 c 231.004
 158.852 246.852 168 264 168 c 336 120 m 336 145.723 322.277 169.492 300
 182.355 c 277.723 195.215 250.277 195.215 228 182.355 c 205.723 169.492
 192 145.723 192 120 c 192 94.277 205.723 70.508 228 57.645 c 250.277 44.785
 277.723 44.785 300 57.645 c 322.277 70.508 336 94.277 336 120 c 166.465
 222.719 m 156.859 219.719 146.965 217.73 136.945 216.793 c 131.312 216.242
 125.656 215.98 120 216 c 24 216 0 288 0 312 c 0 328 8 336 24 336 c 125.184
 336 l 121.629 328.508 119.852 320.293 120 312 c 120 287.762 129.047 262.992
 146.16 242.305 c 151.992 235.25 158.785 228.648 166.465 222.719 c 118.078
 240 m 103.883 261.348 96.211 286.363 96 312 c 24 312 l 24 305.762 27.938
 287.281 42.238 270.625 c 55.316 255.359 78.047 240.48 118.078 240.023 c
 h
36 132 m 36 106.277 49.723 82.508 72 69.645 c 94.277 56.785 121.723 56.785
 144 69.645 c 166.277 82.508 180 106.277 180 132 c 180 157.723 166.277 181.492
 144 194.355 c 121.723 207.215 94.277 207.215 72 194.355 c 49.723 181.492
 36 157.723 36 132 c 108 84 m 90.852 84 75.004 93.148 66.43 108 c 57.855
 122.852 57.855 141.148 66.43 156 c 75.004 170.852 90.852 180 108 180 c 
125.148 180 140.996 170.852 149.57 156 c 158.145 141.148 158.145 122.852
 149.57 108 c 140.996 93.148 125.148 84 108 84 c f
Q Q
showpage
%%Trailer
%%EOF
