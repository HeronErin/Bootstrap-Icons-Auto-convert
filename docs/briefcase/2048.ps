%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1248 rectclip
1 0 0 -1 0 1536 cm q
0 g
624 96 m 585.809 96 549.184 111.172 522.176 138.176 c 495.172 165.184 480
 201.809 480 240 c 480 288 l 144 288 l 105.809 288 69.184 303.172 42.176
 330.176 c 15.172 357.184 0 393.809 0 432 c 0 1200 l 0 1238.191 15.172 1274.816
 42.176 1301.824 c 69.184 1328.828 105.809 1344 144 1344 c 1392 1344 l 1430.191
 1344 1466.816 1328.828 1493.824 1301.824 c 1520.828 1274.816 1536 1238.191
 1536 1200 c 1536 432 l 1536 393.809 1520.828 357.184 1493.824 330.176 c
 1466.816 303.172 1430.191 288 1392 288 c 1056 288 l 1056 240 l 1056 201.809
 1040.828 165.184 1013.824 138.176 c 986.816 111.172 950.191 96 912 96 c
 h
624 192 m 912 192 l 924.73 192 936.938 197.059 945.941 206.059 c 954.941
 215.062 960 227.27 960 240 c 960 288 l 576 288 l 576 240 l 576 227.27 581.059
 215.062 590.059 206.059 c 599.062 197.059 611.27 192 624 192 c 805.055 
855.742 m 1440 686.496 l 1440 1200 l 1440 1212.73 1434.941 1224.938 1425.941
 1233.941 c 1416.938 1242.941 1404.73 1248 1392 1248 c 144 1248 l 131.27
 1248 119.062 1242.941 110.059 1233.941 c 101.059 1224.938 96 1212.73 96
 1200 c 96 686.398 l 730.945 855.742 l 755.227 862.211 780.773 862.211 805.055
 855.742 c 144 384 m 1392 384 l 1404.73 384 1416.938 389.059 1425.941 398.059
 c 1434.941 407.062 1440 419.27 1440 432 c 1440 587.137 l 780.383 763.008
 l 772.27 765.176 763.73 765.176 755.617 763.008 c 96 587.137 l 96 432 l
 96 419.27 101.059 407.062 110.059 398.059 c 119.062 389.059 131.27 384 
144 384 c f
Q Q
showpage
%%Trailer
%%EOF
