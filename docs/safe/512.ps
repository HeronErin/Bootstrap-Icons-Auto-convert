%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
24 36 m 24 26.453 27.793 17.297 34.543 10.543 c 41.297 3.793 50.453 0 60
 0 c 348 0 l 357.547 0 366.703 3.793 373.457 10.543 c 380.207 17.297 384
 26.453 384 36 c 384 348 l 384 357.547 380.207 366.703 373.457 373.457 c
 366.703 380.207 357.547 384 348 384 c 60 384 l 50.453 384 41.297 380.207
 34.543 373.457 c 27.793 366.703 24 357.547 24 348 c 24 312 l 12 312 l 5.371
 312 0 306.629 0 300 c 0 293.371 5.371 288 12 288 c 24 288 l 24 204 l 12
 204 l 5.371 204 0 198.629 0 192 c 0 185.371 5.371 180 12 180 c 24 180 l
 24 96 l 12 96 l 5.371 96 0 90.629 0 84 c 0 77.371 5.371 72 12 72 c 24 72
 l h
60 24 m 53.371 24 48 29.371 48 36 c 48 348 l 48 351.184 49.266 354.234 
51.516 356.484 c 53.766 358.734 56.816 360 60 360 c 348 360 l 351.184 360
 354.234 358.734 356.484 356.484 c 358.734 354.234 360 351.184 360 348 c
 360 36 l 360 32.816 358.734 29.766 356.484 27.516 c 354.234 25.266 351.184
 24 348 24 c h
60 24 m f
324 144 m 327.184 144 330.234 145.266 332.484 147.516 c 334.734 149.766
 336 152.816 336 156 c 336 228 l 336 234.629 330.629 240 324 240 c 317.371
 240 312 234.629 312 228 c 312 156 l 312 149.371 317.371 144 324 144 c 115.871
 107.137 m 118.125 104.879 121.18 103.609 124.367 103.609 c 127.555 103.609
 130.613 104.879 132.863 107.137 c 159.023 133.297 l 171.207 124.637 185.785
 119.984 200.734 119.984 c 215.684 119.984 230.262 124.637 242.449 133.297
 c 268.609 107.137 l 273.301 102.449 280.902 102.457 285.59 107.148 c 290.273
 111.84 290.27 119.441 285.574 124.129 c 259.414 150.289 l 277.176 175.176
 277.176 208.848 259.414 233.715 c 285.574 259.875 l 285.574 259.871 l 290.27
 264.559 290.273 272.16 285.59 276.852 c 280.902 281.543 273.301 281.551
 268.609 276.863 c 242.449 250.703 l 230.262 259.363 215.684 264.016 200.734
 264.016 c 185.785 264.016 171.207 259.363 159.023 250.703 c 132.863 276.863
 l 128.172 281.555 120.562 281.555 115.871 276.863 c 111.18 272.172 111.18
 264.562 115.871 259.871 c 142.031 233.711 l 133.371 221.527 128.719 206.949
 128.719 192 c 128.719 177.051 133.371 162.473 142.031 150.289 c 115.871
 124.129 l 113.613 121.875 112.348 118.82 112.348 115.633 c 112.348 112.445
 113.613 109.387 115.871 107.137 c 166.801 158.062 m 157.539 167.008 152.262
 179.297 152.148 192.172 c 152.035 205.047 157.102 217.426 166.203 226.531
 c 175.309 235.637 187.688 240.699 200.562 240.59 c 213.438 240.477 225.727
 235.195 234.672 225.938 c 246.449 213.742 250.918 196.246 246.438 179.898
 c 241.957 163.551 229.184 150.781 212.836 146.297 c 196.492 141.816 178.992
 146.289 166.801 158.062 c f
Q Q
showpage
%%Trailer
%%EOF
