%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:06 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 144 m 96 105.809 111.172 69.184 138.176 42.176 c 165.184 15.172 201.809
 0 240 0 c 1392 0 l 1430.191 0 1466.816 15.172 1493.824 42.176 c 1520.828
 69.184 1536 105.809 1536 144 c 1536 1392 l 1536 1430.191 1520.828 1466.816
 1493.824 1493.824 c 1466.816 1520.828 1430.191 1536 1392 1536 c 240 1536
 l 201.809 1536 165.184 1520.828 138.176 1493.824 c 111.172 1466.816 96 
1430.191 96 1392 c 96 1248 l 48 1248 l 30.852 1248 15.004 1238.852 6.43 
1224 c -2.145 1209.148 -2.145 1190.852 6.43 1176 c 15.004 1161.148 30.852
 1152 48 1152 c 96 1152 l 96 816 l 48 816 l 30.852 816 15.004 806.852 6.43
 792 c -2.145 777.148 -2.145 758.852 6.43 744 c 15.004 729.148 30.852 720
 48 720 c 96 720 l 96 384 l 48 384 l 30.852 384 15.004 374.852 6.43 360 
c -2.145 345.148 -2.145 326.852 6.43 312 c 15.004 297.148 30.852 288 48 
288 c 96 288 l h
240 96 m 227.27 96 215.062 101.059 206.059 110.059 c 197.059 119.062 192
 131.27 192 144 c 192 1392 l 192 1404.73 197.059 1416.938 206.059 1425.941
 c 215.062 1434.941 227.27 1440 240 1440 c 1392 1440 l 1404.73 1440 1416.938
 1434.941 1425.941 1425.941 c 1434.941 1416.938 1440 1404.73 1440 1392 c
 1440 144 l 1440 131.27 1434.941 119.062 1425.941 110.059 c 1416.938 101.059
 1404.73 96 1392 96 c h
240 96 m f
1296 576 m 1308.73 576 1320.938 581.059 1329.941 590.059 c 1338.941 599.062
 1344 611.27 1344 624 c 1344 912 l 1344 929.148 1334.852 944.996 1320 953.57
 c 1305.148 962.145 1286.852 962.145 1272 953.57 c 1257.148 944.996 1248
 929.148 1248 912 c 1248 624 l 1248 611.27 1253.059 599.062 1262.059 590.059
 c 1271.062 581.059 1283.27 576 1296 576 c 463.488 428.543 m 472.492 419.516
 484.719 414.441 497.473 414.441 c 510.223 414.441 522.449 419.516 531.457
 428.543 c 636.098 533.184 l 684.836 498.543 743.148 479.93 802.945 479.93
 c 862.738 479.93 921.055 498.543 969.793 533.184 c 1074.434 428.543 l 1086.574
 416.418 1104.262 411.695 1120.832 416.148 c 1137.402 420.598 1150.336 433.555
 1154.766 450.129 c 1159.195 466.707 1154.445 484.387 1142.305 496.512 c
 1037.664 601.152 l 1108.703 700.703 1108.703 835.391 1037.664 934.848 c
 1142.305 1039.488 l 1154.445 1051.613 1159.195 1069.293 1154.766 1085.871
 c 1150.336 1102.445 1137.402 1115.402 1120.832 1119.852 c 1104.262 1124.305
 1086.574 1119.582 1074.434 1107.457 c 969.793 1002.816 l 921.055 1037.457
 862.738 1056.07 802.945 1056.07 c 743.148 1056.07 684.836 1037.457 636.098
 1002.816 c 531.457 1107.457 l 519.316 1119.598 501.617 1124.34 485.031 
1119.895 c 468.449 1115.449 455.492 1102.496 451.051 1085.91 c 446.605 1069.324
 451.348 1051.629 463.488 1039.488 c 568.129 934.848 l 533.484 886.109 514.875
 827.797 514.875 768 c 514.875 708.203 533.484 649.891 568.129 601.152 c
 463.488 496.512 l 454.461 487.508 449.387 475.281 449.387 462.527 c 449.387
 449.777 454.461 437.551 463.488 428.543 c 667.199 632.258 m 642.688 655.934
 624.918 685.707 615.715 718.52 c 606.512 751.336 606.211 786.008 614.844
 818.977 c 623.473 851.945 640.723 882.027 664.82 906.125 c 688.918 930.223
 718.996 947.473 751.965 956.102 c 784.938 964.73 819.609 964.43 852.422
 955.23 c 885.238 946.027 915.012 928.258 938.688 903.742 c 973.664 867.531
 993.016 819.031 992.578 768.691 c 992.141 718.348 971.949 670.191 936.348
 634.594 c 900.75 598.996 852.594 578.805 802.254 578.367 c 751.91 577.93
 703.41 597.281 667.199 632.258 c f
Q Q
showpage
%%Trailer
%%EOF
