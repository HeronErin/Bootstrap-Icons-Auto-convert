%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
12 18 m 12 13.227 13.895 8.648 17.273 5.273 c 20.648 1.895 25.227 0 30 
0 c 174 0 l 178.773 0 183.352 1.895 186.727 5.273 c 190.105 8.648 192 13.227
 192 18 c 192 174 l 192 178.773 190.105 183.352 186.727 186.727 c 183.352
 190.105 178.773 192 174 192 c 30 192 l 25.227 192 20.648 190.105 17.273
 186.727 c 13.895 183.352 12 178.773 12 174 c 12 156 l 6 156 l 2.688 156
 0 153.312 0 150 c 0 146.688 2.688 144 6 144 c 12 144 l 12 102 l 6 102 l
 2.688 102 0 99.312 0 96 c 0 92.688 2.688 90 6 90 c 12 90 l 12 48 l 6 48
 l 2.688 48 0 45.312 0 42 c 0 38.688 2.688 36 6 36 c 12 36 l h
30 12 m 26.688 12 24 14.688 24 18 c 24 174 l 24 175.59 24.633 177.117 25.758
 178.242 c 26.883 179.367 28.41 180 30 180 c 174 180 l 175.59 180 177.117
 179.367 178.242 178.242 c 179.367 177.117 180 175.59 180 174 c 180 18 l
 180 16.41 179.367 14.883 178.242 13.758 c 177.117 12.633 175.59 12 174 
12 c h
30 12 m f
162 72 m 163.59 72 165.117 72.633 166.242 73.758 c 167.367 74.883 168 76.41
 168 78 c 168 114 l 168 117.312 165.312 120 162 120 c 158.688 120 156 117.312
 156 114 c 156 78 l 156 74.688 158.688 72 162 72 c 57.938 53.566 m 59.062
 52.441 60.59 51.805 62.184 51.805 c 63.777 51.805 65.305 52.441 66.434 
53.566 c 79.512 66.645 l 79.512 66.648 l 85.605 62.316 92.895 59.992 100.367
 59.992 c 107.844 59.992 115.133 62.316 121.223 66.648 c 134.305 53.566 
l 136.648 51.227 140.453 51.227 142.793 53.574 c 145.137 55.922 145.133 
59.723 142.789 62.062 c 129.711 75.141 l 138.59 87.586 138.59 104.422 129.711
 116.852 c 142.789 129.93 l 142.789 129.938 l 145.133 132.277 145.137 136.078
 142.793 138.426 c 140.453 140.773 136.648 140.773 134.305 138.434 c 121.223
 125.352 l 115.133 129.684 107.844 132.008 100.367 132.008 c 92.895 132.008
 85.605 129.684 79.512 125.352 c 66.434 138.43 l 66.434 138.434 l 64.086
 140.777 60.281 140.777 57.938 138.434 c 55.59 136.086 55.59 132.281 57.938
 129.938 c 71.016 116.859 l 71.016 116.855 l 66.688 110.762 64.359 103.473
 64.359 96 c 64.359 88.527 66.688 81.238 71.016 75.145 c 57.938 62.066 l
 57.938 62.062 l 56.809 60.938 56.172 59.41 56.172 57.816 c 56.172 56.223
 56.809 54.695 57.938 53.566 c 83.398 79.031 m 78.77 83.504 76.129 89.648
 76.074 96.086 c 76.02 102.523 78.551 108.715 83.102 113.266 c 87.656 117.816
 93.844 120.352 100.281 120.293 c 106.719 120.238 112.863 117.598 117.336
 112.969 c 123.223 106.871 125.461 98.121 123.219 89.949 c 120.977 81.777
 114.594 75.391 106.418 73.148 c 98.246 70.906 89.496 73.145 83.398 79.031
 c f
Q Q
showpage
%%Trailer
%%EOF
