%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:01 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.375 0.562 m 0.375 0.25 0.625 0 0.938 0 c 5.438 0 l 5.75 0 6 0.25 6 0.562
 c 6 5.438 l 6 5.75 5.75 6 5.438 6 c 0.938 6 l 0.625 6 0.375 5.75 0.375 
5.438 c 0.375 4.875 l 0.188 4.875 l -0.062 4.875 -0.062 4.5 0.188 4.5 c 
0.375 4.5 l 0.375 3.188 l 0.188 3.188 l -0.062 3.188 -0.062 2.812 0.188 
2.812 c 0.375 2.812 l 0.375 1.5 l 0.188 1.5 l -0.062 1.5 -0.062 1.125 0.188
 1.125 c 0.375 1.125 l h
0.938 0.375 m 0.832 0.375 0.75 0.457 0.75 0.562 c 0.75 5.438 l 0.75 5.543
 0.832 5.625 0.938 5.625 c 5.438 5.625 l 5.543 5.625 5.625 5.543 5.625 5.438
 c 5.625 0.562 l 5.625 0.457 5.543 0.375 5.438 0.375 c h
0.938 0.375 m f
5.062 2.25 m 5.168 2.25 5.25 2.332 5.25 2.438 c 5.25 3.562 l 5.25 3.812
 4.875 3.812 4.875 3.562 c 4.875 2.438 l 4.875 2.332 4.957 2.25 5.062 2.25
 c 1.809 1.676 m 1.883 1.602 2.004 1.602 2.074 1.676 c 2.484 2.086 l 2.484
 2.082 l 2.875 1.805 3.398 1.805 3.789 2.082 c 4.199 1.672 l 4.195 1.676
 l 4.375 1.496 4.641 1.762 4.461 1.941 c 4.051 2.352 l 4.328 2.742 4.328
 3.266 4.051 3.656 c 4.461 4.066 l 4.461 4.059 l 4.641 4.238 4.375 4.504
 4.195 4.324 c 3.785 3.914 l 3.789 3.918 l 3.398 4.195 2.875 4.195 2.484
 3.918 c 2.074 4.328 l 2.074 4.324 l 1.898 4.504 1.633 4.238 1.809 4.059
 c 2.219 3.648 l 2.219 3.652 l 1.941 3.262 1.941 2.738 2.219 2.348 c 1.809
 1.938 l 1.809 1.941 l 1.738 1.867 1.738 1.746 1.809 1.676 c 2.605 2.469
 m 2.461 2.609 2.379 2.801 2.379 3.004 c 2.375 3.203 2.453 3.398 2.598 3.539
 c 2.738 3.684 2.934 3.762 3.133 3.758 c 3.336 3.758 3.527 3.676 3.668 3.531
 c 3.949 3.234 3.945 2.77 3.656 2.48 c 3.367 2.191 2.902 2.184 2.605 2.469
 c f
Q Q
showpage
%%Trailer
%%EOF
