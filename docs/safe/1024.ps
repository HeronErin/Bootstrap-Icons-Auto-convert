%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
48 72 m 48 52.906 55.586 34.59 69.09 21.09 c 82.59 7.586 100.906 0 120 
0 c 696 0 l 715.094 0 733.41 7.586 746.91 21.09 c 760.414 34.59 768 52.906
 768 72 c 768 696 l 768 715.094 760.414 733.41 746.91 746.91 c 733.41 760.414
 715.094 768 696 768 c 120 768 l 100.906 768 82.59 760.414 69.09 746.91 
c 55.586 733.41 48 715.094 48 696 c 48 624 l 24 624 l 15.426 624 7.504 619.426
 3.215 612 c -1.07 604.574 -1.07 595.426 3.215 588 c 7.504 580.574 15.426
 576 24 576 c 48 576 l 48 408 l 24 408 l 15.426 408 7.504 403.426 3.215 
396 c -1.07 388.574 -1.07 379.426 3.215 372 c 7.504 364.574 15.426 360 24
 360 c 48 360 l 48 192 l 24 192 l 15.426 192 7.504 187.426 3.215 180 c -1.07
 172.574 -1.07 163.426 3.215 156 c 7.504 148.574 15.426 144 24 144 c 48 
144 l h
120 48 m 113.637 48 107.531 50.527 103.031 55.031 c 98.527 59.531 96 65.637
 96 72 c 96 696 l 96 702.363 98.527 708.469 103.031 712.969 c 107.531 717.473
 113.637 720 120 720 c 696 720 l 702.363 720 708.469 717.473 712.969 712.969
 c 717.473 708.469 720 702.363 720 696 c 720 72 l 720 65.637 717.473 59.531
 712.969 55.031 c 708.469 50.527 702.363 48 696 48 c h
120 48 m f
648 288 m 654.363 288 660.469 290.527 664.969 295.031 c 669.473 299.531
 672 305.637 672 312 c 672 456 l 672 464.574 667.426 472.496 660 476.785
 c 652.574 481.07 643.426 481.07 636 476.785 c 628.574 472.496 624 464.574
 624 456 c 624 312 l 624 305.637 626.527 299.531 631.031 295.031 c 635.531
 290.527 641.637 288 648 288 c 231.742 214.273 m 236.246 209.758 242.359
 207.223 248.734 207.223 c 255.113 207.223 261.227 209.758 265.727 214.273
 c 318.047 266.594 l 342.418 249.27 371.574 239.965 401.473 239.965 c 431.371
 239.965 460.527 249.27 484.895 266.594 c 537.215 214.273 l 543.285 208.211
 552.129 205.848 560.414 208.074 c 568.699 210.301 575.168 216.777 577.383
 225.066 c 579.598 233.355 577.223 242.195 571.152 248.258 c 518.832 300.578
 l 554.352 350.355 554.352 417.699 518.832 467.426 c 571.152 519.746 l 571.152
 519.742 l 577.223 525.805 579.598 534.645 577.383 542.934 c 575.168 551.223
 568.699 557.699 560.414 559.926 c 552.129 562.152 543.285 559.789 537.215
 553.727 c 484.895 501.406 l 460.527 518.73 431.371 528.035 401.473 528.035
 c 371.574 528.035 342.418 518.73 318.047 501.406 c 265.727 553.727 l 259.656
 559.797 250.809 562.168 242.516 559.949 c 234.223 557.727 227.746 551.25
 225.523 542.957 c 223.301 534.664 225.672 525.816 231.742 519.742 c 284.062
 467.422 l 284.062 467.426 l 266.742 443.055 257.438 413.898 257.438 384
 c 257.438 354.102 266.742 324.945 284.062 300.574 c 231.742 248.254 l 231.742
 248.258 l 227.23 243.754 224.691 237.641 224.691 231.266 c 224.691 224.887
 227.23 218.773 231.742 214.273 c 333.602 316.129 m 315.078 334.016 304.52
 358.598 304.297 384.344 c 304.07 410.094 314.203 434.855 332.41 453.062
 c 350.617 471.27 375.379 481.398 401.125 481.176 c 426.875 480.953 451.457
 470.395 469.344 451.871 c 492.895 427.488 501.84 392.488 492.875 359.797
 c 483.91 327.102 458.371 301.559 425.676 292.598 c 392.98 283.633 357.984
 292.578 333.602 316.129 c f
Q Q
showpage
%%Trailer
%%EOF
