%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
96 288 m 96 262.539 106.113 238.121 124.117 220.117 c 142.121 202.113 166.539
 192 192 192 c 1344 192 l 1369.461 192 1393.879 202.113 1411.883 220.117
 c 1429.887 238.121 1440 262.539 1440 288 c h
768 1056 m 818.922 1056 867.758 1035.773 903.766 999.766 c 939.773 963.758
 960 914.922 960 864 c 960 813.078 939.773 764.242 903.766 728.234 c 867.758
 692.227 818.922 672 768 672 c 717.078 672 668.242 692.227 632.234 728.234
 c 596.227 764.242 576 813.078 576 864 c 576 914.922 596.227 963.758 632.234
 999.766 c 668.242 1035.773 717.078 1056 768 1056 c f
0 480 m 0 454.539 10.113 430.121 28.117 412.117 c 46.121 394.113 70.539
 384 96 384 c 1440 384 l 1465.461 384 1489.879 394.113 1507.883 412.117 
c 1525.887 430.121 1536 454.539 1536 480 c 1536 1248 l 1536 1273.461 1525.887
 1297.879 1507.883 1315.883 c 1489.879 1333.887 1465.461 1344 1440 1344 
c 96 1344 l 70.539 1344 46.121 1333.887 28.117 1315.883 c 10.113 1297.879
 0 1273.461 0 1248 c h
288 480 m 288 513.703 279.129 546.812 262.277 576 c 245.426 605.188 221.188
 629.426 192 646.277 c 162.812 663.129 129.703 672 96 672 c 96 1056 l 129.703
 1056 162.812 1064.871 192 1081.723 c 221.188 1098.574 245.426 1122.812 
262.277 1152 c 279.129 1181.188 288 1214.297 288 1248 c 1248 1248 l 1248
 1197.078 1268.227 1148.242 1304.234 1112.234 c 1340.242 1076.227 1389.078
 1056 1440 1056 c 1440 672 l 1389.078 672 1340.242 651.773 1304.234 615.766
 c 1268.227 579.758 1248 530.922 1248 480 c h
288 480 m f
Q Q
showpage
%%Trailer
%%EOF
