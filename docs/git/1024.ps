%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
753.504 349.777 m 418.176 14.496 l 408.902 5.219 396.324 0.008 383.207 
0.008 c 370.09 0.008 357.512 5.219 348.238 14.496 c 278.637 84.098 l 366.957
 172.418 l 366.961 172.414 l 380.918 167.648 396.16 168.312 409.656 174.277
 c 423.148 180.238 433.898 191.059 439.773 204.59 c 445.648 218.121 446.215
 233.367 441.359 247.297 c 526.465 332.449 l 543.379 326.492 562.086 328.586
 577.266 338.137 c 592.445 347.688 602.43 363.648 604.379 381.473 c 606.332
 399.301 600.031 417.043 587.281 429.648 c 574.367 442.641 556.137 448.879
 537.969 446.523 c 519.801 444.164 503.77 433.48 494.598 417.621 c 485.426
 401.762 484.164 382.539 491.184 365.617 c 411.84 286.223 l 411.84 495.168
 l 428.043 503.188 439.66 518.211 443.348 535.914 c 447.031 553.613 442.375
 572.027 430.719 585.848 c 419.062 599.668 401.703 607.363 383.633 606.719
 c 365.566 606.074 348.797 597.16 338.156 582.539 c 327.516 567.922 324.184
 549.227 329.125 531.832 c 334.062 514.441 346.723 500.285 363.457 493.441
 c 363.457 282.574 l 348.941 276.629 337.402 265.133 331.398 250.641 c 325.398
 236.148 325.43 219.859 331.488 205.391 c 244.465 118.32 l 14.543 348.242
 l 14.543 348.238 l 5.266 357.512 0.055 370.09 0.055 383.207 c 0.055 396.324
 5.266 408.902 14.543 418.176 c 349.871 753.504 l 359.145 762.781 371.723
 767.992 384.84 767.992 c 397.957 767.992 410.535 762.781 419.809 753.504
 c 753.551 419.762 l 762.828 410.488 768.043 397.91 768.043 384.793 c 768.043
 371.676 762.828 359.098 753.551 349.824 c f
Q Q
showpage
%%Trailer
%%EOF
