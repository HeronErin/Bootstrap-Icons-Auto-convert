%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
376.754 174.887 m 209.09 7.246 l 204.453 2.609 198.164 0.004 191.605 0.004
 c 185.047 0.004 178.758 2.609 174.121 7.246 c 139.32 42.047 l 183.48 86.207
 l 190.461 83.824 198.082 84.156 204.828 87.137 c 211.574 90.117 216.949
 95.531 219.887 102.297 c 222.824 109.059 223.109 116.684 220.68 123.648
 c 263.23 166.223 l 271.688 163.246 281.043 164.293 288.633 169.07 c 296.223
 173.844 301.215 181.824 302.191 190.738 c 303.164 199.648 300.016 208.52
 293.641 214.824 c 287.184 221.32 278.066 224.441 268.984 223.262 c 259.902
 222.082 251.883 216.742 247.297 208.812 c 242.715 200.883 242.082 191.27
 245.594 182.809 c 205.922 143.113 l 205.922 247.586 l 214.023 251.594 219.832
 259.105 221.672 267.957 c 223.516 276.809 221.188 286.012 215.359 292.922
 c 209.531 299.832 200.852 303.684 191.816 303.359 c 182.781 303.035 174.398
 298.578 169.078 291.27 c 163.758 283.961 162.094 274.613 164.562 265.918
 c 167.031 257.219 173.359 250.141 181.727 246.719 c 181.727 141.289 l 174.473
 138.312 168.699 132.566 165.699 125.32 c 162.699 118.074 162.715 109.93
 165.742 102.695 c 122.23 59.16 l 7.27 174.121 l 7.273 174.121 l 2.633 178.758
 0.027 185.047 0.027 191.605 c 0.027 198.164 2.633 204.453 7.273 209.09 
c 174.938 376.754 l 179.57 381.391 185.863 383.996 192.422 383.996 c 198.977
 383.996 205.27 381.391 209.902 376.754 c 376.777 209.879 l 381.414 205.242
 384.02 198.953 384.02 192.395 c 384.02 185.836 381.414 179.547 376.777 
174.91 c f
Q Q
showpage
%%Trailer
%%EOF
