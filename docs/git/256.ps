%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
188.375 87.445 m 104.543 3.625 l 102.227 1.305 99.082 0 95.801 0 c 92.523
 0 89.379 1.305 87.059 3.625 c 69.66 21.023 l 91.738 43.102 l 91.738 43.105
 l 95.23 41.914 99.039 42.078 102.414 43.57 c 105.785 45.059 108.477 47.766
 109.945 51.148 c 111.414 54.531 111.555 58.344 110.34 61.824 c 131.617 
83.113 l 135.844 81.625 140.523 82.148 144.316 84.535 c 148.109 86.922 150.605
 90.91 151.094 95.367 c 151.582 99.824 150.008 104.262 146.82 107.41 c 143.59
 110.66 139.035 112.219 134.492 111.629 c 129.949 111.043 125.941 108.371
 123.648 104.406 c 121.355 100.441 121.043 95.633 122.797 91.402 c 102.961
 71.555 l 102.961 123.793 l 107.012 125.797 109.914 129.555 110.836 133.977
 c 111.758 138.402 110.594 143.008 107.68 146.461 c 104.766 149.918 100.426
 151.84 95.91 151.68 c 91.391 151.52 87.199 149.289 84.539 145.637 c 81.879
 141.98 81.047 137.305 82.281 132.957 c 83.516 128.609 86.68 125.07 90.863
 123.359 c 90.863 70.645 l 87.234 69.156 84.352 66.281 82.852 62.66 c 81.348
 59.039 81.355 54.965 82.871 51.348 c 61.117 29.578 l 3.637 87.059 l 1.316
 89.379 0.016 92.523 0.016 95.801 c 0.016 99.082 1.316 102.227 3.637 104.543
 c 87.469 188.375 l 89.785 190.695 92.93 192 96.211 192 c 99.488 192 102.633
 190.695 104.953 188.375 c 188.391 104.938 l 188.387 104.941 l 190.707 102.621
 192.012 99.477 192.012 96.199 c 192.012 92.918 190.707 89.773 188.387 87.457
 c f
Q Q
showpage
%%Trailer
%%EOF
