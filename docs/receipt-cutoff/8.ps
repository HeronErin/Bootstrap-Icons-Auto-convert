%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:35:18 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.125 1.688 m 1.125 1.582 1.207 1.5 1.312 1.5 c 3.562 1.5 l 3.812 1.5 3.812
 1.875 3.562 1.875 c 1.312 1.875 l 1.207 1.875 1.125 1.793 1.125 1.688 c
 1.125 2.438 m 1.125 2.332 1.207 2.25 1.312 2.25 c 3.562 2.25 l 3.812 2.25
 3.812 2.625 3.562 2.625 c 1.312 2.625 l 1.207 2.625 1.125 2.543 1.125 2.438
 c 1.125 3.188 m 1.125 3.082 1.207 3 1.312 3 c 3.562 3 l 3.812 3 3.812 3.375
 3.562 3.375 c 1.312 3.375 l 1.207 3.375 1.125 3.293 1.125 3.188 c 1.125
 3.938 m 1.125 3.832 1.207 3.75 1.312 3.75 c 3.562 3.75 l 3.812 3.75 3.812
 4.125 3.562 4.125 c 1.312 4.125 l 1.207 4.125 1.125 4.043 1.125 3.938 c
 1.125 4.688 m 1.125 4.582 1.207 4.5 1.312 4.5 c 3.562 4.5 l 3.812 4.5 3.812
 4.875 3.562 4.875 c 1.312 4.875 l 1.207 4.875 1.125 4.793 1.125 4.688 c
 4.312 1.5 m 4.062 1.5 4.062 1.875 4.312 1.875 c 4.688 1.875 l 4.938 1.875
 4.938 1.5 4.688 1.5 c h
4.312 2.25 m 4.062 2.25 4.062 2.625 4.312 2.625 c 4.688 2.625 l 4.938 2.625
 4.938 2.25 4.688 2.25 c h
4.312 3 m 4.062 3 4.062 3.375 4.312 3.375 c 4.688 3.375 l 4.938 3.375 4.938
 3 4.688 3 c h
4.312 3.75 m 4.062 3.75 4.062 4.125 4.312 4.125 c 4.688 4.125 l 4.938 4.125
 4.938 3.75 4.688 3.75 c h
4.312 4.5 m 4.062 4.5 4.062 4.875 4.312 4.875 c 4.688 4.875 l 4.938 4.875
 4.938 4.5 4.688 4.5 c h
4.312 4.5 m f
0.883 0.242 m 0.793 0.152 0.641 0.176 0.582 0.289 c 0.395 0.664 l 0.383
 0.691 0.375 0.723 0.375 0.75 c 0.375 5.625 l 0.188 5.625 l -0.062 5.625
 -0.062 6 0.188 6 c 5.812 6 l 6.062 6 6.062 5.625 5.812 5.625 c 5.625 5.625
 l 5.625 0.75 l 5.625 0.723 5.617 0.691 5.605 0.664 c 5.418 0.289 l 5.359
 0.176 5.207 0.152 5.117 0.242 c 4.875 0.484 l 4.633 0.242 l 4.559 0.168
 4.441 0.168 4.367 0.242 c 4.125 0.484 l 3.883 0.242 l 3.809 0.168 3.691
 0.168 3.617 0.242 c 3.375 0.484 l 3.133 0.242 l 3.059 0.168 2.941 0.168
 2.867 0.242 c 2.625 0.484 l 2.383 0.242 l 2.309 0.168 2.191 0.168 2.117
 0.242 c 1.875 0.484 l 1.633 0.242 l 1.559 0.168 1.441 0.168 1.367 0.242
 c 1.125 0.484 l h
0.801 0.691 m 0.992 0.883 l 1.066 0.957 1.184 0.957 1.258 0.883 c 1.5 0.641
 l 1.742 0.883 l 1.816 0.957 1.934 0.957 2.008 0.883 c 2.25 0.641 l 2.492
 0.883 l 2.566 0.957 2.684 0.957 2.758 0.883 c 3 0.641 l 3.242 0.883 l 3.316
 0.957 3.434 0.957 3.508 0.883 c 3.75 0.641 l 3.992 0.883 l 4.066 0.957 
4.184 0.957 4.258 0.883 c 4.5 0.641 l 4.742 0.883 l 4.816 0.957 4.934 0.957
 5.008 0.883 c 5.199 0.691 l 5.25 0.793 l 5.25 5.625 l 0.75 5.625 l 0.75
 0.793 l h
0.801 0.691 m f
Q Q
showpage
%%Trailer
%%EOF
