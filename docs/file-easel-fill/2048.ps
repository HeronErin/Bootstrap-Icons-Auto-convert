%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:21 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 624 m 480 611.27 485.059 599.062 494.059 590.059 c 503.062 581.059 
515.27 576 528 576 c 1008 576 l 1020.73 576 1032.938 581.059 1041.941 590.059
 c 1050.941 599.062 1056 611.27 1056 624 c 1056 816 l 1056 828.73 1050.941
 840.938 1041.941 849.941 c 1032.938 858.941 1020.73 864 1008 864 c 528 
864 l 515.27 864 503.062 858.941 494.059 849.941 c 485.059 840.938 480 828.73
 480 816 c h
480 624 m f
1152 0 m 384 0 l 333.078 0 284.242 20.227 248.234 56.234 c 212.227 92.242
 192 141.078 192 192 c 192 1344 l 192 1377.703 200.871 1410.812 217.723 
1440 c 234.574 1469.188 258.812 1493.426 288 1510.277 c 317.188 1527.129
 350.297 1536 384 1536 c 1152 1536 l 1185.703 1536 1218.812 1527.129 1248
 1510.277 c 1277.188 1493.426 1301.426 1469.188 1318.277 1440 c 1335.129
 1410.812 1344 1377.703 1344 1344 c 1344 192 l 1344 158.297 1335.129 125.188
 1318.277 96 c 1301.426 66.812 1277.188 42.574 1248 25.723 c 1218.812 8.871
 1185.703 0 1152 0 c 816 480 m 1008 480 l 1046.191 480 1082.816 495.172 
1109.824 522.176 c 1136.828 549.184 1152 585.809 1152 624 c 1152 816 l 1152
 854.191 1136.828 890.816 1109.824 917.824 c 1082.816 944.828 1046.191 960
 1008 960 c 962.594 960 l 1005.504 1088.832 l 1010.184 1104.879 1006.18 
1122.207 994.934 1134.57 c 983.684 1146.938 966.812 1152.559 950.398 1149.414
 c 933.98 1146.273 920.379 1134.812 914.496 1119.168 c 861.406 960 l 816
 960 l 816 1056 l 816 1073.148 806.852 1088.996 792 1097.57 c 777.148 1106.145
 758.852 1106.145 744 1097.57 c 729.148 1088.996 720 1073.148 720 1056 c
 720 960 l 674.594 960 l 621.504 1119.168 l 617.852 1131.691 609.258 1142.191
 597.699 1148.246 c 586.145 1154.301 572.621 1155.391 560.246 1151.266 c
 547.867 1147.141 537.703 1138.152 532.094 1126.375 c 526.48 1114.598 525.902
 1101.043 530.496 1088.832 c 573.406 960 l 528 960 l 489.809 960 453.184
 944.828 426.176 917.824 c 399.172 890.816 384 854.191 384 816 c 384 624
 l 384 585.809 399.172 549.184 426.176 522.176 c 453.184 495.172 489.809
 480 528 480 c 720 480 l 720 462.852 729.148 447.004 744 438.43 c 758.852
 429.855 777.148 429.855 792 438.43 c 806.852 447.004 816 462.852 816 480
 c f
Q Q
showpage
%%Trailer
%%EOF
