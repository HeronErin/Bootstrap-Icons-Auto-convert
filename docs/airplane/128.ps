%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
38.566 6.906 m 40.246 3.547 43.277 0 48 0 c 52.723 0 55.754 3.551 57.434
 6.906 c 59.164 10.379 60 14.586 60 18 c 60 40.145 l 91.02 55.656 l 94.07
 57.18 96 60.297 96 63.707 c 96 72 l 96 72.883 95.613 73.719 94.938 74.289
 c 94.266 74.859 93.379 75.102 92.508 74.957 c 59.465 69.449 l 57.215 82.969
 l 65.121 90.875 l 65.125 90.875 l 65.984 91.734 66.242 93.027 65.777 94.148
 c 65.312 95.27 64.215 96.004 63 96 c 33 96 l 31.785 96.004 30.688 95.27
 30.223 94.148 c 29.758 93.027 30.016 91.734 30.875 90.875 c 38.789 82.969
 l 36.531 69.449 l 3.488 74.957 l 3.492 74.957 l 2.621 75.102 1.734 74.859
 1.062 74.289 c 0.387 73.719 0 72.883 0 72 c 0 63.707 l 0 60.297 1.93 57.18
 4.98 55.656 c 36 40.145 l 36 18 l 36 14.594 36.84 10.375 38.566 6.906 c
 43.93 9.594 m 42.664 12.121 42 15.414 42 18 c 42 42 l 42 43.137 41.359 
44.172 40.344 44.684 c 7.656 61.027 l 6.641 61.535 6 62.574 6 63.707 c 6
 68.461 l 38.508 63.043 l 40.141 62.77 41.684 63.871 41.957 65.504 c 44.957
 83.504 l 45.121 84.461 44.805 85.438 44.117 86.125 c 40.246 90 l 55.762
 90 l 51.879 86.125 l 51.883 86.125 l 51.195 85.438 50.883 84.465 51.043
 83.508 c 54.043 65.508 l 54.172 64.723 54.609 64.02 55.258 63.559 c 55.906
 63.098 56.711 62.91 57.496 63.043 c 90 68.461 l 90 63.707 l 90 62.574 89.359
 61.535 88.344 61.027 c 55.656 44.684 l 54.641 44.172 54 43.137 54 42 c 
54 18 l 54 15.406 53.34 12.125 52.066 9.594 c 50.746 6.953 49.277 6 48 6
 c 46.723 6 45.254 6.949 43.934 9.594 c f
Q Q
showpage
%%Trailer
%%EOF
