%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
4.82 0.863 m 5.031 0.441 5.41 0 6 0 c 6.59 0 6.969 0.445 7.18 0.863 c 7.395
 1.297 7.5 1.824 7.5 2.25 c 7.5 5.02 l 11.379 6.957 l 11.758 7.148 12 7.539
 12 7.965 c 12 9 l 12 9.109 11.953 9.215 11.867 9.285 c 11.785 9.355 11.672
 9.387 11.562 9.371 c 7.434 8.684 l 7.152 10.375 l 8.141 11.363 l 8.141 
11.359 l 8.246 11.465 8.281 11.629 8.223 11.77 c 8.164 11.91 8.027 12 7.875
 12 c 4.125 12 l 3.973 12 3.836 11.91 3.777 11.77 c 3.719 11.629 3.754 11.465
 3.859 11.359 c 4.848 10.371 l 4.566 8.68 l 0.438 9.367 l 0.438 9.371 l 
0.328 9.387 0.215 9.355 0.133 9.285 c 0.047 9.215 0 9.109 0 9 c 0 7.965 
l 0 7.539 0.242 7.148 0.621 6.957 c 4.5 5.02 l 4.5 2.25 l 4.5 1.824 4.605
 1.297 4.82 0.863 c 5.492 1.199 m 5.332 1.516 5.25 1.926 5.25 2.25 c 5.25
 5.25 l 5.25 5.391 5.168 5.523 5.043 5.586 c 0.957 7.629 l 0.832 7.691 0.75
 7.82 0.75 7.965 c 0.75 8.559 l 4.812 7.883 l 4.812 7.879 l 5.016 7.848 
5.211 7.984 5.246 8.188 c 5.621 10.438 l 5.641 10.559 5.602 10.68 5.516 
10.766 c 5.031 11.25 l 6.973 11.25 l 6.488 10.766 l 6.484 10.766 l 6.398
 10.68 6.359 10.559 6.379 10.438 c 6.754 8.188 l 6.773 8.09 6.828 8.004 
6.906 7.945 c 6.988 7.887 7.09 7.863 7.188 7.879 c 11.25 8.559 l 11.25 7.965
 l 11.25 7.82 11.168 7.691 11.043 7.629 c 6.957 5.586 l 6.832 5.523 6.75
 5.391 6.75 5.25 c 6.75 2.25 l 6.75 1.926 6.668 1.516 6.508 1.199 c 6.344
 0.871 6.16 0.75 6 0.75 c 5.84 0.75 5.656 0.867 5.492 1.199 c f
Q Q
showpage
%%Trailer
%%EOF
