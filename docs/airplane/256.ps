%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
77.137 13.812 m 80.496 7.094 86.555 0 96 0 c 105.445 0 111.504 7.105 114.863
 13.812 c 118.332 20.762 120 29.172 120 36 c 120 80.293 l 182.039 111.312
 l 185.031 112.805 187.551 115.105 189.309 117.949 c 191.066 120.793 192
 124.07 192 127.414 c 192 144 l 192 145.762 191.223 147.438 189.879 148.574
 c 188.531 149.715 186.754 150.207 185.016 149.914 c 118.93 138.898 l 114.43
 165.934 l 130.246 181.75 l 130.246 181.754 l 131.969 183.469 132.484 186.051
 131.555 188.297 c 130.621 190.543 128.43 192.004 126 192 c 66 192 l 63.57
 192.004 61.379 190.543 60.445 188.297 c 59.516 186.051 60.031 183.469 61.754
 181.754 c 77.582 165.938 l 73.07 138.902 l 6.984 149.918 l 6.984 149.914
 l 5.246 150.207 3.469 149.715 2.121 148.574 c 0.777 147.438 0 145.762 0
 144 c 0 127.414 l 0 124.07 0.934 120.793 2.691 117.949 c 4.449 115.105 
6.969 112.805 9.961 111.312 c 72 80.293 l 72 36 l 72 29.184 73.68 20.746
 77.137 13.812 c 87.863 19.188 m 85.332 24.238 84 30.828 84 36 c 84 84 l
 84 86.27 82.719 88.348 80.688 89.363 c 15.312 122.051 l 13.281 123.07 12
 125.145 12 127.414 c 12 136.918 l 77.016 126.082 l 77.016 126.086 l 80.277
 125.543 83.367 127.742 83.914 131.004 c 89.914 167.004 l 90.238 168.922
 89.613 170.875 88.234 172.246 c 80.496 180 l 111.527 180 l 103.762 172.246
 l 103.766 172.246 l 102.391 170.879 101.766 168.93 102.086 167.016 c 108.086
 131.016 l 108.344 129.445 109.223 128.043 110.516 127.117 c 111.812 126.191
 113.426 125.82 114.996 126.086 c 180 136.922 l 180 127.414 l 180 125.145
 178.719 123.07 176.688 122.051 c 111.312 89.363 l 109.281 88.348 108 86.27
 108 84 c 108 36 l 108 30.816 106.68 24.254 104.137 19.188 c 101.496 13.906
 98.555 12 96 12 c 93.445 12 90.504 13.895 87.863 19.188 c f
Q Q
showpage
%%Trailer
%%EOF
