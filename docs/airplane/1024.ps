%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:34 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
308.543 55.246 m 321.984 28.367 346.223 0 384 0 c 421.777 0 446.016 28.414
 459.457 55.246 c 473.328 83.039 480 116.688 480 144 c 480 321.168 l 728.16
 445.246 l 740.129 451.223 750.199 460.418 757.234 471.793 c 764.273 483.172
 768 496.285 768 509.664 c 768 576 l 767.996 583.051 764.895 589.746 759.512
 594.301 c 754.133 598.859 747.02 600.82 740.062 599.664 c 475.727 555.602
 l 457.727 663.746 l 520.992 727.012 l 520.992 727.008 l 525.504 731.508
 528.043 737.621 528.043 743.992 c 528.043 750.367 525.512 756.48 521 760.984
 c 516.488 765.488 510.375 768.012 504 768 c 264 768 l 257.625 768.012 251.512
 765.488 247 760.984 c 242.488 756.48 239.957 750.367 239.957 743.992 c 
239.957 737.621 242.496 731.508 247.008 727.008 c 310.32 663.742 l 292.273
 555.598 l 27.938 599.66 l 27.938 599.664 l 20.98 600.82 13.867 598.859 
8.488 594.301 c 3.105 589.746 0.004 583.051 0 576 c 0 509.664 l 0 496.285
 3.727 483.172 10.766 471.793 c 17.801 460.418 27.871 451.223 39.84 445.246
 c 288 321.168 l 288 144 l 288 116.734 294.719 82.992 308.543 55.246 c 351.453
 76.75 m 341.328 96.961 336 123.312 336 144 c 336 336 l 336 340.453 334.762
 344.82 332.422 348.609 c 330.082 352.398 326.734 355.461 322.754 357.457
 c 61.25 488.211 l 61.246 488.207 l 57.266 490.203 53.918 493.266 51.578
 497.055 c 49.238 500.844 48 505.211 48 509.664 c 48 547.68 l 308.062 504.336
 l 314.332 503.293 320.758 504.781 325.934 508.469 c 331.105 512.16 334.605
 517.75 335.664 524.016 c 359.664 668.016 l 360.953 675.684 358.449 683.5
 352.945 688.992 c 321.984 720 l 446.113 720 l 415.059 688.992 l 415.055
 688.992 l 409.566 683.512 407.062 675.715 408.336 668.062 c 432.336 524.062
 l 433.383 517.781 436.883 512.168 442.07 508.469 c 447.258 504.77 453.699
 503.281 459.984 504.336 c 720 547.68 l 720 509.664 l 720 505.211 718.762
 500.844 716.422 497.055 c 714.082 493.266 710.734 490.203 706.754 488.207
 c 445.246 357.457 l 441.266 355.461 437.918 352.398 435.578 348.609 c 433.238
 344.82 432 340.453 432 336 c 432 144 l 432 123.266 426.719 97.008 416.543
 76.754 c 405.984 55.633 394.223 48 384 48 c 373.777 48 362.016 55.586 351.457
 76.754 c f
Q Q
showpage
%%Trailer
%%EOF
