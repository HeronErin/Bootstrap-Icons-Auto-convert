%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 1 87 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 1 87 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 1 75 95 rectclip
1 0 0 -1 0 96 cm q
0 g
53.184 94.043 m 47.449 95.484 42.125 91.141 41.734 85.523 c 41.301 79.223
 40.355 73.434 39.168 69.984 c 38.418 67.824 36.293 63.914 32.93 60.156 
c 29.586 56.414 25.238 53.082 20.145 51.695 c 16.109 50.594 12 47.102 12
 42 c 12 18 l 12 12.93 16.094 9.215 20.688 8.723 c 27.109 8.043 30.07 6.234
 33.094 4.383 c 33.383 4.207 l 35.016 3.211 36.852 2.113 39.203 1.305 c 
41.586 0.48 44.371 0 48 0 c 69 0 l 74.621 0 78.594 2.867 80.605 6.383 c 
81.59 8.105 82.129 10.023 82.129 11.859 c 82.129 12.77 81.992 13.73 81.668
 14.645 c 82.875 16.215 83.949 18.105 84.598 20.043 c 85.258 22.023 85.629
 24.613 84.621 26.941 c 85.035 27.723 85.34 28.551 85.574 29.359 c 86.035
 30.98 86.254 32.762 86.254 34.496 c 86.254 36.23 86.039 38.012 85.574 39.633
 c 85.363 40.352 85.094 41.098 84.746 41.812 c 87.109 45.238 87.254 49.012
 86.148 52.211 c 84.914 55.762 82.055 58.812 78.949 59.844 c 73.867 61.543
 68.133 61.5 63.852 61.109 c 62.965 61.031 62.078 60.93 61.195 60.809 c 
63.277 69.727 63.148 79.016 60.82 87.871 c 59.992 90.918 57.52 92.961 54.75
 93.656 c h
69 6 m 48 6 l 44.941 6 42.82 6.406 41.16 6.977 c 39.473 7.559 38.125 8.352
 36.504 9.336 c 36.266 9.484 l 32.938 11.512 29.078 13.863 21.324 14.691
 c 19.328 14.902 18 16.43 18 17.992 c 18 42 l 18 43.531 19.355 45.258 21.719
 45.898 c 28.289 47.699 33.582 51.879 37.402 56.152 c 41.211 60.414 43.785
 65.004 44.832 68.016 c 46.289 72.215 47.273 78.625 47.723 85.117 c 47.871
 87.289 49.883 88.688 51.727 88.227 c 53.297 87.836 l 54.258 87.598 54.844
 86.973 55.023 86.305 c 55.027 86.305 l 57.477 76.965 57.176 67.117 54.156
 57.949 c 53.812 56.91 54.059 55.766 54.801 54.965 c 55.543 54.16 56.664
 53.828 57.727 54.09 c 57.746 54.09 l 57.832 54.113 l 58.18 54.191 l 58.176
 54.191 l 60.227 54.625 62.305 54.941 64.391 55.133 c 68.367 55.492 73.133
 55.457 77.051 54.156 c 78.102 53.801 79.75 52.352 80.473 50.25 c 81.113
 48.402 80.996 46.23 78.875 44.125 c 76.758 42 l 78.875 39.875 l 79.133 
39.621 79.504 39.035 79.801 37.984 c 80.09 36.98 80.25 35.766 80.25 34.5
 c 80.25 33.234 80.09 32.016 79.801 31.016 c 79.5 29.973 79.137 29.379 78.875
 29.125 c 76.758 27 l 78.875 24.875 l 79.156 24.594 79.527 23.82 78.906 
21.945 c 78.906 21.949 l 78.258 20.137 77.227 18.492 75.875 17.125 c 73.758
 15 l 75.875 12.875 l 75.91 12.844 76.121 12.574 76.121 11.855 c 76.086 
10.98 75.836 10.125 75.395 9.367 c 74.398 7.633 72.379 6 69 6 c f
Q Q
showpage
%%Trailer
%%EOF
