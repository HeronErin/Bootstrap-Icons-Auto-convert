%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:52 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 44 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 44 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 38 48 rectclip
1 0 0 -1 0 48 cm q
0 g
26.594 47.023 m 23.727 47.742 21.066 45.57 20.871 42.762 c 20.656 39.613
 20.18 36.715 19.586 34.992 c 19.211 33.914 18.148 31.957 16.465 30.078 
c 14.793 28.207 12.617 26.543 10.07 25.848 c 8.055 25.297 6 23.551 6 21 
c 6 9 l 6 6.465 8.047 4.609 10.344 4.363 c 13.555 4.023 15.035 3.117 16.547
 2.195 c 16.691 2.109 l 17.508 1.613 18.426 1.062 19.602 0.656 c 20.793 
0.238 22.184 0 24 0 c 34.5 0 l 37.312 0 39.297 1.434 40.301 3.191 c 40.793
 4.051 41.062 5.012 41.062 5.93 c 41.062 6.387 40.992 6.867 40.832 7.32 
c 41.434 8.105 41.973 9.051 42.297 10.02 c 42.625 11.008 42.812 12.305 42.309
 13.469 c 42.516 13.859 42.668 14.273 42.785 14.68 c 43.016 15.488 43.125
 16.379 43.125 17.246 c 43.125 18.113 43.016 19.004 42.785 19.812 c 42.68
 20.172 42.547 20.543 42.371 20.902 c 43.555 22.617 43.625 24.504 43.074
 26.102 c 42.457 27.879 41.027 29.402 39.473 29.918 c 36.934 30.766 34.062
 30.746 31.926 30.551 c 31.926 30.555 l 31.48 30.516 31.039 30.465 30.598
 30.406 c 31.641 34.863 31.574 39.508 30.41 43.934 c 29.996 45.457 28.762
 46.477 27.375 46.824 c h
34.5 3 m 24 3 l 22.469 3 21.41 3.203 20.578 3.488 c 19.734 3.777 19.059
 4.176 18.25 4.668 c 18.129 4.742 l 16.465 5.758 14.535 6.934 10.66 7.348
 c 9.66 7.453 9 8.219 9 8.996 c 9 21 l 9 21.766 9.68 22.629 10.859 22.949
 c 14.145 23.848 16.789 25.941 18.703 28.078 c 20.609 30.207 21.895 32.504
 22.418 34.008 c 23.148 36.109 23.641 39.312 23.863 42.559 c 23.938 43.645
 24.941 44.344 25.863 44.113 c 26.648 43.918 l 27.129 43.797 27.422 43.484
 27.512 43.152 c 28.738 38.484 28.586 33.559 27.078 28.973 c 26.906 28.453
 27.027 27.883 27.402 27.48 c 27.773 27.082 28.332 26.914 28.863 27.047 
c 28.871 27.047 l 28.914 27.059 l 29.09 27.098 l 30.113 27.312 31.152 27.469
 32.195 27.566 c 34.184 27.746 36.566 27.727 38.523 27.078 c 39.047 26.902
 39.875 26.176 40.234 25.125 c 40.555 24.199 40.496 23.113 39.438 22.062
 c 38.379 21 l 39.438 19.938 l 39.566 19.812 39.754 19.516 39.898 18.992
 c 40.043 18.492 40.125 17.883 40.125 17.25 c 40.125 16.617 40.043 16.008
 39.898 15.508 c 39.75 14.984 39.566 14.688 39.438 14.562 c 38.379 13.5 
l 39.438 12.438 l 39.578 12.297 39.766 11.91 39.453 10.973 c 39.129 10.07
 38.613 9.246 37.938 8.562 c 36.879 7.5 l 37.938 6.438 l 37.957 6.422 38.059
 6.289 38.059 5.926 c 38.062 5.93 l 38.043 5.488 37.918 5.062 37.699 4.684
 c 37.199 3.816 36.188 3 34.5 3 c f
Q Q
showpage
%%Trailer
%%EOF
