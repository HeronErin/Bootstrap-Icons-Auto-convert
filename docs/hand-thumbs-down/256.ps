%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 24 3 174 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 24 3 174 192
192 192 cairo_set_page_size
%%EndPageSetup
q 24 3 150 189 rectclip
1 0 0 -1 0 192 cm q
0 g
106.367 188.09 m 94.895 190.969 84.25 182.281 83.473 171.051 c 82.609 158.449
 80.711 146.871 78.336 139.973 c 76.836 135.652 72.59 127.828 65.855 120.316
 c 59.172 112.828 50.473 106.168 40.285 103.395 c 32.219 101.184 24 94.199
 24 84 c 24 36 l 24 25.859 32.184 18.434 41.375 17.449 c 54.215 16.094 60.145
 12.469 66.191 8.773 c 66.766 8.426 l 70.031 6.434 73.703 4.238 78.406 2.617
 c 83.172 0.961 88.738 0 96 0 c 138 0 l 149.242 0 157.188 5.734 161.207 
12.77 c 163.176 16.215 164.254 20.055 164.254 23.727 c 164.254 25.551 163.977
 27.469 163.328 29.293 c 165.738 32.438 167.887 36.219 169.184 40.094 c 
170.504 44.055 171.246 49.238 169.23 53.895 c 170.059 55.453 170.672 57.109
 171.137 58.73 c 172.062 61.969 172.492 65.535 172.492 69.004 c 172.492 
72.473 172.059 76.035 171.137 79.277 c 170.715 80.719 170.176 82.207 169.48
 83.633 c 174.207 90.484 174.496 98.031 172.289 104.43 c 169.816 111.535
 164.105 117.629 157.891 119.695 c 147.727 123.09 136.254 123.008 127.699
 122.227 c 127.703 122.219 l 125.93 122.059 124.156 121.859 122.387 121.621
 c 126.555 139.449 126.301 158.031 121.645 175.738 c 119.988 181.836 115.043
 185.914 109.5 187.305 c h
138 12 m 96 12 l 89.879 12 85.645 12.816 82.32 13.957 c 78.949 15.121 76.25
 16.703 73.008 18.672 c 72.527 18.973 l 65.867 23.027 58.152 27.734 42.648
 29.387 c 38.652 29.809 36 32.867 36 35.988 c 36 84 l 36 87.059 38.711 90.516
 43.441 91.801 c 56.582 95.402 67.164 103.766 74.809 112.309 c 82.43 120.828
 87.578 130.008 89.664 136.031 c 92.578 144.43 94.547 157.246 95.449 170.23
 c 95.75 174.574 99.77 177.371 103.453 176.445 c 106.598 175.664 l 108.52
 175.184 109.695 173.938 110.055 172.605 c 110.051 172.609 l 114.953 153.934
 114.352 134.234 108.312 115.895 c 107.621 113.82 108.117 111.535 109.602
 109.93 c 111.086 108.324 113.328 107.652 115.453 108.18 c 115.488 108.18
 l 115.656 108.227 l 116.352 108.383 l 120.457 109.254 124.605 109.883 128.785
 110.27 c 136.742 110.988 146.27 110.918 154.105 108.312 c 156.207 107.605
 159.504 104.699 160.945 100.5 c 162.23 96.805 161.988 92.461 157.754 88.246
 c 153.516 84 l 157.75 79.754 l 158.266 79.25 159.012 78.074 159.598 75.973
 c 160.172 73.969 160.496 71.531 160.496 69 c 160.496 66.469 160.172 64.031
 159.598 62.027 c 158.996 59.938 158.266 58.75 157.75 58.246 c 153.516 54
 l 157.75 49.754 l 158.312 49.191 159.059 47.641 157.809 43.898 c 157.812
 43.895 l 156.52 40.277 154.449 36.984 151.754 34.246 c 147.52 30 l 151.754
 25.754 l 151.824 25.695 152.246 25.152 152.246 23.715 c 152.242 23.711 
l 152.172 21.957 151.672 20.25 150.793 18.73 c 148.801 15.266 144.758 12
 138 12 c f
Q Q
showpage
%%Trailer
%%EOF
