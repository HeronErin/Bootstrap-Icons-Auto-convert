%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 380
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 380
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 380 rectclip
1 0 0 -1 0 384 cm q
0 g
203.281 31.633 m 196.23 27.879 187.77 27.879 180.719 31.633 c 36.719 108.434
 l 32.879 110.477 29.668 113.527 27.43 117.254 c 25.188 120.984 24.004 125.25
 24 129.602 c 24 149.211 l 101.641 195.77 l 98.234 203.555 96.336 211.922
 96.047 220.414 c 24 177.215 l 24 314.809 l 107.496 264.719 l 111.082 271.344
 115.543 277.984 120.887 284.641 c 24.84 342.289 l 26.219 347.375 29.238
 351.863 33.422 355.062 c 37.609 358.266 42.73 360 48 360 c 336 360 l 341.27
 360 346.391 358.266 350.578 355.062 c 354.762 351.863 357.781 347.375 359.16
 342.289 c 263.113 284.664 l 268.457 277.977 272.922 271.328 276.504 264.719
 c 360 314.809 l 360 177.191 l 287.953 220.414 l 287.66 211.93 285.762 203.574
 282.359 195.793 c 360 149.207 l 360 129.602 l 359.996 125.25 358.812 120.984
 356.57 117.254 c 354.332 113.527 351.121 110.477 347.281 108.434 c h
169.441 10.441 m 183.555 2.914 200.492 2.914 214.609 10.441 c 358.609 87.242
 l 358.609 87.238 l 366.281 91.336 372.699 97.441 377.172 104.902 c 381.641
 112.363 384.004 120.902 384 129.602 c 384 336 l 384 348.73 378.941 360.938
 369.941 369.941 c 360.938 378.941 348.73 384 336 384 c 48 384 l 35.27 384
 23.062 378.941 14.059 369.941 c 5.059 360.938 0 348.73 0 336 c 0 129.602
 l 0 120.898 2.363 112.359 6.84 104.898 c 11.316 97.438 17.738 91.332 25.414
 87.238 c h
192 191.832 m 231.938 150.77 331.801 222.625 192 315 c 52.199 222.602 152.062
 150.77 192 191.832 c f*
Q Q
showpage
%%Trailer
%%EOF
