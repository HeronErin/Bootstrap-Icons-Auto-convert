%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
0.422 0.918 m 0.391 0.867 0.375 0.809 0.375 0.75 c 0.375 0.652 0.418 0.57
 0.473 0.512 c 0.527 0.453 0.594 0.402 0.664 0.367 c 0.809 0.289 1.008 0.223
 1.234 0.172 c 1.691 0.062 2.316 0 3 0 c 3.684 0 4.309 0.062 4.766 0.168
 c 4.992 0.219 5.191 0.285 5.336 0.363 c 5.41 0.402 5.477 0.449 5.527 0.508
 c 5.582 0.566 5.625 0.648 5.625 0.746 c 5.625 1.125 5.492 1.352 5.387 1.535
 c 5.344 1.609 l 5.344 1.613 l 5.289 1.707 5.25 1.812 5.227 1.918 c 5.207
 2.027 5.207 2.141 5.223 2.25 c 5.402 2.223 5.512 2.441 5.383 2.57 c 5.359
 2.594 5.332 2.617 5.301 2.645 c 5.379 3.062 5.332 3.391 5.188 3.66 c 5.02
 3.977 4.727 4.18 4.43 4.355 c 4.352 4.402 4.277 4.445 4.195 4.492 c 3.652
 4.805 3.098 5.125 2.793 5.883 c 2.801 5.883 l 2.754 5.992 2.617 6.035 2.52
 5.969 c 2.512 5.961 l 2.492 5.949 2.477 5.934 2.457 5.918 c 2.262 5.754
 2.109 5.539 2.016 5.297 c 1.957 5.145 1.926 4.977 1.922 4.812 c 1.891 4.777
 1.875 4.734 1.875 4.688 c 1.875 4.68 l 1.879 4.648 l 1.879 4.652 l 1.887
 4.598 1.91 4.547 1.949 4.508 c 1.984 4.324 2.051 4.129 2.164 3.918 c 2.016
 3.84 2.035 3.625 2.191 3.57 c 2.266 3.547 2.344 3.527 2.422 3.52 c 2.477
 3.445 l 2.582 3.312 2.629 3.207 2.641 3.121 c 2.652 3.043 2.637 2.961 2.598
 2.891 c 2.504 2.719 2.293 2.551 1.992 2.355 c 1.918 2.309 1.844 2.258 1.766
 2.207 c 1.723 2.18 l 1.719 2.18 l 1.562 2.145 1.406 2.102 1.254 2.055 c
 1.145 2.016 1.094 1.891 1.145 1.789 c 1.059 1.723 l 0.793 1.504 0.547 1.246
 0.422 0.918 c 1.16 1.312 m 1.203 1.352 1.246 1.391 1.293 1.43 c 1.469 1.574
 1.664 1.699 1.859 1.828 c 2.438 1.945 3.223 2.016 3.895 1.879 c 3.898 1.879
 l 4.145 1.828 4.219 2.195 3.973 2.246 c 3.516 2.336 3.02 2.344 2.562 2.305
 c 2.711 2.426 2.84 2.559 2.922 2.711 c 2.996 2.852 3.035 3.008 3.008 3.18
 c 2.988 3.305 2.941 3.426 2.863 3.551 c 2.945 3.57 l 2.949 3.57 l 3.129
 3.617 3.273 3.648 3.5 3.574 c 3.504 3.57 l 3.742 3.492 3.859 3.848 3.621
 3.93 c 3.289 4.039 3.059 3.984 2.863 3.934 c 2.859 3.934 l 2.781 3.91 2.699
 3.895 2.621 3.887 c 2.48 4.094 2.398 4.281 2.348 4.449 c 2.402 4.465 2.457
 4.492 2.523 4.523 c 2.523 4.52 l 2.613 4.566 2.652 4.68 2.605 4.773 c 2.559
 4.867 2.445 4.902 2.352 4.855 c 2.336 4.848 2.316 4.836 2.297 4.828 c 2.301
 4.957 2.328 5.07 2.363 5.164 c 2.414 5.301 2.492 5.414 2.562 5.496 c 2.934
 4.781 3.531 4.441 4.02 4.16 c 4.098 4.117 4.168 4.074 4.238 4.031 c 4.527
 3.855 4.742 3.699 4.859 3.48 c 4.938 3.332 4.984 3.145 4.957 2.875 c 4.586
 3.078 4.172 3.188 3.75 3.188 c 3.5 3.188 3.5 2.812 3.75 2.812 c 4.148 2.809
 4.543 2.695 4.883 2.484 c 4.879 2.473 l 4.828 2.219 4.828 2.02 4.859 1.848
 c 4.891 1.676 4.953 1.543 5.016 1.43 c 5.066 1.344 l 5.09 1.301 5.113 1.262
 5.133 1.223 c 5.023 1.262 4.898 1.297 4.766 1.328 c 4.309 1.438 3.684 1.5
 3 1.5 c 2.316 1.5 1.691 1.438 1.234 1.332 c 1.211 1.328 1.188 1.32 1.16
 1.312 c 5.238 0.75 m 5.211 0.727 5.184 0.711 5.156 0.695 c 5.055 0.641 
4.895 0.582 4.68 0.535 c 4.258 0.438 3.664 0.375 3 0.375 c 2.336 0.375 1.742
 0.438 1.32 0.535 c 1.105 0.582 0.949 0.641 0.844 0.695 c 0.816 0.711 0.789
 0.727 0.762 0.75 c 0.777 0.766 0.805 0.781 0.844 0.805 c 0.945 0.859 1.105
 0.918 1.32 0.965 c 1.742 1.062 2.336 1.125 3 1.125 c 3.664 1.125 4.258 
1.062 4.68 0.965 c 4.895 0.918 5.051 0.859 5.156 0.805 c 5.184 0.789 5.211
 0.773 5.238 0.75 c f
Q Q
showpage
%%Trailer
%%EOF
