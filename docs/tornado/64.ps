%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 3 0 45 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 3 0 45 48
48 48 cairo_set_page_size
%%EndPageSetup
q 3 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
3.375 7.352 m 3.133 6.941 3.004 6.477 3 6 c 3 5.219 3.348 4.578 3.773 4.098
 c 4.219 3.625 4.738 3.23 5.312 2.93 c 6.473 2.301 8.051 1.773 9.871 1.355
 c 13.543 0.512 18.539 0 24 0 c 29.465 0 34.457 0.512 38.129 1.355 c 39.949
 1.777 41.527 2.297 42.688 2.93 c 43.266 3.246 43.809 3.629 44.227 4.098
 c 44.648 4.578 45 5.219 45 6 c 45 9.031 43.949 10.836 43.098 12.305 c 42.75
 12.914 l 42.305 13.664 41.984 14.484 41.812 15.344 c 41.668 16.227 41.656
 17.129 41.777 18.016 c 42.418 17.918 43.051 18.242 43.344 18.824 c 43.637
 19.402 43.523 20.105 43.062 20.562 c 42.879 20.742 42.664 20.938 42.418
 21.148 c 43.031 24.496 42.684 27.117 41.52 29.281 c 40.16 31.801 37.828
 33.43 35.461 34.848 c 34.848 35.215 34.227 35.578 33.602 35.941 c 29.27
 38.438 24.816 41.008 22.398 47.059 c 22.391 47.059 l 22.223 47.48 21.871
 47.805 21.434 47.938 c 20.996 48.07 20.523 47.996 20.148 47.734 c 20.145
 47.73 l 20.137 47.727 l 20.125 47.719 l 20.094 47.695 l 20.098 47.695 l
 19.945 47.59 19.797 47.473 19.656 47.352 c 18.078 46.02 16.863 44.312 16.117
 42.383 c 15.648 41.141 15.395 39.824 15.379 38.496 c 15.133 38.223 15 37.867
 15 37.5 c 15 37.445 l 15.023 37.207 l 15.023 37.211 l 15.09 36.773 15.289
 36.371 15.59 36.051 c 15.859 34.582 16.406 33.008 17.309 31.328 c 16.773
 31.051 16.457 30.48 16.504 29.879 c 16.551 29.277 16.953 28.766 17.527 
28.574 c 18.129 28.371 18.746 28.227 19.379 28.145 c 19.828 27.566 l 20.684
 26.5 21.039 25.648 21.141 24.984 c 21.137 24.98 l 21.23 24.34 21.102 23.684
 20.773 23.125 c 20.027 21.762 18.328 20.414 15.934 18.836 c 15.352 18.457
 14.742 18.062 14.105 17.652 c 13.75 17.426 l 12.492 17.156 11.25 16.82 
10.027 16.422 c 9.609 16.281 9.273 15.969 9.109 15.559 c 8.941 15.152 8.965
 14.691 9.172 14.301 c 8.48 13.762 l 6.352 12.031 4.391 9.961 3.375 7.352
 c 9.293 10.504 m 9.633 10.816 9.992 11.125 10.367 11.43 c 11.781 12.574
 13.336 13.594 14.914 14.609 c 19.535 15.559 25.809 16.109 31.203 15.031
 c 31.203 15.027 l 32.016 14.863 32.809 15.391 32.969 16.203 c 33.133 17.016
 32.605 17.809 31.793 17.969 c 28.145 18.699 24.184 18.75 20.516 18.441 
c 21.711 19.418 22.746 20.488 23.406 21.684 c 24.016 22.801 24.312 24.055
 24.105 25.426 c 23.953 26.414 23.562 27.398 22.934 28.379 c 23.594 28.539
 l 23.613 28.547 l 25.055 28.906 26.203 29.188 28.023 28.578 c 28.023 28.574
 l 28.809 28.312 29.66 28.738 29.922 29.523 c 30.188 30.312 29.762 31.164
 28.973 31.426 c 26.309 32.312 24.457 31.848 22.902 31.461 c 22.883 31.453
 l 22.887 31.453 l 22.254 31.281 21.609 31.156 20.953 31.086 c 19.844 32.734
 19.16 34.234 18.773 35.578 c 19.199 35.715 19.664 35.906 20.168 36.16 c
 20.172 36.16 l 20.531 36.336 20.805 36.648 20.934 37.027 c 21.059 37.406
 21.031 37.82 20.852 38.176 c 20.672 38.535 20.359 38.805 19.977 38.93 c
 19.598 39.055 19.184 39.023 18.828 38.84 c 18.684 38.766 18.535 38.695 
18.383 38.633 c 18.418 39.668 18.637 40.562 18.922 41.316 c 19.344 42.422
 19.949 43.312 20.508 43.973 c 23.484 38.262 28.258 35.531 32.164 33.293
 c 32.773 32.945 33.359 32.605 33.918 32.273 c 36.242 30.883 37.938 29.602
 38.879 27.859 c 39.516 26.68 39.867 25.16 39.66 23.008 c 39.652 23.008 
l 36.695 24.629 33.375 25.488 30 25.5 c 29.172 25.5 28.5 24.828 28.5 24 
c 28.5 23.172 29.172 22.5 30 22.5 c 33.199 22.484 36.336 21.578 39.051 19.883
 c 39.031 19.793 l 38.625 17.773 38.609 16.172 38.863 14.797 c 39.117 13.418
 39.621 12.367 40.125 11.457 c 40.52 10.766 l 40.715 10.43 40.898 10.105
 41.066 9.785 c 40.195 10.105 39.207 10.391 38.125 10.641 c 34.461 11.488
 29.465 12 24 12 c 18.535 12 13.543 11.488 9.871 10.645 c 9.676 10.602 9.48
 10.555 9.293 10.504 c 41.891 6 m 41.699 5.828 41.48 5.68 41.25 5.566 c 
40.434 5.121 39.16 4.676 37.453 4.281 c 34.062 3.496 29.309 3 24 3 c 18.691
 3 13.938 3.496 10.547 4.281 c 8.84 4.672 7.566 5.121 6.75 5.566 c 6.52 
5.68 6.301 5.828 6.109 6 c 6.227 6.117 6.438 6.262 6.75 6.434 c 7.566 6.879
 8.84 7.324 10.547 7.719 c 13.938 8.504 18.691 9 24 9 c 29.309 9 34.062 
8.504 37.453 7.719 c 39.16 7.328 40.434 6.879 41.25 6.434 c 41.48 6.32 41.699
 6.172 41.891 6 c f
Q Q
showpage
%%Trailer
%%EOF
