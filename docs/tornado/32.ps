%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0 g
1.688 3.676 m 1.566 3.469 1.504 3.238 1.5 3 c 1.5 2.609 1.676 2.289 1.887
 2.051 c 2.109 1.812 2.367 1.613 2.656 1.465 c 3.238 1.148 4.027 0.887 4.938
 0.676 c 6.77 0.254 9.27 0 12 0 c 14.73 0 17.23 0.254 19.062 0.68 c 19.973
 0.891 20.762 1.152 21.344 1.469 c 21.633 1.629 21.906 1.816 22.113 2.051
 c 22.324 2.289 22.5 2.613 22.5 3 c 22.5 4.516 21.977 5.418 21.551 6.152
 c 21.375 6.457 l 21.152 6.832 20.992 7.242 20.906 7.672 c 20.832 8.113 
20.828 8.562 20.891 9.008 c 21.211 8.957 21.527 9.121 21.672 9.41 c 21.816
 9.699 21.762 10.051 21.531 10.281 c 21.441 10.371 21.332 10.469 21.207 
10.574 c 21.512 12.25 21.34 13.559 20.758 14.641 c 20.078 15.902 18.91 16.715
 17.727 17.426 c 17.418 17.609 17.109 17.789 16.797 17.973 c 14.633 19.219
 12.406 20.508 11.195 23.531 c 11.195 23.527 l 11.109 23.742 10.934 23.902
 10.715 23.969 c 10.5 24.035 10.262 23.996 10.074 23.867 c 10.07 23.867 
l 10.062 23.863 l 10.047 23.852 l 10.047 23.848 l 9.973 23.793 9.898 23.738
 9.828 23.676 c 9.039 23.008 8.43 22.156 8.059 21.191 c 7.824 20.57 7.699
 19.914 7.688 19.246 c 7.566 19.109 7.5 18.934 7.5 18.75 c 7.5 18.723 l 
7.512 18.605 l 7.547 18.387 7.645 18.188 7.793 18.027 c 7.93 17.293 8.199
 16.508 8.652 15.668 c 8.652 15.664 l 8.387 15.527 8.227 15.238 8.254 14.941
 c 8.277 14.641 8.477 14.383 8.762 14.289 c 9.062 14.188 9.375 14.113 9.688
 14.07 c 9.914 13.781 l 10.34 13.246 10.52 12.824 10.57 12.488 c 10.57 12.492
 l 10.617 12.168 10.551 11.84 10.387 11.562 c 10.012 10.879 9.164 10.207
 7.969 9.418 c 7.68 9.227 7.375 9.031 7.055 8.828 c 6.875 8.715 l 6.875 
8.711 l 6.246 8.578 5.625 8.41 5.012 8.211 c 4.805 8.141 4.637 7.984 4.555
 7.781 c 4.473 7.574 4.484 7.344 4.586 7.152 c 4.242 6.883 l 3.176 6.016
 2.195 4.98 1.688 3.676 c 4.648 5.254 m 4.82 5.41 4.996 5.562 5.184 5.715
 c 5.891 6.285 6.668 6.797 7.457 7.305 c 9.766 7.781 12.906 8.055 15.602
 7.516 c 15.602 7.512 l 16.008 7.434 16.402 7.695 16.484 8.102 c 16.566 
8.508 16.305 8.902 15.898 8.984 c 14.074 9.352 12.094 9.375 10.262 9.219
 c 10.859 9.707 11.379 10.242 11.707 10.84 c 12.012 11.398 12.16 12.023 
12.055 12.711 c 11.977 13.203 11.781 13.699 11.469 14.188 c 11.797 14.266
 l 11.805 14.27 l 12.527 14.449 13.098 14.59 14.008 14.285 c 14.012 14.289
 l 14.406 14.156 14.832 14.367 14.961 14.762 c 15.094 15.156 14.879 15.582
 14.488 15.711 c 13.156 16.152 12.23 15.922 11.453 15.73 c 11.445 15.727
 l 11.129 15.641 10.805 15.578 10.477 15.543 c 9.922 16.367 9.578 17.117
 9.387 17.789 c 9.598 17.855 9.832 17.953 10.086 18.078 c 10.266 18.168 
10.402 18.324 10.465 18.512 c 10.531 18.703 10.516 18.91 10.426 19.09 c 
10.336 19.266 10.18 19.402 9.988 19.465 c 9.801 19.527 9.594 19.512 9.414
 19.422 c 9.34 19.383 9.266 19.348 9.191 19.316 c 9.211 19.832 9.316 20.281
 9.461 20.66 c 9.672 21.215 9.973 21.66 10.254 21.988 c 11.742 19.133 14.129
 17.766 16.082 16.648 c 16.387 16.477 16.68 16.305 16.957 16.137 c 18.121
 15.441 18.969 14.801 19.438 13.93 c 19.754 13.34 19.934 12.578 19.828 11.504
 c 18.348 12.316 16.688 12.742 15 12.75 c 14.586 12.75 14.25 12.414 14.25
 12 c 14.25 11.586 14.586 11.25 15 11.25 c 16.602 11.242 18.168 10.789 19.527
 9.941 c 19.516 9.895 l 19.312 8.887 19.305 8.086 19.43 7.398 c 19.555 6.707
 19.809 6.184 20.062 5.73 c 20.258 5.387 l 20.355 5.219 20.445 5.055 20.531
 4.895 c 20.098 5.055 19.602 5.199 19.062 5.32 c 17.23 5.746 14.734 6 12
 6 c 9.27 6 6.77 5.746 4.938 5.32 c 4.84 5.297 4.742 5.273 4.648 5.25 c 
20.945 3 m 20.848 2.914 20.742 2.84 20.625 2.781 c 20.219 2.559 19.578 2.336
 18.727 2.141 c 17.031 1.75 14.652 1.5 12 1.5 c 9.348 1.5 6.969 1.75 5.273
 2.141 c 4.422 2.336 3.781 2.562 3.375 2.781 c 3.258 2.84 3.152 2.914 3.055
 3 c 3.113 3.059 3.219 3.129 3.375 3.219 c 3.781 3.441 4.422 3.664 5.273
 3.859 c 6.969 4.25 9.348 4.5 12 4.5 c 14.652 4.5 17.031 4.25 18.727 3.859
 c 19.578 3.664 20.219 3.438 20.625 3.219 c 20.742 3.16 20.848 3.086 20.945
 3 c f
Q Q
showpage
%%Trailer
%%EOF
