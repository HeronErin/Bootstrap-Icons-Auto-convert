%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 24 0 360 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 24 0 360 384
384 384 cairo_set_page_size
%%EndPageSetup
q 24 0 336 384 rectclip
1 0 0 -1 0 384 cm q
0 g
27 58.801 m 25.066 55.527 24.031 51.801 24 48 c 24 41.762 26.785 36.625
 30.191 32.785 c 33.734 28.996 37.898 25.836 42.504 23.449 c 51.793 18.41
 64.414 14.211 78.984 10.848 c 108.336 4.078 148.32 0 192 0 c 235.703 0 
275.664 4.078 305.016 10.848 c 319.582 14.207 332.207 18.383 341.496 23.449
 c 346.129 25.992 350.473 29.043 353.809 32.785 c 357.191 36.625 360 41.762
 360 48 c 360 72.266 351.602 86.688 344.785 98.449 c 342 103.32 l 338.426
 109.324 335.887 115.891 334.488 122.734 c 333.336 129.812 333.246 137.02
 334.223 144.121 c 339.359 143.336 344.418 145.941 346.754 150.578 c 349.094
 155.219 348.184 160.836 344.496 164.496 c 343.039 165.938 341.32 167.496
 339.336 169.176 c 344.23 195.961 341.449 216.938 332.137 234.238 c 321.266
 254.398 302.594 267.43 283.656 278.781 c 278.746 281.711 273.785 284.621
 268.777 287.516 c 234.121 307.484 198.504 328.051 179.137 376.461 c 179.137
 376.465 l 177.781 379.852 174.957 382.438 171.465 383.496 c 167.973 384.551
 164.188 383.957 161.184 381.887 c 161.16 381.863 l 161.113 381.84 l 161.016
 381.77 l 160.777 381.578 l 160.777 381.574 l 159.559 380.711 158.379 379.789
 157.246 378.816 c 144.629 368.152 134.898 354.484 128.953 339.07 c 125.176
 329.129 123.172 318.602 123.023 307.969 c 121.074 305.77 120 302.938 120
 300 c 120 299.566 l 120.191 297.672 l 120.734 294.203 122.305 290.973 124.703
 288.406 c 126.863 276.672 131.23 264.07 138.457 250.629 c 138.457 250.633
 l 134.18 248.406 131.652 243.84 132.031 239.035 c 132.414 234.23 135.633
 230.121 140.207 228.602 c 145.023 226.977 149.98 225.82 155.016 225.145
 c 158.617 220.512 l 165.457 211.969 168.312 205.176 169.105 199.848 c 169.848
 194.707 168.816 189.465 166.176 184.992 c 160.199 174.07 146.617 163.32
 127.465 150.672 c 122.809 147.633 117.938 144.48 112.848 141.215 c 109.992
 139.391 l 99.93 137.254 89.984 134.578 80.207 131.375 c 76.863 130.266 
74.18 127.742 72.863 124.477 c 71.543 121.207 71.73 117.527 73.367 114.406
 c 67.848 110.086 l 50.809 96.238 35.113 79.68 27 58.801 c 74.352 84.023
 m 77.07 86.52 79.938 88.984 82.945 91.414 c 94.273 100.559 106.707 108.742
 119.305 116.855 c 156.266 124.465 206.473 128.855 249.625 120.215 c 256.125
 118.91 262.453 123.121 263.762 129.625 c 265.066 136.125 260.852 142.453
 254.352 143.762 c 225.168 149.617 193.465 150 164.137 147.531 c 173.711
 155.355 181.992 163.898 187.25 173.477 c 192.121 182.43 194.496 192.438
 192.844 203.406 c 191.613 211.309 188.492 219.191 183.484 227.047 c 188.766
 228.32 l 188.91 228.367 l 200.453 231.246 209.621 233.48 224.191 228.605
 c 224.184 228.602 l 230.48 226.5 237.285 229.898 239.387 236.195 c 241.488
 242.492 238.09 249.301 231.793 251.398 c 210.48 258.477 195.672 254.781
 183.242 251.688 c 183.098 251.641 l 178.035 250.234 172.863 249.246 167.641
 248.688 c 158.762 261.887 153.289 273.887 150.215 284.617 c 153.605 285.707
 157.328 287.258 161.375 289.273 c 164.246 290.684 166.434 293.18 167.457
 296.215 c 168.477 299.246 168.246 302.559 166.812 305.418 c 165.379 308.277
 162.863 310.445 159.824 311.445 c 156.785 312.441 153.473 312.184 150.625
 310.727 c 149.457 310.137 148.27 309.574 147.07 309.047 c 147.359 317.328
 149.086 324.48 151.391 330.527 c 154.75 339.383 159.598 346.512 164.062
 351.793 c 187.871 306.121 226.055 284.258 257.301 266.352 c 262.18 263.582
 266.852 260.863 271.316 258.191 c 289.918 247.055 303.477 236.832 310.988
 222.863 c 316.078 213.43 318.91 201.262 317.227 184.055 c 317.23 184.055
 l 293.555 197.047 267.004 203.902 240 204 c 233.371 204 228 198.629 228
 192 c 228 185.371 233.371 180 240 180 c 265.609 179.867 290.676 172.621
 312.406 159.07 c 312.238 158.352 l 309 142.199 308.879 129.383 310.895 
118.391 c 312.91 107.352 316.965 98.949 321 91.68 c 324.145 86.16 l 325.711
 83.488 327.168 80.871 328.512 78.312 c 321.551 80.879 313.633 83.16 304.992
 85.152 c 275.688 91.922 235.727 96 192 96 c 148.297 96 108.336 91.922 78.984
 85.152 c 77.418 84.801 75.871 84.426 74.352 84.023 c 335.137 48 m 333.582
 46.621 331.855 45.453 330 44.52 c 323.473 40.969 313.273 37.391 299.617
 34.246 c 272.496 27.984 234.457 24 192 24 c 149.543 24 111.504 27.984 84.383
 34.246 c 70.727 37.367 60.527 40.965 54 44.52 c 52.145 45.453 50.418 46.621
 48.863 48 c 49.793 48.93 51.504 50.09 54 51.48 c 60.527 55.031 70.727 58.609
 84.383 61.754 c 111.504 68.016 149.543 72 192 72 c 234.457 72 272.496 68.016
 299.617 61.754 c 313.273 58.633 323.473 55.035 330 51.48 c 331.855 50.547
 333.582 49.379 335.137 48 c f
Q Q
showpage
%%Trailer
%%EOF
