%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:29:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
0.844 1.836 m 0.785 1.734 0.75 1.617 0.75 1.5 c 0.75 1.305 0.836 1.145 
0.945 1.023 c 1.055 0.906 1.184 0.809 1.328 0.734 c 1.617 0.578 2.012 0.445
 2.469 0.34 c 3.387 0.129 4.637 0 6 0 c 7.367 0 8.613 0.129 9.531 0.34 c
 9.988 0.445 10.383 0.574 10.672 0.734 c 10.816 0.812 10.953 0.91 11.055
 1.027 c 11.16 1.148 11.25 1.309 11.25 1.504 c 11.25 2.262 10.988 2.715 
10.773 3.082 c 10.688 3.234 l 10.688 3.23 l 10.574 3.418 10.496 3.621 10.453
 3.836 c 10.418 4.055 10.414 4.281 10.445 4.504 c 10.605 4.48 10.762 4.562
 10.836 4.707 c 10.91 4.852 10.879 5.027 10.766 5.141 c 10.719 5.188 10.668
 5.234 10.605 5.285 c 10.758 6.121 10.672 6.777 10.379 7.32 c 10.039 7.949
 9.457 8.359 8.863 8.711 c 8.711 8.801 8.555 8.895 8.398 8.984 c 7.316 9.609
 6.203 10.25 5.598 11.766 c 5.555 11.871 5.469 11.953 5.359 11.984 c 5.25
 12.016 5.133 12 5.035 11.934 c 5.023 11.922 l 5.023 11.926 l 4.984 11.898
 4.949 11.867 4.914 11.84 c 4.52 11.504 4.215 11.078 4.031 10.598 c 3.91
 10.285 3.848 9.957 3.844 9.625 c 3.785 9.555 3.75 9.465 3.75 9.375 c 3.75
 9.363 l 3.758 9.305 l 3.758 9.301 l 3.773 9.195 3.82 9.094 3.898 9.012 
c 3.965 8.645 4.102 8.25 4.328 7.832 c 4.191 7.762 4.113 7.621 4.125 7.469
 c 4.137 7.32 4.238 7.191 4.383 7.145 c 4.531 7.094 4.688 7.059 4.844 7.035
 c 4.957 6.891 l 5.172 6.625 5.262 6.41 5.285 6.246 c 5.309 6.086 5.277 
5.922 5.191 5.781 c 5.004 5.441 4.582 5.105 3.98 4.707 c 3.836 4.613 3.684
 4.512 3.523 4.41 c 3.434 4.352 l 3.438 4.355 l 3.121 4.289 2.812 4.207 
2.508 4.105 c 2.402 4.07 2.316 3.992 2.277 3.891 c 2.234 3.789 2.242 3.672
 2.293 3.574 c 2.121 3.438 l 1.586 3.008 1.098 2.488 0.844 1.836 c 2.324
 2.625 m 2.41 2.703 2.5 2.781 2.594 2.855 c 2.949 3.141 3.336 3.398 3.73
 3.652 c 4.887 3.891 6.453 4.027 7.805 3.758 c 7.801 3.758 l 8.004 3.715
 8.203 3.848 8.242 4.051 c 8.285 4.254 8.152 4.453 7.949 4.492 c 7.039 4.676
 6.047 4.688 5.129 4.609 c 5.43 4.855 5.688 5.121 5.852 5.422 c 6.004 5.703
 6.078 6.016 6.027 6.355 c 5.988 6.602 5.891 6.848 5.734 7.094 c 5.898 7.133
 l 5.902 7.133 l 6.262 7.223 6.551 7.293 7.004 7.141 c 7.004 7.145 l 7.203
 7.078 7.414 7.184 7.48 7.383 c 7.547 7.578 7.441 7.789 7.242 7.855 c 6.578
 8.078 6.113 7.961 5.727 7.863 c 5.723 7.863 l 5.562 7.82 5.402 7.789 5.238
 7.773 c 4.961 8.188 4.789 8.562 4.695 8.895 c 4.801 8.93 4.918 8.977 5.043
 9.039 c 5.133 9.082 5.199 9.16 5.234 9.258 c 5.266 9.352 5.258 9.453 5.211
 9.543 c 5.168 9.633 5.09 9.703 4.996 9.734 c 4.898 9.766 4.797 9.754 4.707
 9.711 c 4.672 9.691 4.633 9.676 4.598 9.656 c 4.605 9.914 4.66 10.137 4.734
 10.328 c 4.84 10.605 4.992 10.828 5.129 10.992 c 5.871 9.566 7.066 8.883
 8.043 8.32 c 8.195 8.234 8.34 8.148 8.48 8.066 c 9.062 7.719 9.484 7.398
 9.719 6.961 c 9.879 6.668 9.965 6.285 9.914 5.75 c 9.172 6.156 8.344 6.371
 7.5 6.375 c 7.293 6.375 7.125 6.207 7.125 6 c 7.125 5.793 7.293 5.625 7.5
 5.625 c 8.301 5.621 9.082 5.395 9.762 4.973 c 9.758 4.949 l 9.656 4.445
 9.652 4.043 9.715 3.699 c 9.777 3.355 9.906 3.09 10.031 2.863 c 10.129 
2.691 l 10.18 2.609 10.223 2.527 10.266 2.445 c 10.047 2.527 9.801 2.598
 9.531 2.66 c 8.617 2.871 7.367 3 6 3 c 4.633 3 3.387 2.871 2.469 2.66 c
 2.418 2.648 2.371 2.637 2.324 2.625 c 10.473 1.5 m 10.426 1.457 10.371 
1.422 10.312 1.391 c 10.109 1.281 9.789 1.168 9.363 1.07 c 8.516 0.875 7.328
 0.75 6 0.75 c 4.672 0.75 3.484 0.875 2.637 1.07 c 2.211 1.168 1.891 1.281
 1.688 1.391 c 1.629 1.422 1.574 1.457 1.527 1.5 c 1.555 1.527 1.609 1.566
 1.688 1.609 c 1.891 1.719 2.211 1.832 2.637 1.93 c 3.484 2.125 4.672 2.25
 6 2.25 c 7.328 2.25 8.516 2.125 9.363 1.93 c 9.789 1.832 10.109 1.719 10.312
 1.609 c 10.371 1.578 10.426 1.543 10.473 1.5 c f
Q Q
showpage
%%Trailer
%%EOF
