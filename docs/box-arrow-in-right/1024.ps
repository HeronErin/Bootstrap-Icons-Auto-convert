%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:10 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 48 96 720 576 rectclip
1 0 0 -1 0 768 cm q
0 g
288 168 m 288 161.637 290.527 155.531 295.031 151.031 c 299.531 146.527
 305.637 144 312 144 c 696 144 l 702.363 144 708.469 146.527 712.969 151.031
 c 717.473 155.531 720 161.637 720 168 c 720 600 l 720 606.363 717.473 612.469
 712.969 616.969 c 708.469 621.473 702.363 624 696 624 c 312 624 l 305.637
 624 299.531 621.473 295.031 616.969 c 290.527 612.469 288 606.363 288 600
 c 288 504 l 288 495.426 283.426 487.504 276 483.215 c 268.574 478.93 259.426
 478.93 252 483.215 c 244.574 487.504 240 495.426 240 504 c 240 600 l 240
 619.094 247.586 637.41 261.09 650.91 c 274.59 664.414 292.906 672 312 672
 c 696 672 l 715.094 672 733.41 664.414 746.91 650.91 c 760.414 637.41 768
 619.094 768 600 c 768 168 l 768 148.906 760.414 130.59 746.91 117.09 c 
733.41 103.586 715.094 96 696 96 c 312 96 l 292.906 96 274.59 103.586 261.09
 117.09 c 247.586 130.59 240 148.906 240 168 c 240 264 l 240 272.574 244.574
 280.496 252 284.785 c 259.426 289.07 268.574 289.07 276 284.785 c 283.426
 280.496 288 272.574 288 264 c h
288 168 m f*
568.992 400.992 m 573.508 396.488 576.043 390.375 576.043 384 c 576.043
 377.625 573.508 371.512 568.992 367.008 c 424.992 223.008 l 418.922 216.938
 410.074 214.566 401.781 216.789 c 393.488 219.012 387.012 225.488 384.789
 233.781 c 382.566 242.074 384.938 250.922 391.008 256.992 c 494.062 360
 l 72 360 l 63.426 360 55.504 364.574 51.215 372 c 46.93 379.426 46.93 388.574
 51.215 396 c 55.504 403.426 63.426 408 72 408 c 494.062 408 l 391.008 511.008
 l 384.938 517.078 382.566 525.926 384.789 534.219 c 387.012 542.512 393.488
 548.988 401.781 551.211 c 410.074 553.434 418.922 551.062 424.992 544.992
 c h
568.992 400.992 m f*
Q Q
showpage
%%Trailer
%%EOF
