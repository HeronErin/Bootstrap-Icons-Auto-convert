%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:12 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 192 1440 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
576 336 m 576 323.27 581.059 311.062 590.059 302.059 c 599.062 293.059 
611.27 288 624 288 c 1392 288 l 1404.73 288 1416.938 293.059 1425.941 302.059
 c 1434.941 311.062 1440 323.27 1440 336 c 1440 1200 l 1440 1212.73 1434.941
 1224.938 1425.941 1233.941 c 1416.938 1242.941 1404.73 1248 1392 1248 c
 624 1248 l 611.27 1248 599.062 1242.941 590.059 1233.941 c 581.059 1224.938
 576 1212.73 576 1200 c 576 1008 l 576 990.852 566.852 975.004 552 966.43
 c 537.148 957.855 518.852 957.855 504 966.43 c 489.148 975.004 480 990.852
 480 1008 c 480 1200 l 480 1238.191 495.172 1274.816 522.176 1301.824 c 
549.184 1328.828 585.809 1344 624 1344 c 1392 1344 l 1430.191 1344 1466.816
 1328.828 1493.824 1301.824 c 1520.828 1274.816 1536 1238.191 1536 1200 
c 1536 336 l 1536 297.809 1520.828 261.184 1493.824 234.176 c 1466.816 207.172
 1430.191 192 1392 192 c 624 192 l 585.809 192 549.184 207.172 522.176 234.176
 c 495.172 261.184 480 297.809 480 336 c 480 528 l 480 545.148 489.148 560.996
 504 569.57 c 518.852 578.145 537.148 578.145 552 569.57 c 566.852 560.996
 576 545.148 576 528 c h
576 336 m f*
1137.984 801.984 m 1147.012 792.98 1152.086 780.75 1152.086 768 c 1152.086
 755.25 1147.012 743.02 1137.984 734.016 c 849.984 446.016 l 837.844 433.875
 820.145 429.133 803.562 433.578 c 786.977 438.02 774.02 450.977 769.578
 467.562 c 765.133 484.145 769.875 501.844 782.016 513.984 c 988.129 720
 l 144 720 l 126.852 720 111.004 729.148 102.43 744 c 93.855 758.852 93.855
 777.148 102.43 792 c 111.004 806.852 126.852 816 144 816 c 988.129 816 
l 782.016 1022.016 l 769.875 1034.156 765.133 1051.855 769.578 1068.438 
c 774.02 1085.023 786.977 1097.98 803.562 1102.422 c 820.145 1106.867 837.844
 1102.125 849.984 1089.984 c h
1137.984 801.984 m f*
Q Q
showpage
%%Trailer
%%EOF
