%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 21 96 91
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 21 96 91
96 96 cairo_set_page_size
%%EndPageSetup
q 0 21 96 70 rectclip
1 0 0 -1 0 96 cm q
0 g
45.875 6.875 m 46.438 6.312 47.203 5.996 48 5.996 c 48.797 5.996 49.562
 6.312 50.125 6.875 c 59.125 15.875 l 60.297 17.051 60.297 18.949 59.125
 20.125 c 57.949 21.297 56.051 21.297 54.875 20.125 c 51 16.242 l 51 27 
l 51 28.656 49.656 30 48 30 c 46.344 30 45 28.656 45 27 c 45 16.242 l 41.125
 20.125 l 39.949 21.297 38.051 21.297 36.875 20.125 c 35.703 18.949 35.703
 17.051 36.875 15.875 c h
14.059 26.059 m 15.23 24.887 17.129 24.887 18.301 26.059 c 26.785 34.543
 l 27.922 35.719 27.906 37.59 26.746 38.746 c 25.59 39.906 23.719 39.922
 22.543 38.785 c 14.059 30.301 l 12.887 29.129 12.887 27.23 14.059 26.059
 c 81.941 26.059 m 83.113 27.23 83.113 29.129 81.941 30.301 c 73.457 38.785
 l 72.898 39.363 72.133 39.691 71.328 39.699 c 70.523 39.707 69.746 39.391
 69.18 38.82 c 68.609 38.254 68.293 37.477 68.301 36.672 c 68.309 35.867
 68.637 35.102 69.215 34.543 c 77.699 26.059 l 78.871 24.887 80.77 24.887
 81.941 26.059 c 48 42 m 52.234 42 56.328 43.488 59.574 46.207 c 62.816 
48.93 64.996 52.703 65.73 56.871 c 66.469 61.039 65.711 65.336 63.594 69
 c 32.398 69 l 30.285 65.332 29.527 61.039 30.262 56.871 c 31 52.703 33.18
 48.926 36.426 46.207 c 39.668 43.488 43.766 41.996 48 42 c 70.262 69 m 
73.246 61.602 72.363 53.203 67.902 46.59 c 63.441 39.977 55.984 36.012 48.008
 36.012 c 40.027 36.012 32.57 39.977 28.109 46.59 c 23.648 53.203 22.766
 61.602 25.754 69 c 2.992 69 l 1.336 69 -0.008 70.344 -0.008 72 c -0.008
 73.656 1.336 75 2.992 75 c 92.992 75 l 94.652 75 95.992 73.656 95.992 72
 c 95.992 70.344 94.652 69 92.992 69 c 70.254 69 l h
0 60 m 0 58.344 1.344 57 3 57 c 15 57 l 16.656 57 18 58.344 18 60 c 18 
61.656 16.656 63 15 63 c 3 63 l 1.344 63 0 61.656 0 60 c 78 60 m 78 58.344
 79.344 57 81 57 c 93 57 l 94.656 57 96 58.344 96 60 c 96 61.656 94.656 
63 93 63 c 81 63 l 79.344 63 78 61.656 78 60 c f
Q Q
showpage
%%Trailer
%%EOF
