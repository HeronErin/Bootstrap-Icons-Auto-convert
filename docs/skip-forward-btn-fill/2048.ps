%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
0 1152 m 0 384 l 0 333.078 20.227 284.242 56.234 248.234 c 92.242 212.227
 141.078 192 192 192 c 1344 192 l 1377.703 192 1410.812 200.871 1440 217.723
 c 1469.188 234.574 1493.426 258.812 1510.277 288 c 1527.129 317.188 1536
 350.297 1536 384 c 1536 1152 l 1536 1185.703 1527.129 1218.812 1510.277
 1248 c 1493.426 1277.188 1469.188 1301.426 1440 1318.277 c 1410.812 1335.129
 1377.703 1344 1344 1344 c 192 1344 l 141.078 1344 92.242 1323.773 56.234
 1287.766 c 20.227 1251.758 0 1202.922 0 1152 c 459.84 488.93 m 450.223 
482.082 438.422 479.02 426.688 480.324 c 414.953 481.633 404.113 487.215
 396.238 496.012 c 388.363 504.805 384.008 516.195 384 528 c 384 1008 l 
384.008 1019.805 388.363 1031.195 396.238 1039.988 c 404.113 1048.785 414.953
 1054.367 426.688 1055.676 c 438.422 1056.98 450.223 1053.918 459.84 1047.07
 c 720 861.312 l 720 1008 l 720.008 1019.805 724.363 1031.195 732.238 1039.988
 c 740.113 1048.785 750.953 1054.367 762.688 1055.676 c 774.422 1056.98 
786.223 1053.918 795.84 1047.07 c 1056 861.312 l 1056 1008 l 1056 1025.148
 1065.148 1040.996 1080 1049.57 c 1094.852 1058.145 1113.148 1058.145 1128
 1049.57 c 1142.852 1040.996 1152 1025.148 1152 1008 c 1152 528 l 1152 510.852
 1142.852 495.004 1128 486.43 c 1113.148 477.855 1094.852 477.855 1080 486.43
 c 1065.148 495.004 1056 510.852 1056 528 c 1056 674.688 l 795.84 488.93
 l 786.223 482.082 774.422 479.02 762.688 480.324 c 750.953 481.633 740.113
 487.215 732.238 496.012 c 724.363 504.805 720.008 516.195 720 528 c 720
 674.688 l h
459.84 488.93 m f
Q Q
showpage
%%Trailer
%%EOF
