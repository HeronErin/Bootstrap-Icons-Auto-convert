%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.5 5.625 l 4.598 5.625 4.695 5.586 4.766 5.516 c 4.836
 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 1.688 l 3.812 1.688 
3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125 0.543
 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086 0 
1.5 0 c 3.562 0 l h
0.266 5.945 m 0.266 4.949 l 0.281 4.949 l 0.637 5.758 l 0.832 5.758 l 1.188
 4.949 l 1.203 4.949 l 1.203 5.945 l 1.473 5.945 l 1.465 4.445 l 1.164 4.445
 l 0.738 5.418 l 0.73 5.418 l 0.301 4.445 l 0 4.445 l 0 5.945 l h
2.23 4.445 m 2.133 4.609 2.035 4.77 1.934 4.934 c 1.836 5.098 1.742 5.262
 1.652 5.426 c 1.652 5.668 l 2.379 5.668 l 2.379 5.945 l 2.656 5.945 l 2.656
 5.668 l 2.84 5.668 l 2.84 5.43 l 2.656 5.43 l 2.656 4.445 l h
1.922 5.43 m 1.922 5.422 l 1.988 5.293 2.062 5.168 2.137 5.039 c 2.211 
4.914 2.289 4.789 2.363 4.672 c 2.379 4.672 l 2.379 5.43 l 1.922 5.426 l
 h
3.008 4.445 m 3.609 4.445 l 3.719 4.445 3.809 4.469 3.883 4.512 c 3.957
 4.555 4.016 4.613 4.055 4.691 c 4.094 4.766 4.113 4.852 4.113 4.945 c 4.113
 5.039 4.094 5.125 4.055 5.199 c 4.016 5.273 3.957 5.332 3.879 5.379 c 3.879
 5.375 l 3.793 5.422 3.699 5.441 3.605 5.441 c 3.305 5.441 l 3.305 5.945
 l 3.008 5.945 l h
3.781 5.09 m 3.777 5.086 l 3.801 5.043 3.812 4.992 3.809 4.945 c 3.809 
4.859 3.785 4.797 3.738 4.75 c 3.691 4.703 3.629 4.68 3.547 4.684 c 3.301
 4.684 l 3.301 5.211 l 3.547 5.211 l 3.551 5.207 l 3.598 5.207 3.645 5.199
 3.688 5.176 c 3.727 5.156 3.758 5.125 3.777 5.086 c f*
Q Q
showpage
%%Trailer
%%EOF
