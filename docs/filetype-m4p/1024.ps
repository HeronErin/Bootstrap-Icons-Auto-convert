%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 672 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 672 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 672 l 672 697.461 661.887 721.879 643.883 739.883 c 625.879
 757.887 601.461 768 576 768 c 576 720 l 588.73 720 600.938 714.941 609.941
 705.941 c 618.941 696.938 624 684.73 624 672 c 624 216 l 528 216 l 508.906
 216 490.59 208.414 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c
 456 48 l 192 48 l 179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062
 144 83.27 144 96 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 
124.117 28.117 c 142.121 10.113 166.539 0 192 0 c 456 0 l h
33.887 760.754 m 33.887 633.074 l 35.711 633.074 l 81.406 736.754 l 106.176
 736.754 l 151.582 633.074 l 153.406 633.074 l 153.406 760.754 l 187.727
 760.754 l 187.727 568.801 l 149.328 568.801 l 94.609 693.41 l 93.363 693.41
 l 38.641 568.801 l 0 568.801 l 0 760.754 l h
285.262 568.801 m 272.688 589.602 260.047 610.402 247.34 631.199 c 234.637
 652 222.668 672.961 211.438 694.078 c 211.438 725.184 l 304.414 725.184
 l 304.414 760.75 l 339.934 760.75 l 339.934 725.184 l 363.453 725.184 l
 363.453 694.512 l 339.934 694.512 l 339.938 568.801 l h
245.902 694.562 m 245.902 693.555 l 254.543 677.234 263.68 660.961 273.309
 644.738 c 283.035 628.516 292.75 612.77 302.445 597.508 c 304.367 597.508
 l 304.367 694.516 l 245.953 694.512 l h
384.766 568.801 m 461.566 568.801 l 475.453 568.801 487.168 571.664 496.703
 577.395 c 506.367 582.996 513.727 590.625 518.781 600.289 c 523.836 609.953
 526.367 620.785 526.367 632.785 c 526.367 644.785 523.809 655.617 518.688
 665.281 c 513.598 674.816 506.176 682.402 496.414 688.035 c 496.414 688.031
 l 485.637 693.844 473.52 696.707 461.281 696.336 c 422.738 696.336 l 422.738
 760.75 l 384.816 760.75 l h
483.645 651.074 m 483.648 651.07 l 486.496 645.406 487.898 639.125 487.727
 632.785 c 487.727 621.906 484.766 613.57 478.848 607.777 c 472.961 601.922
 464.75 599.008 454.223 599.043 c 422.59 599.043 l 422.59 666.531 l 454.27
 666.531 l 454.273 666.527 l 460.488 666.688 466.648 665.336 472.223 662.594
 c 477.109 659.996 481.094 655.98 483.648 651.07 c f*
Q Q
showpage
%%Trailer
%%EOF
