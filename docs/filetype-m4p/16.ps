%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:25:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 11 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 11 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.5 3.375 m 10.5 10.5 l 10.5 10.898 10.344 11.281 10.062 11.562 c 9.781
 11.844 9.398 12 9 12 c 9 11.25 l 9.199 11.25 9.391 11.172 9.531 11.031 
c 9.672 10.891 9.75 10.699 9.75 10.5 c 9.75 3.375 l 8.25 3.375 l 7.629 3.375
 7.125 2.871 7.125 2.25 c 7.125 0.75 l 3 0.75 l 2.586 0.75 2.25 1.086 2.25
 1.5 c 2.25 8.25 l 1.5 8.25 l 1.5 1.5 l 1.5 0.672 2.172 0 3 0 c 7.125 0 
l h
0.531 11.887 m 0.531 9.891 l 0.559 9.891 l 1.273 11.512 l 1.66 11.512 l
 2.371 9.891 l 2.398 9.891 l 2.398 11.887 l 2.934 11.887 l 2.934 8.887 l
 2.332 8.887 l 1.477 10.832 l 1.457 10.832 l 0.605 8.887 l 0 8.887 l 0 11.887
 l h
4.461 8.887 m 4.266 9.211 4.066 9.535 3.867 9.863 c 3.668 10.188 3.48 10.516
 3.305 10.848 c 3.305 11.332 l 4.758 11.332 l 4.758 11.887 l 5.312 11.887
 l 5.312 11.332 l 5.68 11.332 l 5.68 10.852 l 5.312 10.852 l 5.312 8.887
 l 4.457 8.887 l h
3.848 10.852 m 3.848 10.836 l 3.984 10.582 4.125 10.328 4.277 10.074 c 
4.43 9.82 4.582 9.574 4.734 9.336 c 4.766 9.336 l 4.766 10.852 l 3.844 10.852
 l h
6.016 8.887 m 7.215 8.887 l 7.434 8.887 7.613 8.93 7.766 9.02 c 7.918 9.105
 8.031 9.227 8.109 9.379 c 8.188 9.531 8.227 9.699 8.227 9.887 c 8.227 10.074
 8.188 10.242 8.105 10.395 c 8.027 10.543 7.91 10.66 7.758 10.75 c 7.59 
10.84 7.398 10.887 7.207 10.879 c 6.605 10.879 l 6.605 11.887 l 6.012 11.887
 l h
7.562 10.172 m 7.559 10.172 l 7.602 10.086 7.625 9.984 7.621 9.887 c 7.621
 9.715 7.574 9.586 7.48 9.496 c 7.387 9.406 7.262 9.359 7.098 9.359 c 6.602
 9.359 l 6.602 10.414 l 7.098 10.414 l 7.195 10.418 7.293 10.395 7.379 10.352
 c 7.453 10.312 7.516 10.25 7.559 10.172 c f*
Q Q
showpage
%%Trailer
%%EOF
