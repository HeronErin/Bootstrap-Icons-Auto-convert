%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 96 96 rectclip
1 0 0 -1 0 96 cm q
0 g
62.125 36.875 m 62.688 37.438 63.004 38.203 63.004 39 c 63.004 39.797 62.688
 40.562 62.125 41.125 c 44.125 59.125 l 43.562 59.688 42.797 60.004 42 60.004
 c 41.203 60.004 40.438 59.688 39.875 59.125 c 30.875 50.125 l 29.703 48.949
 29.703 47.051 30.875 45.875 c 32.051 44.703 33.949 44.703 35.125 45.875
 c 42 52.758 l 57.875 36.875 l 58.438 36.312 59.203 35.996 60 35.996 c 60.797
 35.996 61.562 36.312 62.125 36.875 c f*
61.637 15.078 m 56.109 9.414 l 60.398 5.227 l 64.129 9.047 l 69.469 8.98
 l 69.473 8.98 l 74.145 8.926 78.637 10.758 81.941 14.059 c 85.242 17.363
 87.074 21.855 87.02 26.527 c 86.961 31.867 l 90.777 35.598 l 90.773 35.598
 l 94.113 38.859 95.996 43.332 95.996 48 c 95.996 52.668 94.113 57.141 90.773
 60.402 c 86.953 64.133 l 87.02 69.473 l 87.074 74.145 85.242 78.637 81.941
 81.941 c 78.637 85.242 74.145 87.074 69.473 87.02 c 64.133 86.961 l 60.402
 90.777 l 60.402 90.773 l 57.141 94.113 52.668 95.996 48 95.996 c 43.332
 95.996 38.859 94.113 35.598 90.773 c 31.867 86.953 l 26.527 87.02 l 21.855
 87.074 17.363 85.242 14.059 81.941 c 10.758 78.637 8.926 74.145 8.98 69.473
 c 9.039 64.133 l 5.223 60.402 l 5.227 60.402 l 1.887 57.141 0.004 52.668
 0.004 48 c 0.004 43.332 1.887 38.859 5.227 35.598 c 9.047 31.867 l 8.98
 26.527 l 8.926 21.855 10.758 17.363 14.059 14.059 c 17.363 10.758 21.855
 8.926 26.527 8.98 c 31.867 9.039 l 35.598 5.223 l 35.598 5.227 l 38.859
 1.887 43.332 0.004 48 0.004 c 52.668 0.004 57.141 1.887 60.402 5.227 c 
56.113 9.414 l 53.977 7.23 51.055 6 48 6 c 44.945 6 42.023 7.23 39.887 9.414
 c 34.367 15.078 l 26.445 14.98 l 26.449 14.98 l 23.395 14.949 20.457 16.145
 18.301 18.305 c 16.145 20.465 14.945 23.402 14.98 26.453 c 15.078 34.359
 l 9.414 39.887 l 7.23 42.023 6 44.945 6 48 c 6 51.055 7.23 53.977 9.414
 56.113 c 15.078 61.633 l 14.98 69.555 l 14.98 69.551 l 14.949 72.605 16.145
 75.543 18.305 77.699 c 20.465 79.855 23.402 81.055 26.453 81.02 c 34.359
 80.922 l 39.887 86.586 l 42.023 88.77 44.945 90 48 90 c 51.055 90 53.977
 88.77 56.113 86.586 c 61.633 80.922 l 69.555 81.02 l 69.551 81.02 l 72.605
 81.051 75.543 79.855 77.699 77.695 c 79.855 75.535 81.055 72.598 81.02 
69.547 c 80.922 61.641 l 86.586 56.113 l 88.77 53.977 90 51.055 90 48 c 
90 44.945 88.77 42.023 86.586 39.887 c 80.922 34.367 l 81.02 26.445 l 81.02
 26.449 l 81.051 23.395 79.855 20.457 77.695 18.301 c 75.535 16.145 72.598
 14.945 69.547 14.98 c h
61.637 15.078 m f
Q Q
showpage
%%Trailer
%%EOF
