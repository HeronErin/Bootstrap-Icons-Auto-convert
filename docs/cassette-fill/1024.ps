%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
72 96 m 52.906 96 34.59 103.586 21.09 117.09 c 7.586 130.59 0 148.906 0
 168 c 0 600 l 0 619.094 7.586 637.41 21.09 650.91 c 34.59 664.414 52.906
 672 72 672 c 81.168 672 l 170.543 493.246 l 172.539 489.266 175.602 485.918
 179.391 483.578 c 183.18 481.238 187.547 480 192 480 c 576 480 l 580.453
 480 584.82 481.238 588.609 483.578 c 592.398 485.918 595.461 489.266 597.457
 493.246 c 686.879 672 l 696.047 672 l 715.145 672 733.457 664.414 746.961
 650.91 c 760.461 637.41 768.047 619.094 768.047 600 c 768.047 168 l 768.047
 148.895 760.457 130.574 746.941 117.07 c 733.43 103.566 715.105 95.988 
696 96 c h
192 336 m 174.852 336 159.004 326.852 150.43 312 c 141.855 297.148 141.855
 278.852 150.43 264 c 159.004 249.148 174.852 240 192 240 c 209.148 240 
224.996 249.148 233.57 264 c 242.145 278.852 242.145 297.148 233.57 312 
c 224.996 326.852 209.148 336 192 336 c 576 336 m 558.852 336 543.004 326.852
 534.43 312 c 525.855 297.148 525.855 278.852 534.43 264 c 543.004 249.148
 558.852 240 576 240 c 593.148 240 608.996 249.148 617.57 264 c 626.145 
278.852 626.145 297.148 617.57 312 c 608.996 326.852 593.148 336 576 336
 c 288 288 m 288 275.27 293.059 263.062 302.059 254.059 c 311.062 245.059
 323.27 240 336 240 c 432 240 l 449.148 240 464.996 249.148 473.57 264 c
 482.145 278.852 482.145 297.148 473.57 312 c 464.996 326.852 449.148 336
 432 336 c 336 336 l 323.27 336 311.062 330.941 302.059 321.941 c 293.059
 312.938 288 300.73 288 288 c f
633.168 672 m 561.168 528 l 206.832 528 l 134.832 672 l h
633.168 672 m f
Q Q
showpage
%%Trailer
%%EOF
