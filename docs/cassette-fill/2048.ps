%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:32:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
144 192 m 105.809 192 69.184 207.172 42.176 234.176 c 15.172 261.184 0 
297.809 0 336 c 0 1200 l 0 1238.191 15.172 1274.816 42.176 1301.824 c 69.184
 1328.828 105.809 1344 144 1344 c 162.336 1344 l 341.09 986.496 l 345.078
 978.531 351.207 971.836 358.785 967.156 c 366.363 962.48 375.094 960 384
 960 c 1152 960 l 1160.906 960 1169.637 962.48 1177.215 967.156 c 1184.793
 971.836 1190.922 978.531 1194.91 986.496 c 1373.762 1344 l 1392.098 1344
 l 1430.289 1344 1466.914 1328.828 1493.918 1301.824 c 1520.926 1274.816
 1536.098 1238.191 1536.098 1200 c 1536.098 336 l 1536.098 297.793 1520.91
 261.152 1493.887 234.145 c 1466.859 207.133 1430.207 191.973 1392 192 c
 h
384 672 m 349.703 672 318.012 653.703 300.863 624 c 283.711 594.297 283.711
 557.703 300.863 528 c 318.012 498.297 349.703 480 384 480 c 418.297 480
 449.988 498.297 467.137 528 c 484.289 557.703 484.289 594.297 467.137 624
 c 449.988 653.703 418.297 672 384 672 c 1152 672 m 1117.703 672 1086.012
 653.703 1068.863 624 c 1051.711 594.297 1051.711 557.703 1068.863 528 c
 1086.012 498.297 1117.703 480 1152 480 c 1186.297 480 1217.988 498.297 
1235.137 528 c 1252.289 557.703 1252.289 594.297 1235.137 624 c 1217.988
 653.703 1186.297 672 1152 672 c 576 576 m 576 550.539 586.113 526.121 604.117
 508.117 c 622.121 490.113 646.539 480 672 480 c 864 480 l 898.297 480 929.988
 498.297 947.137 528 c 964.289 557.703 964.289 594.297 947.137 624 c 929.988
 653.703 898.297 672 864 672 c 672 672 l 646.539 672 622.121 661.887 604.117
 643.883 c 586.113 625.879 576 601.461 576 576 c f
1266.336 1344 m 1122.336 1056 l 413.664 1056 l 269.664 1344 l h
1266.336 1344 m f
Q Q
showpage
%%Trailer
%%EOF
