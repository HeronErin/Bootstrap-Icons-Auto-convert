%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 1 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 1 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 1 0 11 12 rectclip
1 0 0 -1 0 12 cm q
0 g
10.547 2.785 m 10.637 1.98 10.477 1.41 10.02 0.891 c 9.473 0.266 8.484 
0 7.219 0 c 3.551 0 l 3.293 0 3.074 0.188 3.031 0.441 c 1.504 10.133 l 1.488
 10.223 1.516 10.316 1.574 10.387 c 1.637 10.457 1.723 10.496 1.816 10.496
 c 3.883 10.496 l 3.73 11.457 l 3.711 11.594 3.75 11.73 3.836 11.836 c 3.926
 11.941 4.059 12 4.195 12 c 6.105 12 l 6.426 12 6.699 11.766 6.754 11.453
 c 6.773 11.355 l 7.133 9.074 l 7.156 8.953 l 7.156 8.949 l 7.152 8.945 
l 7.172 8.816 7.285 8.723 7.414 8.723 c 7.699 8.723 l 8.648 8.723 9.52 8.531
 10.207 8.039 c 10.492 7.836 10.742 7.586 10.953 7.285 c 11.305 6.797 11.531
 6.234 11.613 5.641 c 11.793 4.707 11.711 3.875 11.188 3.273 c 11.184 3.273
 l 11.023 3.094 10.832 2.945 10.617 2.832 c h
4.906 6.613 m 4.98 6.578 5.062 6.555 5.148 6.555 c 6.227 6.555 l 8.34 6.555
 9.996 5.695 10.48 3.211 c 10.484 3.199 l 10.648 3.293 10.785 3.402 10.895
 3.527 c 11.305 3.996 11.402 4.68 11.23 5.559 c 11.027 6.605 10.582 7.289
 9.984 7.715 c 9.383 8.141 8.602 8.324 7.703 8.324 c 7.418 8.324 l 7.414
 8.328 l 7.094 8.328 6.816 8.562 6.77 8.879 c 6.746 9 l 6.387 11.281 l 6.367
 11.379 l 6.367 11.387 l 6.348 11.516 6.234 11.609 6.105 11.609 c 4.195 
11.609 l 4.148 11.609 4.109 11.562 4.117 11.516 c 4.273 10.527 l h
4.906 6.613 m f
Q Q
showpage
%%Trailer
%%EOF
