%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 6 0 47 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 6 0 47 48
48 48 cairo_set_page_size
%%EndPageSetup
q 6 0 41 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42.18 11.141 m 42.539 7.926 41.902 5.645 40.074 3.562 c 37.883 1.066 33.938
 0 28.879 0 c 14.203 0 l 13.172 0 12.293 0.75 12.129 1.77 c 6.016 40.527
 l 5.957 40.891 6.062 41.262 6.301 41.543 c 6.539 41.824 6.891 41.984 7.262
 41.984 c 15.531 41.984 l 14.926 45.824 l 14.922 45.824 l 14.836 46.367 
14.992 46.922 15.352 47.344 c 15.707 47.762 16.23 48.004 16.781 48.004 c
 24.422 48.004 l 25.707 48.004 26.801 47.074 27.008 45.812 c 27.082 45.422
 l 28.523 36.293 l 28.613 35.801 l 28.617 35.781 l 28.613 35.777 l 28.691
 35.262 29.137 34.883 29.656 34.887 c 30.797 34.887 l 34.594 34.887 38.07
 34.117 40.832 32.156 c 41.973 31.352 42.965 30.344 43.812 29.141 c 45.211
 27.191 46.117 24.934 46.453 22.559 c 47.18 18.82 46.844 15.492 44.742 13.098
 c 44.742 13.094 l 44.094 12.375 43.32 11.773 42.461 11.324 c h
19.629 26.461 m 19.926 26.305 20.258 26.223 20.594 26.223 c 24.898 26.223
 l 33.359 26.223 39.98 22.789 41.914 12.855 c 41.922 12.809 l 42.574 13.18
 43.121 13.617 43.566 14.121 c 45.203 15.988 45.602 18.727 44.918 22.25 
c 44.102 26.441 42.32 29.172 39.93 30.871 c 37.523 32.582 34.402 33.316 
30.801 33.316 c 29.66 33.316 l 28.371 33.312 27.273 34.246 27.07 35.52 c
 26.98 36.012 l 25.539 45.141 l 25.469 45.531 l 25.465 45.543 l 25.469 45.543
 l 25.387 46.055 24.941 46.434 24.422 46.43 c 16.785 46.43 l 16.691 46.43
 16.602 46.391 16.543 46.32 c 16.48 46.25 16.453 46.152 16.469 46.062 c 
17.094 42.102 l h
19.629 26.461 m f
Q Q
showpage
%%Trailer
%%EOF
