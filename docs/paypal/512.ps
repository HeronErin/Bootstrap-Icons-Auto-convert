%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:05 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 47 0 375 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 47 0 375 384
384 384 cairo_set_page_size
%%EndPageSetup
q 47 0 328 384 rectclip
1 0 0 -1 0 384 cm q
0 g
337.441 89.113 m 340.32 63.41 335.211 45.145 320.594 28.488 c 303.07 8.543
 271.488 0 231.023 0 c 113.617 0 l 109.621 0 105.754 1.43 102.715 4.023 
c 99.676 6.617 97.66 10.211 97.031 14.16 c 48.121 324.215 l 47.656 327.129
 48.492 330.102 50.41 332.344 c 52.324 334.59 55.129 335.883 58.078 335.879
 c 124.223 335.879 l 119.375 366.598 l 119.375 366.602 l 118.688 370.953
 119.941 375.391 122.801 378.738 c 125.664 382.09 129.848 384.023 134.258
 384.023 c 195.359 384.023 l 205.656 384.023 214.391 376.582 216.047 366.48
 c 216.648 363.359 l 228.168 290.328 l 228.887 286.391 l 228.91 286.223 
l 229.543 282.105 233.098 279.07 237.266 279.098 c 246.387 279.098 l 276.77
 279.098 304.586 272.953 326.668 257.258 c 335.789 250.809 343.73 242.77
 350.5 233.137 c 350.496 233.137 l 361.695 217.543 368.945 199.469 371.617
 180.457 c 377.426 150.555 374.738 123.914 357.938 104.762 c 352.754 98.984
 346.574 94.191 339.695 90.602 c 337.438 89.137 l h
157.031 211.68 m 159.41 210.441 162.055 209.793 164.734 209.785 c 199.199
 209.785 l 266.879 209.785 319.848 182.328 335.328 102.84 c 335.398 102.457
 l 340.613 105.434 345 108.938 348.551 112.969 c 361.656 127.922 364.848
 149.809 359.352 178.008 c 352.824 211.535 338.566 233.375 319.441 246.984
 c 300.195 260.664 275.234 266.543 246.41 266.543 c 237.289 266.543 l 232.301
 266.523 227.469 268.289 223.672 271.52 c 219.871 274.75 217.355 279.234
 216.574 284.16 c 215.855 288.098 l 204.336 361.129 l 203.762 364.25 l 203.738
 364.348 l 203.734 364.344 l 203.094 368.453 199.543 371.473 195.383 371.449
 c 134.281 371.449 l 133.531 371.449 132.82 371.125 132.336 370.555 c 131.852
 369.988 131.641 369.234 131.762 368.496 c 136.754 336.816 l h
157.031 211.68 m f
Q Q
showpage
%%Trailer
%%EOF
