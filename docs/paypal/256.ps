%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 23 0 188 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 23 0 188 192
192 192 cairo_set_page_size
%%EndPageSetup
q 23 0 165 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168.719 44.555 m 170.16 31.703 167.602 22.57 160.293 14.242 c 151.535 4.273
 135.742 0 115.512 0 c 56.809 0 l 52.68 0 49.164 3.004 48.516 7.078 c 24.059
 162.109 l 23.828 163.566 24.246 165.051 25.203 166.172 c 26.164 167.293
 27.566 167.941 29.039 167.941 c 62.109 167.941 l 59.684 183.301 l 59.688
 183.301 l 59.344 185.477 59.969 187.695 61.402 189.371 c 62.832 191.047
 64.926 192.012 67.129 192.012 c 97.68 192.012 l 102.828 192.012 107.195
 188.293 108.023 183.238 c 108.324 181.68 l 114.086 145.164 l 114.445 143.195
 l 114.457 143.109 l 114.457 143.113 l 114.77 141.051 116.547 139.535 118.633
 139.547 c 123.191 139.547 l 138.383 139.547 152.293 136.477 163.332 128.625
 c 167.891 125.402 171.863 121.383 175.246 116.566 c 180.848 108.773 184.473
 99.734 185.809 90.227 c 188.711 75.273 187.367 61.953 178.969 52.379 c 
176.375 49.492 173.289 47.094 169.848 45.301 c 168.719 44.57 l h
78.516 105.84 m 79.707 105.223 81.027 104.895 82.367 104.891 c 99.602 104.891
 l 133.441 104.891 159.926 91.164 167.664 51.418 c 167.699 51.227 l 170.309
 52.715 172.5 54.465 174.273 56.484 c 180.824 63.961 182.422 74.906 179.672
 89.004 c 176.406 105.77 169.281 116.688 159.715 123.492 c 150.09 130.332
 137.609 133.273 123.199 133.273 c 118.641 133.273 l 118.645 133.273 l 113.492
 133.25 109.094 136.992 108.289 142.078 c 107.93 144.047 l 102.168 180.562
 l 101.879 182.121 l 101.867 182.168 l 101.867 182.172 l 101.547 184.227
 99.77 185.738 97.691 185.723 c 67.141 185.723 l 66.766 185.727 66.41 185.562
 66.168 185.277 c 65.926 184.992 65.82 184.617 65.879 184.246 c 68.375 168.406
 l h
78.516 105.84 m f
Q Q
showpage
%%Trailer
%%EOF
