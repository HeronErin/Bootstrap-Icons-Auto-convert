%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 12 0 94 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 12 0 94 96
96 96 cairo_set_page_size
%%EndPageSetup
q 12 0 82 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84.359 22.277 m 85.078 15.852 83.801 11.285 80.148 7.121 c 75.77 2.137 
67.871 0 57.758 0 c 28.402 0 l 26.34 0 24.582 1.5 24.258 3.539 c 12.031 
81.055 l 11.914 81.781 12.125 82.523 12.602 83.086 c 13.082 83.648 13.781
 83.969 14.52 83.969 c 31.055 83.969 l 29.844 91.648 l 29.672 92.738 29.984
 93.848 30.699 94.684 c 31.414 95.523 32.461 96.004 33.562 96.008 c 48.84
 96.008 l 51.414 96.008 53.598 94.148 54.012 91.621 c 54.16 90.84 l 57.039
 72.582 l 57.219 71.598 l 57.227 71.555 l 57.387 70.527 58.273 69.77 59.316
 69.773 c 61.598 69.773 l 69.195 69.773 76.148 68.238 81.668 64.312 c 83.949
 62.699 85.934 60.691 87.625 58.281 c 87.625 58.285 l 90.426 54.387 92.234
 49.867 92.902 45.113 c 94.355 37.637 93.684 30.977 89.48 26.188 c 89.484
 26.191 l 88.188 24.746 86.645 23.547 84.926 22.648 c 84.363 22.281 l h
39.258 52.922 m 39.852 52.609 40.512 52.449 41.184 52.445 c 49.801 52.445
 l 66.723 52.445 79.961 45.582 83.832 25.711 c 83.852 25.613 l 85.156 26.355
 86.25 27.234 87.141 28.242 c 90.418 31.98 91.215 37.453 89.84 44.504 c 
88.207 52.887 84.645 58.348 79.863 61.746 c 75.051 65.168 68.812 66.637 
61.605 66.637 c 59.32 66.637 l 56.746 66.625 54.547 68.496 54.145 71.039
 c 53.965 72.023 l 51.086 90.281 l 50.941 91.062 l 50.934 91.086 l 50.773
 92.113 49.887 92.867 48.848 92.863 c 33.57 92.863 l 33.383 92.863 33.207
 92.781 33.086 92.641 c 32.961 92.496 32.91 92.309 32.941 92.125 c 34.188
 84.203 l h
39.258 52.922 m f
Q Q
showpage
%%Trailer
%%EOF
