%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.273 1.391 m 5.32 0.988 5.238 0.703 5.012 0.445 c 4.734 0.133 4.242 0 
3.609 0 c 1.773 0 l 1.645 0 1.535 0.094 1.516 0.223 c 0.75 5.066 l 0.738
 5.16 0.812 5.25 0.906 5.25 c 1.941 5.25 l 1.867 5.73 l 1.867 5.727 l 1.855
 5.797 1.875 5.867 1.918 5.918 c 1.965 5.969 2.027 6 2.098 6 c 3.051 6 l
 3.211 6 3.348 5.883 3.375 5.727 c 3.383 5.68 l 3.562 4.539 l 3.574 4.477
 l 3.574 4.473 l 3.578 4.473 l 3.586 4.406 3.641 4.359 3.707 4.359 c 3.848
 4.359 l 4.324 4.359 4.758 4.262 5.102 4.02 c 5.242 3.918 5.367 3.793 5.473
 3.645 c 5.477 3.645 l 5.652 3.398 5.766 3.117 5.805 2.82 c 5.895 2.352 
5.852 1.938 5.59 1.637 c 5.594 1.637 l 5.512 1.547 5.414 1.473 5.309 1.414
 c h
2.453 3.309 m 2.492 3.289 2.531 3.277 2.574 3.277 c 3.113 3.277 l 4.172
 3.277 5 2.848 5.242 1.605 c 5.242 1.598 l 5.324 1.645 5.391 1.699 5.449
 1.762 c 5.652 1.996 5.703 2.336 5.617 2.777 c 5.516 3.301 5.293 3.641 4.992
 3.855 c 4.691 4.07 4.301 4.16 3.852 4.16 c 3.711 4.16 l 3.707 4.164 l 3.547
 4.164 3.41 4.281 3.383 4.441 c 3.371 4.504 l 3.191 5.645 l 3.184 5.691 
l 3.172 5.758 3.117 5.805 3.055 5.805 c 2.098 5.805 l 2.074 5.805 2.055 
5.781 2.059 5.758 c 2.137 5.262 l h
2.453 3.309 m f
Q Q
showpage
%%Trailer
%%EOF
