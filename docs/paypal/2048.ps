%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 191 0 1498 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 191 0 1498 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 191 0 1307 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1349.762 356.449 m 1361.281 253.633 1340.832 180.578 1282.371 113.953 c
 1212.289 34.176 1085.953 0 924.098 0 c 454.465 0 l 438.477 0.008 423.016
 5.715 410.859 16.094 c 398.699 26.477 390.641 40.852 388.129 56.641 c 192.48
 1296.863 l 190.625 1308.52 193.973 1320.406 201.637 1329.383 c 209.301 
1338.359 220.516 1343.527 232.32 1343.52 c 496.895 1343.52 l 477.504 1466.398
 l 474.754 1483.812 479.762 1501.555 491.207 1514.961 c 502.656 1528.363
 519.395 1536.086 537.023 1536.098 c 781.441 1536.098 l 822.625 1536.098
 857.57 1506.336 864.195 1465.922 c 866.594 1453.441 l 912.672 1161.312 
l 915.551 1145.57 l 915.648 1144.898 l 915.648 1144.895 l 916.867 1136.926
 920.914 1129.66 927.047 1124.426 c 933.184 1119.191 940.992 1116.336 949.055
 1116.383 c 985.535 1116.383 l 1107.07 1116.383 1218.336 1091.809 1306.656
 1029.023 c 1343.137 1003.23 1374.914 971.07 1401.984 932.543 c 1446.789
 870.18 1475.781 797.867 1486.465 721.824 c 1509.695 602.207 1498.945 495.648
 1431.746 419.039 c 1431.742 419.039 l 1411.012 395.945 1386.301 376.758
 1358.785 362.398 c 1349.762 356.543 l h
628.129 846.719 m 637.648 841.77 648.215 839.168 658.945 839.137 c 796.801
 839.137 l 1067.52 839.137 1279.395 729.312 1341.312 411.359 c 1341.602 
409.824 l 1362.465 421.727 1380 435.746 1394.211 451.871 c 1446.625 511.68
 1459.395 599.23 1437.41 712.031 c 1411.297 846.145 1354.273 933.504 1277.762
 987.934 c 1200.77 1042.652 1100.93 1066.172 985.633 1066.172 c 949.152 
1066.172 l 949.152 1066.176 l 929.203 1066.09 909.883 1073.148 894.688 1086.074
 c 879.492 1099 869.422 1116.938 866.305 1136.641 c 863.426 1152.383 l 817.348
 1444.512 l 815.043 1456.992 l 814.945 1457.375 l 813.703 1465.328 809.648
 1472.57 803.516 1477.785 c 797.383 1483 789.586 1485.844 781.535 1485.793
 c 537.121 1485.793 l 534.129 1485.801 531.285 1484.496 529.344 1482.223
 c 527.402 1479.949 526.559 1476.938 527.039 1473.984 c 547.008 1347.266
 l h
628.129 846.719 m f
Q Q
showpage
%%Trailer
%%EOF
