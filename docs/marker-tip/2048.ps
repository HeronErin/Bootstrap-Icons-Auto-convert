%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 768 m 1536 971.688 1455.086 1167.031 1311.059 1311.059 c 1167.031 
1455.086 971.688 1536 768 1536 c 564.312 1536 368.969 1455.086 224.941 1311.059
 c 80.914 1167.031 0 971.688 0 768 c 0 564.312 80.914 368.969 224.941 224.941
 c 368.969 80.914 564.312 0 768 0 c 971.688 0 1167.031 80.914 1311.059 224.941
 c 1455.086 368.969 1536 564.312 1536 768 c 1104 1350.145 m 981.023 899.328
 l 978.242 889.168 972.195 880.203 963.816 873.82 c 955.438 867.434 945.191
 863.984 934.656 864 c 601.344 864 l 590.809 863.984 580.562 867.434 572.184
 873.82 c 563.805 880.203 557.758 889.168 554.977 899.328 c 432.098 1350.145
 l 534.188 1409.172 650.07 1440.172 768 1440 c 890.398 1440 1005.121 1407.359
 1104 1350.145 c 1187.809 1292.738 m 1187.809 1292.734 l 1296.539 1205.746
 1375.562 1087.129 1413.953 953.277 c 1452.348 819.426 1448.207 676.957 
1402.117 545.559 c 1356.023 414.16 1270.25 300.328 1156.652 219.793 c 1043.055
 139.258 907.246 96.004 768 96.004 c 628.754 96.004 492.945 139.258 379.348
 219.793 c 265.75 300.328 179.977 414.16 133.883 545.559 c 87.793 676.957
 83.652 819.426 122.047 953.277 c 160.438 1087.129 239.461 1205.746 348.191
 1292.734 c 462.43 874.176 l 462.434 874.176 l 470.137 845.855 486.309 820.566
 508.785 801.691 c 531.262 782.82 558.965 771.266 588.191 768.574 c 699.07
 398.879 l 719.52 330.43 816.477 330.43 836.926 398.879 c 947.902 768.574
 l 977.129 771.266 1004.836 782.82 1027.312 801.691 c 1049.789 820.566 1065.961
 845.855 1073.664 874.176 c h
1187.809 1292.738 m f
Q Q
showpage
%%Trailer
%%EOF
