%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:21:07 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 192 1536 1344
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 192 1536 1344
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 192 1536 1152 rectclip
1 0 0 -1 0 1536 cm q
0 g
960 1200 m 960 1212.73 954.941 1224.938 945.941 1233.941 c 936.938 1242.941
 924.73 1248 912 1248 c 144 1248 l 131.27 1248 119.062 1242.941 110.059 
1233.941 c 101.059 1224.938 96 1212.73 96 1200 c 96 336 l 96 323.27 101.059
 311.062 110.059 302.059 c 119.062 293.059 131.27 288 144 288 c 912 288 
l 924.73 288 936.938 293.059 945.941 302.059 c 954.941 311.062 960 323.27
 960 336 c 960 528 l 960 545.148 969.148 560.996 984 569.57 c 998.852 578.145
 1017.148 578.145 1032 569.57 c 1046.852 560.996 1056 545.148 1056 528 c
 1056 336 l 1056 297.809 1040.828 261.184 1013.824 234.176 c 986.816 207.172
 950.191 192 912 192 c 144 192 l 105.809 192 69.184 207.172 42.176 234.176
 c 15.172 261.184 0 297.809 0 336 c 0 1200 l 0 1238.191 15.172 1274.816 
42.176 1301.824 c 69.184 1328.828 105.809 1344 144 1344 c 912 1344 l 950.191
 1344 986.816 1328.828 1013.824 1301.824 c 1040.828 1274.816 1056 1238.191
 1056 1200 c 1056 1008 l 1056 990.852 1046.852 975.004 1032 966.43 c 1017.148
 957.855 998.852 957.855 984 966.43 c 969.148 975.004 960 990.852 960 1008
 c h
960 1200 m f*
1521.984 801.984 m 1531.012 792.98 1536.086 780.75 1536.086 768 c 1536.086
 755.25 1531.012 743.02 1521.984 734.016 c 1233.984 446.016 l 1221.844 433.875
 1204.145 429.133 1187.562 433.578 c 1170.977 438.02 1158.02 450.977 1153.578
 467.562 c 1149.133 484.145 1153.875 501.844 1166.016 513.984 c 1372.129
 720 l 528 720 l 510.852 720 495.004 729.148 486.43 744 c 477.855 758.852
 477.855 777.148 486.43 792 c 495.004 806.852 510.852 816 528 816 c 1372.129
 816 l 1166.016 1022.016 l 1153.875 1034.156 1149.133 1051.855 1153.578 
1068.438 c 1158.02 1085.023 1170.977 1097.98 1187.562 1102.422 c 1204.145
 1106.867 1221.844 1102.125 1233.984 1089.984 c h
1521.984 801.984 m f*
Q Q
showpage
%%Trailer
%%EOF
