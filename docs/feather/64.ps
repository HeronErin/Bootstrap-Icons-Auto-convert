%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:48 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 48 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 48 48 rectclip
1 0 0 -1 0 48 cm q
0 g
47.422 1.594 m 46.898 1.062 46.191 0.727 45.5 0.504 c 44.688 0.262 43.848
 0.109 43.004 0.055 c 41.145 -0.094 38.82 0.055 36.246 0.578 c 31.094 1.637
 24.793 4.246 18.945 9.301 c 13.098 14.355 9.441 20.473 7.672 25.57 c 6.789
 28.109 6.352 30.473 6.387 32.375 c 6.402 33.324 6.535 34.234 6.848 35.016
 c 6.898 35.137 6.953 35.258 7.016 35.383 c 7.016 35.379 l 4.652 38.715 
2.395 42.121 0.238 45.594 c -0.211 46.324 -0.004 47.277 0.711 47.754 c 1.055
 47.977 1.473 48.051 1.871 47.961 c 2.27 47.871 2.613 47.621 2.824 47.273
 c 4.891 43.953 7.047 40.691 9.301 37.492 c 10.156 37.914 11.148 38.078 
12.176 38.039 c 13.715 37.98 15.469 37.477 17.344 36.57 c 21.094 34.754 
25.574 31.211 30.254 25.645 c 34.809 20.996 l 34.805 20.992 l 35.406 20.375
 35.406 19.395 34.805 18.777 c 32.617 16.547 l 36.551 17.176 l 36.551 17.172
 l 37.043 17.25 37.539 17.082 37.883 16.723 c 39.871 14.672 l 41.859 12.633
 43.746 10.695 45.16 8.996 c 46.102 7.863 46.914 6.738 47.422 5.676 c 47.91
 4.641 48.258 3.355 47.758 2.113 c 47.758 2.109 l 47.684 1.914 47.566 1.738
 47.422 1.594 c 11.199 34.859 m 16.156 28.121 21.719 21.645 27.926 16.184
 c 31.555 19.887 l 28.043 23.477 l 27.961 23.566 l 23.461 28.934 19.289 
32.168 16.031 33.746 c 14.398 34.535 13.062 34.879 12.059 34.918 c 12.059
 34.91 l 11.773 34.926 11.484 34.906 11.199 34.855 c h
31.508 13.199 m 35.438 10.113 39.609 7.457 44.023 5.398 c 43.648 5.941 
43.246 6.465 42.82 6.969 c 41.496 8.566 39.734 10.371 37.777 12.379 c 36.246
 13.949 l h
41.547 3.129 m 28.781 9.441 18.137 20.398 9.445 32.035 c 9.465 30.645 9.809
 28.777 10.555 26.617 c 12.152 22.012 15.504 16.371 20.918 11.688 c 26.34
 7.004 32.156 4.609 36.848 3.648 c 36.852 3.648 l 38.395 3.32 39.965 3.148
 41.543 3.129 c f
Q Q
showpage
%%Trailer
%%EOF
