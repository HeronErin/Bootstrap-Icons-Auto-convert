%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:47 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.926 0.199 m 5.859 0.133 5.773 0.09 5.688 0.062 c 5.586 0.031 5.48 0.016
 5.375 0.008 c 5.141 -0.012 4.852 0.008 4.531 0.074 c 3.887 0.203 3.098 
0.531 2.367 1.164 c 1.637 1.793 1.18 2.559 0.957 3.195 c 0.848 3.512 0.793
 3.809 0.797 4.047 c 0.797 4.164 0.816 4.281 0.855 4.375 c 0.863 4.391 0.867
 4.406 0.875 4.422 c 0.582 4.84 0.301 5.266 0.031 5.699 c -0.027 5.789 0
 5.91 0.09 5.969 c 0.18 6.027 0.297 6 0.352 5.91 c 0.609 5.492 0.883 5.086
 1.164 4.688 c 1.27 4.742 1.395 4.762 1.523 4.754 c 1.715 4.746 1.934 4.684
 2.168 4.57 c 2.637 4.344 3.195 3.898 3.781 3.203 c 4.352 2.621 l 4.352 
2.625 l 4.426 2.547 4.426 2.426 4.352 2.348 c 4.078 2.07 l 4.57 2.148 l 
4.629 2.156 4.691 2.137 4.734 2.09 c 4.984 1.832 l 5.234 1.578 5.469 1.336
 5.645 1.121 c 5.762 0.98 5.863 0.84 5.926 0.707 c 5.988 0.578 6.031 0.418
 5.969 0.262 c 5.961 0.238 5.945 0.219 5.926 0.199 c 1.398 4.359 m 2.02 
3.516 2.715 2.707 3.492 2.023 c 3.945 2.484 l 3.508 2.934 l 3.496 2.945 
l 2.934 3.617 2.41 4.02 2.004 4.219 c 1.801 4.316 1.633 4.359 1.508 4.363
 c 1.473 4.367 1.434 4.363 1.398 4.355 c h
3.938 1.652 m 4.43 1.266 4.949 0.934 5.504 0.676 c 5.457 0.742 5.406 0.809
 5.352 0.871 c 5.188 1.07 4.965 1.297 4.723 1.547 c 4.531 1.742 l h
5.191 0.395 m 3.598 1.18 2.266 2.551 1.18 4.004 c 1.184 3.828 1.227 3.598
 1.32 3.328 c 1.52 2.754 1.938 2.047 2.617 1.461 c 3.293 0.875 4.023 0.574
 4.609 0.457 c 4.605 0.457 l 4.801 0.414 4.996 0.395 5.191 0.391 c f
Q Q
showpage
%%Trailer
%%EOF
