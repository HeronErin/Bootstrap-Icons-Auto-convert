%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:49 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
189.684 6.371 m 187.594 4.246 184.762 2.902 182.004 2.016 c 178.75 1.047
 175.398 0.441 172.008 0.215 c 164.566 -0.375 155.281 0.215 144.984 2.316
 c 124.379 6.539 99.168 16.98 75.781 37.199 c 52.391 57.422 37.766 81.887
 30.684 102.277 c 27.156 112.441 25.402 121.887 25.535 129.492 c 25.594 
133.285 26.137 136.934 27.383 140.051 c 27.582 140.539 27.809 141.027 28.055
 141.516 c 18.617 154.863 9.582 168.488 0.961 182.375 c -0.844 185.293 -0.012
 189.113 2.844 191.016 c 4.215 191.906 5.887 192.207 7.48 191.844 c 9.074
 191.48 10.453 190.492 11.305 189.098 c 19.559 175.809 28.195 162.766 37.199
 149.977 c 40.621 151.668 44.59 152.316 48.695 152.16 c 54.852 151.922 61.871
 149.902 69.371 146.281 c 84.371 139.02 102.301 124.836 121.008 102.578 
c 139.223 83.977 l 141.625 81.508 141.625 77.578 139.223 75.109 c 130.477
 66.18 l 146.207 68.688 l 148.168 69.004 150.16 68.332 151.523 66.887 c 
159.48 58.68 l 167.438 50.52 174.984 42.781 180.637 35.977 c 184.406 31.441
 187.656 26.953 189.684 22.691 c 191.641 18.551 193.02 13.414 191.027 8.434
 c 191.027 8.438 l 190.727 7.664 190.27 6.961 189.684 6.371 c 44.797 139.441
 m 64.621 112.488 86.879 86.578 111.707 64.727 c 126.227 79.535 l 112.176
 93.887 l 111.852 94.246 l 93.852 115.715 77.16 128.648 64.129 134.961 c
 57.602 138.117 52.25 139.496 48.242 139.641 c 48.238 139.645 l 47.086 139.699
 45.934 139.629 44.797 139.43 c h
126.023 52.801 m 141.742 40.465 158.422 29.832 176.086 21.602 c 176.09 
21.602 l 174.586 23.766 172.984 25.859 171.289 27.875 c 165.984 34.27 158.953
 41.484 151.117 49.523 c 144.996 55.812 l h
166.176 12.516 m 115.129 37.766 72.539 81.602 37.789 128.137 c 37.875 122.57
 39.242 115.105 42.23 106.465 c 48.625 88.043 62.031 65.484 83.691 46.754
 c 105.375 28.023 128.645 18.434 147.41 14.594 c 147.406 14.594 l 153.582
 13.285 159.867 12.59 166.176 12.516 c f
Q Q
showpage
%%Trailer
%%EOF
