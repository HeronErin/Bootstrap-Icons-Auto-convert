%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 0 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 0 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 0 1536 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
1517.473 50.977 m 1500.77 33.984 1478.113 23.234 1456.031 16.129 c 1429.996
 8.363 1403.172 3.535 1376.062 1.727 c 1316.543 -2.977 1242.238 1.727 1159.871
 18.527 c 995.039 52.32 793.344 135.84 606.238 297.602 c 419.137 459.359
 302.113 655.105 245.473 818.207 c 217.25 899.52 203.234 975.07 204.289 
1035.934 c 204.77 1066.27 209.09 1095.453 219.074 1120.414 c 220.676 1124.316
 222.465 1128.223 224.449 1132.125 c 224.449 1132.129 l 148.934 1238.891
 76.645 1347.902 7.68 1459.008 c 0.734 1470.234 -1.574 1483.719 1.238 1496.617
 c 4.051 1509.512 11.766 1520.812 22.754 1528.129 c 33.711 1535.254 47.09
 1537.645 59.84 1534.75 c 72.586 1531.855 83.621 1523.93 90.434 1512.77 
c 156.473 1406.484 225.559 1302.121 297.602 1199.809 c 324.961 1213.344 
356.738 1218.527 389.57 1217.281 c 438.816 1215.359 494.977 1199.234 554.977
 1170.242 c 674.977 1112.164 818.402 998.691 968.066 820.609 c 1113.793 
671.809 l 1123.027 662.309 1128.195 649.586 1128.195 636.336 c 1128.195 
623.086 1123.027 610.363 1113.793 600.863 c 1043.809 529.438 l 1169.664 
549.5 l 1169.664 549.504 l 1185.348 552.039 1201.273 546.648 1212.191 535.105
 c 1275.84 469.441 l 1339.488 404.16 1399.871 342.242 1445.086 287.809 c
 1475.23 251.52 1501.246 215.617 1517.469 181.535 c 1533.117 148.414 1544.156
 107.328 1528.223 67.488 c 1525.82 61.301 1522.16 55.676 1517.473 50.977
 c 358.367 1115.52 m 516.961 899.902 695.039 692.641 893.664 517.824 c 1009.824
 636.289 l 897.41 751.105 l 894.816 753.984 l 750.816 925.727 617.281 1029.215
 513.023 1079.711 c 460.801 1104.957 417.984 1116 385.918 1117.152 c 385.922
 1117.152 l 376.699 1117.598 367.461 1117.016 358.367 1115.426 c h
1008.191 422.398 m 1133.953 323.711 1267.391 238.656 1408.703 172.797 c
 1408.703 172.801 l 1396.699 190.129 1383.883 206.883 1370.305 223.008 c
 1327.871 274.176 1271.617 331.871 1208.93 396.191 c 1159.969 446.496 l 
h
1329.406 100.125 m 921.023 302.113 580.32 652.801 302.305 1025.09 c 302.977
 980.547 313.922 920.832 337.824 851.715 c 388.992 704.355 496.223 523.875
 669.504 374.02 c 842.977 224.164 1029.121 147.461 1179.266 116.738 c 1179.266
 116.734 l 1228.645 106.281 1278.938 100.715 1329.406 100.129 c f
Q Q
showpage
%%Trailer
%%EOF
