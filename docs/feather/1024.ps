%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
758.734 25.488 m 750.383 16.992 739.055 11.617 728.016 8.062 c 714.996 
4.184 701.586 1.766 688.031 0.863 c 658.27 -1.488 621.121 0.863 579.934 
9.262 c 497.52 26.16 396.672 67.922 303.121 148.801 c 209.566 229.68 151.055
 327.551 122.734 409.105 c 108.621 449.762 101.613 487.539 102.141 517.969
 c 102.379 533.137 104.539 547.73 109.531 560.207 c 110.332 562.16 111.227
 564.109 112.219 566.062 c 112.223 566.062 l 74.469 619.445 38.324 673.949
 3.84 729.504 c 0.367 735.117 -0.789 741.859 0.617 748.309 c 2.023 754.758
 5.883 760.406 11.375 764.062 c 16.855 767.629 23.543 768.82 29.918 767.375
 c 36.293 765.93 41.812 761.965 45.215 756.383 c 78.238 703.242 112.781 
651.059 148.801 599.902 c 162.48 606.672 178.367 609.262 194.785 608.637
 c 219.41 607.676 247.488 599.613 277.488 585.117 c 337.488 556.078 409.199
 499.34 484.031 410.301 c 556.895 335.902 l 561.516 331.156 564.098 324.793
 564.098 318.168 c 564.098 311.543 561.516 305.18 556.895 300.434 c 521.902
 264.723 l 584.832 274.754 l 592.676 276.02 600.637 273.324 606.098 267.551
 c 637.922 234.719 l 669.746 202.078 699.938 171.117 722.547 143.902 c 737.617
 125.758 750.625 107.805 758.738 90.766 c 766.562 74.207 772.082 53.66 764.113
 33.742 c 762.91 30.648 761.078 27.84 758.734 25.488 c 179.184 557.762 m
 258.48 449.953 347.52 346.32 446.832 258.91 c 504.91 318.141 l 448.703 
375.547 l 447.406 376.988 l 375.406 462.859 308.637 514.605 256.512 539.852
 c 230.398 552.477 208.992 557.996 192.961 558.57 c 192.961 558.574 l 188.352
 558.797 183.73 558.508 179.184 557.711 c h
504.094 211.203 m 566.973 161.859 633.695 119.332 704.352 86.402 c 704.352
 86.398 l 698.348 95.066 691.941 103.441 685.152 111.504 c 663.938 137.09
 635.809 165.938 604.465 198.098 c 579.984 223.25 l h
664.703 50.066 m 460.512 151.055 290.16 326.398 151.152 512.543 c 151.488
 490.27 156.961 460.414 168.914 425.855 c 194.5 352.176 248.113 261.934 
334.754 187.008 c 421.488 112.078 514.562 73.727 589.633 58.367 c 614.324
 53.141 639.469 50.359 664.703 50.062 c f
Q Q
showpage
%%Trailer
%%EOF
