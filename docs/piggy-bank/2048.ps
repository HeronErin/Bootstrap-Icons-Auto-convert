%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 9 189 1536 1390
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 9 189 1536 1390
1536 1536 cairo_set_page_size
%%EndPageSetup
q 9 189 1527 1201 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 600 m 480 625.723 466.277 649.492 444 662.355 c 421.723 675.215 394.277
 675.215 372 662.355 c 349.723 649.492 336 625.723 336 600 c 336 574.277
 349.723 550.508 372 537.645 c 394.277 524.785 421.723 524.785 444 537.645
 c 466.277 550.508 480 574.277 480 600 c 589.246 456.383 m 646.25 440.094
 705.258 431.887 764.543 432 c 828.48 432 889.633 441.312 946.27 458.207
 c 946.273 458.207 l 962.574 462.703 980.035 458.293 992.246 446.594 c 1004.453
 434.895 1009.605 417.633 1005.809 401.156 c 1002.012 384.68 989.824 371.414
 973.727 366.238 c 905.836 346.059 835.371 335.875 764.543 336 c 694.078
 336 626.207 345.887 562.75 364.031 c 562.754 364.031 l 546.254 368.766 
533.535 381.941 529.387 398.594 c 525.238 415.246 530.285 432.848 542.633
 444.77 c 554.98 456.691 572.75 461.117 589.246 456.383 c f
764.543 146.594 m 478.75 146.594 229.727 310.18 157.824 542.594 c 105.023
 542.594 l 76.695 542.625 49.824 555.168 31.605 576.863 c 13.391 598.559
 5.688 627.195 10.559 655.105 c 34.941 795.266 l 34.945 795.266 l 40.754
 828.68 58.172 858.969 84.129 880.801 c 110.086 902.629 142.918 914.598 
176.832 914.594 c 202.078 914.594 l 230.879 963.84 268.125 1008.48 312 1047.266
 c 242.016 1285.059 l 242.016 1285.055 l 237.75 1299.574 240.578 1315.25
 249.645 1327.363 c 258.715 1339.477 272.965 1346.602 288.098 1346.594 c
 480.098 1346.594 l 490 1346.594 499.664 1343.531 507.758 1337.824 c 515.852
 1332.117 521.984 1324.047 525.312 1314.719 c 571.586 1185.023 l 632.547
 1201.633 697.348 1210.656 764.641 1210.656 c 832.512 1210.656 897.887 1201.535
 959.328 1184.543 c 1011.457 1316.254 l 1011.457 1316.258 l 1014.996 1325.207
 1021.148 1332.883 1029.109 1338.293 c 1037.07 1343.703 1046.473 1346.594
 1056.098 1346.594 c 1248.098 1346.594 l 1263.285 1346.578 1277.566 1339.375
 1286.609 1327.172 c 1295.652 1314.969 1298.387 1299.207 1293.984 1284.672
 c 1220.93 1044.098 l 1325.762 949.922 1392 821.664 1392 678.625 c 1392 
664.672 1391.359 650.883 1390.078 637.25 c 1415.133 626.691 1438.848 611.715
 1457.758 594.625 c 1487.996 624 1535.996 624 1535.996 554.594 c 1535.996
 576 1487.996 576 1491.738 552.098 c 1491.742 552.098 l 1495.719 544.363
 1498.625 536.129 1500.383 527.617 c 1504.973 505.016 1497.652 481.641 1480.992
 465.695 c 1472.348 456.785 1460.973 451.02 1448.676 449.316 c 1436.379 
447.609 1423.863 450.066 1413.121 456.289 c 1393.133 467.426 1379.73 487.508
 1377.121 510.238 c 1374.816 533.566 1384.992 556.316 1407.84 573.023 c 
1399.934 578.539 1391.621 583.445 1382.977 587.711 c 1331.711 331.969 1067.711
 146.59 764.543 146.59 c 241.535 600.961 m 285.215 402.625 497.566 242.594
 764.543 242.594 c 1066.559 242.594 1296 445.539 1296 678.625 c 1296 799.008
 1236.098 909.984 1135.68 990.434 c 1128.215 996.434 1122.719 1004.535 1119.898
 1013.688 c 1117.074 1022.84 1117.055 1032.629 1119.84 1041.793 c 1183.199
 1250.594 l 1088.641 1250.594 l 1032 1107.84 l 1027.441 1096.336 1018.613
 1087.039 1007.363 1081.887 c 996.109 1076.734 983.305 1076.129 971.617 
1080.191 c 908.16 1102.27 838.176 1114.656 764.547 1114.656 c 764.543 1114.656
 l 694.082 1114.762 624.098 1103.113 557.473 1080.191 c 545.516 1076.035
 532.402 1076.77 520.984 1082.238 c 509.566 1087.703 500.773 1097.457 496.512
 1109.375 c 446.113 1250.59 l 352.129 1250.59 l 412.898 1044.191 l 412.895
 1044.191 l 415.605 1034.996 415.5 1025.195 412.594 1016.059 c 409.684 1006.922
 404.105 998.867 396.574 992.93 c 345.215 953.172 303.148 902.684 273.312
 844.992 c 269.316 837.062 263.199 830.395 255.641 825.734 c 248.082 821.074
 239.375 818.602 230.496 818.594 c 176.734 818.594 l 165.445 818.578 154.523
 814.59 145.883 807.32 c 137.246 800.051 131.445 789.969 129.504 778.848
 c 105.121 638.688 l 194.688 638.688 l 205.629 638.68 216.234 634.934 224.754
 628.074 c 233.273 621.211 239.195 611.645 241.535 600.961 c 1453.152 518.688
 m 1451.355 525.957 1448.16 532.805 1443.742 538.848 c 1439.52 536.449 l
 1425.504 527.809 1424.449 519.648 1424.926 515.043 c 1424.93 515.039 l 
1425.941 508.078 1430.078 501.965 1436.16 498.434 c 1440.863 495.84 1443.84
 496.418 1447.008 499.586 c 1449.695 501.891 1451.691 504.898 1452.773 508.27
 c 1453.859 511.641 1453.988 515.246 1453.152 518.688 c f*
Q Q
showpage
%%Trailer
%%EOF
