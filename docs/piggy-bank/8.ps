%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
1.875 2.344 m 1.875 2.5 1.75 2.625 1.594 2.625 c 1.438 2.625 1.312 2.5 
1.312 2.344 c 1.312 2.188 1.438 2.062 1.594 2.062 c 1.75 2.062 1.875 2.188
 1.875 2.344 c 2.301 1.781 m 2.523 1.719 2.754 1.688 2.988 1.688 c 3.238
 1.688 3.477 1.723 3.699 1.789 c 3.695 1.789 l 3.934 1.855 4.035 1.504 3.805
 1.43 c 3.539 1.352 3.262 1.312 2.988 1.312 c 2.715 1.312 2.449 1.352 2.199
 1.422 c 1.957 1.492 2.062 1.852 2.301 1.781 c f
2.988 0.574 m 1.871 0.574 0.898 1.215 0.617 2.121 c 0.41 2.121 l 0.301 
2.121 0.195 2.168 0.125 2.254 c 0.051 2.34 0.023 2.449 0.043 2.559 c 0.137
 3.105 l 0.184 3.375 0.418 3.574 0.691 3.574 c 0.789 3.574 l 0.902 3.766
 1.047 3.941 1.219 4.094 c 0.945 5.023 l 0.945 5.02 l 0.91 5.141 1 5.262
 1.125 5.262 c 1.875 5.262 l 1.953 5.262 2.023 5.211 2.051 5.137 c 2.23 
4.629 l 2.469 4.695 2.723 4.73 2.984 4.73 c 3.25 4.73 3.504 4.695 3.746 
4.629 c 3.949 5.145 l 3.949 5.141 l 3.98 5.215 4.047 5.262 4.125 5.262 c
 4.875 5.262 l 5 5.262 5.09 5.137 5.055 5.02 c 4.77 4.078 l 5.18 3.711 5.438
 3.211 5.438 2.652 c 5.438 2.598 5.434 2.543 5.43 2.492 c 5.527 2.449 5.621
 2.391 5.695 2.324 c 5.812 2.438 6 2.438 6 2.168 c 6 2.25 5.812 2.25 5.828
 2.16 c 5.828 2.156 l 5.844 2.125 5.855 2.094 5.859 2.062 c 5.879 1.973 
5.852 1.883 5.785 1.82 c 5.715 1.746 5.605 1.73 5.52 1.781 c 5.441 1.824
 5.391 1.906 5.379 1.992 c 5.371 2.082 5.41 2.172 5.5 2.238 c 5.469 2.262
 5.438 2.277 5.402 2.297 c 5.203 1.297 4.172 0.574 2.988 0.574 c 0.945 2.348
 m 1.117 1.574 1.945 0.949 2.988 0.949 c 4.168 0.949 5.062 1.742 5.062 2.652
 c 5.062 3.121 4.828 3.555 4.438 3.871 c 4.438 3.867 l 4.375 3.918 4.352
 3.996 4.375 4.07 c 4.621 4.887 l 4.25 4.887 l 4.027 4.328 l 4.031 4.328
 l 3.996 4.234 3.891 4.188 3.797 4.219 c 3.551 4.305 3.277 4.352 2.988 4.352
 c 2.988 4.355 l 2.711 4.355 2.438 4.309 2.176 4.219 c 2.082 4.188 1.973
 4.238 1.941 4.332 c 1.746 4.883 l 1.379 4.883 l 1.617 4.078 l 1.613 4.078
 l 1.633 4.004 1.609 3.926 1.551 3.879 c 1.348 3.723 1.184 3.527 1.066 3.301
 c 1.035 3.238 0.973 3.199 0.898 3.199 c 0.688 3.199 l 0.691 3.199 l 0.598
 3.199 0.523 3.133 0.508 3.043 c 0.414 2.496 l 0.766 2.496 l 0.762 2.496
 l 0.848 2.496 0.926 2.434 0.945 2.348 c 5.68 2.027 m 5.676 2.027 l 5.668
 2.055 5.656 2.082 5.641 2.105 c 5.625 2.098 l 5.57 2.062 5.566 2.031 5.566
 2.016 c 5.566 2.012 l 5.57 1.984 5.586 1.961 5.609 1.945 c 5.629 1.934 
5.641 1.938 5.652 1.949 c 5.652 1.953 l 5.672 1.969 5.684 2 5.676 2.027 
c f*
Q Q
showpage
%%Trailer
%%EOF
