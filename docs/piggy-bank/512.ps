%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:24 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 2 47 384 348
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 2 47 384 348
384 384 cairo_set_page_size
%%EndPageSetup
q 2 47 382 301 rectclip
1 0 0 -1 0 384 cm q
0 g
120 150 m 120 156.43 116.57 162.375 111 165.59 c 105.43 168.805 98.57 168.805
 93 165.59 c 87.43 162.375 84 156.43 84 150 c 84 143.57 87.43 137.625 93
 134.41 c 98.57 131.195 105.43 131.195 111 134.41 c 116.57 137.625 120 143.57
 120 150 c 147.312 114.098 m 161.562 110.023 176.316 107.973 191.137 108
 c 207.121 108 222.41 110.328 236.57 114.551 c 236.566 114.551 l 242.863
 116.289 249.391 112.672 251.258 106.418 c 253.125 100.16 249.648 93.559
 243.434 91.559 c 226.461 86.516 208.844 83.969 191.137 84 c 173.52 84 156.551
 86.473 140.688 91.008 c 134.312 92.836 130.625 99.488 132.457 105.863 c
 134.285 112.238 140.938 115.926 147.312 114.098 c f
191.137 36.648 m 119.688 36.648 57.434 77.543 39.457 135.648 c 26.258 135.648
 l 19.172 135.656 12.457 138.793 7.902 144.215 c 3.348 149.641 1.422 156.801
 2.641 163.777 c 8.738 198.816 l 8.734 198.816 l 10.188 207.168 14.543 214.742
 21.031 220.199 c 27.523 225.656 35.73 228.648 44.207 228.648 c 50.52 228.648
 l 57.719 240.961 67.031 252.121 78 261.816 c 60.504 321.266 l 59.438 324.895
 60.145 328.812 62.41 331.84 c 64.68 334.867 68.242 336.648 72.023 336.648
 c 120.023 336.648 l 125.098 336.648 129.625 333.457 131.328 328.68 c 142.895
 296.254 l 158.133 300.406 174.336 302.66 191.16 302.66 c 208.129 302.66
 224.473 300.379 239.832 296.133 c 252.863 329.062 l 254.676 333.641 259.102
 336.648 264.023 336.648 c 312.023 336.648 l 315.82 336.645 319.391 334.844
 321.652 331.793 c 323.914 328.742 324.598 324.801 323.496 321.168 c 305.23
 261.023 l 331.441 237.48 348 205.414 348 169.656 c 348 166.168 347.84 162.719
 347.52 159.312 c 353.785 156.672 359.711 152.93 364.441 148.656 c 372 156
 384 156 384 138.648 c 384 144 372 144 372.938 138.023 c 373.93 136.09 374.656
 134.031 375.098 131.902 c 376.242 126.254 374.414 120.41 370.246 116.426
 c 365.801 111.84 358.805 110.871 353.281 114.07 c 348.281 116.855 344.934
 121.875 344.281 127.559 c 343.707 133.391 346.25 139.078 351.961 143.254
 c 351.961 143.258 l 349.984 144.633 347.906 145.863 345.742 146.93 c 332.926
 82.992 266.926 36.648 191.133 36.648 c 60.383 150.238 m 71.305 100.652 
124.391 60.645 191.137 60.645 c 266.641 60.645 324 111.379 324 169.652 c
 324 199.75 309.023 227.492 283.922 247.605 c 283.922 247.609 l 280.102 
250.68 278.535 255.762 279.961 260.449 c 295.801 312.648 l 272.16 312.648
 l 258 276.961 l 255.633 270.984 248.977 267.938 242.902 270.047 c 227.039
 275.566 209.543 278.664 191.133 278.664 c 191.137 278.664 l 173.52 278.691
 156.023 275.777 139.367 270.047 c 133.148 267.887 126.344 271.141 124.129
 277.344 c 111.527 312.648 l 88.031 312.648 l 103.223 261.047 l 104.609 
256.344 102.996 251.27 99.145 248.23 c 86.305 238.293 75.789 225.672 68.328
 211.246 c 66.289 207.203 62.152 204.652 57.625 204.648 c 44.184 204.648
 l 38.359 204.641 33.379 200.453 32.375 194.711 c 26.277 159.672 l 48.672
 159.672 l 54.305 159.668 59.18 155.742 60.383 150.238 c 363.285 129.672
 m 363.289 129.672 l 362.84 131.488 362.039 133.199 360.938 134.711 c 359.883
 134.109 l 356.379 131.949 356.113 129.91 356.234 128.758 c 356.23 128.762
 l 356.484 127.02 357.52 125.492 359.039 124.609 c 360.215 123.961 360.961
 124.105 361.75 124.898 c 361.754 124.895 l 363.121 126.074 363.715 127.918
 363.289 129.672 c f*
Q Q
showpage
%%Trailer
%%EOF
