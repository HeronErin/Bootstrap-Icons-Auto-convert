%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:30:22 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 1 12 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 1 12 11
12 12 cairo_set_page_size
%%EndPageSetup
q 0 1 12 10 rectclip
1 0 0 -1 0 12 cm q
0 g
3.75 4.688 m 3.75 5 3.5 5.25 3.188 5.25 c 2.875 5.25 2.625 5 2.625 4.688
 c 2.625 4.375 2.875 4.125 3.188 4.125 c 3.5 4.125 3.75 4.375 3.75 4.688
 c 4.602 3.566 m 5.051 3.438 5.512 3.375 5.973 3.375 c 6.473 3.375 6.949
 3.449 7.391 3.578 c 7.395 3.578 l 7.59 3.633 7.793 3.52 7.852 3.324 c 7.91
 3.129 7.801 2.922 7.605 2.859 c 7.078 2.703 6.527 2.625 5.973 2.625 c 5.422
 2.625 4.891 2.703 4.395 2.844 c 4.398 2.844 l 4.195 2.902 4.082 3.109 4.141
 3.309 c 4.195 3.508 4.402 3.621 4.602 3.566 c f
5.973 1.145 m 3.738 1.145 1.793 2.422 1.234 4.238 c 0.82 4.238 l 0.598 
4.238 0.391 4.336 0.246 4.508 c 0.105 4.676 0.043 4.898 0.082 5.117 c 0.273
 6.211 l 0.273 6.215 l 0.367 6.75 0.836 7.145 1.383 7.145 c 1.578 7.145 
l 1.805 7.527 2.094 7.879 2.438 8.18 c 1.891 10.039 l 1.855 10.152 1.879
 10.277 1.949 10.371 c 2.02 10.465 2.133 10.52 2.25 10.52 c 3.75 10.52 l
 3.91 10.52 4.051 10.422 4.105 10.27 c 4.469 9.258 l 4.945 9.387 5.453 9.457
 5.977 9.457 c 6.508 9.457 7.016 9.387 7.496 9.254 c 7.902 10.281 l 7.902
 10.285 l 7.957 10.426 8.098 10.52 8.25 10.52 c 9.75 10.52 l 9.871 10.52
 9.98 10.465 10.051 10.367 c 10.121 10.273 10.145 10.148 10.109 10.035 c
 9.539 8.156 l 10.359 7.422 10.875 6.418 10.875 5.301 c 10.875 5.191 10.871
 5.086 10.859 4.977 c 11.055 4.895 11.242 4.777 11.387 4.645 c 11.621 4.875
 11.996 4.875 11.996 4.332 c 11.996 4.5 11.621 4.5 11.648 4.312 c 11.652
 4.312 l 11.684 4.254 11.707 4.188 11.723 4.121 c 11.758 3.945 11.699 3.762
 11.57 3.637 c 11.43 3.496 11.211 3.465 11.039 3.566 c 10.883 3.652 10.777
 3.809 10.758 3.984 c 10.738 4.168 10.82 4.344 10.996 4.477 c 11 4.477 l
 10.938 4.52 10.871 4.559 10.805 4.59 c 10.402 2.594 8.34 1.145 5.973 1.145
 c 1.887 4.695 m 2.227 3.145 3.887 1.895 5.973 1.895 c 8.332 1.895 10.125
 3.48 10.125 5.301 c 10.125 6.242 9.656 7.109 8.871 7.738 c 8.754 7.832 
8.703 7.992 8.75 8.141 c 9.246 9.773 l 8.508 9.773 l 8.066 8.656 l 8.062
 8.656 l 7.988 8.469 7.781 8.371 7.59 8.438 c 7.094 8.609 6.547 8.707 5.973
 8.707 c 5.422 8.711 4.875 8.617 4.355 8.438 c 4.16 8.371 3.949 8.473 3.879
 8.668 c 3.484 9.77 l 2.75 9.77 l 3.227 8.156 l 3.27 8.012 3.219 7.852 3.098
 7.758 c 2.695 7.445 2.367 7.051 2.137 6.602 c 2.07 6.477 1.941 6.395 1.801
 6.395 c 1.379 6.395 l 1.199 6.395 1.043 6.266 1.012 6.086 c 0.82 4.992 
l 1.52 4.992 l 1.52 4.988 l 1.695 4.988 1.848 4.867 1.887 4.695 c 11.352
 4.051 m 11.34 4.109 11.312 4.164 11.277 4.211 c 11.246 4.191 l 11.137 4.125
 11.129 4.059 11.133 4.023 c 11.141 3.969 11.172 3.922 11.219 3.895 c 11.254
 3.875 11.277 3.879 11.305 3.902 c 11.348 3.941 11.367 3.996 11.352 4.051
 c f*
Q Q
showpage
%%Trailer
%%EOF
