%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:04 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 168 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 168 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 168 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 168 l 168 174.363 165.473 180.469 160.969 184.969 c 156.469
 189.473 150.363 192 144 192 c 132 192 l 132 180 l 144 180 l 147.184 180
 150.234 178.734 152.484 176.484 c 154.734 174.234 156 171.184 156 168 c
 156 54 l 132 54 l 127.227 54 122.648 52.105 119.273 48.727 c 115.895 45.352
 114 40.773 114 36 c 114 12 l 48 12 l 41.371 12 36 17.371 36 24 c 36 132
 l 24 132 l 24 24 l 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 
41.637 0 48 0 c 114 0 l h
77.664 183.48 m 76.875 181.789 76.422 179.957 76.332 178.094 c 85.512 178.094
 l 85.848 179.984 86.953 181.648 88.559 182.699 c 89.406 183.285 90.406 
183.738 91.559 184.066 c 92.703 184.395 93.98 184.559 95.387 184.559 c 97.355
 184.559 99.008 184.277 100.344 183.719 c 101.566 183.262 102.629 182.457
 103.402 181.402 c 104.094 180.379 104.449 179.16 104.426 177.926 c 104.488
 176.398 103.801 174.938 102.59 174.012 c 101.375 173.051 99.527 172.281
 97.047 171.695 c 89.617 169.98 l 87.328 169.5 85.141 168.633 83.148 167.41
 c 81.387 166.332 79.938 164.812 78.938 163.008 c 77.93 161.066 77.422 158.906
 77.461 156.719 c 77.461 153.789 78.223 151.234 79.742 149.051 c 81.262 
146.875 83.371 145.188 86.066 143.988 c 88.77 142.789 91.879 142.191 95.391
 142.199 c 99.047 142.199 102.168 142.809 104.75 144.023 c 107.344 145.246
 109.344 146.887 110.75 148.945 c 112.191 150.984 112.988 153.25 113.148
 155.738 c 104.148 155.738 l 104.148 155.734 l 103.941 154.598 103.445 153.531
 102.707 152.641 c 101.926 151.672 100.902 150.922 99.742 150.469 c 98.34
 149.887 96.832 149.609 95.316 149.652 c 92.715 149.652 90.664 150.262 89.16
 151.477 c 87.73 152.57 86.91 154.285 86.953 156.086 c 86.953 157.527 87.523
 158.727 88.668 159.688 c 88.668 159.684 l 90.113 160.738 91.773 161.453
 93.527 161.785 c 100.969 163.5 l 103.578 164.102 105.84 164.945 107.762
 166.031 c 109.613 167.043 111.164 168.523 112.262 170.328 c 113.34 172.105
 113.883 174.344 113.883 177.047 c 113.883 180.008 113.129 182.633 111.625
 184.918 c 111.625 184.922 l 110.035 187.277 107.785 189.109 105.156 190.188
 c 102.348 191.453 98.918 192.082 94.859 192.082 c 91.812 192.082 89.152
 191.723 86.879 191.004 c 84.789 190.379 82.84 189.352 81.145 187.98 c 79.672
 186.75 78.484 185.215 77.664 183.48 c 42.324 143.184 m 31.609 143.184 l
 21.719 160.441 l 21.285 160.441 l 11.301 143.184 l 0.141 143.184 l 14.863
 166.98 l 0 191.172 l 10.332 191.172 l 20.566 174.191 l 20.988 174.191 l
 31.188 191.172 l 42.082 191.172 l 27.035 167.281 l h
75.047 183.082 m 54.684 183.086 l 54.684 143.188 l 45.203 143.188 l 45.203
 191.188 l 75.047 191.188 l h
75.047 183.082 m f*
Q Q
showpage
%%Trailer
%%EOF
