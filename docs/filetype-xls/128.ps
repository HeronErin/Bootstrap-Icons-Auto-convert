%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 0 0 84 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 0 0 84 96
96 96 cairo_set_page_size
%%EndPageSetup
q 0 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
84 27 m 84 84 l 84 87.184 82.734 90.234 80.484 92.484 c 78.234 94.734 75.184
 96 72 96 c 66 96 l 66 90 l 72 90 l 73.59 90 75.117 89.367 76.242 88.242
 c 77.367 87.117 78 85.59 78 84 c 78 27 l 66 27 l 61.031 27 57 22.969 57
 18 c 57 6 l 24 6 l 20.688 6 18 8.688 18 12 c 18 66 l 12 66 l 12 12 l 12
 5.371 17.371 0 24 0 c 57 0 l h
38.832 91.738 m 38.438 90.895 38.211 89.98 38.164 89.047 c 42.758 89.047
 l 42.926 89.992 43.477 90.824 44.281 91.352 c 44.707 91.645 45.207 91.871
 45.781 92.035 c 46.352 92.199 46.992 92.281 47.695 92.281 c 48.68 92.281
 49.504 92.141 50.172 91.859 c 50.785 91.633 51.316 91.227 51.703 90.703
 c 52.047 90.188 52.227 89.582 52.211 88.961 c 52.242 88.199 51.902 87.469
 51.293 87.008 c 50.684 86.527 49.762 86.141 48.52 85.852 c 44.805 84.992
 l 44.809 84.988 l 43.664 84.75 42.57 84.316 41.574 83.707 c 40.695 83.164
 39.969 82.406 39.469 81.504 c 38.965 80.535 38.711 79.453 38.73 78.359 
c 38.73 76.895 39.109 75.617 39.871 74.523 c 40.633 73.434 41.684 72.59 
43.031 71.992 c 44.383 71.391 45.938 71.094 47.691 71.098 c 49.52 71.098
 51.078 71.402 52.371 72.008 c 53.668 72.621 54.668 73.441 55.371 74.469
 c 56.09 75.488 56.492 76.621 56.57 77.863 c 52.07 77.863 l 52.074 77.867
 l 51.973 77.297 51.723 76.766 51.355 76.32 c 50.961 75.836 50.453 75.461
 49.871 75.234 c 49.172 74.945 48.418 74.805 47.656 74.824 c 46.355 74.824
 45.332 75.129 44.578 75.734 c 44.578 75.738 l 43.867 76.285 43.453 77.141
 43.477 78.043 c 43.477 78.762 43.762 79.363 44.336 79.844 c 45.055 80.367
 45.887 80.727 46.766 80.891 c 50.484 81.75 l 51.789 82.051 52.922 82.473
 53.879 83.016 c 54.805 83.523 55.582 84.262 56.129 85.164 c 56.668 86.051
 56.938 87.172 56.938 88.523 c 56.938 90.004 56.562 91.316 55.809 92.461
 c 55.812 92.461 l 55.016 93.637 53.891 94.555 52.578 95.094 c 51.176 95.727
 49.457 96.043 47.43 96.043 c 45.906 96.043 44.574 95.863 43.441 95.504 
c 42.395 95.188 41.422 94.676 40.57 93.988 c 39.836 93.375 39.242 92.609
 38.832 91.738 c 21.16 71.59 m 15.801 71.59 l 10.859 80.219 l 10.645 80.219
 l 5.652 71.59 l 0.074 71.59 l 7.438 83.488 l 0 95.586 l 5.164 95.586 l 
10.281 87.098 l 10.492 87.098 l 15.594 95.586 l 21.043 95.586 l 13.52 83.641
 l h
37.523 91.539 m 27.344 91.543 l 27.344 71.594 l 22.605 71.594 l 22.605 
95.594 l 37.527 95.594 l h
37.523 91.539 m f*
Q Q
showpage
%%Trailer
%%EOF
