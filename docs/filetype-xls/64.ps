%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:03 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 17x17mm 48 48 0 () ()
%%BoundingBox: 0 0 42 48
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 17x17mm
%%PageBoundingBox: 0 0 42 48
48 48 cairo_set_page_size
%%EndPageSetup
q 0 0 42 48 rectclip
1 0 0 -1 0 48 cm q
0 g
42 13.5 m 42 42 l 42 43.59 41.367 45.117 40.242 46.242 c 39.117 47.367 
37.59 48 36 48 c 33 48 l 33 45 l 36 45 l 36.797 45 37.559 44.684 38.121 
44.121 c 38.684 43.559 39 42.797 39 42 c 39 13.5 l 33 13.5 l 30.516 13.5
 28.5 11.484 28.5 9 c 28.5 3 l 12 3 l 10.344 3 9 4.344 9 6 c 9 33 l 6 33
 l 6 6 l 6 2.688 8.688 0 12 0 c 28.5 0 l h
19.414 45.871 m 19.219 45.445 19.105 44.988 19.082 44.523 c 21.379 44.523
 l 21.461 44.996 21.738 45.414 22.141 45.676 c 22.352 45.82 22.602 45.938
 22.891 46.02 c 23.176 46.102 23.496 46.141 23.848 46.141 c 24.34 46.141
 24.754 46.07 25.086 45.93 c 25.391 45.816 25.656 45.613 25.852 45.352 c
 26.023 45.094 26.113 44.789 26.105 44.48 c 26.121 44.102 25.949 43.734 
25.648 43.504 c 25.344 43.266 24.883 43.07 24.262 42.926 c 22.406 42.496
 l 22.402 42.496 l 21.832 42.375 21.285 42.156 20.785 41.852 c 20.348 41.582
 19.984 41.203 19.734 40.754 c 19.484 40.266 19.355 39.727 19.363 39.18 
c 19.363 38.449 19.555 37.809 19.934 37.262 c 20.312 36.719 20.84 36.297
 21.516 35.996 c 22.191 35.695 22.969 35.547 23.848 35.551 c 24.762 35.551
 25.543 35.703 26.188 36.008 c 26.836 36.312 27.336 36.723 27.688 37.238
 c 28.047 37.75 28.246 38.312 28.289 38.938 c 26.039 38.938 l 26.035 38.934
 l 25.984 38.648 25.863 38.383 25.676 38.16 c 25.48 37.918 25.227 37.73 
24.938 37.617 c 24.586 37.473 24.207 37.402 23.828 37.414 c 23.18 37.414
 22.664 37.566 22.289 37.871 c 22.289 37.867 l 21.934 38.145 21.727 38.57
 21.738 39.02 c 21.738 39.379 21.883 39.68 22.168 39.918 c 22.168 39.922
 l 22.527 40.184 22.941 40.363 23.383 40.445 c 25.242 40.875 l 25.895 41.023
 26.461 41.234 26.941 41.508 c 27.402 41.762 27.789 42.133 28.066 42.582
 c 28.336 43.027 28.473 43.586 28.473 44.262 c 28.473 45 28.285 45.656 27.91
 46.23 c 27.906 46.23 l 27.508 46.82 26.945 47.277 26.289 47.547 c 25.586
 47.863 24.73 48.02 23.715 48.02 c 22.953 48.02 22.289 47.93 21.719 47.75
 c 21.199 47.594 20.711 47.336 20.285 46.996 c 19.918 46.688 19.621 46.305
 19.414 45.871 c 10.578 35.797 m 7.898 35.797 l 5.43 40.109 l 5.32 40.109
 l 2.824 35.797 l 0.035 35.797 l 3.715 41.746 l 0 47.793 l 2.582 47.793 
l 5.141 43.547 l 5.246 43.547 l 7.797 47.793 l 10.52 47.793 l 6.758 41.82
 l h
18.758 45.773 m 13.672 45.77 l 13.672 35.793 l 11.301 35.793 l 11.301 47.793
 l 18.762 47.793 l h
18.758 45.773 m f*
Q Q
showpage
%%Trailer
%%EOF
