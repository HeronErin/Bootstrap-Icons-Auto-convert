%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:02 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 5.25 l 5.25 5.449 5.172 5.641 5.031 5.781 c 4.891 5.922
 4.699 6 4.5 6 c 4.125 6 l 4.125 5.625 l 4.5 5.625 l 4.598 5.625 4.695 5.586
 4.766 5.516 c 4.836 5.445 4.875 5.348 4.875 5.25 c 4.875 1.688 l 4.125 
1.688 l 3.812 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 
1.293 0.375 1.125 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75
 l 0.75 0.336 1.086 0 1.5 0 c 3.562 0 l h
2.426 5.734 m 2.402 5.68 2.387 5.625 2.387 5.566 c 2.672 5.566 l 2.684 
5.625 2.719 5.676 2.766 5.711 c 2.793 5.73 2.824 5.742 2.859 5.754 c 2.895
 5.766 2.934 5.77 2.98 5.77 c 3.043 5.77 3.094 5.762 3.137 5.742 c 3.176
 5.727 3.207 5.703 3.23 5.668 c 3.254 5.637 3.266 5.598 3.262 5.559 c 3.266
 5.512 3.242 5.469 3.207 5.438 c 3.168 5.406 3.109 5.383 3.035 5.363 c 2.805
 5.309 l 2.801 5.312 l 2.73 5.297 2.66 5.27 2.598 5.23 c 2.543 5.199 2.5
 5.152 2.465 5.094 c 2.434 5.035 2.418 4.965 2.422 4.898 c 2.422 4.809 2.445
 4.727 2.492 4.66 c 2.539 4.594 2.605 4.539 2.691 4.5 c 2.777 4.461 2.871
 4.445 2.984 4.445 c 3.098 4.445 3.195 4.465 3.277 4.504 c 3.359 4.543 3.422
 4.594 3.465 4.656 c 3.512 4.719 3.535 4.789 3.539 4.867 c 3.254 4.867 l
 3.25 4.832 3.234 4.797 3.211 4.77 c 3.184 4.738 3.152 4.715 3.117 4.703
 c 3.074 4.684 3.027 4.676 2.98 4.676 c 2.898 4.676 2.836 4.695 2.789 4.734
 c 2.785 4.734 l 2.742 4.77 2.715 4.82 2.719 4.879 c 2.719 4.926 2.738 4.961
 2.773 4.992 c 2.77 4.988 l 2.816 5.023 2.867 5.047 2.922 5.055 c 3.156 
5.109 l 3.238 5.129 3.309 5.156 3.367 5.188 c 3.426 5.219 3.473 5.266 3.508
 5.324 c 3.543 5.379 3.559 5.449 3.559 5.535 c 3.559 5.629 3.535 5.711 3.488
 5.781 c 3.488 5.777 l 3.438 5.852 3.367 5.91 3.285 5.945 c 3.199 5.984 
3.09 6.004 2.965 6.004 c 2.871 6.004 2.785 5.992 2.715 5.969 c 2.648 5.949
 2.59 5.918 2.535 5.875 c 2.488 5.836 2.453 5.789 2.426 5.734 c 1.32 4.477
 m 0.984 4.477 l 0.68 5.016 l 0.668 5.016 l 0.355 4.477 l 0.008 4.477 l 
0.469 5.219 l 0 5.973 l 0.324 5.973 l 0.645 5.441 l 0.656 5.441 l 0.977 
5.973 l 1.316 5.973 l 0.844 5.227 l h
2.344 5.723 m 1.707 5.723 l 1.707 4.477 l 1.41 4.477 l 1.41 5.977 l 2.344
 5.977 l h
2.344 5.723 m f*
Q Q
showpage
%%Trailer
%%EOF
