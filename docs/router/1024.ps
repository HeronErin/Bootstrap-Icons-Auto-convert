%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:50 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 120 768 721
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 120 768 721
768 768 cairo_set_page_size
%%EndPageSetup
q 0 120 768 601 rectclip
1 0 0 -1 0 768 cm q
0 g
265.199 145.199 m 286.055 124.344 312.027 109.348 340.516 101.715 c 369.004
 94.078 398.996 94.078 427.484 101.715 c 455.973 109.348 481.945 124.344
 502.801 145.199 c 507.273 149.832 513.418 152.469 519.855 152.527 c 526.293
 152.582 532.48 150.051 537.035 145.496 c 541.586 140.945 544.117 134.754
 544.062 128.32 c 544.008 121.883 541.367 115.734 536.734 111.266 c 509.926
 84.453 476.531 65.172 439.906 55.359 c 403.281 45.543 364.719 45.543 328.094
 55.359 c 291.469 65.172 258.074 84.453 231.266 111.266 c 225.375 117.359
 223.141 126.109 225.383 134.281 c 227.621 142.457 234.008 148.844 242.18
 151.082 c 250.355 153.324 259.105 151.086 265.199 145.199 c f
333.121 213.121 m 346.621 199.637 364.922 192.062 384 192.062 c 403.078
 192.062 421.379 199.637 434.879 213.121 c 440.949 219.191 449.801 221.562
 458.09 219.34 c 466.383 217.117 472.863 210.641 475.082 202.348 c 477.305
 194.055 474.934 185.207 468.863 179.137 c 446.359 156.625 415.832 143.977
 384 143.977 c 352.168 143.977 321.641 156.625 299.137 179.137 c 293.25 
185.23 291.012 193.98 293.254 202.156 c 295.492 210.328 301.879 216.715 
310.055 218.953 c 318.227 221.195 326.977 218.961 333.07 213.07 c h
120 528 m 111.426 528 103.504 523.426 99.215 516 c 94.93 508.574 94.93 
499.426 99.215 492 c 103.504 484.574 111.426 480 120 480 c 128.574 480 136.496
 484.574 140.785 492 c 145.07 499.426 145.07 508.574 140.785 516 c 136.496
 523.426 128.574 528 120 528 c 336 504 m 336 512.574 340.574 520.496 348
 524.785 c 355.426 529.07 364.574 529.07 372 524.785 c 379.426 520.496 384
 512.574 384 504 c 384 495.426 379.426 487.504 372 483.215 c 364.574 478.93
 355.426 478.93 348 483.215 c 340.574 487.504 336 495.426 336 504 c 456 
528 m 447.426 528 439.504 523.426 435.215 516 c 430.93 508.574 430.93 499.426
 435.215 492 c 439.504 484.574 447.426 480 456 480 c 464.574 480 472.496
 484.574 476.785 492 c 481.07 499.426 481.07 508.574 476.785 516 c 472.496
 523.426 464.574 528 456 528 c 528 504 m 528 512.574 532.574 520.496 540
 524.785 c 547.426 529.07 556.574 529.07 564 524.785 c 571.426 520.496 576
 512.574 576 504 c 576 495.426 571.426 487.504 564 483.215 c 556.574 478.93
 547.426 478.93 540 483.215 c 532.574 487.504 528 495.426 528 504 c 624 
504 m 624 512.574 628.574 520.496 636 524.785 c 643.426 529.07 652.574 529.07
 660 524.785 c 667.426 520.496 672 512.574 672 504 c 672 495.426 667.426
 487.504 660 483.215 c 652.574 478.93 643.426 478.93 636 483.215 c 628.574
 487.504 624 495.426 624 504 c f
142.754 112.414 m 140.926 106.152 136.629 100.906 130.852 97.879 c 125.074
 94.852 118.312 94.305 112.121 96.367 c 105.934 98.43 100.852 102.922 98.047
 108.812 c 95.238 114.699 94.953 121.477 97.246 127.586 c 182.688 384 l 
72 384 l 52.906 384 34.59 391.586 21.09 405.09 c 7.586 418.59 0 436.906 
0 456 c 0 552 l 0 571.094 7.586 589.41 21.09 602.91 c 34.59 616.414 52.906
 624 72 624 c 96 624 l 96 630.363 98.527 636.469 103.031 640.969 c 107.531
 645.473 113.637 648 120 648 c 216 648 l 222.363 648 228.469 645.473 232.969
 640.969 c 237.473 636.469 240 630.363 240 624 c 528 624 l 528 630.363 530.527
 636.469 535.031 640.969 c 539.531 645.473 545.637 648 552 648 c 648 648
 l 654.363 648 660.469 645.473 664.969 640.969 c 669.473 636.469 672 630.363
 672 624 c 696 624 l 715.094 624 733.41 616.414 746.91 602.91 c 760.414 
589.41 768 571.094 768 552 c 768 456 l 768 436.906 760.414 418.59 746.91
 405.09 c 733.41 391.586 715.094 384 696 384 c 585.312 384 l 670.754 127.586
 l 673.047 121.477 672.762 114.699 669.953 108.812 c 667.148 102.922 662.066
 98.43 655.879 96.367 c 649.688 94.305 642.926 94.852 637.148 97.879 c 631.371
 100.906 627.074 106.152 625.246 112.414 c 534.719 384 l 233.281 384 l h
696 432 m 702.363 432 708.469 434.527 712.969 439.031 c 717.473 443.531
 720 449.637 720 456 c 720 552 l 720 558.363 717.473 564.469 712.969 568.969
 c 708.469 573.473 702.363 576 696 576 c 72 576 l 65.637 576 59.531 573.473
 55.031 568.969 c 50.527 564.469 48 558.363 48 552 c 48 456 l 48 449.637
 50.527 443.531 55.031 439.031 c 59.531 434.527 65.637 432 72 432 c h
696 432 m f
408 264 m 408 272.574 403.426 280.496 396 284.785 c 388.574 289.07 379.426
 289.07 372 284.785 c 364.574 280.496 360 272.574 360 264 c 360 255.426 
364.574 247.504 372 243.215 c 379.426 238.93 388.574 238.93 396 243.215 
c 403.426 247.504 408 255.426 408 264 c f
Q Q
showpage
%%Trailer
%%EOF
