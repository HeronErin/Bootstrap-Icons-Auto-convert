%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 240 1536 1441
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 240 1536 1441
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 240 1536 1201 rectclip
1 0 0 -1 0 1536 cm q
0 g
530.398 290.398 m 572.105 248.691 624.059 218.695 681.031 203.426 c 738.004
 188.16 797.996 188.16 854.969 203.426 c 911.941 218.695 963.895 248.691
 1005.602 290.398 c 1014.543 299.66 1026.836 304.941 1039.707 305.051 c 
1052.582 305.164 1064.965 300.098 1074.066 290.996 c 1083.172 281.891 1088.234
 269.512 1088.125 256.637 c 1088.012 243.762 1082.734 231.473 1073.473 222.527
 c 1019.852 168.906 953.059 130.344 879.812 110.715 c 806.562 91.09 729.438
 91.09 656.188 110.715 c 582.941 130.344 516.148 168.906 462.527 222.527
 c 450.754 234.719 446.281 252.219 450.762 268.566 c 455.242 284.914 468.016
 297.684 484.363 302.164 c 500.711 306.648 518.207 302.176 530.398 290.398
 c f
666.238 426.238 m 693.238 399.273 729.84 384.125 768 384.125 c 806.16 384.125
 842.762 399.273 869.762 426.238 c 881.902 438.383 899.598 443.121 916.184
 438.68 c 932.77 434.234 945.723 421.281 950.168 404.695 c 954.609 388.109
 949.871 370.414 937.727 358.273 c 907.938 328.473 870.828 307.043 830.125
 296.137 c 789.426 285.227 746.574 285.227 705.875 296.137 c 665.172 307.043
 628.062 328.473 598.273 358.273 c 586.496 370.465 582.023 387.965 586.508
 404.309 c 590.988 420.656 603.758 433.43 620.105 437.91 c 636.453 442.391
 653.953 437.918 666.145 426.145 c h
240 1056 m 222.852 1056 207.004 1046.852 198.43 1032 c 189.855 1017.148
 189.855 998.852 198.43 984 c 207.004 969.148 222.852 960 240 960 c 257.148
 960 272.996 969.148 281.57 984 c 290.145 998.852 290.145 1017.148 281.57
 1032 c 272.996 1046.852 257.148 1056 240 1056 c 672 1008 m 672 1025.148
 681.148 1040.996 696 1049.57 c 710.852 1058.145 729.148 1058.145 744 1049.57
 c 758.852 1040.996 768 1025.148 768 1008 c 768 990.852 758.852 975.004 
744 966.43 c 729.148 957.855 710.852 957.855 696 966.43 c 681.148 975.004
 672 990.852 672 1008 c 912 1056 m 894.852 1056 879.004 1046.852 870.43 
1032 c 861.855 1017.148 861.855 998.852 870.43 984 c 879.004 969.148 894.852
 960 912 960 c 929.148 960 944.996 969.148 953.57 984 c 962.145 998.852 
962.145 1017.148 953.57 1032 c 944.996 1046.852 929.148 1056 912 1056 c 
1056 1008 m 1056 1025.148 1065.148 1040.996 1080 1049.57 c 1094.852 1058.145
 1113.148 1058.145 1128 1049.57 c 1142.852 1040.996 1152 1025.148 1152 1008
 c 1152 990.852 1142.852 975.004 1128 966.43 c 1113.148 957.855 1094.852
 957.855 1080 966.43 c 1065.148 975.004 1056 990.852 1056 1008 c 1248 1008
 m 1248 1025.148 1257.148 1040.996 1272 1049.57 c 1286.852 1058.145 1305.148
 1058.145 1320 1049.57 c 1334.852 1040.996 1344 1025.148 1344 1008 c 1344
 990.852 1334.852 975.004 1320 966.43 c 1305.148 957.855 1286.852 957.855
 1272 966.43 c 1257.148 975.004 1248 990.852 1248 1008 c f
285.504 224.832 m 281.852 212.309 273.258 201.809 261.699 195.754 c 250.145
 189.699 236.621 188.609 224.246 192.734 c 211.867 196.859 201.703 205.848
 196.094 217.625 c 190.48 229.402 189.902 242.957 194.496 255.168 c 365.375
 768 l 144 768 l 105.809 768 69.184 783.172 42.176 810.176 c 15.172 837.184
 0 873.809 0 912 c 0 1104 l 0 1142.191 15.172 1178.816 42.176 1205.824 c
 69.184 1232.828 105.809 1248 144 1248 c 192 1248 l 192 1260.73 197.059 
1272.938 206.059 1281.941 c 215.062 1290.941 227.27 1296 240 1296 c 432 
1296 l 444.73 1296 456.938 1290.941 465.941 1281.941 c 474.941 1272.938 
480 1260.73 480 1248 c 1056 1248 l 1056 1260.73 1061.059 1272.938 1070.059
 1281.941 c 1079.062 1290.941 1091.27 1296 1104 1296 c 1296 1296 l 1308.73
 1296 1320.938 1290.941 1329.941 1281.941 c 1338.941 1272.938 1344 1260.73
 1344 1248 c 1392 1248 l 1430.191 1248 1466.816 1232.828 1493.824 1205.824
 c 1520.828 1178.816 1536 1142.191 1536 1104 c 1536 912 l 1536 873.809 1520.828
 837.184 1493.824 810.176 c 1466.816 783.172 1430.191 768 1392 768 c 1170.625
 768 l 1341.504 255.168 l 1346.098 242.957 1345.52 229.402 1339.906 217.625
 c 1334.297 205.848 1324.133 196.859 1311.754 192.734 c 1299.379 188.609
 1285.855 189.699 1274.301 195.754 c 1262.742 201.809 1254.148 212.309 1250.496
 224.832 c 1069.441 768 l 466.559 768 l h
1392 864 m 1404.73 864 1416.938 869.059 1425.941 878.059 c 1434.941 887.062
 1440 899.27 1440 912 c 1440 1104 l 1440 1116.73 1434.941 1128.938 1425.941
 1137.941 c 1416.938 1146.941 1404.73 1152 1392 1152 c 144 1152 l 131.27
 1152 119.062 1146.941 110.059 1137.941 c 101.059 1128.938 96 1116.73 96
 1104 c 96 912 l 96 899.27 101.059 887.062 110.059 878.059 c 119.062 869.059
 131.27 864 144 864 c h
1392 864 m f
816 528 m 816 545.148 806.852 560.996 792 569.57 c 777.148 578.145 758.852
 578.145 744 569.57 c 729.148 560.996 720 545.148 720 528 c 720 510.852 
729.148 495.004 744 486.43 c 758.852 477.855 777.148 477.855 792 486.43 
c 806.852 495.004 816 510.852 816 528 c f
Q Q
showpage
%%Trailer
%%EOF
