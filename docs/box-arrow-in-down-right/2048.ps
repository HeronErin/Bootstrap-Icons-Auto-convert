%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:36 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 95 96 1440 1441
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 95 96 1440 1441
1536 1536 cairo_set_page_size
%%EndPageSetup
q 95 96 1345 1345 rectclip
1 0 0 -1 0 1536 cm q
0 g
610.945 240 m 610.945 227.27 616 215.062 625.004 206.059 c 634.004 197.059
 646.215 192 658.945 192 c 1296 192 l 1334.191 192 1370.816 207.172 1397.824
 234.176 c 1424.828 261.184 1440 297.809 1440 336 c 1440 1296 l 1440 1334.191
 1424.828 1370.816 1397.824 1397.824 c 1370.816 1424.828 1334.191 1440 1296
 1440 c 336 1440 l 297.809 1440 261.184 1424.828 234.176 1397.824 c 207.172
 1370.816 192 1334.191 192 1296 c 192 658.945 l 192 641.797 201.148 625.949
 216 617.375 c 230.852 608.801 249.148 608.801 264 617.375 c 278.852 625.949
 288 641.797 288 658.945 c 288 1296 l 288 1308.73 293.059 1320.938 302.059
 1329.941 c 311.062 1338.941 323.27 1344 336 1344 c 1296 1344 l 1308.73 
1344 1320.938 1338.941 1329.941 1329.941 c 1338.941 1320.938 1344 1308.73
 1344 1296 c 1344 336 l 1344 323.27 1338.941 311.062 1329.941 302.059 c 
1320.938 293.059 1308.73 288 1296 288 c 658.945 288 l 646.215 288 634.004
 282.941 625.004 273.941 c 616 264.938 610.945 252.73 610.945 240 c f*
1056 1008 m 1056 1020.73 1050.941 1032.938 1041.941 1041.941 c 1032.938
 1050.941 1020.73 1056 1008 1056 c 528 1056 l 510.852 1056 495.004 1046.852
 486.43 1032 c 477.855 1017.148 477.855 998.852 486.43 984 c 495.004 969.148
 510.852 960 528 960 c 892.129 960 l 110.016 177.984 l 97.875 165.844 93.133
 148.145 97.578 131.562 c 102.02 114.977 114.977 102.02 131.562 97.578 c
 148.145 93.133 165.844 97.875 177.984 110.016 c 960 892.129 l 960 528 l
 960 510.852 969.148 495.004 984 486.43 c 998.852 477.855 1017.148 477.855
 1032 486.43 c 1046.852 495.004 1056 510.852 1056 528 c h
1056 1008 m f*
Q Q
showpage
%%Trailer
%%EOF
