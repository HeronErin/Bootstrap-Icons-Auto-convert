%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 192 0 1344 1508
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 192 0 1344 1508
1536 1536 cairo_set_page_size
%%EndPageSetup
q 192 0 1152 1508 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 576 m 717.078 576 668.242 596.227 632.234 632.234 c 596.227 668.242
 576 717.078 576 768 c 576 818.922 596.227 867.758 632.234 903.766 c 668.242
 939.773 717.078 960 768 960 c 818.922 960 867.758 939.773 903.766 903.766
 c 939.773 867.758 960 818.922 960 768 c 960 717.078 939.773 668.242 903.766
 632.234 c 867.758 596.227 818.922 576 768 576 c f
192 312.191 m 191.996 278.461 203.836 245.801 225.449 219.902 c 247.066
 194.008 277.082 176.523 310.273 170.496 c 1078.273 30.91 l 1120.266 23.285
 1163.477 34.68 1196.25 62.023 c 1229.02 89.363 1247.977 129.832 1248 172.512
 c 1248 217.633 l 1277.199 234.492 1301.449 258.742 1318.301 287.949 c 1335.152
 317.152 1344.016 350.281 1344 384 c 1344 1344 l 1344 1377.703 1335.129 
1410.812 1318.277 1440 c 1301.426 1469.188 1277.188 1493.426 1248 1510.277
 c 1218.812 1527.129 1185.703 1536 1152 1536 c 384 1536 l 356.52 1536.008
 329.355 1530.113 304.348 1518.719 c 279.34 1507.324 257.066 1490.695 239.039
 1469.953 c 209.051 1442.641 191.973 1403.953 192 1363.391 c h
480 768 m 480 844.383 510.344 917.637 564.352 971.648 c 618.363 1025.656
 691.617 1056 768 1056 c 844.383 1056 917.637 1025.656 971.648 971.648 c
 1025.656 917.637 1056 844.383 1056 768 c 1056 691.617 1025.656 618.363 
971.648 564.352 c 917.637 510.344 844.383 480 768 480 c 691.617 480 618.363
 510.344 564.352 564.352 c 510.344 618.363 480 691.617 480 768 c 480 1200
 m 480 1212.73 485.059 1224.938 494.059 1233.941 c 503.062 1242.941 515.27
 1248 528 1248 c 1008 1248 l 1025.148 1248 1040.996 1238.852 1049.57 1224
 c 1058.145 1209.148 1058.145 1190.852 1049.57 1176 c 1040.996 1161.148 
1025.148 1152 1008 1152 c 528 1152 l 515.27 1152 503.062 1157.059 494.059
 1166.059 c 485.059 1175.062 480 1187.27 480 1200 c f
Q Q
showpage
%%Trailer
%%EOF
