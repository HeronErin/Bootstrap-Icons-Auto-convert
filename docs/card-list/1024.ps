%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:26 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 96 768 672
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 96 768 672
768 768 cairo_set_page_size
%%EndPageSetup
q 0 96 768 576 rectclip
1 0 0 -1 0 768 cm q
0 g
696 144 m 702.363 144 708.469 146.527 712.969 151.031 c 717.473 155.531
 720 161.637 720 168 c 720 600 l 720 606.363 717.473 612.469 712.969 616.969
 c 708.469 621.473 702.363 624 696 624 c 72 624 l 65.637 624 59.531 621.473
 55.031 616.969 c 50.527 612.469 48 606.363 48 600 c 48 168 l 48 161.637
 50.527 155.531 55.031 151.031 c 59.531 146.527 65.637 144 72 144 c h
72 96 m 52.906 96 34.59 103.586 21.09 117.09 c 7.586 130.59 0 148.906 0
 168 c 0 600 l 0 619.094 7.586 637.41 21.09 650.91 c 34.59 664.414 52.906
 672 72 672 c 696 672 l 715.094 672 733.41 664.414 746.91 650.91 c 760.414
 637.41 768 619.094 768 600 c 768 168 l 768 148.906 760.414 130.59 746.91
 117.09 c 733.41 103.586 715.094 96 696 96 c h
72 96 m f
240 384 m 240 377.637 242.527 371.531 247.031 367.031 c 251.531 362.527
 257.637 360 264 360 c 600 360 l 608.574 360 616.496 364.574 620.785 372
 c 625.07 379.426 625.07 388.574 620.785 396 c 616.496 403.426 608.574 408
 600 408 c 264 408 l 257.637 408 251.531 405.473 247.031 400.969 c 242.527
 396.469 240 390.363 240 384 c 240 264 m 240 257.637 242.527 251.531 247.031
 247.031 c 251.531 242.527 257.637 240 264 240 c 600 240 l 608.574 240 616.496
 244.574 620.785 252 c 625.07 259.426 625.07 268.574 620.785 276 c 616.496
 283.426 608.574 288 600 288 c 264 288 l 257.637 288 251.531 285.473 247.031
 280.969 c 242.527 276.469 240 270.363 240 264 c 240 504 m 240 497.637 242.527
 491.531 247.031 487.031 c 251.531 482.527 257.637 480 264 480 c 600 480
 l 608.574 480 616.496 484.574 620.785 492 c 625.07 499.426 625.07 508.574
 620.785 516 c 616.496 523.426 608.574 528 600 528 c 264 528 l 257.637 528
 251.531 525.473 247.031 520.969 c 242.527 516.469 240 510.363 240 504 c
 192 264 m 192 272.574 187.426 280.496 180 284.785 c 172.574 289.07 163.426
 289.07 156 284.785 c 148.574 280.496 144 272.574 144 264 c 144 255.426 
148.574 247.504 156 243.215 c 163.426 238.93 172.574 238.93 180 243.215 
c 187.426 247.504 192 255.426 192 264 c 192 384 m 192 392.574 187.426 400.496
 180 404.785 c 172.574 409.07 163.426 409.07 156 404.785 c 148.574 400.496
 144 392.574 144 384 c 144 375.426 148.574 367.504 156 363.215 c 163.426
 358.93 172.574 358.93 180 363.215 c 187.426 367.504 192 375.426 192 384
 c 192 504 m 192 512.574 187.426 520.496 180 524.785 c 172.574 529.07 163.426
 529.07 156 524.785 c 148.574 520.496 144 512.574 144 504 c 144 495.426 
148.574 487.504 156 483.215 c 163.426 478.93 172.574 478.93 180 483.215 
c 187.426 487.504 192 495.426 192 504 c f
Q Q
showpage
%%Trailer
%%EOF
