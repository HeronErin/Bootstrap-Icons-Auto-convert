%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:58 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 6 0 90 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 6 0 90 96
96 96 cairo_set_page_size
%%EndPageSetup
q 6 0 84 96 rectclip
1 0 0 -1 0 96 cm q
0 g
27 54 m 19.496 54 12.566 58.004 8.812 64.5 c 5.062 70.996 5.062 79.004 
8.812 85.5 c 12.566 91.996 19.496 96 27 96 c 69 96 l 76.504 96 83.434 91.996
 87.188 85.5 c 90.938 79.004 90.938 70.996 87.188 64.5 c 83.434 58.004 76.504
 54 69 54 c h
69 90 m 63.641 90 58.688 87.141 56.008 82.5 c 53.332 77.859 53.332 72.141
 56.008 67.5 c 58.688 62.859 63.641 60 69 60 c 74.359 60 79.312 62.859 81.992
 67.5 c 84.668 72.141 84.668 77.859 81.992 82.5 c 79.312 87.141 74.359 90
 69 90 c 27 6 m 21.641 6 16.688 8.859 14.008 13.5 c 11.332 18.141 11.332
 23.859 14.008 28.5 c 16.688 33.141 21.641 36 27 36 c 32.359 36 37.312 33.141
 39.992 28.5 c 42.668 23.859 42.668 18.141 39.992 13.5 c 37.312 8.859 32.359
 6 27 6 c 41.699 6 m 45.73 9.949 48 15.355 48 21 c 48 26.645 45.73 32.051
 41.699 36 c 69 36 l 74.359 36 79.312 33.141 81.992 28.5 c 84.668 23.859
 84.668 18.141 81.992 13.5 c 79.312 8.859 74.359 6 69 6 c h
27 0 m 69 0 l 76.504 0 83.434 4.004 87.188 10.5 c 90.938 16.996 90.938 
25.004 87.188 31.5 c 83.434 37.996 76.504 42 69 42 c 27 42 l 19.496 42 12.566
 37.996 8.812 31.5 c 5.062 25.004 5.062 16.996 8.812 10.5 c 12.566 4.004
 19.496 0 27 0 c f
Q Q
showpage
%%Trailer
%%EOF
