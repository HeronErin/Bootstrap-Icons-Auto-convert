%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:26:59 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 48 0 720 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 48 0 720 768
768 768 cairo_set_page_size
%%EndPageSetup
q 48 0 672 768 rectclip
1 0 0 -1 0 768 cm q
0 g
216 432 m 171.445 432 128.711 449.699 97.207 481.207 c 65.699 512.711 48
 555.445 48 600 c 48 644.555 65.699 687.289 97.207 718.793 c 128.711 750.301
 171.445 768 216 768 c 552 768 l 596.555 768 639.289 750.301 670.793 718.793
 c 702.301 687.289 720 644.555 720 600 c 720 555.445 702.301 512.711 670.793
 481.207 c 639.289 449.699 596.555 432 552 432 c h
552 720 m 509.129 720 469.512 697.129 448.078 660 c 426.641 622.871 426.641
 577.129 448.078 540 c 469.512 502.871 509.129 480 552 480 c 594.871 480
 634.488 502.871 655.922 540 c 677.359 577.129 677.359 622.871 655.922 660
 c 634.488 697.129 594.871 720 552 720 c 216 48 m 173.129 48 133.512 70.871
 112.078 108 c 90.641 145.129 90.641 190.871 112.078 228 c 133.512 265.129
 173.129 288 216 288 c 258.871 288 298.488 265.129 319.922 228 c 341.359
 190.871 341.359 145.129 319.922 108 c 298.488 70.871 258.871 48 216 48 
c 333.602 48 m 349.559 63.645 362.238 82.316 370.895 102.922 c 379.547 123.527
 384.004 145.652 384 168 c 384.004 190.348 379.547 212.473 370.895 233.078
 c 362.238 253.684 349.559 272.355 333.602 288 c 552 288 l 594.871 288 634.488
 265.129 655.922 228 c 677.359 190.871 677.359 145.129 655.922 108 c 634.488
 70.871 594.871 48 552 48 c h
216 0 m 552 0 l 596.555 0 639.289 17.699 670.793 49.207 c 702.301 80.711
 720 123.445 720 168 c 720 212.555 702.301 255.289 670.793 286.793 c 639.289
 318.301 596.555 336 552 336 c 216 336 l 171.445 336 128.711 318.301 97.207
 286.793 c 65.699 255.289 48 212.555 48 168 c 48 123.445 65.699 80.711 97.207
 49.207 c 128.711 17.699 171.445 0 216 0 c f
Q Q
showpage
%%Trailer
%%EOF
