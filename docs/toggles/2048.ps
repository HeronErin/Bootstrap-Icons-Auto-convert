%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:00 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 0 1440 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 0 1440 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 0 1344 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
432 864 m 342.887 864 257.426 899.398 194.414 962.414 c 131.398 1025.426
 96 1110.887 96 1200 c 96 1289.113 131.398 1374.574 194.414 1437.586 c 257.426
 1500.602 342.887 1536 432 1536 c 1104 1536 l 1193.113 1536 1278.574 1500.602
 1341.586 1437.586 c 1404.602 1374.574 1440 1289.113 1440 1200 c 1440 1110.887
 1404.602 1025.426 1341.586 962.414 c 1278.574 899.398 1193.113 864 1104
 864 c h
1104 1440 m 1040.348 1440 979.305 1414.715 934.293 1369.707 c 889.285 1324.695
 864 1263.652 864 1200 c 864 1136.348 889.285 1075.305 934.293 1030.293 
c 979.305 985.285 1040.348 960 1104 960 c 1167.652 960 1228.695 985.285 
1273.707 1030.293 c 1318.715 1075.305 1344 1136.348 1344 1200 c 1344 1263.652
 1318.715 1324.695 1273.707 1369.707 c 1228.695 1414.715 1167.652 1440 1104
 1440 c 432 96 m 368.348 96 307.305 121.285 262.293 166.293 c 217.285 211.305
 192 272.348 192 336 c 192 399.652 217.285 460.695 262.293 505.707 c 307.305
 550.715 368.348 576 432 576 c 495.652 576 556.695 550.715 601.707 505.707
 c 646.715 460.695 672 399.652 672 336 c 672 272.348 646.715 211.305 601.707
 166.293 c 556.695 121.285 495.652 96 432 96 c 667.199 96 m 699.121 127.289
 724.477 164.633 741.785 205.844 c 759.094 247.051 768.008 291.301 768 336
 c 768.008 380.699 759.094 424.949 741.785 466.156 c 724.477 507.367 699.121
 544.711 667.199 576 c 1104 576 l 1167.652 576 1228.695 550.715 1273.707
 505.707 c 1318.715 460.695 1344 399.652 1344 336 c 1344 272.348 1318.715
 211.305 1273.707 166.293 c 1228.695 121.285 1167.652 96 1104 96 c h
432 0 m 1104 0 l 1193.113 0 1278.574 35.398 1341.586 98.414 c 1404.602 
161.426 1440 246.887 1440 336 c 1440 425.113 1404.602 510.574 1341.586 573.586
 c 1278.574 636.602 1193.113 672 1104 672 c 432 672 l 342.887 672 257.426
 636.602 194.414 573.586 c 131.398 510.574 96 425.113 96 336 c 96 246.887
 131.398 161.426 194.414 98.414 c 257.426 35.398 342.887 0 432 0 c f
Q Q
showpage
%%Trailer
%%EOF
