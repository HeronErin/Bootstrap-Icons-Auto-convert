%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 144 768 624
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 144 768 624
768 768 cairo_set_page_size
%%EndPageSetup
q 0 144 768 480 rectclip
1 0 0 -1 0 768 cm q
0 g
5.281 152.977 m 9.836 147.301 16.723 144 24 144 c 648 144 l 655.273 144.004
 662.152 147.305 666.707 152.977 c 671.262 158.648 672.996 166.082 671.426
 173.184 c 660.867 220.75 l 660.863 220.754 l 709.184 233.652 747.352 270.695
 761.699 318.602 c 776.047 366.512 764.516 418.438 731.238 455.77 c 697.961
 493.105 647.703 510.508 598.465 501.742 c 592.129 530.062 l 586.199 556.707
 571.367 580.531 550.074 597.609 c 528.781 614.688 502.301 623.996 475.008
 624 c 196.992 624 l 169.691 623.992 143.207 614.68 121.914 597.594 c 100.621
 580.504 85.789 556.668 79.871 530.016 c 0.574 173.184 l -0.984 166.098 
0.746 158.688 5.281 153.023 c h
608.832 454.801 m 641.438 460.191 674.527 448.43 696.414 423.668 c 718.305
 398.906 725.918 364.629 716.57 332.93 c 707.223 301.23 682.223 276.566 
650.398 267.648 c h
53.953 192 m 126.723 519.602 l 126.719 519.602 l 130.27 535.594 139.168
 549.898 151.941 560.152 c 164.719 570.406 180.609 575.996 196.992 576 c
 475.008 576 l 491.391 575.996 507.281 570.406 520.059 560.152 c 532.832
 549.898 541.73 535.594 545.281 519.602 c 618.098 192 l 53.902 192 l h
53.953 192 m f*
Q Q
showpage
%%Trailer
%%EOF
