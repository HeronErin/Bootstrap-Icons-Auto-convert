%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:34:56 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 0 0 768 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 0 0 768 768
768 768 cairo_set_page_size
%%EndPageSetup
q 0 0 768 768 rectclip
1 0 0 -1 0 768 cm q
0 g
414.527 600 m 414.527 606.363 412 612.469 407.5 616.969 c 402.996 621.473
 396.895 624 390.527 624 c 72 624 l 52.906 624 34.59 616.414 21.09 602.91
 c 7.586 589.41 0 571.094 0 552 c 0 72 l 0 52.906 7.586 34.59 21.09 21.09
 c 34.59 7.586 52.906 0 72 0 c 552 0 l 571.094 0 589.41 7.586 602.91 21.09
 c 616.414 34.59 624 52.906 624 72 c 624 390.527 l 624 399.102 619.426 407.027
 612 411.312 c 604.574 415.602 595.426 415.602 588 411.312 c 580.574 407.027
 576 399.102 576 390.527 c 576 72 l 576 65.637 573.473 59.531 568.969 55.031
 c 564.469 50.527 558.363 48 552 48 c 72 48 l 65.637 48 59.531 50.527 55.031
 55.031 c 50.527 59.531 48 65.637 48 72 c 48 552 l 48 558.363 50.527 564.469
 55.031 568.969 c 59.531 573.473 65.637 576 72 576 c 390.527 576 l 396.895
 576 402.996 578.527 407.5 583.031 c 412 587.531 414.527 593.637 414.527
 600 c f*
768 744 m 768 750.363 765.473 756.469 760.969 760.969 c 756.469 765.473
 750.363 768 744 768 c 504 768 l 495.426 768 487.504 763.426 483.215 756
 c 478.93 748.574 478.93 739.426 483.215 732 c 487.504 724.574 495.426 720
 504 720 c 686.062 720 l 295.008 328.992 l 288.938 322.922 286.566 314.074
 288.789 305.781 c 291.012 297.488 297.488 291.012 305.781 288.789 c 314.074
 286.566 322.922 288.938 328.992 295.008 c 720 686.062 l 720 504 l 720 495.426
 724.574 487.504 732 483.215 c 739.426 478.93 748.574 478.93 756 483.215
 c 763.426 487.504 768 495.426 768 504 c h
768 744 m f*
Q Q
showpage
%%Trailer
%%EOF
