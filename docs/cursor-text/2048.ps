%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:43 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 480 143 1056 1392
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 480 143 1056 1392
1536 1536 cairo_set_page_size
%%EndPageSetup
q 480 143 576 1249 rectclip
1 0 0 -1 0 1536 cm q
0 g
480 192 m 480 179.27 485.059 167.062 494.059 158.059 c 503.062 149.059 
515.27 144 528 144 c 610.754 144 679.008 171.551 725.762 198.336 c 742.465
 207.84 756.578 217.344 768 225.793 c 779.426 217.344 793.535 207.84 810.238
 198.336 c 870.324 163.359 938.48 144.633 1008 144 c 1025.148 144 1040.996
 153.148 1049.57 168 c 1058.145 182.852 1058.145 201.148 1049.57 216 c 1040.996
 230.852 1025.148 240 1008 240 c 946.754 240 895.008 260.449 857.855 281.664
 c 843.215 290.008 829.223 299.445 816 309.887 c 816 720 l 864 720 l 881.148
 720 896.996 729.148 905.57 744 c 914.145 758.852 914.145 777.148 905.57
 792 c 896.996 806.852 881.148 816 864 816 c 816 816 l 816 1226.113 l 825.602
 1233.793 839.809 1244.066 857.855 1254.336 c 895.008 1275.551 946.75 1296
 1008 1296 c 1025.148 1296 1040.996 1305.148 1049.57 1320 c 1058.145 1334.852
 1058.145 1353.148 1049.57 1368 c 1040.996 1382.852 1025.148 1392 1008 1392
 c 938.48 1391.367 870.324 1372.641 810.238 1337.664 c 795.695 1329.32 781.594
 1320.219 768 1310.398 c 754.406 1320.254 740.309 1329.387 725.762 1337.762
 c 665.676 1372.738 597.52 1391.465 528 1392.098 c 510.852 1392.098 495.004
 1382.945 486.43 1368.098 c 477.855 1353.246 477.855 1334.945 486.43 1320.098
 c 495.004 1305.246 510.852 1296.098 528 1296.098 c 589.246 1296.098 640.992
 1275.648 678.145 1254.434 c 696.191 1244.16 710.305 1233.891 720 1226.211
 c 720 816 l 672 816 l 654.852 816 639.004 806.852 630.43 792 c 621.855 
777.148 621.855 758.852 630.43 744 c 639.004 729.148 654.852 720 672 720
 c 720 720 l 720 309.887 l 706.777 299.445 692.785 290.008 678.145 281.664
 c 632.559 254.98 580.816 240.621 528 240 c 515.27 240 503.062 234.941 494.059
 225.941 c 485.059 216.938 480 204.73 480 192 c 734.207 1213.922 m f
Q Q
showpage
%%Trailer
%%EOF
