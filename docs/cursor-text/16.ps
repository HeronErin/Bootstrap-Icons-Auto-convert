%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 3 1 9 11
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 3 1 9 11
12 12 cairo_set_page_size
%%EndPageSetup
q 3 1 6 10 rectclip
1 0 0 -1 0 12 cm q
0 g
3.75 1.5 m 3.75 1.293 3.918 1.125 4.125 1.125 c 4.773 1.125 5.305 1.34 
5.672 1.551 c 5.801 1.625 5.914 1.699 6 1.766 c 6.09 1.699 6.199 1.625 6.328
 1.551 c 6.801 1.277 7.332 1.129 7.875 1.125 c 8.082 1.125 8.25 1.293 8.25
 1.5 c 8.25 1.707 8.082 1.875 7.875 1.875 c 7.398 1.875 6.992 2.035 6.703
 2.199 c 6.586 2.266 6.477 2.34 6.375 2.422 c 6.375 5.625 l 6.75 5.625 l
 6.957 5.625 7.125 5.793 7.125 6 c 7.125 6.207 6.957 6.375 6.75 6.375 c 
6.375 6.375 l 6.375 9.578 l 6.449 9.637 6.562 9.719 6.703 9.797 c 6.992 
9.961 7.398 10.121 7.875 10.121 c 7.875 10.125 l 8.082 10.125 8.25 10.293
 8.25 10.5 c 8.25 10.707 8.082 10.875 7.875 10.875 c 7.332 10.871 6.801 
10.723 6.328 10.449 c 6.215 10.387 6.105 10.312 6 10.238 c 5.895 10.316 
5.785 10.387 5.672 10.453 c 5.199 10.723 4.668 10.871 4.125 10.875 c 3.918
 10.875 3.75 10.707 3.75 10.5 c 3.75 10.293 3.918 10.125 4.125 10.125 c 
4.602 10.125 5.008 9.965 5.297 9.801 c 5.438 9.719 5.547 9.641 5.625 9.582
 c 5.625 6.375 l 5.25 6.375 l 5.043 6.375 4.875 6.207 4.875 6 c 4.875 5.793
 5.043 5.625 5.25 5.625 c 5.625 5.625 l 5.625 2.422 l 5.523 2.34 5.414 2.266
 5.297 2.199 c 4.941 1.992 4.539 1.879 4.125 1.875 c 3.918 1.875 3.75 1.707
 3.75 1.5 c 5.734 9.484 m f
Q Q
showpage
%%Trailer
%%EOF
