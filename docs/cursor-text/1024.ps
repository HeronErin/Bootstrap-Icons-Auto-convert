%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:23:42 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 240 71 528 696
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 240 71 528 696
768 768 cairo_set_page_size
%%EndPageSetup
q 240 71 288 625 rectclip
1 0 0 -1 0 768 cm q
0 g
240 96 m 240 89.637 242.527 83.531 247.031 79.031 c 251.531 74.527 257.637
 72 264 72 c 305.375 72 339.504 85.777 362.879 99.168 c 371.23 103.922 378.285
 108.672 384 112.895 c 389.711 108.672 396.77 103.918 405.121 99.168 c 435.16
 81.68 469.238 72.316 504 72 c 512.574 72 520.496 76.574 524.785 84 c 529.07
 91.426 529.07 100.574 524.785 108 c 520.496 115.426 512.574 120 504 120
 c 473.375 120 447.504 130.223 428.93 140.832 c 421.609 145.004 414.613 
149.723 408 154.945 c 408 360 l 432 360 l 440.574 360 448.496 364.574 452.785
 372 c 457.07 379.426 457.07 388.574 452.785 396 c 448.496 403.426 440.574
 408 432 408 c 408 408 l 408 613.055 l 412.801 616.895 419.902 622.031 428.93
 627.168 c 447.504 637.777 473.379 648 504 648 c 512.574 648 520.496 652.574
 524.785 660 c 529.07 667.426 529.07 676.574 524.785 684 c 520.496 691.426
 512.574 696 504 696 c 469.238 695.684 435.16 686.32 405.121 668.832 c 397.848
 664.66 390.797 660.109 384 655.199 c 377.203 660.125 370.156 664.691 362.879
 668.879 c 332.84 686.367 298.762 695.73 264 696.047 c 255.426 696.047 247.504
 691.473 243.215 684.047 c 238.93 676.621 238.93 667.473 243.215 660.047
 c 247.504 652.621 255.426 648.047 264 648.047 c 294.625 648.047 320.496
 637.824 339.07 627.215 c 348.094 622.078 355.148 616.941 360 613.102 c 
360 408 l 336 408 l 327.426 408 319.504 403.426 315.215 396 c 310.93 388.574
 310.93 379.426 315.215 372 c 319.504 364.574 327.426 360 336 360 c 360 
360 l 360 154.945 l 353.387 149.723 346.391 145.004 339.07 140.832 c 316.281
 127.492 290.406 120.312 264 120 c 257.637 120 251.531 117.473 247.031 112.969
 c 242.527 108.469 240 102.363 240 96 c 367.105 606.961 m f
Q Q
showpage
%%Trailer
%%EOF
