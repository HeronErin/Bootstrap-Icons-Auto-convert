%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:11 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
5.25 1.688 m 5.25 4.125 l 4.875 4.125 l 4.875 1.688 l 4.125 1.688 l 3.812
 1.688 3.562 1.438 3.562 1.125 c 3.562 0.375 l 1.5 0.375 l 1.293 0.375 1.125
 0.543 1.125 0.75 c 1.125 4.125 l 0.75 4.125 l 0.75 0.75 l 0.75 0.336 1.086
 0 1.5 0 c 3.562 0 l h
0.57 5.691 m 0.551 5.633 0.539 5.574 0.539 5.516 c 0.828 5.516 l 0.828 
5.551 0.836 5.586 0.855 5.617 c 0.891 5.676 0.953 5.711 1.023 5.711 c 1.094
 5.711 1.148 5.691 1.184 5.648 c 1.219 5.605 1.234 5.551 1.234 5.473 c 1.234
 4.445 l 1.531 4.445 l 1.531 5.469 l 1.531 5.633 1.488 5.758 1.398 5.844
 c 1.309 5.93 1.188 5.973 1.031 5.973 c 1.027 5.973 l 0.953 5.973 0.883 
5.961 0.816 5.938 c 0.758 5.914 0.703 5.883 0.66 5.836 c 0.621 5.797 0.59
 5.746 0.57 5.691 c 2.059 5.559 m 1.941 5.945 l 1.641 5.945 l 2.145 4.445
 l 2.492 4.445 l 2.992 5.945 l 2.676 5.945 l 2.559 5.559 l h
2.5 5.336 m 2.316 4.73 l 2.305 4.73 l 2.121 5.336 l h
3.379 5.941 m 3.734 5.941 l 4.23 4.441 l 3.902 4.441 l 3.57 5.617 l 3.555
 5.617 l 3.223 4.445 l 2.879 4.445 l h
4.535 5.555 m 4.418 5.941 l 4.117 5.941 l 4.621 4.441 l 4.969 4.441 l 5.469
 5.941 l 5.152 5.941 l 5.035 5.555 l h
4.977 5.332 m 4.793 4.727 l 4.781 4.727 l 4.598 5.332 l h
4.977 5.332 m f*
Q Q
showpage
%%Trailer
%%EOF
