%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 17 0 176 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 17 0 176 192
192 192 cairo_set_page_size
%%EndPageSetup
q 17 0 159 192 rectclip
1 0 0 -1 0 192 cm q
0 g
168 54 m 168 132 l 156 132 l 156 54 l 132 54 l 127.227 54 122.648 52.105
 119.273 48.727 c 115.895 45.352 114 40.773 114 36 c 114 12 l 48 12 l 41.371
 12 36 17.371 36 24 c 36 132 l 24 132 l 24 24 l 24 17.637 26.527 11.531 
31.031 7.031 c 35.531 2.527 41.637 0 48 0 c 114 0 l h
18.254 182.102 m 17.586 180.312 17.25 178.418 17.27 176.508 c 26.449 176.508
 l 26.48 177.641 26.781 178.754 27.324 179.746 c 28.453 181.668 30.551 182.801
 32.773 182.699 c 35.055 182.699 36.742 182.043 37.836 180.73 c 38.941 179.41
 39.492 177.547 39.492 175.137 c 39.492 142.199 l 48.973 142.199 l 48.973
 174.898 l 48.973 180.18 47.543 184.199 44.688 186.957 c 41.855 189.719 
37.918 191.098 32.879 191.098 c 32.879 191.102 l 30.559 191.141 28.25 190.758
 26.062 189.973 c 24.215 189.289 22.539 188.195 21.168 186.781 c 19.879 
185.441 18.883 183.848 18.254 182.102 c 65.918 177.855 m 62.148 190.191 
l 52.547 190.191 l 68.652 142.203 l 79.766 142.203 l 95.797 190.191 l 85.719
 190.191 l 81.949 177.855 l h
80.055 170.777 m 74.176 151.387 l 73.754 151.387 l 67.875 170.789 l h
108.16 190.191 m 119.586 190.191 l 135.512 142.203 l 124.977 142.203 l 
114.32 179.859 l 113.863 179.859 l 103.078 142.199 l 92.074 142.199 l h
145.203 177.855 m 141.434 190.191 l 131.832 190.191 l 147.938 142.203 l
 159.051 142.203 l 175.082 190.191 l 165.004 190.191 l 161.234 177.855 l
 h
159.34 170.777 m 153.461 151.387 l 153.039 151.387 l 147.16 170.789 l h
159.34 170.777 m f*
Q Q
showpage
%%Trailer
%%EOF
