%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 34 1 351 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 34 1 351 384
384 384 cairo_set_page_size
%%EndPageSetup
q 34 1 317 383 rectclip
1 0 0 -1 0 384 cm q
0 g
336 108 m 336 264 l 312 264 l 312 108 l 264 108 l 254.453 108 245.297 104.207
 238.543 97.457 c 231.793 90.703 228 81.547 228 72 c 228 24 l 96 24 l 89.637
 24 83.531 26.527 79.031 31.031 c 74.527 35.531 72 41.637 72 48 c 72 264
 l 48 264 l 48 48 l 48 35.27 53.059 23.062 62.059 14.059 c 71.062 5.059 
83.27 0 96 0 c 228 0 l h
36.504 364.199 m 35.168 360.625 34.504 356.832 34.535 353.016 c 52.895 
353.016 l 52.961 355.285 53.562 357.504 54.648 359.496 c 56.902 363.332 
61.098 365.605 65.543 365.398 c 70.102 365.398 73.48 364.086 75.672 361.461
 c 77.879 358.82 78.984 355.094 78.984 350.277 c 78.984 284.398 l 97.945
 284.398 l 97.945 349.797 l 97.945 360.355 95.09 368.398 89.379 373.918 
c 83.715 379.438 75.844 382.199 65.762 382.199 c 61.117 382.277 56.5 381.516
 52.129 379.945 c 48.43 378.574 45.082 376.395 42.336 373.559 c 39.754 370.887
 37.766 367.695 36.504 364.199 c 131.832 355.703 m 124.297 380.375 l 105.098
 380.375 l 137.305 284.398 l 159.527 284.398 l 191.59 380.375 l 171.43 380.375
 l 163.895 355.703 l h
160.105 341.543 m 148.344 302.758 l 147.504 302.758 l 135.742 341.566 l
 h
216.312 380.375 m 239.16 380.375 l 271.008 284.398 l 249.938 284.398 l 
228.625 359.711 l 227.715 359.711 l 206.16 284.398 l 184.152 284.398 l h
290.402 355.703 m 282.867 380.375 l 263.668 380.375 l 295.875 284.398 l
 318.098 284.398 l 350.16 380.375 l 330 380.375 l 322.465 355.703 l h
318.676 341.543 m 306.914 302.758 l 306.074 302.758 l 294.312 341.566 l
 h
318.676 341.543 m f*
Q Q
showpage
%%Trailer
%%EOF
