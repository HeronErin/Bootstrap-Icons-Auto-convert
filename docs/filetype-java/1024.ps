%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:14 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 69 3 701 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 69 3 701 768
768 768 cairo_set_page_size
%%EndPageSetup
q 69 3 632 765 rectclip
1 0 0 -1 0 768 cm q
0 g
672 216 m 672 528 l 624 528 l 624 216 l 528 216 l 508.906 216 490.59 208.414
 477.09 194.91 c 463.586 181.41 456 163.094 456 144 c 456 48 l 192 48 l 
179.27 48 167.062 53.059 158.059 62.059 c 149.059 71.062 144 83.27 144 96
 c 144 528 l 96 528 l 96 96 l 96 70.539 106.113 46.121 124.117 28.117 c 
142.121 10.113 166.539 0 192 0 c 456 0 l h
73.008 728.398 m 70.34 721.246 69.004 713.664 69.07 706.031 c 105.793 706.031
 l 105.922 710.566 107.125 715.008 109.297 718.992 c 111.512 722.758 114.711
 725.848 118.551 727.926 c 122.391 730.008 126.727 731 131.09 730.801 c 
140.211 730.801 146.961 728.176 151.348 722.93 c 155.762 717.648 157.973
 710.195 157.973 700.562 c 157.969 568.801 l 195.891 568.801 l 195.891 699.602
 l 195.891 720.723 190.18 736.801 178.754 747.84 c 167.426 758.879 151.684
 764.398 131.523 764.398 c 131.52 764.398 l 122.234 764.559 112.996 763.027
 104.258 759.887 c 96.855 757.148 90.164 752.785 84.672 747.121 c 79.508
 741.77 75.535 735.391 73.008 728.398 c 263.664 711.406 m 248.594 760.75
 l 210.195 760.75 l 274.609 568.797 l 319.059 568.797 l 383.188 760.75 l
 342.867 760.75 l 327.797 711.406 l h
320.207 683.086 m 296.688 605.52 l 295.008 605.52 l 271.488 683.137 l h
432.621 760.75 m 478.316 760.75 l 542.012 568.797 l 499.867 568.797 l 457.242
 719.422 l 455.418 719.422 l 412.32 568.801 l 368.305 568.801 l h
580.797 711.406 m 565.727 760.75 l 527.328 760.75 l 591.742 568.797 l 636.191
 568.797 l 700.32 760.75 l 660 760.75 l 644.93 711.406 l h
637.34 683.086 m 613.82 605.52 l 612.141 605.52 l 588.621 683.137 l h
637.34 683.086 m f*
Q Q
showpage
%%Trailer
%%EOF
