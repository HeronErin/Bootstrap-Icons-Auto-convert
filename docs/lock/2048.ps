%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:51 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 288 0 1248 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 288 0 1248 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 288 0 960 1536 rectclip
1 0 0 -1 0 1536 cm q
0 g
768 96 m 801.703 96 834.812 104.871 864 121.723 c 893.188 138.574 917.426
 162.812 934.277 192 c 951.129 221.188 960 254.297 960 288 c 960 672 l 576
 672 l 576 288 l 576 237.078 596.227 188.242 632.234 152.234 c 668.242 116.227
 717.078 96 768 96 c 1056 672 m 1056 288 l 1056 211.617 1025.656 138.363
 971.648 84.352 c 917.637 30.344 844.383 0 768 0 c 691.617 0 618.363 30.344
 564.352 84.352 c 510.344 138.363 480 211.617 480 288 c 480 672 l 429.078
 672 380.242 692.227 344.234 728.234 c 308.227 764.242 288 813.078 288 864
 c 288 1344 l 288 1377.703 296.871 1410.812 313.723 1440 c 330.574 1469.188
 354.812 1493.426 384 1510.277 c 413.188 1527.129 446.297 1536 480 1536 
c 1056 1536 l 1089.703 1536 1122.812 1527.129 1152 1510.277 c 1181.188 1493.426
 1205.426 1469.188 1222.277 1440 c 1239.129 1410.812 1248 1377.703 1248 
1344 c 1248 864 l 1248 830.297 1239.129 797.188 1222.277 768 c 1205.426 
738.812 1181.188 714.574 1152 697.723 c 1122.812 680.871 1089.703 672 1056
 672 c 480 768 m 1056 768 l 1081.461 768 1105.879 778.113 1123.883 796.117
 c 1141.887 814.121 1152 838.539 1152 864 c 1152 1344 l 1152 1369.461 1141.887
 1393.879 1123.883 1411.883 c 1105.879 1429.887 1081.461 1440 1056 1440 
c 480 1440 l 454.539 1440 430.121 1429.887 412.117 1411.883 c 394.113 1393.879
 384 1369.461 384 1344 c 384 864 l 384 838.539 394.113 814.121 412.117 796.117
 c 430.121 778.113 454.539 768 480 768 c f
Q Q
showpage
%%Trailer
%%EOF
