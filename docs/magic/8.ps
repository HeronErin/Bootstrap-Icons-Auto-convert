%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:53 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
3.562 1.004 m 3.562 1.254 3.938 1.254 3.938 1.004 c 3.938 0.316 l 3.938
 0.066 3.562 0.066 3.562 0.316 c h
5.25 1.016 m 5.422 0.84 5.16 0.578 4.984 0.75 c 4.5 1.234 l 4.426 1.309
 4.422 1.43 4.496 1.504 c 4.57 1.578 4.691 1.574 4.766 1.5 c h
2.734 1.5 m 2.809 1.574 2.93 1.578 3.004 1.504 c 3.078 1.43 3.074 1.309
 3 1.234 c 2.516 0.75 l 2.34 0.578 2.078 0.84 2.25 1.016 c h
2.5 2.438 m 2.504 2.438 l 2.754 2.438 2.754 2.062 2.504 2.062 c 1.816 2.062
 l 1.566 2.062 1.566 2.438 1.816 2.438 c h
5.684 2.438 m 5.934 2.438 5.934 2.062 5.684 2.062 c 4.996 2.062 l 4.746
 2.062 4.746 2.438 4.996 2.438 c h
4.984 3.75 m 5.059 3.824 5.18 3.828 5.254 3.754 c 5.328 3.68 5.324 3.559
 5.25 3.484 c 4.766 3 l 4.691 2.926 4.57 2.922 4.496 2.996 c 4.422 3.07 
4.426 3.191 4.5 3.266 c h
3.562 4.184 m 3.562 4.434 3.938 4.434 3.938 4.184 c 3.938 3.496 l 3.938
 3.246 3.562 3.246 3.562 3.496 c h
4.258 2.273 m 4.332 2.199 4.332 2.082 4.258 2.008 c 3.992 1.742 l 3.918
 1.668 3.801 1.668 3.727 1.742 c 3.242 2.227 l 3.168 2.301 3.168 2.418 3.242
 2.492 c 3.508 2.758 l 3.582 2.832 3.699 2.832 3.773 2.758 c h
3.133 3.398 m 3.207 3.324 3.207 3.207 3.133 3.133 c 2.867 2.867 l 2.793
 2.793 2.676 2.793 2.602 2.867 c 0.242 5.227 l 0.168 5.301 0.168 5.418 0.242
 5.492 c 0.508 5.758 l 0.582 5.832 0.699 5.832 0.773 5.758 c h
3.133 3.398 m f
Q Q
showpage
%%Trailer
%%EOF
