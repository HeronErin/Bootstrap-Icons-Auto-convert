%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 2 2 94 94
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 2 2 94 94
96 96 cairo_set_page_size
%%EndPageSetup
q 2 2 92 92 rectclip
1 0 0 -1 0 96 cm q
0 g
57 16.031 m 57 17.688 58.344 19.031 60 19.031 c 61.656 19.031 63 17.688
 63 16.031 c 63 5.059 l 63 3.402 61.656 2.059 60 2.059 c 58.344 2.059 57
 3.402 57 5.059 c h
84 16.242 m 85.137 15.066 85.121 13.195 83.965 12.035 c 82.805 10.879 80.934
 10.863 79.758 12 c 72 19.758 l 71.422 20.316 71.09 21.086 71.086 21.891
 c 71.078 22.695 71.395 23.469 71.961 24.039 c 72.531 24.605 73.305 24.922
 74.109 24.914 c 74.914 24.91 75.684 24.578 76.242 24 c h
43.758 24 m 44.316 24.578 45.086 24.91 45.891 24.914 c 46.695 24.922 47.469
 24.605 48.039 24.039 c 48.605 23.469 48.922 22.695 48.914 21.891 c 48.91
 21.086 48.578 20.316 48 19.758 c 40.242 12 l 39.066 10.863 37.195 10.879
 36.035 12.035 c 34.879 13.195 34.863 15.066 36 16.242 c h
40.031 39 m 41.688 39 43.031 37.656 43.031 36 c 43.031 34.344 41.688 33
 40.031 33 c 29.059 33 l 27.402 33 26.059 34.344 26.059 36 c 26.059 37.656
 27.402 39 29.059 39 c h
90.941 39 m 92.598 39 93.941 37.656 93.941 36 c 93.941 34.344 92.598 33
 90.941 33 c 79.969 33 l 78.312 33 76.969 34.344 76.969 36 c 76.969 37.656
 78.312 39 79.969 39 c h
79.758 60 m 80.316 60.578 81.086 60.91 81.891 60.914 c 82.695 60.922 83.469
 60.605 84.039 60.039 c 84.605 59.469 84.922 58.695 84.914 57.891 c 84.91
 57.086 84.578 56.316 84 55.758 c 76.242 48 l 75.684 47.422 74.914 47.09
 74.109 47.086 c 73.305 47.078 72.531 47.395 71.961 47.961 c 71.395 48.531
 71.078 49.305 71.086 50.109 c 71.09 50.914 71.422 51.684 72 52.242 c h
57 66.941 m 57 68.598 58.344 69.941 60 69.941 c 61.656 69.941 63 68.598
 63 66.941 c 63 55.969 l 63 54.312 61.656 52.969 60 52.969 c 58.344 52.969
 57 54.312 57 55.969 c h
68.125 36.359 m 69.293 35.188 69.293 33.293 68.125 32.125 c 63.875 27.875
 l 62.703 26.703 60.805 26.703 59.633 27.875 c 51.875 35.641 l 50.703 36.812
 50.703 38.711 51.875 39.883 c 56.121 44.129 l 56.125 44.129 l 57.297 45.301
 59.195 45.301 60.367 44.129 c 68.125 36.371 l h
50.125 54.359 m 51.293 53.188 51.293 51.293 50.125 50.125 c 45.875 45.875
 l 44.703 44.703 42.805 44.703 41.633 45.875 c 3.875 83.641 l 2.703 84.812
 2.703 86.711 3.875 87.883 c 8.121 92.129 l 8.125 92.129 l 9.297 93.301 
11.195 93.301 12.367 92.129 c h
50.125 54.359 m f
Q Q
showpage
%%Trailer
%%EOF
