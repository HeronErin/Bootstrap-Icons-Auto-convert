%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:54 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 5 5 188 188
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 5 5 188 188
192 192 cairo_set_page_size
%%EndPageSetup
q 5 5 183 183 rectclip
1 0 0 -1 0 192 cm q
0 g
114 32.062 m 114 35.379 116.688 38.062 120 38.062 c 123.312 38.062 126 
35.379 126 32.062 c 126 10.117 l 126 6.801 123.312 4.117 120 4.117 c 116.688
 4.117 114 6.801 114 10.117 c h
168 32.484 m 170.273 30.129 170.242 26.387 167.926 24.074 c 165.613 21.758
 161.871 21.727 159.516 24 c 144 39.516 l 142.844 40.633 142.184 42.172 
142.168 43.781 c 142.156 45.391 142.789 46.938 143.926 48.074 c 145.062 
49.211 146.609 49.844 148.219 49.832 c 149.828 49.816 151.367 49.156 152.484
 48 c h
87.516 48 m 88.633 49.156 90.172 49.816 91.781 49.832 c 93.391 49.844 94.938
 49.211 96.074 48.074 c 97.211 46.938 97.844 45.391 97.832 43.781 c 97.816
 42.172 97.156 40.633 96 39.516 c 80.484 24 l 78.129 21.727 74.387 21.758
 72.074 24.074 c 69.758 26.387 69.727 30.129 72 32.484 c h
80.062 78 m 83.379 78 86.062 75.312 86.062 72 c 86.062 68.688 83.379 66
 80.062 66 c 58.117 66 l 54.801 66 52.117 68.688 52.117 72 c 52.117 75.312
 54.801 78 58.117 78 c h
181.883 78 m 185.199 78 187.883 75.312 187.883 72 c 187.883 68.688 185.199
 66 181.883 66 c 159.934 66 l 159.938 66 l 156.621 66 153.938 68.688 153.938
 72 c 153.938 75.312 156.621 78 159.938 78 c h
159.516 120 m 160.633 121.156 162.172 121.816 163.781 121.832 c 165.391
 121.844 166.938 121.211 168.074 120.074 c 169.211 118.938 169.844 117.391
 169.832 115.781 c 169.816 114.172 169.156 112.633 168 111.516 c 152.484
 96 l 151.367 94.844 149.828 94.184 148.219 94.168 c 146.609 94.156 145.062
 94.789 143.926 95.926 c 142.789 97.062 142.156 98.609 142.168 100.219 c
 142.184 101.828 142.844 103.367 144 104.484 c h
114 133.883 m 114 137.199 116.688 139.883 120 139.883 c 123.312 139.883
 126 137.199 126 133.883 c 126 111.938 l 126 108.621 123.312 105.938 120
 105.938 c 116.688 105.938 114 108.621 114 111.938 c h
136.246 72.719 m 138.582 70.379 138.582 66.59 136.246 64.246 c 127.75 55.75
 l 127.754 55.754 l 125.41 53.41 121.609 53.41 119.27 55.754 c 103.754 71.281
 l 101.41 73.621 101.41 77.422 103.754 79.766 c 112.25 88.262 l 112.246 
88.262 l 114.59 90.602 118.391 90.602 120.73 88.262 c 136.246 72.746 l h
100.246 108.719 m 102.582 106.379 102.582 102.59 100.246 100.246 c 91.75
 91.75 l 91.754 91.754 l 89.41 89.41 85.609 89.41 83.27 91.754 c 7.754 167.281
 l 5.41 169.621 5.41 173.422 7.754 175.766 c 16.25 184.262 l 16.246 184.262
 l 18.59 186.602 22.391 186.602 24.73 184.262 c h
100.246 108.719 m f
Q Q
showpage
%%Trailer
%%EOF
