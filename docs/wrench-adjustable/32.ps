%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0 g
24 6.75 m 24 8.809 23.059 10.758 21.445 12.039 c 19.5 7.5 l 23.938 5.836
 l 23.977 6.137 23.996 6.441 24 6.75 c f
17.25 13.5 m 18.23 13.5 19.16 13.293 20 12.914 c 18 8.25 l 16.5 4.5 l 22.238
 2.203 l 20.059 -0.191 16.48 -0.699 13.719 0.996 c 10.957 2.691 9.789 6.109
 10.934 9.137 c 1.758 16.781 l 1.762 16.781 l 0.926 17.48 0.422 18.496 0.371
 19.582 c 0.324 20.672 0.734 21.727 1.504 22.496 c 2.273 23.266 3.328 23.676
 4.418 23.629 c 5.504 23.578 6.52 23.074 7.219 22.238 c 14.863 13.066 l 
15.625 13.352 16.434 13.5 17.25 13.5 c 15.312 6.957 m 14.418 8.297 l 15.633
 7.891 l 15.633 7.895 l 15.785 7.84 15.953 7.895 16.051 8.02 c 16.148 8.148
 16.152 8.324 16.062 8.457 c 15.168 9.797 l 16.383 9.391 l 16.621 10.102
 l 14.371 10.852 l 14.367 10.855 l 14.215 10.906 14.051 10.855 13.953 10.727
 c 13.855 10.602 13.848 10.426 13.938 10.293 c 14.832 8.953 l 13.617 9.359
 l 13.617 9.355 l 13.465 9.41 13.297 9.355 13.199 9.23 c 13.102 9.102 13.098
 8.926 13.188 8.793 c 14.082 7.453 l 12.867 7.859 l 12.629 7.148 l 14.879
 6.398 l 14.883 6.395 l 15.035 6.344 15.199 6.395 15.297 6.523 c 15.395 
6.648 15.402 6.824 15.312 6.957 c 4.5 21 m 3.672 21 3 20.328 3 19.5 c 3 
18.672 3.672 18 4.5 18 c 5.328 18 6 18.672 6 19.5 c 6 20.328 5.328 21 4.5
 21 c f
Q Q
showpage
%%Trailer
%%EOF
