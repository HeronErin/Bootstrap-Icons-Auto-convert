%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
12 3.375 m 12 4.406 11.531 5.379 10.723 6.02 c 9.75 3.75 l 11.969 2.918
 l 11.988 3.066 12 3.219 12 3.375 c f
8.625 6.75 m 9.113 6.75 9.578 6.645 10 6.457 c 9 4.125 l 8.25 2.25 l 11.121
 1.102 l 10.027 -0.094 8.242 -0.348 6.859 0.496 c 5.48 1.344 4.895 3.055
 5.469 4.57 c 0.883 8.391 l 0.879 8.391 l 0.461 8.738 0.211 9.246 0.188 
9.793 c 0.16 10.336 0.367 10.863 0.75 11.25 c 1.137 11.633 1.664 11.84 2.207
 11.812 c 2.754 11.789 3.262 11.539 3.609 11.121 c 7.43 6.531 l 7.812 6.676
 8.219 6.75 8.625 6.75 c 7.656 3.48 m 7.211 4.148 l 7.816 3.945 l 7.984 
3.891 8.133 4.082 8.031 4.23 c 7.586 4.898 l 8.191 4.695 l 8.309 5.051 l
 7.184 5.426 l 7.184 5.43 l 7.016 5.484 6.871 5.293 6.969 5.145 c 7.414 
4.477 l 6.809 4.68 l 6.641 4.734 6.492 4.543 6.594 4.395 c 7.039 3.727 l
 6.434 3.93 l 6.316 3.574 l 7.441 3.199 l 7.441 3.195 l 7.609 3.141 7.754
 3.332 7.656 3.48 c 2.25 10.5 m 1.836 10.5 1.5 10.164 1.5 9.75 c 1.5 9.336
 1.836 9 2.25 9 c 2.664 9 3 9.336 3 9.75 c 3 10.164 2.664 10.5 2.25 10.5
 c f
Q Q
showpage
%%Trailer
%%EOF
