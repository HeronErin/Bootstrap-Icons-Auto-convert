%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:33 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 23 23 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 23 23 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 23 23 1513 1513 rectclip
1 0 0 -1 0 1536 cm q
0 g
1536 432 m 1536.012 497.094 1521.312 561.348 1493.004 619.961 c 1464.695
 678.578 1423.504 730.035 1372.512 770.496 c 1248 480 l 1532.062 373.441
 l 1534.621 392.641 1535.934 412.16 1536 432 c f
1104 864 m 1166.688 864 1226.207 850.656 1279.969 826.559 c 1152 528 l 
1056 288 l 1423.297 141.121 l 1355.609 66.801 1264.125 18.41 1164.598 4.285
 c 1065.07 -9.836 963.734 11.191 878.043 63.746 c 792.352 116.301 727.672
 197.098 695.145 292.211 c 662.617 387.328 664.277 490.809 699.84 584.832
 c 112.703 1074.047 l 77.324 1103.547 50.863 1142.316 36.281 1186.012 c 
21.699 1229.707 19.582 1276.602 30.156 1321.434 c 40.734 1366.266 63.59 
1407.27 96.16 1439.84 c 128.73 1472.41 169.734 1495.266 214.566 1505.844
 c 259.398 1516.418 306.293 1514.301 349.988 1499.719 c 393.684 1485.137
 432.453 1458.676 461.953 1423.297 c 951.168 836.16 l 1000.012 854.598 1051.793
 864.031 1104 864 c 979.969 445.344 m 922.754 531.07 l 1000.418 505.148 
l 1000.414 505.152 l 1006.805 502.996 1013.801 503.625 1019.703 506.887 
c 1025.602 510.145 1029.859 515.738 1031.43 522.293 c 1033.004 528.848 1031.746
 535.762 1027.969 541.344 c 970.754 627.07 l 1048.418 601.148 l 1063.586
 646.75 l 919.586 694.75 l 919.586 694.754 l 913.215 696.875 906.25 696.234
 900.375 692.984 c 894.5 689.738 890.254 684.176 888.668 677.652 c 887.082
 671.129 888.305 664.238 892.031 658.656 c 949.246 572.93 l 871.582 598.852
 l 871.586 598.848 l 865.195 601.004 858.199 600.375 852.297 597.113 c 846.398
 593.855 842.141 588.262 840.57 581.707 c 838.996 575.152 840.254 568.238
 844.031 562.656 c 901.246 476.93 l 823.582 502.852 l 808.414 457.25 l 952.414
 409.25 l 952.414 409.246 l 958.785 407.125 965.75 407.766 971.625 411.016
 c 977.5 414.262 981.746 419.824 983.332 426.348 c 984.918 432.871 983.695
 439.762 979.969 445.344 c 288 1344 m 253.703 1344 222.012 1325.703 204.863
 1296 c 187.711 1266.297 187.711 1229.703 204.863 1200 c 222.012 1170.297
 253.703 1152 288 1152 c 322.297 1152 353.988 1170.297 371.137 1200 c 388.289
 1229.703 388.289 1266.297 371.137 1296 c 353.988 1325.703 322.297 1344 
288 1344 c f
Q Q
showpage
%%Trailer
%%EOF
