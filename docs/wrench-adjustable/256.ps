%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 2 2 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 2 2 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 2 2 190 190 rectclip
1 0 0 -1 0 192 cm q
0 g
192 54 m 192.004 70.484 184.477 86.066 171.562 96.312 c 156 60 l 191.508
 46.68 l 191.828 49.078 191.992 51.52 192 54 c f
138 108 m 145.836 108 153.277 106.332 159.996 103.32 c 144 66 l 132 36 
l 177.91 17.641 l 166.543 5.156 149.984 -1.293 133.168 0.215 c 116.348 1.723
 101.203 11.012 92.234 25.32 c 83.266 39.629 81.508 57.309 87.48 73.105 
c 14.09 134.258 l 7.402 139.832 3.367 147.965 2.973 156.66 c 2.578 165.359
 5.863 173.824 12.02 179.98 c 18.176 186.137 26.641 189.422 35.34 189.027
 c 44.035 188.633 52.168 184.598 57.742 177.91 c 118.895 104.52 l 125 106.824
 131.473 108.004 138 108 c 122.496 55.668 m 115.344 66.383 l 125.051 63.145
 l 126.273 62.73 127.617 63.145 128.398 64.168 c 129.18 65.195 129.219 66.602
 128.496 67.668 c 121.344 78.383 l 131.051 75.145 l 132.945 80.844 l 114.945
 86.844 l 114.949 86.844 l 113.73 87.25 112.391 86.836 111.613 85.816 c 
110.836 84.801 110.793 83.398 111.504 82.332 c 118.656 71.617 l 108.949 
74.855 l 107.727 75.27 106.383 74.855 105.602 73.832 c 104.82 72.805 104.781
 71.398 105.504 70.332 c 112.656 59.617 l 102.949 62.855 l 101.055 57.156
 l 119.055 51.156 l 119.051 51.156 l 120.27 50.75 121.609 51.164 122.387
 52.184 c 123.164 53.199 123.207 54.602 122.496 55.668 c 36 168 m 29.371
 168 24 162.629 24 156 c 24 149.371 29.371 144 36 144 c 42.629 144 48 149.371
 48 156 c 48 162.629 42.629 168 36 168 c f
Q Q
showpage
%%Trailer
%%EOF
