%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:31 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 34x34mm 96 96 0 () ()
%%BoundingBox: 1 1 96 96
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 34x34mm
%%PageBoundingBox: 1 1 96 96
96 96 cairo_set_page_size
%%EndPageSetup
q 1 1 95 95 rectclip
1 0 0 -1 0 96 cm q
0 g
96 27 m 96 35.242 92.238 43.031 85.781 48.156 c 78 30 l 95.754 23.34 l 
95.914 24.539 95.996 25.762 96 27 c f
69 54 m 72.918 54 76.637 53.164 79.996 51.66 c 72 33 l 66 18 l 88.957 8.82
 l 83.27 2.578 74.992 -0.645 66.582 0.109 c 58.172 0.863 50.602 5.508 46.117
 12.66 c 41.633 19.816 40.754 28.656 43.738 36.551 c 7.043 67.125 l 7.043
 67.129 l 3.699 69.914 1.684 73.98 1.488 78.332 c 1.289 82.68 2.93 86.91
 6.012 89.988 c 9.09 93.07 13.32 94.711 17.668 94.512 c 22.02 94.316 26.086
 92.301 28.871 88.957 c 59.449 52.262 l 62.5 53.414 65.738 54 69 54 c 61.246
 27.836 m 57.672 33.195 l 62.527 31.574 l 62.527 31.57 l 63.137 31.367 63.809
 31.574 64.199 32.086 c 64.59 32.598 64.609 33.301 64.246 33.836 c 60.672
 39.195 l 65.527 37.574 l 66.477 40.426 l 57.477 43.426 l 57.473 43.422 
l 56.867 43.625 56.195 43.418 55.809 42.91 c 55.418 42.398 55.395 41.699
 55.754 41.164 c 59.328 35.805 l 54.473 37.426 l 54.473 37.43 l 53.863 37.633
 53.191 37.426 52.801 36.914 c 52.41 36.402 52.391 35.699 52.754 35.164 
c 56.328 29.805 l 51.473 31.426 l 50.523 28.574 l 59.523 25.574 l 59.527
 25.578 l 60.133 25.375 60.805 25.582 61.191 26.09 c 61.582 26.602 61.605
 27.301 61.246 27.836 c 18 84 m 14.688 84 12 81.312 12 78 c 12 74.688 14.688
 72 18 72 c 21.312 72 24 74.688 24 78 c 24 81.312 21.312 84 18 84 c f
Q Q
showpage
%%Trailer
%%EOF
