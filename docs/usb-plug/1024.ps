%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:31:25 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 240 0 576 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 240 0 576 768
768 768 cairo_set_page_size
%%EndPageSetup
q 240 0 336 768 rectclip
1 0 0 -1 0 768 cm q
0 g
288 24 m 288 17.637 290.527 11.531 295.031 7.031 c 299.531 2.527 305.637
 0 312 0 c 504 0 l 510.363 0 516.469 2.527 520.969 7.031 c 525.473 11.531
 528 17.637 528 24 c 528 216 l 288 216 l h
336 48 m 336 96 l 384 96 l 384 48 l h
432 48 m 432 96 l 480 96 l 480 48 l h
288 240 m 275.27 240 263.062 245.059 254.059 254.059 c 245.059 263.062 
240 275.27 240 288 c 240 498.91 l 240 522.621 247.008 545.758 260.16 565.484
 c 309.984 640.27 l 326.977 665.711 336 695.566 336 726.141 c 336 749.23
 354.719 767.996 377.855 767.996 c 438.145 767.996 l 461.234 767.996 480
 749.277 480 726.141 c 480 695.566 489.023 665.66 505.969 640.27 c 555.891
 565.484 l 555.887 565.488 l 569.016 545.77 576.016 522.602 576 498.91 c
 576 288 l 576 275.27 570.941 263.062 561.941 254.059 c 552.938 245.059 
540.73 240 528 240 c h
288 288 m 528 288 l 528 498.91 l 528 513.125 523.789 527.023 515.902 538.848
 c 466.078 613.633 l 444.961 645.18 433.184 682.051 432.098 720 c 383.902
 720 l 382.832 682.055 371.066 645.188 349.969 613.633 c 300.047 538.848
 l 292.18 527.016 287.988 513.121 288 498.91 c h
288 288 m f
Q Q
showpage
%%Trailer
%%EOF
