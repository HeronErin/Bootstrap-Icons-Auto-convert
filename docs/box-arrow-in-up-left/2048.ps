%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:27:13 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 96 95 1441 1440
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 96 95 1441 1440
1536 1536 cairo_set_page_size
%%EndPageSetup
q 96 95 1345 1345 rectclip
1 0 0 -1 0 1536 cm q
0 g
925.055 1296 m 925.055 1308.73 920 1320.938 910.996 1329.941 c 901.996 
1338.941 889.785 1344 877.055 1344 c 240 1344 l 201.809 1344 165.184 1328.828
 138.176 1301.824 c 111.172 1274.816 96 1238.191 96 1200 c 96 240 l 96 201.809
 111.172 165.184 138.176 138.176 c 165.184 111.172 201.809 96 240 96 c 1200
 96 l 1238.191 96 1274.816 111.172 1301.824 138.176 c 1328.828 165.184 1344
 201.809 1344 240 c 1344 877.055 l 1344 894.203 1334.852 910.051 1320 918.625
 c 1305.148 927.199 1286.852 927.199 1272 918.625 c 1257.148 910.051 1248
 894.203 1248 877.055 c 1248 240 l 1248 227.27 1242.941 215.062 1233.941
 206.059 c 1224.938 197.059 1212.73 192 1200 192 c 240 192 l 227.27 192 
215.062 197.059 206.059 206.059 c 197.059 215.062 192 227.27 192 240 c 192
 1200 l 192 1212.73 197.059 1224.938 206.059 1233.941 c 215.062 1242.941
 227.27 1248 240 1248 c 877.055 1248 l 889.785 1248 901.996 1253.059 910.996
 1262.059 c 920 1271.062 925.055 1283.27 925.055 1296 c f*
480 528 m 480 515.27 485.059 503.062 494.059 494.059 c 503.062 485.059 
515.27 480 528 480 c 1008 480 l 1025.148 480 1040.996 489.148 1049.57 504
 c 1058.145 518.852 1058.145 537.148 1049.57 552 c 1040.996 566.852 1025.148
 576 1008 576 c 643.871 576 l 1425.984 1358.016 l 1438.125 1370.156 1442.867
 1387.855 1438.422 1404.438 c 1433.98 1421.023 1421.023 1433.98 1404.438
 1438.422 c 1387.855 1442.867 1370.156 1438.125 1358.016 1425.984 c 576 
643.871 l 576 1008 l 576 1025.148 566.852 1040.996 552 1049.57 c 537.148
 1058.145 518.852 1058.145 504 1049.57 c 489.148 1040.996 480 1025.148 480
 1008 c h
480 528 m f*
Q Q
showpage
%%Trailer
%%EOF
