%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:33:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 542x542mm 1536 1536 0 () ()
%%BoundingBox: 0 1 1536 1536
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 542x542mm
%%PageBoundingBox: 0 1 1536 1536
1536 1536 cairo_set_page_size
%%EndPageSetup
q 0 1 1536 1535 rectclip
1 0 0 -1 0 1536 cm q
0 g
810.91 26.496 m 805.562 15.824 796.434 7.531 785.301 3.23 c 774.168 -1.07
 761.832 -1.07 750.699 3.23 c 739.566 7.531 730.438 15.824 725.09 26.496
 c 690.238 96 l 240 96 l 201.809 96 165.184 111.172 138.176 138.176 c 111.172
 165.184 96 201.809 96 240 c 96 960 l 1440 960 l 1440 240 l 1440 201.809
 1424.828 165.184 1397.824 138.176 c 1370.816 111.172 1334.191 96 1296 96
 c 845.664 96 l h
810.91 26.496 m f
48 1056 m 30.852 1056 15.004 1065.148 6.43 1080 c -2.145 1094.852 -2.145
 1113.148 6.43 1128 c 15.004 1142.852 30.852 1152 48 1152 c 322.559 1152
 l 241.438 1476.383 l 241.441 1476.383 l 237.734 1492.855 242.953 1510.066
 255.188 1521.703 c 267.422 1533.34 284.871 1537.691 301.137 1533.164 c 
317.402 1528.641 330.094 1515.898 334.559 1499.617 c 373.441 1344 l 1162.562
 1344 l 1201.441 1499.617 l 1205.906 1515.898 1218.598 1528.641 1234.863
 1533.164 c 1251.129 1537.691 1268.578 1533.34 1280.812 1521.703 c 1293.047
 1510.066 1298.266 1492.855 1294.559 1476.383 c 1213.441 1152 l 1488 1152
 l 1505.148 1152 1520.996 1142.852 1529.57 1128 c 1538.145 1113.148 1538.145
 1094.852 1529.57 1080 c 1520.996 1065.148 1505.148 1056 1488 1056 c h
397.441 1248 m 421.441 1152 l 1114.562 1152 l 1138.562 1248 l h
397.441 1248 m f*
Q Q
showpage
%%Trailer
%%EOF
