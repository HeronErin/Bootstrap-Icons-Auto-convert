%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
95.387 95.977 m 95.457 95.941 l 95.492 96.051 l h
95.688 95.641 m 95.688 95.281 l 95.902 95.402 l h
95.688 95.82 m 96.168 95.555 l 96.289 95.625 l 96.289 96.105 l 95.941 96.297
 l 95.688 96.152 l h
96.277 96.504 m 96.277 96.336 l 96.18 96.457 l h
95.676 96.406 m 95.746 96.406 l 95.676 96.453 l h
95.676 96.406 m f
96 0 m 61.703 0 30.012 18.297 12.863 48 c -4.289 77.703 -4.289 114.297 
12.863 144 c 30.012 173.703 61.703 192 96 192 c 130.297 192 161.988 173.703
 179.137 144 c 196.289 114.297 196.289 77.703 179.137 48 c 161.988 18.297
 130.297 0 96 0 c 59.578 20.281 m 73.973 13.34 90.051 10.664 105.91 12.574
 c 114.574 21.777 120.035 35.219 120.035 50.195 c 120.035 70.066 110.41 
87.25 96.457 95.387 c 111.613 98.266 128.316 85.605 137.328 62.484 c 141.887
 50.785 143.773 38.207 143.23 26.531 c 156.383 35.488 166.734 47.98 173.09
 62.566 c 169.453 74.688 160.539 86.16 147.555 93.645 c 130.273 103.629 
110.477 103.844 96.434 95.719 c 96.531 95.973 l 96.676 95.902 l 96.555 96.023
 l 101.594 110.641 120.938 118.824 145.516 115.055 c 145.512 115.055 l 157.715
 113.16 169.387 108.742 179.785 102.086 c 178.656 117.988 173.004 133.234
 163.488 146.027 c 151.129 149.004 136.668 147.035 123.625 139.5 c 106.43
 129.574 96.359 112.668 96.277 96.539 c 96.133 96.504 l 85.992 108.168 88.574
 129.023 104.125 148.43 c 111.883 158.066 121.57 165.973 132.562 171.648
 c 118.188 178.621 102.113 181.324 86.242 179.449 c 77.52 170.246 72.012
 156.746 72.012 141.695 c 72.012 121.801 81.66 104.602 95.641 96.48 c 95.617
 96.395 l 80.426 93.395 63.625 106.055 54.578 129.273 c 54.574 129.277 l
 50.125 140.785 48.125 153.094 48.695 165.422 c 35.508 156.418 25.148 143.859
 18.816 129.203 c 22.441 117.086 31.355 105.602 44.352 98.09 c 61.609 88.129
 81.359 87.891 95.387 95.977 c 95.445 95.906 l 90.457 81.238 71.09 73.02
 46.465 76.801 c 33.984 78.723 22.105 83.402 12.23 89.762 c 12.227 89.762
 l 13.391 73.82 19.105 58.547 28.691 45.758 c 28.668 45.793 l 40.969 42.879
 55.355 44.855 68.34 52.355 c 85.5 62.266 95.566 79.117 95.699 95.23 c 96
 95.293 l 106.043 83.605 103.441 62.82 87.926 43.465 c 80.188 33.855 70.535
 25.965 59.578 20.293 c h
59.578 20.281 m f*
Q Q
showpage
%%Trailer
%%EOF
