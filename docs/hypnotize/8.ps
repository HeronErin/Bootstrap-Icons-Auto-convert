%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:29 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 2x2mm 6 6 0 () ()
%%BoundingBox: 0 0 6 6
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 2x2mm
%%PageBoundingBox: 0 0 6 6
6 6 cairo_set_page_size
%%EndPageSetup
q 0 0 6 6 rectclip
1 0 0 -1 0 6 cm q
0 g
2.98 3 m 2.984 3 l 2.984 3.004 l h
2.988 2.988 m 2.988 2.977 l 2.996 2.98 l h
2.988 2.992 m 3.004 2.984 l 3.008 2.988 l 3.008 3.004 l 2.996 3.012 l 2.988
 3.008 l h
3.008 3.012 m 3.008 3.008 l 3.004 3.012 l h
2.988 3.008 m 2.992 3.008 l h
2.988 3.008 m f
3 0 m 1.344 0 0 1.344 0 3 c 0 4.656 1.344 6 3 6 c 4.656 6 6 4.656 6 3 c
 6 1.344 4.656 0 3 0 c 1.863 0.633 m 2.312 0.418 2.812 0.332 3.309 0.395
 c 3.578 0.684 3.75 1.102 3.75 1.57 c 3.75 2.191 3.449 2.727 3.012 2.984
 c 3.484 3.074 4.008 2.68 4.289 1.957 c 4.43 1.59 4.492 1.199 4.473 0.832
 c 4.477 0.828 l 4.887 1.109 5.211 1.5 5.41 1.957 c 5.297 2.336 5.02 2.695
 4.613 2.93 c 4.074 3.242 3.453 3.25 3.016 2.996 c 3.02 3.004 l 3.023 3 
l 3.02 3.004 l 3.176 3.461 3.781 3.715 4.551 3.598 c 4.547 3.594 l 4.93 
3.535 5.293 3.398 5.617 3.191 c 5.582 3.688 5.406 4.164 5.109 4.562 c 4.723
 4.656 4.27 4.594 3.863 4.359 c 3.324 4.051 3.012 3.52 3.008 3.016 c 3.004
 3.016 l 2.688 3.379 2.77 4.031 3.254 4.637 c 3.496 4.941 3.801 5.188 4.145
 5.363 c 3.691 5.582 3.191 5.668 2.695 5.609 c 2.422 5.32 2.25 4.898 2.25
 4.43 c 2.25 3.809 2.551 3.27 2.988 3.016 c 2.988 3.012 l 2.512 2.918 1.988
 3.312 1.707 4.039 c 1.566 4.398 1.504 4.785 1.523 5.168 c 1.109 4.887 0.785
 4.496 0.59 4.039 c 0.703 3.66 0.98 3.301 1.387 3.066 c 1.926 2.754 2.543
 2.746 2.98 3 c 2.98 2.996 l 2.828 2.539 2.223 2.281 1.453 2.398 c 1.062
 2.457 0.691 2.605 0.383 2.805 c 0.418 2.309 0.598 1.828 0.898 1.43 c 1.281
 1.34 1.734 1.402 2.137 1.637 c 2.672 1.945 2.988 2.473 2.992 2.977 c 3 
2.977 l 3.312 2.609 3.234 1.961 2.746 1.355 c 2.746 1.359 l 2.508 1.059 
2.203 0.812 1.863 0.633 c h
1.863 0.633 m f*
Q Q
showpage
%%Trailer
%%EOF
