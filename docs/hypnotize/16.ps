%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:30 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 4x4mm 12 12 0 () ()
%%BoundingBox: 0 0 12 12
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 4x4mm
%%PageBoundingBox: 0 0 12 12
12 12 cairo_set_page_size
%%EndPageSetup
q 0 0 12 12 rectclip
1 0 0 -1 0 12 cm q
0 g
5.961 6 m 5.965 5.996 l 5.969 6.004 l h
5.98 5.98 m 5.98 5.957 l 5.992 5.965 l h
5.98 5.992 m 6.012 5.977 l 6.02 5.98 l 6.02 6.012 l 5.996 6.023 l 5.98 
6.016 l h
6.016 6.035 m 6.016 6.023 l 6.008 6.031 l h
5.977 6.027 m 5.98 6.027 l 5.977 6.031 l h
5.977 6.027 m f
6 0 m 2.688 0 0 2.688 0 6 c 0 9.312 2.688 12 6 12 c 9.312 12 12 9.312 12
 6 c 12 2.688 9.312 0 6 0 c 3.723 1.266 m 4.625 0.832 5.629 0.668 6.621 
0.785 c 7.164 1.359 7.504 2.199 7.504 3.137 c 7.504 4.379 6.902 5.453 6.031
 5.961 c 6.977 6.141 8.023 5.352 8.586 3.906 c 8.871 3.176 8.988 2.391 8.953
 1.66 c 9.773 2.219 10.422 3 10.816 3.91 c 10.59 4.668 10.031 5.383 9.219
 5.852 c 8.141 6.477 6.902 6.488 6.023 5.98 c 6.031 5.996 l 6.039 5.992 
l 6.031 6 l 6.348 6.914 7.555 7.426 9.09 7.191 c 9.094 7.191 l 9.855 7.074
 10.586 6.797 11.238 6.379 c 11.168 7.375 10.812 8.328 10.219 9.125 c 9.445
 9.312 8.543 9.188 7.727 8.719 c 6.652 8.098 6.023 7.043 6.016 6.035 c 6.008
 6.031 l 5.375 6.762 5.535 8.062 6.508 9.277 c 6.992 9.879 7.598 10.375 
8.285 10.727 c 7.387 11.164 6.383 11.332 5.391 11.215 c 4.844 10.641 4.5
 9.797 4.5 8.855 c 4.5 7.613 5.102 6.539 5.977 6.031 c 5.977 6.027 l 5.027
 5.84 3.977 6.633 3.41 8.082 c 3.41 8.078 l 3.133 8.801 3.008 9.57 3.043
 10.34 c 2.219 9.777 1.57 8.992 1.176 8.074 c 1.402 7.316 1.961 6.602 2.773
 6.129 c 3.852 5.508 5.086 5.492 5.965 5.996 c 5.969 5.992 l 5.652 5.078
 4.441 4.562 2.902 4.801 c 2.121 4.922 1.379 5.215 0.762 5.609 c 0.766 5.609
 l 0.836 4.613 1.195 3.66 1.793 2.859 c 1.793 2.863 l 2.562 2.68 3.461 2.805
 4.273 3.273 c 5.348 3.895 5.977 4.945 5.984 5.953 c 6 5.957 l 6.629 5.227
 6.465 3.926 5.496 2.719 c 5.496 2.715 l 5.012 2.117 4.41 1.621 3.723 1.27
 c h
3.723 1.266 m f*
Q Q
showpage
%%Trailer
%%EOF
