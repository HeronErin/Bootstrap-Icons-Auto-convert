%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:28:32 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
190.777 191.953 m 190.922 191.883 l 190.992 192.098 l h
191.379 191.281 m 191.379 190.562 l 191.812 190.801 l h
191.379 191.641 m 192.34 191.113 l 192.578 191.258 l 192.578 192.219 l 
191.883 192.602 l 191.379 192.312 l h
192.555 193.008 m 192.555 192.672 l 192.363 192.91 l h
191.355 192.816 m 191.5 192.816 l 191.355 192.914 l h
191.355 192.816 m f
192 0 m 141.078 0 92.242 20.227 56.234 56.234 c 20.227 92.242 0 141.078
 0 192 c 0 242.922 20.227 291.758 56.234 327.766 c 92.242 363.773 141.078
 384 192 384 c 242.922 384 291.758 363.773 327.766 327.766 c 363.773 291.758
 384 242.922 384 192 c 384 141.078 363.773 92.242 327.766 56.234 c 291.758
 20.227 242.922 0 192 0 c 119.16 40.559 m 147.941 26.68 180.098 21.332 211.824
 25.152 c 229.152 43.559 240.07 70.441 240.07 100.391 c 240.07 140.133 220.824
 174.504 192.91 190.773 c 223.223 196.535 256.629 171.215 274.652 124.965
 c 283.773 101.566 287.539 76.414 286.461 53.062 c 286.465 53.062 l 312.766
 70.977 333.469 95.961 346.176 125.137 c 338.902 149.375 321.07 172.32 295.105
 187.297 c 260.547 207.266 220.945 207.695 192.867 191.449 c 193.059 191.953
 l 193.348 191.809 l 193.109 192.047 l 203.188 221.277 241.879 237.648 291.031
 230.109 c 291.023 230.113 l 315.426 226.324 338.773 217.488 359.566 204.168
 c 357.316 235.973 346.004 266.473 326.977 292.055 c 302.258 298.008 273.336
 294.07 247.25 279 c 212.859 259.152 192.723 225.336 192.555 193.078 c 192.266
 193.008 l 171.984 216.336 177.145 258.047 208.25 296.855 c 208.246 296.855
 l 223.766 316.129 243.141 331.949 265.129 343.297 c 236.371 357.238 204.223
 362.652 172.488 358.895 c 155.039 340.488 144.023 313.488 144.023 283.391
 c 144.023 243.598 163.32 209.207 191.281 192.957 c 191.234 192.789 l 160.852
 186.789 127.25 212.109 109.156 258.551 c 109.152 258.551 l 100.254 281.57
 96.246 306.188 97.391 330.84 c 71.02 312.836 50.297 287.719 37.633 258.406
 c 44.879 234.168 62.711 211.199 88.703 196.176 c 123.215 176.254 162.719
 175.777 190.773 191.953 c 190.895 191.809 l 180.91 162.48 142.176 146.039
 92.93 153.602 c 67.969 157.441 44.211 166.801 24.457 179.523 c 24.457 179.52
 l 26.785 147.637 38.211 117.094 57.383 91.512 c 57.336 91.582 l 81.938 
85.75 110.711 89.711 136.68 104.711 c 171 124.535 191.137 158.23 191.398
 190.465 c 192 190.586 l 212.09 167.211 206.879 125.641 175.848 86.93 c 
160.375 67.711 141.07 51.926 119.16 40.586 c h
119.16 40.559 m f*
Q Q
showpage
%%Trailer
%%EOF
