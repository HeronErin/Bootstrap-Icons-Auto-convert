%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:39 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 135x135mm 384 384 0 () ()
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 135x135mm
%%PageBoundingBox: 0 0 384 384
384 384 cairo_set_page_size
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
0 g
48 48 m 48 35.27 53.059 23.062 62.059 14.059 c 71.062 5.059 83.27 0 96 
0 c 288 0 l 300.73 0 312.938 5.059 321.941 14.059 c 330.941 23.062 336 35.27
 336 48 c 336 75.191 l 358.586 87.238 l 366.262 91.332 372.684 97.438 377.16
 104.898 c 381.637 112.359 384 120.898 384 129.602 c 384 336 l 384 348.73
 378.941 360.938 369.941 369.941 c 360.938 378.941 348.73 384 336 384 c 
48 384 l 35.27 384 23.062 378.941 14.059 369.941 c 5.059 360.938 0 348.73
 0 336 c 0 129.602 l 0 120.898 2.363 112.359 6.84 104.898 c 11.316 97.438
 17.738 91.332 25.414 87.238 c 48 75.191 l h
48 102.406 m 36.719 108.406 l 32.875 110.453 29.664 113.508 27.422 117.242
 c 25.18 120.973 24 125.246 24 129.602 c 24 149.211 l 48 163.609 l h
72 178.008 m 162 232.008 l 192 214.008 l 222 232.008 l 312 178.008 l 312
 48 l 312 41.637 309.473 35.531 304.969 31.031 c 300.469 26.527 294.363 
24 288 24 c 96 24 l 89.637 24 83.531 26.527 79.031 31.031 c 74.527 35.531
 72 41.637 72 48 c h
336 163.609 m 360 149.211 l 360 129.602 l 359.996 125.25 358.812 120.984
 356.57 117.254 c 354.332 113.527 351.121 110.477 347.281 108.434 c 336 
102.406 l h
192 71.566 m 231.938 31.414 331.801 101.664 192 192 c 52.199 101.664 152.062
 31.441 192 71.566 c 360 177.191 m 245.328 246 l 360 314.809 l h
359.16 342.312 m 192 241.969 l 24.84 342.289 l 26.219 347.375 29.238 351.863
 33.422 355.062 c 37.609 358.266 42.73 360 48 360 c 336 360 l 341.27 360
 346.391 358.266 350.578 355.062 c 354.762 351.863 357.781 347.375 359.16
 342.289 c h
24 314.785 m 138.672 245.977 l 24 177.191 l 24 314.809 l h
24 314.785 m f*
Q Q
showpage
%%Trailer
%%EOF
