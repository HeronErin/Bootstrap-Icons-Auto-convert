%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:19:38 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 68x68mm 192 192 0 () ()
%%BoundingBox: 0 0 192 192
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 68x68mm
%%PageBoundingBox: 0 0 192 192
192 192 cairo_set_page_size
%%EndPageSetup
q 0 0 192 192 rectclip
1 0 0 -1 0 192 cm q
0 g
24 24 m 24 17.637 26.527 11.531 31.031 7.031 c 35.531 2.527 41.637 0 48
 0 c 144 0 l 150.363 0 156.469 2.527 160.969 7.031 c 165.473 11.531 168 
17.637 168 24 c 168 37.598 l 179.293 43.621 l 183.133 45.668 186.34 48.719
 188.578 52.449 c 190.816 56.18 192 60.449 192 64.801 c 192 168 l 192 174.363
 189.473 180.469 184.969 184.969 c 180.469 189.473 174.363 192 168 192 c
 24 192 l 17.637 192 11.531 189.473 7.031 184.969 c 2.527 180.469 0 174.363
 0 168 c 0 64.801 l 0 60.449 1.184 56.18 3.422 52.449 c 5.66 48.719 8.867
 45.668 12.707 43.621 c 24 37.598 l h
24 51.203 m 18.359 54.203 l 14.445 56.289 12 60.363 12 64.801 c 12 74.605
 l 24 81.805 l h
36 89.004 m 81 116.004 l 96 107.004 l 111 116.004 l 156 89.004 l 156 24
 l 156 20.816 154.734 17.766 152.484 15.516 c 150.234 13.266 147.184 12 
144 12 c 48 12 l 41.371 12 36 17.371 36 24 c h
168 81.805 m 180 74.605 l 180 64.801 l 179.996 60.367 177.551 56.301 173.641
 54.215 c 168 51.203 l h
96 35.785 m 115.969 15.707 165.898 50.832 96 96 c 26.102 50.832 76.031 
15.719 96 35.785 c 180 88.598 m 122.664 123 l 180 157.402 l h
179.578 171.156 m 96 120.984 l 12.422 171.145 l 13.84 176.371 18.582 180
 24 180 c 168 180 l 173.418 180 178.16 176.371 179.578 171.145 c h
12 157.391 m 69.336 122.988 l 12 88.598 l 12 157.406 l h
12 157.391 m f*
Q Q
showpage
%%Trailer
%%EOF
