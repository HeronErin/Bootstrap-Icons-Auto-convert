%!PS-Adobe-3.0
%%Creator: cairo 1.18.0 (https://cairographics.org)
%%CreationDate: Wed Mar  6 19:24:46 2024
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 271x271mm 768 768 0 () ()
%%BoundingBox: 72 48 696 768
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 271x271mm
%%PageBoundingBox: 72 48 696 768
768 768 cairo_set_page_size
%%EndPageSetup
q 72 48 624 720 rectclip
1 0 0 -1 0 768 cm q
0 g
120 48 m 107.27 48 95.062 53.059 86.059 62.059 c 77.059 71.062 72 83.27
 72 96 c 72 144 l 72 156.73 77.059 168.938 86.059 177.941 c 95.062 186.941
 107.27 192 120 192 c 144 192 l 144 624 l 144 649.461 154.113 673.879 172.117
 691.883 c 190.121 709.887 214.539 720 240 720 c 528 720 l 553.461 720 577.879
 709.887 595.883 691.883 c 613.887 673.879 624 649.461 624 624 c 624 192
 l 648 192 l 660.73 192 672.938 186.941 681.941 177.941 c 690.941 168.938
 696 156.73 696 144 c 696 96 l 696 83.27 690.941 71.062 681.941 62.059 c
 672.938 53.059 660.73 48 648 48 c 480 48 l 480 35.27 474.941 23.062 465.941
 14.059 c 456.938 5.059 444.73 0 432 0 c 336 0 l 323.27 0 311.062 5.059 
302.059 14.059 c 293.059 23.062 288 35.27 288 48 c h
264 240 m 270.363 240 276.469 242.527 280.969 247.031 c 285.473 251.531
 288 257.637 288 264 c 288 600 l 288 608.574 283.426 616.496 276 620.785
 c 268.574 625.07 259.426 625.07 252 620.785 c 244.574 616.496 240 608.574
 240 600 c 240 264 l 240 257.637 242.527 251.531 247.031 247.031 c 251.531
 242.527 257.637 240 264 240 c 384 240 m 390.363 240 396.469 242.527 400.969
 247.031 c 405.473 251.531 408 257.637 408 264 c 408 600 l 408 608.574 403.426
 616.496 396 620.785 c 388.574 625.07 379.426 625.07 372 620.785 c 364.574
 616.496 360 608.574 360 600 c 360 264 l 360 257.637 362.527 251.531 367.031
 247.031 c 371.531 242.527 377.637 240 384 240 c 528 264 m 528 600 l 528
 608.574 523.426 616.496 516 620.785 c 508.574 625.07 499.426 625.07 492
 620.785 c 484.574 616.496 480 608.574 480 600 c 480 264 l 480 255.426 484.574
 247.504 492 243.215 c 499.426 238.93 508.574 238.93 516 243.215 c 523.426
 247.504 528 255.426 528 264 c f
Q Q
showpage
%%Trailer
%%EOF
